{"version":3,"file":"pre_activation.js","sourceRoot":"","sources":["../../../../packages/router/src/pre_activation.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '@angular/core';\nimport {Observable, from, of } from 'rxjs';\nimport {concatMap, every, first, last, map, mergeMap, reduce} from 'rxjs/operators';\n\nimport {LoadedRouterConfig, ResolveData, RunGuardsAndResolvers} from './config';\nimport {ActivationStart, ChildActivationStart, Event} from './events';\nimport {ChildrenOutletContexts, OutletContext} from './router_outlet_context';\nimport {ActivatedRouteSnapshot, RouterStateSnapshot, equalParamsAndUrlSegments, inheritedParamsDataResolve} from './router_state';\nimport {andObservables, forEach, shallowEqual, wrapIntoObservable} from './utils/collection';\nimport {TreeNode, nodeChildrenAsMap} from './utils/tree';\n\nclass CanActivate {\n  readonly route: ActivatedRouteSnapshot;\n  constructor(public path: ActivatedRouteSnapshot[]) {\n    this.route = this.path[this.path.length - 1];\n  }\n}\n\nclass CanDeactivate {\n  constructor(public component: Object|null, public route: ActivatedRouteSnapshot) {}\n}\n\n/**\n * This class bundles the actions involved in preactivation of a route.\n */\nexport class PreActivation {\n  private canActivateChecks: CanActivate[] = [];\n  private canDeactivateChecks: CanDeactivate[] = [];\n\n  constructor(\n      private future: RouterStateSnapshot, private curr: RouterStateSnapshot,\n      private moduleInjector: Injector, private forwardEvent?: (evt: Event) => void) {}\n\n  initialize(parentContexts: ChildrenOutletContexts): void {\n    const futureRoot = this.future._root;\n    const currRoot = this.curr ? this.curr._root : null;\n    this.setupChildRouteGuards(futureRoot, currRoot, parentContexts, [futureRoot.value]);\n  }\n\n  checkGuards(): Observable<boolean> {\n    if (!this.isDeactivating() && !this.isActivating()) {\n      return of (true);\n    }\n    const canDeactivate$ = this.runCanDeactivateChecks();\n    return canDeactivate$.pipe(mergeMap(\n        (canDeactivate: boolean) => canDeactivate ? this.runCanActivateChecks() : of (false)));\n  }\n\n  resolveData(paramsInheritanceStrategy: 'emptyOnly'|'always'): Observable<any> {\n    if (!this.isActivating()) return of (null);\n    return from(this.canActivateChecks)\n        .pipe(\n            concatMap(\n                (check: CanActivate) => this.runResolve(check.route, paramsInheritanceStrategy)),\n            reduce((_: any, __: any) => _));\n  }\n\n  isDeactivating(): boolean { return this.canDeactivateChecks.length !== 0; }\n\n  isActivating(): boolean { return this.canActivateChecks.length !== 0; }\n\n\n  /**\n   * Iterates over child routes and calls recursive `setupRouteGuards` to get `this` instance in\n   * proper state to run `checkGuards()` method.\n   */\n  private setupChildRouteGuards(\n      futureNode: TreeNode<ActivatedRouteSnapshot>, currNode: TreeNode<ActivatedRouteSnapshot>|null,\n      contexts: ChildrenOutletContexts|null, futurePath: ActivatedRouteSnapshot[]): void {\n    const prevChildren = nodeChildrenAsMap(currNode);\n\n    // Process the children of the future route\n    futureNode.children.forEach(c => {\n      this.setupRouteGuards(\n          c, prevChildren[c.value.outlet], contexts, futurePath.concat([c.value]));\n      delete prevChildren[c.value.outlet];\n    });\n\n    // Process any children left from the current route (not active for the future route)\n    forEach(\n        prevChildren, (v: TreeNode<ActivatedRouteSnapshot>, k: string) =>\n                          this.deactivateRouteAndItsChildren(v, contexts !.getContext(k)));\n  }\n\n  /**\n   * Iterates over child routes and calls recursive `setupRouteGuards` to get `this` instance in\n   * proper state to run `checkGuards()` method.\n   */\n  private setupRouteGuards(\n      futureNode: TreeNode<ActivatedRouteSnapshot>, currNode: TreeNode<ActivatedRouteSnapshot>,\n      parentContexts: ChildrenOutletContexts|null, futurePath: ActivatedRouteSnapshot[]): void {\n    const future = futureNode.value;\n    const curr = currNode ? currNode.value : null;\n    const context = parentContexts ? parentContexts.getContext(futureNode.value.outlet) : null;\n\n    // reusing the node\n    if (curr && future.routeConfig === curr.routeConfig) {\n      const shouldRunGuardsAndResolvers = this.shouldRunGuardsAndResolvers(\n          curr, future, future.routeConfig !.runGuardsAndResolvers);\n      if (shouldRunGuardsAndResolvers) {\n        this.canActivateChecks.push(new CanActivate(futurePath));\n      } else {\n        // we need to set the data\n        future.data = curr.data;\n        future._resolvedData = curr._resolvedData;\n      }\n\n      // If we have a component, we need to go through an outlet.\n      if (future.component) {\n        this.setupChildRouteGuards(\n            futureNode, currNode, context ? context.children : null, futurePath);\n\n        // if we have a componentless route, we recurse but keep the same outlet map.\n      } else {\n        this.setupChildRouteGuards(futureNode, currNode, parentContexts, futurePath);\n      }\n\n      if (shouldRunGuardsAndResolvers) {\n        const outlet = context !.outlet !;\n        this.canDeactivateChecks.push(new CanDeactivate(outlet.component, curr));\n      }\n    } else {\n      if (curr) {\n        this.deactivateRouteAndItsChildren(currNode, context);\n      }\n\n      this.canActivateChecks.push(new CanActivate(futurePath));\n      // If we have a component, we need to go through an outlet.\n      if (future.component) {\n        this.setupChildRouteGuards(futureNode, null, context ? context.children : null, futurePath);\n\n        // if we have a componentless route, we recurse but keep the same outlet map.\n      } else {\n        this.setupChildRouteGuards(futureNode, null, parentContexts, futurePath);\n      }\n    }\n  }\n\n  private shouldRunGuardsAndResolvers(\n      curr: ActivatedRouteSnapshot, future: ActivatedRouteSnapshot,\n      mode: RunGuardsAndResolvers|undefined): boolean {\n    switch (mode) {\n      case 'always':\n        return true;\n\n      case 'paramsOrQueryParamsChange':\n        return !equalParamsAndUrlSegments(curr, future) ||\n            !shallowEqual(curr.queryParams, future.queryParams);\n\n      case 'paramsChange':\n      default:\n        return !equalParamsAndUrlSegments(curr, future);\n    }\n  }\n\n  private deactivateRouteAndItsChildren(\n      route: TreeNode<ActivatedRouteSnapshot>, context: OutletContext|null): void {\n    const children = nodeChildrenAsMap(route);\n    const r = route.value;\n\n    forEach(children, (node: TreeNode<ActivatedRouteSnapshot>, childName: string) => {\n      if (!r.component) {\n        this.deactivateRouteAndItsChildren(node, context);\n      } else if (context) {\n        this.deactivateRouteAndItsChildren(node, context.children.getContext(childName));\n      } else {\n        this.deactivateRouteAndItsChildren(node, null);\n      }\n    });\n\n    if (!r.component) {\n      this.canDeactivateChecks.push(new CanDeactivate(null, r));\n    } else if (context && context.outlet && context.outlet.isActivated) {\n      this.canDeactivateChecks.push(new CanDeactivate(context.outlet.component, r));\n    } else {\n      this.canDeactivateChecks.push(new CanDeactivate(null, r));\n    }\n  }\n\n  private runCanDeactivateChecks(): Observable<boolean> {\n    return from(this.canDeactivateChecks)\n        .pipe(\n            mergeMap((check: CanDeactivate) => this.runCanDeactivate(check.component, check.route)),\n            every((result: boolean) => result === true));\n  }\n\n  private runCanActivateChecks(): Observable<boolean> {\n    return from(this.canActivateChecks)\n        .pipe(\n            concatMap((check: CanActivate) => andObservables(from([\n                        this.fireChildActivationStart(check.route.parent),\n                        this.fireActivationStart(check.route), this.runCanActivateChild(check.path),\n                        this.runCanActivate(check.route)\n                      ]))),\n            every((result: boolean) => result === true));\n    // this.fireChildActivationStart(check.path),\n  }\n\n  /**\n   * This should fire off `ActivationStart` events for each route being activated at this\n   * level.\n   * In other words, if you're activating `a` and `b` below, `path` will contain the\n   * `ActivatedRouteSnapshot`s for both and we will fire `ActivationStart` for both. Always\n   * return\n   * `true` so checks continue to run.\n   */\n  private fireActivationStart(snapshot: ActivatedRouteSnapshot|null): Observable<boolean> {\n    if (snapshot !== null && this.forwardEvent) {\n      this.forwardEvent(new ActivationStart(snapshot));\n    }\n    return of (true);\n  }\n\n  /**\n   * This should fire off `ChildActivationStart` events for each route being activated at this\n   * level.\n   * In other words, if you're activating `a` and `b` below, `path` will contain the\n   * `ActivatedRouteSnapshot`s for both and we will fire `ChildActivationStart` for both. Always\n   * return\n   * `true` so checks continue to run.\n   */\n  private fireChildActivationStart(snapshot: ActivatedRouteSnapshot|null): Observable<boolean> {\n    if (snapshot !== null && this.forwardEvent) {\n      this.forwardEvent(new ChildActivationStart(snapshot));\n    }\n    return of (true);\n  }\n\n  private runCanActivate(future: ActivatedRouteSnapshot): Observable<boolean> {\n    const canActivate = future.routeConfig ? future.routeConfig.canActivate : null;\n    if (!canActivate || canActivate.length === 0) return of (true);\n    const obs = from(canActivate).pipe(map((c: any) => {\n      const guard = this.getToken(c, future);\n      let observable: Observable<boolean>;\n      if (guard.canActivate) {\n        observable = wrapIntoObservable(guard.canActivate(future, this.future));\n      } else {\n        observable = wrapIntoObservable(guard(future, this.future));\n      }\n      return observable.pipe(first());\n    }));\n    return andObservables(obs);\n  }\n\n  private runCanActivateChild(path: ActivatedRouteSnapshot[]): Observable<boolean> {\n    const future = path[path.length - 1];\n\n    const canActivateChildGuards = path.slice(0, path.length - 1)\n                                       .reverse()\n                                       .map(p => this.extractCanActivateChild(p))\n                                       .filter(_ => _ !== null);\n\n    return andObservables(from(canActivateChildGuards).pipe(map((d: any) => {\n      const obs = from(d.guards).pipe(map((c: any) => {\n        const guard = this.getToken(c, d.node);\n        let observable: Observable<boolean>;\n        if (guard.canActivateChild) {\n          observable = wrapIntoObservable(guard.canActivateChild(future, this.future));\n        } else {\n          observable = wrapIntoObservable(guard(future, this.future));\n        }\n        return observable.pipe(first());\n      }));\n      return andObservables(obs);\n    })));\n  }\n\n  private extractCanActivateChild(p: ActivatedRouteSnapshot):\n      {node: ActivatedRouteSnapshot, guards: any[]}|null {\n    const canActivateChild = p.routeConfig ? p.routeConfig.canActivateChild : null;\n    if (!canActivateChild || canActivateChild.length === 0) return null;\n    return {node: p, guards: canActivateChild};\n  }\n\n  private runCanDeactivate(component: Object|null, curr: ActivatedRouteSnapshot):\n      Observable<boolean> {\n    const canDeactivate = curr && curr.routeConfig ? curr.routeConfig.canDeactivate : null;\n    if (!canDeactivate || canDeactivate.length === 0) return of (true);\n    const canDeactivate$ = from(canDeactivate).pipe(mergeMap((c: any) => {\n      const guard = this.getToken(c, curr);\n      let observable: Observable<boolean>;\n      if (guard.canDeactivate) {\n        observable =\n            wrapIntoObservable(guard.canDeactivate(component, curr, this.curr, this.future));\n      } else {\n        observable = wrapIntoObservable(guard(component, curr, this.curr, this.future));\n      }\n      return observable.pipe(first());\n    }));\n    return canDeactivate$.pipe(every((result: any) => result === true));\n  }\n\n  private runResolve(\n      future: ActivatedRouteSnapshot,\n      paramsInheritanceStrategy: 'emptyOnly'|'always'): Observable<any> {\n    const resolve = future._resolve;\n    return this.resolveNode(resolve, future).pipe(map((resolvedData: any): any => {\n      future._resolvedData = resolvedData;\n      future.data = {...future.data,\n                     ...inheritedParamsDataResolve(future, paramsInheritanceStrategy).resolve};\n      return null;\n    }));\n  }\n\n  private resolveNode(resolve: ResolveData, future: ActivatedRouteSnapshot): Observable<any> {\n    const keys = Object.keys(resolve);\n    if (keys.length === 0) {\n      return of ({});\n    }\n    if (keys.length === 1) {\n      const key = keys[0];\n      return this.getResolver(resolve[key], future).pipe(map((value: any) => {\n        return {[key]: value};\n      }));\n    }\n    const data: {[k: string]: any} = {};\n    const runningResolvers$ = from(keys).pipe(mergeMap((key: string) => {\n      return this.getResolver(resolve[key], future).pipe(map((value: any) => {\n        data[key] = value;\n        return value;\n      }));\n    }));\n    return runningResolvers$.pipe(last(), map(() => data));\n  }\n\n  private getResolver(injectionToken: any, future: ActivatedRouteSnapshot): Observable<any> {\n    const resolver = this.getToken(injectionToken, future);\n    return resolver.resolve ? wrapIntoObservable(resolver.resolve(future, this.future)) :\n                              wrapIntoObservable(resolver(future, this.future));\n  }\n\n  private getToken(token: any, snapshot: ActivatedRouteSnapshot): any {\n    const config = closestLoadedConfig(snapshot);\n    const injector = config ? config.module.injector : this.moduleInjector;\n    return injector.get(token);\n  }\n}\n\n\nfunction closestLoadedConfig(snapshot: ActivatedRouteSnapshot): LoadedRouterConfig|null {\n  if (!snapshot) return null;\n\n  for (let s = snapshot.parent; s; s = s.parent) {\n    const route = s.routeConfig;\n    if (route && route._loadedConfig) return route._loadedConfig;\n  }\n\n  return null;\n}\n"]}