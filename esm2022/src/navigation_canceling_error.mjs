/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
import { NavigationCancellationCode } from './events';
import { isUrlTree } from './url_tree';
export const NAVIGATION_CANCELING_ERROR = 'ngNavigationCancelingError';
export function redirectingNavigationError(urlSerializer, redirect) {
    const { redirectTo, navigationBehaviorOptions } = isUrlTree(redirect) ? { redirectTo: redirect, navigationBehaviorOptions: undefined } : redirect;
    const error = navigationCancelingError(ngDevMode && `Redirecting to "${urlSerializer.serialize(redirectTo)}"`, NavigationCancellationCode.Redirect, redirect);
    error.url = redirectTo;
    error.navigationBehaviorOptions = navigationBehaviorOptions;
    return error;
}
export function navigationCancelingError(message, code, redirectUrl) {
    const error = new Error('NavigationCancelingError: ' + (message || ''));
    error[NAVIGATION_CANCELING_ERROR] = true;
    error.cancellationCode = code;
    if (redirectUrl) {
        error.url = redirectUrl;
    }
    return error;
}
export function isRedirectingNavigationCancelingError(error) {
    return isNavigationCancelingError(error) && isUrlTree(error.url);
}
export function isNavigationCancelingError(error) {
    return error && error[NAVIGATION_CANCELING_ERROR];
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF2aWdhdGlvbl9jYW5jZWxpbmdfZXJyb3IuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wYWNrYWdlcy9yb3V0ZXIvc3JjL25hdmlnYXRpb25fY2FuY2VsaW5nX2Vycm9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7R0FNRztBQUVILE9BQU8sRUFBQywwQkFBMEIsRUFBQyxNQUFNLFVBQVUsQ0FBQztBQUVwRCxPQUFPLEVBQUMsU0FBUyxFQUF5QixNQUFNLFlBQVksQ0FBQztBQUU3RCxNQUFNLENBQUMsTUFBTSwwQkFBMEIsR0FBRyw0QkFBNEIsQ0FBQztBQVV2RSxNQUFNLFVBQVUsMEJBQTBCLENBQ3RDLGFBQTRCLEVBQUUsUUFBaUI7SUFDakQsTUFBTSxFQUFDLFVBQVUsRUFBRSx5QkFBeUIsRUFBQyxHQUN6QyxTQUFTLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUMsVUFBVSxFQUFFLFFBQVEsRUFBRSx5QkFBeUIsRUFBRSxTQUFTLEVBQUMsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDO0lBQ2xHLE1BQU0sS0FBSyxHQUNQLHdCQUF3QixDQUNwQixTQUFTLElBQUksbUJBQW1CLGFBQWEsQ0FBQyxTQUFTLENBQUMsVUFBVSxDQUFDLEdBQUcsRUFDdEUsMEJBQTBCLENBQUMsUUFBUSxFQUFFLFFBQVEsQ0FBd0MsQ0FBQztJQUM5RixLQUFLLENBQUMsR0FBRyxHQUFHLFVBQVUsQ0FBQztJQUN2QixLQUFLLENBQUMseUJBQXlCLEdBQUcseUJBQXlCLENBQUM7SUFDNUQsT0FBTyxLQUFLLENBQUM7QUFDZixDQUFDO0FBRUQsTUFBTSxVQUFVLHdCQUF3QixDQUNwQyxPQUEwQixFQUFFLElBQWdDLEVBQUUsV0FBcUI7SUFDckYsTUFBTSxLQUFLLEdBQ1AsSUFBSSxLQUFLLENBQUMsNEJBQTRCLEdBQUcsQ0FBQyxPQUFPLElBQUksRUFBRSxDQUFDLENBQTZCLENBQUM7SUFDMUYsS0FBSyxDQUFDLDBCQUEwQixDQUFDLEdBQUcsSUFBSSxDQUFDO0lBQ3pDLEtBQUssQ0FBQyxnQkFBZ0IsR0FBRyxJQUFJLENBQUM7SUFDOUIsSUFBSSxXQUFXLEVBQUU7UUFDZCxLQUE2QyxDQUFDLEdBQUcsR0FBRyxXQUFXLENBQUM7S0FDbEU7SUFDRCxPQUFPLEtBQUssQ0FBQztBQUNmLENBQUM7QUFFRCxNQUFNLFVBQVUscUNBQXFDLENBQ2pELEtBQ21DO0lBQ3JDLE9BQU8sMEJBQTBCLENBQUMsS0FBSyxDQUFDLElBQUksU0FBUyxDQUFFLEtBQWEsQ0FBQyxHQUFHLENBQUMsQ0FBQztBQUM1RSxDQUFDO0FBQ0QsTUFBTSxVQUFVLDBCQUEwQixDQUFDLEtBQWM7SUFDdkQsT0FBTyxLQUFLLElBQUssS0FBYSxDQUFDLDBCQUEwQixDQUFDLENBQUM7QUFDN0QsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBHb29nbGUgTExDIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9hbmd1bGFyLmlvL2xpY2Vuc2VcbiAqL1xuXG5pbXBvcnQge05hdmlnYXRpb25DYW5jZWxsYXRpb25Db2RlfSBmcm9tICcuL2V2ZW50cyc7XG5pbXBvcnQge05hdmlnYXRpb25CZWhhdmlvck9wdGlvbnN9IGZyb20gJy4vbW9kZWxzJztcbmltcG9ydCB7aXNVcmxUcmVlLCBVcmxTZXJpYWxpemVyLCBVcmxUcmVlfSBmcm9tICcuL3VybF90cmVlJztcblxuZXhwb3J0IGNvbnN0IE5BVklHQVRJT05fQ0FOQ0VMSU5HX0VSUk9SID0gJ25nTmF2aWdhdGlvbkNhbmNlbGluZ0Vycm9yJztcblxuZXhwb3J0IHR5cGUgTmF2aWdhdGlvbkNhbmNlbGluZ0Vycm9yID1cbiAgICBFcnJvciZ7W05BVklHQVRJT05fQ0FOQ0VMSU5HX0VSUk9SXTogdHJ1ZSwgY2FuY2VsbGF0aW9uQ29kZTogTmF2aWdhdGlvbkNhbmNlbGxhdGlvbkNvZGV9O1xuZXhwb3J0IHR5cGUgUmVkaXJlY3RpbmdOYXZpZ2F0aW9uQ2FuY2VsaW5nRXJyb3IgPSBOYXZpZ2F0aW9uQ2FuY2VsaW5nRXJyb3Ime1xuICB1cmw6IFVybFRyZWU7XG4gIG5hdmlnYXRpb25CZWhhdmlvck9wdGlvbnM/OiBOYXZpZ2F0aW9uQmVoYXZpb3JPcHRpb25zO1xuICBjYW5jZWxsYXRpb25Db2RlOiBOYXZpZ2F0aW9uQ2FuY2VsbGF0aW9uQ29kZS5SZWRpcmVjdDtcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiByZWRpcmVjdGluZ05hdmlnYXRpb25FcnJvcihcbiAgICB1cmxTZXJpYWxpemVyOiBVcmxTZXJpYWxpemVyLCByZWRpcmVjdDogVXJsVHJlZSk6IFJlZGlyZWN0aW5nTmF2aWdhdGlvbkNhbmNlbGluZ0Vycm9yIHtcbiAgY29uc3Qge3JlZGlyZWN0VG8sIG5hdmlnYXRpb25CZWhhdmlvck9wdGlvbnN9ID1cbiAgICAgIGlzVXJsVHJlZShyZWRpcmVjdCkgPyB7cmVkaXJlY3RUbzogcmVkaXJlY3QsIG5hdmlnYXRpb25CZWhhdmlvck9wdGlvbnM6IHVuZGVmaW5lZH0gOiByZWRpcmVjdDtcbiAgY29uc3QgZXJyb3IgPVxuICAgICAgbmF2aWdhdGlvbkNhbmNlbGluZ0Vycm9yKFxuICAgICAgICAgIG5nRGV2TW9kZSAmJiBgUmVkaXJlY3RpbmcgdG8gXCIke3VybFNlcmlhbGl6ZXIuc2VyaWFsaXplKHJlZGlyZWN0VG8pfVwiYCxcbiAgICAgICAgICBOYXZpZ2F0aW9uQ2FuY2VsbGF0aW9uQ29kZS5SZWRpcmVjdCwgcmVkaXJlY3QpIGFzIFJlZGlyZWN0aW5nTmF2aWdhdGlvbkNhbmNlbGluZ0Vycm9yO1xuICBlcnJvci51cmwgPSByZWRpcmVjdFRvO1xuICBlcnJvci5uYXZpZ2F0aW9uQmVoYXZpb3JPcHRpb25zID0gbmF2aWdhdGlvbkJlaGF2aW9yT3B0aW9ucztcbiAgcmV0dXJuIGVycm9yO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gbmF2aWdhdGlvbkNhbmNlbGluZ0Vycm9yKFxuICAgIG1lc3NhZ2U6IHN0cmluZ3xudWxsfGZhbHNlLCBjb2RlOiBOYXZpZ2F0aW9uQ2FuY2VsbGF0aW9uQ29kZSwgcmVkaXJlY3RVcmw/OiBVcmxUcmVlKSB7XG4gIGNvbnN0IGVycm9yID1cbiAgICAgIG5ldyBFcnJvcignTmF2aWdhdGlvbkNhbmNlbGluZ0Vycm9yOiAnICsgKG1lc3NhZ2UgfHwgJycpKSBhcyBOYXZpZ2F0aW9uQ2FuY2VsaW5nRXJyb3I7XG4gIGVycm9yW05BVklHQVRJT05fQ0FOQ0VMSU5HX0VSUk9SXSA9IHRydWU7XG4gIGVycm9yLmNhbmNlbGxhdGlvbkNvZGUgPSBjb2RlO1xuICBpZiAocmVkaXJlY3RVcmwpIHtcbiAgICAoZXJyb3IgYXMgUmVkaXJlY3RpbmdOYXZpZ2F0aW9uQ2FuY2VsaW5nRXJyb3IpLnVybCA9IHJlZGlyZWN0VXJsO1xuICB9XG4gIHJldHVybiBlcnJvcjtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzUmVkaXJlY3RpbmdOYXZpZ2F0aW9uQ2FuY2VsaW5nRXJyb3IoXG4gICAgZXJyb3I6IHVua25vd258XG4gICAgUmVkaXJlY3RpbmdOYXZpZ2F0aW9uQ2FuY2VsaW5nRXJyb3IpOiBlcnJvciBpcyBSZWRpcmVjdGluZ05hdmlnYXRpb25DYW5jZWxpbmdFcnJvciB7XG4gIHJldHVybiBpc05hdmlnYXRpb25DYW5jZWxpbmdFcnJvcihlcnJvcikgJiYgaXNVcmxUcmVlKChlcnJvciBhcyBhbnkpLnVybCk7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNOYXZpZ2F0aW9uQ2FuY2VsaW5nRXJyb3IoZXJyb3I6IHVua25vd24pOiBlcnJvciBpcyBOYXZpZ2F0aW9uQ2FuY2VsaW5nRXJyb3Ige1xuICByZXR1cm4gZXJyb3IgJiYgKGVycm9yIGFzIGFueSlbTkFWSUdBVElPTl9DQU5DRUxJTkdfRVJST1JdO1xufVxuIl19