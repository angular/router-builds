{"version":3,"file":"router_link.js","sourceRoot":"","sources":["../../../../../../packages/router/src/directives/router_link.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {LocationStrategy} from '@angular/common';\nimport {Attribute, Directive, ElementRef, HostBinding, HostListener, Input, OnChanges, OnDestroy, Renderer2, isDevMode} from '@angular/core';\nimport {Subscription} from 'rxjs';\n\nimport {QueryParamsHandling} from '../config';\nimport {NavigationEnd, RouterEvent} from '../events';\nimport {Router} from '../router';\nimport {ActivatedRoute} from '../router_state';\nimport {UrlTree} from '../url_tree';\n\n\n/**\n * @description\n *\n * Lets you link to specific routes in your app.\n *\n * Consider the following route configuration:\n * `[{ path: 'user/:name', component: UserCmp }]`.\n * When linking to this `user/:name` route, you use the `RouterLink` directive.\n *\n * If the link is static, you can use the directive as follows:\n * `<a routerLink=\"/user/bob\">link to user component</a>`\n *\n * If you use dynamic values to generate the link, you can pass an array of path\n * segments, followed by the params for each segment.\n *\n * For instance `['/team', teamId, 'user', userName, {details: true}]`\n * means that we want to generate a link to `/team/11/user/bob;details=true`.\n *\n * Multiple static segments can be merged into one\n * (e.g., `['/team/11/user', userName, {details: true}]`).\n *\n * The first segment name can be prepended with `/`, `./`, or `../`:\n * * If the first segment begins with `/`, the router will look up the route from the root of the\n *   app.\n * * If the first segment begins with `./`, or doesn't begin with a slash, the router will\n *   instead look in the children of the current activated route.\n * * And if the first segment begins with `../`, the router will go up one level.\n *\n * You can set query params and fragment as follows:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" fragment=\"education\">\n *   link to user component\n * </a>\n * ```\n * RouterLink will use these to generate this link: `/user/bob#education?debug=true`.\n *\n * (Deprecated in v4.0.0 use `queryParamsHandling` instead) You can also tell the\n * directive to preserve the current query params and fragment:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" preserveQueryParams preserveFragment>\n *   link to user component\n * </a>\n * ```\n *\n * You can tell the directive to how to handle queryParams, available options are:\n *  - `'merge'`: merge the queryParams into the current queryParams\n *  - `'preserve'`: preserve the current queryParams\n *  - default/`''`: use the queryParams only\n *\n * Same options for {@link NavigationExtras#queryParamsHandling\n * NavigationExtras#queryParamsHandling}.\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" queryParamsHandling=\"merge\">\n *   link to user component\n * </a>\n * ```\n *\n * The router link directive always treats the provided input as a delta to the current url.\n *\n * For instance, if the current url is `/user/(box//aux:team)`.\n *\n * Then the following link `<a [routerLink]=\"['/user/jim']\">Jim</a>` will generate the link\n * `/user/(jim//aux:team)`.\n *\n * See {@link Router#createUrlTree createUrlTree} for more information.\n *\n * @ngModule RouterModule\n *\n *\n */\n@Directive({selector: ':not(a)[routerLink]'})\nexport class RouterLink {\n  @Input() queryParams: {[k: string]: any};\n  @Input() fragment: string;\n  @Input() queryParamsHandling: QueryParamsHandling;\n  @Input() preserveFragment: boolean;\n  @Input() skipLocationChange: boolean;\n  @Input() replaceUrl: boolean;\n  private commands: any[] = [];\n  private preserve: boolean;\n\n  constructor(\n      private router: Router, private route: ActivatedRoute,\n      @Attribute('tabindex') tabIndex: string, renderer: Renderer2, el: ElementRef) {\n    if (tabIndex == null) {\n      renderer.setAttribute(el.nativeElement, 'tabindex', '0');\n    }\n  }\n\n  @Input()\n  set routerLink(commands: any[]|string) {\n    if (commands != null) {\n      this.commands = Array.isArray(commands) ? commands : [commands];\n    } else {\n      this.commands = [];\n    }\n  }\n\n  /**\n   * @deprecated 4.0.0 use `queryParamsHandling` instead.\n   */\n  @Input()\n  set preserveQueryParams(value: boolean) {\n    if (isDevMode() && <any>console && <any>console.warn) {\n      console.warn('preserveQueryParams is deprecated!, use queryParamsHandling instead.');\n    }\n    this.preserve = value;\n  }\n\n  @HostListener('click')\n  onClick(): boolean {\n    const extras = {\n      skipLocationChange: attrBoolValue(this.skipLocationChange),\n      replaceUrl: attrBoolValue(this.replaceUrl),\n    };\n    this.router.navigateByUrl(this.urlTree, extras);\n    return true;\n  }\n\n  get urlTree(): UrlTree {\n    return this.router.createUrlTree(this.commands, {\n      relativeTo: this.route,\n      queryParams: this.queryParams,\n      fragment: this.fragment,\n      preserveQueryParams: attrBoolValue(this.preserve),\n      queryParamsHandling: this.queryParamsHandling,\n      preserveFragment: attrBoolValue(this.preserveFragment),\n    });\n  }\n}\n\n/**\n * @description\n *\n * Lets you link to specific routes in your app.\n *\n * See `RouterLink` for more information.\n *\n * @ngModule RouterModule\n *\n *\n */\n@Directive({selector: 'a[routerLink]'})\nexport class RouterLinkWithHref implements OnChanges, OnDestroy {\n  @HostBinding('attr.target') @Input() target: string;\n  @Input() queryParams: {[k: string]: any};\n  @Input() fragment: string;\n  @Input() queryParamsHandling: QueryParamsHandling;\n  @Input() preserveFragment: boolean;\n  @Input() skipLocationChange: boolean;\n  @Input() replaceUrl: boolean;\n  private commands: any[] = [];\n  private subscription: Subscription;\n  private preserve: boolean;\n\n  // the url displayed on the anchor element.\n  @HostBinding() href: string;\n\n  constructor(\n      private router: Router, private route: ActivatedRoute,\n      private locationStrategy: LocationStrategy) {\n    this.subscription = router.events.subscribe((s: RouterEvent) => {\n      if (s instanceof NavigationEnd) {\n        this.updateTargetUrlAndHref();\n      }\n    });\n  }\n\n  @Input()\n  set routerLink(commands: any[]|string) {\n    if (commands != null) {\n      this.commands = Array.isArray(commands) ? commands : [commands];\n    } else {\n      this.commands = [];\n    }\n  }\n\n  @Input()\n  set preserveQueryParams(value: boolean) {\n    if (isDevMode() && <any>console && <any>console.warn) {\n      console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n    }\n    this.preserve = value;\n  }\n\n  ngOnChanges(changes: {}): any { this.updateTargetUrlAndHref(); }\n  ngOnDestroy(): any { this.subscription.unsubscribe(); }\n\n  @HostListener('click', ['$event.button', '$event.ctrlKey', '$event.metaKey', '$event.shiftKey'])\n  onClick(button: number, ctrlKey: boolean, metaKey: boolean, shiftKey: boolean): boolean {\n    if (button !== 0 || ctrlKey || metaKey || shiftKey) {\n      return true;\n    }\n\n    if (typeof this.target === 'string' && this.target != '_self') {\n      return true;\n    }\n\n    const extras = {\n      skipLocationChange: attrBoolValue(this.skipLocationChange),\n      replaceUrl: attrBoolValue(this.replaceUrl),\n    };\n    this.router.navigateByUrl(this.urlTree, extras);\n    return false;\n  }\n\n  private updateTargetUrlAndHref(): void {\n    this.href = this.locationStrategy.prepareExternalUrl(this.router.serializeUrl(this.urlTree));\n  }\n\n  get urlTree(): UrlTree {\n    return this.router.createUrlTree(this.commands, {\n      relativeTo: this.route,\n      queryParams: this.queryParams,\n      fragment: this.fragment,\n      preserveQueryParams: attrBoolValue(this.preserve),\n      queryParamsHandling: this.queryParamsHandling,\n      preserveFragment: attrBoolValue(this.preserveFragment),\n    });\n  }\n}\n\nfunction attrBoolValue(s: any): boolean {\n  return s === '' || !!s;\n}\n"]}