{"version":3,"file":"index.js","sources":["../../../../packages/router/esm5/testing/src/router_testing_module.js","../../../../packages/router/esm5/testing/src/testing.js","../../../../packages/router/esm5/testing/public_api.js","../../../../packages/router/esm5/testing/index.js"],"sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Location, LocationStrategy } from '@angular/common';\nimport { MockLocationStrategy, SpyLocation } from '@angular/common/testing';\nimport { Compiler, Injectable, Injector, NgModule, NgModuleFactoryLoader, Optional } from '@angular/core';\nimport { ChildrenOutletContexts, NoPreloading, PreloadingStrategy, ROUTES, Router, RouterModule, UrlHandlingStrategy, UrlSerializer, provideRoutes, ɵROUTER_PROVIDERS as ROUTER_PROVIDERS, ɵflatten as flatten } from '@angular/router';\n/**\n * \\@whatItDoes Allows to simulate the loading of ng modules in tests.\n *\n * \\@howToUse\n *\n * ```\n * const loader = TestBed.get(NgModuleFactoryLoader);\n *\n * \\@Component({template: 'lazy-loaded'})\n * class LazyLoadedComponent {}\n * \\@NgModule({\n *   declarations: [LazyLoadedComponent],\n *   imports: [RouterModule.forChild([{path: 'loaded', component: LazyLoadedComponent}])]\n * })\n *\n * class LoadedModule {}\n *\n * // sets up stubbedModules\n * loader.stubbedModules = {lazyModule: LoadedModule};\n *\n * router.resetConfig([\n *   {path: 'lazy', loadChildren: 'lazyModule'},\n * ]);\n *\n * router.navigateByUrl('/lazy/loaded');\n * ```\n *\n * \\@stable\n */\nvar SpyNgModuleFactoryLoader = (function () {\n    /**\n     * @param {?} compiler\n     */\n    function SpyNgModuleFactoryLoader(compiler) {\n        this.compiler = compiler;\n        /**\n         * \\@docsNotRequired\n         */\n        this._stubbedModules = {};\n    }\n    Object.defineProperty(SpyNgModuleFactoryLoader.prototype, \"stubbedModules\", {\n        /**\n         * \\@docsNotRequired\n         * @return {?}\n         */\n        get: function () { return this._stubbedModules; },\n        /**\n         * \\@docsNotRequired\n         * @param {?} modules\n         * @return {?}\n         */\n        set: function (modules) {\n            var /** @type {?} */ res = {};\n            for (var _i = 0, _a = Object.keys(modules); _i < _a.length; _i++) {\n                var t = _a[_i];\n                res[t] = this.compiler.compileModuleAsync(modules[t]);\n            }\n            this._stubbedModules = res;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    SpyNgModuleFactoryLoader.prototype.load = function (path) {\n        if (this._stubbedModules[path]) {\n            return this._stubbedModules[path];\n        }\n        else {\n            return (Promise.reject(new Error(\"Cannot find module \" + path)));\n        }\n    };\n    return SpyNgModuleFactoryLoader;\n}());\nexport { SpyNgModuleFactoryLoader };\nSpyNgModuleFactoryLoader.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nSpyNgModuleFactoryLoader.ctorParameters = function () { return [\n    { type: Compiler, },\n]; };\nfunction SpyNgModuleFactoryLoader_tsickle_Closure_declarations() {\n    /** @type {?} */\n    SpyNgModuleFactoryLoader.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    SpyNgModuleFactoryLoader.ctorParameters;\n    /**\n     * \\@docsNotRequired\n     * @type {?}\n     */\n    SpyNgModuleFactoryLoader.prototype._stubbedModules;\n    /** @type {?} */\n    SpyNgModuleFactoryLoader.prototype.compiler;\n}\n/**\n * Router setup factory function used for testing.\n *\n * \\@stable\n * @param {?} urlSerializer\n * @param {?} contexts\n * @param {?} location\n * @param {?} loader\n * @param {?} compiler\n * @param {?} injector\n * @param {?} routes\n * @param {?=} urlHandlingStrategy\n * @return {?}\n */\nexport function setupTestingRouter(urlSerializer, contexts, location, loader, compiler, injector, routes, urlHandlingStrategy) {\n    var /** @type {?} */ router = new Router(/** @type {?} */ ((null)), urlSerializer, contexts, location, injector, loader, compiler, flatten(routes));\n    if (urlHandlingStrategy) {\n        router.urlHandlingStrategy = urlHandlingStrategy;\n    }\n    return router;\n}\n/**\n * \\@whatItDoes Sets up the router to be used for testing.\n *\n * \\@howToUse\n *\n * ```\n * beforeEach(() => {\n *   TestBed.configureTestModule({\n *     imports: [\n *       RouterTestingModule.withRoutes(\n *         [{path: '', component: BlankCmp}, {path: 'simple', component: SimpleCmp}])]\n *       )\n *     ]\n *   });\n * });\n * ```\n *\n * \\@description\n *\n * The modules sets up the router to be used for testing.\n * It provides spy implementations of {\\@link Location}, {\\@link LocationStrategy}, and {\\@link\n * NgModuleFactoryLoader}.\n *\n * \\@stable\n */\nvar RouterTestingModule = (function () {\n    function RouterTestingModule() {\n    }\n    /**\n     * @param {?} routes\n     * @return {?}\n     */\n    RouterTestingModule.withRoutes = function (routes) {\n        return { ngModule: RouterTestingModule, providers: [provideRoutes(routes)] };\n    };\n    return RouterTestingModule;\n}());\nexport { RouterTestingModule };\nRouterTestingModule.decorators = [\n    { type: NgModule, args: [{\n                exports: [RouterModule],\n                providers: [\n                    ROUTER_PROVIDERS, { provide: Location, useClass: SpyLocation },\n                    { provide: LocationStrategy, useClass: MockLocationStrategy },\n                    { provide: NgModuleFactoryLoader, useClass: SpyNgModuleFactoryLoader }, {\n                        provide: Router,\n                        useFactory: setupTestingRouter,\n                        deps: [\n                            UrlSerializer, ChildrenOutletContexts, Location, NgModuleFactoryLoader, Compiler, Injector,\n                            ROUTES, [UrlHandlingStrategy, new Optional()]\n                        ]\n                    },\n                    { provide: PreloadingStrategy, useExisting: NoPreloading }, provideRoutes([])\n                ]\n            },] },\n];\n/** @nocollapse */\nRouterTestingModule.ctorParameters = function () { return []; };\nfunction RouterTestingModule_tsickle_Closure_declarations() {\n    /** @type {?} */\n    RouterTestingModule.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    RouterTestingModule.ctorParameters;\n}\n//# sourceMappingURL=router_testing_module.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the router/testing package.\n */\nexport { SpyNgModuleFactoryLoader, setupTestingRouter, RouterTestingModule } from './router_testing_module';\n//# sourceMappingURL=testing.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\nexport { SpyNgModuleFactoryLoader, setupTestingRouter, RouterTestingModule } from './src/testing';\n// This file only reexports content of the `src` folder. Keep it that way.\n//# sourceMappingURL=public_api.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\nexport { SpyNgModuleFactoryLoader, setupTestingRouter, RouterTestingModule } from './public_api';\n//# sourceMappingURL=index.js.map"],"names":["flatten","ROUTER_PROVIDERS"],"mappings":"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"}