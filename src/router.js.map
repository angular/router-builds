{"version":3,"sources":["../../../../modules/@angular/router/src/router.ts"],"names":[],"mappings":"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","file":"router.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Location} from '@angular/common';\nimport {Compiler, ComponentFactoryResolver, Injector, NgModuleFactoryLoader, ReflectiveInjector, Type, isDevMode} from '@angular/core';\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\nimport {Observable} from 'rxjs/Observable';\nimport {Subject} from 'rxjs/Subject';\nimport {Subscription} from 'rxjs/Subscription';\nimport {from} from 'rxjs/observable/from';\nimport {of } from 'rxjs/observable/of';\nimport {concatMap} from 'rxjs/operator/concatMap';\nimport {every} from 'rxjs/operator/every';\nimport {first} from 'rxjs/operator/first';\nimport {map} from 'rxjs/operator/map';\nimport {mergeMap} from 'rxjs/operator/mergeMap';\nimport {reduce} from 'rxjs/operator/reduce';\n\nimport {applyRedirects} from './apply_redirects';\nimport {QueryParamsHandling, ResolveData, Routes, validateConfig} from './config';\nimport {createRouterState} from './create_router_state';\nimport {createUrlTree} from './create_url_tree';\nimport {RouterOutlet} from './directives/router_outlet';\nimport {recognize} from './recognize';\nimport {DetachedRouteHandle, DetachedRouteHandleInternal, RouteReuseStrategy} from './route_reuse_strategy';\nimport {LoadedRouterConfig, RouterConfigLoader} from './router_config_loader';\nimport {RouterOutletMap} from './router_outlet_map';\nimport {ActivatedRoute, ActivatedRouteSnapshot, RouterState, RouterStateSnapshot, advanceActivatedRoute, createEmptyState, equalParamsAndUrlSegments, inheritedParamsDataResolve} from './router_state';\nimport {PRIMARY_OUTLET, Params, isNavigationCancelingError} from './shared';\nimport {DefaultUrlHandlingStrategy, UrlHandlingStrategy} from './url_handling_strategy';\nimport {UrlSerializer, UrlTree, containsTree, createEmptyUrlTree} from './url_tree';\nimport {andObservables, forEach, merge, waitForMap, wrapIntoObservable} from './utils/collection';\nimport {TreeNode} from './utils/tree';\n\ndeclare let Zone: any;\n\n/**\n * @whatItDoes Represents the extra options used during navigation.\n *\n * @stable\n */\nexport interface NavigationExtras {\n  /**\n  * Enables relative navigation from the current ActivatedRoute.\n  *\n  * Configuration:\n  *\n  * ```\n  * [{\n  *   path: 'parent',\n  *   component: ParentComponent,\n  *   children: [{\n  *     path: 'list',\n  *     component: ListComponent\n  *   },{\n  *     path: 'child',\n  *     component: ChildComponent\n  *   }]\n  * }]\n  * ```\n  *\n  * Navigate to list route from child route:\n  *\n  * ```\n  *  @Component({...})\n  *  class ChildComponent {\n  *    constructor(private router: Router, private route: ActivatedRoute) {}\n  *\n  *    go() {\n  *      this.router.navigate(['../list'], { relativeTo: this.route });\n  *    }\n  *  }\n  * ```\n  */\n  relativeTo?: ActivatedRoute;\n\n  /**\n  * Sets query parameters to the URL.\n  *\n  * ```\n  * // Navigate to /results?page=1\n  * this.router.navigate(['/results'], { queryParams: { page: 1 } });\n  * ```\n  */\n  queryParams?: Params;\n\n  /**\n  * Sets the hash fragment for the URL.\n  *\n  * ```\n  * // Navigate to /results#top\n  * this.router.navigate(['/results'], { fragment: 'top' });\n  * ```\n  */\n  fragment?: string;\n\n  /**\n  * Preserves the query parameters for the next navigation.\n  *\n  * deprecated, use `queryParamsHandling` instead\n  *\n  * ```\n  * // Preserve query params from /results?page=1 to /view?page=1\n  * this.router.navigate(['/view'], { preserveQueryParams: true });\n  * ```\n  *\n  * @deprecated\n  */\n  preserveQueryParams?: boolean;\n\n  /**\n  *  config strategy to handle the query parameters for the next navigation.\n  *\n  * ```\n  * // from /results?page=1 to /view?page=1&page=2\n  * this.router.navigate(['/view'], { queryParams: { page: 2 },  queryParamsHandling: \"merge\" });\n  * ```\n  */\n  queryParamsHandling?: QueryParamsHandling;\n  /**\n  * Preserves the fragment for the next navigation\n  *\n  * ```\n  * // Preserve fragment from /results#top to /view#top\n  * this.router.navigate(['/view'], { preserveFragment: true });\n  * ```\n  */\n  preserveFragment?: boolean;\n  /**\n  * Navigates without pushing a new state into history.\n  *\n  * ```\n  * // Navigate silently to /view\n  * this.router.navigate(['/view'], { skipLocationChange: true });\n  * ```\n  */\n  skipLocationChange?: boolean;\n  /**\n  * Navigates while replacing the current state in history.\n  *\n  * ```\n  * // Navigate to /view\n  * this.router.navigate(['/view'], { replaceUrl: true });\n  * ```\n  */\n  replaceUrl?: boolean;\n}\n/**\n * \\@whatItDoes Represents an event triggered when a navigation starts.\n * \n * \\@stable\n */\nexport class NavigationStart {\n/**\n * @param {?} id\n * @param {?} url\n */\nconstructor(\npublic id: number,\npublic url: string) {}\n/**\n * \\@docsNotRequired\n * @return {?}\n */\ntoString(): string { return `NavigationStart(id: ${this.id}, url: '${this.url}')`; }\n}\n\nfunction NavigationStart_tsickle_Closure_declarations() {\n/**\n * \\@docsNotRequired\n * @type {?}\n */\nNavigationStart.prototype.id;\n/**\n * \\@docsNotRequired\n * @type {?}\n */\nNavigationStart.prototype.url;\n}\n\n/**\n * \\@whatItDoes Represents an event triggered when a navigation ends successfully.\n * \n * \\@stable\n */\nexport class NavigationEnd {\n/**\n * @param {?} id\n * @param {?} url\n * @param {?} urlAfterRedirects\n */\nconstructor(\npublic id: number,\npublic url: string,\npublic urlAfterRedirects: string) {}\n/**\n * \\@docsNotRequired\n * @return {?}\n */\ntoString(): string {\n    return `NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')`;\n  }\n}\n\nfunction NavigationEnd_tsickle_Closure_declarations() {\n/**\n * \\@docsNotRequired\n * @type {?}\n */\nNavigationEnd.prototype.id;\n/**\n * \\@docsNotRequired\n * @type {?}\n */\nNavigationEnd.prototype.url;\n/**\n * \\@docsNotRequired\n * @type {?}\n */\nNavigationEnd.prototype.urlAfterRedirects;\n}\n\n/**\n * \\@whatItDoes Represents an event triggered when a navigation is canceled.\n * \n * \\@stable\n */\nexport class NavigationCancel {\n/**\n * @param {?} id\n * @param {?} url\n * @param {?} reason\n */\nconstructor(\npublic id: number,\npublic url: string,\npublic reason: string) {}\n/**\n * \\@docsNotRequired\n * @return {?}\n */\ntoString(): string { return `NavigationCancel(id: ${this.id}, url: '${this.url}')`; }\n}\n\nfunction NavigationCancel_tsickle_Closure_declarations() {\n/**\n * \\@docsNotRequired\n * @type {?}\n */\nNavigationCancel.prototype.id;\n/**\n * \\@docsNotRequired\n * @type {?}\n */\nNavigationCancel.prototype.url;\n/**\n * \\@docsNotRequired\n * @type {?}\n */\nNavigationCancel.prototype.reason;\n}\n\n/**\n * \\@whatItDoes Represents an event triggered when a navigation fails due to an unexpected error.\n * \n * \\@stable\n */\nexport class NavigationError {\n/**\n * @param {?} id\n * @param {?} url\n * @param {?} error\n */\nconstructor(\npublic id: number,\npublic url: string,\npublic error: any) {}\n/**\n * \\@docsNotRequired\n * @return {?}\n */\ntoString(): string {\n    return `NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})`;\n  }\n}\n\nfunction NavigationError_tsickle_Closure_declarations() {\n/**\n * \\@docsNotRequired\n * @type {?}\n */\nNavigationError.prototype.id;\n/**\n * \\@docsNotRequired\n * @type {?}\n */\nNavigationError.prototype.url;\n/**\n * \\@docsNotRequired\n * @type {?}\n */\nNavigationError.prototype.error;\n}\n\n/**\n * \\@whatItDoes Represents an event triggered when routes are recognized.\n * \n * \\@stable\n */\nexport class RoutesRecognized {\n/**\n * @param {?} id\n * @param {?} url\n * @param {?} urlAfterRedirects\n * @param {?} state\n */\nconstructor(\npublic id: number,\npublic url: string,\npublic urlAfterRedirects: string,\npublic state: RouterStateSnapshot) {}\n/**\n * \\@docsNotRequired\n * @return {?}\n */\ntoString(): string {\n    return `RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;\n  }\n}\n\nfunction RoutesRecognized_tsickle_Closure_declarations() {\n/**\n * \\@docsNotRequired\n * @type {?}\n */\nRoutesRecognized.prototype.id;\n/**\n * \\@docsNotRequired\n * @type {?}\n */\nRoutesRecognized.prototype.url;\n/**\n * \\@docsNotRequired\n * @type {?}\n */\nRoutesRecognized.prototype.urlAfterRedirects;\n/**\n * \\@docsNotRequired\n * @type {?}\n */\nRoutesRecognized.prototype.state;\n}\n\n\n/**\n * @whatItDoes Represents a router event.\n *\n * Please see {@link NavigationStart}, {@link NavigationEnd}, {@link NavigationCancel}, {@link\n * NavigationError},\n * {@link RoutesRecognized} for more information.\n *\n * @stable\n */\nexport type Event =\n    NavigationStart | NavigationEnd | NavigationCancel | NavigationError | RoutesRecognized;\n\n/**\n * @whatItDoes Error handler that is invoked when a navigation errors.\n *\n * @description\n * If the handler returns a value, the navigation promise will be resolved with this value.\n * If the handler throws an exception, the navigation promise will be rejected with\n * the exception.\n *\n * @stable\n */\nexport type ErrorHandler = (error: any) => any;\n/**\n * @param {?} error\n * @return {?}\n */\nfunction defaultErrorHandler(error: any): any {\n  throw error;\n}\n\ntype NavigationSource = 'imperative' | 'popstate' | 'hashchange';\n\ntype NavigationParams = {\n  id: number,\n  rawUrl: UrlTree,\n  extras: NavigationExtras,\n  resolve: any,\n  reject: any,\n  promise: Promise<boolean>,\n  source: NavigationSource,\n};\n/**\n * Does not detach any subtrees. Reuses routes as long as their route config is the same.\n */\nexport class DefaultRouteReuseStrategy implements RouteReuseStrategy {\n/**\n * @param {?} route\n * @return {?}\n */\nshouldDetach(route: ActivatedRouteSnapshot): boolean { return false; }\n/**\n * @param {?} route\n * @param {?} detachedTree\n * @return {?}\n */\nstore(route: ActivatedRouteSnapshot, detachedTree: DetachedRouteHandle): void {}\n/**\n * @param {?} route\n * @return {?}\n */\nshouldAttach(route: ActivatedRouteSnapshot): boolean { return false; }\n/**\n * @param {?} route\n * @return {?}\n */\nretrieve(route: ActivatedRouteSnapshot): DetachedRouteHandle { return null; }\n/**\n * @param {?} future\n * @param {?} curr\n * @return {?}\n */\nshouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot): boolean {\n    return future.routeConfig === curr.routeConfig;\n  }\n}\n/**\n * \\@whatItDoes Provides the navigation and url manipulation capabilities.\n * \n * See {\\@link Routes} for more details and examples.\n * \n * \\@ngModule RouterModule\n * \n * \\@stable\n */\nexport class Router {\nprivate currentUrlTree: UrlTree;\nprivate rawUrlTree: UrlTree;\nprivate navigations = new BehaviorSubject<NavigationParams>(null);\nprivate routerEvents = new Subject<Event>();\nprivate currentRouterState: RouterState;\nprivate locationSubscription: Subscription;\nprivate navigationId: number = 0;\nprivate configLoader: RouterConfigLoader;\n\n  /**\n   * Error handler that is invoked when a navigation errors.\n   *\n   * See {@link ErrorHandler} for more information.\n   */\n  errorHandler: ErrorHandler = defaultErrorHandler;\n\n  /**\n   * Indicates if at least one navigation happened.\n   */\n  navigated: boolean = false;\n\n  /**\n   * Extracts and merges URLs. Used for AngularJS to Angular migrations.\n   */\n  urlHandlingStrategy: UrlHandlingStrategy = new DefaultUrlHandlingStrategy();\n\n  routeReuseStrategy: RouteReuseStrategy = new DefaultRouteReuseStrategy();\n/**\n * @param {?} rootComponentType\n * @param {?} urlSerializer\n * @param {?} outletMap\n * @param {?} location\n * @param {?} injector\n * @param {?} loader\n * @param {?} compiler\n * @param {?} config\n */\nconstructor(\nprivate rootComponentType: Type<any>,\nprivate urlSerializer: UrlSerializer,\nprivate outletMap: RouterOutletMap,\nprivate location: Location,\nprivate injector: Injector,\n      loader: NgModuleFactoryLoader, compiler: Compiler,\npublic config: Routes) {\n    this.resetConfig(config);\n    this.currentUrlTree = createEmptyUrlTree();\n    this.rawUrlTree = this.currentUrlTree;\n    this.configLoader = new RouterConfigLoader(loader, compiler);\n    this.currentRouterState = createEmptyState(this.currentUrlTree, this.rootComponentType);\n    this.processNavigations();\n  }\n/**\n * \\@internal \n * TODO: this should be removed once the constructor of the router made internal\n * @param {?} rootComponentType\n * @return {?}\n */\nresetRootComponentType(rootComponentType: Type<any>): void {\n    this.rootComponentType = rootComponentType;\n    // TODO: vsavkin router 4.0 should make the root component set to null\n    // this will simplify the lifecycle of the router.\n    this.currentRouterState.root.component = this.rootComponentType;\n  }\n/**\n * Sets up the location change listener and performs the initial navigation.\n * @return {?}\n */\ninitialNavigation(): void {\n    this.setUpLocationChangeListener();\n    if (this.navigationId === 0) {\n      this.navigateByUrl(this.location.path(true), {replaceUrl: true});\n    }\n  }\n/**\n * Sets up the location change listener.\n * @return {?}\n */\nsetUpLocationChangeListener(): void {\n    // Zone.current.wrap is needed because of the issue with RxJS scheduler,\n    // which does not work properly with zone.js in IE and Safari\n    if (!this.locationSubscription) {\n      this.locationSubscription = /** @type {?} */(( <any>this.location.subscribe(Zone.current.wrap((change: any) => {\n        const /** @type {?} */ rawUrlTree = this.urlSerializer.parse(change['url']);\n        const /** @type {?} */ source: NavigationSource = change['type'] === 'popstate' ? 'popstate' : 'hashchange';\n        setTimeout(() => { this.scheduleNavigation(rawUrlTree, source, {replaceUrl: true}); }, 0);\n      }))));\n    }\n  }\n/**\n * The current route state\n * @return {?}\n */\nget routerState(): RouterState { return this.currentRouterState; }\n/**\n * The current url\n * @return {?}\n */\nget url(): string { return this.serializeUrl(this.currentUrlTree); }\n/**\n * An observable of router events\n * @return {?}\n */\nget events(): Observable<Event> { return this.routerEvents; }\n/**\n * Resets the configuration used for navigation and generating links.\n * \n * ### Usage\n * \n * ```\n * router.resetConfig([\n *  { path: 'team/:id', component: TeamCmp, children: [\n *    { path: 'simple', component: SimpleCmp },\n *    { path: 'user/:name', component: UserCmp }\n *  ]}\n * ]);\n * ```\n * @param {?} config\n * @return {?}\n */\nresetConfig(config: Routes): void {\n    validateConfig(config);\n    this.config = config;\n  }\n/**\n * \\@docsNotRequired\n * @return {?}\n */\nngOnDestroy() { this.dispose(); }\n/**\n * Disposes of the router\n * @return {?}\n */\ndispose(): void {\n    if (this.locationSubscription) {\n      this.locationSubscription.unsubscribe();\n      this.locationSubscription = null;\n    }\n  }\n/**\n * Applies an array of commands to the current url tree and creates a new url tree.\n * \n * When given an activate route, applies the given commands starting from the route.\n * When not given a route, applies the given command starting from the root.\n * \n * ### Usage\n * \n * ```\n * // create /team/33/user/11\n * router.createUrlTree(['/team', 33, 'user', 11]);\n * \n * // create /team/33;expand=true/user/11\n * router.createUrlTree(['/team', 33, {expand: true}, 'user', 11]);\n * \n * // you can collapse static segments like this (this works only with the first passed-in value):\n * router.createUrlTree(['/team/33/user', userId]);\n * \n * // If the first segment can contain slashes, and you do not want the router to split it, you\n * // can do the following:\n * \n * router.createUrlTree([{segmentPath: '/one/two'}]);\n * \n * // create /team/33/(user/11//right:chat)\n * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: 'chat'}}]);\n * \n * // remove the right secondary node\n * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: null}}]);\n * \n * // assuming the current url is `/team/33/user/11` and the route points to `user/11`\n * \n * // navigate to /team/33/user/11/details\n * router.createUrlTree(['details'], {relativeTo: route});\n * \n * // navigate to /team/33/user/22\n * router.createUrlTree(['../22'], {relativeTo: route});\n * \n * // navigate to /team/44/user/22\n * router.createUrlTree(['../../team/44/user/22'], {relativeTo: route});\n * ```\n * @param {?} commands\n * @param {?=} __1\n * @return {?}\n */\ncreateUrlTree(\n      commands: any[], {relativeTo, queryParams, fragment, preserveQueryParams, queryParamsHandling,\n                        preserveFragment}: NavigationExtras = {}): UrlTree {\n    if (isDevMode() && preserveQueryParams && /** @type {?} */(( <any>console)) && /** @type {?} */(( <any>console.warn))) {\n      console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n    }\n    const /** @type {?} */ a = relativeTo || this.routerState.root;\n    const /** @type {?} */ f = preserveFragment ? this.currentUrlTree.fragment : fragment;\n    let /** @type {?} */ q: Params = null;\n    if (queryParamsHandling) {\n      switch (queryParamsHandling) {\n        case 'merge':\n          q = merge(this.currentUrlTree.queryParams, queryParams);\n          break;\n        case 'preserve':\n          q = this.currentUrlTree.queryParams;\n          break;\n        default:\n          q = queryParams;\n      }\n    } else {\n      q = preserveQueryParams ? this.currentUrlTree.queryParams : queryParams;\n    }\n    return createUrlTree(a, this.currentUrlTree, commands, q, f);\n  }\n/**\n * Navigate based on the provided url. This navigation is always absolute.\n * \n * Returns a promise that:\n * - resolves to 'true' when navigation succeeds,\n * - resolves to 'false' when navigation fails,\n * - is rejected when an error happens.\n * \n * ### Usage\n * \n * ```\n * router.navigateByUrl(\"/team/33/user/11\");\n * \n * // Navigate without updating the URL\n * router.navigateByUrl(\"/team/33/user/11\", { skipLocationChange: true });\n * ```\n * \n * In opposite to `navigate`, `navigateByUrl` takes a whole URL\n * and does not apply any delta to the current one.\n * @param {?} url\n * @param {?=} extras\n * @return {?}\n */\nnavigateByUrl(url: string|UrlTree, extras: NavigationExtras = {skipLocationChange: false}):\n      Promise<boolean> {\n    if (url instanceof UrlTree) {\n      return this.scheduleNavigation(\n          this.urlHandlingStrategy.merge(url, this.rawUrlTree), 'imperative', extras);\n    }\n\n    const /** @type {?} */ urlTree = this.urlSerializer.parse(url);\n    return this.scheduleNavigation(\n        this.urlHandlingStrategy.merge(urlTree, this.rawUrlTree), 'imperative', extras);\n  }\n/**\n * Navigate based on the provided array of commands and a starting point.\n * If no starting route is provided, the navigation is absolute.\n * \n * Returns a promise that:\n * - resolves to 'true' when navigation succeeds,\n * - resolves to 'false' when navigation fails,\n * - is rejected when an error happens.\n * \n * ### Usage\n * \n * ```\n * router.navigate(['team', 33, 'user', 11], {relativeTo: route});\n * \n * // Navigate without updating the URL\n * router.navigate(['team', 33, 'user', 11], {relativeTo: route, skipLocationChange: true});\n * ```\n * \n * In opposite to `navigateByUrl`, `navigate` always takes a delta that is applied to the current\n * URL.\n * @param {?} commands\n * @param {?=} extras\n * @return {?}\n */\nnavigate(commands: any[], extras: NavigationExtras = {skipLocationChange: false}):\n      Promise<boolean> {\n    validateCommands(commands);\n    if (typeof extras.queryParams === 'object' && extras.queryParams !== null) {\n      extras.queryParams = this.removeEmptyProps(extras.queryParams);\n    }\n    return this.navigateByUrl(this.createUrlTree(commands, extras), extras);\n  }\n/**\n * Serializes a {\\@link UrlTree} into a string\n * @param {?} url\n * @return {?}\n */\nserializeUrl(url: UrlTree): string { return this.urlSerializer.serialize(url); }\n/**\n * Parses a string into a {\\@link UrlTree}\n * @param {?} url\n * @return {?}\n */\nparseUrl(url: string): UrlTree { return this.urlSerializer.parse(url); }\n/**\n * Returns whether the url is activated\n * @param {?} url\n * @param {?} exact\n * @return {?}\n */\nisActive(url: string|UrlTree, exact: boolean): boolean {\n    if (url instanceof UrlTree) {\n      return containsTree(this.currentUrlTree, url, exact);\n    } else {\n      const /** @type {?} */ urlTree = this.urlSerializer.parse(url);\n      return containsTree(this.currentUrlTree, urlTree, exact);\n    }\n  }\n/**\n * @param {?} params\n * @return {?}\n */\nprivate removeEmptyProps(params: Params): Params {\n    return Object.keys(params).reduce((result: Params, key: string) => {\n      const /** @type {?} */ value: any = params[key];\n      if (value !== null && value !== undefined) {\n        result[key] = value;\n      }\n      return result;\n    }, {});\n  }\n/**\n * @return {?}\n */\nprivate processNavigations(): void {\n    concatMap\n        .call(\n            this.navigations,\n            (nav: NavigationParams) => {\n              if (nav) {\n                this.executeScheduledNavigation(nav);\n                // a failed navigation should not stop the router from processing\n                // further navigations => the catch\n                return nav.promise.catch(() => {});\n              } else {\n                return /** @type {?} */(( <any>of (null)));\n              }\n            })\n        .subscribe(() => {});\n  }\n/**\n * @param {?} rawUrl\n * @param {?} source\n * @param {?} extras\n * @return {?}\n */\nprivate scheduleNavigation(rawUrl: UrlTree, source: NavigationSource, extras: NavigationExtras):\n      Promise<boolean> {\n    const /** @type {?} */ lastNavigation = this.navigations.value;\n\n    // If the user triggers a navigation imperatively (e.g., by using navigateByUrl),\n    // and that navigation results in 'replaceState' that leads to the same URL,\n    // we should skip those.\n    if (lastNavigation && source !== 'imperative' && lastNavigation.source === 'imperative' &&\n        lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n      return null;  // return value is not used\n    }\n\n    // Because of a bug in IE and Edge, the location class fires two events (popstate and\n    // hashchange)\n    // every single time. The second one should be ignored. Otherwise, the URL will flicker.\n    if (lastNavigation && source == 'hashchange' && lastNavigation.source === 'popstate' &&\n        lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n      return null;  // return value is not used\n    }\n\n    let /** @type {?} */ resolve: any = null;\n    let /** @type {?} */ reject: any = null;\n\n    const /** @type {?} */ promise = new Promise((res, rej) => {\n      resolve = res;\n      reject = rej;\n    });\n\n    const /** @type {?} */ id = ++this.navigationId;\n    this.navigations.next({id, source, rawUrl, extras, resolve, reject, promise});\n\n    // Make sure that the error is propagated even though `processNavigations` catch\n    // handler does not rethrow\n    return promise.catch((e: any) => Promise.reject(e));\n  }\n/**\n * @param {?} __0\n * @return {?}\n */\nprivate executeScheduledNavigation({id, rawUrl, extras, resolve, reject}: NavigationParams):\n      void {\n    const /** @type {?} */ url = this.urlHandlingStrategy.extract(rawUrl);\n    const /** @type {?} */ urlTransition = !this.navigated || url.toString() !== this.currentUrlTree.toString();\n\n    if (urlTransition && this.urlHandlingStrategy.shouldProcessUrl(rawUrl)) {\n      this.routerEvents.next(new NavigationStart(id, this.serializeUrl(url)));\n      Promise.resolve()\n          .then(\n              (_) => this.runNavigate(\n                  url, rawUrl, extras.skipLocationChange, extras.replaceUrl, id, null))\n          .then(resolve, reject);\n\n      // we cannot process the current URL, but we could process the previous one =>\n      // we need to do some cleanup\n    } else if (\n        urlTransition && this.rawUrlTree &&\n        this.urlHandlingStrategy.shouldProcessUrl(this.rawUrlTree)) {\n      this.routerEvents.next(new NavigationStart(id, this.serializeUrl(url)));\n      Promise.resolve()\n          .then(\n              (_) => this.runNavigate(\n                  url, rawUrl, false, false, id,\n                  createEmptyState(url, this.rootComponentType).snapshot))\n          .then(resolve, reject);\n\n    } else {\n      this.rawUrlTree = rawUrl;\n      resolve(null);\n    }\n  }\n/**\n * @param {?} url\n * @param {?} rawUrl\n * @param {?} shouldPreventPushState\n * @param {?} shouldReplaceUrl\n * @param {?} id\n * @param {?} precreatedState\n * @return {?}\n */\nprivate runNavigate(\n      url: UrlTree, rawUrl: UrlTree, shouldPreventPushState: boolean, shouldReplaceUrl: boolean,\n      id: number, precreatedState: RouterStateSnapshot): Promise<boolean> {\n    if (id !== this.navigationId) {\n      this.location.go(this.urlSerializer.serialize(this.currentUrlTree));\n      this.routerEvents.next(new NavigationCancel(\n          id, this.serializeUrl(url),\n          `Navigation ID ${id} is not equal to the current navigation id ${this.navigationId}`));\n      return Promise.resolve(false);\n    }\n\n    return new Promise((resolvePromise, rejectPromise) => {\n      // create an observable of the url and route state snapshot\n      // this operation do not result in any side effects\n      let /** @type {?} */ urlAndSnapshot$: Observable<{appliedUrl: UrlTree, snapshot: RouterStateSnapshot}>;\n      if (!precreatedState) {\n        const /** @type {?} */ redirectsApplied$ =\n            applyRedirects(this.injector, this.configLoader, this.urlSerializer, url, this.config);\n\n        urlAndSnapshot$ = mergeMap.call(redirectsApplied$, (appliedUrl: UrlTree) => {\n          return map.call(\n              recognize(\n                  this.rootComponentType, this.config, appliedUrl, this.serializeUrl(appliedUrl)),\n              (snapshot: any) => {\n\n                this.routerEvents.next(new RoutesRecognized(\n                    id, this.serializeUrl(url), this.serializeUrl(appliedUrl), snapshot));\n\n                return {appliedUrl, snapshot};\n              });\n        });\n      } else {\n        urlAndSnapshot$ = of ({appliedUrl: url, snapshot: precreatedState});\n      }\n\n\n      // run preactivation: guards and data resolvers\n      let /** @type {?} */ preActivation: PreActivation;\n      const /** @type {?} */ preactivationTraverse$ = map.call(urlAndSnapshot$, ({appliedUrl, snapshot}: any) => {\n        preActivation =\n            new PreActivation(snapshot, this.currentRouterState.snapshot, this.injector);\n        preActivation.traverse(this.outletMap);\n        return {appliedUrl, snapshot};\n      });\n\n      const /** @type {?} */ preactivationCheckGuards =\n          mergeMap.call(preactivationTraverse$, ({appliedUrl, snapshot}: any) => {\n            if (this.navigationId !== id) return of (false);\n\n            return map.call(preActivation.checkGuards(), (shouldActivate: boolean) => {\n              return {appliedUrl: appliedUrl, snapshot: snapshot, shouldActivate: shouldActivate};\n            });\n          });\n\n      const /** @type {?} */ preactivationResolveData$ = mergeMap.call(preactivationCheckGuards, (p: any) => {\n        if (this.navigationId !== id) return of (false);\n\n        if (p.shouldActivate) {\n          return map.call(preActivation.resolveData(), () => p);\n        } else {\n          return of (p);\n        }\n      });\n\n\n      // create router state\n      // this operation has side effects => route state is being affected\n      const /** @type {?} */ routerState$ =\n          map.call(preactivationResolveData$, ({appliedUrl, snapshot, shouldActivate}: any) => {\n            if (shouldActivate) {\n              const /** @type {?} */ state =\n                  createRouterState(this.routeReuseStrategy, snapshot, this.currentRouterState);\n              return {appliedUrl, state, shouldActivate};\n            } else {\n              return {appliedUrl, state: null, shouldActivate};\n            }\n          });\n\n\n      // applied the new router state\n      // this operation has side effects\n      let /** @type {?} */ navigationIsSuccessful: boolean;\n      const /** @type {?} */ storedState = this.currentRouterState;\n      const /** @type {?} */ storedUrl = this.currentUrlTree;\n\n      routerState$\n          .forEach(({appliedUrl, state, shouldActivate}: any) => {\n            if (!shouldActivate || id !== this.navigationId) {\n              navigationIsSuccessful = false;\n              return;\n            }\n\n            this.currentUrlTree = appliedUrl;\n            this.rawUrlTree = this.urlHandlingStrategy.merge(this.currentUrlTree, rawUrl);\n\n            this.currentRouterState = state;\n\n            if (!shouldPreventPushState) {\n              const /** @type {?} */ path = this.urlSerializer.serialize(this.rawUrlTree);\n              if (this.location.isCurrentPathEqualTo(path) || shouldReplaceUrl) {\n                this.location.replaceState(path);\n              } else {\n                this.location.go(path);\n              }\n            }\n\n            new ActivateRoutes(this.routeReuseStrategy, state, storedState)\n                .activate(this.outletMap);\n\n            navigationIsSuccessful = true;\n          })\n          .then(\n              () => {\n                if (navigationIsSuccessful) {\n                  this.navigated = true;\n                  this.routerEvents.next(new NavigationEnd(\n                      id, this.serializeUrl(url), this.serializeUrl(this.currentUrlTree)));\n                  resolvePromise(true);\n                } else {\n                  this.resetUrlToCurrentUrlTree();\n                  this.routerEvents.next(new NavigationCancel(id, this.serializeUrl(url), ''));\n                  resolvePromise(false);\n                }\n              },\n              (e: any) => {\n                if (isNavigationCancelingError(e)) {\n                  this.resetUrlToCurrentUrlTree();\n                  this.navigated = true;\n                  this.routerEvents.next(\n                      new NavigationCancel(id, this.serializeUrl(url), e.message));\n                  resolvePromise(false);\n                } else {\n                  this.routerEvents.next(new NavigationError(id, this.serializeUrl(url), e));\n                  try {\n                    resolvePromise(this.errorHandler(e));\n                  } catch ( /** @type {?} */ee) {\n                    rejectPromise(ee);\n                  }\n                }\n\n                this.currentRouterState = storedState;\n                this.currentUrlTree = storedUrl;\n                this.rawUrlTree = this.urlHandlingStrategy.merge(this.currentUrlTree, rawUrl);\n                this.location.replaceState(this.serializeUrl(this.rawUrlTree));\n              });\n    });\n  }\n/**\n * @return {?}\n */\nprivate resetUrlToCurrentUrlTree(): void {\n    const /** @type {?} */ path = this.urlSerializer.serialize(this.rawUrlTree);\n    this.location.replaceState(path);\n  }\n}\n\nfunction Router_tsickle_Closure_declarations() {\n/** @type {?} */\nRouter.prototype.currentUrlTree;\n/** @type {?} */\nRouter.prototype.rawUrlTree;\n/** @type {?} */\nRouter.prototype.navigations;\n/** @type {?} */\nRouter.prototype.routerEvents;\n/** @type {?} */\nRouter.prototype.currentRouterState;\n/** @type {?} */\nRouter.prototype.locationSubscription;\n/** @type {?} */\nRouter.prototype.navigationId;\n/** @type {?} */\nRouter.prototype.configLoader;\n/**\n * Error handler that is invoked when a navigation errors.\n * \n * See {\\@link ErrorHandler} for more information.\n * @type {?}\n */\nRouter.prototype.errorHandler;\n/**\n * Indicates if at least one navigation happened.\n * @type {?}\n */\nRouter.prototype.navigated;\n/**\n * Extracts and merges URLs. Used for AngularJS to Angular migrations.\n * @type {?}\n */\nRouter.prototype.urlHandlingStrategy;\n/** @type {?} */\nRouter.prototype.routeReuseStrategy;\n/** @type {?} */\nRouter.prototype.rootComponentType;\n/** @type {?} */\nRouter.prototype.urlSerializer;\n/** @type {?} */\nRouter.prototype.outletMap;\n/** @type {?} */\nRouter.prototype.location;\n/** @type {?} */\nRouter.prototype.injector;\n/** @type {?} */\nRouter.prototype.config;\n}\n\nclass CanActivate {\n/**\n * @param {?} path\n */\nconstructor(public path: ActivatedRouteSnapshot[]) {}\n/**\n * @return {?}\n */\nget route(): ActivatedRouteSnapshot { return this.path[this.path.length - 1]; }\n}\n\nfunction CanActivate_tsickle_Closure_declarations() {\n/** @type {?} */\nCanActivate.prototype.path;\n}\n\nclass CanDeactivate {\n/**\n * @param {?} component\n * @param {?} route\n */\nconstructor(public component: Object,\npublic route: ActivatedRouteSnapshot) {}\n}\n\nfunction CanDeactivate_tsickle_Closure_declarations() {\n/** @type {?} */\nCanDeactivate.prototype.component;\n/** @type {?} */\nCanDeactivate.prototype.route;\n}\n\nexport class PreActivation {\nprivate checks: Array<CanActivate|CanDeactivate> = [];\n/**\n * @param {?} future\n * @param {?} curr\n * @param {?} injector\n */\nconstructor(\nprivate future: RouterStateSnapshot,\nprivate curr: RouterStateSnapshot,\nprivate injector: Injector) {}\n/**\n * @param {?} parentOutletMap\n * @return {?}\n */\ntraverse(parentOutletMap: RouterOutletMap): void {\n    const /** @type {?} */ futureRoot = this.future._root;\n    const /** @type {?} */ currRoot = this.curr ? this.curr._root : null;\n    this.traverseChildRoutes(futureRoot, currRoot, parentOutletMap, [futureRoot.value]);\n  }\n/**\n * @return {?}\n */\ncheckGuards(): Observable<boolean> {\n    if (this.checks.length === 0) return of (true);\n    const /** @type {?} */ checks$ = from(this.checks);\n    const /** @type {?} */ runningChecks$ = mergeMap.call(checks$, (s: any) => {\n      if (s instanceof CanActivate) {\n        return andObservables(\n            from([this.runCanActivateChild(s.path), this.runCanActivate(s.route)]));\n      } else if (s instanceof CanDeactivate) {\n        // workaround https://github.com/Microsoft/TypeScript/issues/7271\n        const /** @type {?} */ s2 = /** @type {?} */(( s as CanDeactivate));\n        return this.runCanDeactivate(s2.component, s2.route);\n      } else {\n        throw new Error('Cannot be reached');\n      }\n    });\n    return every.call(runningChecks$, (result: any) => result === true);\n  }\n/**\n * @return {?}\n */\nresolveData(): Observable<any> {\n    if (this.checks.length === 0) return of (null);\n    const /** @type {?} */ checks$ = from(this.checks);\n    const /** @type {?} */ runningChecks$ = concatMap.call(checks$, (s: any) => {\n      if (s instanceof CanActivate) {\n        return this.runResolve(s.route);\n      } else {\n        return of (null);\n      }\n    });\n    return reduce.call(runningChecks$, (_: any, __: any) => _);\n  }\n/**\n * @param {?} futureNode\n * @param {?} currNode\n * @param {?} outletMap\n * @param {?} futurePath\n * @return {?}\n */\nprivate traverseChildRoutes(\n      futureNode: TreeNode<ActivatedRouteSnapshot>, currNode: TreeNode<ActivatedRouteSnapshot>,\n      outletMap: RouterOutletMap, futurePath: ActivatedRouteSnapshot[]): void {\n    const /** @type {?} */ prevChildren: {[key: string]: any} = nodeChildrenAsMap(currNode);\n\n    futureNode.children.forEach(c => {\n      this.traverseRoutes(c, prevChildren[c.value.outlet], outletMap, futurePath.concat([c.value]));\n      delete prevChildren[c.value.outlet];\n    });\n    forEach(\n        prevChildren,\n        (v: any, k: string) => this.deactiveRouteAndItsChildren(v, outletMap._outlets[k]));\n  }\n/**\n * @param {?} futureNode\n * @param {?} currNode\n * @param {?} parentOutletMap\n * @param {?} futurePath\n * @return {?}\n */\ntraverseRoutes(\n      futureNode: TreeNode<ActivatedRouteSnapshot>, currNode: TreeNode<ActivatedRouteSnapshot>,\n      parentOutletMap: RouterOutletMap, futurePath: ActivatedRouteSnapshot[]): void {\n    const /** @type {?} */ future = futureNode.value;\n    const /** @type {?} */ curr = currNode ? currNode.value : null;\n    const /** @type {?} */ outlet = parentOutletMap ? parentOutletMap._outlets[futureNode.value.outlet] : null;\n\n    // reusing the node\n    if (curr && future._routeConfig === curr._routeConfig) {\n      if (!equalParamsAndUrlSegments(future, curr)) {\n        this.checks.push(new CanDeactivate(outlet.component, curr), new CanActivate(futurePath));\n      } else {\n        // we need to set the data\n        future.data = curr.data;\n        future._resolvedData = curr._resolvedData;\n      }\n\n      // If we have a component, we need to go through an outlet.\n      if (future.component) {\n        this.traverseChildRoutes(\n            futureNode, currNode, outlet ? outlet.outletMap : null, futurePath);\n\n        // if we have a componentless route, we recurse but keep the same outlet map.\n      } else {\n        this.traverseChildRoutes(futureNode, currNode, parentOutletMap, futurePath);\n      }\n    } else {\n      if (curr) {\n        this.deactiveRouteAndItsChildren(currNode, outlet);\n      }\n\n      this.checks.push(new CanActivate(futurePath));\n      // If we have a component, we need to go through an outlet.\n      if (future.component) {\n        this.traverseChildRoutes(futureNode, null, outlet ? outlet.outletMap : null, futurePath);\n\n        // if we have a componentless route, we recurse but keep the same outlet map.\n      } else {\n        this.traverseChildRoutes(futureNode, null, parentOutletMap, futurePath);\n      }\n    }\n  }\n/**\n * @param {?} route\n * @param {?} outlet\n * @return {?}\n */\nprivate deactiveRouteAndItsChildren(\n      route: TreeNode<ActivatedRouteSnapshot>, outlet: RouterOutlet): void {\n    const /** @type {?} */ prevChildren: {[key: string]: any} = nodeChildrenAsMap(route);\n    const /** @type {?} */ r = route.value;\n\n    forEach(prevChildren, (v: any, k: string) => {\n      if (!r.component) {\n        this.deactiveRouteAndItsChildren(v, outlet);\n      } else if (!!outlet) {\n        this.deactiveRouteAndItsChildren(v, outlet.outletMap._outlets[k]);\n      } else {\n        this.deactiveRouteAndItsChildren(v, null);\n      }\n    });\n\n    if (!r.component) {\n      this.checks.push(new CanDeactivate(null, r));\n    } else if (outlet && outlet.isActivated) {\n      this.checks.push(new CanDeactivate(outlet.component, r));\n    } else {\n      this.checks.push(new CanDeactivate(null, r));\n    }\n  }\n/**\n * @param {?} future\n * @return {?}\n */\nprivate runCanActivate(future: ActivatedRouteSnapshot): Observable<boolean> {\n    const /** @type {?} */ canActivate = future._routeConfig ? future._routeConfig.canActivate : null;\n    if (!canActivate || canActivate.length === 0) return of (true);\n    const /** @type {?} */ obs = map.call(from(canActivate), (c: any) => {\n      const /** @type {?} */ guard = this.getToken(c, future);\n      let /** @type {?} */ observable: Observable<boolean>;\n      if (guard.canActivate) {\n        observable = wrapIntoObservable(guard.canActivate(future, this.future));\n      } else {\n        observable = wrapIntoObservable(guard(future, this.future));\n      }\n      return first.call(observable);\n    });\n    return andObservables(obs);\n  }\n/**\n * @param {?} path\n * @return {?}\n */\nprivate runCanActivateChild(path: ActivatedRouteSnapshot[]): Observable<boolean> {\n    const /** @type {?} */ future = path[path.length - 1];\n\n    const /** @type {?} */ canActivateChildGuards = path.slice(0, path.length - 1)\n                                       .reverse()\n                                       .map(p => this.extractCanActivateChild(p))\n                                       .filter(_ => _ !== null);\n\n    return andObservables(map.call(from(canActivateChildGuards), (d: any) => {\n      const /** @type {?} */ obs = map.call(from(d.guards), (c: any) => {\n        const /** @type {?} */ guard = this.getToken(c, d.node);\n        let /** @type {?} */ observable: Observable<boolean>;\n        if (guard.canActivateChild) {\n          observable = wrapIntoObservable(guard.canActivateChild(future, this.future));\n        } else {\n          observable = wrapIntoObservable(guard(future, this.future));\n        }\n        return first.call(observable);\n      });\n      return andObservables(obs);\n    }));\n  }\n/**\n * @param {?} p\n * @return {?}\n */\nprivate extractCanActivateChild(p: ActivatedRouteSnapshot):\n      {node: ActivatedRouteSnapshot, guards: any[]} {\n    const /** @type {?} */ canActivateChild = p._routeConfig ? p._routeConfig.canActivateChild : null;\n    if (!canActivateChild || canActivateChild.length === 0) return null;\n    return {node: p, guards: canActivateChild};\n  }\n/**\n * @param {?} component\n * @param {?} curr\n * @return {?}\n */\nprivate runCanDeactivate(component: Object, curr: ActivatedRouteSnapshot): Observable<boolean> {\n    const /** @type {?} */ canDeactivate = curr && curr._routeConfig ? curr._routeConfig.canDeactivate : null;\n    if (!canDeactivate || canDeactivate.length === 0) return of (true);\n    const /** @type {?} */ canDeactivate$ = mergeMap.call(from(canDeactivate), (c: any) => {\n      const /** @type {?} */ guard = this.getToken(c, curr);\n      let /** @type {?} */ observable: Observable<boolean>;\n      if (guard.canDeactivate) {\n        observable =\n            wrapIntoObservable(guard.canDeactivate(component, curr, this.curr, this.future));\n      } else {\n        observable = wrapIntoObservable(guard(component, curr, this.curr, this.future));\n      }\n      return first.call(observable);\n    });\n    return every.call(canDeactivate$, (result: any) => result === true);\n  }\n/**\n * @param {?} future\n * @return {?}\n */\nprivate runResolve(future: ActivatedRouteSnapshot): Observable<any> {\n    const /** @type {?} */ resolve = future._resolve;\n    return map.call(this.resolveNode(resolve, future), (resolvedData: any): any => {\n      future._resolvedData = resolvedData;\n      future.data = merge(future.data, inheritedParamsDataResolve(future).resolve);\n      return null;\n    });\n  }\n/**\n * @param {?} resolve\n * @param {?} future\n * @return {?}\n */\nprivate resolveNode(resolve: ResolveData, future: ActivatedRouteSnapshot): Observable<any> {\n    return waitForMap(resolve, (k, v) => {\n      const /** @type {?} */ resolver = this.getToken(v, future);\n      return resolver.resolve ? wrapIntoObservable(resolver.resolve(future, this.future)) :\n                                wrapIntoObservable(resolver(future, this.future));\n    });\n  }\n/**\n * @param {?} token\n * @param {?} snapshot\n * @return {?}\n */\nprivate getToken(token: any, snapshot: ActivatedRouteSnapshot): any {\n    const /** @type {?} */ config = closestLoadedConfig(snapshot);\n    const /** @type {?} */ injector = config ? config.injector : this.injector;\n    return injector.get(token);\n  }\n}\n\nfunction PreActivation_tsickle_Closure_declarations() {\n/** @type {?} */\nPreActivation.prototype.checks;\n/** @type {?} */\nPreActivation.prototype.future;\n/** @type {?} */\nPreActivation.prototype.curr;\n/** @type {?} */\nPreActivation.prototype.injector;\n}\n\nclass ActivateRoutes {\n/**\n * @param {?} routeReuseStrategy\n * @param {?} futureState\n * @param {?} currState\n */\nconstructor(\nprivate routeReuseStrategy: RouteReuseStrategy,\nprivate futureState: RouterState,\nprivate currState: RouterState) {}\n/**\n * @param {?} parentOutletMap\n * @return {?}\n */\nactivate(parentOutletMap: RouterOutletMap): void {\n    const /** @type {?} */ futureRoot = this.futureState._root;\n    const /** @type {?} */ currRoot = this.currState ? this.currState._root : null;\n\n    this.deactivateChildRoutes(futureRoot, currRoot, parentOutletMap);\n    advanceActivatedRoute(this.futureState.root);\n    this.activateChildRoutes(futureRoot, currRoot, parentOutletMap);\n  }\n/**\n * @param {?} futureNode\n * @param {?} currNode\n * @param {?} outletMap\n * @return {?}\n */\nprivate deactivateChildRoutes(\n      futureNode: TreeNode<ActivatedRoute>, currNode: TreeNode<ActivatedRoute>,\n      outletMap: RouterOutletMap): void {\n    const /** @type {?} */ prevChildren: {[key: string]: any} = nodeChildrenAsMap(currNode);\n    futureNode.children.forEach(c => {\n      this.deactivateRoutes(c, prevChildren[c.value.outlet], outletMap);\n      delete prevChildren[c.value.outlet];\n    });\n    forEach(prevChildren, (v: any, k: string) => this.deactiveRouteAndItsChildren(v, outletMap));\n  }\n/**\n * @param {?} futureNode\n * @param {?} currNode\n * @param {?} outletMap\n * @return {?}\n */\nprivate activateChildRoutes(\n      futureNode: TreeNode<ActivatedRoute>, currNode: TreeNode<ActivatedRoute>,\n      outletMap: RouterOutletMap): void {\n    const /** @type {?} */ prevChildren: {[key: string]: any} = nodeChildrenAsMap(currNode);\n    futureNode.children.forEach(\n        c => { this.activateRoutes(c, prevChildren[c.value.outlet], outletMap); });\n  }\n/**\n * @param {?} futureNode\n * @param {?} currNode\n * @param {?} parentOutletMap\n * @return {?}\n */\ndeactivateRoutes(\n      futureNode: TreeNode<ActivatedRoute>, currNode: TreeNode<ActivatedRoute>,\n      parentOutletMap: RouterOutletMap): void {\n    const /** @type {?} */ future = futureNode.value;\n    const /** @type {?} */ curr = currNode ? currNode.value : null;\n\n    // reusing the node\n    if (future === curr) {\n      // If we have a normal route, we need to go through an outlet.\n      if (future.component) {\n        const /** @type {?} */ outlet = getOutlet(parentOutletMap, future);\n        this.deactivateChildRoutes(futureNode, currNode, outlet.outletMap);\n\n        // if we have a componentless route, we recurse but keep the same outlet map.\n      } else {\n        this.deactivateChildRoutes(futureNode, currNode, parentOutletMap);\n      }\n    } else {\n      if (curr) {\n        this.deactiveRouteAndItsChildren(currNode, parentOutletMap);\n      }\n    }\n  }\n/**\n * @param {?} futureNode\n * @param {?} currNode\n * @param {?} parentOutletMap\n * @return {?}\n */\nactivateRoutes(\n      futureNode: TreeNode<ActivatedRoute>, currNode: TreeNode<ActivatedRoute>,\n      parentOutletMap: RouterOutletMap): void {\n    const /** @type {?} */ future = futureNode.value;\n    const /** @type {?} */ curr = currNode ? currNode.value : null;\n\n    // reusing the node\n    if (future === curr) {\n      // advance the route to push the parameters\n      advanceActivatedRoute(future);\n\n      // If we have a normal route, we need to go through an outlet.\n      if (future.component) {\n        const /** @type {?} */ outlet = getOutlet(parentOutletMap, future);\n        this.activateChildRoutes(futureNode, currNode, outlet.outletMap);\n\n        // if we have a componentless route, we recurse but keep the same outlet map.\n      } else {\n        this.activateChildRoutes(futureNode, currNode, parentOutletMap);\n      }\n    } else {\n      // if we have a normal route, we need to advance the route\n      // and place the component into the outlet. After that recurse.\n      if (future.component) {\n        advanceActivatedRoute(future);\n        const /** @type {?} */ outlet = getOutlet(parentOutletMap, futureNode.value);\n\n        if (this.routeReuseStrategy.shouldAttach(future.snapshot)) {\n          const /** @type {?} */ stored =\n              ( /** @type {?} */((<DetachedRouteHandleInternal>this.routeReuseStrategy.retrieve(future.snapshot))));\n          this.routeReuseStrategy.store(future.snapshot, null);\n          outlet.attach(stored.componentRef, stored.route.value);\n          advanceActivatedRouteNodeAndItsChildren(stored.route);\n        } else {\n          const /** @type {?} */ outletMap = new RouterOutletMap();\n          this.placeComponentIntoOutlet(outletMap, future, outlet);\n          this.activateChildRoutes(futureNode, null, outletMap);\n        }\n\n        // if we have a componentless route, we recurse but keep the same outlet map.\n      } else {\n        advanceActivatedRoute(future);\n        this.activateChildRoutes(futureNode, null, parentOutletMap);\n      }\n    }\n  }\n/**\n * @param {?} outletMap\n * @param {?} future\n * @param {?} outlet\n * @return {?}\n */\nprivate placeComponentIntoOutlet(\n      outletMap: RouterOutletMap, future: ActivatedRoute, outlet: RouterOutlet): void {\n    const /** @type {?} */ resolved = /** @type {?} */(( <any[]>[{provide: ActivatedRoute, useValue: future}, {\n      provide: RouterOutletMap,\n      useValue: outletMap\n    }]));\n\n    const /** @type {?} */ config = parentLoadedConfig(future.snapshot);\n\n    let /** @type {?} */ resolver: ComponentFactoryResolver = null;\n    let /** @type {?} */ injector: Injector = null;\n\n    if (config) {\n      injector = config.injectorFactory(outlet.locationInjector);\n      resolver = config.factoryResolver;\n      resolved.push({provide: ComponentFactoryResolver, useValue: resolver});\n    } else {\n      injector = outlet.locationInjector;\n      resolver = outlet.locationFactoryResolver;\n    }\n\n    outlet.activate(future, resolver, injector, ReflectiveInjector.resolve(resolved), outletMap);\n  }\n/**\n * @param {?} route\n * @param {?} parentOutletMap\n * @return {?}\n */\nprivate deactiveRouteAndItsChildren(\n      route: TreeNode<ActivatedRoute>, parentOutletMap: RouterOutletMap): void {\n    if (this.routeReuseStrategy.shouldDetach(route.value.snapshot)) {\n      this.detachAndStoreRouteSubtree(route, parentOutletMap);\n    } else {\n      this.deactiveRouteAndOutlet(route, parentOutletMap);\n    }\n  }\n/**\n * @param {?} route\n * @param {?} parentOutletMap\n * @return {?}\n */\nprivate detachAndStoreRouteSubtree(\n      route: TreeNode<ActivatedRoute>, parentOutletMap: RouterOutletMap): void {\n    const /** @type {?} */ outlet = getOutlet(parentOutletMap, route.value);\n    const /** @type {?} */ componentRef = outlet.detach();\n    this.routeReuseStrategy.store(route.value.snapshot, {componentRef, route});\n  }\n/**\n * @param {?} route\n * @param {?} parentOutletMap\n * @return {?}\n */\nprivate deactiveRouteAndOutlet(route: TreeNode<ActivatedRoute>, parentOutletMap: RouterOutletMap):\n      void {\n    const /** @type {?} */ prevChildren: {[key: string]: any} = nodeChildrenAsMap(route);\n    let /** @type {?} */ outlet: RouterOutlet = null;\n\n    // getOutlet throws when cannot find the right outlet,\n    // which can happen if an outlet was in an NgIf and was removed\n    try {\n      outlet = getOutlet(parentOutletMap, route.value);\n    } catch ( /** @type {?} */e) {\n      return;\n    }\n    const /** @type {?} */ childOutletMap = outlet.outletMap;\n\n    forEach(prevChildren, (v: any, k: string) => {\n      if (route.value.component) {\n        this.deactiveRouteAndItsChildren(v, childOutletMap);\n      } else {\n        this.deactiveRouteAndItsChildren(v, parentOutletMap);\n      }\n    });\n\n    if (outlet && outlet.isActivated) {\n      outlet.deactivate();\n    }\n  }\n}\n\nfunction ActivateRoutes_tsickle_Closure_declarations() {\n/** @type {?} */\nActivateRoutes.prototype.routeReuseStrategy;\n/** @type {?} */\nActivateRoutes.prototype.futureState;\n/** @type {?} */\nActivateRoutes.prototype.currState;\n}\n\n/**\n * @param {?} node\n * @return {?}\n */\nfunction advanceActivatedRouteNodeAndItsChildren(node: TreeNode<ActivatedRoute>): void {\n  advanceActivatedRoute(node.value);\n  node.children.forEach(advanceActivatedRouteNodeAndItsChildren);\n}\n/**\n * @param {?} snapshot\n * @return {?}\n */\nfunction parentLoadedConfig(snapshot: ActivatedRouteSnapshot): LoadedRouterConfig {\n  let /** @type {?} */ s = snapshot.parent;\n  while (s) {\n    const /** @type {?} */ c: any = s._routeConfig;\n    if (c && c._loadedConfig) return c._loadedConfig;\n    if (c && c.component) return null;\n    s = s.parent;\n  }\n  return null;\n}\n/**\n * @param {?} snapshot\n * @return {?}\n */\nfunction closestLoadedConfig(snapshot: ActivatedRouteSnapshot): LoadedRouterConfig {\n  if (!snapshot) return null;\n\n  let /** @type {?} */ s = snapshot.parent;\n  while (s) {\n    const /** @type {?} */ c: any = s._routeConfig;\n    if (c && c._loadedConfig) return c._loadedConfig;\n    s = s.parent;\n  }\n  return null;\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction nodeChildrenAsMap(node: TreeNode<any>) {\n  return node ? node.children.reduce((m: any, c: TreeNode<any>) => {\n    m[c.value.outlet] = c;\n    return m;\n  }, {}) : {};\n}\n/**\n * @param {?} outletMap\n * @param {?} route\n * @return {?}\n */\nfunction getOutlet(outletMap: RouterOutletMap, route: ActivatedRoute): RouterOutlet {\n  const /** @type {?} */ outlet = outletMap._outlets[route.outlet];\n  if (!outlet) {\n    const /** @type {?} */ componentName = ( /** @type {?} */((<any>route.component))).name;\n    if (route.outlet === PRIMARY_OUTLET) {\n      throw new Error(`Cannot find primary outlet to load '${componentName}'`);\n    } else {\n      throw new Error(`Cannot find the outlet ${route.outlet} to load '${componentName}'`);\n    }\n  }\n  return outlet;\n}\n/**\n * @param {?} commands\n * @return {?}\n */\nfunction validateCommands(commands: string[]): void {\n  for (let /** @type {?} */ i = 0; i < commands.length; i++) {\n    const /** @type {?} */ cmd = commands[i];\n    if (cmd == null) {\n      throw new Error(`The requested path contains ${cmd} segment at index ${i}`);\n    }\n  }\n}\n"]}