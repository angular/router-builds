{"version":3,"sources":["../../../../modules/@angular/router/src/shared.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAOH;;;;GAIG;AACH,MAAM,CAAC,IAAA,gBAAA,CAAM,cAAA,GAAiB,SAAA,CAAU;AAWxC,IAAM,gBAAgB,CAAhB,0BAAA,GAA6B,4BAAA,CAA6B;AAChE;;;GAGG;AACH,MAHC,mCAAA,OAAA;IAIC,IAAM,gBAAgB,CAHhB,KAAA,GAAQ,KAAA,CAAM,4BAAC,GAA8B,OAAA,CAAQ,CAAC;IAI5D,CAAkB,CAAE,KAHV,CAAA,CAAI,CAAC,0BAAC,CAA0B,GAAG,IAAA,CAAK;IAIlD,MAAM,CAHC,KAAA,CAAM;AAIf,CAAC;AACD;;;GAGG;AACH,MANC,qCAAA,KAAA;IAOC,MAAM,CANC,CAAA,CAAA,KAAU,CAAA,CAAI,CAAC,0BAAC,CAA0B,CAAC;AAOpD,CAAC;AACD;;;;;GAKG;AACH,MAXC,4BAYG,QAAsB,EAAE,YAA6B,EAAE,KAAY;IACrE,IAAM,gBAAgB,CAXhB,IAAA,GAAO,KAAA,CAAM,IAAC,CAAI;IAYxB,IAAM,gBAAgB,CAXhB,KAAA,GAAQ,IAAA,CAAK,KAAC,CAAK,GAAC,CAAG,CAAC;IAY9B,IAAM,gBAAgB,CAXhB,SAAA,GAAyC,EAAA,CAAG;IAYlD,IAAM,gBAAgB,CAXhB,QAAA,GAAyB,EAAA,CAAG;IAalC,IAAI,gBAAgB,CAXhB,YAAA,GAAe,CAAA,CAAE;IAarB,GAAG,CAAC,CAAC,IAXC,gBAAA,CAAG,CAAA,GAAI,CAAA,EAAG,CAAA,GAAI,KAAA,CAAM,MAAC,EAAO,EAAA,CAAG,EAAE,CAAA;QAYrC,EAAE,CAAC,CAAC,YAXC,IAAe,QAAA,CAAS,MAAC,CAAM;YAAC,MAAA,CAAO,IAAA,CAAK;QAYjD,IAAM,gBAAgB,CAXhB,OAAA,GAAU,QAAA,CAAS,YAAC,CAAY,CAAC;QAavC,IAAM,gBAAgB,CAXhB,CAAA,GAAI,KAAA,CAAM,CAAC,CAAC,CAAC;QAYnB,IAAM,gBAAgB,CAXhB,UAAA,GAAa,CAAA,CAAE,UAAC,CAAU,GAAC,CAAG,CAAC;QAarC,EAAE,CAAC,CAAC,CAXC,UAAC,IAAa,CAAA,KAAM,OAAA,CAAQ,IAAC,CAAI;YAAC,MAAA,CAAO,IAAA,CAAK;QAYnD,EAAE,CAAC,CAAC,UAXC,CAAU,CAAC,CAAA;YAYd,SAAS,CAXC,CAAC,CAAC,SAAC,CAAS,CAAC,CAAC,CAAC,GAAG,OAAA,CAAQ;QAYtC,CAAC;QACD,QAAQ,CAXC,IAAC,CAAI,OAAC,CAAO,CAAC;QAYvB,YAAY,EAXC,CAAE;IAYjB,CAAC;IAED,EAAE,CAAC,CAAC,KAXC,CAAK,SAAC,KAAa,MAAA;QAYpB,CAAC,YAXC,CAAY,WAAC,EAAW,IAAK,YAAA,GAAe,QAAA,CAAS,MAAC,CAAM,CAAC,CAAC,CAAA;QAYlE,MAAM,CAXC,IAAA,CAAK;IAYd,CAAC;IAXC,IAAA,CAAK,CAAA;QAYL,MAAM,CAXC,EAAA,QAAE,UAAA,EAAS,SAAA,WAAA,EAAU,CAAC;IAY/B,CAAC;AACH,CAAC","file":"shared.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Route, UrlMatchResult} from './config';\nimport {UrlSegment, UrlSegmentGroup} from './url_tree';\n\n\n/**\n * @whatItDoes Name of the primary outlet.\n *\n * @stable\n */\nexport const /** @type {?} */ PRIMARY_OUTLET = 'primary';\n\n/**\n * A collection of parameters.\n *\n * @stable\n */\nexport type Params = {\n  [key: string]: any\n};\n\nconst /** @type {?} */ NAVIGATION_CANCELING_ERROR = 'ngNavigationCancelingError';\n/**\n * @param {?} message\n * @return {?}\n */\nexport function navigationCancelingError(message: string) {\n  const /** @type {?} */ error = Error('NavigationCancelingError: ' + message);\n  ( /** @type {?} */((error as any)))[NAVIGATION_CANCELING_ERROR] = true;\n  return error;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nexport function isNavigationCancelingError(error: Error) {\n  return ( /** @type {?} */((error as any)))[NAVIGATION_CANCELING_ERROR];\n}\n/**\n * @param {?} segments\n * @param {?} segmentGroup\n * @param {?} route\n * @return {?}\n */\nexport function defaultUrlMatcher(\n    segments: UrlSegment[], segmentGroup: UrlSegmentGroup, route: Route): UrlMatchResult {\n  const /** @type {?} */ path = route.path;\n  const /** @type {?} */ parts = path.split('/');\n  const /** @type {?} */ posParams: {[key: string]: UrlSegment} = {};\n  const /** @type {?} */ consumed: UrlSegment[] = [];\n\n  let /** @type {?} */ currentIndex = 0;\n\n  for (let /** @type {?} */ i = 0; i < parts.length; ++i) {\n    if (currentIndex >= segments.length) return null;\n    const /** @type {?} */ current = segments[currentIndex];\n\n    const /** @type {?} */ p = parts[i];\n    const /** @type {?} */ isPosParam = p.startsWith(':');\n\n    if (!isPosParam && p !== current.path) return null;\n    if (isPosParam) {\n      posParams[p.substring(1)] = current;\n    }\n    consumed.push(current);\n    currentIndex++;\n  }\n\n  if (route.pathMatch === 'full' &&\n      (segmentGroup.hasChildren() || currentIndex < segments.length)) {\n    return null;\n  } else {\n    return {consumed, posParams};\n  }\n}\n"]}