{"version":3,"sources":["../../../../modules/@angular/router/src/shared.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAOH;;;;GAIG;AACH,OAAO,MAAA,gBAAA,CAAM,cAAA,GAAiB,SAAA,CAAU;AAUxC,8CACC,KAAA;IACD;;OAEG;IACH,YAFqB,OAAS;QAG1B,MAAM,OAAO,CAAC,CAAC;QAHE,YAAA,GAAA,OAAA,CAAS;QAI1B,IAAI,CAAC,KAAK,GAAG,CAAM,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC;IAC/C,CAAC;IACH;;OAEG;IACH,QALG,KAAoB,MAAA,CAAO,IAAA,CAAK,OAAC,CAAO,CAAC,CAAA;AAM5C,CAAC;AAED;IACA,gBAAgB;IAChB,wBAAwB,CAAC,SAAS,CAAC,KAAK,CAAC;IACzC,gBAAgB;IAChB,wBAAwB,CAAC,SAAS,CAAC,OAAO,CAAC;AAC3C,CAAC;AAED;;;;;GAKG;AACH,kCACI,QAAsB,EAAE,YAA6B,EAAE,KAAY;IACrE,MAAM,gBAAgB,CAlBhB,IAAA,GAAO,KAAA,CAAM,IAAC,CAAI;IAmBxB,MAAM,gBAAgB,CAlBhB,KAAA,GAAQ,IAAA,CAAK,KAAC,CAAK,GAAC,CAAG,CAAC;IAmB9B,MAAM,gBAAgB,CAlBhB,SAAA,GAAyC,EAAA,CAAG;IAmBlD,MAAM,gBAAgB,CAlBhB,QAAA,GAAyB,EAAA,CAAG;IAoBlC,IAAI,gBAAgB,CAlBhB,YAAA,GAAe,CAAA,CAAE;IAoBrB,GAAG,CAAC,CAAC,IAlBC,gBAAA,CAAG,CAAA,GAAI,CAAA,EAAG,CAAA,GAAI,KAAA,CAAM,MAAC,EAAO,EAAA,CAAG,EAAE,CAAA;QAmBrC,EAAE,CAAC,CAAC,YAlBC,IAAe,QAAA,CAAS,MAAC,CAAM;YAAC,MAAA,CAAO,IAAA,CAAK;QAmBjD,MAAM,gBAAgB,CAlBhB,OAAA,GAAU,QAAA,CAAS,YAAC,CAAY,CAAC;QAoBvC,MAAM,gBAAgB,CAlBhB,CAAA,GAAI,KAAA,CAAM,CAAC,CAAC,CAAC;QAmBnB,MAAM,gBAAgB,CAlBhB,UAAA,GAAa,CAAA,CAAE,UAAC,CAAU,GAAC,CAAG,CAAC;QAoBrC,EAAE,CAAC,CAAC,CAlBC,UAAC,IAAa,CAAA,KAAM,OAAA,CAAQ,IAAC,CAAI;YAAC,MAAA,CAAO,IAAA,CAAK;QAmBnD,EAAE,CAAC,CAAC,UAlBC,CAAU,CAAC,CAAA;YAmBd,SAAS,CAlBC,CAAC,CAAC,SAAC,CAAS,CAAC,CAAC,CAAC,GAAG,OAAA,CAAQ;QAmBtC,CAAC;QACD,QAAQ,CAlBC,IAAC,CAAI,OAAC,CAAO,CAAC;QAmBvB,YAAY,EAlBC,CAAE;IAmBjB,CAAC;IAED,EAAE,CAAC,CAAC,KAlBC,CAAK,SAAC,KAAa,MAAA;QAmBpB,CAAC,YAlBC,CAAY,WAAC,EAAW,IAAK,YAAA,GAAe,QAAA,CAAS,MAAC,CAAM,CAAC,CAAC,CAAA;QAmBlE,MAAM,CAlBC,IAAA,CAAK;IAmBd,CAAC;IAlBC,IAAA,CAAK,CAAA;QAmBL,MAAM,CAlBC,EAAA,QAAE,EAAS,SAAA,EAAU,CAAC;IAmB/B,CAAC;AACH,CAAC","file":"shared.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Route, UrlMatchResult} from './config';\nimport {UrlSegment, UrlSegmentGroup} from './url_tree';\n\n\n/**\n * @whatItDoes Name of the primary outlet.\n *\n * @stable\n */\nexport const /** @type {?} */ PRIMARY_OUTLET = 'primary';\n\n/**\n * A collection of parameters.\n *\n * @stable\n */\nexport type Params = {\n  [key: string]: any\n};\nexport class NavigationCancelingError extends Error {\npublic stack: any;\n/**\n * @param {?} message\n */\nconstructor(public message: string) {\n    super(message);\n    this.stack = (<any>new Error(message)).stack;\n  }\n/**\n * @return {?}\n */\ntoString(): string { return this.message; }\n}\n\nfunction NavigationCancelingError_tsickle_Closure_declarations() {\n/** @type {?} */\nNavigationCancelingError.prototype.stack;\n/** @type {?} */\nNavigationCancelingError.prototype.message;\n}\n\n/**\n * @param {?} segments\n * @param {?} segmentGroup\n * @param {?} route\n * @return {?}\n */\nexport function defaultUrlMatcher(\n    segments: UrlSegment[], segmentGroup: UrlSegmentGroup, route: Route): UrlMatchResult {\n  const /** @type {?} */ path = route.path;\n  const /** @type {?} */ parts = path.split('/');\n  const /** @type {?} */ posParams: {[key: string]: UrlSegment} = {};\n  const /** @type {?} */ consumed: UrlSegment[] = [];\n\n  let /** @type {?} */ currentIndex = 0;\n\n  for (let /** @type {?} */ i = 0; i < parts.length; ++i) {\n    if (currentIndex >= segments.length) return null;\n    const /** @type {?} */ current = segments[currentIndex];\n\n    const /** @type {?} */ p = parts[i];\n    const /** @type {?} */ isPosParam = p.startsWith(':');\n\n    if (!isPosParam && p !== current.path) return null;\n    if (isPosParam) {\n      posParams[p.substring(1)] = current;\n    }\n    consumed.push(current);\n    currentIndex++;\n  }\n\n  if (route.pathMatch === 'full' &&\n      (segmentGroup.hasChildren() || currentIndex < segments.length)) {\n    return null;\n  } else {\n    return {consumed, posParams};\n  }\n}\n"]}