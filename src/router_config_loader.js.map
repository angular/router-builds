{"version":3,"sources":["../../../../modules/@angular/router/src/router_config_loader.ts"],"names":[],"mappings":"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","file":"router_config_loader.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Compiler, ComponentFactoryResolver, InjectionToken, Injector, NgModuleFactory, NgModuleFactoryLoader} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {fromPromise} from 'rxjs/observable/fromPromise';\nimport {of } from 'rxjs/observable/of';\nimport {map} from 'rxjs/operator/map';\nimport {mergeMap} from 'rxjs/operator/mergeMap';\n\nimport {LoadChildren, Route} from './config';\nimport {flatten, wrapIntoObservable} from './utils/collection';\n\n\n/**\n * @docsNotRequired\n * @experimental\n */\nexport const /** @type {?} */ ROUTES = new InjectionToken<Route[][]>('ROUTES');\nexport class LoadedRouterConfig {\n/**\n * @param {?} routes\n * @param {?} injector\n * @param {?} factoryResolver\n * @param {?} injectorFactory\n */\nconstructor(\npublic routes: Route[],\npublic injector: Injector,\npublic factoryResolver: ComponentFactoryResolver,\npublic injectorFactory: Function) {}\n}\n\nfunction LoadedRouterConfig_tsickle_Closure_declarations() {\n/** @type {?} */\nLoadedRouterConfig.prototype.routes;\n/** @type {?} */\nLoadedRouterConfig.prototype.injector;\n/** @type {?} */\nLoadedRouterConfig.prototype.factoryResolver;\n/** @type {?} */\nLoadedRouterConfig.prototype.injectorFactory;\n}\n\nexport class RouterConfigLoader {\n/**\n * @param {?} loader\n * @param {?} compiler\n */\nconstructor(private loader: NgModuleFactoryLoader,\nprivate compiler: Compiler) {}\n/**\n * @param {?} parentInjector\n * @param {?} loadChildren\n * @return {?}\n */\nload(parentInjector: Injector, loadChildren: LoadChildren): Observable<LoadedRouterConfig> {\n    return map.call(this.loadModuleFactory(loadChildren), (r: NgModuleFactory<any>) => {\n      const /** @type {?} */ ref = r.create(parentInjector);\n      const /** @type {?} */ injectorFactory = (parent: Injector) => r.create(parent).injector;\n      return new LoadedRouterConfig(\n          flatten(ref.injector.get(ROUTES)), ref.injector, ref.componentFactoryResolver,\n          injectorFactory);\n    });\n  }\n/**\n * @param {?} loadChildren\n * @return {?}\n */\nprivate loadModuleFactory(loadChildren: LoadChildren): Observable<NgModuleFactory<any>> {\n    if (typeof loadChildren === 'string') {\n      return fromPromise(this.loader.load(loadChildren));\n    } else {\n      const /** @type {?} */ offlineMode = this.compiler instanceof Compiler;\n      return mergeMap.call(\n          wrapIntoObservable(loadChildren()),\n          (t: any) => offlineMode ? of ( /** @type {?} */((<any>t))) : fromPromise(this.compiler.compileModuleAsync(t)));\n    }\n  }\n}\n\nfunction RouterConfigLoader_tsickle_Closure_declarations() {\n/** @type {?} */\nRouterConfigLoader.prototype.loader;\n/** @type {?} */\nRouterConfigLoader.prototype.compiler;\n}\n\n"]}