{"version":3,"file":"router_module.js","sourceRoot":"","sources":["../../../../modules/@angular/router/src/router_module.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {APP_BASE_HREF, HashLocationStrategy, Location, LocationStrategy, PathLocationStrategy, PlatformLocation} from '@angular/common';\nimport {ANALYZE_FOR_ENTRY_COMPONENTS, APP_BOOTSTRAP_LISTENER, ApplicationRef, Compiler, ComponentRef, Inject, Injector, ModuleWithProviders, NgModule, NgModuleFactoryLoader, NgProbeToken, OpaqueToken, Optional, Provider, SkipSelf, SystemJsNgModuleLoader} from '@angular/core';\n\nimport {Route, Routes} from './config';\nimport {RouterLink, RouterLinkWithHref} from './directives/router_link';\nimport {RouterLinkActive} from './directives/router_link_active';\nimport {RouterOutlet} from './directives/router_outlet';\nimport {getDOM} from './private_import_platform-browser';\nimport {RouteReuseStrategy} from './route_reuse_strategy';\nimport {ErrorHandler, Router} from './router';\nimport {ROUTES} from './router_config_loader';\nimport {RouterOutletMap} from './router_outlet_map';\nimport {NoPreloading, PreloadAllModules, PreloadingStrategy, RouterPreloader} from './router_preloader';\nimport {ActivatedRoute} from './router_state';\nimport {UrlHandlingStrategy} from './url_handling_strategy';\nimport {DefaultUrlSerializer, UrlSerializer} from './url_tree';\nimport {flatten} from './utils/collection';\n\n\n\n/**\n * @whatItDoes Contains a list of directives\n * @stable\n */\nconst /** @type {?} */ ROUTER_DIRECTIVES = [RouterOutlet, RouterLink, RouterLinkWithHref, RouterLinkActive];\n\n/**\n * @whatItDoes Is used in DI to configure the router.\n * @stable\n */\nexport const /** @type {?} */ ROUTER_CONFIGURATION = new OpaqueToken('ROUTER_CONFIGURATION');\n\n/**\n * @docsNotRequired\n */\nexport const /** @type {?} */ ROUTER_FORROOT_GUARD = new OpaqueToken('ROUTER_FORROOT_GUARD');\n\nexport const /** @type {?} */ ROUTER_PROVIDERS: Provider[] = [\n  Location,\n  {provide: UrlSerializer, useClass: DefaultUrlSerializer},\n  {\n    provide: Router,\n    useFactory: setupRouter,\n    deps: [\n      ApplicationRef, UrlSerializer, RouterOutletMap, Location, Injector, NgModuleFactoryLoader,\n      Compiler, ROUTES, ROUTER_CONFIGURATION, [UrlHandlingStrategy, new Optional()],\n      [RouteReuseStrategy, new Optional()]\n    ]\n  },\n  RouterOutletMap,\n  {provide: ActivatedRoute, useFactory: rootRoute, deps: [Router]},\n  {provide: NgModuleFactoryLoader, useClass: SystemJsNgModuleLoader},\n  RouterPreloader,\n  NoPreloading,\n  PreloadAllModules,\n  {provide: ROUTER_CONFIGURATION, useValue: {enableTracing: false}},\n];\n/**\n * @return {?}\n */\nexport function routerNgProbeToken() {\n  return new NgProbeToken('Router', Router);\n}\n/**\n *  *\n  * *\n  * RouterModule can be imported multiple times: once per lazily-loaded bundle.\n  * Since the router deals with a global shared resource--location, we cannot have\n  * more than one router service active.\n  * *\n  * That is why there are two ways to create the module: `RouterModule.forRoot` and\n  * `RouterModule.forChild`.\n  * *\n  * * `forRoot` creates a module that contains all the directives, the given routes, and the router\n  * service itself.\n  * * `forChild` creates a module that contains all the directives and the given routes, but does not\n  * include the router service.\n  * *\n  * When registered at the root, the module should be used as follows\n  * *\n  * ```\n  * imports: [RouterModule.forRoot(ROUTES)]\n  * })\n  * class MyNgModule {}\n  * ```\n  * *\n  * For submodules and lazy loaded submodules the module should be used as follows:\n  * *\n  * ```\n  * imports: [RouterModule.forChild(ROUTES)]\n  * })\n  * class MyNgModule {}\n  * ```\n  * *\n  * *\n  * Managing state transitions is one of the hardest parts of building applications. This is\n  * especially true on the web, where you also need to ensure that the state is reflected in the URL.\n  * In addition, we often want to split applications into multiple bundles and load them on demand.\n  * Doing this transparently is not trivial.\n  * *\n  * The Angular 2 router solves these problems. Using the router, you can declaratively specify\n  * application states, manage state transitions while taking care of the URL, and load bundles on\n  * demand.\n  * *\n  * [Read this developer guide](https://angular.io/docs/ts/latest/guide/router.html) to get an\n  * overview of how the router should be used.\n  * *\n */\nexport class RouterModule {\n/**\n * @param {?} guard\n */\nconstructor(  guard: any) {}\n/**\n *  Creates a module with all the router providers and directives. It also optionally sets up an\n  * application listener to perform an initial navigation.\n  * *\n  * Options:\n  * * `enableTracing` makes the router log all its internal events to the console.\n  * * `useHash` enables the location strategy that uses the URL fragment instead of the history\n  * API.\n  * * `initialNavigation` disables the initial navigation.\n  * * `errorHandler` provides a custom error handler.\n * @param {?} routes\n * @param {?=} config\n * @return {?}\n */\nstatic forRoot(routes: Routes, config?: ExtraOptions): ModuleWithProviders {\n    return {\n      ngModule: RouterModule,\n      providers: [\n        ROUTER_PROVIDERS,\n        provideRoutes(routes),\n        {\n          provide: ROUTER_FORROOT_GUARD,\n          useFactory: provideForRootGuard,\n          deps: [[Router, new Optional(), new SkipSelf()]]\n        },\n        {provide: ROUTER_CONFIGURATION, useValue: config ? config : {}},\n        {\n          provide: LocationStrategy,\n          useFactory: provideLocationStrategy,\n          deps: [\n            PlatformLocation, [new Inject(APP_BASE_HREF), new Optional()], ROUTER_CONFIGURATION\n          ]\n        },\n        {\n          provide: PreloadingStrategy,\n          useExisting: config && config.preloadingStrategy ? config.preloadingStrategy :\n                                                             NoPreloading\n        },\n        {provide: NgProbeToken, multi: true, useFactory: routerNgProbeToken},\n        provideRouterInitializer(),\n      ],\n    };\n  }\n/**\n *  Creates a module with all the router directives and a provider registering routes.\n * @param {?} routes\n * @return {?}\n */\nstatic forChild(routes: Routes): ModuleWithProviders {\n    return {ngModule: RouterModule, providers: [provideRoutes(routes)]};\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{declarations: ROUTER_DIRECTIVES, exports: ROUTER_DIRECTIVES}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [ROUTER_FORROOT_GUARD, ] }, ]},\n];\n}\n\nfunction RouterModule_tsickle_Closure_declarations() {\n /** @type {?} */\nRouterModule.decorators;\n /**\n  * @nocollapse\n  * @type {?}\n  */\nRouterModule.ctorParameters;\n}\n\n/**\n * @param {?} platformLocationStrategy\n * @param {?} baseHref\n * @param {?=} options\n * @return {?}\n */\nexport function provideLocationStrategy(\n    platformLocationStrategy: PlatformLocation, baseHref: string, options: ExtraOptions = {}) {\n  return options.useHash ? new HashLocationStrategy(platformLocationStrategy, baseHref) :\n                           new PathLocationStrategy(platformLocationStrategy, baseHref);\n}\n/**\n * @param {?} router\n * @return {?}\n */\nexport function provideForRootGuard(router: Router): any {\n  if (router) {\n    throw new Error(\n        `RouterModule.forRoot() called twice. Lazy loaded modules should use RouterModule.forChild() instead.`);\n  }\n  return 'guarded';\n}\n/**\n *  *\n  * *\n  * ```\n  * imports: [RouterModule.forChild(ROUTES)],\n  * providers: [provideRoutes(EXTRA_ROUTES)]\n  * })\n  * class MyNgModule {}\n  * ```\n  * *\n * @param {?} routes\n * @return {?}\n */\nexport function provideRoutes(routes: Routes): any {\n  return [\n    {provide: ANALYZE_FOR_ENTRY_COMPONENTS, multi: true, useValue: routes},\n    {provide: ROUTES, multi: true, useValue: routes},\n  ];\n}\n\n\n/**\n * @whatItDoes Represents options to configure the router.\n *\n * @stable\n */\nexport interface ExtraOptions {\n  /**\n   * Makes the router log all its internal events to the console.\n   */\n  enableTracing?: boolean;\n\n  /**\n   * Enables the location strategy that uses the URL fragment instead of the history API.\n   */\n  useHash?: boolean;\n\n  /**\n   * Disables the initial navigation.\n   */\n  initialNavigation?: boolean;\n\n  /**\n   * A custom error handler.\n   */\n  errorHandler?: ErrorHandler;\n\n  /**\n   * Configures a preloading strategy. See {@link PreloadAllModules}.\n   */\n  preloadingStrategy?: any;\n}\n/**\n * @param {?} ref\n * @param {?} urlSerializer\n * @param {?} outletMap\n * @param {?} location\n * @param {?} injector\n * @param {?} loader\n * @param {?} compiler\n * @param {?} config\n * @param {?=} opts\n * @param {?=} urlHandlingStrategy\n * @param {?=} routeReuseStrategy\n * @return {?}\n */\nexport function setupRouter(\n    ref: ApplicationRef, urlSerializer: UrlSerializer, outletMap: RouterOutletMap,\n    location: Location, injector: Injector, loader: NgModuleFactoryLoader, compiler: Compiler,\n    config: Route[][], opts: ExtraOptions = {}, urlHandlingStrategy?: UrlHandlingStrategy,\n    routeReuseStrategy?: RouteReuseStrategy) {\n  const /** @type {?} */ router = new Router(\n      null, urlSerializer, outletMap, location, injector, loader, compiler, flatten(config));\n\n  if (urlHandlingStrategy) {\n    router.urlHandlingStrategy = urlHandlingStrategy;\n  }\n\n  if (routeReuseStrategy) {\n    router.routeReuseStrategy = routeReuseStrategy;\n  }\n\n  if (opts.errorHandler) {\n    router.errorHandler = opts.errorHandler;\n  }\n\n  if (opts.enableTracing) {\n    const /** @type {?} */ dom = getDOM();\n    router.events.subscribe(e => {\n      dom.logGroup(`Router Event: ${( /** @type {?} */((<any>e.constructor))).name}`);\n      dom.log(e.toString());\n      dom.log(e);\n      dom.logGroupEnd();\n    });\n  }\n\n  return router;\n}\n/**\n * @param {?} router\n * @return {?}\n */\nexport function rootRoute(router: Router): ActivatedRoute {\n  return router.routerState.root;\n}\n/**\n * @param {?} router\n * @param {?} ref\n * @param {?} preloader\n * @param {?} opts\n * @return {?}\n */\nexport function initialRouterNavigation(\n    router: Router, ref: ApplicationRef, preloader: RouterPreloader, opts: ExtraOptions) {\n  return (bootstrappedComponentRef: ComponentRef<any>) => {\n\n    if (bootstrappedComponentRef !== ref.components[0]) {\n      return;\n    }\n\n    router.resetRootComponentType(ref.componentTypes[0]);\n    preloader.setUpPreloading();\n    if (opts.initialNavigation === false) {\n      router.setUpLocationChangeListener();\n    } else {\n      router.initialNavigation();\n    }\n  };\n}\n\n/**\n * A token for the router initializer that will be called after the app is bootstrapped.\n *\n * @experimental\n */\nexport const /** @type {?} */ ROUTER_INITIALIZER = new OpaqueToken('Router Initializer');\n/**\n * @return {?}\n */\nexport function provideRouterInitializer() {\n  return [\n    {\n      provide: ROUTER_INITIALIZER,\n      useFactory: initialRouterNavigation,\n      deps: [Router, ApplicationRef, RouterPreloader, ROUTER_CONFIGURATION]\n    },\n    {provide: APP_BOOTSTRAP_LISTENER, multi: true, useExisting: ROUTER_INITIALIZER},\n  ];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}