{"version":3,"sources":["../../../../../modules/@angular/router/src/directives/router_outlet.ts"],"names":[],"mappings":"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","file":"router_outlet.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Attribute, ComponentFactory, ComponentFactoryResolver, ComponentRef, Directive, EventEmitter, Injector, OnDestroy, Output, ReflectiveInjector, ResolvedReflectiveProvider, ViewContainerRef} from '@angular/core';\n\nimport {RouterOutletMap} from '../router_outlet_map';\nimport {ActivatedRoute} from '../router_state';\nimport {PRIMARY_OUTLET} from '../shared';\n/**\n * \\@whatItDoes Acts as a placeholder that Angular dynamically fills based on the current router\n * state.\n * \n * \\@howToUse \n * \n * ```\n * <router-outlet></router-outlet>\n * <router-outlet name='left'></router-outlet>\n * <router-outlet name='right'></router-outlet>\n * ```\n * \n * A router outlet will emit an activate event any time a new component is being instantiated,\n * and a deactivate event when it is being destroyed.\n * \n * ```\n * <router-outlet\n *   (activate)='onActivate($event)'\n *   (deactivate)='onDeactivate($event)'></router-outlet>\n * ```\n * \\@ngModule RouterModule\n * \n * \\@stable\n */\nexport class RouterOutlet implements OnDestroy {\nprivate activated: ComponentRef<any>;\nprivate _activatedRoute: ActivatedRoute;\npublic outletMap: RouterOutletMap;\n\n   activateEvents = new EventEmitter<any>();\n   deactivateEvents = new EventEmitter<any>();\n/**\n * @param {?} parentOutletMap\n * @param {?} location\n * @param {?} resolver\n * @param {?} name\n */\nconstructor(\nprivate parentOutletMap: RouterOutletMap,\nprivate location: ViewContainerRef,\nprivate resolver: ComponentFactoryResolver,\nprivate name: string) {\n    parentOutletMap.registerOutlet(name ? name : PRIMARY_OUTLET, this);\n  }\n/**\n * @return {?}\n */\nngOnDestroy(): void { this.parentOutletMap.removeOutlet(this.name ? this.name : PRIMARY_OUTLET); }\n/**\n * @return {?}\n */\nget locationInjector(): Injector { return this.location.injector; }\n/**\n * @return {?}\n */\nget locationFactoryResolver(): ComponentFactoryResolver { return this.resolver; }\n/**\n * @return {?}\n */\nget isActivated(): boolean { return !!this.activated; }\n/**\n * @return {?}\n */\nget component(): Object {\n    if (!this.activated) throw new Error('Outlet is not activated');\n    return this.activated.instance;\n  }\n/**\n * @return {?}\n */\nget activatedRoute(): ActivatedRoute {\n    if (!this.activated) throw new Error('Outlet is not activated');\n    return this._activatedRoute;\n  }\n/**\n * @return {?}\n */\ndetach(): ComponentRef<any> {\n    if (!this.activated) throw new Error('Outlet is not activated');\n    this.location.detach();\n    const /** @type {?} */ r = this.activated;\n    this.activated = null;\n    this._activatedRoute = null;\n    return r;\n  }\n/**\n * @param {?} ref\n * @param {?} activatedRoute\n * @return {?}\n */\nattach(ref: ComponentRef<any>, activatedRoute: ActivatedRoute) {\n    this.activated = ref;\n    this._activatedRoute = activatedRoute;\n    this.location.insert(ref.hostView);\n  }\n/**\n * @return {?}\n */\ndeactivate(): void {\n    if (this.activated) {\n      const /** @type {?} */ c = this.component;\n      this.activated.destroy();\n      this.activated = null;\n      this._activatedRoute = null;\n      this.deactivateEvents.emit(c);\n    }\n  }\n/**\n * @param {?} activatedRoute\n * @param {?} resolver\n * @param {?} injector\n * @param {?} providers\n * @param {?} outletMap\n * @return {?}\n */\nactivate(\n      activatedRoute: ActivatedRoute, resolver: ComponentFactoryResolver, injector: Injector,\n      providers: ResolvedReflectiveProvider[], outletMap: RouterOutletMap): void {\n    if (this.isActivated) {\n      throw new Error('Cannot activate an already activated outlet');\n    }\n\n    this.outletMap = outletMap;\n    this._activatedRoute = activatedRoute;\n\n    const /** @type {?} */ snapshot = activatedRoute._futureSnapshot;\n    const /** @type {?} */ component: any = /** @type {?} */(( <any>snapshot._routeConfig.component));\n    const /** @type {?} */ factory = resolver.resolveComponentFactory(component);\n\n    const /** @type {?} */ inj = ReflectiveInjector.fromResolvedProviders(providers, injector);\n    this.activated = this.location.createComponent(factory, this.location.length, inj, []);\n    this.activated.changeDetectorRef.detectChanges();\n\n    this.activateEvents.emit(this.activated.instance);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: 'router-outlet'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: RouterOutletMap, },\n{type: ViewContainerRef, },\n{type: ComponentFactoryResolver, },\n{type: undefined, decorators: [{ type: Attribute, args: ['name', ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'activateEvents': [{ type: Output, args: ['activate', ] },],\n'deactivateEvents': [{ type: Output, args: ['deactivate', ] },],\n};\n}\n\nfunction RouterOutlet_tsickle_Closure_declarations() {\n/** @type {?} */\nRouterOutlet.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRouterOutlet.ctorParameters;\n/** @type {?} */\nRouterOutlet.propDecorators;\n/** @type {?} */\nRouterOutlet.prototype.activated;\n/** @type {?} */\nRouterOutlet.prototype._activatedRoute;\n/** @type {?} */\nRouterOutlet.prototype.outletMap;\n/** @type {?} */\nRouterOutlet.prototype.activateEvents;\n/** @type {?} */\nRouterOutlet.prototype.deactivateEvents;\n/** @type {?} */\nRouterOutlet.prototype.parentOutletMap;\n/** @type {?} */\nRouterOutlet.prototype.location;\n/** @type {?} */\nRouterOutlet.prototype.resolver;\n/** @type {?} */\nRouterOutlet.prototype.name;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}