{"version":3,"sources":["../../../../../modules/@angular/router/src/directives/router_link_active.ts"],"names":[],"mappings":"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","file":"router_link_active.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AfterContentInit, ChangeDetectorRef, ContentChildren, Directive, ElementRef, Input, OnChanges, OnDestroy, QueryList, Renderer, SimpleChanges} from '@angular/core/index';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {NavigationEnd, Router} from '../router';\n\nimport {RouterLink, RouterLinkWithHref} from './router_link';\n/**\n * \\@whatItDoes Lets you add a CSS class to an element when the link's route becomes active.\n * \n * \\@howToUse \n * \n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\">Bob</a>\n * ```\n * \n * \\@description \n * \n * The RouterLinkActive directive lets you add a CSS class to an element when the link's route\n * becomes active.\n * \n * Consider the following example:\n * \n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\">Bob</a>\n * ```\n * \n * When the url is either '/user' or '/user/bob', the active-link class will\n * be added to the `a` tag. If the url changes, the class will be removed.\n * \n * You can set more than one class, as follows:\n * \n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"class1 class2\">Bob</a>\n * <a routerLink=\"/user/bob\" [routerLinkActive]=\"['class1', 'class2']\">Bob</a>\n * ```\n * \n * You can configure RouterLinkActive by passing `exact: true`. This will add the classes\n * only when the url matches the link exactly.\n * \n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact:\n * true}\">Bob</a>\n * ```\n * \n * You can assign the RouterLinkActive instance to a template variable and directly check\n * the `isActive` status.\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive #rla=\"routerLinkActive\">\n *   Bob {{ rla.isActive ? '(already open)' : ''}}\n * </a>\n * ```\n * \n * Finally, you can apply the RouterLinkActive directive to an ancestor of a RouterLink.\n * \n * ```\n * <div routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact: true}\">\n *   <a routerLink=\"/user/jim\">Jim</a>\n *   <a routerLink=\"/user/bob\">Bob</a>\n * </div>\n * ```\n * \n * This will set the active-link class on the div tag if the url is either '/user/jim' or\n * '/user/bob'.\n * \n * \\@ngModule RouterModule\n * \n * \\@stable\n */\nexport class RouterLinkActive implements OnChanges,\n    OnDestroy, AfterContentInit {\n   links: QueryList<RouterLink>;\n  \n  linksWithHrefs: QueryList<RouterLinkWithHref>;\nprivate classes: string[] = [];\nprivate subscription: Subscription;\nprivate active: boolean = false;\n\n   routerLinkActiveOptions: {exact: boolean} = {exact: false};\n/**\n * @param {?} router\n * @param {?} element\n * @param {?} renderer\n * @param {?} cdr\n */\nconstructor(\nprivate router: Router,\nprivate element: ElementRef,\nprivate renderer: Renderer,\nprivate cdr: ChangeDetectorRef) {\n    this.subscription = router.events.subscribe(s => {\n      if (s instanceof NavigationEnd) {\n        this.update();\n      }\n    });\n  }\n/**\n * @return {?}\n */\nget isActive(): boolean { return this.active; }\n/**\n * @return {?}\n */\nngAfterContentInit(): void {\n    this.links.changes.subscribe(_ => this.update());\n    this.linksWithHrefs.changes.subscribe(_ => this.update());\n    this.update();\n  }\n/**\n * @param {?} data\n * @return {?}\n */\nset routerLinkActive(data: string[]|string) {\n    const /** @type {?} */ classes = Array.isArray(data) ? data : data.split(' ');\n    this.classes = classes.filter(c => !!c);\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void { this.update(); }\n/**\n * @return {?}\n */\nngOnDestroy(): void { this.subscription.unsubscribe(); }\n/**\n * @return {?}\n */\nprivate update(): void {\n    if (!this.links || !this.linksWithHrefs || !this.router.navigated) return;\n    const /** @type {?} */ hasActiveLinks = this.hasActiveLinks();\n\n    // react only when status has changed to prevent unnecessary dom updates\n    if (this.active !== hasActiveLinks) {\n      this.active = hasActiveLinks;\n      this.classes.forEach(\n          c => this.renderer.setElementClass(this.element.nativeElement, c, hasActiveLinks));\n      this.cdr.detectChanges();\n    }\n  }\n/**\n * @param {?} router\n * @return {?}\n */\nprivate isLinkActive(router: Router): (link: (RouterLink|RouterLinkWithHref)) => boolean {\n    return (link: RouterLink | RouterLinkWithHref) =>\n               router.isActive(link.urlTree, this.routerLinkActiveOptions.exact);\n  }\n/**\n * @return {?}\n */\nprivate hasActiveLinks(): boolean {\n    return this.links.some(this.isLinkActive(this.router)) ||\n        this.linksWithHrefs.some(this.isLinkActive(this.router));\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[routerLinkActive]',\n  exportAs: 'routerLinkActive',\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Router, },\n{type: ElementRef, },\n{type: Renderer, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'links': [{ type: ContentChildren, args: [RouterLink, {descendants: true}, ] },],\n'linksWithHrefs': [{ type: ContentChildren, args: [RouterLinkWithHref, {descendants: true}, ] },],\n'routerLinkActiveOptions': [{ type: Input },],\n'routerLinkActive': [{ type: Input },],\n};\n}\n\nfunction RouterLinkActive_tsickle_Closure_declarations() {\n/** @type {?} */\nRouterLinkActive.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRouterLinkActive.ctorParameters;\n/** @type {?} */\nRouterLinkActive.propDecorators;\n/** @type {?} */\nRouterLinkActive.prototype.links;\n/** @type {?} */\nRouterLinkActive.prototype.linksWithHrefs;\n/** @type {?} */\nRouterLinkActive.prototype.classes;\n/** @type {?} */\nRouterLinkActive.prototype.subscription;\n/** @type {?} */\nRouterLinkActive.prototype.active;\n/** @type {?} */\nRouterLinkActive.prototype.routerLinkActiveOptions;\n/** @type {?} */\nRouterLinkActive.prototype.router;\n/** @type {?} */\nRouterLinkActive.prototype.element;\n/** @type {?} */\nRouterLinkActive.prototype.renderer;\n/** @type {?} */\nRouterLinkActive.prototype.cdr;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}