{"version":3,"file":"router_link_active.js","sourceRoot":"","sources":["../../../../../modules/@angular/router/src/directives/router_link_active.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AfterContentInit, ContentChildren, Directive, ElementRef, Input, OnChanges, OnDestroy, QueryList, Renderer} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {NavigationEnd, Router} from '../router';\n\nimport {RouterLink, RouterLinkWithHref} from './router_link';\n/**\n *  *\n  * *\n  * ```\n  * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\">Bob</a>\n  * ```\n  * *\n  * *\n  * The RouterLinkActive directive lets you add a CSS class to an element when the link's route\n  * becomes active.\n  * *\n  * Consider the following example:\n  * *\n  * ```\n  * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\">Bob</a>\n  * ```\n  * *\n  * When the url is either '/user' or '/user/bob', the active-link class will\n  * be added to the `a` tag. If the url changes, the class will be removed.\n  * *\n  * You can set more than one class, as follows:\n  * *\n  * ```\n  * <a routerLink=\"/user/bob\" routerLinkActive=\"class1 class2\">Bob</a>\n  * <a routerLink=\"/user/bob\" [routerLinkActive]=\"['class1', 'class2']\">Bob</a>\n  * ```\n  * *\n  * You can configure RouterLinkActive by passing `exact: true`. This will add the classes\n  * only when the url matches the link exactly.\n  * *\n  * ```\n  * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact:\n  * true}\">Bob</a>\n  * ```\n  * *\n  * You can assign the RouterLinkActive instance to a template variable and directly check\n  * the `isActive` status.\n  * ```\n  * <a routerLink=\"/user/bob\" routerLinkActive #rla=\"routerLinkActive\">\n  * Bob {{ rla.isActive ? '(already open)' : ''}}\n  * </a>\n  * ```\n  * *\n  * Finally, you can apply the RouterLinkActive directive to an ancestor of a RouterLink.\n  * *\n  * ```\n  * <div routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact: true}\">\n  * <a routerLink=\"/user/jim\">Jim</a>\n  * <a routerLink=\"/user/bob\">Bob</a>\n  * </div>\n  * ```\n  * *\n  * This will set the active-link class on the div tag if the url is either '/user/jim' or\n  * '/user/bob'.\n  * *\n  * *\n */\nexport class RouterLinkActive implements OnChanges,\n    OnDestroy, AfterContentInit {\n   links: QueryList<RouterLink>;\n  \n  linksWithHrefs: QueryList<RouterLinkWithHref>;\nprivate classes: string[] = [];\nprivate subscription: Subscription;\n\n   routerLinkActiveOptions: {exact: boolean} = {exact: false};\n/**\n * @param {?} router\n * @param {?} element\n * @param {?} renderer\n */\nconstructor(private router: Router,\nprivate element: ElementRef,\nprivate renderer: Renderer) {\n    this.subscription = router.events.subscribe(s => {\n      if (s instanceof NavigationEnd) {\n        this.update();\n      }\n    });\n  }\n/**\n * @return {?}\n */\nget isActive(): boolean { return this.hasActiveLink(); }\n/**\n * @return {?}\n */\nngAfterContentInit(): void {\n    this.links.changes.subscribe(s => this.update());\n    this.linksWithHrefs.changes.subscribe(s => this.update());\n    this.update();\n  }\n/**\n * @param {?} data\n * @return {?}\n */\nset routerLinkActive(data: string[]|string) {\n    if (Array.isArray(data)) {\n      this.classes = /** @type {?} */(( <any>data));\n    } else {\n      this.classes = data.split(' ');\n    }\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: {}): any { this.update(); }\n/**\n * @return {?}\n */\nngOnDestroy(): any { this.subscription.unsubscribe(); }\n/**\n * @return {?}\n */\nprivate update(): void {\n    if (!this.links || !this.linksWithHrefs || !this.router.navigated) return;\n\n    const /** @type {?} */ isActive = this.hasActiveLink();\n    this.classes.forEach(c => {\n      if (c) {\n        this.renderer.setElementClass(this.element.nativeElement, c, isActive);\n      }\n    });\n  }\n/**\n * @param {?} router\n * @return {?}\n */\nprivate isLinkActive(router: Router): (link: (RouterLink|RouterLinkWithHref)) => boolean {\n    return (link: RouterLink | RouterLinkWithHref) =>\n               router.isActive(link.urlTree, this.routerLinkActiveOptions.exact);\n  }\n/**\n * @return {?}\n */\nprivate hasActiveLink(): boolean {\n    return this.links.some(this.isLinkActive(this.router)) ||\n        this.linksWithHrefs.some(this.isLinkActive(this.router));\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[routerLinkActive]',\n  exportAs: 'routerLinkActive',\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Router, },\n{type: ElementRef, },\n{type: Renderer, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'links': [{ type: ContentChildren, args: [RouterLink, {descendants: true}, ] },],\n'linksWithHrefs': [{ type: ContentChildren, args: [RouterLinkWithHref, {descendants: true}, ] },],\n'routerLinkActiveOptions': [{ type: Input },],\n'routerLinkActive': [{ type: Input },],\n};\n}\n\nfunction RouterLinkActive_tsickle_Closure_declarations() {\n /** @type {?} */\nRouterLinkActive.decorators;\n /**\n  * @nocollapse\n  * @type {?}\n  */\nRouterLinkActive.ctorParameters;\n /** @type {?} */\nRouterLinkActive.propDecorators;\n /** @type {?} */\nRouterLinkActive.prototype.links;\n /** @type {?} */\nRouterLinkActive.prototype.linksWithHrefs;\n /** @type {?} */\nRouterLinkActive.prototype.classes;\n /** @type {?} */\nRouterLinkActive.prototype.subscription;\n /** @type {?} */\nRouterLinkActive.prototype.routerLinkActiveOptions;\n /** @type {?} */\nRouterLinkActive.prototype.router;\n /** @type {?} */\nRouterLinkActive.prototype.element;\n /** @type {?} */\nRouterLinkActive.prototype.renderer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}