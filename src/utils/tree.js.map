{"version":3,"sources":["../../../../../modules/@angular/router/src/utils/tree.ts"],"names":[],"mappings":"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","file":"tree.js","sourceRoot":"","sourcesContent":["\n/**\n * @license \n * Copyright Google Inc. All Rights Reserved.\n * \n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport class Tree<T> {\n  /** @internal */\n  _root: TreeNode<T>;\n/**\n * @param {?} root\n */\nconstructor(root: TreeNode<T>) { this._root = root; }\n/**\n * @return {?}\n */\nget root(): T { return this._root.value; }\n/**\n * \\@internal\n * @param {?} t\n * @return {?}\n */\nparent(t: T): T {\n    const /** @type {?} */ p = this.pathFromRoot(t);\n    return p.length > 1 ? p[p.length - 2] : null;\n  }\n/**\n * \\@internal\n * @param {?} t\n * @return {?}\n */\nchildren(t: T): T[] {\n    const /** @type {?} */ n = findNode(t, this._root);\n    return n ? n.children.map(t => t.value) : [];\n  }\n/**\n * \\@internal\n * @param {?} t\n * @return {?}\n */\nfirstChild(t: T): T {\n    const /** @type {?} */ n = findNode(t, this._root);\n    return n && n.children.length > 0 ? n.children[0].value : null;\n  }\n/**\n * \\@internal\n * @param {?} t\n * @return {?}\n */\nsiblings(t: T): T[] {\n    const /** @type {?} */ p = findPath(t, this._root, []);\n    if (p.length < 2) return [];\n\n    const /** @type {?} */ c = p[p.length - 2].children.map(c => c.value);\n    return c.filter(cc => cc !== t);\n  }\n/**\n * \\@internal\n * @param {?} t\n * @return {?}\n */\npathFromRoot(t: T): T[] { return findPath(t, this._root, []).map(s => s.value); }\n}\n\nfunction Tree_tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nTree.prototype._root;\n}\n\n/**\n * @param {?} expected\n * @param {?} c\n * @return {?}\n */\nfunction findNode<T>(expected: T, c: TreeNode<T>): TreeNode<T> {\n  if (expected === c.value) return c;\n  for (const /** @type {?} */ cc of c.children) {\n    const /** @type {?} */ r = findNode(expected, cc);\n    if (r) return r;\n  }\n  return null;\n}\n/**\n * @param {?} expected\n * @param {?} c\n * @param {?} collected\n * @return {?}\n */\nfunction findPath<T>(expected: T, c: TreeNode<T>, collected: TreeNode<T>[]): TreeNode<T>[] {\n  collected.push(c);\n  if (expected === c.value) return collected;\n\n  for (const /** @type {?} */ cc of c.children) {\n    const /** @type {?} */ cloned = collected.slice(0);\n    const /** @type {?} */ r = findPath(expected, cc, cloned);\n    if (r.length > 0) return r;\n  }\n\n  return [];\n}\nexport class TreeNode<T> {\n/**\n * @param {?} value\n * @param {?} children\n */\nconstructor(public value: T,\npublic children: TreeNode<T>[]) {}\n/**\n * @return {?}\n */\ntoString(): string { return `TreeNode(${this.value})`; }\n}\n\nfunction TreeNode_tsickle_Closure_declarations() {\n/** @type {?} */\nTreeNode.prototype.value;\n/** @type {?} */\nTreeNode.prototype.children;\n}\n"]}