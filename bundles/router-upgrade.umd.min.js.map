{"version":3,"sources":["../../../packages/router/esm5/upgrade/src/upgrade.js"],"names":["RouterUpgradeInitializer","setUpLocationSync","ngUpgrade","$injector","Error","router","injector","get","_angular_router","Router","url","document","createElement"],"mappings":";;;;;;;;;;;;;;;;;OA0CEA,kRAwBEC,kBAAqBC,WACrB,IAAAA,UAAUC,gBACD,IAAAC,MAAA,qNAEEC,OAAkBH,UAAWI,SAAIC,IAASC,gBAAUC,QAC5DC,IAAAC,SAAAC,cAAA,KACNV,UAAAC,UAAAI,IAAA","file":"/home/travis/build/angular/angular/dist/packages-dist/router/bundles/router-upgrade.umd.min.js.map","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { APP_BOOTSTRAP_LISTENER } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UpgradeModule } from '@angular/upgrade/static';\n/**\n * \\@whatItDoes Creates an initializer that in addition to setting up the Angular\n * router sets up the ngRoute integration.\n *\n * \\@howToUse\n *\n * ```\n * \\@NgModule({\n *  imports: [\n *   RouterModule.forRoot(SOME_ROUTES),\n *   UpgradeModule\n * ],\n * providers: [\n *   RouterUpgradeInitializer\n * ]\n * })\n * export class AppModule {\n *   ngDoBootstrap() {}\n * }\n * ```\n *\n * \\@experimental\n */\nexport var /** @type {?} */ RouterUpgradeInitializer = {\n    provide: APP_BOOTSTRAP_LISTENER,\n    multi: true,\n    useFactory: locationSyncBootstrapListener,\n    deps: [UpgradeModule]\n};\n/**\n * \\@internal\n * @param {?} ngUpgrade\n * @return {?}\n */\nexport function locationSyncBootstrapListener(ngUpgrade) {\n    return function () { setUpLocationSync(ngUpgrade); };\n}\n/**\n * \\@whatItDoes Sets up a location synchronization.\n *\n * History.pushState does not fire onPopState, so the Angular location\n * doesn't detect it. The workaround is to attach a location change listener\n *\n * \\@experimental\n * @param {?} ngUpgrade\n * @return {?}\n */\nexport function setUpLocationSync(ngUpgrade) {\n    if (!ngUpgrade.$injector) {\n        throw new Error(\"\\n        RouterUpgradeInitializer can be used only after UpgradeModule.bootstrap has been called.\\n        Remove RouterUpgradeInitializer and call setUpLocationSync after UpgradeModule.bootstrap.\\n      \");\n    }\n    var /** @type {?} */ router = ngUpgrade.injector.get(Router);\n    var /** @type {?} */ url = document.createElement('a');\n    ngUpgrade.$injector.get('$rootScope')\n        .$on('$locationChangeStart', function (_, next, __) {\n        url.href = next;\n        router.navigateByUrl(url.pathname + url.search + url.hash);\n    });\n}\n//# sourceMappingURL=upgrade.js.map"]}