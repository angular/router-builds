{"version":3,"sources":["packages/router/router-testing.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","router","testing","common","core","this","__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","SpyNgModuleFactoryLoader","compiler","_stubbedModules","prototype","get","set","modules","e_1","_c","res","_a","__values","o","m","Symbol","iterator","call","next","value","done","keys","_b","t","compileModuleAsync","e_1_1","error","return","enumerable","configurable","load","path","Promise","reject","Error","Injectable","__metadata","metadataKey","metadataValue","metadata","Compiler","setupTestingRouter","urlSerializer","contexts","location","loader","injector","routes","opts","urlHandlingStrategy","router$$1","Router","ɵflatten","isUrlHandlingStrategy","paramsInheritanceStrategy","RouterTestingModule","RouterTestingModule_1","withRoutes","config","ngModule","providers","provideRoutes","provide","ROUTER_CONFIGURATION","useValue","NgModule","RouterModule","ɵROUTER_PROVIDERS","Location","useClass","SpyLocation","LocationStrategy","MockLocationStrategy","NgModuleFactoryLoader","useFactory","deps","UrlSerializer","ChildrenOutletContexts","Injector","ROUTES","UrlHandlingStrategy","Optional","PreloadingStrategy","useExisting","NoPreloading"],"mappings":";;;;;CAMC,SAAUA,EAAQC,GACC,iBAAZC,SAA0C,oBAAXC,OAAyBF,EAAQC,QAASE,QAAQ,mBAAoBA,QAAQ,2BAA4BA,QAAQ,iBAAkBA,QAAQ,oBAChK,mBAAXC,QAAyBA,OAAOC,IAAMD,OAAO,2BAA4B,UAAW,kBAAmB,0BAA2B,gBAAiB,mBAAoBJ,GAC7KA,GAASD,EAAOO,GAAKP,EAAOO,OAAUP,EAAOO,GAAGC,OAASR,EAAOO,GAAGC,WAAcR,EAAOO,GAAGC,OAAOC,YAAcT,EAAOO,GAAGG,OAAOV,EAAOO,GAAGG,OAAOD,QAAQT,EAAOO,GAAGI,KAAKX,EAAOO,GAAGC,QAHrL,CAIEI,KAAM,SAAWV,EAAQQ,EAAOD,EAAQE,EAAKH,GAAU,aAwBzD,SAASK,EAAWC,EAAYC,EAAQC,EAAKC,GACzC,IAA2HC,EAAvHC,EAAIC,UAAUC,OAAQC,EAAIH,EAAI,EAAIJ,EAAkB,OAATE,EAAgBA,EAAOM,OAAOC,yBAAyBT,EAAQC,GAAOC,EACrH,GAAuB,iBAAZQ,SAAoD,mBAArBA,QAAQC,SAAyBJ,EAAIG,QAAQC,SAASZ,EAAYC,EAAQC,EAAKC,QACpH,IAAK,IAAIU,EAAIb,EAAWO,OAAS,EAAGM,GAAK,EAAGA,KAAST,EAAIJ,EAAWa,MAAIL,GAAKH,EAAI,EAAID,EAAEI,GAAKH,EAAI,EAAID,EAAEH,EAAQC,EAAKM,GAAKJ,EAAEH,EAAQC,KAASM,GAChJ,OAAOH,EAAI,GAAKG,GAAKC,OAAOK,eAAeb,EAAQC,EAAKM,GAAIA;;;;;;;;AA8DhE,IAAIO,EAA0C,WAC1C,SAASA,EAAyBC,GAC9BlB,KAAKkB,SAAWA,EAIhBlB,KAAKmB,mBA2CT,OAzCAR,OAAOK,eAAeC,EAAyBG,UAAW,kBAItDC,IAAK,WAAc,OAAOrB,KAAKmB,iBAI/BG,IAAK,SAAUC,GACX,IAeIC,EAAKC,EAfLC,KACJ,IACI,IAAK,IAAIC,EAlEzB,SAASC,EAASC,GACd,IAAIC,EAAsB,mBAAXC,QAAyBF,EAAEE,OAAOC,UAAWjB,EAAI,EAChE,OAAIe,EAAUA,EAAEG,KAAKJ,IAEjBK,KAAM,WAEF,OADIL,GAAKd,GAAKc,EAAEpB,SAAQoB,OAAI,IACnBM,MAAON,GAAKA,EAAEd,KAAMqB,MAAOP,KA4DlBD,CAASjB,OAAO0B,KAAKd,IAAWe,EAAKX,EAAGO,QAASI,EAAGF,KAAME,EAAKX,EAAGO,OAAQ,CACpF,IAAIK,EAAID,EAAGH,MACXT,EAAIa,GAAKvC,KAAKkB,SAASsB,mBAAmBjB,EAAQgB,KAG1D,MAAOE,GAASjB,GAAQkB,MAAOD,GAC/B,QACI,IACQH,IAAOA,EAAGF,OAASX,EAAKE,EAAGgB,SAASlB,EAAGQ,KAAKN,GAEpD,QAAU,GAAIH,EAAK,MAAMA,EAAIkB,OAEjC1C,KAAKmB,gBAAkBO,GAG3BkB,YAAY,EACZC,cAAc,IAElB5B,EAAyBG,UAAU0B,KAAO,SAAUC,GAChD,OAAI/C,KAAKmB,gBAAgB4B,GACd/C,KAAKmB,gBAAgB4B,GAGrBC,QAAQC,OAAO,IAAIC,MAAM,sBAAwBH,KAGrC9C,GACvBF,EAAKoD,aAvGb,SAASC,EAAWC,EAAaC,GAC7B,GAAuB,iBAAZzC,SAAoD,mBAArBA,QAAQ0C,SAAyB,OAAO1C,QAAQ0C,SAASF,EAAaC,GAuG5GF,CAAW,qBAAsBrD,EAAKyD,YACvCvC,GAhDsC,GA6D7C,SAASwC,EAAmBC,EAAeC,EAAUC,EAAUC,EAAQ3C,EAAU4C,EAAUC,EAAQC,EAAMC,GACrG,IAAIC,EAAY,IAAItE,EAAOuE,OAAO,KAAMT,EAAeC,EAAUC,EAAUE,EAAUD,EAAQ3C,EAAUtB,EAAOwE,SAASL,IAavH,OAXIC,IAbR,SAASK,EAAsBL,GAG3B,MAAO,qBAAsBA,EAWrBK,CAAsBL,GACtBE,EAAUD,oBAAsBD,EAE3BA,EAAKM,4BACVJ,EAAUI,0BAA4BN,EAAKM,4BAG/CL,IACAC,EAAUD,oBAAsBA,GAE7BC,EA2BX,IAAIK,EAAqC,WACrC,SAASA,KA8BT,OA5BAC,EAAwBD,EACxBA,EAAoBE,WAAa,SAAUV,EAAQW,GAC/C,OACIC,SAAUH,EACVI,WACIhF,EAAOiF,cAAcd,IACnBe,QAASlF,EAAOmF,qBAAsBC,SAAUN,UAIxCF,EAAwBvE,GAC1CF,EAAKkF,UACD3F,SAAUM,EAAOsF,cACjBN,WACIhF,EAAOuF,mBAAqBL,QAAShF,EAAOsF,SAAUC,SAAUxF,EAAQyF,cACtER,QAAShF,EAAOyF,iBAAkBF,SAAUxF,EAAQ2F,uBACpDV,QAAS/E,EAAK0F,sBAAuBJ,SAAUpE,IAC7C6D,QAASlF,EAAOuE,OAChBuB,WAAYjC,EACZkC,MACI/F,EAAOgG,cAAehG,EAAOiG,uBAAwB/F,EAAOsF,SAAUrF,EAAK0F,sBAAuB1F,EAAKyD,SAAUzD,EAAK+F,SACtHlG,EAAOmG,OAAQnG,EAAOmF,sBAAuBnF,EAAOoG,oBAAqB,IAAIjG,EAAKkG,aAGxFnB,QAASlF,EAAOsG,mBAAoBC,YAAavG,EAAOwG,cAAgBxG,EAAOiF,sBAG1FN,GAEH,IAAIC,EAhCgC;;;;;;;;;;;;;;;;;;;;;GA2ExClF,EAAQ2B,yBAA2BA,EACnC3B,EAAQmE,mBAAqBA,EAC7BnE,EAAQiF,oBAAsBA,EAE9B5D,OAAOK,eAAe1B,EAAS,cAAgB6C,OAAO","sourcesContent":["/**\n * @license Angular v6.1.0-beta.2+25.sha-941d2cd\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/common/testing'), require('@angular/core'), require('@angular/router')) :\n\ttypeof define === 'function' && define.amd ? define('@angular/router/testing', ['exports', '@angular/common', '@angular/common/testing', '@angular/core', '@angular/router'], factory) :\n\t(factory((global.ng = global.ng || {}, global.ng.router = global.ng.router || {}, global.ng.router.testing = {}),global.ng.common,global.ng.common.testing,global.ng.core,global.ng.router));\n}(this, (function (exports,common,testing,core,router) { 'use strict';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\n\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Allows to simulate the loading of ng modules in tests.\n *\n * ```\n * const loader = TestBed.get(NgModuleFactoryLoader);\n *\n * @Component({template: 'lazy-loaded'})\n * class LazyLoadedComponent {}\n * @NgModule({\n *   declarations: [LazyLoadedComponent],\n *   imports: [RouterModule.forChild([{path: 'loaded', component: LazyLoadedComponent}])]\n * })\n *\n * class LoadedModule {}\n *\n * // sets up stubbedModules\n * loader.stubbedModules = {lazyModule: LoadedModule};\n *\n * router.resetConfig([\n *   {path: 'lazy', loadChildren: 'lazyModule'},\n * ]);\n *\n * router.navigateByUrl('/lazy/loaded');\n * ```\n *\n *\n */\nvar SpyNgModuleFactoryLoader = /** @class */ (function () {\n    function SpyNgModuleFactoryLoader(compiler) {\n        this.compiler = compiler;\n        /**\n         * @docsNotRequired\n         */\n        this._stubbedModules = {};\n    }\n    Object.defineProperty(SpyNgModuleFactoryLoader.prototype, \"stubbedModules\", {\n        /**\n         * @docsNotRequired\n         */\n        get: function () { return this._stubbedModules; },\n        /**\n         * @docsNotRequired\n         */\n        set: function (modules) {\n            var res = {};\n            try {\n                for (var _a = __values(Object.keys(modules)), _b = _a.next(); !_b.done; _b = _a.next()) {\n                    var t = _b.value;\n                    res[t] = this.compiler.compileModuleAsync(modules[t]);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            this._stubbedModules = res;\n            var e_1, _c;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SpyNgModuleFactoryLoader.prototype.load = function (path) {\n        if (this._stubbedModules[path]) {\n            return this._stubbedModules[path];\n        }\n        else {\n            return Promise.reject(new Error(\"Cannot find module \" + path));\n        }\n    };\n    SpyNgModuleFactoryLoader = __decorate([\n        core.Injectable(),\n        __metadata(\"design:paramtypes\", [core.Compiler])\n    ], SpyNgModuleFactoryLoader);\n    return SpyNgModuleFactoryLoader;\n}());\nfunction isUrlHandlingStrategy(opts) {\n    // This property check is needed because UrlHandlingStrategy is an interface and doesn't exist at\n    // runtime.\n    return 'shouldProcessUrl' in opts;\n}\n/**\n * Router setup factory function used for testing.\n *\n *\n */\nfunction setupTestingRouter(urlSerializer, contexts, location, loader, compiler, injector, routes, opts, urlHandlingStrategy) {\n    var router$$1 = new router.Router(null, urlSerializer, contexts, location, injector, loader, compiler, router.ɵflatten(routes));\n    // Handle deprecated argument ordering.\n    if (opts) {\n        if (isUrlHandlingStrategy(opts)) {\n            router$$1.urlHandlingStrategy = opts;\n        }\n        else if (opts.paramsInheritanceStrategy) {\n            router$$1.paramsInheritanceStrategy = opts.paramsInheritanceStrategy;\n        }\n    }\n    if (urlHandlingStrategy) {\n        router$$1.urlHandlingStrategy = urlHandlingStrategy;\n    }\n    return router$$1;\n}\n/**\n * @description\n *\n * Sets up the router to be used for testing.\n *\n * The modules sets up the router to be used for testing.\n * It provides spy implementations of `Location`, `LocationStrategy`, and {@link\n * NgModuleFactoryLoader}.\n *\n * ### Example\n *\n * ```\n * beforeEach(() => {\n *   TestBed.configureTestModule({\n *     imports: [\n *       RouterTestingModule.withRoutes(\n *         [{path: '', component: BlankCmp}, {path: 'simple', component: SimpleCmp}]\n *       )\n *     ]\n *   });\n * });\n * ```\n *\n *\n */\nvar RouterTestingModule = /** @class */ (function () {\n    function RouterTestingModule() {\n    }\n    RouterTestingModule_1 = RouterTestingModule;\n    RouterTestingModule.withRoutes = function (routes, config) {\n        return {\n            ngModule: RouterTestingModule_1,\n            providers: [\n                router.provideRoutes(routes),\n                { provide: router.ROUTER_CONFIGURATION, useValue: config ? config : {} },\n            ]\n        };\n    };\n    RouterTestingModule = RouterTestingModule_1 = __decorate([\n        core.NgModule({\n            exports: [router.RouterModule],\n            providers: [\n                router.ɵROUTER_PROVIDERS, { provide: common.Location, useClass: testing.SpyLocation },\n                { provide: common.LocationStrategy, useClass: testing.MockLocationStrategy },\n                { provide: core.NgModuleFactoryLoader, useClass: SpyNgModuleFactoryLoader }, {\n                    provide: router.Router,\n                    useFactory: setupTestingRouter,\n                    deps: [\n                        router.UrlSerializer, router.ChildrenOutletContexts, common.Location, core.NgModuleFactoryLoader, core.Compiler, core.Injector,\n                        router.ROUTES, router.ROUTER_CONFIGURATION, [router.UrlHandlingStrategy, new core.Optional()]\n                    ]\n                },\n                { provide: router.PreloadingStrategy, useExisting: router.NoPreloading }, router.provideRoutes([])\n            ]\n        })\n    ], RouterTestingModule);\n    return RouterTestingModule;\n    var RouterTestingModule_1;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the router/testing package.\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\n\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file is not used to build this module. It is only used during editing\n// by the TypeScript language service and during build for verification. `ngc`\n// replaces this file with production index.ts when it rewrites private symbol\n// names.\n\nexports.SpyNgModuleFactoryLoader = SpyNgModuleFactoryLoader;\nexports.setupTestingRouter = setupTestingRouter;\nexports.RouterTestingModule = RouterTestingModule;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=router-testing.umd.js.map\n"]}