{"version":3,"sources":["packages/router/router-testing.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","router","testing","common","core","this","SpyNgModuleFactoryLoader","compiler","_stubbedModules","Object","defineProperty","prototype","get","set","modules","e_1","_a","res","_b","__values","o","m","Symbol","iterator","i","call","next","length","value","done","keys","_c","t","compileModuleAsync","e_1_1","error","return","enumerable","configurable","load","path","Promise","reject","Error","decorators","type","Injectable","ctorParameters","Compiler","setupTestingRouter","urlSerializer","contexts","location","loader","injector","routes","opts","urlHandlingStrategy","router$$1","Router","ɵflatten","isUrlHandlingStrategy","malformedUriErrorHandler","paramsInheritanceStrategy","RouterTestingModule","withRoutes","config","ngModule","providers","provideRoutes","provide","ROUTER_CONFIGURATION","useValue","NgModule","args","RouterModule","ɵROUTER_PROVIDERS","Location","useClass","SpyLocation","LocationStrategy","MockLocationStrategy","NgModuleFactoryLoader","useFactory","deps","UrlSerializer","ChildrenOutletContexts","Injector","ROUTES","UrlHandlingStrategy","Optional","PreloadingStrategy","useExisting","NoPreloading"],"mappings":"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","sourcesContent":["/**\n * @license Angular v6.1.4\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/common/testing'), require('@angular/core'), require('@angular/router')) :\n    typeof define === 'function' && define.amd ? define('@angular/router/testing', ['exports', '@angular/common', '@angular/common/testing', '@angular/core', '@angular/router'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.router = global.ng.router || {}, global.ng.router.testing = {}),global.ng.common,global.ng.common.testing,global.ng.core,global.ng.router));\n}(this, (function (exports,common,testing,core,router) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Allows to simulate the loading of ng modules in tests.\n     *\n     * ```\n     * const loader = TestBed.get(NgModuleFactoryLoader);\n     *\n     * @Component({template: 'lazy-loaded'})\n     * class LazyLoadedComponent {}\n     * @NgModule({\n     *   declarations: [LazyLoadedComponent],\n     *   imports: [RouterModule.forChild([{path: 'loaded', component: LazyLoadedComponent}])]\n     * })\n     *\n     * class LoadedModule {}\n     *\n     * // sets up stubbedModules\n     * loader.stubbedModules = {lazyModule: LoadedModule};\n     *\n     * router.resetConfig([\n     *   {path: 'lazy', loadChildren: 'lazyModule'},\n     * ]);\n     *\n     * router.navigateByUrl('/lazy/loaded');\n     * ```\n     *\n     *\n     */\n    var SpyNgModuleFactoryLoader = /** @class */ (function () {\n        function SpyNgModuleFactoryLoader(compiler) {\n            this.compiler = compiler;\n            /**\n             * @docsNotRequired\n             */\n            this._stubbedModules = {};\n        }\n        Object.defineProperty(SpyNgModuleFactoryLoader.prototype, \"stubbedModules\", {\n            /**\n             * @docsNotRequired\n             */\n            get: function () { return this._stubbedModules; },\n            /**\n             * @docsNotRequired\n             */\n            set: function (modules) {\n                var e_1, _a;\n                var res = {};\n                try {\n                    for (var _b = __values(Object.keys(modules)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                        var t = _c.value;\n                        res[t] = this.compiler.compileModuleAsync(modules[t]);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n                this._stubbedModules = res;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        SpyNgModuleFactoryLoader.prototype.load = function (path) {\n            if (this._stubbedModules[path]) {\n                return this._stubbedModules[path];\n            }\n            else {\n                return Promise.reject(new Error(\"Cannot find module \" + path));\n            }\n        };\n        SpyNgModuleFactoryLoader.decorators = [\n            { type: core.Injectable }\n        ];\n        /** @nocollapse */\n        SpyNgModuleFactoryLoader.ctorParameters = function () { return [\n            { type: core.Compiler }\n        ]; };\n        return SpyNgModuleFactoryLoader;\n    }());\n    function isUrlHandlingStrategy(opts) {\n        // This property check is needed because UrlHandlingStrategy is an interface and doesn't exist at\n        // runtime.\n        return 'shouldProcessUrl' in opts;\n    }\n    /**\n     * Router setup factory function used for testing.\n     *\n     *\n     */\n    function setupTestingRouter(urlSerializer, contexts, location, loader, compiler, injector, routes, opts, urlHandlingStrategy) {\n        var router$$1 = new router.Router(null, urlSerializer, contexts, location, injector, loader, compiler, router.ɵflatten(routes));\n        if (opts) {\n            // Handle deprecated argument ordering.\n            if (isUrlHandlingStrategy(opts)) {\n                router$$1.urlHandlingStrategy = opts;\n            }\n            else {\n                // Handle ExtraOptions\n                if (opts.malformedUriErrorHandler) {\n                    router$$1.malformedUriErrorHandler = opts.malformedUriErrorHandler;\n                }\n                if (opts.paramsInheritanceStrategy) {\n                    router$$1.paramsInheritanceStrategy = opts.paramsInheritanceStrategy;\n                }\n            }\n        }\n        if (urlHandlingStrategy) {\n            router$$1.urlHandlingStrategy = urlHandlingStrategy;\n        }\n        return router$$1;\n    }\n    /**\n     * @description\n     *\n     * Sets up the router to be used for testing.\n     *\n     * The modules sets up the router to be used for testing.\n     * It provides spy implementations of `Location`, `LocationStrategy`, and {@link\n     * NgModuleFactoryLoader}.\n     *\n     * ### Example\n     *\n     * ```\n     * beforeEach(() => {\n     *   TestBed.configureTestModule({\n     *     imports: [\n     *       RouterTestingModule.withRoutes(\n     *         [{path: '', component: BlankCmp}, {path: 'simple', component: SimpleCmp}]\n     *       )\n     *     ]\n     *   });\n     * });\n     * ```\n     *\n     *\n     */\n    var RouterTestingModule = /** @class */ (function () {\n        function RouterTestingModule() {\n        }\n        RouterTestingModule.withRoutes = function (routes, config) {\n            return {\n                ngModule: RouterTestingModule,\n                providers: [\n                    router.provideRoutes(routes),\n                    { provide: router.ROUTER_CONFIGURATION, useValue: config ? config : {} },\n                ]\n            };\n        };\n        RouterTestingModule.decorators = [\n            { type: core.NgModule, args: [{\n                        exports: [router.RouterModule],\n                        providers: [\n                            router.ɵROUTER_PROVIDERS, { provide: common.Location, useClass: testing.SpyLocation },\n                            { provide: common.LocationStrategy, useClass: testing.MockLocationStrategy },\n                            { provide: core.NgModuleFactoryLoader, useClass: SpyNgModuleFactoryLoader }, {\n                                provide: router.Router,\n                                useFactory: setupTestingRouter,\n                                deps: [\n                                    router.UrlSerializer, router.ChildrenOutletContexts, common.Location, core.NgModuleFactoryLoader, core.Compiler, core.Injector,\n                                    router.ROUTES, router.ROUTER_CONFIGURATION, [router.UrlHandlingStrategy, new core.Optional()]\n                                ]\n                            },\n                            { provide: router.PreloadingStrategy, useExisting: router.NoPreloading }, router.provideRoutes([])\n                        ]\n                    },] }\n        ];\n        return RouterTestingModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.SpyNgModuleFactoryLoader = SpyNgModuleFactoryLoader;\n    exports.setupTestingRouter = setupTestingRouter;\n    exports.RouterTestingModule = RouterTestingModule;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=router-testing.umd.js.map\n"]}