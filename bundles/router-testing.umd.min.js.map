{"version":3,"sources":["packages/router/router-testing.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","router","testing","common","core","this","i0","SpyNgModuleFactoryLoader","compiler","_stubbedModules","Object","defineProperty","prototype","get","set","modules","e_1","_a","res","_b","__values","o","m","Symbol","iterator","i","call","next","length","value","done","keys","_c","t","compileModuleAsync","e_1_1","error","return","enumerable","configurable","load","path","Promise","reject","Error","ngInjectableDef","ɵɵdefineInjectable","token","SpyNgModuleFactoryLoader_Factory","ɵɵinject","Compiler","providedIn","setupTestingRouter","urlSerializer","contexts","location","loader","injector","routes","opts","urlHandlingStrategy","router$1","Router","ɵflatten","isUrlHandlingStrategy","malformedUriErrorHandler","paramsInheritanceStrategy","RouterTestingModule","withRoutes","config","ngModule","providers","provideRoutes","provide","ROUTER_CONFIGURATION","useValue","ngModuleDef","ɵɵdefineNgModule","type","ngInjectorDef","ɵɵdefineInjector","RouterTestingModule_Factory","ɵROUTER_PROVIDERS","Location","useClass","SpyLocation","LocationStrategy","MockLocationStrategy","NgModuleFactoryLoader","useFactory","deps","UrlSerializer","ChildrenOutletContexts","Injector","ROUTES","UrlHandlingStrategy","Optional","PreloadingStrategy","useExisting","NoPreloading","imports","RouterModule"],"mappings":"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","sourcesContent":["/**\n * @license Angular v8.1.0-next.3+19.sha-5eb7426.with-local-changes\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/common/testing'), require('@angular/core'), require('@angular/router')) :\n    typeof define === 'function' && define.amd ? define('@angular/router/testing', ['exports', '@angular/common', '@angular/common/testing', '@angular/core', '@angular/router'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.router = global.ng.router || {}, global.ng.router.testing = {}), global.ng.common, global.ng.common.testing, global.ng.core, global.ng.router));\n}(this, function (exports, common, testing, i0, router) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\n\n    /**\n     * @description\n     *\n     * Allows to simulate the loading of ng modules in tests.\n     *\n     * ```\n     * const loader = TestBed.get(NgModuleFactoryLoader);\n     *\n     * @Component({template: 'lazy-loaded'})\n     * class LazyLoadedComponent {}\n     * @NgModule({\n     *   declarations: [LazyLoadedComponent],\n     *   imports: [RouterModule.forChild([{path: 'loaded', component: LazyLoadedComponent}])]\n     * })\n     *\n     * class LoadedModule {}\n     *\n     * // sets up stubbedModules\n     * loader.stubbedModules = {lazyModule: LoadedModule};\n     *\n     * router.resetConfig([\n     *   {path: 'lazy', loadChildren: 'lazyModule'},\n     * ]);\n     *\n     * router.navigateByUrl('/lazy/loaded');\n     * ```\n     *\n     * @publicApi\n     */\n    var SpyNgModuleFactoryLoader = /** @class */ (function () {\n        function SpyNgModuleFactoryLoader(compiler) {\n            this.compiler = compiler;\n            /**\n             * @docsNotRequired\n             */\n            this._stubbedModules = {};\n        }\n        Object.defineProperty(SpyNgModuleFactoryLoader.prototype, \"stubbedModules\", {\n            /**\n             * @docsNotRequired\n             */\n            get: function () { return this._stubbedModules; },\n            /**\n             * @docsNotRequired\n             */\n            set: function (modules) {\n                var e_1, _a;\n                var res = {};\n                try {\n                    for (var _b = __values(Object.keys(modules)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                        var t = _c.value;\n                        res[t] = this.compiler.compileModuleAsync(modules[t]);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n                this._stubbedModules = res;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        SpyNgModuleFactoryLoader.prototype.load = function (path) {\n            if (this._stubbedModules[path]) {\n                return this._stubbedModules[path];\n            }\n            else {\n                return Promise.reject(new Error(\"Cannot find module \" + path));\n            }\n        };\n        SpyNgModuleFactoryLoader.ngInjectableDef = i0.ɵɵdefineInjectable({ token: SpyNgModuleFactoryLoader, factory: function SpyNgModuleFactoryLoader_Factory(t) { return new (t || SpyNgModuleFactoryLoader)(i0.ɵɵinject(i0.Compiler)); }, providedIn: null });\n        return SpyNgModuleFactoryLoader;\n    }());\n    /*@__PURE__*/ i0.ɵsetClassMetadata(SpyNgModuleFactoryLoader, [{\n            type: i0.Injectable\n        }], function () { return [{ type: i0.Compiler }]; }, null);\n    function isUrlHandlingStrategy(opts) {\n        // This property check is needed because UrlHandlingStrategy is an interface and doesn't exist at\n        // runtime.\n        return 'shouldProcessUrl' in opts;\n    }\n    /**\n     * Router setup factory function used for testing.\n     *\n     * @publicApi\n     */\n    function setupTestingRouter(urlSerializer, contexts, location, loader, compiler, injector, routes, opts, urlHandlingStrategy) {\n        var router$1 = new router.Router(null, urlSerializer, contexts, location, injector, loader, compiler, router.ɵflatten(routes));\n        if (opts) {\n            // Handle deprecated argument ordering.\n            if (isUrlHandlingStrategy(opts)) {\n                router$1.urlHandlingStrategy = opts;\n            }\n            else {\n                // Handle ExtraOptions\n                if (opts.malformedUriErrorHandler) {\n                    router$1.malformedUriErrorHandler = opts.malformedUriErrorHandler;\n                }\n                if (opts.paramsInheritanceStrategy) {\n                    router$1.paramsInheritanceStrategy = opts.paramsInheritanceStrategy;\n                }\n            }\n        }\n        if (urlHandlingStrategy) {\n            router$1.urlHandlingStrategy = urlHandlingStrategy;\n        }\n        return router$1;\n    }\n    /**\n     * @description\n     *\n     * Sets up the router to be used for testing.\n     *\n     * The modules sets up the router to be used for testing.\n     * It provides spy implementations of `Location`, `LocationStrategy`, and {@link\n     * NgModuleFactoryLoader}.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * beforeEach(() => {\n     *   TestBed.configureTestModule({\n     *     imports: [\n     *       RouterTestingModule.withRoutes(\n     *         [{path: '', component: BlankCmp}, {path: 'simple', component: SimpleCmp}]\n     *       )\n     *     ]\n     *   });\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var RouterTestingModule = /** @class */ (function () {\n        function RouterTestingModule() {\n        }\n        RouterTestingModule.withRoutes = function (routes, config) {\n            return {\n                ngModule: RouterTestingModule,\n                providers: [\n                    router.provideRoutes(routes),\n                    { provide: router.ROUTER_CONFIGURATION, useValue: config ? config : {} },\n                ]\n            };\n        };\n        RouterTestingModule.ngModuleDef = i0.ɵɵdefineNgModule({ type: RouterTestingModule });\n        RouterTestingModule.ngInjectorDef = i0.ɵɵdefineInjector({ factory: function RouterTestingModule_Factory(t) { return new (t || RouterTestingModule)(); }, providers: [\n                router.ɵROUTER_PROVIDERS, { provide: common.Location, useClass: testing.SpyLocation },\n                { provide: common.LocationStrategy, useClass: testing.MockLocationStrategy },\n                { provide: i0.NgModuleFactoryLoader, useClass: SpyNgModuleFactoryLoader }, {\n                    provide: router.Router,\n                    useFactory: setupTestingRouter,\n                    deps: [\n                        router.UrlSerializer, router.ChildrenOutletContexts, common.Location, i0.NgModuleFactoryLoader, i0.Compiler, i0.Injector,\n                        router.ROUTES, router.ROUTER_CONFIGURATION, [router.UrlHandlingStrategy, new i0.Optional()]\n                    ]\n                },\n                { provide: router.PreloadingStrategy, useExisting: router.NoPreloading }, router.provideRoutes([])\n            ], imports: [router.RouterModule] });\n        return RouterTestingModule;\n    }());\n    /*@__PURE__*/ i0.ɵɵsetNgModuleScope(RouterTestingModule, { exports: [router.RouterModule] });\n    /*@__PURE__*/ i0.ɵsetClassMetadata(RouterTestingModule, [{\n            type: i0.NgModule,\n            args: [{\n                    exports: [router.RouterModule],\n                    providers: [\n                        router.ɵROUTER_PROVIDERS, { provide: common.Location, useClass: testing.SpyLocation },\n                        { provide: common.LocationStrategy, useClass: testing.MockLocationStrategy },\n                        { provide: i0.NgModuleFactoryLoader, useClass: SpyNgModuleFactoryLoader }, {\n                            provide: router.Router,\n                            useFactory: setupTestingRouter,\n                            deps: [\n                                router.UrlSerializer, router.ChildrenOutletContexts, common.Location, i0.NgModuleFactoryLoader, i0.Compiler, i0.Injector,\n                                router.ROUTES, router.ROUTER_CONFIGURATION, [router.UrlHandlingStrategy, new i0.Optional()]\n                            ]\n                        },\n                        { provide: router.PreloadingStrategy, useExisting: router.NoPreloading }, router.provideRoutes([])\n                    ]\n                }]\n        }], null, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.SpyNgModuleFactoryLoader = SpyNgModuleFactoryLoader;\n    exports.setupTestingRouter = setupTestingRouter;\n    exports.RouterTestingModule = RouterTestingModule;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=router-testing.umd.js.map\n"]}