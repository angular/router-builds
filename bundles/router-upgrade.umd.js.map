{"version":3,"file":"router-upgrade.umd.js","sources":["../../../../../../../../../../execroot/packages/router/upgrade/src/upgrade.ts","../../../../../../../../../../execroot/packages/router/upgrade/public_api.ts","../../../../../../../../../../execroot/packages/router/upgrade/index.ts","../../../../../../../../../../execroot/packages/router/upgrade/upgrade.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {APP_BOOTSTRAP_LISTENER, ComponentRef, InjectionToken} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {UpgradeModule} from '@angular/upgrade/static';\n\n\n\n/**\n * @description\n *\n * Creates an initializer that in addition to setting up the Angular\n * router sets up the ngRoute integration.\n *\n * ```\n * @NgModule({\n *  imports: [\n *   RouterModule.forRoot(SOME_ROUTES),\n *   UpgradeModule\n * ],\n * providers: [\n *   RouterUpgradeInitializer\n * ]\n * })\n * export class AppModule {\n *   ngDoBootstrap() {}\n * }\n * ```\n *\n * @experimental\n */\nexport const RouterUpgradeInitializer = {\n  provide: APP_BOOTSTRAP_LISTENER,\n  multi: true,\n  useFactory: locationSyncBootstrapListener as(ngUpgrade: UpgradeModule) => () => void,\n  deps: [UpgradeModule]\n};\n\n/**\n * @internal\n */\nexport function locationSyncBootstrapListener(ngUpgrade: UpgradeModule) {\n  return () => { setUpLocationSync(ngUpgrade); };\n}\n\n/**\n * @description\n *\n * Sets up a location synchronization.\n *\n * History.pushState does not fire onPopState, so the Angular location\n * doesn't detect it. The workaround is to attach a location change listener\n *\n * @experimental\n */\nexport function setUpLocationSync(ngUpgrade: UpgradeModule) {\n  if (!ngUpgrade.$injector) {\n    throw new Error(`\n        RouterUpgradeInitializer can be used only after UpgradeModule.bootstrap has been called.\n        Remove RouterUpgradeInitializer and call setUpLocationSync after UpgradeModule.bootstrap.\n      `);\n  }\n\n  const router: Router = ngUpgrade.injector.get(Router);\n  const url = document.createElement('a');\n\n  ngUpgrade.$injector.get('$rootScope')\n      .$on('$locationChangeStart', (_: any, next: string, __: string) => {\n        url.href = next;\n        router.navigateByUrl(url.pathname + url.search + url.hash);\n      });\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\nexport * from './src/upgrade';\n\n// This file only reexports content of the `src` folder. Keep it that way.\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// This file is not used to build this module. It is only used during editing\n// by the TypeScript language service and during build for verification. `ngc`\n// replaces this file with production index.ts when it rewrites private symbol\n// names.\n\nexport * from './public_api';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["APP_BOOTSTRAP_LISTENER","UpgradeModule","router","Router"],"mappings":";;;;;;;;;;;;IAAA;;;;;;;AAQA,IAMA;;;;;;;;;;;;;;;;;;;;;;;AAuBA,QAAa,wBAAwB,GAAG;QACtC,OAAO,EAAEA,2BAAsB;QAC/B,KAAK,EAAE,IAAI;QACX,UAAU,EAAE,6BAAwE;QACpF,IAAI,EAAE,CAACC,qBAAa,CAAC;KACtB,CAAC;IAEF;;;AAGA,2CAA8C,SAAwB;QACpE,OAAO,cAAQ,iBAAiB,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC;IACjD,CAAC;IAED;;;;;;;;;;AAUA,+BAAkC,SAAwB;QACxD,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE;YACxB,MAAM,IAAI,KAAK,CAAC,+MAGb,CAAC,CAAC;SACN;QAED,IAAMC,SAAM,GAAW,SAAS,CAAC,QAAQ,CAAC,GAAG,CAACC,aAAM,CAAC,CAAC;QACtD,IAAM,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QAExC,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC;aAChC,GAAG,CAAC,sBAAsB,EAAE,UAAC,CAAM,EAAE,IAAY,EAAE,EAAU;YAC5D,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC;YAChBD,SAAM,CAAC,aAAa,CAAC,GAAG,CAAC,QAAQ,GAAG,GAAG,CAAC,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC;SAC5D,CAAC,CAAC;IACT,CAAC;;IC7ED;;;;;;;AAQA,IAOA,0EAA0E;;ICf1E;;;;;;OAMG;;ICNH;;OAEG;;;;;;;;;;;;;;"}