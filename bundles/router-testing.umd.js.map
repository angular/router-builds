{"version":3,"file":"router-testing.umd.js","sources":["../../../../../packages/router/testing/src/router_testing_module.ts","../../../../../packages/router/testing/src/testing.ts","../../../../../packages/router/testing/public_api.ts","../../../../../packages/router/testing/index.ts","../../../../../packages/router/testing/testing.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Location, LocationStrategy} from '@angular/common';\nimport {MockLocationStrategy, SpyLocation} from '@angular/common/testing';\nimport {Compiler, Injector, ModuleWithProviders, NgModule, Optional} from '@angular/core';\nimport {ChildrenOutletContexts, ExtraOptions, NoPreloading, PreloadingStrategy, provideRoutes, Route, Router, ROUTER_CONFIGURATION, RouteReuseStrategy, RouterModule, ROUTES, Routes, UrlHandlingStrategy, UrlSerializer, ɵassignExtraOptionsToRouter as assignExtraOptionsToRouter, ɵflatten as flatten, ɵROUTER_PROVIDERS as ROUTER_PROVIDERS} from '@angular/router';\n\nfunction isUrlHandlingStrategy(opts: ExtraOptions|\n                               UrlHandlingStrategy): opts is UrlHandlingStrategy {\n  // This property check is needed because UrlHandlingStrategy is an interface and doesn't exist at\n  // runtime.\n  return 'shouldProcessUrl' in opts;\n}\n\n/**\n * Router setup factory function used for testing.\n *\n * @publicApi\n */\nexport function setupTestingRouter(\n    urlSerializer: UrlSerializer, contexts: ChildrenOutletContexts, location: Location,\n    compiler: Compiler, injector: Injector, routes: Route[][],\n    opts?: ExtraOptions|UrlHandlingStrategy, urlHandlingStrategy?: UrlHandlingStrategy,\n    routeReuseStrategy?: RouteReuseStrategy) {\n  const router =\n      new Router(null!, urlSerializer, contexts, location, injector, compiler, flatten(routes));\n  if (opts) {\n    // Handle deprecated argument ordering.\n    if (isUrlHandlingStrategy(opts)) {\n      router.urlHandlingStrategy = opts;\n    } else {\n      // Handle ExtraOptions\n      assignExtraOptionsToRouter(opts, router);\n    }\n  }\n\n  if (urlHandlingStrategy) {\n    router.urlHandlingStrategy = urlHandlingStrategy;\n  }\n\n  if (routeReuseStrategy) {\n    router.routeReuseStrategy = routeReuseStrategy;\n  }\n\n  return router;\n}\n\n/**\n * @description\n *\n * Sets up the router to be used for testing.\n *\n * The modules sets up the router to be used for testing.\n * It provides spy implementations of `Location` and `LocationStrategy`.\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * beforeEach(() => {\n *   TestBed.configureTestingModule({\n *     imports: [\n *       RouterTestingModule.withRoutes(\n *         [{path: '', component: BlankCmp}, {path: 'simple', component: SimpleCmp}]\n *       )\n *     ]\n *   });\n * });\n * ```\n *\n * @publicApi\n */\n@NgModule({\n  exports: [RouterModule],\n  providers: [\n    ROUTER_PROVIDERS, {provide: Location, useClass: SpyLocation},\n    {provide: LocationStrategy, useClass: MockLocationStrategy}, {\n      provide: Router,\n      useFactory: setupTestingRouter,\n      deps: [\n        UrlSerializer, ChildrenOutletContexts, Location, Compiler, Injector, ROUTES,\n        ROUTER_CONFIGURATION, [UrlHandlingStrategy, new Optional()],\n        [RouteReuseStrategy, new Optional()]\n      ]\n    },\n    {provide: PreloadingStrategy, useExisting: NoPreloading}, provideRoutes([])\n  ]\n})\nexport class RouterTestingModule {\n  static withRoutes(routes: Routes, config?: ExtraOptions):\n      ModuleWithProviders<RouterTestingModule> {\n    return {\n      ngModule: RouterTestingModule,\n      providers: [\n        provideRoutes(routes),\n        {provide: ROUTER_CONFIGURATION, useValue: config ? config : {}},\n      ]\n    };\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the router/testing package.\n */\nexport * from './router_testing_module';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\nexport * from './src/testing';\n\n// This file only reexports content of the `src` folder. Keep it that way.\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// This file is not used to build this module. It is only used during editing\n// by the TypeScript language service and during build for verification. `ngc`\n// replaces this file with production index.ts when it rewrites private symbol\n// names.\n\nexport * from './public_api';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["router","Router","flatten","assignExtraOptionsToRouter","provideRoutes","ROUTER_CONFIGURATION","ROUTER_PROVIDERS","Location","SpyLocation","LocationStrategy","MockLocationStrategy","UrlSerializer","ChildrenOutletContexts","Compiler","Injector","ROUTES","UrlHandlingStrategy","Optional","RouteReuseStrategy","PreloadingStrategy","NoPreloading","RouterModule","NgModule"],"mappings":"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"}