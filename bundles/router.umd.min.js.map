{"version":3,"sources":["packages/router/router.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","router","core","rxjs","operators","common","platformBrowser","this","extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","RouterEvent","NavigationStart","_super","id","url","navigationTrigger","restoredState","_this","toString","NavigationEnd","urlAfterRedirects","NavigationCancel","reason","NavigationError","RoutesRecognized","state","GuardsCheckStart","GuardsCheckEnd","shouldActivate","ResolveStart","ResolveEnd","RouteConfigLoadStart","route","path","RouteConfigLoadEnd","ChildActivationStart","snapshot","routeConfig","ChildActivationEnd","ActivationStart","ActivationEnd","Scroll","routerEvent","position","anchor","EmptyOutletComponent","Component","template","PRIMARY_OUTLET","ParamsAsMap","params","has","name","get","v","isArray","getAll","keys","enumerable","configurable","convertToParamMap","defaultUrlMatcher","segments","segmentGroup","parts","split","pathMatch","hasChildren","posParams","index","part","segment","startsWith","substring","consumed","slice","LoadedRouterConfig","routes","validateConfig","config","parentPath","validateNode","getFullPath","fullPath","Error","component","children","loadChildren","outlet","redirectTo","matcher","charAt","currentRoute","standardizeConfig","map","shallowEqual","a","k1","k2","flatten","arr","apply","last","forEach","callback","prop","andObservables","observables","pipe","mergeAll","every","result","wrapIntoObservable","ɵisObservable","ɵisPromise","from","Promise","resolve","of","containsTree","container","containee","exact","equalQueryParams","queryParams","equalSegmentGroups","equalPath","numberOfChildren","root","containsQueryParams","containsSegmentGroup","containsSegmentGroupHelper","containeePaths","current","UrlTree","fragment","_queryParamMap","DEFAULT_SERIALIZER","serialize","UrlSegmentGroup","parent","k","serializePaths","UrlSegment","parameters","_parameterMap","serializePath","as","bs","mapChildrenIntoArray","fn","res","child","childOutlet","UrlSerializer","DefaultUrlSerializer","parse","UrlParser","parseRootSegment","parseQueryParams","parseFragment","tree","serializeSegment","primary","children_1","join","serializeQueryParams","strParams","encodeUriQuery","encodeUriFragment","encodeURI","encodeUriString","encodeURIComponent","replace","encodeUriSegment","decode","decodeURIComponent","decodeQuery","serializeMatrixParams","SEGMENT_RE","matchSegments","str","match","QUERY_PARAM_RE","QUERY_PARAM_VALUE_RE","remaining","consumeOptional","peekStartsWith","parseChildren","parseQueryParam","parseSegment","capture","parseParens","parseMatrixParams","parseParam","valueMatch","matchQueryParams","matchUrlQueryParamValue","decodedKey","decodedVal","currentVal","allowPrimary","outletName","undefined","indexOf","substr","NoMatch","AbsoluteRedirect","urlTree","noMatch","Observable","obs","absoluteRedirect","newTree","namedOutletsRedirect","ApplyRedirects","moduleInjector","configLoader","urlSerializer","allowRedirects","ngModule","NgModuleRef","expandSegmentGroup","rootSegmentGroup","createUrlTree","catchError","noMatchError","rootCandidate","_a","expandChildren","expandSegment","waitForMap","obj","waitHead","waitTail","mapped","concatAll","expandSegmentAgainstRoute","first","_","EmptyError","noLeftoversInUrl","paths","getOutlet","matchSegmentAgainstRoute","expandSegmentAgainstRouteUsingRedirect","expandWildCardWithParamsAgainstRouteUsingRedirect","expandRegularSegmentAgainstRouteUsingRedirect","applyRedirectCommands","lineralizeSegments","mergeMap","newSegments","group","consumedSegments","lastChild","positionalParamSegments","matched","rawSegmentGroup","load","injector","cfg","_loadedConfig","rawSlicedSegments","getChildConfig","routerConfig","childModule","childConfig","slicedSegments","containsEmptyPathRedirectsWithNamedOutlets","some","isEmptyPathRedirect","mergeTrivialChildren","createChildrenForEmptySegments","primarySegmentGroup","e_3","routes_2","routes_2_1","e_3_1","return","containsEmptyPathRedirects","addEmptySegmentsToChildrenIfNeeded","e_2","routes_1","routes_1_1","e_2_1","cs","runCanLoadGuard","canLoad","injectionToken","guard","shouldLoad","canLoadFails","navigationCancelingError","message","applyRedirectCreatreUrlTree","newRoot","createSegmentGroup","createQueryParams","redirectToParams","actualParams","sourceName","updatedSegments","createSegments","redirectToSegments","actualSegments","findPosParam","findOrReturn","redirectToUrlSegment","pos","e_1","idx","actualSegments_1","actualSegments_1_1","splice","e_1_1","Tree","_root","pathFromRoot","findNode","firstChild","siblings","findPath","filter","cc","node","_b","_c","node_1","unshift","TreeNode","nodeChildrenAsMap","RouterState","setRouterState","createEmptyState","rootComponent","createEmptyStateSnapshot","activated","ActivatedRouteSnapshot","RouterStateSnapshot","emptyUrl","BehaviorSubject","emptyParams","emptyData","emptyQueryParams","ActivatedRoute","data","futureSnapshot","_futureSnapshot","_routerState","_paramMap","inheritedParamsDataResolve","paramsInheritanceStrategy","inheritingStartingFrom","parent_1","flattenInherited","reduce","curr","_resolvedData","urlSegment","lastPathIndex","_urlSegment","_lastPathIndex","_resolve","serializeNode","advanceActivatedRoute","currentSnapshot","nextSnapshot","shallowEqualArrays","equalParamsAndUrlSegments","equalSegments","isMatrixParams","command","outlets","segmentPath","oldSegmentGroup","newSegmentGroup","qp","replaceSegment","oldSegment","newSegment","Navigation","isAbsolute","numberOfDoubleDots","commands","cmdWithOutlet","find","toRoot","Position","processChildren","getPath","updateSegmentGroup","startIndex","updateSegmentGroupChildren","prefixedWith","currentCommandIndex","currentPathIndex","pathIndex","commandIndex","compare","slicedCommands","g","createNewSegmentGroup","outlets_2","getOutlets","createNewSegmentChildren","stringify","CanActivate","CanDeactivate","PreActivation","future","forwardEvent","canActivateChecks","canDeactivateChecks","initialize","parentContexts","futureRoot","setupChildRouteGuards","checkGuards","isDeactivating","isActivating","runCanDeactivateChecks","canDeactivate","runCanActivateChecks","resolveData","concatMap","check","runResolve","futureNode","currNode","contexts","futurePath","prevChildren","setupRouteGuards","deactivateRouteAndItsChildren","getContext","context","shouldRunGuardsAndResolvers","runGuardsAndResolvers","mode","childName","isActivated","runCanDeactivate","fireChildActivationStart","fireActivationStart","runCanActivateChild","runCanActivate","canActivate","getToken","canActivateChildGuards","reverse","extractCanActivateChild","guards","canActivateChild","resolveNode","resolvedData","key_1","getResolver","resolver","token","closestLoadedConfig","NoMatch$1","Recognizer","rootComponentType","recognize","split$1","processSegmentGroup","freeze","rootNode","routeState","inheritParamsAndData","routeNode","processSegment","checkOutletNameUniqueness","nodes","names","routeWithSameOutletName","sortActivatedRouteSnapshots","sort","localeCompare","config_1","config_1_1","processSegmentAgainstRoute","rawSegment","getData","getSourceSegmentGroup","getPathIndexShift","getResolve","match$1","_sourceSegment","_segmentIndexShift","containsEmptyPathMatchesWithNamedOutlets","emptyPathMatch","getOutlet$1","s_1","createChildrenForEmptyPaths","primarySegment","containsEmptyPathMatches","s_2","addEmptyPathsToChildrenIfNeeded","RouteReuseStrategy","DefaultRouteReuseStrategy","shouldDetach","store","detachedTree","shouldAttach","retrieve","shouldReuseRoute","ROUTES","InjectionToken","RouterConfigLoader","loader","compiler","onLoadStartListener","onLoadEndListener","parentInjector","loadModuleFactory","NgModuleFactory","compileModuleAsync","UrlHandlingStrategy","DefaultUrlHandlingStrategy","shouldProcessUrl","extract","merge","newUrlPart","wholeUrl","defaultErrorHandler","defaultMalformedUriErrorHandler","defaultRouterHook","runExtras","Router","rootContexts","location","navigations","navigationId","events","Subject","errorHandler","malformedUriErrorHandler","navigated","lastSuccessfulId","hooks","beforePreactivation","afterPreactivation","urlHandlingStrategy","routeReuseStrategy","onSameUrlNavigation","urlUpdateStrategy","resetConfig","currentUrlTree","createEmptyUrlTree","rawUrlTree","triggerEvent","routerState","processNavigations","resetRootComponentType","initialNavigation","setUpLocationChangeListener","navigateByUrl","replaceUrl","locationSubscription","subscribe","change","parseUrl","source","setTimeout","scheduleNavigation","serializeUrl","ngOnDestroy","dispose","unsubscribe","navigationExtras","relativeTo","preserveQueryParams","queryParamsHandling","preserveFragment","isDevMode","console","warn","f","q","removeEmptyProps","nav","computeNavigation","cmd","cmdIdx","outlets_1","urlPart","partIndex","startingPosition","findStartingPosition","modifier","createPositionApplyingDoubleDots","ci","dd","extras","skipLocationChange","mergedTree","navigate","validateCommands","isActive","executeScheduledNavigation","promise","catch","rawUrl","lastNavigation","reject","rej","urlTransition","setBrowserUrl","then","runNavigate","precreatedState","resolvePromise","rejectPromise","preActivation","routerState$","appliedUrl","applyRedirects","appliedUrlTree","evt","createRouterState","prevState","createNode","createOrReuseChildren","detachedRouteHandle","setFutureSnapshotsOfActivatedRoutes","createActivatedRoute","activateRoutes","storedState","storedUrl","navigationIsSuccessful","ActivateRoutes","activate","resetUrlToCurrentUrlTree","isNavigationCancelingError","resetStateAndUrl","ee","isCurrentPathEqualTo","replaceState","go","futureState","currState","currRoot","deactivateChildRoutes","activateChildRoutes","futureChild","childOutletName","deactivateRoutes","parentContext","detachAndStoreRouteSubtree","deactivateRouteAndOutlet","componentRef","detach","onOutletDeactivated","contexts_1","deactivate","getOrCreateContext","stored","onOutletReAttached","attachRef","attach","advanceActivatedRouteNodeAndItsChildren","parentLoadedConfig","cmpFactoryResolver","componentFactoryResolver","activateWith","RouterLink","tabIndex","renderer","el","setAttribute","nativeElement","set","preserve","onClick","attrBoolValue","Input","String","Boolean","HostListener","Function","Directive","selector","Attribute","Renderer2","ElementRef","RouterLinkWithHref","locationStrategy","subscription","updateTargetUrlAndHref","ngOnChanges","changes","button","ctrlKey","metaKey","shiftKey","href","prepareExternalUrl","HostBinding","Number","LocationStrategy","RouterLinkActive","element","cdr","classes","routerLinkActiveOptions","update","ngAfterContentInit","links","linksWithHrefs","hasActiveLinks","addClass","removeClass","isLinkActive","link","ContentChildren","descendants","QueryList","exportAs","ChangeDetectorRef","OutletContext","ChildrenOutletContexts","Map","onChildOutletCreated","onChildOutletDestroyed","RouterOutlet","changeDetector","_activatedRoute","activateEvents","EventEmitter","deactivateEvents","ngOnInit","instance","cmp","ref","activatedRoute","insert","hostView","destroy","emit","resolveComponentFactory","childContexts","OutletInjector","createComponent","markForCheck","Output","ViewContainerRef","ComponentFactoryResolver","notFoundValue","PreloadingStrategy","PreloadAllModules","preload","NoPreloading","RouterPreloader","moduleLoader","preloadingStrategy","setUpPreloading","processRoutes","preloadConfig","Injectable","NgModuleFactoryLoader","Compiler","Injector","RouterScroller","viewportScroller","options","lastId","lastSource","restoredId","init","scrollPositionRestoration","setHistoryScrollRestoration","routerEventsSubscription","createScrollEvents","scrollEventsSubscription","consumeScrollEvents","getScrollPosition","scheduleScrollEvent","scrollToPosition","anchorScrolling","scrollToAnchor","ROUTER_DIRECTIVES","ROUTER_CONFIGURATION","ROUTER_FORROOT_GUARD","ROUTER_PROVIDERS","Location","provide","useClass","useFactory","setupRouter","opts","enableTracing","dom_1","ɵgetDOM","logGroup","log","logGroupEnd","deps","ApplicationRef","Optional","rootRoute","SystemJsNgModuleLoader","useValue","routerNgProbeToken","NgProbeToken","RouterModule","RouterModule_1","forRoot","providers","provideRoutes","provideForRootGuard","SkipSelf","provideLocationStrategy","PlatformLocation","Inject","APP_BASE_HREF","createRouterScroller","ViewportScroller","useExisting","multi","provideRouterInitializer","RouterInitializer","APP_INITIALIZER","getAppInitializer","ROUTER_INITIALIZER","getBootstrapListener","APP_BOOTSTRAP_LISTENER","forChild","NgModule","declarations","entryComponents","scrollOffset","setOffset","platformLocationStrategy","baseHref","useHash","HashLocationStrategy","PathLocationStrategy","ANALYZE_FOR_ENTRY_COMPONENTS","initNavigation","resultOfPreactivationDone","appInitializer","LOCATION_INITIALIZED","isLegacyDisabled","isLegacyEnabled","bootstrapListener","bootstrappedComponentRef","preloader","routerScroller","components","componentTypes","complete","bind","VERSION","Version","ɵEmptyOutletComponent","ɵROUTER_PROVIDERS","ɵflatten"],"mappings":"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","sourcesContent":["/**\n * @license Angular v6.1.0-rc.3+48.sha-168c2a6\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('rxjs'), require('rxjs/operators'), require('@angular/common'), require('@angular/platform-browser')) :\n    typeof define === 'function' && define.amd ? define('@angular/router', ['exports', '@angular/core', 'rxjs', 'rxjs/operators', '@angular/common', '@angular/platform-browser'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.router = {}),global.ng.core,global.rxjs,global.rxjs.operators,global.ng.common,global.ng.platformBrowser));\n}(this, (function (exports,core,rxjs,operators,common,platformBrowser) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Base for events the Router goes through, as opposed to events tied to a specific\n     * Route. `RouterEvent`s will only be fired one time for any given navigation.\n     *\n     * Example:\n     *\n     * ```\n     * class MyService {\n     *   constructor(public router: Router, logger: Logger) {\n     *     router.events.filter(e => e instanceof RouterEvent).subscribe(e => {\n     *       logger.log(e.id, e.url);\n     *     });\n     *   }\n     * }\n     * ```\n     *\n     * @experimental\n     */\n    var RouterEvent = /** @class */ (function () {\n        function RouterEvent(\n        /** @docsNotRequired */\n        id, \n        /** @docsNotRequired */\n        url) {\n            this.id = id;\n            this.url = url;\n        }\n        return RouterEvent;\n    }());\n    /**\n     * @description\n     *\n     * Represents an event triggered when a navigation starts.\n     *\n     *\n     */\n    var NavigationStart = /** @class */ (function (_super) {\n        __extends(NavigationStart, _super);\n        function NavigationStart(\n        /** @docsNotRequired */\n        id, \n        /** @docsNotRequired */\n        url, \n        /** @docsNotRequired */\n        navigationTrigger, \n        /** @docsNotRequired */\n        restoredState) {\n            if (navigationTrigger === void 0) { \n            /** @docsNotRequired */\n            navigationTrigger = 'imperative'; }\n            if (restoredState === void 0) { \n            /** @docsNotRequired */\n            restoredState = null; }\n            var _this = _super.call(this, id, url) || this;\n            _this.navigationTrigger = navigationTrigger;\n            _this.restoredState = restoredState;\n            return _this;\n        }\n        /** @docsNotRequired */\n        NavigationStart.prototype.toString = function () { return \"NavigationStart(id: \" + this.id + \", url: '\" + this.url + \"')\"; };\n        return NavigationStart;\n    }(RouterEvent));\n    /**\n     * @description\n     *\n     * Represents an event triggered when a navigation ends successfully.\n     *\n     *\n     */\n    var NavigationEnd = /** @class */ (function (_super) {\n        __extends(NavigationEnd, _super);\n        function NavigationEnd(\n        /** @docsNotRequired */\n        id, \n        /** @docsNotRequired */\n        url, \n        /** @docsNotRequired */\n        urlAfterRedirects) {\n            var _this = _super.call(this, id, url) || this;\n            _this.urlAfterRedirects = urlAfterRedirects;\n            return _this;\n        }\n        /** @docsNotRequired */\n        NavigationEnd.prototype.toString = function () {\n            return \"NavigationEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"')\";\n        };\n        return NavigationEnd;\n    }(RouterEvent));\n    /**\n     * @description\n     *\n     * Represents an event triggered when a navigation is canceled.\n     *\n     *\n     */\n    var NavigationCancel = /** @class */ (function (_super) {\n        __extends(NavigationCancel, _super);\n        function NavigationCancel(\n        /** @docsNotRequired */\n        id, \n        /** @docsNotRequired */\n        url, \n        /** @docsNotRequired */\n        reason) {\n            var _this = _super.call(this, id, url) || this;\n            _this.reason = reason;\n            return _this;\n        }\n        /** @docsNotRequired */\n        NavigationCancel.prototype.toString = function () { return \"NavigationCancel(id: \" + this.id + \", url: '\" + this.url + \"')\"; };\n        return NavigationCancel;\n    }(RouterEvent));\n    /**\n     * @description\n     *\n     * Represents an event triggered when a navigation fails due to an unexpected error.\n     *\n     *\n     */\n    var NavigationError = /** @class */ (function (_super) {\n        __extends(NavigationError, _super);\n        function NavigationError(\n        /** @docsNotRequired */\n        id, \n        /** @docsNotRequired */\n        url, \n        /** @docsNotRequired */\n        error) {\n            var _this = _super.call(this, id, url) || this;\n            _this.error = error;\n            return _this;\n        }\n        /** @docsNotRequired */\n        NavigationError.prototype.toString = function () {\n            return \"NavigationError(id: \" + this.id + \", url: '\" + this.url + \"', error: \" + this.error + \")\";\n        };\n        return NavigationError;\n    }(RouterEvent));\n    /**\n     * @description\n     *\n     * Represents an event triggered when routes are recognized.\n     *\n     *\n     */\n    var RoutesRecognized = /** @class */ (function (_super) {\n        __extends(RoutesRecognized, _super);\n        function RoutesRecognized(\n        /** @docsNotRequired */\n        id, \n        /** @docsNotRequired */\n        url, \n        /** @docsNotRequired */\n        urlAfterRedirects, \n        /** @docsNotRequired */\n        state) {\n            var _this = _super.call(this, id, url) || this;\n            _this.urlAfterRedirects = urlAfterRedirects;\n            _this.state = state;\n            return _this;\n        }\n        /** @docsNotRequired */\n        RoutesRecognized.prototype.toString = function () {\n            return \"RoutesRecognized(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n        };\n        return RoutesRecognized;\n    }(RouterEvent));\n    /**\n     * @description\n     *\n     * Represents the start of the Guard phase of routing.\n     *\n     * @experimental\n     */\n    var GuardsCheckStart = /** @class */ (function (_super) {\n        __extends(GuardsCheckStart, _super);\n        function GuardsCheckStart(\n        /** @docsNotRequired */\n        id, \n        /** @docsNotRequired */\n        url, \n        /** @docsNotRequired */\n        urlAfterRedirects, \n        /** @docsNotRequired */\n        state) {\n            var _this = _super.call(this, id, url) || this;\n            _this.urlAfterRedirects = urlAfterRedirects;\n            _this.state = state;\n            return _this;\n        }\n        GuardsCheckStart.prototype.toString = function () {\n            return \"GuardsCheckStart(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n        };\n        return GuardsCheckStart;\n    }(RouterEvent));\n    /**\n     * @description\n     *\n     * Represents the end of the Guard phase of routing.\n     *\n     * @experimental\n     */\n    var GuardsCheckEnd = /** @class */ (function (_super) {\n        __extends(GuardsCheckEnd, _super);\n        function GuardsCheckEnd(\n        /** @docsNotRequired */\n        id, \n        /** @docsNotRequired */\n        url, \n        /** @docsNotRequired */\n        urlAfterRedirects, \n        /** @docsNotRequired */\n        state, \n        /** @docsNotRequired */\n        shouldActivate) {\n            var _this = _super.call(this, id, url) || this;\n            _this.urlAfterRedirects = urlAfterRedirects;\n            _this.state = state;\n            _this.shouldActivate = shouldActivate;\n            return _this;\n        }\n        GuardsCheckEnd.prototype.toString = function () {\n            return \"GuardsCheckEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \", shouldActivate: \" + this.shouldActivate + \")\";\n        };\n        return GuardsCheckEnd;\n    }(RouterEvent));\n    /**\n     * @description\n     *\n     * Represents the start of the Resolve phase of routing. The timing of this\n     * event may change, thus it's experimental. In the current iteration it will run\n     * in the \"resolve\" phase whether there's things to resolve or not. In the future this\n     * behavior may change to only run when there are things to be resolved.\n     *\n     * @experimental\n     */\n    var ResolveStart = /** @class */ (function (_super) {\n        __extends(ResolveStart, _super);\n        function ResolveStart(\n        /** @docsNotRequired */\n        id, \n        /** @docsNotRequired */\n        url, \n        /** @docsNotRequired */\n        urlAfterRedirects, \n        /** @docsNotRequired */\n        state) {\n            var _this = _super.call(this, id, url) || this;\n            _this.urlAfterRedirects = urlAfterRedirects;\n            _this.state = state;\n            return _this;\n        }\n        ResolveStart.prototype.toString = function () {\n            return \"ResolveStart(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n        };\n        return ResolveStart;\n    }(RouterEvent));\n    /**\n     * @description\n     *\n     * Represents the end of the Resolve phase of routing. See note on\n     * `ResolveStart` for use of this experimental API.\n     *\n     * @experimental\n     */\n    var ResolveEnd = /** @class */ (function (_super) {\n        __extends(ResolveEnd, _super);\n        function ResolveEnd(\n        /** @docsNotRequired */\n        id, \n        /** @docsNotRequired */\n        url, \n        /** @docsNotRequired */\n        urlAfterRedirects, \n        /** @docsNotRequired */\n        state) {\n            var _this = _super.call(this, id, url) || this;\n            _this.urlAfterRedirects = urlAfterRedirects;\n            _this.state = state;\n            return _this;\n        }\n        ResolveEnd.prototype.toString = function () {\n            return \"ResolveEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n        };\n        return ResolveEnd;\n    }(RouterEvent));\n    /**\n     * @description\n     *\n     * Represents an event triggered before lazy loading a route config.\n     *\n     * @experimental\n     */\n    var RouteConfigLoadStart = /** @class */ (function () {\n        function RouteConfigLoadStart(\n        /** @docsNotRequired */\n        route) {\n            this.route = route;\n        }\n        RouteConfigLoadStart.prototype.toString = function () { return \"RouteConfigLoadStart(path: \" + this.route.path + \")\"; };\n        return RouteConfigLoadStart;\n    }());\n    /**\n     * @description\n     *\n     * Represents an event triggered when a route has been lazy loaded.\n     *\n     * @experimental\n     */\n    var RouteConfigLoadEnd = /** @class */ (function () {\n        function RouteConfigLoadEnd(\n        /** @docsNotRequired */\n        route) {\n            this.route = route;\n        }\n        RouteConfigLoadEnd.prototype.toString = function () { return \"RouteConfigLoadEnd(path: \" + this.route.path + \")\"; };\n        return RouteConfigLoadEnd;\n    }());\n    /**\n     * @description\n     *\n     * Represents the start of end of the Resolve phase of routing. See note on\n     * `ChildActivationEnd` for use of this experimental API.\n     *\n     * @experimental\n     */\n    var ChildActivationStart = /** @class */ (function () {\n        function ChildActivationStart(\n        /** @docsNotRequired */\n        snapshot) {\n            this.snapshot = snapshot;\n        }\n        ChildActivationStart.prototype.toString = function () {\n            var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n            return \"ChildActivationStart(path: '\" + path + \"')\";\n        };\n        return ChildActivationStart;\n    }());\n    /**\n     * @description\n     *\n     * Represents the start of end of the Resolve phase of routing. See note on\n     * `ChildActivationStart` for use of this experimental API.\n     *\n     * @experimental\n     */\n    var ChildActivationEnd = /** @class */ (function () {\n        function ChildActivationEnd(\n        /** @docsNotRequired */\n        snapshot) {\n            this.snapshot = snapshot;\n        }\n        ChildActivationEnd.prototype.toString = function () {\n            var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n            return \"ChildActivationEnd(path: '\" + path + \"')\";\n        };\n        return ChildActivationEnd;\n    }());\n    /**\n     * @description\n     *\n     * Represents the start of end of the Resolve phase of routing. See note on\n     * `ActivationEnd` for use of this experimental API.\n     *\n     * @experimental\n     */\n    var ActivationStart = /** @class */ (function () {\n        function ActivationStart(\n        /** @docsNotRequired */\n        snapshot) {\n            this.snapshot = snapshot;\n        }\n        ActivationStart.prototype.toString = function () {\n            var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n            return \"ActivationStart(path: '\" + path + \"')\";\n        };\n        return ActivationStart;\n    }());\n    /**\n     * @description\n     *\n     * Represents the start of end of the Resolve phase of routing. See note on\n     * `ActivationStart` for use of this experimental API.\n     *\n     * @experimental\n     */\n    var ActivationEnd = /** @class */ (function () {\n        function ActivationEnd(\n        /** @docsNotRequired */\n        snapshot) {\n            this.snapshot = snapshot;\n        }\n        ActivationEnd.prototype.toString = function () {\n            var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n            return \"ActivationEnd(path: '\" + path + \"')\";\n        };\n        return ActivationEnd;\n    }());\n    /**\n     * @description\n     *\n     * Represents a scrolling event.\n     */\n    var Scroll = /** @class */ (function () {\n        function Scroll(\n        /** @docsNotRequired */\n        routerEvent, \n        /** @docsNotRequired */\n        position, \n        /** @docsNotRequired */\n        anchor) {\n            this.routerEvent = routerEvent;\n            this.position = position;\n            this.anchor = anchor;\n        }\n        Scroll.prototype.toString = function () {\n            var pos = this.position ? this.position[0] + \", \" + this.position[1] : null;\n            return \"Scroll(anchor: '\" + this.anchor + \"', position: '\" + pos + \"')\";\n        };\n        return Scroll;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This component is used internally within the router to be a placeholder when an empty\n     * router-outlet is needed. For example, with a config such as:\n     *\n     * `{path: 'parent', outlet: 'nav', children: [...]}`\n     *\n     * In order to render, there needs to be a component on this config, which will default\n     * to this `EmptyOutletComponent`.\n     */\n    var EmptyOutletComponent = /** @class */ (function () {\n        function EmptyOutletComponent() {\n        }\n        EmptyOutletComponent = __decorate([\n            core.Component({ template: \"<router-outlet></router-outlet>\" })\n        ], EmptyOutletComponent);\n        return EmptyOutletComponent;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Name of the primary outlet.\n     *\n     *\n     */\n    var PRIMARY_OUTLET = 'primary';\n    var ParamsAsMap = /** @class */ (function () {\n        function ParamsAsMap(params) {\n            this.params = params || {};\n        }\n        ParamsAsMap.prototype.has = function (name) { return this.params.hasOwnProperty(name); };\n        ParamsAsMap.prototype.get = function (name) {\n            if (this.has(name)) {\n                var v = this.params[name];\n                return Array.isArray(v) ? v[0] : v;\n            }\n            return null;\n        };\n        ParamsAsMap.prototype.getAll = function (name) {\n            if (this.has(name)) {\n                var v = this.params[name];\n                return Array.isArray(v) ? v : [v];\n            }\n            return [];\n        };\n        Object.defineProperty(ParamsAsMap.prototype, \"keys\", {\n            get: function () { return Object.keys(this.params); },\n            enumerable: true,\n            configurable: true\n        });\n        return ParamsAsMap;\n    }());\n    /**\n     * Convert a `Params` instance to a `ParamMap`.\n     *\n     *\n     */\n    function convertToParamMap(params) {\n        return new ParamsAsMap(params);\n    }\n    var NAVIGATION_CANCELING_ERROR = 'ngNavigationCancelingError';\n    function navigationCancelingError(message) {\n        var error = Error('NavigationCancelingError: ' + message);\n        error[NAVIGATION_CANCELING_ERROR] = true;\n        return error;\n    }\n    function isNavigationCancelingError(error) {\n        return error && error[NAVIGATION_CANCELING_ERROR];\n    }\n    // Matches the route configuration (`route`) against the actual URL (`segments`).\n    function defaultUrlMatcher(segments, segmentGroup, route) {\n        var parts = route.path.split('/');\n        if (parts.length > segments.length) {\n            // The actual URL is shorter than the config, no match\n            return null;\n        }\n        if (route.pathMatch === 'full' &&\n            (segmentGroup.hasChildren() || parts.length < segments.length)) {\n            // The config is longer than the actual URL but we are looking for a full match, return null\n            return null;\n        }\n        var posParams = {};\n        // Check each config part against the actual URL\n        for (var index = 0; index < parts.length; index++) {\n            var part = parts[index];\n            var segment = segments[index];\n            var isParameter = part.startsWith(':');\n            if (isParameter) {\n                posParams[part.substring(1)] = segment;\n            }\n            else if (part !== segment.path) {\n                // The actual URL part does not match the config, no match\n                return null;\n            }\n        }\n        return { consumed: segments.slice(0, parts.length), posParams: posParams };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LoadedRouterConfig = /** @class */ (function () {\n        function LoadedRouterConfig(routes, module) {\n            this.routes = routes;\n            this.module = module;\n        }\n        return LoadedRouterConfig;\n    }());\n    function validateConfig(config, parentPath) {\n        if (parentPath === void 0) { parentPath = ''; }\n        // forEach doesn't iterate undefined values\n        for (var i = 0; i < config.length; i++) {\n            var route = config[i];\n            var fullPath = getFullPath(parentPath, route);\n            validateNode(route, fullPath);\n        }\n    }\n    function validateNode(route, fullPath) {\n        if (!route) {\n            throw new Error(\"\\n      Invalid configuration of route '\" + fullPath + \"': Encountered undefined route.\\n      The reason might be an extra comma.\\n\\n      Example:\\n      const routes: Routes = [\\n        { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\\n        { path: 'dashboard',  component: DashboardComponent },, << two commas\\n        { path: 'detail/:id', component: HeroDetailComponent }\\n      ];\\n    \");\n        }\n        if (Array.isArray(route)) {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': Array cannot be specified\");\n        }\n        if (!route.component && !route.children && !route.loadChildren &&\n            (route.outlet && route.outlet !== PRIMARY_OUTLET)) {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': a componentless route without children or loadChildren cannot have a named outlet set\");\n        }\n        if (route.redirectTo && route.children) {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and children cannot be used together\");\n        }\n        if (route.redirectTo && route.loadChildren) {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and loadChildren cannot be used together\");\n        }\n        if (route.children && route.loadChildren) {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': children and loadChildren cannot be used together\");\n        }\n        if (route.redirectTo && route.component) {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and component cannot be used together\");\n        }\n        if (route.path && route.matcher) {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': path and matcher cannot be used together\");\n        }\n        if (route.redirectTo === void 0 && !route.component && !route.children && !route.loadChildren) {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"'. One of the following must be provided: component, redirectTo, children or loadChildren\");\n        }\n        if (route.path === void 0 && route.matcher === void 0) {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': routes must have either a path or a matcher specified\");\n        }\n        if (typeof route.path === 'string' && route.path.charAt(0) === '/') {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': path cannot start with a slash\");\n        }\n        if (route.path === '' && route.redirectTo !== void 0 && route.pathMatch === void 0) {\n            var exp = \"The default value of 'pathMatch' is 'prefix', but often the intent is to use 'full'.\";\n            throw new Error(\"Invalid configuration of route '{path: \\\"\" + fullPath + \"\\\", redirectTo: \\\"\" + route.redirectTo + \"\\\"}': please provide 'pathMatch'. \" + exp);\n        }\n        if (route.pathMatch !== void 0 && route.pathMatch !== 'full' && route.pathMatch !== 'prefix') {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': pathMatch can only be set to 'prefix' or 'full'\");\n        }\n        if (route.children) {\n            validateConfig(route.children, fullPath);\n        }\n    }\n    function getFullPath(parentPath, currentRoute) {\n        if (!currentRoute) {\n            return parentPath;\n        }\n        if (!parentPath && !currentRoute.path) {\n            return '';\n        }\n        else if (parentPath && !currentRoute.path) {\n            return parentPath + \"/\";\n        }\n        else if (!parentPath && currentRoute.path) {\n            return currentRoute.path;\n        }\n        else {\n            return parentPath + \"/\" + currentRoute.path;\n        }\n    }\n    /**\n     * Makes a copy of the config and adds any default required properties.\n     */\n    function standardizeConfig(r) {\n        var children = r.children && r.children.map(standardizeConfig);\n        var c = children ? __assign({}, r, { children: children }) : __assign({}, r);\n        if (!c.component && (children || c.loadChildren) && (c.outlet && c.outlet !== PRIMARY_OUTLET)) {\n            c.component = EmptyOutletComponent;\n        }\n        return c;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function shallowEqualArrays(a, b) {\n        if (a.length !== b.length)\n            return false;\n        for (var i = 0; i < a.length; ++i) {\n            if (!shallowEqual(a[i], b[i]))\n                return false;\n        }\n        return true;\n    }\n    function shallowEqual(a, b) {\n        var k1 = Object.keys(a);\n        var k2 = Object.keys(b);\n        if (k1.length != k2.length) {\n            return false;\n        }\n        var key;\n        for (var i = 0; i < k1.length; i++) {\n            key = k1[i];\n            if (a[key] !== b[key]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * Flattens single-level nested arrays.\n     */\n    function flatten(arr) {\n        return Array.prototype.concat.apply([], arr);\n    }\n    /**\n     * Return the last element of an array.\n     */\n    function last(a) {\n        return a.length > 0 ? a[a.length - 1] : null;\n    }\n    function forEach(map, callback) {\n        for (var prop in map) {\n            if (map.hasOwnProperty(prop)) {\n                callback(map[prop], prop);\n            }\n        }\n    }\n    function waitForMap(obj, fn) {\n        if (Object.keys(obj).length === 0) {\n            return rxjs.of({});\n        }\n        var waitHead = [];\n        var waitTail = [];\n        var res = {};\n        forEach(obj, function (a, k) {\n            var mapped = fn(k, a).pipe(operators.map(function (r) { return res[k] = r; }));\n            if (k === PRIMARY_OUTLET) {\n                waitHead.push(mapped);\n            }\n            else {\n                waitTail.push(mapped);\n            }\n        });\n        // Closure compiler has problem with using spread operator here. So just using Array.concat.\n        return rxjs.of.apply(null, waitHead.concat(waitTail)).pipe(operators.concatAll(), operators.last(), operators.map(function () { return res; }));\n    }\n    /**\n     * ANDs Observables by merging all input observables, reducing to an Observable verifying all\n     * input Observables return `true`.\n     */\n    function andObservables(observables) {\n        return observables.pipe(operators.mergeAll(), operators.every(function (result) { return result === true; }));\n    }\n    function wrapIntoObservable(value) {\n        if (core.ɵisObservable(value)) {\n            return value;\n        }\n        if (core.ɵisPromise(value)) {\n            // Use `Promise.resolve()` to wrap promise-like instances.\n            // Required ie when a Resolver returns a AngularJS `$q` promise to correctly trigger the\n            // change detection.\n            return rxjs.from(Promise.resolve(value));\n        }\n        return rxjs.of(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function createEmptyUrlTree() {\n        return new UrlTree(new UrlSegmentGroup([], {}), {}, null);\n    }\n    function containsTree(container, containee, exact) {\n        if (exact) {\n            return equalQueryParams(container.queryParams, containee.queryParams) &&\n                equalSegmentGroups(container.root, containee.root);\n        }\n        return containsQueryParams(container.queryParams, containee.queryParams) &&\n            containsSegmentGroup(container.root, containee.root);\n    }\n    function equalQueryParams(container, containee) {\n        // TODO: This does not handle array params correctly.\n        return shallowEqual(container, containee);\n    }\n    function equalSegmentGroups(container, containee) {\n        if (!equalPath(container.segments, containee.segments))\n            return false;\n        if (container.numberOfChildren !== containee.numberOfChildren)\n            return false;\n        for (var c in containee.children) {\n            if (!container.children[c])\n                return false;\n            if (!equalSegmentGroups(container.children[c], containee.children[c]))\n                return false;\n        }\n        return true;\n    }\n    function containsQueryParams(container, containee) {\n        // TODO: This does not handle array params correctly.\n        return Object.keys(containee).length <= Object.keys(container).length &&\n            Object.keys(containee).every(function (key) { return containee[key] === container[key]; });\n    }\n    function containsSegmentGroup(container, containee) {\n        return containsSegmentGroupHelper(container, containee, containee.segments);\n    }\n    function containsSegmentGroupHelper(container, containee, containeePaths) {\n        if (container.segments.length > containeePaths.length) {\n            var current = container.segments.slice(0, containeePaths.length);\n            if (!equalPath(current, containeePaths))\n                return false;\n            if (containee.hasChildren())\n                return false;\n            return true;\n        }\n        else if (container.segments.length === containeePaths.length) {\n            if (!equalPath(container.segments, containeePaths))\n                return false;\n            for (var c in containee.children) {\n                if (!container.children[c])\n                    return false;\n                if (!containsSegmentGroup(container.children[c], containee.children[c]))\n                    return false;\n            }\n            return true;\n        }\n        else {\n            var current = containeePaths.slice(0, container.segments.length);\n            var next = containeePaths.slice(container.segments.length);\n            if (!equalPath(container.segments, current))\n                return false;\n            if (!container.children[PRIMARY_OUTLET])\n                return false;\n            return containsSegmentGroupHelper(container.children[PRIMARY_OUTLET], containee, next);\n        }\n    }\n    /**\n     * @description\n     *\n     * Represents the parsed URL.\n     *\n     * Since a router state is a tree, and the URL is nothing but a serialized state, the URL is a\n     * serialized tree.\n     * UrlTree is a data structure that provides a lot of affordances in dealing with URLs\n     *\n     * ### Example\n     *\n     * ```\n     * @Component({templateUrl:'template.html'})\n     * class MyComponent {\n     *   constructor(router: Router) {\n     *     const tree: UrlTree =\n     *       router.parseUrl('/team/33/(user/victor//support:help)?debug=true#fragment');\n     *     const f = tree.fragment; // return 'fragment'\n     *     const q = tree.queryParams; // returns {debug: 'true'}\n     *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n     *     const s: UrlSegment[] = g.segments; // returns 2 segments 'team' and '33'\n     *     g.children[PRIMARY_OUTLET].segments; // returns 2 segments 'user' and 'victor'\n     *     g.children['support'].segments; // return 1 segment 'help'\n     *   }\n     * }\n     * ```\n     *\n     *\n     */\n    var UrlTree = /** @class */ (function () {\n        /** @internal */\n        function UrlTree(\n        /** The root segment group of the URL tree */\n        root, \n        /** The query params of the URL */\n        queryParams, \n        /** The fragment of the URL */\n        fragment) {\n            this.root = root;\n            this.queryParams = queryParams;\n            this.fragment = fragment;\n        }\n        Object.defineProperty(UrlTree.prototype, \"queryParamMap\", {\n            get: function () {\n                if (!this._queryParamMap) {\n                    this._queryParamMap = convertToParamMap(this.queryParams);\n                }\n                return this._queryParamMap;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /** @docsNotRequired */\n        UrlTree.prototype.toString = function () { return DEFAULT_SERIALIZER.serialize(this); };\n        return UrlTree;\n    }());\n    /**\n     * @description\n     *\n     * Represents the parsed URL segment group.\n     *\n     * See `UrlTree` for more information.\n     *\n     *\n     */\n    var UrlSegmentGroup = /** @class */ (function () {\n        function UrlSegmentGroup(\n        /** The URL segments of this group. See `UrlSegment` for more information */\n        segments, \n        /** The list of children of this group */\n        children) {\n            var _this = this;\n            this.segments = segments;\n            this.children = children;\n            /** The parent node in the url tree */\n            this.parent = null;\n            forEach(children, function (v, k) { return v.parent = _this; });\n        }\n        /** Whether the segment has child segments */\n        UrlSegmentGroup.prototype.hasChildren = function () { return this.numberOfChildren > 0; };\n        Object.defineProperty(UrlSegmentGroup.prototype, \"numberOfChildren\", {\n            /** Number of child segments */\n            get: function () { return Object.keys(this.children).length; },\n            enumerable: true,\n            configurable: true\n        });\n        /** @docsNotRequired */\n        UrlSegmentGroup.prototype.toString = function () { return serializePaths(this); };\n        return UrlSegmentGroup;\n    }());\n    /**\n     * @description\n     *\n     * Represents a single URL segment.\n     *\n     * A UrlSegment is a part of a URL between the two slashes. It contains a path and the matrix\n     * parameters associated with the segment.\n     *\n     * ## Example\n     *\n     * ```\n     * @Component({templateUrl:'template.html'})\n     * class MyComponent {\n     *   constructor(router: Router) {\n     *     const tree: UrlTree = router.parseUrl('/team;id=33');\n     *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n     *     const s: UrlSegment[] = g.segments;\n     *     s[0].path; // returns 'team'\n     *     s[0].parameters; // returns {id: 33}\n     *   }\n     * }\n     * ```\n     *\n     *\n     */\n    var UrlSegment = /** @class */ (function () {\n        function UrlSegment(\n        /** The path part of a URL segment */\n        path, \n        /** The matrix parameters associated with a segment */\n        parameters) {\n            this.path = path;\n            this.parameters = parameters;\n        }\n        Object.defineProperty(UrlSegment.prototype, \"parameterMap\", {\n            get: function () {\n                if (!this._parameterMap) {\n                    this._parameterMap = convertToParamMap(this.parameters);\n                }\n                return this._parameterMap;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /** @docsNotRequired */\n        UrlSegment.prototype.toString = function () { return serializePath(this); };\n        return UrlSegment;\n    }());\n    function equalSegments(as, bs) {\n        return equalPath(as, bs) && as.every(function (a, i) { return shallowEqual(a.parameters, bs[i].parameters); });\n    }\n    function equalPath(as, bs) {\n        if (as.length !== bs.length)\n            return false;\n        return as.every(function (a, i) { return a.path === bs[i].path; });\n    }\n    function mapChildrenIntoArray(segment, fn) {\n        var res = [];\n        forEach(segment.children, function (child, childOutlet) {\n            if (childOutlet === PRIMARY_OUTLET) {\n                res = res.concat(fn(child, childOutlet));\n            }\n        });\n        forEach(segment.children, function (child, childOutlet) {\n            if (childOutlet !== PRIMARY_OUTLET) {\n                res = res.concat(fn(child, childOutlet));\n            }\n        });\n        return res;\n    }\n    /**\n     * @description\n     *\n     * Serializes and deserializes a URL string into a URL tree.\n     *\n     * The url serialization strategy is customizable. You can\n     * make all URLs case insensitive by providing a custom UrlSerializer.\n     *\n     * See `DefaultUrlSerializer` for an example of a URL serializer.\n     *\n     *\n     */\n    var UrlSerializer = /** @class */ (function () {\n        function UrlSerializer() {\n        }\n        return UrlSerializer;\n    }());\n    /**\n     * @description\n     *\n     * A default implementation of the `UrlSerializer`.\n     *\n     * Example URLs:\n     *\n     * ```\n     * /inbox/33(popup:compose)\n     * /inbox/33;open=true/messages/44\n     * ```\n     *\n     * DefaultUrlSerializer uses parentheses to serialize secondary segments (e.g., popup:compose), the\n     * colon syntax to specify the outlet, and the ';parameter=value' syntax (e.g., open=true) to\n     * specify route specific parameters.\n     *\n     *\n     */\n    var DefaultUrlSerializer = /** @class */ (function () {\n        function DefaultUrlSerializer() {\n        }\n        /** Parses a url into a `UrlTree` */\n        DefaultUrlSerializer.prototype.parse = function (url) {\n            var p = new UrlParser(url);\n            return new UrlTree(p.parseRootSegment(), p.parseQueryParams(), p.parseFragment());\n        };\n        /** Converts a `UrlTree` into a url */\n        DefaultUrlSerializer.prototype.serialize = function (tree) {\n            var segment = \"/\" + serializeSegment(tree.root, true);\n            var query = serializeQueryParams(tree.queryParams);\n            var fragment = typeof tree.fragment === \"string\" ? \"#\" + encodeUriFragment(tree.fragment) : '';\n            return \"\" + segment + query + fragment;\n        };\n        return DefaultUrlSerializer;\n    }());\n    var DEFAULT_SERIALIZER = new DefaultUrlSerializer();\n    function serializePaths(segment) {\n        return segment.segments.map(function (p) { return serializePath(p); }).join('/');\n    }\n    function serializeSegment(segment, root) {\n        if (!segment.hasChildren()) {\n            return serializePaths(segment);\n        }\n        if (root) {\n            var primary = segment.children[PRIMARY_OUTLET] ?\n                serializeSegment(segment.children[PRIMARY_OUTLET], false) :\n                '';\n            var children_1 = [];\n            forEach(segment.children, function (v, k) {\n                if (k !== PRIMARY_OUTLET) {\n                    children_1.push(k + \":\" + serializeSegment(v, false));\n                }\n            });\n            return children_1.length > 0 ? primary + \"(\" + children_1.join('//') + \")\" : primary;\n        }\n        else {\n            var children = mapChildrenIntoArray(segment, function (v, k) {\n                if (k === PRIMARY_OUTLET) {\n                    return [serializeSegment(segment.children[PRIMARY_OUTLET], false)];\n                }\n                return [k + \":\" + serializeSegment(v, false)];\n            });\n            return serializePaths(segment) + \"/(\" + children.join('//') + \")\";\n        }\n    }\n    /**\n     * Encodes a URI string with the default encoding. This function will only ever be called from\n     * `encodeUriQuery` or `encodeUriSegment` as it's the base set of encodings to be used. We need\n     * a custom encoding because encodeURIComponent is too aggressive and encodes stuff that doesn't\n     * have to be encoded per https://url.spec.whatwg.org.\n     */\n    function encodeUriString(s) {\n        return encodeURIComponent(s)\n            .replace(/%40/g, '@')\n            .replace(/%3A/gi, ':')\n            .replace(/%24/g, '$')\n            .replace(/%2C/gi, ',');\n    }\n    /**\n     * This function should be used to encode both keys and values in a query string key/value. In\n     * the following URL, you need to call encodeUriQuery on \"k\" and \"v\":\n     *\n     * http://www.site.org/html;mk=mv?k=v#f\n     */\n    function encodeUriQuery(s) {\n        return encodeUriString(s).replace(/%3B/gi, ';');\n    }\n    /**\n     * This function should be used to encode a URL fragment. In the following URL, you need to call\n     * encodeUriFragment on \"f\":\n     *\n     * http://www.site.org/html;mk=mv?k=v#f\n     */\n    function encodeUriFragment(s) {\n        return encodeURI(s);\n    }\n    /**\n     * This function should be run on any URI segment as well as the key and value in a key/value\n     * pair for matrix params. In the following URL, you need to call encodeUriSegment on \"html\",\n     * \"mk\", and \"mv\":\n     *\n     * http://www.site.org/html;mk=mv?k=v#f\n     */\n    function encodeUriSegment(s) {\n        return encodeUriString(s).replace(/\\(/g, '%28').replace(/\\)/g, '%29').replace(/%26/gi, '&');\n    }\n    function decode(s) {\n        return decodeURIComponent(s);\n    }\n    // Query keys/values should have the \"+\" replaced first, as \"+\" in a query string is \" \".\n    // decodeURIComponent function will not decode \"+\" as a space.\n    function decodeQuery(s) {\n        return decode(s.replace(/\\+/g, '%20'));\n    }\n    function serializePath(path) {\n        return \"\" + encodeUriSegment(path.path) + serializeMatrixParams(path.parameters);\n    }\n    function serializeMatrixParams(params) {\n        return Object.keys(params)\n            .map(function (key) { return \";\" + encodeUriSegment(key) + \"=\" + encodeUriSegment(params[key]); })\n            .join('');\n    }\n    function serializeQueryParams(params) {\n        var strParams = Object.keys(params).map(function (name) {\n            var value = params[name];\n            return Array.isArray(value) ?\n                value.map(function (v) { return encodeUriQuery(name) + \"=\" + encodeUriQuery(v); }).join('&') :\n                encodeUriQuery(name) + \"=\" + encodeUriQuery(value);\n        });\n        return strParams.length ? \"?\" + strParams.join(\"&\") : '';\n    }\n    var SEGMENT_RE = /^[^\\/()?;=#]+/;\n    function matchSegments(str) {\n        var match = str.match(SEGMENT_RE);\n        return match ? match[0] : '';\n    }\n    var QUERY_PARAM_RE = /^[^=?&#]+/;\n    // Return the name of the query param at the start of the string or an empty string\n    function matchQueryParams(str) {\n        var match = str.match(QUERY_PARAM_RE);\n        return match ? match[0] : '';\n    }\n    var QUERY_PARAM_VALUE_RE = /^[^?&#]+/;\n    // Return the value of the query param at the start of the string or an empty string\n    function matchUrlQueryParamValue(str) {\n        var match = str.match(QUERY_PARAM_VALUE_RE);\n        return match ? match[0] : '';\n    }\n    var UrlParser = /** @class */ (function () {\n        function UrlParser(url) {\n            this.url = url;\n            this.remaining = url;\n        }\n        UrlParser.prototype.parseRootSegment = function () {\n            this.consumeOptional('/');\n            if (this.remaining === '' || this.peekStartsWith('?') || this.peekStartsWith('#')) {\n                return new UrlSegmentGroup([], {});\n            }\n            // The root segment group never has segments\n            return new UrlSegmentGroup([], this.parseChildren());\n        };\n        UrlParser.prototype.parseQueryParams = function () {\n            var params = {};\n            if (this.consumeOptional('?')) {\n                do {\n                    this.parseQueryParam(params);\n                } while (this.consumeOptional('&'));\n            }\n            return params;\n        };\n        UrlParser.prototype.parseFragment = function () {\n            return this.consumeOptional('#') ? decodeURIComponent(this.remaining) : null;\n        };\n        UrlParser.prototype.parseChildren = function () {\n            if (this.remaining === '') {\n                return {};\n            }\n            this.consumeOptional('/');\n            var segments = [];\n            if (!this.peekStartsWith('(')) {\n                segments.push(this.parseSegment());\n            }\n            while (this.peekStartsWith('/') && !this.peekStartsWith('//') && !this.peekStartsWith('/(')) {\n                this.capture('/');\n                segments.push(this.parseSegment());\n            }\n            var children = {};\n            if (this.peekStartsWith('/(')) {\n                this.capture('/');\n                children = this.parseParens(true);\n            }\n            var res = {};\n            if (this.peekStartsWith('(')) {\n                res = this.parseParens(false);\n            }\n            if (segments.length > 0 || Object.keys(children).length > 0) {\n                res[PRIMARY_OUTLET] = new UrlSegmentGroup(segments, children);\n            }\n            return res;\n        };\n        // parse a segment with its matrix parameters\n        // ie `name;k1=v1;k2`\n        UrlParser.prototype.parseSegment = function () {\n            var path = matchSegments(this.remaining);\n            if (path === '' && this.peekStartsWith(';')) {\n                throw new Error(\"Empty path url segment cannot have parameters: '\" + this.remaining + \"'.\");\n            }\n            this.capture(path);\n            return new UrlSegment(decode(path), this.parseMatrixParams());\n        };\n        UrlParser.prototype.parseMatrixParams = function () {\n            var params = {};\n            while (this.consumeOptional(';')) {\n                this.parseParam(params);\n            }\n            return params;\n        };\n        UrlParser.prototype.parseParam = function (params) {\n            var key = matchSegments(this.remaining);\n            if (!key) {\n                return;\n            }\n            this.capture(key);\n            var value = '';\n            if (this.consumeOptional('=')) {\n                var valueMatch = matchSegments(this.remaining);\n                if (valueMatch) {\n                    value = valueMatch;\n                    this.capture(value);\n                }\n            }\n            params[decode(key)] = decode(value);\n        };\n        // Parse a single query parameter `name[=value]`\n        UrlParser.prototype.parseQueryParam = function (params) {\n            var key = matchQueryParams(this.remaining);\n            if (!key) {\n                return;\n            }\n            this.capture(key);\n            var value = '';\n            if (this.consumeOptional('=')) {\n                var valueMatch = matchUrlQueryParamValue(this.remaining);\n                if (valueMatch) {\n                    value = valueMatch;\n                    this.capture(value);\n                }\n            }\n            var decodedKey = decodeQuery(key);\n            var decodedVal = decodeQuery(value);\n            if (params.hasOwnProperty(decodedKey)) {\n                // Append to existing values\n                var currentVal = params[decodedKey];\n                if (!Array.isArray(currentVal)) {\n                    currentVal = [currentVal];\n                    params[decodedKey] = currentVal;\n                }\n                currentVal.push(decodedVal);\n            }\n            else {\n                // Create a new value\n                params[decodedKey] = decodedVal;\n            }\n        };\n        // parse `(a/b//outlet_name:c/d)`\n        UrlParser.prototype.parseParens = function (allowPrimary) {\n            var segments = {};\n            this.capture('(');\n            while (!this.consumeOptional(')') && this.remaining.length > 0) {\n                var path = matchSegments(this.remaining);\n                var next = this.remaining[path.length];\n                // if is is not one of these characters, then the segment was unescaped\n                // or the group was not closed\n                if (next !== '/' && next !== ')' && next !== ';') {\n                    throw new Error(\"Cannot parse url '\" + this.url + \"'\");\n                }\n                var outletName = undefined;\n                if (path.indexOf(':') > -1) {\n                    outletName = path.substr(0, path.indexOf(':'));\n                    this.capture(outletName);\n                    this.capture(':');\n                }\n                else if (allowPrimary) {\n                    outletName = PRIMARY_OUTLET;\n                }\n                var children = this.parseChildren();\n                segments[outletName] = Object.keys(children).length === 1 ? children[PRIMARY_OUTLET] :\n                    new UrlSegmentGroup([], children);\n                this.consumeOptional('//');\n            }\n            return segments;\n        };\n        UrlParser.prototype.peekStartsWith = function (str) { return this.remaining.startsWith(str); };\n        // Consumes the prefix when it is present and returns whether it has been consumed\n        UrlParser.prototype.consumeOptional = function (str) {\n            if (this.peekStartsWith(str)) {\n                this.remaining = this.remaining.substring(str.length);\n                return true;\n            }\n            return false;\n        };\n        UrlParser.prototype.capture = function (str) {\n            if (!this.consumeOptional(str)) {\n                throw new Error(\"Expected \\\"\" + str + \"\\\".\");\n            }\n        };\n        return UrlParser;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NoMatch = /** @class */ (function () {\n        function NoMatch(segmentGroup) {\n            this.segmentGroup = segmentGroup || null;\n        }\n        return NoMatch;\n    }());\n    var AbsoluteRedirect = /** @class */ (function () {\n        function AbsoluteRedirect(urlTree) {\n            this.urlTree = urlTree;\n        }\n        return AbsoluteRedirect;\n    }());\n    function noMatch(segmentGroup) {\n        return new rxjs.Observable(function (obs) { return obs.error(new NoMatch(segmentGroup)); });\n    }\n    function absoluteRedirect(newTree) {\n        return new rxjs.Observable(function (obs) { return obs.error(new AbsoluteRedirect(newTree)); });\n    }\n    function namedOutletsRedirect(redirectTo) {\n        return new rxjs.Observable(function (obs) { return obs.error(new Error(\"Only absolute redirects can have named outlets. redirectTo: '\" + redirectTo + \"'\")); });\n    }\n    function canLoadFails(route) {\n        return new rxjs.Observable(function (obs) { return obs.error(navigationCancelingError(\"Cannot load children because the guard of the route \\\"path: '\" + route.path + \"'\\\" returned false\")); });\n    }\n    /**\n     * Returns the `UrlTree` with the redirection applied.\n     *\n     * Lazy modules are loaded along the way.\n     */\n    function applyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config) {\n        return new ApplyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config).apply();\n    }\n    var ApplyRedirects = /** @class */ (function () {\n        function ApplyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config) {\n            this.configLoader = configLoader;\n            this.urlSerializer = urlSerializer;\n            this.urlTree = urlTree;\n            this.config = config;\n            this.allowRedirects = true;\n            this.ngModule = moduleInjector.get(core.NgModuleRef);\n        }\n        ApplyRedirects.prototype.apply = function () {\n            var _this = this;\n            var expanded$ = this.expandSegmentGroup(this.ngModule, this.config, this.urlTree.root, PRIMARY_OUTLET);\n            var urlTrees$ = expanded$.pipe(operators.map(function (rootSegmentGroup) { return _this.createUrlTree(rootSegmentGroup, _this.urlTree.queryParams, _this.urlTree.fragment); }));\n            return urlTrees$.pipe(operators.catchError(function (e) {\n                if (e instanceof AbsoluteRedirect) {\n                    // after an absolute redirect we do not apply any more redirects!\n                    _this.allowRedirects = false;\n                    // we need to run matching, so we can fetch all lazy-loaded modules\n                    return _this.match(e.urlTree);\n                }\n                if (e instanceof NoMatch) {\n                    throw _this.noMatchError(e);\n                }\n                throw e;\n            }));\n        };\n        ApplyRedirects.prototype.match = function (tree) {\n            var _this = this;\n            var expanded$ = this.expandSegmentGroup(this.ngModule, this.config, tree.root, PRIMARY_OUTLET);\n            var mapped$ = expanded$.pipe(operators.map(function (rootSegmentGroup) {\n                return _this.createUrlTree(rootSegmentGroup, tree.queryParams, tree.fragment);\n            }));\n            return mapped$.pipe(operators.catchError(function (e) {\n                if (e instanceof NoMatch) {\n                    throw _this.noMatchError(e);\n                }\n                throw e;\n            }));\n        };\n        ApplyRedirects.prototype.noMatchError = function (e) {\n            return new Error(\"Cannot match any routes. URL Segment: '\" + e.segmentGroup + \"'\");\n        };\n        ApplyRedirects.prototype.createUrlTree = function (rootCandidate, queryParams, fragment) {\n            var _a;\n            var root = rootCandidate.segments.length > 0 ?\n                new UrlSegmentGroup([], (_a = {}, _a[PRIMARY_OUTLET] = rootCandidate, _a)) :\n                rootCandidate;\n            return new UrlTree(root, queryParams, fragment);\n        };\n        ApplyRedirects.prototype.expandSegmentGroup = function (ngModule, routes, segmentGroup, outlet) {\n            if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n                return this.expandChildren(ngModule, routes, segmentGroup)\n                    .pipe(operators.map(function (children) { return new UrlSegmentGroup([], children); }));\n            }\n            return this.expandSegment(ngModule, segmentGroup, routes, segmentGroup.segments, outlet, true);\n        };\n        // Recursively expand segment groups for all the child outlets\n        ApplyRedirects.prototype.expandChildren = function (ngModule, routes, segmentGroup) {\n            var _this = this;\n            return waitForMap(segmentGroup.children, function (childOutlet, child) { return _this.expandSegmentGroup(ngModule, routes, child, childOutlet); });\n        };\n        ApplyRedirects.prototype.expandSegment = function (ngModule, segmentGroup, routes, segments, outlet, allowRedirects) {\n            var _this = this;\n            return rxjs.of.apply(void 0, __spread(routes)).pipe(operators.map(function (r) {\n                var expanded$ = _this.expandSegmentAgainstRoute(ngModule, segmentGroup, routes, r, segments, outlet, allowRedirects);\n                return expanded$.pipe(operators.catchError(function (e) {\n                    if (e instanceof NoMatch) {\n                        // TODO(i): this return type doesn't match the declared Observable<UrlSegmentGroup> -\n                        // talk to Jason\n                        return rxjs.of(null);\n                    }\n                    throw e;\n                }));\n            }), operators.concatAll(), operators.first(function (s) { return !!s; }), operators.catchError(function (e, _) {\n                if (e instanceof rxjs.EmptyError || e.name === 'EmptyError') {\n                    if (_this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n                        return rxjs.of(new UrlSegmentGroup([], {}));\n                    }\n                    throw new NoMatch(segmentGroup);\n                }\n                throw e;\n            }));\n        };\n        ApplyRedirects.prototype.noLeftoversInUrl = function (segmentGroup, segments, outlet) {\n            return segments.length === 0 && !segmentGroup.children[outlet];\n        };\n        ApplyRedirects.prototype.expandSegmentAgainstRoute = function (ngModule, segmentGroup, routes, route, paths, outlet, allowRedirects) {\n            if (getOutlet(route) !== outlet) {\n                return noMatch(segmentGroup);\n            }\n            if (route.redirectTo === undefined) {\n                return this.matchSegmentAgainstRoute(ngModule, segmentGroup, route, paths);\n            }\n            if (allowRedirects && this.allowRedirects) {\n                return this.expandSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, paths, outlet);\n            }\n            return noMatch(segmentGroup);\n        };\n        ApplyRedirects.prototype.expandSegmentAgainstRouteUsingRedirect = function (ngModule, segmentGroup, routes, route, segments, outlet) {\n            if (route.path === '**') {\n                return this.expandWildCardWithParamsAgainstRouteUsingRedirect(ngModule, routes, route, outlet);\n            }\n            return this.expandRegularSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, segments, outlet);\n        };\n        ApplyRedirects.prototype.expandWildCardWithParamsAgainstRouteUsingRedirect = function (ngModule, routes, route, outlet) {\n            var _this = this;\n            var newTree = this.applyRedirectCommands([], route.redirectTo, {});\n            if (route.redirectTo.startsWith('/')) {\n                return absoluteRedirect(newTree);\n            }\n            return this.lineralizeSegments(route, newTree).pipe(operators.mergeMap(function (newSegments) {\n                var group = new UrlSegmentGroup(newSegments, {});\n                return _this.expandSegment(ngModule, group, routes, newSegments, outlet, false);\n            }));\n        };\n        ApplyRedirects.prototype.expandRegularSegmentAgainstRouteUsingRedirect = function (ngModule, segmentGroup, routes, route, segments, outlet) {\n            var _this = this;\n            var _a = match(segmentGroup, route, segments), matched = _a.matched, consumedSegments = _a.consumedSegments, lastChild = _a.lastChild, positionalParamSegments = _a.positionalParamSegments;\n            if (!matched)\n                return noMatch(segmentGroup);\n            var newTree = this.applyRedirectCommands(consumedSegments, route.redirectTo, positionalParamSegments);\n            if (route.redirectTo.startsWith('/')) {\n                return absoluteRedirect(newTree);\n            }\n            return this.lineralizeSegments(route, newTree).pipe(operators.mergeMap(function (newSegments) {\n                return _this.expandSegment(ngModule, segmentGroup, routes, newSegments.concat(segments.slice(lastChild)), outlet, false);\n            }));\n        };\n        ApplyRedirects.prototype.matchSegmentAgainstRoute = function (ngModule, rawSegmentGroup, route, segments) {\n            var _this = this;\n            if (route.path === '**') {\n                if (route.loadChildren) {\n                    return this.configLoader.load(ngModule.injector, route)\n                        .pipe(operators.map(function (cfg) {\n                        route._loadedConfig = cfg;\n                        return new UrlSegmentGroup(segments, {});\n                    }));\n                }\n                return rxjs.of(new UrlSegmentGroup(segments, {}));\n            }\n            var _a = match(rawSegmentGroup, route, segments), matched = _a.matched, consumedSegments = _a.consumedSegments, lastChild = _a.lastChild;\n            if (!matched)\n                return noMatch(rawSegmentGroup);\n            var rawSlicedSegments = segments.slice(lastChild);\n            var childConfig$ = this.getChildConfig(ngModule, route);\n            return childConfig$.pipe(operators.mergeMap(function (routerConfig) {\n                var childModule = routerConfig.module;\n                var childConfig = routerConfig.routes;\n                var _a = split(rawSegmentGroup, consumedSegments, rawSlicedSegments, childConfig), segmentGroup = _a.segmentGroup, slicedSegments = _a.slicedSegments;\n                if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n                    var expanded$_1 = _this.expandChildren(childModule, childConfig, segmentGroup);\n                    return expanded$_1.pipe(operators.map(function (children) { return new UrlSegmentGroup(consumedSegments, children); }));\n                }\n                if (childConfig.length === 0 && slicedSegments.length === 0) {\n                    return rxjs.of(new UrlSegmentGroup(consumedSegments, {}));\n                }\n                var expanded$ = _this.expandSegment(childModule, segmentGroup, childConfig, slicedSegments, PRIMARY_OUTLET, true);\n                return expanded$.pipe(operators.map(function (cs) {\n                    return new UrlSegmentGroup(consumedSegments.concat(cs.segments), cs.children);\n                }));\n            }));\n        };\n        ApplyRedirects.prototype.getChildConfig = function (ngModule, route) {\n            var _this = this;\n            if (route.children) {\n                // The children belong to the same module\n                return rxjs.of(new LoadedRouterConfig(route.children, ngModule));\n            }\n            if (route.loadChildren) {\n                // lazy children belong to the loaded module\n                if (route._loadedConfig !== undefined) {\n                    return rxjs.of(route._loadedConfig);\n                }\n                return runCanLoadGuard(ngModule.injector, route).pipe(operators.mergeMap(function (shouldLoad) {\n                    if (shouldLoad) {\n                        return _this.configLoader.load(ngModule.injector, route)\n                            .pipe(operators.map(function (cfg) {\n                            route._loadedConfig = cfg;\n                            return cfg;\n                        }));\n                    }\n                    return canLoadFails(route);\n                }));\n            }\n            return rxjs.of(new LoadedRouterConfig([], ngModule));\n        };\n        ApplyRedirects.prototype.lineralizeSegments = function (route, urlTree) {\n            var res = [];\n            var c = urlTree.root;\n            while (true) {\n                res = res.concat(c.segments);\n                if (c.numberOfChildren === 0) {\n                    return rxjs.of(res);\n                }\n                if (c.numberOfChildren > 1 || !c.children[PRIMARY_OUTLET]) {\n                    return namedOutletsRedirect(route.redirectTo);\n                }\n                c = c.children[PRIMARY_OUTLET];\n            }\n        };\n        ApplyRedirects.prototype.applyRedirectCommands = function (segments, redirectTo, posParams) {\n            return this.applyRedirectCreatreUrlTree(redirectTo, this.urlSerializer.parse(redirectTo), segments, posParams);\n        };\n        ApplyRedirects.prototype.applyRedirectCreatreUrlTree = function (redirectTo, urlTree, segments, posParams) {\n            var newRoot = this.createSegmentGroup(redirectTo, urlTree.root, segments, posParams);\n            return new UrlTree(newRoot, this.createQueryParams(urlTree.queryParams, this.urlTree.queryParams), urlTree.fragment);\n        };\n        ApplyRedirects.prototype.createQueryParams = function (redirectToParams, actualParams) {\n            var res = {};\n            forEach(redirectToParams, function (v, k) {\n                var copySourceValue = typeof v === 'string' && v.startsWith(':');\n                if (copySourceValue) {\n                    var sourceName = v.substring(1);\n                    res[k] = actualParams[sourceName];\n                }\n                else {\n                    res[k] = v;\n                }\n            });\n            return res;\n        };\n        ApplyRedirects.prototype.createSegmentGroup = function (redirectTo, group, segments, posParams) {\n            var _this = this;\n            var updatedSegments = this.createSegments(redirectTo, group.segments, segments, posParams);\n            var children = {};\n            forEach(group.children, function (child, name) {\n                children[name] = _this.createSegmentGroup(redirectTo, child, segments, posParams);\n            });\n            return new UrlSegmentGroup(updatedSegments, children);\n        };\n        ApplyRedirects.prototype.createSegments = function (redirectTo, redirectToSegments, actualSegments, posParams) {\n            var _this = this;\n            return redirectToSegments.map(function (s) { return s.path.startsWith(':') ? _this.findPosParam(redirectTo, s, posParams) :\n                _this.findOrReturn(s, actualSegments); });\n        };\n        ApplyRedirects.prototype.findPosParam = function (redirectTo, redirectToUrlSegment, posParams) {\n            var pos = posParams[redirectToUrlSegment.path.substring(1)];\n            if (!pos)\n                throw new Error(\"Cannot redirect to '\" + redirectTo + \"'. Cannot find '\" + redirectToUrlSegment.path + \"'.\");\n            return pos;\n        };\n        ApplyRedirects.prototype.findOrReturn = function (redirectToUrlSegment, actualSegments) {\n            var e_1, _a;\n            var idx = 0;\n            try {\n                for (var actualSegments_1 = __values(actualSegments), actualSegments_1_1 = actualSegments_1.next(); !actualSegments_1_1.done; actualSegments_1_1 = actualSegments_1.next()) {\n                    var s = actualSegments_1_1.value;\n                    if (s.path === redirectToUrlSegment.path) {\n                        actualSegments.splice(idx);\n                        return s;\n                    }\n                    idx++;\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (actualSegments_1_1 && !actualSegments_1_1.done && (_a = actualSegments_1.return)) _a.call(actualSegments_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            return redirectToUrlSegment;\n        };\n        return ApplyRedirects;\n    }());\n    function runCanLoadGuard(moduleInjector, route) {\n        var canLoad = route.canLoad;\n        if (!canLoad || canLoad.length === 0)\n            return rxjs.of(true);\n        var obs = rxjs.from(canLoad).pipe(operators.map(function (injectionToken) {\n            var guard = moduleInjector.get(injectionToken);\n            return wrapIntoObservable(guard.canLoad ? guard.canLoad(route) : guard(route));\n        }));\n        return andObservables(obs);\n    }\n    function match(segmentGroup, route, segments) {\n        if (route.path === '') {\n            if ((route.pathMatch === 'full') && (segmentGroup.hasChildren() || segments.length > 0)) {\n                return { matched: false, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n            }\n            return { matched: true, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n        }\n        var matcher = route.matcher || defaultUrlMatcher;\n        var res = matcher(segments, segmentGroup, route);\n        if (!res) {\n            return {\n                matched: false,\n                consumedSegments: [],\n                lastChild: 0,\n                positionalParamSegments: {},\n            };\n        }\n        return {\n            matched: true,\n            consumedSegments: res.consumed,\n            lastChild: res.consumed.length,\n            positionalParamSegments: res.posParams,\n        };\n    }\n    function split(segmentGroup, consumedSegments, slicedSegments, config) {\n        if (slicedSegments.length > 0 &&\n            containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n            var s = new UrlSegmentGroup(consumedSegments, createChildrenForEmptySegments(config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n            return { segmentGroup: mergeTrivialChildren(s), slicedSegments: [] };\n        }\n        if (slicedSegments.length === 0 &&\n            containsEmptyPathRedirects(segmentGroup, slicedSegments, config)) {\n            var s = new UrlSegmentGroup(segmentGroup.segments, addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, config, segmentGroup.children));\n            return { segmentGroup: mergeTrivialChildren(s), slicedSegments: slicedSegments };\n        }\n        return { segmentGroup: segmentGroup, slicedSegments: slicedSegments };\n    }\n    function mergeTrivialChildren(s) {\n        if (s.numberOfChildren === 1 && s.children[PRIMARY_OUTLET]) {\n            var c = s.children[PRIMARY_OUTLET];\n            return new UrlSegmentGroup(s.segments.concat(c.segments), c.children);\n        }\n        return s;\n    }\n    function addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, routes, children) {\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var routes_1 = __values(routes), routes_1_1 = routes_1.next(); !routes_1_1.done; routes_1_1 = routes_1.next()) {\n                var r = routes_1_1.value;\n                if (isEmptyPathRedirect(segmentGroup, slicedSegments, r) && !children[getOutlet(r)]) {\n                    res[getOutlet(r)] = new UrlSegmentGroup([], {});\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (routes_1_1 && !routes_1_1.done && (_a = routes_1.return)) _a.call(routes_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return __assign({}, children, res);\n    }\n    function createChildrenForEmptySegments(routes, primarySegmentGroup) {\n        var e_3, _a;\n        var res = {};\n        res[PRIMARY_OUTLET] = primarySegmentGroup;\n        try {\n            for (var routes_2 = __values(routes), routes_2_1 = routes_2.next(); !routes_2_1.done; routes_2_1 = routes_2.next()) {\n                var r = routes_2_1.value;\n                if (r.path === '' && getOutlet(r) !== PRIMARY_OUTLET) {\n                    res[getOutlet(r)] = new UrlSegmentGroup([], {});\n                }\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (routes_2_1 && !routes_2_1.done && (_a = routes_2.return)) _a.call(routes_2);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n        return res;\n    }\n    function containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, segments, routes) {\n        return routes.some(function (r) { return isEmptyPathRedirect(segmentGroup, segments, r) && getOutlet(r) !== PRIMARY_OUTLET; });\n    }\n    function containsEmptyPathRedirects(segmentGroup, segments, routes) {\n        return routes.some(function (r) { return isEmptyPathRedirect(segmentGroup, segments, r); });\n    }\n    function isEmptyPathRedirect(segmentGroup, segments, r) {\n        if ((segmentGroup.hasChildren() || segments.length > 0) && r.pathMatch === 'full') {\n            return false;\n        }\n        return r.path === '' && r.redirectTo !== undefined;\n    }\n    function getOutlet(route) {\n        return route.outlet || PRIMARY_OUTLET;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Tree = /** @class */ (function () {\n        function Tree(root) {\n            this._root = root;\n        }\n        Object.defineProperty(Tree.prototype, \"root\", {\n            get: function () { return this._root.value; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @internal\n         */\n        Tree.prototype.parent = function (t) {\n            var p = this.pathFromRoot(t);\n            return p.length > 1 ? p[p.length - 2] : null;\n        };\n        /**\n         * @internal\n         */\n        Tree.prototype.children = function (t) {\n            var n = findNode(t, this._root);\n            return n ? n.children.map(function (t) { return t.value; }) : [];\n        };\n        /**\n         * @internal\n         */\n        Tree.prototype.firstChild = function (t) {\n            var n = findNode(t, this._root);\n            return n && n.children.length > 0 ? n.children[0].value : null;\n        };\n        /**\n         * @internal\n         */\n        Tree.prototype.siblings = function (t) {\n            var p = findPath(t, this._root);\n            if (p.length < 2)\n                return [];\n            var c = p[p.length - 2].children.map(function (c) { return c.value; });\n            return c.filter(function (cc) { return cc !== t; });\n        };\n        /**\n         * @internal\n         */\n        Tree.prototype.pathFromRoot = function (t) { return findPath(t, this._root).map(function (s) { return s.value; }); };\n        return Tree;\n    }());\n    // DFS for the node matching the value\n    function findNode(value, node) {\n        var e_1, _a;\n        if (value === node.value)\n            return node;\n        try {\n            for (var _b = __values(node.children), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var child = _c.value;\n                var node_1 = findNode(value, child);\n                if (node_1)\n                    return node_1;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return null;\n    }\n    // Return the path to the node with the given value using DFS\n    function findPath(value, node) {\n        var e_2, _a;\n        if (value === node.value)\n            return [node];\n        try {\n            for (var _b = __values(node.children), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var child = _c.value;\n                var path = findPath(value, child);\n                if (path.length) {\n                    path.unshift(node);\n                    return path;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return [];\n    }\n    var TreeNode = /** @class */ (function () {\n        function TreeNode(value, children) {\n            this.value = value;\n            this.children = children;\n        }\n        TreeNode.prototype.toString = function () { return \"TreeNode(\" + this.value + \")\"; };\n        return TreeNode;\n    }());\n    // Return the list of T indexed by outlet name\n    function nodeChildrenAsMap(node) {\n        var map = {};\n        if (node) {\n            node.children.forEach(function (child) { return map[child.value.outlet] = child; });\n        }\n        return map;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents the state of the router.\n     *\n     * RouterState is a tree of activated routes. Every node in this tree knows about the \"consumed\" URL\n     * segments, the extracted parameters, and the resolved data.\n     *\n     * ### Example\n     *\n     * ```\n     * @Component({templateUrl:'template.html'})\n     * class MyComponent {\n     *   constructor(router: Router) {\n     *     const state: RouterState = router.routerState;\n     *     const root: ActivatedRoute = state.root;\n     *     const child = root.firstChild;\n     *     const id: Observable<string> = child.params.map(p => p.id);\n     *     //...\n     *   }\n     * }\n     * ```\n     *\n     * See `ActivatedRoute` for more information.\n     *\n     *\n     */\n    var RouterState = /** @class */ (function (_super) {\n        __extends(RouterState, _super);\n        /** @internal */\n        function RouterState(root, \n        /** The current snapshot of the router state */\n        snapshot) {\n            var _this = _super.call(this, root) || this;\n            _this.snapshot = snapshot;\n            setRouterState(_this, root);\n            return _this;\n        }\n        RouterState.prototype.toString = function () { return this.snapshot.toString(); };\n        return RouterState;\n    }(Tree));\n    function createEmptyState(urlTree, rootComponent) {\n        var snapshot = createEmptyStateSnapshot(urlTree, rootComponent);\n        var emptyUrl = new rxjs.BehaviorSubject([new UrlSegment('', {})]);\n        var emptyParams = new rxjs.BehaviorSubject({});\n        var emptyData = new rxjs.BehaviorSubject({});\n        var emptyQueryParams = new rxjs.BehaviorSubject({});\n        var fragment = new rxjs.BehaviorSubject('');\n        var activated = new ActivatedRoute(emptyUrl, emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, snapshot.root);\n        activated.snapshot = snapshot.root;\n        return new RouterState(new TreeNode(activated, []), snapshot);\n    }\n    function createEmptyStateSnapshot(urlTree, rootComponent) {\n        var emptyParams = {};\n        var emptyData = {};\n        var emptyQueryParams = {};\n        var fragment = '';\n        var activated = new ActivatedRouteSnapshot([], emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, null, urlTree.root, -1, {});\n        return new RouterStateSnapshot('', new TreeNode(activated, []));\n    }\n    /**\n     * @description\n     *\n     * Contains the information about a route associated with a component loaded in an\n     * outlet.  An `ActivatedRoute` can also be used to traverse the router state tree.\n     *\n     * ```\n     * @Component({...})\n     * class MyComponent {\n     *   constructor(route: ActivatedRoute) {\n     *     const id: Observable<string> = route.params.map(p => p.id);\n     *     const url: Observable<string> = route.url.map(segments => segments.join(''));\n     *     // route.data includes both `data` and `resolve`\n     *     const user = route.data.map(d => d.user);\n     *   }\n     * }\n     * ```\n     *\n     *\n     */\n    var ActivatedRoute = /** @class */ (function () {\n        /** @internal */\n        function ActivatedRoute(\n        /** An observable of the URL segments matched by this route */\n        url, \n        /** An observable of the matrix parameters scoped to this route */\n        params, \n        /** An observable of the query parameters shared by all the routes */\n        queryParams, \n        /** An observable of the URL fragment shared by all the routes */\n        fragment, \n        /** An observable of the static and resolved data of this route. */\n        data, \n        /** The outlet name of the route. It's a constant */\n        outlet, \n        /** The component of the route. It's a constant */\n        // TODO(vsavkin): remove |string\n        component, futureSnapshot) {\n            this.url = url;\n            this.params = params;\n            this.queryParams = queryParams;\n            this.fragment = fragment;\n            this.data = data;\n            this.outlet = outlet;\n            this.component = component;\n            this._futureSnapshot = futureSnapshot;\n        }\n        Object.defineProperty(ActivatedRoute.prototype, \"routeConfig\", {\n            /** The configuration used to match this route */\n            get: function () { return this._futureSnapshot.routeConfig; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRoute.prototype, \"root\", {\n            /** The root of the router state */\n            get: function () { return this._routerState.root; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRoute.prototype, \"parent\", {\n            /** The parent of this route in the router state tree */\n            get: function () { return this._routerState.parent(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRoute.prototype, \"firstChild\", {\n            /** The first child of this route in the router state tree */\n            get: function () { return this._routerState.firstChild(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRoute.prototype, \"children\", {\n            /** The children of this route in the router state tree */\n            get: function () { return this._routerState.children(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRoute.prototype, \"pathFromRoot\", {\n            /** The path from the root of the router state tree to this route */\n            get: function () { return this._routerState.pathFromRoot(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRoute.prototype, \"paramMap\", {\n            get: function () {\n                if (!this._paramMap) {\n                    this._paramMap = this.params.pipe(operators.map(function (p) { return convertToParamMap(p); }));\n                }\n                return this._paramMap;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRoute.prototype, \"queryParamMap\", {\n            get: function () {\n                if (!this._queryParamMap) {\n                    this._queryParamMap =\n                        this.queryParams.pipe(operators.map(function (p) { return convertToParamMap(p); }));\n                }\n                return this._queryParamMap;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ActivatedRoute.prototype.toString = function () {\n            return this.snapshot ? this.snapshot.toString() : \"Future(\" + this._futureSnapshot + \")\";\n        };\n        return ActivatedRoute;\n    }());\n    /**\n     * Returns the inherited params, data, and resolve for a given route.\n     * By default, this only inherits values up to the nearest path-less or component-less route.\n     * @internal\n     */\n    function inheritedParamsDataResolve(route, paramsInheritanceStrategy) {\n        if (paramsInheritanceStrategy === void 0) { paramsInheritanceStrategy = 'emptyOnly'; }\n        var pathFromRoot = route.pathFromRoot;\n        var inheritingStartingFrom = 0;\n        if (paramsInheritanceStrategy !== 'always') {\n            inheritingStartingFrom = pathFromRoot.length - 1;\n            while (inheritingStartingFrom >= 1) {\n                var current = pathFromRoot[inheritingStartingFrom];\n                var parent_1 = pathFromRoot[inheritingStartingFrom - 1];\n                // current route is an empty path => inherits its parent's params and data\n                if (current.routeConfig && current.routeConfig.path === '') {\n                    inheritingStartingFrom--;\n                    // parent is componentless => current route should inherit its params and data\n                }\n                else if (!parent_1.component) {\n                    inheritingStartingFrom--;\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return flattenInherited(pathFromRoot.slice(inheritingStartingFrom));\n    }\n    /** @internal */\n    function flattenInherited(pathFromRoot) {\n        return pathFromRoot.reduce(function (res, curr) {\n            var params = __assign({}, res.params, curr.params);\n            var data = __assign({}, res.data, curr.data);\n            var resolve = __assign({}, res.resolve, curr._resolvedData);\n            return { params: params, data: data, resolve: resolve };\n        }, { params: {}, data: {}, resolve: {} });\n    }\n    /**\n     * @description\n     *\n     * Contains the information about a route associated with a component loaded in an\n     * outlet at a particular moment in time. ActivatedRouteSnapshot can also be used to\n     * traverse the router state tree.\n     *\n     * ```\n     * @Component({templateUrl:'./my-component.html'})\n     * class MyComponent {\n     *   constructor(route: ActivatedRoute) {\n     *     const id: string = route.snapshot.params.id;\n     *     const url: string = route.snapshot.url.join('');\n     *     const user = route.snapshot.data.user;\n     *   }\n     * }\n     * ```\n     *\n     *\n     */\n    var ActivatedRouteSnapshot = /** @class */ (function () {\n        /** @internal */\n        function ActivatedRouteSnapshot(\n        /** The URL segments matched by this route */\n        url, \n        /** The matrix parameters scoped to this route */\n        params, \n        /** The query parameters shared by all the routes */\n        queryParams, \n        /** The URL fragment shared by all the routes */\n        fragment, \n        /** The static and resolved data of this route */\n        data, \n        /** The outlet name of the route */\n        outlet, \n        /** The component of the route */\n        component, routeConfig, urlSegment, lastPathIndex, resolve) {\n            this.url = url;\n            this.params = params;\n            this.queryParams = queryParams;\n            this.fragment = fragment;\n            this.data = data;\n            this.outlet = outlet;\n            this.component = component;\n            this.routeConfig = routeConfig;\n            this._urlSegment = urlSegment;\n            this._lastPathIndex = lastPathIndex;\n            this._resolve = resolve;\n        }\n        Object.defineProperty(ActivatedRouteSnapshot.prototype, \"root\", {\n            /** The root of the router state */\n            get: function () { return this._routerState.root; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRouteSnapshot.prototype, \"parent\", {\n            /** The parent of this route in the router state tree */\n            get: function () { return this._routerState.parent(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRouteSnapshot.prototype, \"firstChild\", {\n            /** The first child of this route in the router state tree */\n            get: function () { return this._routerState.firstChild(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRouteSnapshot.prototype, \"children\", {\n            /** The children of this route in the router state tree */\n            get: function () { return this._routerState.children(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRouteSnapshot.prototype, \"pathFromRoot\", {\n            /** The path from the root of the router state tree to this route */\n            get: function () { return this._routerState.pathFromRoot(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRouteSnapshot.prototype, \"paramMap\", {\n            get: function () {\n                if (!this._paramMap) {\n                    this._paramMap = convertToParamMap(this.params);\n                }\n                return this._paramMap;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRouteSnapshot.prototype, \"queryParamMap\", {\n            get: function () {\n                if (!this._queryParamMap) {\n                    this._queryParamMap = convertToParamMap(this.queryParams);\n                }\n                return this._queryParamMap;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ActivatedRouteSnapshot.prototype.toString = function () {\n            var url = this.url.map(function (segment) { return segment.toString(); }).join('/');\n            var matched = this.routeConfig ? this.routeConfig.path : '';\n            return \"Route(url:'\" + url + \"', path:'\" + matched + \"')\";\n        };\n        return ActivatedRouteSnapshot;\n    }());\n    /**\n     * @description\n     *\n     * Represents the state of the router at a moment in time.\n     *\n     * This is a tree of activated route snapshots. Every node in this tree knows about\n     * the \"consumed\" URL segments, the extracted parameters, and the resolved data.\n     *\n     * ### Example\n     *\n     * ```\n     * @Component({templateUrl:'template.html'})\n     * class MyComponent {\n     *   constructor(router: Router) {\n     *     const state: RouterState = router.routerState;\n     *     const snapshot: RouterStateSnapshot = state.snapshot;\n     *     const root: ActivatedRouteSnapshot = snapshot.root;\n     *     const child = root.firstChild;\n     *     const id: Observable<string> = child.params.map(p => p.id);\n     *     //...\n     *   }\n     * }\n     * ```\n     *\n     *\n     */\n    var RouterStateSnapshot = /** @class */ (function (_super) {\n        __extends(RouterStateSnapshot, _super);\n        /** @internal */\n        function RouterStateSnapshot(\n        /** The url from which this snapshot was created */\n        url, root) {\n            var _this = _super.call(this, root) || this;\n            _this.url = url;\n            setRouterState(_this, root);\n            return _this;\n        }\n        RouterStateSnapshot.prototype.toString = function () { return serializeNode(this._root); };\n        return RouterStateSnapshot;\n    }(Tree));\n    function setRouterState(state, node) {\n        node.value._routerState = state;\n        node.children.forEach(function (c) { return setRouterState(state, c); });\n    }\n    function serializeNode(node) {\n        var c = node.children.length > 0 ? \" { \" + node.children.map(serializeNode).join(', ') + \" } \" : '';\n        return \"\" + node.value + c;\n    }\n    /**\n     * The expectation is that the activate route is created with the right set of parameters.\n     * So we push new values into the observables only when they are not the initial values.\n     * And we detect that by checking if the snapshot field is set.\n     */\n    function advanceActivatedRoute(route) {\n        if (route.snapshot) {\n            var currentSnapshot = route.snapshot;\n            var nextSnapshot = route._futureSnapshot;\n            route.snapshot = nextSnapshot;\n            if (!shallowEqual(currentSnapshot.queryParams, nextSnapshot.queryParams)) {\n                route.queryParams.next(nextSnapshot.queryParams);\n            }\n            if (currentSnapshot.fragment !== nextSnapshot.fragment) {\n                route.fragment.next(nextSnapshot.fragment);\n            }\n            if (!shallowEqual(currentSnapshot.params, nextSnapshot.params)) {\n                route.params.next(nextSnapshot.params);\n            }\n            if (!shallowEqualArrays(currentSnapshot.url, nextSnapshot.url)) {\n                route.url.next(nextSnapshot.url);\n            }\n            if (!shallowEqual(currentSnapshot.data, nextSnapshot.data)) {\n                route.data.next(nextSnapshot.data);\n            }\n        }\n        else {\n            route.snapshot = route._futureSnapshot;\n            // this is for resolved data\n            route.data.next(route._futureSnapshot.data);\n        }\n    }\n    function equalParamsAndUrlSegments(a, b) {\n        var equalUrlParams = shallowEqual(a.params, b.params) && equalSegments(a.url, b.url);\n        var parentsMismatch = !a.parent !== !b.parent;\n        return equalUrlParams && !parentsMismatch &&\n            (!a.parent || equalParamsAndUrlSegments(a.parent, b.parent));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function createRouterState(routeReuseStrategy, curr, prevState) {\n        var root = createNode(routeReuseStrategy, curr._root, prevState ? prevState._root : undefined);\n        return new RouterState(root, curr);\n    }\n    function createNode(routeReuseStrategy, curr, prevState) {\n        // reuse an activated route that is currently displayed on the screen\n        if (prevState && routeReuseStrategy.shouldReuseRoute(curr.value, prevState.value.snapshot)) {\n            var value = prevState.value;\n            value._futureSnapshot = curr.value;\n            var children = createOrReuseChildren(routeReuseStrategy, curr, prevState);\n            return new TreeNode(value, children);\n            // retrieve an activated route that is used to be displayed, but is not currently displayed\n        }\n        else {\n            var detachedRouteHandle = routeReuseStrategy.retrieve(curr.value);\n            if (detachedRouteHandle) {\n                var tree = detachedRouteHandle.route;\n                setFutureSnapshotsOfActivatedRoutes(curr, tree);\n                return tree;\n            }\n            else {\n                var value = createActivatedRoute(curr.value);\n                var children = curr.children.map(function (c) { return createNode(routeReuseStrategy, c); });\n                return new TreeNode(value, children);\n            }\n        }\n    }\n    function setFutureSnapshotsOfActivatedRoutes(curr, result) {\n        if (curr.value.routeConfig !== result.value.routeConfig) {\n            throw new Error('Cannot reattach ActivatedRouteSnapshot created from a different route');\n        }\n        if (curr.children.length !== result.children.length) {\n            throw new Error('Cannot reattach ActivatedRouteSnapshot with a different number of children');\n        }\n        result.value._futureSnapshot = curr.value;\n        for (var i = 0; i < curr.children.length; ++i) {\n            setFutureSnapshotsOfActivatedRoutes(curr.children[i], result.children[i]);\n        }\n    }\n    function createOrReuseChildren(routeReuseStrategy, curr, prevState) {\n        return curr.children.map(function (child) {\n            var e_1, _a;\n            try {\n                for (var _b = __values(prevState.children), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var p = _c.value;\n                    if (routeReuseStrategy.shouldReuseRoute(p.value.snapshot, child.value)) {\n                        return createNode(routeReuseStrategy, child, p);\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            return createNode(routeReuseStrategy, child);\n        });\n    }\n    function createActivatedRoute(c) {\n        return new ActivatedRoute(new rxjs.BehaviorSubject(c.url), new rxjs.BehaviorSubject(c.params), new rxjs.BehaviorSubject(c.queryParams), new rxjs.BehaviorSubject(c.fragment), new rxjs.BehaviorSubject(c.data), c.outlet, c.component, c);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function createUrlTree(route, urlTree, commands, queryParams, fragment) {\n        if (commands.length === 0) {\n            return tree(urlTree.root, urlTree.root, urlTree, queryParams, fragment);\n        }\n        var nav = computeNavigation(commands);\n        if (nav.toRoot()) {\n            return tree(urlTree.root, new UrlSegmentGroup([], {}), urlTree, queryParams, fragment);\n        }\n        var startingPosition = findStartingPosition(nav, urlTree, route);\n        var segmentGroup = startingPosition.processChildren ?\n            updateSegmentGroupChildren(startingPosition.segmentGroup, startingPosition.index, nav.commands) :\n            updateSegmentGroup(startingPosition.segmentGroup, startingPosition.index, nav.commands);\n        return tree(startingPosition.segmentGroup, segmentGroup, urlTree, queryParams, fragment);\n    }\n    function isMatrixParams(command) {\n        return typeof command === 'object' && command != null && !command.outlets && !command.segmentPath;\n    }\n    function tree(oldSegmentGroup, newSegmentGroup, urlTree, queryParams, fragment) {\n        var qp = {};\n        if (queryParams) {\n            forEach(queryParams, function (value, name) {\n                qp[name] = Array.isArray(value) ? value.map(function (v) { return \"\" + v; }) : \"\" + value;\n            });\n        }\n        if (urlTree.root === oldSegmentGroup) {\n            return new UrlTree(newSegmentGroup, qp, fragment);\n        }\n        return new UrlTree(replaceSegment(urlTree.root, oldSegmentGroup, newSegmentGroup), qp, fragment);\n    }\n    function replaceSegment(current, oldSegment, newSegment) {\n        var children = {};\n        forEach(current.children, function (c, outletName) {\n            if (c === oldSegment) {\n                children[outletName] = newSegment;\n            }\n            else {\n                children[outletName] = replaceSegment(c, oldSegment, newSegment);\n            }\n        });\n        return new UrlSegmentGroup(current.segments, children);\n    }\n    var Navigation = /** @class */ (function () {\n        function Navigation(isAbsolute, numberOfDoubleDots, commands) {\n            this.isAbsolute = isAbsolute;\n            this.numberOfDoubleDots = numberOfDoubleDots;\n            this.commands = commands;\n            if (isAbsolute && commands.length > 0 && isMatrixParams(commands[0])) {\n                throw new Error('Root segment cannot have matrix parameters');\n            }\n            var cmdWithOutlet = commands.find(function (c) { return typeof c === 'object' && c != null && c.outlets; });\n            if (cmdWithOutlet && cmdWithOutlet !== last(commands)) {\n                throw new Error('{outlets:{}} has to be the last command');\n            }\n        }\n        Navigation.prototype.toRoot = function () {\n            return this.isAbsolute && this.commands.length === 1 && this.commands[0] == '/';\n        };\n        return Navigation;\n    }());\n    /** Transforms commands to a normalized `Navigation` */\n    function computeNavigation(commands) {\n        if ((typeof commands[0] === 'string') && commands.length === 1 && commands[0] === '/') {\n            return new Navigation(true, 0, commands);\n        }\n        var numberOfDoubleDots = 0;\n        var isAbsolute = false;\n        var res = commands.reduce(function (res, cmd, cmdIdx) {\n            if (typeof cmd === 'object' && cmd != null) {\n                if (cmd.outlets) {\n                    var outlets_1 = {};\n                    forEach(cmd.outlets, function (commands, name) {\n                        outlets_1[name] = typeof commands === 'string' ? commands.split('/') : commands;\n                    });\n                    return __spread(res, [{ outlets: outlets_1 }]);\n                }\n                if (cmd.segmentPath) {\n                    return __spread(res, [cmd.segmentPath]);\n                }\n            }\n            if (!(typeof cmd === 'string')) {\n                return __spread(res, [cmd]);\n            }\n            if (cmdIdx === 0) {\n                cmd.split('/').forEach(function (urlPart, partIndex) {\n                    if (partIndex == 0 && urlPart === '.') ;\n                    else if (partIndex == 0 && urlPart === '') { //  '/a'\n                        isAbsolute = true;\n                    }\n                    else if (urlPart === '..') { //  '../a'\n                        numberOfDoubleDots++;\n                    }\n                    else if (urlPart != '') {\n                        res.push(urlPart);\n                    }\n                });\n                return res;\n            }\n            return __spread(res, [cmd]);\n        }, []);\n        return new Navigation(isAbsolute, numberOfDoubleDots, res);\n    }\n    var Position = /** @class */ (function () {\n        function Position(segmentGroup, processChildren, index) {\n            this.segmentGroup = segmentGroup;\n            this.processChildren = processChildren;\n            this.index = index;\n        }\n        return Position;\n    }());\n    function findStartingPosition(nav, tree, route) {\n        if (nav.isAbsolute) {\n            return new Position(tree.root, true, 0);\n        }\n        if (route.snapshot._lastPathIndex === -1) {\n            return new Position(route.snapshot._urlSegment, true, 0);\n        }\n        var modifier = isMatrixParams(nav.commands[0]) ? 0 : 1;\n        var index = route.snapshot._lastPathIndex + modifier;\n        return createPositionApplyingDoubleDots(route.snapshot._urlSegment, index, nav.numberOfDoubleDots);\n    }\n    function createPositionApplyingDoubleDots(group, index, numberOfDoubleDots) {\n        var g = group;\n        var ci = index;\n        var dd = numberOfDoubleDots;\n        while (dd > ci) {\n            dd -= ci;\n            g = g.parent;\n            if (!g) {\n                throw new Error('Invalid number of \\'../\\'');\n            }\n            ci = g.segments.length;\n        }\n        return new Position(g, false, ci - dd);\n    }\n    function getPath(command) {\n        if (typeof command === 'object' && command != null && command.outlets) {\n            return command.outlets[PRIMARY_OUTLET];\n        }\n        return \"\" + command;\n    }\n    function getOutlets(commands) {\n        var _a, _b;\n        if (!(typeof commands[0] === 'object'))\n            return _a = {}, _a[PRIMARY_OUTLET] = commands, _a;\n        if (commands[0].outlets === undefined)\n            return _b = {}, _b[PRIMARY_OUTLET] = commands, _b;\n        return commands[0].outlets;\n    }\n    function updateSegmentGroup(segmentGroup, startIndex, commands) {\n        if (!segmentGroup) {\n            segmentGroup = new UrlSegmentGroup([], {});\n        }\n        if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n            return updateSegmentGroupChildren(segmentGroup, startIndex, commands);\n        }\n        var m = prefixedWith(segmentGroup, startIndex, commands);\n        var slicedCommands = commands.slice(m.commandIndex);\n        if (m.match && m.pathIndex < segmentGroup.segments.length) {\n            var g = new UrlSegmentGroup(segmentGroup.segments.slice(0, m.pathIndex), {});\n            g.children[PRIMARY_OUTLET] =\n                new UrlSegmentGroup(segmentGroup.segments.slice(m.pathIndex), segmentGroup.children);\n            return updateSegmentGroupChildren(g, 0, slicedCommands);\n        }\n        else if (m.match && slicedCommands.length === 0) {\n            return new UrlSegmentGroup(segmentGroup.segments, {});\n        }\n        else if (m.match && !segmentGroup.hasChildren()) {\n            return createNewSegmentGroup(segmentGroup, startIndex, commands);\n        }\n        else if (m.match) {\n            return updateSegmentGroupChildren(segmentGroup, 0, slicedCommands);\n        }\n        else {\n            return createNewSegmentGroup(segmentGroup, startIndex, commands);\n        }\n    }\n    function updateSegmentGroupChildren(segmentGroup, startIndex, commands) {\n        if (commands.length === 0) {\n            return new UrlSegmentGroup(segmentGroup.segments, {});\n        }\n        else {\n            var outlets_2 = getOutlets(commands);\n            var children_1 = {};\n            forEach(outlets_2, function (commands, outlet) {\n                if (commands !== null) {\n                    children_1[outlet] = updateSegmentGroup(segmentGroup.children[outlet], startIndex, commands);\n                }\n            });\n            forEach(segmentGroup.children, function (child, childOutlet) {\n                if (outlets_2[childOutlet] === undefined) {\n                    children_1[childOutlet] = child;\n                }\n            });\n            return new UrlSegmentGroup(segmentGroup.segments, children_1);\n        }\n    }\n    function prefixedWith(segmentGroup, startIndex, commands) {\n        var currentCommandIndex = 0;\n        var currentPathIndex = startIndex;\n        var noMatch = { match: false, pathIndex: 0, commandIndex: 0 };\n        while (currentPathIndex < segmentGroup.segments.length) {\n            if (currentCommandIndex >= commands.length)\n                return noMatch;\n            var path = segmentGroup.segments[currentPathIndex];\n            var curr = getPath(commands[currentCommandIndex]);\n            var next = currentCommandIndex < commands.length - 1 ? commands[currentCommandIndex + 1] : null;\n            if (currentPathIndex > 0 && curr === undefined)\n                break;\n            if (curr && next && (typeof next === 'object') && next.outlets === undefined) {\n                if (!compare(curr, next, path))\n                    return noMatch;\n                currentCommandIndex += 2;\n            }\n            else {\n                if (!compare(curr, {}, path))\n                    return noMatch;\n                currentCommandIndex++;\n            }\n            currentPathIndex++;\n        }\n        return { match: true, pathIndex: currentPathIndex, commandIndex: currentCommandIndex };\n    }\n    function createNewSegmentGroup(segmentGroup, startIndex, commands) {\n        var paths = segmentGroup.segments.slice(0, startIndex);\n        var i = 0;\n        while (i < commands.length) {\n            if (typeof commands[i] === 'object' && commands[i].outlets !== undefined) {\n                var children = createNewSegmentChildren(commands[i].outlets);\n                return new UrlSegmentGroup(paths, children);\n            }\n            // if we start with an object literal, we need to reuse the path part from the segment\n            if (i === 0 && isMatrixParams(commands[0])) {\n                var p = segmentGroup.segments[startIndex];\n                paths.push(new UrlSegment(p.path, commands[0]));\n                i++;\n                continue;\n            }\n            var curr = getPath(commands[i]);\n            var next = (i < commands.length - 1) ? commands[i + 1] : null;\n            if (curr && next && isMatrixParams(next)) {\n                paths.push(new UrlSegment(curr, stringify(next)));\n                i += 2;\n            }\n            else {\n                paths.push(new UrlSegment(curr, {}));\n                i++;\n            }\n        }\n        return new UrlSegmentGroup(paths, {});\n    }\n    function createNewSegmentChildren(outlets) {\n        var children = {};\n        forEach(outlets, function (commands, outlet) {\n            if (commands !== null) {\n                children[outlet] = createNewSegmentGroup(new UrlSegmentGroup([], {}), 0, commands);\n            }\n        });\n        return children;\n    }\n    function stringify(params) {\n        var res = {};\n        forEach(params, function (v, k) { return res[k] = \"\" + v; });\n        return res;\n    }\n    function compare(path, params, segment) {\n        return path == segment.path && shallowEqual(params, segment.parameters);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var CanActivate = /** @class */ (function () {\n        function CanActivate(path) {\n            this.path = path;\n            this.route = this.path[this.path.length - 1];\n        }\n        return CanActivate;\n    }());\n    var CanDeactivate = /** @class */ (function () {\n        function CanDeactivate(component, route) {\n            this.component = component;\n            this.route = route;\n        }\n        return CanDeactivate;\n    }());\n    /**\n     * This class bundles the actions involved in preactivation of a route.\n     */\n    var PreActivation = /** @class */ (function () {\n        function PreActivation(future, curr, moduleInjector, forwardEvent) {\n            this.future = future;\n            this.curr = curr;\n            this.moduleInjector = moduleInjector;\n            this.forwardEvent = forwardEvent;\n            this.canActivateChecks = [];\n            this.canDeactivateChecks = [];\n        }\n        PreActivation.prototype.initialize = function (parentContexts) {\n            var futureRoot = this.future._root;\n            var currRoot = this.curr ? this.curr._root : null;\n            this.setupChildRouteGuards(futureRoot, currRoot, parentContexts, [futureRoot.value]);\n        };\n        PreActivation.prototype.checkGuards = function () {\n            var _this = this;\n            if (!this.isDeactivating() && !this.isActivating()) {\n                return rxjs.of(true);\n            }\n            var canDeactivate$ = this.runCanDeactivateChecks();\n            return canDeactivate$.pipe(operators.mergeMap(function (canDeactivate) { return canDeactivate ? _this.runCanActivateChecks() : rxjs.of(false); }));\n        };\n        PreActivation.prototype.resolveData = function (paramsInheritanceStrategy) {\n            var _this = this;\n            if (!this.isActivating())\n                return rxjs.of(null);\n            return rxjs.from(this.canActivateChecks)\n                .pipe(operators.concatMap(function (check) { return _this.runResolve(check.route, paramsInheritanceStrategy); }), operators.reduce(function (_, __) { return _; }));\n        };\n        PreActivation.prototype.isDeactivating = function () { return this.canDeactivateChecks.length !== 0; };\n        PreActivation.prototype.isActivating = function () { return this.canActivateChecks.length !== 0; };\n        /**\n         * Iterates over child routes and calls recursive `setupRouteGuards` to get `this` instance in\n         * proper state to run `checkGuards()` method.\n         */\n        PreActivation.prototype.setupChildRouteGuards = function (futureNode, currNode, contexts, futurePath) {\n            var _this = this;\n            var prevChildren = nodeChildrenAsMap(currNode);\n            // Process the children of the future route\n            futureNode.children.forEach(function (c) {\n                _this.setupRouteGuards(c, prevChildren[c.value.outlet], contexts, futurePath.concat([c.value]));\n                delete prevChildren[c.value.outlet];\n            });\n            // Process any children left from the current route (not active for the future route)\n            forEach(prevChildren, function (v, k) {\n                return _this.deactivateRouteAndItsChildren(v, contexts.getContext(k));\n            });\n        };\n        /**\n         * Iterates over child routes and calls recursive `setupRouteGuards` to get `this` instance in\n         * proper state to run `checkGuards()` method.\n         */\n        PreActivation.prototype.setupRouteGuards = function (futureNode, currNode, parentContexts, futurePath) {\n            var future = futureNode.value;\n            var curr = currNode ? currNode.value : null;\n            var context = parentContexts ? parentContexts.getContext(futureNode.value.outlet) : null;\n            // reusing the node\n            if (curr && future.routeConfig === curr.routeConfig) {\n                var shouldRunGuardsAndResolvers = this.shouldRunGuardsAndResolvers(curr, future, future.routeConfig.runGuardsAndResolvers);\n                if (shouldRunGuardsAndResolvers) {\n                    this.canActivateChecks.push(new CanActivate(futurePath));\n                }\n                else {\n                    // we need to set the data\n                    future.data = curr.data;\n                    future._resolvedData = curr._resolvedData;\n                }\n                // If we have a component, we need to go through an outlet.\n                if (future.component) {\n                    this.setupChildRouteGuards(futureNode, currNode, context ? context.children : null, futurePath);\n                    // if we have a componentless route, we recurse but keep the same outlet map.\n                }\n                else {\n                    this.setupChildRouteGuards(futureNode, currNode, parentContexts, futurePath);\n                }\n                if (shouldRunGuardsAndResolvers) {\n                    var outlet = context.outlet;\n                    this.canDeactivateChecks.push(new CanDeactivate(outlet.component, curr));\n                }\n            }\n            else {\n                if (curr) {\n                    this.deactivateRouteAndItsChildren(currNode, context);\n                }\n                this.canActivateChecks.push(new CanActivate(futurePath));\n                // If we have a component, we need to go through an outlet.\n                if (future.component) {\n                    this.setupChildRouteGuards(futureNode, null, context ? context.children : null, futurePath);\n                    // if we have a componentless route, we recurse but keep the same outlet map.\n                }\n                else {\n                    this.setupChildRouteGuards(futureNode, null, parentContexts, futurePath);\n                }\n            }\n        };\n        PreActivation.prototype.shouldRunGuardsAndResolvers = function (curr, future, mode) {\n            switch (mode) {\n                case 'always':\n                    return true;\n                case 'paramsOrQueryParamsChange':\n                    return !equalParamsAndUrlSegments(curr, future) ||\n                        !shallowEqual(curr.queryParams, future.queryParams);\n                case 'paramsChange':\n                default:\n                    return !equalParamsAndUrlSegments(curr, future);\n            }\n        };\n        PreActivation.prototype.deactivateRouteAndItsChildren = function (route, context) {\n            var _this = this;\n            var children = nodeChildrenAsMap(route);\n            var r = route.value;\n            forEach(children, function (node, childName) {\n                if (!r.component) {\n                    _this.deactivateRouteAndItsChildren(node, context);\n                }\n                else if (context) {\n                    _this.deactivateRouteAndItsChildren(node, context.children.getContext(childName));\n                }\n                else {\n                    _this.deactivateRouteAndItsChildren(node, null);\n                }\n            });\n            if (!r.component) {\n                this.canDeactivateChecks.push(new CanDeactivate(null, r));\n            }\n            else if (context && context.outlet && context.outlet.isActivated) {\n                this.canDeactivateChecks.push(new CanDeactivate(context.outlet.component, r));\n            }\n            else {\n                this.canDeactivateChecks.push(new CanDeactivate(null, r));\n            }\n        };\n        PreActivation.prototype.runCanDeactivateChecks = function () {\n            var _this = this;\n            return rxjs.from(this.canDeactivateChecks)\n                .pipe(operators.mergeMap(function (check) { return _this.runCanDeactivate(check.component, check.route); }), operators.every(function (result) { return result === true; }));\n        };\n        PreActivation.prototype.runCanActivateChecks = function () {\n            var _this = this;\n            return rxjs.from(this.canActivateChecks)\n                .pipe(operators.concatMap(function (check) { return andObservables(rxjs.from([\n                _this.fireChildActivationStart(check.route.parent),\n                _this.fireActivationStart(check.route), _this.runCanActivateChild(check.path),\n                _this.runCanActivate(check.route)\n            ])); }), operators.every(function (result) { return result === true; }));\n            // this.fireChildActivationStart(check.path),\n        };\n        /**\n         * This should fire off `ActivationStart` events for each route being activated at this\n         * level.\n         * In other words, if you're activating `a` and `b` below, `path` will contain the\n         * `ActivatedRouteSnapshot`s for both and we will fire `ActivationStart` for both. Always\n         * return\n         * `true` so checks continue to run.\n         */\n        PreActivation.prototype.fireActivationStart = function (snapshot) {\n            if (snapshot !== null && this.forwardEvent) {\n                this.forwardEvent(new ActivationStart(snapshot));\n            }\n            return rxjs.of(true);\n        };\n        /**\n         * This should fire off `ChildActivationStart` events for each route being activated at this\n         * level.\n         * In other words, if you're activating `a` and `b` below, `path` will contain the\n         * `ActivatedRouteSnapshot`s for both and we will fire `ChildActivationStart` for both. Always\n         * return\n         * `true` so checks continue to run.\n         */\n        PreActivation.prototype.fireChildActivationStart = function (snapshot) {\n            if (snapshot !== null && this.forwardEvent) {\n                this.forwardEvent(new ChildActivationStart(snapshot));\n            }\n            return rxjs.of(true);\n        };\n        PreActivation.prototype.runCanActivate = function (future) {\n            var _this = this;\n            var canActivate = future.routeConfig ? future.routeConfig.canActivate : null;\n            if (!canActivate || canActivate.length === 0)\n                return rxjs.of(true);\n            var obs = rxjs.from(canActivate).pipe(operators.map(function (c) {\n                var guard = _this.getToken(c, future);\n                var observable;\n                if (guard.canActivate) {\n                    observable = wrapIntoObservable(guard.canActivate(future, _this.future));\n                }\n                else {\n                    observable = wrapIntoObservable(guard(future, _this.future));\n                }\n                return observable.pipe(operators.first());\n            }));\n            return andObservables(obs);\n        };\n        PreActivation.prototype.runCanActivateChild = function (path) {\n            var _this = this;\n            var future = path[path.length - 1];\n            var canActivateChildGuards = path.slice(0, path.length - 1)\n                .reverse()\n                .map(function (p) { return _this.extractCanActivateChild(p); })\n                .filter(function (_) { return _ !== null; });\n            return andObservables(rxjs.from(canActivateChildGuards).pipe(operators.map(function (d) {\n                var obs = rxjs.from(d.guards).pipe(operators.map(function (c) {\n                    var guard = _this.getToken(c, d.node);\n                    var observable;\n                    if (guard.canActivateChild) {\n                        observable = wrapIntoObservable(guard.canActivateChild(future, _this.future));\n                    }\n                    else {\n                        observable = wrapIntoObservable(guard(future, _this.future));\n                    }\n                    return observable.pipe(operators.first());\n                }));\n                return andObservables(obs);\n            })));\n        };\n        PreActivation.prototype.extractCanActivateChild = function (p) {\n            var canActivateChild = p.routeConfig ? p.routeConfig.canActivateChild : null;\n            if (!canActivateChild || canActivateChild.length === 0)\n                return null;\n            return { node: p, guards: canActivateChild };\n        };\n        PreActivation.prototype.runCanDeactivate = function (component, curr) {\n            var _this = this;\n            var canDeactivate = curr && curr.routeConfig ? curr.routeConfig.canDeactivate : null;\n            if (!canDeactivate || canDeactivate.length === 0)\n                return rxjs.of(true);\n            var canDeactivate$ = rxjs.from(canDeactivate).pipe(operators.mergeMap(function (c) {\n                var guard = _this.getToken(c, curr);\n                var observable;\n                if (guard.canDeactivate) {\n                    observable =\n                        wrapIntoObservable(guard.canDeactivate(component, curr, _this.curr, _this.future));\n                }\n                else {\n                    observable = wrapIntoObservable(guard(component, curr, _this.curr, _this.future));\n                }\n                return observable.pipe(operators.first());\n            }));\n            return canDeactivate$.pipe(operators.every(function (result) { return result === true; }));\n        };\n        PreActivation.prototype.runResolve = function (future, paramsInheritanceStrategy) {\n            var resolve = future._resolve;\n            return this.resolveNode(resolve, future).pipe(operators.map(function (resolvedData) {\n                future._resolvedData = resolvedData;\n                future.data = __assign({}, future.data, inheritedParamsDataResolve(future, paramsInheritanceStrategy).resolve);\n                return null;\n            }));\n        };\n        PreActivation.prototype.resolveNode = function (resolve, future) {\n            var _this = this;\n            var keys = Object.keys(resolve);\n            if (keys.length === 0) {\n                return rxjs.of({});\n            }\n            if (keys.length === 1) {\n                var key_1 = keys[0];\n                return this.getResolver(resolve[key_1], future).pipe(operators.map(function (value) {\n                    var _a;\n                    return _a = {}, _a[key_1] = value, _a;\n                }));\n            }\n            var data = {};\n            var runningResolvers$ = rxjs.from(keys).pipe(operators.mergeMap(function (key) {\n                return _this.getResolver(resolve[key], future).pipe(operators.map(function (value) {\n                    data[key] = value;\n                    return value;\n                }));\n            }));\n            return runningResolvers$.pipe(operators.last(), operators.map(function () { return data; }));\n        };\n        PreActivation.prototype.getResolver = function (injectionToken, future) {\n            var resolver = this.getToken(injectionToken, future);\n            return resolver.resolve ? wrapIntoObservable(resolver.resolve(future, this.future)) :\n                wrapIntoObservable(resolver(future, this.future));\n        };\n        PreActivation.prototype.getToken = function (token, snapshot) {\n            var config = closestLoadedConfig(snapshot);\n            var injector = config ? config.module.injector : this.moduleInjector;\n            return injector.get(token);\n        };\n        return PreActivation;\n    }());\n    function closestLoadedConfig(snapshot) {\n        if (!snapshot)\n            return null;\n        for (var s = snapshot.parent; s; s = s.parent) {\n            var route = s.routeConfig;\n            if (route && route._loadedConfig)\n                return route._loadedConfig;\n        }\n        return null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NoMatch$1 = /** @class */ (function () {\n        function NoMatch() {\n        }\n        return NoMatch;\n    }());\n    function recognize(rootComponentType, config, urlTree, url, paramsInheritanceStrategy) {\n        if (paramsInheritanceStrategy === void 0) { paramsInheritanceStrategy = 'emptyOnly'; }\n        return new Recognizer(rootComponentType, config, urlTree, url, paramsInheritanceStrategy)\n            .recognize();\n    }\n    var Recognizer = /** @class */ (function () {\n        function Recognizer(rootComponentType, config, urlTree, url, paramsInheritanceStrategy) {\n            this.rootComponentType = rootComponentType;\n            this.config = config;\n            this.urlTree = urlTree;\n            this.url = url;\n            this.paramsInheritanceStrategy = paramsInheritanceStrategy;\n        }\n        Recognizer.prototype.recognize = function () {\n            try {\n                var rootSegmentGroup = split$1(this.urlTree.root, [], [], this.config).segmentGroup;\n                var children = this.processSegmentGroup(this.config, rootSegmentGroup, PRIMARY_OUTLET);\n                var root = new ActivatedRouteSnapshot([], Object.freeze({}), Object.freeze(__assign({}, this.urlTree.queryParams)), this.urlTree.fragment, {}, PRIMARY_OUTLET, this.rootComponentType, null, this.urlTree.root, -1, {});\n                var rootNode = new TreeNode(root, children);\n                var routeState = new RouterStateSnapshot(this.url, rootNode);\n                this.inheritParamsAndData(routeState._root);\n                return rxjs.of(routeState);\n            }\n            catch (e) {\n                return new rxjs.Observable(function (obs) { return obs.error(e); });\n            }\n        };\n        Recognizer.prototype.inheritParamsAndData = function (routeNode) {\n            var _this = this;\n            var route = routeNode.value;\n            var i = inheritedParamsDataResolve(route, this.paramsInheritanceStrategy);\n            route.params = Object.freeze(i.params);\n            route.data = Object.freeze(i.data);\n            routeNode.children.forEach(function (n) { return _this.inheritParamsAndData(n); });\n        };\n        Recognizer.prototype.processSegmentGroup = function (config, segmentGroup, outlet) {\n            if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n                return this.processChildren(config, segmentGroup);\n            }\n            return this.processSegment(config, segmentGroup, segmentGroup.segments, outlet);\n        };\n        Recognizer.prototype.processChildren = function (config, segmentGroup) {\n            var _this = this;\n            var children = mapChildrenIntoArray(segmentGroup, function (child, childOutlet) { return _this.processSegmentGroup(config, child, childOutlet); });\n            checkOutletNameUniqueness(children);\n            sortActivatedRouteSnapshots(children);\n            return children;\n        };\n        Recognizer.prototype.processSegment = function (config, segmentGroup, segments, outlet) {\n            var e_1, _a;\n            try {\n                for (var config_1 = __values(config), config_1_1 = config_1.next(); !config_1_1.done; config_1_1 = config_1.next()) {\n                    var r = config_1_1.value;\n                    try {\n                        return this.processSegmentAgainstRoute(r, segmentGroup, segments, outlet);\n                    }\n                    catch (e) {\n                        if (!(e instanceof NoMatch$1))\n                            throw e;\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (config_1_1 && !config_1_1.done && (_a = config_1.return)) _a.call(config_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            if (this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n                return [];\n            }\n            throw new NoMatch$1();\n        };\n        Recognizer.prototype.noLeftoversInUrl = function (segmentGroup, segments, outlet) {\n            return segments.length === 0 && !segmentGroup.children[outlet];\n        };\n        Recognizer.prototype.processSegmentAgainstRoute = function (route, rawSegment, segments, outlet) {\n            if (route.redirectTo)\n                throw new NoMatch$1();\n            if ((route.outlet || PRIMARY_OUTLET) !== outlet)\n                throw new NoMatch$1();\n            var snapshot;\n            var consumedSegments = [];\n            var rawSlicedSegments = [];\n            if (route.path === '**') {\n                var params = segments.length > 0 ? last(segments).parameters : {};\n                snapshot = new ActivatedRouteSnapshot(segments, params, Object.freeze(__assign({}, this.urlTree.queryParams)), this.urlTree.fragment, getData(route), outlet, route.component, route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + segments.length, getResolve(route));\n            }\n            else {\n                var result = match$1(rawSegment, route, segments);\n                consumedSegments = result.consumedSegments;\n                rawSlicedSegments = segments.slice(result.lastChild);\n                snapshot = new ActivatedRouteSnapshot(consumedSegments, result.parameters, Object.freeze(__assign({}, this.urlTree.queryParams)), this.urlTree.fragment, getData(route), outlet, route.component, route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + consumedSegments.length, getResolve(route));\n            }\n            var childConfig = getChildConfig(route);\n            var _a = split$1(rawSegment, consumedSegments, rawSlicedSegments, childConfig), segmentGroup = _a.segmentGroup, slicedSegments = _a.slicedSegments;\n            if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n                var children_1 = this.processChildren(childConfig, segmentGroup);\n                return [new TreeNode(snapshot, children_1)];\n            }\n            if (childConfig.length === 0 && slicedSegments.length === 0) {\n                return [new TreeNode(snapshot, [])];\n            }\n            var children = this.processSegment(childConfig, segmentGroup, slicedSegments, PRIMARY_OUTLET);\n            return [new TreeNode(snapshot, children)];\n        };\n        return Recognizer;\n    }());\n    function sortActivatedRouteSnapshots(nodes) {\n        nodes.sort(function (a, b) {\n            if (a.value.outlet === PRIMARY_OUTLET)\n                return -1;\n            if (b.value.outlet === PRIMARY_OUTLET)\n                return 1;\n            return a.value.outlet.localeCompare(b.value.outlet);\n        });\n    }\n    function getChildConfig(route) {\n        if (route.children) {\n            return route.children;\n        }\n        if (route.loadChildren) {\n            return route._loadedConfig.routes;\n        }\n        return [];\n    }\n    function match$1(segmentGroup, route, segments) {\n        if (route.path === '') {\n            if (route.pathMatch === 'full' && (segmentGroup.hasChildren() || segments.length > 0)) {\n                throw new NoMatch$1();\n            }\n            return { consumedSegments: [], lastChild: 0, parameters: {} };\n        }\n        var matcher = route.matcher || defaultUrlMatcher;\n        var res = matcher(segments, segmentGroup, route);\n        if (!res)\n            throw new NoMatch$1();\n        var posParams = {};\n        forEach(res.posParams, function (v, k) { posParams[k] = v.path; });\n        var parameters = res.consumed.length > 0 ? __assign({}, posParams, res.consumed[res.consumed.length - 1].parameters) :\n            posParams;\n        return { consumedSegments: res.consumed, lastChild: res.consumed.length, parameters: parameters };\n    }\n    function checkOutletNameUniqueness(nodes) {\n        var names = {};\n        nodes.forEach(function (n) {\n            var routeWithSameOutletName = names[n.value.outlet];\n            if (routeWithSameOutletName) {\n                var p = routeWithSameOutletName.url.map(function (s) { return s.toString(); }).join('/');\n                var c = n.value.url.map(function (s) { return s.toString(); }).join('/');\n                throw new Error(\"Two segments cannot have the same outlet name: '\" + p + \"' and '\" + c + \"'.\");\n            }\n            names[n.value.outlet] = n.value;\n        });\n    }\n    function getSourceSegmentGroup(segmentGroup) {\n        var s = segmentGroup;\n        while (s._sourceSegment) {\n            s = s._sourceSegment;\n        }\n        return s;\n    }\n    function getPathIndexShift(segmentGroup) {\n        var s = segmentGroup;\n        var res = (s._segmentIndexShift ? s._segmentIndexShift : 0);\n        while (s._sourceSegment) {\n            s = s._sourceSegment;\n            res += (s._segmentIndexShift ? s._segmentIndexShift : 0);\n        }\n        return res - 1;\n    }\n    function split$1(segmentGroup, consumedSegments, slicedSegments, config) {\n        if (slicedSegments.length > 0 &&\n            containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n            var s_1 = new UrlSegmentGroup(consumedSegments, createChildrenForEmptyPaths(segmentGroup, consumedSegments, config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n            s_1._sourceSegment = segmentGroup;\n            s_1._segmentIndexShift = consumedSegments.length;\n            return { segmentGroup: s_1, slicedSegments: [] };\n        }\n        if (slicedSegments.length === 0 &&\n            containsEmptyPathMatches(segmentGroup, slicedSegments, config)) {\n            var s_2 = new UrlSegmentGroup(segmentGroup.segments, addEmptyPathsToChildrenIfNeeded(segmentGroup, slicedSegments, config, segmentGroup.children));\n            s_2._sourceSegment = segmentGroup;\n            s_2._segmentIndexShift = consumedSegments.length;\n            return { segmentGroup: s_2, slicedSegments: slicedSegments };\n        }\n        var s = new UrlSegmentGroup(segmentGroup.segments, segmentGroup.children);\n        s._sourceSegment = segmentGroup;\n        s._segmentIndexShift = consumedSegments.length;\n        return { segmentGroup: s, slicedSegments: slicedSegments };\n    }\n    function addEmptyPathsToChildrenIfNeeded(segmentGroup, slicedSegments, routes, children) {\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var routes_1 = __values(routes), routes_1_1 = routes_1.next(); !routes_1_1.done; routes_1_1 = routes_1.next()) {\n                var r = routes_1_1.value;\n                if (emptyPathMatch(segmentGroup, slicedSegments, r) && !children[getOutlet$1(r)]) {\n                    var s = new UrlSegmentGroup([], {});\n                    s._sourceSegment = segmentGroup;\n                    s._segmentIndexShift = segmentGroup.segments.length;\n                    res[getOutlet$1(r)] = s;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (routes_1_1 && !routes_1_1.done && (_a = routes_1.return)) _a.call(routes_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return __assign({}, children, res);\n    }\n    function createChildrenForEmptyPaths(segmentGroup, consumedSegments, routes, primarySegment) {\n        var e_3, _a;\n        var res = {};\n        res[PRIMARY_OUTLET] = primarySegment;\n        primarySegment._sourceSegment = segmentGroup;\n        primarySegment._segmentIndexShift = consumedSegments.length;\n        try {\n            for (var routes_2 = __values(routes), routes_2_1 = routes_2.next(); !routes_2_1.done; routes_2_1 = routes_2.next()) {\n                var r = routes_2_1.value;\n                if (r.path === '' && getOutlet$1(r) !== PRIMARY_OUTLET) {\n                    var s = new UrlSegmentGroup([], {});\n                    s._sourceSegment = segmentGroup;\n                    s._segmentIndexShift = consumedSegments.length;\n                    res[getOutlet$1(r)] = s;\n                }\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (routes_2_1 && !routes_2_1.done && (_a = routes_2.return)) _a.call(routes_2);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n        return res;\n    }\n    function containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, routes) {\n        return routes.some(function (r) { return emptyPathMatch(segmentGroup, slicedSegments, r) && getOutlet$1(r) !== PRIMARY_OUTLET; });\n    }\n    function containsEmptyPathMatches(segmentGroup, slicedSegments, routes) {\n        return routes.some(function (r) { return emptyPathMatch(segmentGroup, slicedSegments, r); });\n    }\n    function emptyPathMatch(segmentGroup, slicedSegments, r) {\n        if ((segmentGroup.hasChildren() || slicedSegments.length > 0) && r.pathMatch === 'full') {\n            return false;\n        }\n        return r.path === '' && r.redirectTo === undefined;\n    }\n    function getOutlet$1(route) {\n        return route.outlet || PRIMARY_OUTLET;\n    }\n    function getData(route) {\n        return route.data || {};\n    }\n    function getResolve(route) {\n        return route.resolve || {};\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Provides a way to customize when activated routes get reused.\n     *\n     * @experimental\n     */\n    var RouteReuseStrategy = /** @class */ (function () {\n        function RouteReuseStrategy() {\n        }\n        return RouteReuseStrategy;\n    }());\n    /**\n     * Does not detach any subtrees. Reuses routes as long as their route config is the same.\n     */\n    var DefaultRouteReuseStrategy = /** @class */ (function () {\n        function DefaultRouteReuseStrategy() {\n        }\n        DefaultRouteReuseStrategy.prototype.shouldDetach = function (route) { return false; };\n        DefaultRouteReuseStrategy.prototype.store = function (route, detachedTree) { };\n        DefaultRouteReuseStrategy.prototype.shouldAttach = function (route) { return false; };\n        DefaultRouteReuseStrategy.prototype.retrieve = function (route) { return null; };\n        DefaultRouteReuseStrategy.prototype.shouldReuseRoute = function (future, curr) {\n            return future.routeConfig === curr.routeConfig;\n        };\n        return DefaultRouteReuseStrategy;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @docsNotRequired\n     * @experimental\n     */\n    var ROUTES = new core.InjectionToken('ROUTES');\n    var RouterConfigLoader = /** @class */ (function () {\n        function RouterConfigLoader(loader, compiler, onLoadStartListener, onLoadEndListener) {\n            this.loader = loader;\n            this.compiler = compiler;\n            this.onLoadStartListener = onLoadStartListener;\n            this.onLoadEndListener = onLoadEndListener;\n        }\n        RouterConfigLoader.prototype.load = function (parentInjector, route) {\n            var _this = this;\n            if (this.onLoadStartListener) {\n                this.onLoadStartListener(route);\n            }\n            var moduleFactory$ = this.loadModuleFactory(route.loadChildren);\n            return moduleFactory$.pipe(operators.map(function (factory) {\n                if (_this.onLoadEndListener) {\n                    _this.onLoadEndListener(route);\n                }\n                var module = factory.create(parentInjector);\n                return new LoadedRouterConfig(flatten(module.injector.get(ROUTES)).map(standardizeConfig), module);\n            }));\n        };\n        RouterConfigLoader.prototype.loadModuleFactory = function (loadChildren) {\n            var _this = this;\n            if (typeof loadChildren === 'string') {\n                return rxjs.from(this.loader.load(loadChildren));\n            }\n            else {\n                return wrapIntoObservable(loadChildren()).pipe(operators.mergeMap(function (t) {\n                    if (t instanceof core.NgModuleFactory) {\n                        return rxjs.of(t);\n                    }\n                    else {\n                        return rxjs.from(_this.compiler.compileModuleAsync(t));\n                    }\n                }));\n            }\n        };\n        return RouterConfigLoader;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Provides a way to migrate AngularJS applications to Angular.\n     *\n     * @experimental\n     */\n    var UrlHandlingStrategy = /** @class */ (function () {\n        function UrlHandlingStrategy() {\n        }\n        return UrlHandlingStrategy;\n    }());\n    /**\n     * @experimental\n     */\n    var DefaultUrlHandlingStrategy = /** @class */ (function () {\n        function DefaultUrlHandlingStrategy() {\n        }\n        DefaultUrlHandlingStrategy.prototype.shouldProcessUrl = function (url) { return true; };\n        DefaultUrlHandlingStrategy.prototype.extract = function (url) { return url; };\n        DefaultUrlHandlingStrategy.prototype.merge = function (newUrlPart, wholeUrl) { return newUrlPart; };\n        return DefaultUrlHandlingStrategy;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function defaultErrorHandler(error) {\n        throw error;\n    }\n    function defaultMalformedUriErrorHandler(error, urlSerializer, url) {\n        return urlSerializer.parse('/');\n    }\n    /**\n     * @internal\n     */\n    function defaultRouterHook(snapshot, runExtras) {\n        return rxjs.of(null);\n    }\n    /**\n     * @description\n     *\n     * Provides the navigation and url manipulation capabilities.\n     *\n     * See `Routes` for more details and examples.\n     *\n     * @ngModule RouterModule\n     *\n     *\n     */\n    var Router = /** @class */ (function () {\n        /**\n         * Creates the router service.\n         */\n        // TODO: vsavkin make internal after the final is out.\n        function Router(rootComponentType, urlSerializer, rootContexts, location, injector, loader, compiler, config) {\n            var _this = this;\n            this.rootComponentType = rootComponentType;\n            this.urlSerializer = urlSerializer;\n            this.rootContexts = rootContexts;\n            this.location = location;\n            this.config = config;\n            this.navigations = new rxjs.BehaviorSubject(null);\n            this.navigationId = 0;\n            this.events = new rxjs.Subject();\n            /**\n             * Error handler that is invoked when a navigation errors.\n             *\n             * See `ErrorHandler` for more information.\n             */\n            this.errorHandler = defaultErrorHandler;\n            /**\n             * Malformed uri error handler is invoked when `Router.parseUrl(url)` throws an\n             * error due to containing an invalid character. The most common case would be a `%` sign\n             * that's not encoded and is not part of a percent encoded sequence.\n             */\n            this.malformedUriErrorHandler = defaultMalformedUriErrorHandler;\n            /**\n             * Indicates if at least one navigation happened.\n             */\n            this.navigated = false;\n            this.lastSuccessfulId = -1;\n            /**\n             * Used by RouterModule. This allows us to\n             * pause the navigation either before preactivation or after it.\n             * @internal\n             */\n            this.hooks = {\n                beforePreactivation: defaultRouterHook,\n                afterPreactivation: defaultRouterHook\n            };\n            /**\n             * Extracts and merges URLs. Used for AngularJS to Angular migrations.\n             */\n            this.urlHandlingStrategy = new DefaultUrlHandlingStrategy();\n            this.routeReuseStrategy = new DefaultRouteReuseStrategy();\n            /**\n             * Define what the router should do if it receives a navigation request to the current URL.\n             * By default, the router will ignore this navigation. However, this prevents features such\n             * as a \"refresh\" button. Use this option to configure the behavior when navigating to the\n             * current URL. Default is 'ignore'.\n             */\n            this.onSameUrlNavigation = 'ignore';\n            /**\n             * Defines how the router merges params, data and resolved data from parent to child\n             * routes. Available options are:\n             *\n             * - `'emptyOnly'`, the default, only inherits parent params for path-less or component-less\n             *   routes.\n             * - `'always'`, enables unconditional inheritance of parent params.\n             */\n            this.paramsInheritanceStrategy = 'emptyOnly';\n            /**\n             * Defines when the router updates the browser URL. The default behavior is to update after\n             * successful navigation. However, some applications may prefer a mode where the URL gets\n             * updated at the beginning of navigation. The most common use case would be updating the\n             * URL early so if navigation fails, you can show an error message with the URL that failed.\n             * Available options are:\n             *\n             * - `'deferred'`, the default, updates the browser URL after navigation has finished.\n             * - `'eager'`, updates browser URL at the beginning of navigation.\n             */\n            this.urlUpdateStrategy = 'deferred';\n            var onLoadStart = function (r) { return _this.triggerEvent(new RouteConfigLoadStart(r)); };\n            var onLoadEnd = function (r) { return _this.triggerEvent(new RouteConfigLoadEnd(r)); };\n            this.ngModule = injector.get(core.NgModuleRef);\n            this.resetConfig(config);\n            this.currentUrlTree = createEmptyUrlTree();\n            this.rawUrlTree = this.currentUrlTree;\n            this.configLoader = new RouterConfigLoader(loader, compiler, onLoadStart, onLoadEnd);\n            this.routerState = createEmptyState(this.currentUrlTree, this.rootComponentType);\n            this.processNavigations();\n        }\n        /**\n         * @internal\n         * TODO: this should be removed once the constructor of the router made internal\n         */\n        Router.prototype.resetRootComponentType = function (rootComponentType) {\n            this.rootComponentType = rootComponentType;\n            // TODO: vsavkin router 4.0 should make the root component set to null\n            // this will simplify the lifecycle of the router.\n            this.routerState.root.component = this.rootComponentType;\n        };\n        /**\n         * Sets up the location change listener and performs the initial navigation.\n         */\n        Router.prototype.initialNavigation = function () {\n            this.setUpLocationChangeListener();\n            if (this.navigationId === 0) {\n                this.navigateByUrl(this.location.path(true), { replaceUrl: true });\n            }\n        };\n        /**\n         * Sets up the location change listener.\n         */\n        Router.prototype.setUpLocationChangeListener = function () {\n            var _this = this;\n            // Don't need to use Zone.wrap any more, because zone.js\n            // already patch onPopState, so location change callback will\n            // run into ngZone\n            if (!this.locationSubscription) {\n                this.locationSubscription = this.location.subscribe(function (change) {\n                    var rawUrlTree = _this.parseUrl(change['url']);\n                    var source = change['type'] === 'popstate' ? 'popstate' : 'hashchange';\n                    var state = change.state && change.state.navigationId ?\n                        { navigationId: change.state.navigationId } :\n                        null;\n                    setTimeout(function () { _this.scheduleNavigation(rawUrlTree, source, state, { replaceUrl: true }); }, 0);\n                });\n            }\n        };\n        Object.defineProperty(Router.prototype, \"url\", {\n            /** The current url */\n            get: function () { return this.serializeUrl(this.currentUrlTree); },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        Router.prototype.triggerEvent = function (e) { this.events.next(e); };\n        /**\n         * Resets the configuration used for navigation and generating links.\n         *\n         * ### Usage\n         *\n         * ```\n         * router.resetConfig([\n         *  { path: 'team/:id', component: TeamCmp, children: [\n         *    { path: 'simple', component: SimpleCmp },\n         *    { path: 'user/:name', component: UserCmp }\n         *  ]}\n         * ]);\n         * ```\n         */\n        Router.prototype.resetConfig = function (config) {\n            validateConfig(config);\n            this.config = config.map(standardizeConfig);\n            this.navigated = false;\n            this.lastSuccessfulId = -1;\n        };\n        /** @docsNotRequired */\n        Router.prototype.ngOnDestroy = function () { this.dispose(); };\n        /** Disposes of the router */\n        Router.prototype.dispose = function () {\n            if (this.locationSubscription) {\n                this.locationSubscription.unsubscribe();\n                this.locationSubscription = null;\n            }\n        };\n        /**\n         * Applies an array of commands to the current url tree and creates a new url tree.\n         *\n         * When given an activate route, applies the given commands starting from the route.\n         * When not given a route, applies the given command starting from the root.\n         *\n         * ### Usage\n         *\n         * ```\n         * // create /team/33/user/11\n         * router.createUrlTree(['/team', 33, 'user', 11]);\n         *\n         * // create /team/33;expand=true/user/11\n         * router.createUrlTree(['/team', 33, {expand: true}, 'user', 11]);\n         *\n         * // you can collapse static segments like this (this works only with the first passed-in value):\n         * router.createUrlTree(['/team/33/user', userId]);\n         *\n         * // If the first segment can contain slashes, and you do not want the router to split it, you\n         * // can do the following:\n         *\n         * router.createUrlTree([{segmentPath: '/one/two'}]);\n         *\n         * // create /team/33/(user/11//right:chat)\n         * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: 'chat'}}]);\n         *\n         * // remove the right secondary node\n         * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: null}}]);\n         *\n         * // assuming the current url is `/team/33/user/11` and the route points to `user/11`\n         *\n         * // navigate to /team/33/user/11/details\n         * router.createUrlTree(['details'], {relativeTo: route});\n         *\n         * // navigate to /team/33/user/22\n         * router.createUrlTree(['../22'], {relativeTo: route});\n         *\n         * // navigate to /team/44/user/22\n         * router.createUrlTree(['../../team/44/user/22'], {relativeTo: route});\n         * ```\n         */\n        Router.prototype.createUrlTree = function (commands, navigationExtras) {\n            if (navigationExtras === void 0) { navigationExtras = {}; }\n            var relativeTo = navigationExtras.relativeTo, queryParams = navigationExtras.queryParams, fragment = navigationExtras.fragment, preserveQueryParams = navigationExtras.preserveQueryParams, queryParamsHandling = navigationExtras.queryParamsHandling, preserveFragment = navigationExtras.preserveFragment;\n            if (core.isDevMode() && preserveQueryParams && console && console.warn) {\n                console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n            }\n            var a = relativeTo || this.routerState.root;\n            var f = preserveFragment ? this.currentUrlTree.fragment : fragment;\n            var q = null;\n            if (queryParamsHandling) {\n                switch (queryParamsHandling) {\n                    case 'merge':\n                        q = __assign({}, this.currentUrlTree.queryParams, queryParams);\n                        break;\n                    case 'preserve':\n                        q = this.currentUrlTree.queryParams;\n                        break;\n                    default:\n                        q = queryParams || null;\n                }\n            }\n            else {\n                q = preserveQueryParams ? this.currentUrlTree.queryParams : queryParams || null;\n            }\n            if (q !== null) {\n                q = this.removeEmptyProps(q);\n            }\n            return createUrlTree(a, this.currentUrlTree, commands, q, f);\n        };\n        /**\n         * Navigate based on the provided url. This navigation is always absolute.\n         *\n         * Returns a promise that:\n         * - resolves to 'true' when navigation succeeds,\n         * - resolves to 'false' when navigation fails,\n         * - is rejected when an error happens.\n         *\n         * ### Usage\n         *\n         * ```\n         * router.navigateByUrl(\"/team/33/user/11\");\n         *\n         * // Navigate without updating the URL\n         * router.navigateByUrl(\"/team/33/user/11\", { skipLocationChange: true });\n         * ```\n         *\n         * In opposite to `navigate`, `navigateByUrl` takes a whole URL\n         * and does not apply any delta to the current one.\n         */\n        Router.prototype.navigateByUrl = function (url, extras) {\n            if (extras === void 0) { extras = { skipLocationChange: false }; }\n            var urlTree = url instanceof UrlTree ? url : this.parseUrl(url);\n            var mergedTree = this.urlHandlingStrategy.merge(urlTree, this.rawUrlTree);\n            return this.scheduleNavigation(mergedTree, 'imperative', null, extras);\n        };\n        /**\n         * Navigate based on the provided array of commands and a starting point.\n         * If no starting route is provided, the navigation is absolute.\n         *\n         * Returns a promise that:\n         * - resolves to 'true' when navigation succeeds,\n         * - resolves to 'false' when navigation fails,\n         * - is rejected when an error happens.\n         *\n         * ### Usage\n         *\n         * ```\n         * router.navigate(['team', 33, 'user', 11], {relativeTo: route});\n         *\n         * // Navigate without updating the URL\n         * router.navigate(['team', 33, 'user', 11], {relativeTo: route, skipLocationChange: true});\n         * ```\n         *\n         * In opposite to `navigateByUrl`, `navigate` always takes a delta that is applied to the current\n         * URL.\n         */\n        Router.prototype.navigate = function (commands, extras) {\n            if (extras === void 0) { extras = { skipLocationChange: false }; }\n            validateCommands(commands);\n            return this.navigateByUrl(this.createUrlTree(commands, extras), extras);\n        };\n        /** Serializes a `UrlTree` into a string */\n        Router.prototype.serializeUrl = function (url) { return this.urlSerializer.serialize(url); };\n        /** Parses a string into a `UrlTree` */\n        Router.prototype.parseUrl = function (url) {\n            var urlTree;\n            try {\n                urlTree = this.urlSerializer.parse(url);\n            }\n            catch (e) {\n                urlTree = this.malformedUriErrorHandler(e, this.urlSerializer, url);\n            }\n            return urlTree;\n        };\n        /** Returns whether the url is activated */\n        Router.prototype.isActive = function (url, exact) {\n            if (url instanceof UrlTree) {\n                return containsTree(this.currentUrlTree, url, exact);\n            }\n            var urlTree = this.parseUrl(url);\n            return containsTree(this.currentUrlTree, urlTree, exact);\n        };\n        Router.prototype.removeEmptyProps = function (params) {\n            return Object.keys(params).reduce(function (result, key) {\n                var value = params[key];\n                if (value !== null && value !== undefined) {\n                    result[key] = value;\n                }\n                return result;\n            }, {});\n        };\n        Router.prototype.processNavigations = function () {\n            var _this = this;\n            this.navigations\n                .pipe(operators.concatMap(function (nav) {\n                if (nav) {\n                    _this.executeScheduledNavigation(nav);\n                    // a failed navigation should not stop the router from processing\n                    // further navigations => the catch\n                    return nav.promise.catch(function () { });\n                }\n                else {\n                    return rxjs.of(null);\n                }\n            }))\n                .subscribe(function () { });\n        };\n        Router.prototype.scheduleNavigation = function (rawUrl, source, state, extras) {\n            var lastNavigation = this.navigations.value;\n            // If the user triggers a navigation imperatively (e.g., by using navigateByUrl),\n            // and that navigation results in 'replaceState' that leads to the same URL,\n            // we should skip those.\n            if (lastNavigation && source !== 'imperative' && lastNavigation.source === 'imperative' &&\n                lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n                return Promise.resolve(true); // return value is not used\n            }\n            // Because of a bug in IE and Edge, the location class fires two events (popstate and\n            // hashchange) every single time. The second one should be ignored. Otherwise, the URL will\n            // flicker. Handles the case when a popstate was emitted first.\n            if (lastNavigation && source == 'hashchange' && lastNavigation.source === 'popstate' &&\n                lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n                return Promise.resolve(true); // return value is not used\n            }\n            // Because of a bug in IE and Edge, the location class fires two events (popstate and\n            // hashchange) every single time. The second one should be ignored. Otherwise, the URL will\n            // flicker. Handles the case when a hashchange was emitted first.\n            if (lastNavigation && source == 'popstate' && lastNavigation.source === 'hashchange' &&\n                lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n                return Promise.resolve(true); // return value is not used\n            }\n            var resolve = null;\n            var reject = null;\n            var promise = new Promise(function (res, rej) {\n                resolve = res;\n                reject = rej;\n            });\n            var id = ++this.navigationId;\n            this.navigations.next({ id: id, source: source, state: state, rawUrl: rawUrl, extras: extras, resolve: resolve, reject: reject, promise: promise });\n            // Make sure that the error is propagated even though `processNavigations` catch\n            // handler does not rethrow\n            return promise.catch(function (e) { return Promise.reject(e); });\n        };\n        Router.prototype.executeScheduledNavigation = function (_a) {\n            var _this = this;\n            var id = _a.id, rawUrl = _a.rawUrl, extras = _a.extras, resolve = _a.resolve, reject = _a.reject, source = _a.source, state = _a.state;\n            var url = this.urlHandlingStrategy.extract(rawUrl);\n            var urlTransition = !this.navigated || url.toString() !== this.currentUrlTree.toString();\n            if ((this.onSameUrlNavigation === 'reload' ? true : urlTransition) &&\n                this.urlHandlingStrategy.shouldProcessUrl(rawUrl)) {\n                if (this.urlUpdateStrategy === 'eager' && !extras.skipLocationChange) {\n                    this.setBrowserUrl(rawUrl, !!extras.replaceUrl, id);\n                }\n                this.events\n                    .next(new NavigationStart(id, this.serializeUrl(url), source, state));\n                Promise.resolve()\n                    .then(function (_) { return _this.runNavigate(url, rawUrl, !!extras.skipLocationChange, !!extras.replaceUrl, id, null); })\n                    .then(resolve, reject);\n                // we cannot process the current URL, but we could process the previous one =>\n                // we need to do some cleanup\n            }\n            else if (urlTransition && this.rawUrlTree &&\n                this.urlHandlingStrategy.shouldProcessUrl(this.rawUrlTree)) {\n                this.events\n                    .next(new NavigationStart(id, this.serializeUrl(url), source, state));\n                Promise.resolve()\n                    .then(function (_) { return _this.runNavigate(url, rawUrl, false, false, id, createEmptyState(url, _this.rootComponentType).snapshot); })\n                    .then(resolve, reject);\n            }\n            else {\n                this.rawUrlTree = rawUrl;\n                resolve(null);\n            }\n        };\n        Router.prototype.runNavigate = function (url, rawUrl, skipLocationChange, replaceUrl, id, precreatedState) {\n            var _this = this;\n            if (id !== this.navigationId) {\n                this.events\n                    .next(new NavigationCancel(id, this.serializeUrl(url), \"Navigation ID \" + id + \" is not equal to the current navigation id \" + this.navigationId));\n                return Promise.resolve(false);\n            }\n            return new Promise(function (resolvePromise, rejectPromise) {\n                // create an observable of the url and route state snapshot\n                // this operation do not result in any side effects\n                var urlAndSnapshot$;\n                if (!precreatedState) {\n                    var moduleInjector = _this.ngModule.injector;\n                    var redirectsApplied$ = applyRedirects(moduleInjector, _this.configLoader, _this.urlSerializer, url, _this.config);\n                    urlAndSnapshot$ = redirectsApplied$.pipe(operators.mergeMap(function (appliedUrl) {\n                        return recognize(_this.rootComponentType, _this.config, appliedUrl, _this.serializeUrl(appliedUrl), _this.paramsInheritanceStrategy)\n                            .pipe(operators.map(function (snapshot) {\n                            _this.events\n                                .next(new RoutesRecognized(id, _this.serializeUrl(url), _this.serializeUrl(appliedUrl), snapshot));\n                            return { appliedUrl: appliedUrl, snapshot: snapshot };\n                        }));\n                    }));\n                }\n                else {\n                    urlAndSnapshot$ = rxjs.of({ appliedUrl: url, snapshot: precreatedState });\n                }\n                var beforePreactivationDone$ = urlAndSnapshot$.pipe(operators.mergeMap(function (p) {\n                    if (typeof p === 'boolean')\n                        return rxjs.of(p);\n                    return _this.hooks\n                        .beforePreactivation(p.snapshot, {\n                        navigationId: id,\n                        appliedUrlTree: url,\n                        rawUrlTree: rawUrl, skipLocationChange: skipLocationChange, replaceUrl: replaceUrl,\n                    })\n                        .pipe(operators.map(function () { return p; }));\n                }));\n                // run preactivation: guards and data resolvers\n                var preActivation;\n                var preactivationSetup$ = beforePreactivationDone$.pipe(operators.map(function (p) {\n                    if (typeof p === 'boolean')\n                        return p;\n                    var appliedUrl = p.appliedUrl, snapshot = p.snapshot;\n                    var moduleInjector = _this.ngModule.injector;\n                    preActivation = new PreActivation(snapshot, _this.routerState.snapshot, moduleInjector, function (evt) { return _this.triggerEvent(evt); });\n                    preActivation.initialize(_this.rootContexts);\n                    return { appliedUrl: appliedUrl, snapshot: snapshot };\n                }));\n                var preactivationCheckGuards$ = preactivationSetup$.pipe(operators.mergeMap(function (p) {\n                    if (typeof p === 'boolean' || _this.navigationId !== id)\n                        return rxjs.of(false);\n                    var appliedUrl = p.appliedUrl, snapshot = p.snapshot;\n                    _this.triggerEvent(new GuardsCheckStart(id, _this.serializeUrl(url), _this.serializeUrl(appliedUrl), snapshot));\n                    return preActivation.checkGuards().pipe(operators.map(function (shouldActivate) {\n                        _this.triggerEvent(new GuardsCheckEnd(id, _this.serializeUrl(url), _this.serializeUrl(appliedUrl), snapshot, shouldActivate));\n                        return { appliedUrl: appliedUrl, snapshot: snapshot, shouldActivate: shouldActivate };\n                    }));\n                }));\n                var preactivationResolveData$ = preactivationCheckGuards$.pipe(operators.mergeMap(function (p) {\n                    if (typeof p === 'boolean' || _this.navigationId !== id)\n                        return rxjs.of(false);\n                    if (p.shouldActivate && preActivation.isActivating()) {\n                        _this.triggerEvent(new ResolveStart(id, _this.serializeUrl(url), _this.serializeUrl(p.appliedUrl), p.snapshot));\n                        return preActivation.resolveData(_this.paramsInheritanceStrategy).pipe(operators.map(function () {\n                            _this.triggerEvent(new ResolveEnd(id, _this.serializeUrl(url), _this.serializeUrl(p.appliedUrl), p.snapshot));\n                            return p;\n                        }));\n                    }\n                    else {\n                        return rxjs.of(p);\n                    }\n                }));\n                var preactivationDone$ = preactivationResolveData$.pipe(operators.mergeMap(function (p) {\n                    if (typeof p === 'boolean' || _this.navigationId !== id)\n                        return rxjs.of(false);\n                    return _this.hooks\n                        .afterPreactivation(p.snapshot, {\n                        navigationId: id,\n                        appliedUrlTree: url,\n                        rawUrlTree: rawUrl, skipLocationChange: skipLocationChange, replaceUrl: replaceUrl,\n                    })\n                        .pipe(operators.map(function () { return p; }));\n                }));\n                // create router state\n                // this operation has side effects => route state is being affected\n                var routerState$ = preactivationDone$.pipe(operators.map(function (p) {\n                    if (typeof p === 'boolean' || _this.navigationId !== id)\n                        return false;\n                    var appliedUrl = p.appliedUrl, snapshot = p.snapshot, shouldActivate = p.shouldActivate;\n                    if (shouldActivate) {\n                        var state = createRouterState(_this.routeReuseStrategy, snapshot, _this.routerState);\n                        return { appliedUrl: appliedUrl, state: state, shouldActivate: shouldActivate };\n                    }\n                    else {\n                        return { appliedUrl: appliedUrl, state: null, shouldActivate: shouldActivate };\n                    }\n                }));\n                _this.activateRoutes(routerState$, _this.routerState, _this.currentUrlTree, id, url, rawUrl, skipLocationChange, replaceUrl, resolvePromise, rejectPromise);\n            });\n        };\n        /**\n         * Performs the logic of activating routes. This is a synchronous process by default. While this\n         * is a private method, it could be overridden to make activation asynchronous.\n         */\n        Router.prototype.activateRoutes = function (state, storedState, storedUrl, id, url, rawUrl, skipLocationChange, replaceUrl, resolvePromise, rejectPromise) {\n            var _this = this;\n            // applied the new router state\n            // this operation has side effects\n            var navigationIsSuccessful;\n            state\n                .forEach(function (p) {\n                if (typeof p === 'boolean' || !p.shouldActivate || id !== _this.navigationId || !p.state) {\n                    navigationIsSuccessful = false;\n                    return;\n                }\n                var appliedUrl = p.appliedUrl, state = p.state;\n                _this.currentUrlTree = appliedUrl;\n                _this.rawUrlTree = _this.urlHandlingStrategy.merge(_this.currentUrlTree, rawUrl);\n                _this.routerState = state;\n                if (_this.urlUpdateStrategy === 'deferred' && !skipLocationChange) {\n                    _this.setBrowserUrl(_this.rawUrlTree, replaceUrl, id);\n                }\n                new ActivateRoutes(_this.routeReuseStrategy, state, storedState, function (evt) { return _this.triggerEvent(evt); })\n                    .activate(_this.rootContexts);\n                navigationIsSuccessful = true;\n            })\n                .then(function () {\n                if (navigationIsSuccessful) {\n                    _this.navigated = true;\n                    _this.lastSuccessfulId = id;\n                    _this.events\n                        .next(new NavigationEnd(id, _this.serializeUrl(url), _this.serializeUrl(_this.currentUrlTree)));\n                    resolvePromise(true);\n                }\n                else {\n                    _this.resetUrlToCurrentUrlTree();\n                    _this.events\n                        .next(new NavigationCancel(id, _this.serializeUrl(url), ''));\n                    resolvePromise(false);\n                }\n            }, function (e) {\n                if (isNavigationCancelingError(e)) {\n                    _this.navigated = true;\n                    _this.resetStateAndUrl(storedState, storedUrl, rawUrl);\n                    _this.events\n                        .next(new NavigationCancel(id, _this.serializeUrl(url), e.message));\n                    resolvePromise(false);\n                }\n                else {\n                    _this.resetStateAndUrl(storedState, storedUrl, rawUrl);\n                    _this.events\n                        .next(new NavigationError(id, _this.serializeUrl(url), e));\n                    try {\n                        resolvePromise(_this.errorHandler(e));\n                    }\n                    catch (ee) {\n                        rejectPromise(ee);\n                    }\n                }\n            });\n        };\n        Router.prototype.setBrowserUrl = function (url, replaceUrl, id) {\n            var path = this.urlSerializer.serialize(url);\n            if (this.location.isCurrentPathEqualTo(path) || replaceUrl) {\n                this.location.replaceState(path, '', { navigationId: id });\n            }\n            else {\n                this.location.go(path, '', { navigationId: id });\n            }\n        };\n        Router.prototype.resetStateAndUrl = function (storedState, storedUrl, rawUrl) {\n            this.routerState = storedState;\n            this.currentUrlTree = storedUrl;\n            this.rawUrlTree = this.urlHandlingStrategy.merge(this.currentUrlTree, rawUrl);\n            this.resetUrlToCurrentUrlTree();\n        };\n        Router.prototype.resetUrlToCurrentUrlTree = function () {\n            this.location.replaceState(this.urlSerializer.serialize(this.rawUrlTree), '', { navigationId: this.lastSuccessfulId });\n        };\n        return Router;\n    }());\n    var ActivateRoutes = /** @class */ (function () {\n        function ActivateRoutes(routeReuseStrategy, futureState, currState, forwardEvent) {\n            this.routeReuseStrategy = routeReuseStrategy;\n            this.futureState = futureState;\n            this.currState = currState;\n            this.forwardEvent = forwardEvent;\n        }\n        ActivateRoutes.prototype.activate = function (parentContexts) {\n            var futureRoot = this.futureState._root;\n            var currRoot = this.currState ? this.currState._root : null;\n            this.deactivateChildRoutes(futureRoot, currRoot, parentContexts);\n            advanceActivatedRoute(this.futureState.root);\n            this.activateChildRoutes(futureRoot, currRoot, parentContexts);\n        };\n        // De-activate the child route that are not re-used for the future state\n        ActivateRoutes.prototype.deactivateChildRoutes = function (futureNode, currNode, contexts) {\n            var _this = this;\n            var children = nodeChildrenAsMap(currNode);\n            // Recurse on the routes active in the future state to de-activate deeper children\n            futureNode.children.forEach(function (futureChild) {\n                var childOutletName = futureChild.value.outlet;\n                _this.deactivateRoutes(futureChild, children[childOutletName], contexts);\n                delete children[childOutletName];\n            });\n            // De-activate the routes that will not be re-used\n            forEach(children, function (v, childName) {\n                _this.deactivateRouteAndItsChildren(v, contexts);\n            });\n        };\n        ActivateRoutes.prototype.deactivateRoutes = function (futureNode, currNode, parentContext) {\n            var future = futureNode.value;\n            var curr = currNode ? currNode.value : null;\n            if (future === curr) {\n                // Reusing the node, check to see if the children need to be de-activated\n                if (future.component) {\n                    // If we have a normal route, we need to go through an outlet.\n                    var context = parentContext.getContext(future.outlet);\n                    if (context) {\n                        this.deactivateChildRoutes(futureNode, currNode, context.children);\n                    }\n                }\n                else {\n                    // if we have a componentless route, we recurse but keep the same outlet map.\n                    this.deactivateChildRoutes(futureNode, currNode, parentContext);\n                }\n            }\n            else {\n                if (curr) {\n                    // Deactivate the current route which will not be re-used\n                    this.deactivateRouteAndItsChildren(currNode, parentContext);\n                }\n            }\n        };\n        ActivateRoutes.prototype.deactivateRouteAndItsChildren = function (route, parentContexts) {\n            if (this.routeReuseStrategy.shouldDetach(route.value.snapshot)) {\n                this.detachAndStoreRouteSubtree(route, parentContexts);\n            }\n            else {\n                this.deactivateRouteAndOutlet(route, parentContexts);\n            }\n        };\n        ActivateRoutes.prototype.detachAndStoreRouteSubtree = function (route, parentContexts) {\n            var context = parentContexts.getContext(route.value.outlet);\n            if (context && context.outlet) {\n                var componentRef = context.outlet.detach();\n                var contexts = context.children.onOutletDeactivated();\n                this.routeReuseStrategy.store(route.value.snapshot, { componentRef: componentRef, route: route, contexts: contexts });\n            }\n        };\n        ActivateRoutes.prototype.deactivateRouteAndOutlet = function (route, parentContexts) {\n            var _this = this;\n            var context = parentContexts.getContext(route.value.outlet);\n            if (context) {\n                var children = nodeChildrenAsMap(route);\n                var contexts_1 = route.value.component ? context.children : parentContexts;\n                forEach(children, function (v, k) { return _this.deactivateRouteAndItsChildren(v, contexts_1); });\n                if (context.outlet) {\n                    // Destroy the component\n                    context.outlet.deactivate();\n                    // Destroy the contexts for all the outlets that were in the component\n                    context.children.onOutletDeactivated();\n                }\n            }\n        };\n        ActivateRoutes.prototype.activateChildRoutes = function (futureNode, currNode, contexts) {\n            var _this = this;\n            var children = nodeChildrenAsMap(currNode);\n            futureNode.children.forEach(function (c) {\n                _this.activateRoutes(c, children[c.value.outlet], contexts);\n                _this.forwardEvent(new ActivationEnd(c.value.snapshot));\n            });\n            if (futureNode.children.length) {\n                this.forwardEvent(new ChildActivationEnd(futureNode.value.snapshot));\n            }\n        };\n        ActivateRoutes.prototype.activateRoutes = function (futureNode, currNode, parentContexts) {\n            var future = futureNode.value;\n            var curr = currNode ? currNode.value : null;\n            advanceActivatedRoute(future);\n            // reusing the node\n            if (future === curr) {\n                if (future.component) {\n                    // If we have a normal route, we need to go through an outlet.\n                    var context = parentContexts.getOrCreateContext(future.outlet);\n                    this.activateChildRoutes(futureNode, currNode, context.children);\n                }\n                else {\n                    // if we have a componentless route, we recurse but keep the same outlet map.\n                    this.activateChildRoutes(futureNode, currNode, parentContexts);\n                }\n            }\n            else {\n                if (future.component) {\n                    // if we have a normal route, we need to place the component into the outlet and recurse.\n                    var context = parentContexts.getOrCreateContext(future.outlet);\n                    if (this.routeReuseStrategy.shouldAttach(future.snapshot)) {\n                        var stored = this.routeReuseStrategy.retrieve(future.snapshot);\n                        this.routeReuseStrategy.store(future.snapshot, null);\n                        context.children.onOutletReAttached(stored.contexts);\n                        context.attachRef = stored.componentRef;\n                        context.route = stored.route.value;\n                        if (context.outlet) {\n                            // Attach right away when the outlet has already been instantiated\n                            // Otherwise attach from `RouterOutlet.ngOnInit` when it is instantiated\n                            context.outlet.attach(stored.componentRef, stored.route.value);\n                        }\n                        advanceActivatedRouteNodeAndItsChildren(stored.route);\n                    }\n                    else {\n                        var config = parentLoadedConfig(future.snapshot);\n                        var cmpFactoryResolver = config ? config.module.componentFactoryResolver : null;\n                        context.route = future;\n                        context.resolver = cmpFactoryResolver;\n                        if (context.outlet) {\n                            // Activate the outlet when it has already been instantiated\n                            // Otherwise it will get activated from its `ngOnInit` when instantiated\n                            context.outlet.activateWith(future, cmpFactoryResolver);\n                        }\n                        this.activateChildRoutes(futureNode, null, context.children);\n                    }\n                }\n                else {\n                    // if we have a componentless route, we recurse but keep the same outlet map.\n                    this.activateChildRoutes(futureNode, null, parentContexts);\n                }\n            }\n        };\n        return ActivateRoutes;\n    }());\n    function advanceActivatedRouteNodeAndItsChildren(node) {\n        advanceActivatedRoute(node.value);\n        node.children.forEach(advanceActivatedRouteNodeAndItsChildren);\n    }\n    function parentLoadedConfig(snapshot) {\n        for (var s = snapshot.parent; s; s = s.parent) {\n            var route = s.routeConfig;\n            if (route && route._loadedConfig)\n                return route._loadedConfig;\n            if (route && route.component)\n                return null;\n        }\n        return null;\n    }\n    function validateCommands(commands) {\n        for (var i = 0; i < commands.length; i++) {\n            var cmd = commands[i];\n            if (cmd == null) {\n                throw new Error(\"The requested path contains \" + cmd + \" segment at index \" + i);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Lets you link to specific routes in your app.\n     *\n     * Consider the following route configuration:\n     * `[{ path: 'user/:name', component: UserCmp }]`.\n     * When linking to this `user/:name` route, you use the `RouterLink` directive.\n     *\n     * If the link is static, you can use the directive as follows:\n     * `<a routerLink=\"/user/bob\">link to user component</a>`\n     *\n     * If you use dynamic values to generate the link, you can pass an array of path\n     * segments, followed by the params for each segment.\n     *\n     * For instance `['/team', teamId, 'user', userName, {details: true}]`\n     * means that we want to generate a link to `/team/11/user/bob;details=true`.\n     *\n     * Multiple static segments can be merged into one\n     * (e.g., `['/team/11/user', userName, {details: true}]`).\n     *\n     * The first segment name can be prepended with `/`, `./`, or `../`:\n     * * If the first segment begins with `/`, the router will look up the route from the root of the\n     *   app.\n     * * If the first segment begins with `./`, or doesn't begin with a slash, the router will\n     *   instead look in the children of the current activated route.\n     * * And if the first segment begins with `../`, the router will go up one level.\n     *\n     * You can set query params and fragment as follows:\n     *\n     * ```\n     * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" fragment=\"education\">\n     *   link to user component\n     * </a>\n     * ```\n     * RouterLink will use these to generate this link: `/user/bob#education?debug=true`.\n     *\n     * (Deprecated in v4.0.0 use `queryParamsHandling` instead) You can also tell the\n     * directive to preserve the current query params and fragment:\n     *\n     * ```\n     * <a [routerLink]=\"['/user/bob']\" preserveQueryParams preserveFragment>\n     *   link to user component\n     * </a>\n     * ```\n     *\n     * You can tell the directive to how to handle queryParams, available options are:\n     *  - `'merge'`: merge the queryParams into the current queryParams\n     *  - `'preserve'`: preserve the current queryParams\n     *  - default/`''`: use the queryParams only\n     *\n     * Same options for {@link NavigationExtras#queryParamsHandling\n     * NavigationExtras#queryParamsHandling}.\n     *\n     * ```\n     * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" queryParamsHandling=\"merge\">\n     *   link to user component\n     * </a>\n     * ```\n     *\n     * The router link directive always treats the provided input as a delta to the current url.\n     *\n     * For instance, if the current url is `/user/(box//aux:team)`.\n     *\n     * Then the following link `<a [routerLink]=\"['/user/jim']\">Jim</a>` will generate the link\n     * `/user/(jim//aux:team)`.\n     *\n     * See {@link Router#createUrlTree createUrlTree} for more information.\n     *\n     * @ngModule RouterModule\n     *\n     *\n     */\n    var RouterLink = /** @class */ (function () {\n        function RouterLink(router, route, tabIndex, renderer, el) {\n            this.router = router;\n            this.route = route;\n            this.commands = [];\n            if (tabIndex == null) {\n                renderer.setAttribute(el.nativeElement, 'tabindex', '0');\n            }\n        }\n        Object.defineProperty(RouterLink.prototype, \"routerLink\", {\n            set: function (commands) {\n                if (commands != null) {\n                    this.commands = Array.isArray(commands) ? commands : [commands];\n                }\n                else {\n                    this.commands = [];\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(RouterLink.prototype, \"preserveQueryParams\", {\n            /**\n             * @deprecated 4.0.0 use `queryParamsHandling` instead.\n             */\n            set: function (value) {\n                if (core.isDevMode() && console && console.warn) {\n                    console.warn('preserveQueryParams is deprecated!, use queryParamsHandling instead.');\n                }\n                this.preserve = value;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        RouterLink.prototype.onClick = function () {\n            var extras = {\n                skipLocationChange: attrBoolValue(this.skipLocationChange),\n                replaceUrl: attrBoolValue(this.replaceUrl),\n            };\n            this.router.navigateByUrl(this.urlTree, extras);\n            return true;\n        };\n        Object.defineProperty(RouterLink.prototype, \"urlTree\", {\n            get: function () {\n                return this.router.createUrlTree(this.commands, {\n                    relativeTo: this.route,\n                    queryParams: this.queryParams,\n                    fragment: this.fragment,\n                    preserveQueryParams: attrBoolValue(this.preserve),\n                    queryParamsHandling: this.queryParamsHandling,\n                    preserveFragment: attrBoolValue(this.preserveFragment),\n                });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        __decorate([\n            core.Input(),\n            __metadata(\"design:type\", Object)\n        ], RouterLink.prototype, \"queryParams\", void 0);\n        __decorate([\n            core.Input(),\n            __metadata(\"design:type\", String)\n        ], RouterLink.prototype, \"fragment\", void 0);\n        __decorate([\n            core.Input(),\n            __metadata(\"design:type\", String)\n        ], RouterLink.prototype, \"queryParamsHandling\", void 0);\n        __decorate([\n            core.Input(),\n            __metadata(\"design:type\", Boolean)\n        ], RouterLink.prototype, \"preserveFragment\", void 0);\n        __decorate([\n            core.Input(),\n            __metadata(\"design:type\", Boolean)\n        ], RouterLink.prototype, \"skipLocationChange\", void 0);\n        __decorate([\n            core.Input(),\n            __metadata(\"design:type\", Boolean)\n        ], RouterLink.prototype, \"replaceUrl\", void 0);\n        __decorate([\n            core.Input(),\n            __metadata(\"design:type\", Object),\n            __metadata(\"design:paramtypes\", [Object])\n        ], RouterLink.prototype, \"routerLink\", null);\n        __decorate([\n            core.Input(),\n            __metadata(\"design:type\", Boolean),\n            __metadata(\"design:paramtypes\", [Boolean])\n        ], RouterLink.prototype, \"preserveQueryParams\", null);\n        __decorate([\n            core.HostListener('click'),\n            __metadata(\"design:type\", Function),\n            __metadata(\"design:paramtypes\", []),\n            __metadata(\"design:returntype\", Boolean)\n        ], RouterLink.prototype, \"onClick\", null);\n        RouterLink = __decorate([\n            core.Directive({ selector: ':not(a)[routerLink]' }),\n            __param(2, core.Attribute('tabindex')),\n            __metadata(\"design:paramtypes\", [Router, ActivatedRoute, String, core.Renderer2, core.ElementRef])\n        ], RouterLink);\n        return RouterLink;\n    }());\n    /**\n     * @description\n     *\n     * Lets you link to specific routes in your app.\n     *\n     * See `RouterLink` for more information.\n     *\n     * @ngModule RouterModule\n     *\n     *\n     */\n    var RouterLinkWithHref = /** @class */ (function () {\n        function RouterLinkWithHref(router, route, locationStrategy) {\n            var _this = this;\n            this.router = router;\n            this.route = route;\n            this.locationStrategy = locationStrategy;\n            this.commands = [];\n            this.subscription = router.events.subscribe(function (s) {\n                if (s instanceof NavigationEnd) {\n                    _this.updateTargetUrlAndHref();\n                }\n            });\n        }\n        Object.defineProperty(RouterLinkWithHref.prototype, \"routerLink\", {\n            set: function (commands) {\n                if (commands != null) {\n                    this.commands = Array.isArray(commands) ? commands : [commands];\n                }\n                else {\n                    this.commands = [];\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(RouterLinkWithHref.prototype, \"preserveQueryParams\", {\n            set: function (value) {\n                if (core.isDevMode() && console && console.warn) {\n                    console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n                }\n                this.preserve = value;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        RouterLinkWithHref.prototype.ngOnChanges = function (changes) { this.updateTargetUrlAndHref(); };\n        RouterLinkWithHref.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n        RouterLinkWithHref.prototype.onClick = function (button, ctrlKey, metaKey, shiftKey) {\n            if (button !== 0 || ctrlKey || metaKey || shiftKey) {\n                return true;\n            }\n            if (typeof this.target === 'string' && this.target != '_self') {\n                return true;\n            }\n            var extras = {\n                skipLocationChange: attrBoolValue(this.skipLocationChange),\n                replaceUrl: attrBoolValue(this.replaceUrl),\n            };\n            this.router.navigateByUrl(this.urlTree, extras);\n            return false;\n        };\n        RouterLinkWithHref.prototype.updateTargetUrlAndHref = function () {\n            this.href = this.locationStrategy.prepareExternalUrl(this.router.serializeUrl(this.urlTree));\n        };\n        Object.defineProperty(RouterLinkWithHref.prototype, \"urlTree\", {\n            get: function () {\n                return this.router.createUrlTree(this.commands, {\n                    relativeTo: this.route,\n                    queryParams: this.queryParams,\n                    fragment: this.fragment,\n                    preserveQueryParams: attrBoolValue(this.preserve),\n                    queryParamsHandling: this.queryParamsHandling,\n                    preserveFragment: attrBoolValue(this.preserveFragment),\n                });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        __decorate([\n            core.HostBinding('attr.target'), core.Input(),\n            __metadata(\"design:type\", String)\n        ], RouterLinkWithHref.prototype, \"target\", void 0);\n        __decorate([\n            core.Input(),\n            __metadata(\"design:type\", Object)\n        ], RouterLinkWithHref.prototype, \"queryParams\", void 0);\n        __decorate([\n            core.Input(),\n            __metadata(\"design:type\", String)\n        ], RouterLinkWithHref.prototype, \"fragment\", void 0);\n        __decorate([\n            core.Input(),\n            __metadata(\"design:type\", String)\n        ], RouterLinkWithHref.prototype, \"queryParamsHandling\", void 0);\n        __decorate([\n            core.Input(),\n            __metadata(\"design:type\", Boolean)\n        ], RouterLinkWithHref.prototype, \"preserveFragment\", void 0);\n        __decorate([\n            core.Input(),\n            __metadata(\"design:type\", Boolean)\n        ], RouterLinkWithHref.prototype, \"skipLocationChange\", void 0);\n        __decorate([\n            core.Input(),\n            __metadata(\"design:type\", Boolean)\n        ], RouterLinkWithHref.prototype, \"replaceUrl\", void 0);\n        __decorate([\n            core.HostBinding(),\n            __metadata(\"design:type\", String)\n        ], RouterLinkWithHref.prototype, \"href\", void 0);\n        __decorate([\n            core.Input(),\n            __metadata(\"design:type\", Object),\n            __metadata(\"design:paramtypes\", [Object])\n        ], RouterLinkWithHref.prototype, \"routerLink\", null);\n        __decorate([\n            core.Input(),\n            __metadata(\"design:type\", Boolean),\n            __metadata(\"design:paramtypes\", [Boolean])\n        ], RouterLinkWithHref.prototype, \"preserveQueryParams\", null);\n        __decorate([\n            core.HostListener('click', ['$event.button', '$event.ctrlKey', '$event.metaKey', '$event.shiftKey']),\n            __metadata(\"design:type\", Function),\n            __metadata(\"design:paramtypes\", [Number, Boolean, Boolean, Boolean]),\n            __metadata(\"design:returntype\", Boolean)\n        ], RouterLinkWithHref.prototype, \"onClick\", null);\n        RouterLinkWithHref = __decorate([\n            core.Directive({ selector: 'a[routerLink]' }),\n            __metadata(\"design:paramtypes\", [Router, ActivatedRoute,\n                common.LocationStrategy])\n        ], RouterLinkWithHref);\n        return RouterLinkWithHref;\n    }());\n    function attrBoolValue(s) {\n        return s === '' || !!s;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * @description\n     *\n     * Lets you add a CSS class to an element when the link's route becomes active.\n     *\n     * This directive lets you add a CSS class to an element when the link's route\n     * becomes active.\n     *\n     * Consider the following example:\n     *\n     * ```\n     * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\">Bob</a>\n     * ```\n     *\n     * When the url is either '/user' or '/user/bob', the active-link class will\n     * be added to the `a` tag. If the url changes, the class will be removed.\n     *\n     * You can set more than one class, as follows:\n     *\n     * ```\n     * <a routerLink=\"/user/bob\" routerLinkActive=\"class1 class2\">Bob</a>\n     * <a routerLink=\"/user/bob\" [routerLinkActive]=\"['class1', 'class2']\">Bob</a>\n     * ```\n     *\n     * You can configure RouterLinkActive by passing `exact: true`. This will add the classes\n     * only when the url matches the link exactly.\n     *\n     * ```\n     * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact:\n     * true}\">Bob</a>\n     * ```\n     *\n     * You can assign the RouterLinkActive instance to a template variable and directly check\n     * the `isActive` status.\n     * ```\n     * <a routerLink=\"/user/bob\" routerLinkActive #rla=\"routerLinkActive\">\n     *   Bob {{ rla.isActive ? '(already open)' : ''}}\n     * </a>\n     * ```\n     *\n     * Finally, you can apply the RouterLinkActive directive to an ancestor of a RouterLink.\n     *\n     * ```\n     * <div routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact: true}\">\n     *   <a routerLink=\"/user/jim\">Jim</a>\n     *   <a routerLink=\"/user/bob\">Bob</a>\n     * </div>\n     * ```\n     *\n     * This will set the active-link class on the div tag if the url is either '/user/jim' or\n     * '/user/bob'.\n     *\n     * @ngModule RouterModule\n     *\n     *\n     */\n    var RouterLinkActive = /** @class */ (function () {\n        function RouterLinkActive(router, element, renderer, cdr) {\n            var _this = this;\n            this.router = router;\n            this.element = element;\n            this.renderer = renderer;\n            this.cdr = cdr;\n            this.classes = [];\n            this.isActive = false;\n            this.routerLinkActiveOptions = { exact: false };\n            this.subscription = router.events.subscribe(function (s) {\n                if (s instanceof NavigationEnd) {\n                    _this.update();\n                }\n            });\n        }\n        RouterLinkActive.prototype.ngAfterContentInit = function () {\n            var _this = this;\n            this.links.changes.subscribe(function (_) { return _this.update(); });\n            this.linksWithHrefs.changes.subscribe(function (_) { return _this.update(); });\n            this.update();\n        };\n        Object.defineProperty(RouterLinkActive.prototype, \"routerLinkActive\", {\n            set: function (data) {\n                var classes = Array.isArray(data) ? data : data.split(' ');\n                this.classes = classes.filter(function (c) { return !!c; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        RouterLinkActive.prototype.ngOnChanges = function (changes) { this.update(); };\n        RouterLinkActive.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n        RouterLinkActive.prototype.update = function () {\n            var _this = this;\n            if (!this.links || !this.linksWithHrefs || !this.router.navigated)\n                return;\n            Promise.resolve().then(function () {\n                var hasActiveLinks = _this.hasActiveLinks();\n                if (_this.isActive !== hasActiveLinks) {\n                    _this.isActive = hasActiveLinks;\n                    _this.classes.forEach(function (c) {\n                        if (hasActiveLinks) {\n                            _this.renderer.addClass(_this.element.nativeElement, c);\n                        }\n                        else {\n                            _this.renderer.removeClass(_this.element.nativeElement, c);\n                        }\n                    });\n                }\n            });\n        };\n        RouterLinkActive.prototype.isLinkActive = function (router) {\n            var _this = this;\n            return function (link) {\n                return router.isActive(link.urlTree, _this.routerLinkActiveOptions.exact);\n            };\n        };\n        RouterLinkActive.prototype.hasActiveLinks = function () {\n            return this.links.some(this.isLinkActive(this.router)) ||\n                this.linksWithHrefs.some(this.isLinkActive(this.router));\n        };\n        __decorate([\n            core.ContentChildren(RouterLink, { descendants: true }),\n            __metadata(\"design:type\", core.QueryList)\n        ], RouterLinkActive.prototype, \"links\", void 0);\n        __decorate([\n            core.ContentChildren(RouterLinkWithHref, { descendants: true }),\n            __metadata(\"design:type\", core.QueryList)\n        ], RouterLinkActive.prototype, \"linksWithHrefs\", void 0);\n        __decorate([\n            core.Input(),\n            __metadata(\"design:type\", Object)\n        ], RouterLinkActive.prototype, \"routerLinkActiveOptions\", void 0);\n        __decorate([\n            core.Input(),\n            __metadata(\"design:type\", Object),\n            __metadata(\"design:paramtypes\", [Object])\n        ], RouterLinkActive.prototype, \"routerLinkActive\", null);\n        RouterLinkActive = __decorate([\n            core.Directive({\n                selector: '[routerLinkActive]',\n                exportAs: 'routerLinkActive',\n            }),\n            __metadata(\"design:paramtypes\", [Router, core.ElementRef, core.Renderer2,\n                core.ChangeDetectorRef])\n        ], RouterLinkActive);\n        return RouterLinkActive;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Store contextual information about a `RouterOutlet`\n     *\n     *\n     */\n    var OutletContext = /** @class */ (function () {\n        function OutletContext() {\n            this.outlet = null;\n            this.route = null;\n            this.resolver = null;\n            this.children = new ChildrenOutletContexts();\n            this.attachRef = null;\n        }\n        return OutletContext;\n    }());\n    /**\n     * Store contextual information about the children (= nested) `RouterOutlet`\n     *\n     *\n     */\n    var ChildrenOutletContexts = /** @class */ (function () {\n        function ChildrenOutletContexts() {\n            // contexts for child outlets, by name.\n            this.contexts = new Map();\n        }\n        /** Called when a `RouterOutlet` directive is instantiated */\n        ChildrenOutletContexts.prototype.onChildOutletCreated = function (childName, outlet) {\n            var context = this.getOrCreateContext(childName);\n            context.outlet = outlet;\n            this.contexts.set(childName, context);\n        };\n        /**\n         * Called when a `RouterOutlet` directive is destroyed.\n         * We need to keep the context as the outlet could be destroyed inside a NgIf and might be\n         * re-created later.\n         */\n        ChildrenOutletContexts.prototype.onChildOutletDestroyed = function (childName) {\n            var context = this.getContext(childName);\n            if (context) {\n                context.outlet = null;\n            }\n        };\n        /**\n         * Called when the corresponding route is deactivated during navigation.\n         * Because the component get destroyed, all children outlet are destroyed.\n         */\n        ChildrenOutletContexts.prototype.onOutletDeactivated = function () {\n            var contexts = this.contexts;\n            this.contexts = new Map();\n            return contexts;\n        };\n        ChildrenOutletContexts.prototype.onOutletReAttached = function (contexts) { this.contexts = contexts; };\n        ChildrenOutletContexts.prototype.getOrCreateContext = function (childName) {\n            var context = this.getContext(childName);\n            if (!context) {\n                context = new OutletContext();\n                this.contexts.set(childName, context);\n            }\n            return context;\n        };\n        ChildrenOutletContexts.prototype.getContext = function (childName) { return this.contexts.get(childName) || null; };\n        return ChildrenOutletContexts;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Acts as a placeholder that Angular dynamically fills based on the current router state.\n     *\n     * ```\n     * <router-outlet></router-outlet>\n     * <router-outlet name='left'></router-outlet>\n     * <router-outlet name='right'></router-outlet>\n     * ```\n     *\n     * A router outlet will emit an activate event any time a new component is being instantiated,\n     * and a deactivate event when it is being destroyed.\n     *\n     * ```\n     * <router-outlet\n     *   (activate)='onActivate($event)'\n     *   (deactivate)='onDeactivate($event)'></router-outlet>\n     * ```\n     * @ngModule RouterModule\n     *\n     *\n     */\n    var RouterOutlet = /** @class */ (function () {\n        function RouterOutlet(parentContexts, location, resolver, name, changeDetector) {\n            this.parentContexts = parentContexts;\n            this.location = location;\n            this.resolver = resolver;\n            this.changeDetector = changeDetector;\n            this.activated = null;\n            this._activatedRoute = null;\n            this.activateEvents = new core.EventEmitter();\n            this.deactivateEvents = new core.EventEmitter();\n            this.name = name || PRIMARY_OUTLET;\n            parentContexts.onChildOutletCreated(this.name, this);\n        }\n        RouterOutlet.prototype.ngOnDestroy = function () { this.parentContexts.onChildOutletDestroyed(this.name); };\n        RouterOutlet.prototype.ngOnInit = function () {\n            if (!this.activated) {\n                // If the outlet was not instantiated at the time the route got activated we need to populate\n                // the outlet when it is initialized (ie inside a NgIf)\n                var context = this.parentContexts.getContext(this.name);\n                if (context && context.route) {\n                    if (context.attachRef) {\n                        // `attachRef` is populated when there is an existing component to mount\n                        this.attach(context.attachRef, context.route);\n                    }\n                    else {\n                        // otherwise the component defined in the configuration is created\n                        this.activateWith(context.route, context.resolver || null);\n                    }\n                }\n            }\n        };\n        Object.defineProperty(RouterOutlet.prototype, \"isActivated\", {\n            get: function () { return !!this.activated; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(RouterOutlet.prototype, \"component\", {\n            get: function () {\n                if (!this.activated)\n                    throw new Error('Outlet is not activated');\n                return this.activated.instance;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(RouterOutlet.prototype, \"activatedRoute\", {\n            get: function () {\n                if (!this.activated)\n                    throw new Error('Outlet is not activated');\n                return this._activatedRoute;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(RouterOutlet.prototype, \"activatedRouteData\", {\n            get: function () {\n                if (this._activatedRoute) {\n                    return this._activatedRoute.snapshot.data;\n                }\n                return {};\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Called when the `RouteReuseStrategy` instructs to detach the subtree\n         */\n        RouterOutlet.prototype.detach = function () {\n            if (!this.activated)\n                throw new Error('Outlet is not activated');\n            this.location.detach();\n            var cmp = this.activated;\n            this.activated = null;\n            this._activatedRoute = null;\n            return cmp;\n        };\n        /**\n         * Called when the `RouteReuseStrategy` instructs to re-attach a previously detached subtree\n         */\n        RouterOutlet.prototype.attach = function (ref, activatedRoute) {\n            this.activated = ref;\n            this._activatedRoute = activatedRoute;\n            this.location.insert(ref.hostView);\n        };\n        RouterOutlet.prototype.deactivate = function () {\n            if (this.activated) {\n                var c = this.component;\n                this.activated.destroy();\n                this.activated = null;\n                this._activatedRoute = null;\n                this.deactivateEvents.emit(c);\n            }\n        };\n        RouterOutlet.prototype.activateWith = function (activatedRoute, resolver) {\n            if (this.isActivated) {\n                throw new Error('Cannot activate an already activated outlet');\n            }\n            this._activatedRoute = activatedRoute;\n            var snapshot = activatedRoute._futureSnapshot;\n            var component = snapshot.routeConfig.component;\n            resolver = resolver || this.resolver;\n            var factory = resolver.resolveComponentFactory(component);\n            var childContexts = this.parentContexts.getOrCreateContext(this.name).children;\n            var injector = new OutletInjector(activatedRoute, childContexts, this.location.injector);\n            this.activated = this.location.createComponent(factory, this.location.length, injector);\n            // Calling `markForCheck` to make sure we will run the change detection when the\n            // `RouterOutlet` is inside a `ChangeDetectionStrategy.OnPush` component.\n            this.changeDetector.markForCheck();\n            this.activateEvents.emit(this.activated.instance);\n        };\n        __decorate([\n            core.Output('activate'),\n            __metadata(\"design:type\", Object)\n        ], RouterOutlet.prototype, \"activateEvents\", void 0);\n        __decorate([\n            core.Output('deactivate'),\n            __metadata(\"design:type\", Object)\n        ], RouterOutlet.prototype, \"deactivateEvents\", void 0);\n        RouterOutlet = __decorate([\n            core.Directive({ selector: 'router-outlet', exportAs: 'outlet' }),\n            __param(3, core.Attribute('name')),\n            __metadata(\"design:paramtypes\", [ChildrenOutletContexts, core.ViewContainerRef,\n                core.ComponentFactoryResolver, String, core.ChangeDetectorRef])\n        ], RouterOutlet);\n        return RouterOutlet;\n    }());\n    var OutletInjector = /** @class */ (function () {\n        function OutletInjector(route, childContexts, parent) {\n            this.route = route;\n            this.childContexts = childContexts;\n            this.parent = parent;\n        }\n        OutletInjector.prototype.get = function (token, notFoundValue) {\n            if (token === ActivatedRoute) {\n                return this.route;\n            }\n            if (token === ChildrenOutletContexts) {\n                return this.childContexts;\n            }\n            return this.parent.get(token, notFoundValue);\n        };\n        return OutletInjector;\n    }());\n\n    /**\n    *@license\n    *Copyright Google Inc. All Rights Reserved.\n    *\n    *Use of this source code is governed by an MIT-style license that can be\n    *found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * @description\n     *\n     * Provides a preloading strategy.\n     *\n     * @experimental\n     */\n    var PreloadingStrategy = /** @class */ (function () {\n        function PreloadingStrategy() {\n        }\n        return PreloadingStrategy;\n    }());\n    /**\n     * @description\n     *\n     * Provides a preloading strategy that preloads all modules as quickly as possible.\n     *\n     * ```\n     * RouteModule.forRoot(ROUTES, {preloadingStrategy: PreloadAllModules})\n     * ```\n     *\n     * @experimental\n     */\n    var PreloadAllModules = /** @class */ (function () {\n        function PreloadAllModules() {\n        }\n        PreloadAllModules.prototype.preload = function (route, fn) {\n            return fn().pipe(operators.catchError(function () { return rxjs.of(null); }));\n        };\n        return PreloadAllModules;\n    }());\n    /**\n     * @description\n     *\n     * Provides a preloading strategy that does not preload any modules.\n     *\n     * This strategy is enabled by default.\n     *\n     * @experimental\n     */\n    var NoPreloading = /** @class */ (function () {\n        function NoPreloading() {\n        }\n        NoPreloading.prototype.preload = function (route, fn) { return rxjs.of(null); };\n        return NoPreloading;\n    }());\n    /**\n     * The preloader optimistically loads all router configurations to\n     * make navigations into lazily-loaded sections of the application faster.\n     *\n     * The preloader runs in the background. When the router bootstraps, the preloader\n     * starts listening to all navigation events. After every such event, the preloader\n     * will check if any configurations can be loaded lazily.\n     *\n     * If a route is protected by `canLoad` guards, the preloaded will not load it.\n     *\n     *\n     */\n    var RouterPreloader = /** @class */ (function () {\n        function RouterPreloader(router, moduleLoader, compiler, injector, preloadingStrategy) {\n            this.router = router;\n            this.injector = injector;\n            this.preloadingStrategy = preloadingStrategy;\n            var onStartLoad = function (r) { return router.triggerEvent(new RouteConfigLoadStart(r)); };\n            var onEndLoad = function (r) { return router.triggerEvent(new RouteConfigLoadEnd(r)); };\n            this.loader = new RouterConfigLoader(moduleLoader, compiler, onStartLoad, onEndLoad);\n        }\n        RouterPreloader.prototype.setUpPreloading = function () {\n            var _this = this;\n            this.subscription =\n                this.router.events\n                    .pipe(operators.filter(function (e) { return e instanceof NavigationEnd; }), operators.concatMap(function () { return _this.preload(); }))\n                    .subscribe(function () { });\n        };\n        RouterPreloader.prototype.preload = function () {\n            var ngModule = this.injector.get(core.NgModuleRef);\n            return this.processRoutes(ngModule, this.router.config);\n        };\n        // TODO(jasonaden): This class relies on code external to the class to call setUpPreloading. If\n        // this hasn't been done, ngOnDestroy will fail as this.subscription will be undefined. This\n        // should be refactored.\n        RouterPreloader.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n        RouterPreloader.prototype.processRoutes = function (ngModule, routes) {\n            var e_1, _a;\n            var res = [];\n            try {\n                for (var routes_1 = __values(routes), routes_1_1 = routes_1.next(); !routes_1_1.done; routes_1_1 = routes_1.next()) {\n                    var route = routes_1_1.value;\n                    // we already have the config loaded, just recurse\n                    if (route.loadChildren && !route.canLoad && route._loadedConfig) {\n                        var childConfig = route._loadedConfig;\n                        res.push(this.processRoutes(childConfig.module, childConfig.routes));\n                        // no config loaded, fetch the config\n                    }\n                    else if (route.loadChildren && !route.canLoad) {\n                        res.push(this.preloadConfig(ngModule, route));\n                        // recurse into children\n                    }\n                    else if (route.children) {\n                        res.push(this.processRoutes(ngModule, route.children));\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (routes_1_1 && !routes_1_1.done && (_a = routes_1.return)) _a.call(routes_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            return rxjs.from(res).pipe(operators.mergeAll(), operators.map(function (_) { return void 0; }));\n        };\n        RouterPreloader.prototype.preloadConfig = function (ngModule, route) {\n            var _this = this;\n            return this.preloadingStrategy.preload(route, function () {\n                var loaded$ = _this.loader.load(ngModule.injector, route);\n                return loaded$.pipe(operators.mergeMap(function (config) {\n                    route._loadedConfig = config;\n                    return _this.processRoutes(config.module, config.routes);\n                }));\n            });\n        };\n        RouterPreloader = __decorate([\n            core.Injectable(),\n            __metadata(\"design:paramtypes\", [Router, core.NgModuleFactoryLoader, core.Compiler,\n                core.Injector, PreloadingStrategy])\n        ], RouterPreloader);\n        return RouterPreloader;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RouterScroller = /** @class */ (function () {\n        function RouterScroller(router, \n        /** @docsNotRequired */ viewportScroller, options) {\n            if (options === void 0) { options = {}; }\n            this.router = router;\n            this.viewportScroller = viewportScroller;\n            this.options = options;\n            this.lastId = 0;\n            this.lastSource = 'imperative';\n            this.restoredId = 0;\n            this.store = {};\n        }\n        RouterScroller.prototype.init = function () {\n            // we want to disable the automatic scrolling because having two places\n            // responsible for scrolling results race conditions, especially given\n            // that browser don't implement this behavior consistently\n            if (this.options.scrollPositionRestoration !== 'disabled') {\n                this.viewportScroller.setHistoryScrollRestoration('manual');\n            }\n            this.routerEventsSubscription = this.createScrollEvents();\n            this.scrollEventsSubscription = this.consumeScrollEvents();\n        };\n        RouterScroller.prototype.createScrollEvents = function () {\n            var _this = this;\n            return this.router.events.subscribe(function (e) {\n                if (e instanceof NavigationStart) {\n                    // store the scroll position of the current stable navigations.\n                    _this.store[_this.lastId] = _this.viewportScroller.getScrollPosition();\n                    _this.lastSource = e.navigationTrigger;\n                    _this.restoredId = e.restoredState ? e.restoredState.navigationId : 0;\n                }\n                else if (e instanceof NavigationEnd) {\n                    _this.lastId = e.id;\n                    _this.scheduleScrollEvent(e, _this.router.parseUrl(e.urlAfterRedirects).fragment);\n                }\n            });\n        };\n        RouterScroller.prototype.consumeScrollEvents = function () {\n            var _this = this;\n            return this.router.events.subscribe(function (e) {\n                if (!(e instanceof Scroll))\n                    return;\n                // a popstate event. The pop state event will always ignore anchor scrolling.\n                if (e.position) {\n                    if (_this.options.scrollPositionRestoration === 'top') {\n                        _this.viewportScroller.scrollToPosition([0, 0]);\n                    }\n                    else if (_this.options.scrollPositionRestoration === 'enabled') {\n                        _this.viewportScroller.scrollToPosition(e.position);\n                    }\n                    // imperative navigation \"forward\"\n                }\n                else {\n                    if (e.anchor && _this.options.anchorScrolling === 'enabled') {\n                        _this.viewportScroller.scrollToAnchor(e.anchor);\n                    }\n                    else if (_this.options.scrollPositionRestoration !== 'disabled') {\n                        _this.viewportScroller.scrollToPosition([0, 0]);\n                    }\n                }\n            });\n        };\n        RouterScroller.prototype.scheduleScrollEvent = function (routerEvent, anchor) {\n            this.router.triggerEvent(new Scroll(routerEvent, this.lastSource === 'popstate' ? this.store[this.restoredId] : null, anchor));\n        };\n        RouterScroller.prototype.ngOnDestroy = function () {\n            if (this.routerEventsSubscription) {\n                this.routerEventsSubscription.unsubscribe();\n            }\n            if (this.scrollEventsSubscription) {\n                this.scrollEventsSubscription.unsubscribe();\n            }\n        };\n        return RouterScroller;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Contains a list of directives\n     *\n     *\n     */\n    var ROUTER_DIRECTIVES = [RouterOutlet, RouterLink, RouterLinkWithHref, RouterLinkActive, EmptyOutletComponent];\n    /**\n     * @description\n     *\n     * Is used in DI to configure the router.\n     *\n     *\n     */\n    var ROUTER_CONFIGURATION = new core.InjectionToken('ROUTER_CONFIGURATION');\n    /**\n     * @docsNotRequired\n     */\n    var ROUTER_FORROOT_GUARD = new core.InjectionToken('ROUTER_FORROOT_GUARD');\n    var ROUTER_PROVIDERS = [\n        common.Location,\n        { provide: UrlSerializer, useClass: DefaultUrlSerializer },\n        {\n            provide: Router,\n            useFactory: setupRouter,\n            deps: [\n                core.ApplicationRef, UrlSerializer, ChildrenOutletContexts, common.Location, core.Injector,\n                core.NgModuleFactoryLoader, core.Compiler, ROUTES, ROUTER_CONFIGURATION,\n                [UrlHandlingStrategy, new core.Optional()], [RouteReuseStrategy, new core.Optional()]\n            ]\n        },\n        ChildrenOutletContexts,\n        { provide: ActivatedRoute, useFactory: rootRoute, deps: [Router] },\n        { provide: core.NgModuleFactoryLoader, useClass: core.SystemJsNgModuleLoader },\n        RouterPreloader,\n        NoPreloading,\n        PreloadAllModules,\n        { provide: ROUTER_CONFIGURATION, useValue: { enableTracing: false } },\n    ];\n    function routerNgProbeToken() {\n        return new core.NgProbeToken('Router', Router);\n    }\n    /**\n     * @usageNotes\n     *\n     * RouterModule can be imported multiple times: once per lazily-loaded bundle.\n     * Since the router deals with a global shared resource--location, we cannot have\n     * more than one router service active.\n     *\n     * That is why there are two ways to create the module: `RouterModule.forRoot` and\n     * `RouterModule.forChild`.\n     *\n     * * `forRoot` creates a module that contains all the directives, the given routes, and the router\n     *   service itself.\n     * * `forChild` creates a module that contains all the directives and the given routes, but does not\n     *   include the router service.\n     *\n     * When registered at the root, the module should be used as follows\n     *\n     * ```\n     * @NgModule({\n     *   imports: [RouterModule.forRoot(ROUTES)]\n     * })\n     * class MyNgModule {}\n     * ```\n     *\n     * For submodules and lazy loaded submodules the module should be used as follows:\n     *\n     * ```\n     * @NgModule({\n     *   imports: [RouterModule.forChild(ROUTES)]\n     * })\n     * class MyNgModule {}\n     * ```\n     *\n     * @description\n     *\n     * Adds router directives and providers.\n     *\n     * Managing state transitions is one of the hardest parts of building applications. This is\n     * especially true on the web, where you also need to ensure that the state is reflected in the URL.\n     * In addition, we often want to split applications into multiple bundles and load them on demand.\n     * Doing this transparently is not trivial.\n     *\n     * The Angular router solves these problems. Using the router, you can declaratively specify\n     * application states, manage state transitions while taking care of the URL, and load bundles on\n     * demand.\n     *\n     * [Read this developer guide](https://angular.io/docs/ts/latest/guide/router.html) to get an\n     * overview of how the router should be used.\n     *\n     *\n     */\n    var RouterModule = /** @class */ (function () {\n        // Note: We are injecting the Router so it gets created eagerly...\n        function RouterModule(guard, router) {\n        }\n        RouterModule_1 = RouterModule;\n        /**\n         * Creates a module with all the router providers and directives. It also optionally sets up an\n         * application listener to perform an initial navigation.\n         *\n         * Options (see `ExtraOptions`):\n         * * `enableTracing` makes the router log all its internal events to the console.\n         * * `useHash` enables the location strategy that uses the URL fragment instead of the history\n         * API.\n         * * `initialNavigation` disables the initial navigation.\n         * * `errorHandler` provides a custom error handler.\n         * * `preloadingStrategy` configures a preloading strategy (see `PreloadAllModules`).\n         * * `onSameUrlNavigation` configures how the router handles navigation to the current URL. See\n         * `ExtraOptions` for more details.\n         * * `paramsInheritanceStrategy` defines how the router merges params, data and resolved data\n         * from parent to child routes.\n         */\n        RouterModule.forRoot = function (routes, config) {\n            return {\n                ngModule: RouterModule_1,\n                providers: [\n                    ROUTER_PROVIDERS,\n                    provideRoutes(routes),\n                    {\n                        provide: ROUTER_FORROOT_GUARD,\n                        useFactory: provideForRootGuard,\n                        deps: [[Router, new core.Optional(), new core.SkipSelf()]]\n                    },\n                    { provide: ROUTER_CONFIGURATION, useValue: config ? config : {} },\n                    {\n                        provide: common.LocationStrategy,\n                        useFactory: provideLocationStrategy,\n                        deps: [\n                            common.PlatformLocation, [new core.Inject(common.APP_BASE_HREF), new core.Optional()], ROUTER_CONFIGURATION\n                        ]\n                    },\n                    {\n                        provide: RouterScroller,\n                        useFactory: createRouterScroller,\n                        deps: [Router, common.ViewportScroller, ROUTER_CONFIGURATION]\n                    },\n                    {\n                        provide: PreloadingStrategy,\n                        useExisting: config && config.preloadingStrategy ? config.preloadingStrategy :\n                            NoPreloading\n                    },\n                    { provide: core.NgProbeToken, multi: true, useFactory: routerNgProbeToken },\n                    provideRouterInitializer(),\n                ],\n            };\n        };\n        /**\n         * Creates a module with all the router directives and a provider registering routes.\n         */\n        RouterModule.forChild = function (routes) {\n            return { ngModule: RouterModule_1, providers: [provideRoutes(routes)] };\n        };\n        var RouterModule_1;\n        RouterModule = RouterModule_1 = __decorate([\n            core.NgModule({\n                declarations: ROUTER_DIRECTIVES,\n                exports: ROUTER_DIRECTIVES,\n                entryComponents: [EmptyOutletComponent]\n            }),\n            __param(0, core.Optional()), __param(0, core.Inject(ROUTER_FORROOT_GUARD)), __param(1, core.Optional()),\n            __metadata(\"design:paramtypes\", [Object, Router])\n        ], RouterModule);\n        return RouterModule;\n    }());\n    function createRouterScroller(router, viewportScroller, config) {\n        if (config.scrollOffset) {\n            viewportScroller.setOffset(config.scrollOffset);\n        }\n        return new RouterScroller(router, viewportScroller, config);\n    }\n    function provideLocationStrategy(platformLocationStrategy, baseHref, options) {\n        if (options === void 0) { options = {}; }\n        return options.useHash ? new common.HashLocationStrategy(platformLocationStrategy, baseHref) :\n            new common.PathLocationStrategy(platformLocationStrategy, baseHref);\n    }\n    function provideForRootGuard(router) {\n        if (router) {\n            throw new Error(\"RouterModule.forRoot() called twice. Lazy loaded modules should use RouterModule.forChild() instead.\");\n        }\n        return 'guarded';\n    }\n    /**\n     * @description\n     *\n     * Registers routes.\n     *\n     * ### Example\n     *\n     * ```\n     * @NgModule({\n     *   imports: [RouterModule.forChild(ROUTES)],\n     *   providers: [provideRoutes(EXTRA_ROUTES)]\n     * })\n     * class MyNgModule {}\n     * ```\n     *\n     *\n     */\n    function provideRoutes(routes) {\n        return [\n            { provide: core.ANALYZE_FOR_ENTRY_COMPONENTS, multi: true, useValue: routes },\n            { provide: ROUTES, multi: true, useValue: routes },\n        ];\n    }\n    function setupRouter(ref, urlSerializer, contexts, location, injector, loader, compiler, config, opts, urlHandlingStrategy, routeReuseStrategy) {\n        if (opts === void 0) { opts = {}; }\n        var router = new Router(null, urlSerializer, contexts, location, injector, loader, compiler, flatten(config));\n        if (urlHandlingStrategy) {\n            router.urlHandlingStrategy = urlHandlingStrategy;\n        }\n        if (routeReuseStrategy) {\n            router.routeReuseStrategy = routeReuseStrategy;\n        }\n        if (opts.errorHandler) {\n            router.errorHandler = opts.errorHandler;\n        }\n        if (opts.malformedUriErrorHandler) {\n            router.malformedUriErrorHandler = opts.malformedUriErrorHandler;\n        }\n        if (opts.enableTracing) {\n            var dom_1 = platformBrowser.ɵgetDOM();\n            router.events.subscribe(function (e) {\n                dom_1.logGroup(\"Router Event: \" + e.constructor.name);\n                dom_1.log(e.toString());\n                dom_1.log(e);\n                dom_1.logGroupEnd();\n            });\n        }\n        if (opts.onSameUrlNavigation) {\n            router.onSameUrlNavigation = opts.onSameUrlNavigation;\n        }\n        if (opts.paramsInheritanceStrategy) {\n            router.paramsInheritanceStrategy = opts.paramsInheritanceStrategy;\n        }\n        if (opts.urlUpdateStrategy) {\n            router.urlUpdateStrategy = opts.urlUpdateStrategy;\n        }\n        return router;\n    }\n    function rootRoute(router) {\n        return router.routerState.root;\n    }\n    /**\n     * To initialize the router properly we need to do in two steps:\n     *\n     * We need to start the navigation in a APP_INITIALIZER to block the bootstrap if\n     * a resolver or a guards executes asynchronously. Second, we need to actually run\n     * activation in a BOOTSTRAP_LISTENER. We utilize the afterPreactivation\n     * hook provided by the router to do that.\n     *\n     * The router navigation starts, reaches the point when preactivation is done, and then\n     * pauses. It waits for the hook to be resolved. We then resolve it only in a bootstrap listener.\n     */\n    var RouterInitializer = /** @class */ (function () {\n        function RouterInitializer(injector) {\n            this.injector = injector;\n            this.initNavigation = false;\n            this.resultOfPreactivationDone = new rxjs.Subject();\n        }\n        RouterInitializer.prototype.appInitializer = function () {\n            var _this = this;\n            var p = this.injector.get(common.LOCATION_INITIALIZED, Promise.resolve(null));\n            return p.then(function () {\n                var resolve = null;\n                var res = new Promise(function (r) { return resolve = r; });\n                var router = _this.injector.get(Router);\n                var opts = _this.injector.get(ROUTER_CONFIGURATION);\n                if (_this.isLegacyDisabled(opts) || _this.isLegacyEnabled(opts)) {\n                    resolve(true);\n                }\n                else if (opts.initialNavigation === 'disabled') {\n                    router.setUpLocationChangeListener();\n                    resolve(true);\n                }\n                else if (opts.initialNavigation === 'enabled') {\n                    router.hooks.afterPreactivation = function () {\n                        // only the initial navigation should be delayed\n                        if (!_this.initNavigation) {\n                            _this.initNavigation = true;\n                            resolve(true);\n                            return _this.resultOfPreactivationDone;\n                            // subsequent navigations should not be delayed\n                        }\n                        else {\n                            return rxjs.of(null);\n                        }\n                    };\n                    router.initialNavigation();\n                }\n                else {\n                    throw new Error(\"Invalid initialNavigation options: '\" + opts.initialNavigation + \"'\");\n                }\n                return res;\n            });\n        };\n        RouterInitializer.prototype.bootstrapListener = function (bootstrappedComponentRef) {\n            var opts = this.injector.get(ROUTER_CONFIGURATION);\n            var preloader = this.injector.get(RouterPreloader);\n            var routerScroller = this.injector.get(RouterScroller);\n            var router = this.injector.get(Router);\n            var ref = this.injector.get(core.ApplicationRef);\n            if (bootstrappedComponentRef !== ref.components[0]) {\n                return;\n            }\n            if (this.isLegacyEnabled(opts)) {\n                router.initialNavigation();\n            }\n            else if (this.isLegacyDisabled(opts)) {\n                router.setUpLocationChangeListener();\n            }\n            preloader.setUpPreloading();\n            routerScroller.init();\n            router.resetRootComponentType(ref.componentTypes[0]);\n            this.resultOfPreactivationDone.next(null);\n            this.resultOfPreactivationDone.complete();\n        };\n        RouterInitializer.prototype.isLegacyEnabled = function (opts) {\n            return opts.initialNavigation === 'legacy_enabled' || opts.initialNavigation === true ||\n                opts.initialNavigation === undefined;\n        };\n        RouterInitializer.prototype.isLegacyDisabled = function (opts) {\n            return opts.initialNavigation === 'legacy_disabled' || opts.initialNavigation === false;\n        };\n        RouterInitializer = __decorate([\n            core.Injectable(),\n            __metadata(\"design:paramtypes\", [core.Injector])\n        ], RouterInitializer);\n        return RouterInitializer;\n    }());\n    function getAppInitializer(r) {\n        return r.appInitializer.bind(r);\n    }\n    function getBootstrapListener(r) {\n        return r.bootstrapListener.bind(r);\n    }\n    /**\n     * A token for the router initializer that will be called after the app is bootstrapped.\n     *\n     * @experimental\n     */\n    var ROUTER_INITIALIZER = new core.InjectionToken('Router Initializer');\n    function provideRouterInitializer() {\n        return [\n            RouterInitializer,\n            {\n                provide: core.APP_INITIALIZER,\n                multi: true,\n                useFactory: getAppInitializer,\n                deps: [RouterInitializer]\n            },\n            { provide: ROUTER_INITIALIZER, useFactory: getBootstrapListener, deps: [RouterInitializer] },\n            { provide: core.APP_BOOTSTRAP_LISTENER, multi: true, useExisting: ROUTER_INITIALIZER },\n        ];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var VERSION = new core.Version('6.1.0-rc.3+48.sha-168c2a6');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.RouterLink = RouterLink;\n    exports.RouterLinkWithHref = RouterLinkWithHref;\n    exports.RouterLinkActive = RouterLinkActive;\n    exports.RouterOutlet = RouterOutlet;\n    exports.ActivationEnd = ActivationEnd;\n    exports.ActivationStart = ActivationStart;\n    exports.ChildActivationEnd = ChildActivationEnd;\n    exports.ChildActivationStart = ChildActivationStart;\n    exports.GuardsCheckEnd = GuardsCheckEnd;\n    exports.GuardsCheckStart = GuardsCheckStart;\n    exports.NavigationCancel = NavigationCancel;\n    exports.NavigationEnd = NavigationEnd;\n    exports.NavigationError = NavigationError;\n    exports.NavigationStart = NavigationStart;\n    exports.ResolveEnd = ResolveEnd;\n    exports.ResolveStart = ResolveStart;\n    exports.RouteConfigLoadEnd = RouteConfigLoadEnd;\n    exports.RouteConfigLoadStart = RouteConfigLoadStart;\n    exports.RouterEvent = RouterEvent;\n    exports.RoutesRecognized = RoutesRecognized;\n    exports.Scroll = Scroll;\n    exports.RouteReuseStrategy = RouteReuseStrategy;\n    exports.Router = Router;\n    exports.ROUTES = ROUTES;\n    exports.ROUTER_CONFIGURATION = ROUTER_CONFIGURATION;\n    exports.ROUTER_INITIALIZER = ROUTER_INITIALIZER;\n    exports.RouterModule = RouterModule;\n    exports.provideRoutes = provideRoutes;\n    exports.ChildrenOutletContexts = ChildrenOutletContexts;\n    exports.OutletContext = OutletContext;\n    exports.NoPreloading = NoPreloading;\n    exports.PreloadAllModules = PreloadAllModules;\n    exports.PreloadingStrategy = PreloadingStrategy;\n    exports.RouterPreloader = RouterPreloader;\n    exports.ActivatedRoute = ActivatedRoute;\n    exports.ActivatedRouteSnapshot = ActivatedRouteSnapshot;\n    exports.RouterState = RouterState;\n    exports.RouterStateSnapshot = RouterStateSnapshot;\n    exports.PRIMARY_OUTLET = PRIMARY_OUTLET;\n    exports.convertToParamMap = convertToParamMap;\n    exports.UrlHandlingStrategy = UrlHandlingStrategy;\n    exports.DefaultUrlSerializer = DefaultUrlSerializer;\n    exports.UrlSegment = UrlSegment;\n    exports.UrlSegmentGroup = UrlSegmentGroup;\n    exports.UrlSerializer = UrlSerializer;\n    exports.UrlTree = UrlTree;\n    exports.VERSION = VERSION;\n    exports.ɵEmptyOutletComponent = EmptyOutletComponent;\n    exports.ɵROUTER_PROVIDERS = ROUTER_PROVIDERS;\n    exports.ɵflatten = flatten;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=router.umd.js.map\n"]}