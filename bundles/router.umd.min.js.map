{"version":3,"sources":["packages/router/router.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","router","core","rxjs","operators","common","platformBrowser","this","extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","__values","o","m","Symbol","iterator","next","value","done","__read","r","e","ar","push","error","__spread","concat","RouterEvent","NavigationStart","_super","id","url","navigationTrigger","restoredState","_this","toString","NavigationEnd","urlAfterRedirects","NavigationCancel","reason","NavigationError","RoutesRecognized","state","GuardsCheckStart","GuardsCheckEnd","shouldActivate","ResolveStart","ResolveEnd","RouteConfigLoadStart","route","path","RouteConfigLoadEnd","ChildActivationStart","snapshot","routeConfig","ChildActivationEnd","ActivationStart","ActivationEnd","Scroll","routerEvent","position","anchor","PRIMARY_OUTLET","ParamsAsMap","params","has","name","get","v","isArray","getAll","defineProperty","keys","enumerable","configurable","convertToParamMap","defaultUrlMatcher","segments","segmentGroup","parts","split","pathMatch","hasChildren","posParams","index","part","segment","startsWith","substring","consumed","slice","LoadedRouterConfig","routes","validateConfig","config","parentPath","validateNode","getFullPath","fullPath","Error","component","outlet","redirectTo","children","loadChildren","matcher","charAt","currentRoute","copyConfig","map","shallowEqual","a","key","k1","k2","flatten","arr","apply","last","forEach","callback","prop","andObservables","observables","pipe","mergeAll","every","result","wrapIntoObservable","ɵisObservable","ɵisPromise","from","Promise","resolve","of","containsTree","container","containee","exact","equalQueryParams","queryParams","equalSegmentGroups","equalPath","numberOfChildren","c","root","containsQueryParams","containsSegmentGroup","containsSegmentGroupHelper","containeePaths","current","UrlTree","fragment","_queryParamMap","DEFAULT_SERIALIZER","serialize","UrlSegmentGroup","parent","k","serializePaths","UrlSegment","parameters","_parameterMap","serializePath","as","bs","mapChildrenIntoArray","fn","res","child","childOutlet","UrlSerializer","DefaultUrlSerializer","parse","UrlParser","parseRootSegment","parseQueryParams","parseFragment","tree","serializeSegment","primary","children_1","join","serializeQueryParams","strParams","encodeUriQuery","encodeUriFragment","encodeURI","encodeUriString","encodeURIComponent","replace","encodeUriSegment","decode","decodeURIComponent","decodeQuery","serializeMatrixParams","SEGMENT_RE","matchSegments","str","match","QUERY_PARAM_RE","QUERY_PARAM_VALUE_RE","remaining","consumeOptional","peekStartsWith","parseChildren","parseQueryParam","parseSegment","capture","parseParens","parseMatrixParams","parseParam","valueMatch","matchQueryParams","matchUrlQueryParamValue","decodedKey","decodedVal","currentVal","allowPrimary","outletName","indexOf","substr","NoMatch","AbsoluteRedirect","urlTree","noMatch","Observable","obs","absoluteRedirect","newTree","namedOutletsRedirect","ApplyRedirects","moduleInjector","configLoader","urlSerializer","allowRedirects","ngModule","NgModuleRef","expandSegmentGroup","rootSegmentGroup","createUrlTree","catchError","noMatchError","rootCandidate","_a","expandChildren","expandSegment","waitForMap","obj","waitHead","waitTail","mapped","concatAll","expandSegmentAgainstRoute","first","_","EmptyError","noLeftoversInUrl","paths","getOutlet","undefined","matchSegmentAgainstRoute","expandSegmentAgainstRouteUsingRedirect","expandWildCardWithParamsAgainstRouteUsingRedirect","expandRegularSegmentAgainstRouteUsingRedirect","applyRedirectCommands","lineralizeSegments","mergeMap","newSegments","group","consumedSegments","lastChild","positionalParamSegments","matched","rawSegmentGroup","load","injector","cfg","_loadedConfig","rawSlicedSegments","getChildConfig","routerConfig","childModule","childConfig","slicedSegments","containsEmptyPathRedirectsWithNamedOutlets","some","isEmptyPathRedirect","mergeTrivialChildren","createChildrenForEmptySegments","primarySegmentGroup","e_3","routes_2","routes_2_1","e_3_1","return","containsEmptyPathRedirects","addEmptySegmentsToChildrenIfNeeded","e_2","routes_1","routes_1_1","e_2_1","cs","runCanLoadGuard","canLoad","injectionToken","guard","shouldLoad","canLoadFails","navigationCancelingError","message","applyRedirectCreatreUrlTree","newRoot","createSegmentGroup","createQueryParams","redirectToParams","actualParams","sourceName","updatedSegments","createSegments","redirectToSegments","actualSegments","findPosParam","findOrReturn","redirectToUrlSegment","pos","e_1","idx","actualSegments_1","actualSegments_1_1","splice","e_1_1","Tree","_root","pathFromRoot","findNode","firstChild","siblings","findPath","filter","cc","node","_b","node_1","_c","unshift","TreeNode","nodeChildrenAsMap","RouterState","setRouterState","createEmptyState","rootComponent","createEmptyStateSnapshot","activated","ActivatedRouteSnapshot","RouterStateSnapshot","emptyUrl","BehaviorSubject","emptyParams","emptyData","emptyQueryParams","ActivatedRoute","data","futureSnapshot","_futureSnapshot","_routerState","_paramMap","inheritedParamsDataResolve","paramsInheritanceStrategy","inheritingStartingFrom","parent_1","flattenInherited","reduce","curr","_resolvedData","urlSegment","lastPathIndex","_urlSegment","_lastPathIndex","_resolve","serializeNode","advanceActivatedRoute","currentSnapshot","nextSnapshot","shallowEqualArrays","equalParamsAndUrlSegments","equalSegments","isMatrixParams","command","outlets","segmentPath","oldSegmentGroup","newSegmentGroup","qp","replaceSegment","oldSegment","newSegment","Navigation","isAbsolute","numberOfDoubleDots","commands","cmdWithOutlet","find","toRoot","Position","processChildren","getPath","updateSegmentGroup","startIndex","updateSegmentGroupChildren","prefixedWith","currentCommandIndex","currentPathIndex","pathIndex","commandIndex","compare","slicedCommands","g","createNewSegmentGroup","outlets_2","getOutlets","createNewSegmentChildren","stringify","CanActivate","CanDeactivate","PreActivation","future","forwardEvent","canActivateChecks","canDeactivateChecks","initialize","parentContexts","futureRoot","setupChildRouteGuards","checkGuards","isDeactivating","isActivating","runCanDeactivateChecks","canDeactivate","runCanActivateChecks","resolveData","concatMap","check","runResolve","futureNode","currNode","contexts","futurePath","prevChildren","setupRouteGuards","deactivateRouteAndItsChildren","getContext","context","shouldRunGuardsAndResolvers","runGuardsAndResolvers","mode","childName","isActivated","runCanDeactivate","fireChildActivationStart","fireActivationStart","runCanActivateChild","runCanActivate","canActivate","getToken","canActivateChildGuards","reverse","extractCanActivateChild","guards","canActivateChild","resolveNode","resolvedData","key_1","getResolver","resolver","token","closestLoadedConfig","NoMatch$1","Recognizer","rootComponentType","recognize","split$1","processSegmentGroup","freeze","rootNode","routeState","inheritParamsAndData","routeNode","processSegment","checkOutletNameUniqueness","nodes","names","routeWithSameOutletName","sortActivatedRouteSnapshots","sort","localeCompare","config_1","config_1_1","processSegmentAgainstRoute","rawSegment","getData","getSourceSegmentGroup","getPathIndexShift","getResolve","match$1","_sourceSegment","_segmentIndexShift","containsEmptyPathMatchesWithNamedOutlets","emptyPathMatch","getOutlet$1","s_1","createChildrenForEmptyPaths","primarySegment","containsEmptyPathMatches","s_2","addEmptyPathsToChildrenIfNeeded","RouteReuseStrategy","DefaultRouteReuseStrategy","shouldDetach","store","detachedTree","shouldAttach","retrieve","shouldReuseRoute","ROUTES","InjectionToken","RouterConfigLoader","loader","compiler","onLoadStartListener","onLoadEndListener","parentInjector","loadModuleFactory","NgModuleFactory","compileModuleAsync","UrlHandlingStrategy","DefaultUrlHandlingStrategy","shouldProcessUrl","extract","merge","newUrlPart","wholeUrl","defaultErrorHandler","defaultRouterHook","runExtras","Router","rootContexts","location","navigations","navigationId","events","Subject","errorHandler","navigated","lastSuccessfulId","hooks","beforePreactivation","afterPreactivation","urlHandlingStrategy","routeReuseStrategy","onSameUrlNavigation","resetConfig","currentUrlTree","createEmptyUrlTree","rawUrlTree","triggerEvent","routerState","processNavigations","resetRootComponentType","initialNavigation","setUpLocationChangeListener","navigateByUrl","replaceUrl","locationSubscription","subscribe","change","source","setTimeout","scheduleNavigation","serializeUrl","ngOnDestroy","dispose","unsubscribe","navigationExtras","relativeTo","preserveQueryParams","queryParamsHandling","preserveFragment","isDevMode","console","warn","f","q","removeEmptyProps","nav","computeNavigation","cmd","cmdIdx","outlets_1","urlPart","partIndex","startingPosition","findStartingPosition","modifier","createPositionApplyingDoubleDots","ci","dd","extras","skipLocationChange","parseUrl","mergedTree","navigate","validateCommands","isActive","executeScheduledNavigation","promise","catch","rawUrl","lastNavigation","reject","rej","urlTransition","then","runNavigate","precreatedState","resolvePromise","rejectPromise","preActivation","routerState$","appliedUrl","applyRedirects","appliedUrlTree","evt","createRouterState","prevState","createNode","createOrReuseChildren","detachedRouteHandle","setFutureSnapshotsOfActivatedRoutes","createActivatedRoute","activateRoutes","storedState","storedUrl","navigationIsSuccessful","isCurrentPathEqualTo","replaceState","go","ActivateRoutes","activate","resetUrlToCurrentUrlTree","isNavigationCancelingError","resetStateAndUrl","ee","futureState","currState","currRoot","deactivateChildRoutes","activateChildRoutes","futureChild","childOutletName","deactivateRoutes","parentContext","detachAndStoreRouteSubtree","deactivateRouteAndOutlet","componentRef","detach","onOutletDeactivated","contexts_1","deactivate","getOrCreateContext","stored","onOutletReAttached","attachRef","attach","advanceActivatedRouteNodeAndItsChildren","parentLoadedConfig","cmpFactoryResolver","componentFactoryResolver","activateWith","RouterLink","tabIndex","renderer","el","setAttribute","nativeElement","set","preserve","onClick","attrBoolValue","decorators","type","Directive","args","selector","ctorParameters","Attribute","Renderer2","ElementRef","propDecorators","Input","routerLink","HostListener","RouterLinkWithHref","locationStrategy","subscription","updateTargetUrlAndHref","ngOnChanges","changes","button","ctrlKey","metaKey","shiftKey","target","href","prepareExternalUrl","LocationStrategy","HostBinding","RouterLinkActive","element","cdr","classes","routerLinkActiveOptions","update","ngAfterContentInit","links","linksWithHrefs","hasActiveLinks","addClass","removeClass","isLinkActive","link","exportAs","ChangeDetectorRef","ContentChildren","descendants","routerLinkActive","OutletContext","ChildrenOutletContexts","Map","onChildOutletCreated","onChildOutletDestroyed","RouterOutlet","changeDetector","_activatedRoute","activateEvents","EventEmitter","deactivateEvents","ngOnInit","instance","cmp","ref","activatedRoute","insert","hostView","destroy","emit","resolveComponentFactory","childContexts","OutletInjector","createComponent","markForCheck","ViewContainerRef","ComponentFactoryResolver","Output","notFoundValue","PreloadingStrategy","PreloadAllModules","preload","NoPreloading","RouterPreloader","moduleLoader","preloadingStrategy","setUpPreloading","processRoutes","preloadConfig","Injectable","NgModuleFactoryLoader","Compiler","Injector","RouterScroller","viewportScroller","options","lastId","lastSource","restoredId","init","scrollPositionRestoration","setHistoryScrollRestoration","routerEventsSubscription","createScrollEvents","scrollEventsSubscription","consumeScrollEvents","getScrollPosition","scheduleScrollEvent","scrollToPosition","anchorScrolling","scrollToAnchor","ROUTER_DIRECTIVES","ROUTER_CONFIGURATION","ROUTER_FORROOT_GUARD","ROUTER_PROVIDERS","Location","provide","useClass","useFactory","setupRouter","deps","ApplicationRef","Optional","rootRoute","SystemJsNgModuleLoader","useValue","enableTracing","routerNgProbeToken","NgProbeToken","RouterModule","forRoot","providers","provideRoutes","provideForRootGuard","SkipSelf","provideLocationStrategy","PlatformLocation","Inject","APP_BASE_HREF","createRouterScroller","ViewportScroller","useExisting","multi","provideRouterInitializer","forChild","NgModule","declarations","scrollOffset","setOffset","platformLocationStrategy","baseHref","useHash","HashLocationStrategy","PathLocationStrategy","ANALYZE_FOR_ENTRY_COMPONENTS","opts","dom_1","ɵgetDOM","logGroup","log","logGroupEnd","RouterInitializer","initNavigation","resultOfPreactivationDone","appInitializer","LOCATION_INITIALIZED","isLegacyDisabled","isLegacyEnabled","bootstrapListener","bootstrappedComponentRef","preloader","routerScroller","components","componentTypes","complete","getAppInitializer","bind","getBootstrapListener","ROUTER_INITIALIZER","APP_INITIALIZER","APP_BOOTSTRAP_LISTENER","VERSION","Version","ɵangular_packages_router_router_a","ɵangular_packages_router_router_h","ɵangular_packages_router_router_c","ɵangular_packages_router_router_i","ɵangular_packages_router_router_j","ɵangular_packages_router_router_e","ɵangular_packages_router_router_d","ɵangular_packages_router_router_k","ɵangular_packages_router_router_g","ɵangular_packages_router_router_b","ɵangular_packages_router_router_f","ɵangular_packages_router_router_n","ɵangular_packages_router_router_l","ɵangular_packages_router_router_m","ɵROUTER_PROVIDERS","ɵflatten"],"mappings":"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","sourcesContent":["/**\n * @license Angular v6.1.0-beta.0+43.sha-6ea6926\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('rxjs'), require('rxjs/operators'), require('@angular/common'), require('@angular/platform-browser')) :\n    typeof define === 'function' && define.amd ? define('@angular/router', ['exports', '@angular/core', 'rxjs', 'rxjs/operators', '@angular/common', '@angular/platform-browser'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.router = {}),global.ng.core,global.rxjs,global.rxjs.operators,global.ng.common,global.ng.platformBrowser));\n}(this, (function (exports,core,rxjs,operators,common,platformBrowser) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Base for events the Router goes through, as opposed to events tied to a specific\n     * Route. `RouterEvent`s will only be fired one time for any given navigation.\n     *\n     * Example:\n     *\n     * ```\n     * class MyService {\n     *   constructor(public router: Router, logger: Logger) {\n     *     router.events.filter(e => e instanceof RouterEvent).subscribe(e => {\n     *       logger.log(e.id, e.url);\n     *     });\n     *   }\n     * }\n     * ```\n     *\n     * @experimental\n     */\n    var  /**\n     * @description\n     *\n     * Base for events the Router goes through, as opposed to events tied to a specific\n     * Route. `RouterEvent`s will only be fired one time for any given navigation.\n     *\n     * Example:\n     *\n     * ```\n     * class MyService {\n     *   constructor(public router: Router, logger: Logger) {\n     *     router.events.filter(e => e instanceof RouterEvent).subscribe(e => {\n     *       logger.log(e.id, e.url);\n     *     });\n     *   }\n     * }\n     * ```\n     *\n     * @experimental\n     */\n    RouterEvent = /** @class */ (function () {\n        function RouterEvent(/** @docsNotRequired */\n        id, /** @docsNotRequired */\n        url) {\n            this.id = id;\n            this.url = url;\n        }\n        return RouterEvent;\n    }());\n    /**\n     * @description\n     *\n     * Represents an event triggered when a navigation starts.\n     *\n     *\n     */\n    var  /**\n     * @description\n     *\n     * Represents an event triggered when a navigation starts.\n     *\n     *\n     */\n    NavigationStart = /** @class */ (function (_super) {\n        __extends(NavigationStart, _super);\n        function NavigationStart(/** @docsNotRequired */\n        /** @docsNotRequired */\n        id, /** @docsNotRequired */\n        /** @docsNotRequired */\n        url, /** @docsNotRequired */\n        /** @docsNotRequired */\n        navigationTrigger, /** @docsNotRequired */\n        /** @docsNotRequired */\n        restoredState) {\n            /** @docsNotRequired */\n            if (navigationTrigger === void 0) { navigationTrigger = 'imperative'; }\n            /** @docsNotRequired */\n            if (restoredState === void 0) { restoredState = null; }\n            var _this = _super.call(this, id, url) || this;\n            _this.navigationTrigger = navigationTrigger;\n            _this.restoredState = restoredState;\n            return _this;\n        }\n        /** @docsNotRequired */\n        /** @docsNotRequired */\n        NavigationStart.prototype.toString = /** @docsNotRequired */\n        function () { return \"NavigationStart(id: \" + this.id + \", url: '\" + this.url + \"')\"; };\n        return NavigationStart;\n    }(RouterEvent));\n    /**\n     * @description\n     *\n     * Represents an event triggered when a navigation ends successfully.\n     *\n     *\n     */\n    var  /**\n     * @description\n     *\n     * Represents an event triggered when a navigation ends successfully.\n     *\n     *\n     */\n    NavigationEnd = /** @class */ (function (_super) {\n        __extends(NavigationEnd, _super);\n        function NavigationEnd(/** @docsNotRequired */\n        /** @docsNotRequired */\n        id, /** @docsNotRequired */\n        /** @docsNotRequired */\n        url, /** @docsNotRequired */\n        urlAfterRedirects) {\n            var _this = _super.call(this, id, url) || this;\n            _this.urlAfterRedirects = urlAfterRedirects;\n            return _this;\n        }\n        /** @docsNotRequired */\n        /** @docsNotRequired */\n        NavigationEnd.prototype.toString = /** @docsNotRequired */\n        function () {\n            return \"NavigationEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"')\";\n        };\n        return NavigationEnd;\n    }(RouterEvent));\n    /**\n     * @description\n     *\n     * Represents an event triggered when a navigation is canceled.\n     *\n     *\n     */\n    var  /**\n     * @description\n     *\n     * Represents an event triggered when a navigation is canceled.\n     *\n     *\n     */\n    NavigationCancel = /** @class */ (function (_super) {\n        __extends(NavigationCancel, _super);\n        function NavigationCancel(/** @docsNotRequired */\n        /** @docsNotRequired */\n        id, /** @docsNotRequired */\n        /** @docsNotRequired */\n        url, /** @docsNotRequired */\n        reason) {\n            var _this = _super.call(this, id, url) || this;\n            _this.reason = reason;\n            return _this;\n        }\n        /** @docsNotRequired */\n        /** @docsNotRequired */\n        NavigationCancel.prototype.toString = /** @docsNotRequired */\n        function () { return \"NavigationCancel(id: \" + this.id + \", url: '\" + this.url + \"')\"; };\n        return NavigationCancel;\n    }(RouterEvent));\n    /**\n     * @description\n     *\n     * Represents an event triggered when a navigation fails due to an unexpected error.\n     *\n     *\n     */\n    var  /**\n     * @description\n     *\n     * Represents an event triggered when a navigation fails due to an unexpected error.\n     *\n     *\n     */\n    NavigationError = /** @class */ (function (_super) {\n        __extends(NavigationError, _super);\n        function NavigationError(/** @docsNotRequired */\n        /** @docsNotRequired */\n        id, /** @docsNotRequired */\n        /** @docsNotRequired */\n        url, /** @docsNotRequired */\n        error) {\n            var _this = _super.call(this, id, url) || this;\n            _this.error = error;\n            return _this;\n        }\n        /** @docsNotRequired */\n        /** @docsNotRequired */\n        NavigationError.prototype.toString = /** @docsNotRequired */\n        function () {\n            return \"NavigationError(id: \" + this.id + \", url: '\" + this.url + \"', error: \" + this.error + \")\";\n        };\n        return NavigationError;\n    }(RouterEvent));\n    /**\n     * @description\n     *\n     * Represents an event triggered when routes are recognized.\n     *\n     *\n     */\n    var  /**\n     * @description\n     *\n     * Represents an event triggered when routes are recognized.\n     *\n     *\n     */\n    RoutesRecognized = /** @class */ (function (_super) {\n        __extends(RoutesRecognized, _super);\n        function RoutesRecognized(/** @docsNotRequired */\n        /** @docsNotRequired */\n        id, /** @docsNotRequired */\n        /** @docsNotRequired */\n        url, /** @docsNotRequired */\n        urlAfterRedirects, /** @docsNotRequired */\n        state) {\n            var _this = _super.call(this, id, url) || this;\n            _this.urlAfterRedirects = urlAfterRedirects;\n            _this.state = state;\n            return _this;\n        }\n        /** @docsNotRequired */\n        /** @docsNotRequired */\n        RoutesRecognized.prototype.toString = /** @docsNotRequired */\n        function () {\n            return \"RoutesRecognized(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n        };\n        return RoutesRecognized;\n    }(RouterEvent));\n    /**\n     * @description\n     *\n     * Represents the start of the Guard phase of routing.\n     *\n     * @experimental\n     */\n    var  /**\n     * @description\n     *\n     * Represents the start of the Guard phase of routing.\n     *\n     * @experimental\n     */\n    GuardsCheckStart = /** @class */ (function (_super) {\n        __extends(GuardsCheckStart, _super);\n        function GuardsCheckStart(/** @docsNotRequired */\n        /** @docsNotRequired */\n        id, /** @docsNotRequired */\n        /** @docsNotRequired */\n        url, /** @docsNotRequired */\n        urlAfterRedirects, /** @docsNotRequired */\n        state) {\n            var _this = _super.call(this, id, url) || this;\n            _this.urlAfterRedirects = urlAfterRedirects;\n            _this.state = state;\n            return _this;\n        }\n        GuardsCheckStart.prototype.toString = function () {\n            return \"GuardsCheckStart(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n        };\n        return GuardsCheckStart;\n    }(RouterEvent));\n    /**\n     * @description\n     *\n     * Represents the end of the Guard phase of routing.\n     *\n     * @experimental\n     */\n    var  /**\n     * @description\n     *\n     * Represents the end of the Guard phase of routing.\n     *\n     * @experimental\n     */\n    GuardsCheckEnd = /** @class */ (function (_super) {\n        __extends(GuardsCheckEnd, _super);\n        function GuardsCheckEnd(/** @docsNotRequired */\n        /** @docsNotRequired */\n        id, /** @docsNotRequired */\n        /** @docsNotRequired */\n        url, /** @docsNotRequired */\n        urlAfterRedirects, /** @docsNotRequired */\n        state, /** @docsNotRequired */\n        shouldActivate) {\n            var _this = _super.call(this, id, url) || this;\n            _this.urlAfterRedirects = urlAfterRedirects;\n            _this.state = state;\n            _this.shouldActivate = shouldActivate;\n            return _this;\n        }\n        GuardsCheckEnd.prototype.toString = function () {\n            return \"GuardsCheckEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \", shouldActivate: \" + this.shouldActivate + \")\";\n        };\n        return GuardsCheckEnd;\n    }(RouterEvent));\n    /**\n     * @description\n     *\n     * Represents the start of the Resolve phase of routing. The timing of this\n     * event may change, thus it's experimental. In the current iteration it will run\n     * in the \"resolve\" phase whether there's things to resolve or not. In the future this\n     * behavior may change to only run when there are things to be resolved.\n     *\n     * @experimental\n     */\n    var  /**\n     * @description\n     *\n     * Represents the start of the Resolve phase of routing. The timing of this\n     * event may change, thus it's experimental. In the current iteration it will run\n     * in the \"resolve\" phase whether there's things to resolve or not. In the future this\n     * behavior may change to only run when there are things to be resolved.\n     *\n     * @experimental\n     */\n    ResolveStart = /** @class */ (function (_super) {\n        __extends(ResolveStart, _super);\n        function ResolveStart(/** @docsNotRequired */\n        /** @docsNotRequired */\n        id, /** @docsNotRequired */\n        /** @docsNotRequired */\n        url, /** @docsNotRequired */\n        urlAfterRedirects, /** @docsNotRequired */\n        state) {\n            var _this = _super.call(this, id, url) || this;\n            _this.urlAfterRedirects = urlAfterRedirects;\n            _this.state = state;\n            return _this;\n        }\n        ResolveStart.prototype.toString = function () {\n            return \"ResolveStart(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n        };\n        return ResolveStart;\n    }(RouterEvent));\n    /**\n     * @description\n     *\n     * Represents the end of the Resolve phase of routing. See note on\n     * `ResolveStart` for use of this experimental API.\n     *\n     * @experimental\n     */\n    var  /**\n     * @description\n     *\n     * Represents the end of the Resolve phase of routing. See note on\n     * `ResolveStart` for use of this experimental API.\n     *\n     * @experimental\n     */\n    ResolveEnd = /** @class */ (function (_super) {\n        __extends(ResolveEnd, _super);\n        function ResolveEnd(/** @docsNotRequired */\n        /** @docsNotRequired */\n        id, /** @docsNotRequired */\n        /** @docsNotRequired */\n        url, /** @docsNotRequired */\n        urlAfterRedirects, /** @docsNotRequired */\n        state) {\n            var _this = _super.call(this, id, url) || this;\n            _this.urlAfterRedirects = urlAfterRedirects;\n            _this.state = state;\n            return _this;\n        }\n        ResolveEnd.prototype.toString = function () {\n            return \"ResolveEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n        };\n        return ResolveEnd;\n    }(RouterEvent));\n    /**\n     * @description\n     *\n     * Represents an event triggered before lazy loading a route config.\n     *\n     * @experimental\n     */\n    var  /**\n     * @description\n     *\n     * Represents an event triggered before lazy loading a route config.\n     *\n     * @experimental\n     */\n    RouteConfigLoadStart = /** @class */ (function () {\n        function RouteConfigLoadStart(/** @docsNotRequired */\n        route) {\n            this.route = route;\n        }\n        RouteConfigLoadStart.prototype.toString = function () { return \"RouteConfigLoadStart(path: \" + this.route.path + \")\"; };\n        return RouteConfigLoadStart;\n    }());\n    /**\n     * @description\n     *\n     * Represents an event triggered when a route has been lazy loaded.\n     *\n     * @experimental\n     */\n    var  /**\n     * @description\n     *\n     * Represents an event triggered when a route has been lazy loaded.\n     *\n     * @experimental\n     */\n    RouteConfigLoadEnd = /** @class */ (function () {\n        function RouteConfigLoadEnd(/** @docsNotRequired */\n        route) {\n            this.route = route;\n        }\n        RouteConfigLoadEnd.prototype.toString = function () { return \"RouteConfigLoadEnd(path: \" + this.route.path + \")\"; };\n        return RouteConfigLoadEnd;\n    }());\n    /**\n     * @description\n     *\n     * Represents the start of end of the Resolve phase of routing. See note on\n     * `ChildActivationEnd` for use of this experimental API.\n     *\n     * @experimental\n     */\n    var  /**\n     * @description\n     *\n     * Represents the start of end of the Resolve phase of routing. See note on\n     * `ChildActivationEnd` for use of this experimental API.\n     *\n     * @experimental\n     */\n    ChildActivationStart = /** @class */ (function () {\n        function ChildActivationStart(/** @docsNotRequired */\n        snapshot) {\n            this.snapshot = snapshot;\n        }\n        ChildActivationStart.prototype.toString = function () {\n            var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n            return \"ChildActivationStart(path: '\" + path + \"')\";\n        };\n        return ChildActivationStart;\n    }());\n    /**\n     * @description\n     *\n     * Represents the start of end of the Resolve phase of routing. See note on\n     * `ChildActivationStart` for use of this experimental API.\n     *\n     * @experimental\n     */\n    var  /**\n     * @description\n     *\n     * Represents the start of end of the Resolve phase of routing. See note on\n     * `ChildActivationStart` for use of this experimental API.\n     *\n     * @experimental\n     */\n    ChildActivationEnd = /** @class */ (function () {\n        function ChildActivationEnd(/** @docsNotRequired */\n        snapshot) {\n            this.snapshot = snapshot;\n        }\n        ChildActivationEnd.prototype.toString = function () {\n            var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n            return \"ChildActivationEnd(path: '\" + path + \"')\";\n        };\n        return ChildActivationEnd;\n    }());\n    /**\n     * @description\n     *\n     * Represents the start of end of the Resolve phase of routing. See note on\n     * `ActivationEnd` for use of this experimental API.\n     *\n     * @experimental\n     */\n    var  /**\n     * @description\n     *\n     * Represents the start of end of the Resolve phase of routing. See note on\n     * `ActivationEnd` for use of this experimental API.\n     *\n     * @experimental\n     */\n    ActivationStart = /** @class */ (function () {\n        function ActivationStart(/** @docsNotRequired */\n        snapshot) {\n            this.snapshot = snapshot;\n        }\n        ActivationStart.prototype.toString = function () {\n            var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n            return \"ActivationStart(path: '\" + path + \"')\";\n        };\n        return ActivationStart;\n    }());\n    /**\n     * @description\n     *\n     * Represents the start of end of the Resolve phase of routing. See note on\n     * `ActivationStart` for use of this experimental API.\n     *\n     * @experimental\n     */\n    var  /**\n     * @description\n     *\n     * Represents the start of end of the Resolve phase of routing. See note on\n     * `ActivationStart` for use of this experimental API.\n     *\n     * @experimental\n     */\n    ActivationEnd = /** @class */ (function () {\n        function ActivationEnd(/** @docsNotRequired */\n        snapshot) {\n            this.snapshot = snapshot;\n        }\n        ActivationEnd.prototype.toString = function () {\n            var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n            return \"ActivationEnd(path: '\" + path + \"')\";\n        };\n        return ActivationEnd;\n    }());\n    /**\n     * @description\n     *\n     * Represents a scrolling event.\n     */\n    var  /**\n     * @description\n     *\n     * Represents a scrolling event.\n     */\n    Scroll = /** @class */ (function () {\n        function Scroll(/** @docsNotRequired */\n        routerEvent, /** @docsNotRequired */\n        position, /** @docsNotRequired */\n        anchor) {\n            this.routerEvent = routerEvent;\n            this.position = position;\n            this.anchor = anchor;\n        }\n        Scroll.prototype.toString = function () {\n            var pos = this.position ? this.position[0] + \", \" + this.position[1] : null;\n            return \"Scroll(anchor: '\" + this.anchor + \"', position: '\" + pos + \"')\";\n        };\n        return Scroll;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Name of the primary outlet.\n     *\n     *\n     */\n    var PRIMARY_OUTLET = 'primary';\n    var ParamsAsMap = /** @class */ (function () {\n        function ParamsAsMap(params) {\n            this.params = params || {};\n        }\n        ParamsAsMap.prototype.has = function (name) { return this.params.hasOwnProperty(name); };\n        ParamsAsMap.prototype.get = function (name) {\n            if (this.has(name)) {\n                var v = this.params[name];\n                return Array.isArray(v) ? v[0] : v;\n            }\n            return null;\n        };\n        ParamsAsMap.prototype.getAll = function (name) {\n            if (this.has(name)) {\n                var v = this.params[name];\n                return Array.isArray(v) ? v : [v];\n            }\n            return [];\n        };\n        Object.defineProperty(ParamsAsMap.prototype, \"keys\", {\n            get: function () { return Object.keys(this.params); },\n            enumerable: true,\n            configurable: true\n        });\n        return ParamsAsMap;\n    }());\n    /**\n     * Convert a `Params` instance to a `ParamMap`.\n     *\n     *\n     */\n    function convertToParamMap(params) {\n        return new ParamsAsMap(params);\n    }\n    var NAVIGATION_CANCELING_ERROR = 'ngNavigationCancelingError';\n    function navigationCancelingError(message) {\n        var error = Error('NavigationCancelingError: ' + message);\n        error[NAVIGATION_CANCELING_ERROR] = true;\n        return error;\n    }\n    function isNavigationCancelingError(error) {\n        return error && error[NAVIGATION_CANCELING_ERROR];\n    }\n    // Matches the route configuration (`route`) against the actual URL (`segments`).\n    function defaultUrlMatcher(segments, segmentGroup, route) {\n        var parts = route.path.split('/');\n        if (parts.length > segments.length) {\n            // The actual URL is shorter than the config, no match\n            return null;\n        }\n        if (route.pathMatch === 'full' &&\n            (segmentGroup.hasChildren() || parts.length < segments.length)) {\n            // The config is longer than the actual URL but we are looking for a full match, return null\n            return null;\n        }\n        var posParams = {};\n        // Check each config part against the actual URL\n        for (var index = 0; index < parts.length; index++) {\n            var part = parts[index];\n            var segment = segments[index];\n            var isParameter = part.startsWith(':');\n            if (isParameter) {\n                posParams[part.substring(1)] = segment;\n            }\n            else if (part !== segment.path) {\n                // The actual URL part does not match the config, no match\n                return null;\n            }\n        }\n        return { consumed: segments.slice(0, parts.length), posParams: posParams };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LoadedRouterConfig = /** @class */ (function () {\n        function LoadedRouterConfig(routes, module) {\n            this.routes = routes;\n            this.module = module;\n        }\n        return LoadedRouterConfig;\n    }());\n    function validateConfig(config, parentPath) {\n        if (parentPath === void 0) { parentPath = ''; }\n        // forEach doesn't iterate undefined values\n        for (var i = 0; i < config.length; i++) {\n            var route = config[i];\n            var fullPath = getFullPath(parentPath, route);\n            validateNode(route, fullPath);\n        }\n    }\n    function validateNode(route, fullPath) {\n        if (!route) {\n            throw new Error(\"\\n      Invalid configuration of route '\" + fullPath + \"': Encountered undefined route.\\n      The reason might be an extra comma.\\n\\n      Example:\\n      const routes: Routes = [\\n        { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\\n        { path: 'dashboard',  component: DashboardComponent },, << two commas\\n        { path: 'detail/:id', component: HeroDetailComponent }\\n      ];\\n    \");\n        }\n        if (Array.isArray(route)) {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': Array cannot be specified\");\n        }\n        if (!route.component && (route.outlet && route.outlet !== PRIMARY_OUTLET)) {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': a componentless route cannot have a named outlet set\");\n        }\n        if (route.redirectTo && route.children) {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and children cannot be used together\");\n        }\n        if (route.redirectTo && route.loadChildren) {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and loadChildren cannot be used together\");\n        }\n        if (route.children && route.loadChildren) {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': children and loadChildren cannot be used together\");\n        }\n        if (route.redirectTo && route.component) {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and component cannot be used together\");\n        }\n        if (route.path && route.matcher) {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': path and matcher cannot be used together\");\n        }\n        if (route.redirectTo === void 0 && !route.component && !route.children && !route.loadChildren) {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"'. One of the following must be provided: component, redirectTo, children or loadChildren\");\n        }\n        if (route.path === void 0 && route.matcher === void 0) {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': routes must have either a path or a matcher specified\");\n        }\n        if (typeof route.path === 'string' && route.path.charAt(0) === '/') {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': path cannot start with a slash\");\n        }\n        if (route.path === '' && route.redirectTo !== void 0 && route.pathMatch === void 0) {\n            var exp = \"The default value of 'pathMatch' is 'prefix', but often the intent is to use 'full'.\";\n            throw new Error(\"Invalid configuration of route '{path: \\\"\" + fullPath + \"\\\", redirectTo: \\\"\" + route.redirectTo + \"\\\"}': please provide 'pathMatch'. \" + exp);\n        }\n        if (route.pathMatch !== void 0 && route.pathMatch !== 'full' && route.pathMatch !== 'prefix') {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': pathMatch can only be set to 'prefix' or 'full'\");\n        }\n        if (route.children) {\n            validateConfig(route.children, fullPath);\n        }\n    }\n    function getFullPath(parentPath, currentRoute) {\n        if (!currentRoute) {\n            return parentPath;\n        }\n        if (!parentPath && !currentRoute.path) {\n            return '';\n        }\n        else if (parentPath && !currentRoute.path) {\n            return parentPath + \"/\";\n        }\n        else if (!parentPath && currentRoute.path) {\n            return currentRoute.path;\n        }\n        else {\n            return parentPath + \"/\" + currentRoute.path;\n        }\n    }\n    function copyConfig(r) {\n        var children = r.children && r.children.map(copyConfig);\n        return children ? __assign({}, r, { children: children }) : __assign({}, r);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function shallowEqualArrays(a, b) {\n        if (a.length !== b.length)\n            return false;\n        for (var i = 0; i < a.length; ++i) {\n            if (!shallowEqual(a[i], b[i]))\n                return false;\n        }\n        return true;\n    }\n    function shallowEqual(a, b) {\n        var k1 = Object.keys(a);\n        var k2 = Object.keys(b);\n        if (k1.length != k2.length) {\n            return false;\n        }\n        var key;\n        for (var i = 0; i < k1.length; i++) {\n            key = k1[i];\n            if (a[key] !== b[key]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * Flattens single-level nested arrays.\n     */\n    function flatten(arr) {\n        return Array.prototype.concat.apply([], arr);\n    }\n    /**\n     * Return the last element of an array.\n     */\n    function last(a) {\n        return a.length > 0 ? a[a.length - 1] : null;\n    }\n    function forEach(map, callback) {\n        for (var prop in map) {\n            if (map.hasOwnProperty(prop)) {\n                callback(map[prop], prop);\n            }\n        }\n    }\n    function waitForMap(obj, fn) {\n        if (Object.keys(obj).length === 0) {\n            return rxjs.of({});\n        }\n        var waitHead = [];\n        var waitTail = [];\n        var res = {};\n        forEach(obj, function (a, k) {\n            var mapped = fn(k, a).pipe(operators.map(function (r) { return res[k] = r; }));\n            if (k === PRIMARY_OUTLET) {\n                waitHead.push(mapped);\n            }\n            else {\n                waitTail.push(mapped);\n            }\n        });\n        // Closure compiler has problem with using spread operator here. So just using Array.concat.\n        return rxjs.of.apply(null, waitHead.concat(waitTail)).pipe(operators.concatAll(), operators.last(), operators.map(function () { return res; }));\n    }\n    /**\n     * ANDs Observables by merging all input observables, reducing to an Observable verifying all\n     * input Observables return `true`.\n     */\n    function andObservables(observables) {\n        return observables.pipe(operators.mergeAll(), operators.every(function (result) { return result === true; }));\n    }\n    function wrapIntoObservable(value) {\n        if (core.ɵisObservable(value)) {\n            return value;\n        }\n        if (core.ɵisPromise(value)) {\n            // Use `Promise.resolve()` to wrap promise-like instances.\n            // Required ie when a Resolver returns a AngularJS `$q` promise to correctly trigger the\n            // change detection.\n            return rxjs.from(Promise.resolve(value));\n        }\n        return rxjs.of(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function createEmptyUrlTree() {\n        return new UrlTree(new UrlSegmentGroup([], {}), {}, null);\n    }\n    function containsTree(container, containee, exact) {\n        if (exact) {\n            return equalQueryParams(container.queryParams, containee.queryParams) &&\n                equalSegmentGroups(container.root, containee.root);\n        }\n        return containsQueryParams(container.queryParams, containee.queryParams) &&\n            containsSegmentGroup(container.root, containee.root);\n    }\n    function equalQueryParams(container, containee) {\n        return shallowEqual(container, containee);\n    }\n    function equalSegmentGroups(container, containee) {\n        if (!equalPath(container.segments, containee.segments))\n            return false;\n        if (container.numberOfChildren !== containee.numberOfChildren)\n            return false;\n        for (var c in containee.children) {\n            if (!container.children[c])\n                return false;\n            if (!equalSegmentGroups(container.children[c], containee.children[c]))\n                return false;\n        }\n        return true;\n    }\n    function containsQueryParams(container, containee) {\n        return Object.keys(containee).length <= Object.keys(container).length &&\n            Object.keys(containee).every(function (key) { return containee[key] === container[key]; });\n    }\n    function containsSegmentGroup(container, containee) {\n        return containsSegmentGroupHelper(container, containee, containee.segments);\n    }\n    function containsSegmentGroupHelper(container, containee, containeePaths) {\n        if (container.segments.length > containeePaths.length) {\n            var current = container.segments.slice(0, containeePaths.length);\n            if (!equalPath(current, containeePaths))\n                return false;\n            if (containee.hasChildren())\n                return false;\n            return true;\n        }\n        else if (container.segments.length === containeePaths.length) {\n            if (!equalPath(container.segments, containeePaths))\n                return false;\n            for (var c in containee.children) {\n                if (!container.children[c])\n                    return false;\n                if (!containsSegmentGroup(container.children[c], containee.children[c]))\n                    return false;\n            }\n            return true;\n        }\n        else {\n            var current = containeePaths.slice(0, container.segments.length);\n            var next = containeePaths.slice(container.segments.length);\n            if (!equalPath(container.segments, current))\n                return false;\n            if (!container.children[PRIMARY_OUTLET])\n                return false;\n            return containsSegmentGroupHelper(container.children[PRIMARY_OUTLET], containee, next);\n        }\n    }\n    /**\n     * @description\n     *\n     * Represents the parsed URL.\n     *\n     * Since a router state is a tree, and the URL is nothing but a serialized state, the URL is a\n     * serialized tree.\n     * UrlTree is a data structure that provides a lot of affordances in dealing with URLs\n     *\n     * ### Example\n     *\n     * ```\n     * @Component({templateUrl:'template.html'})\n     * class MyComponent {\n     *   constructor(router: Router) {\n     *     const tree: UrlTree =\n     *       router.parseUrl('/team/33/(user/victor//support:help)?debug=true#fragment');\n     *     const f = tree.fragment; // return 'fragment'\n     *     const q = tree.queryParams; // returns {debug: 'true'}\n     *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n     *     const s: UrlSegment[] = g.segments; // returns 2 segments 'team' and '33'\n     *     g.children[PRIMARY_OUTLET].segments; // returns 2 segments 'user' and 'victor'\n     *     g.children['support'].segments; // return 1 segment 'help'\n     *   }\n     * }\n     * ```\n     *\n     *\n     */\n    var  /**\n     * @description\n     *\n     * Represents the parsed URL.\n     *\n     * Since a router state is a tree, and the URL is nothing but a serialized state, the URL is a\n     * serialized tree.\n     * UrlTree is a data structure that provides a lot of affordances in dealing with URLs\n     *\n     * ### Example\n     *\n     * ```\n     * @Component({templateUrl:'template.html'})\n     * class MyComponent {\n     *   constructor(router: Router) {\n     *     const tree: UrlTree =\n     *       router.parseUrl('/team/33/(user/victor//support:help)?debug=true#fragment');\n     *     const f = tree.fragment; // return 'fragment'\n     *     const q = tree.queryParams; // returns {debug: 'true'}\n     *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n     *     const s: UrlSegment[] = g.segments; // returns 2 segments 'team' and '33'\n     *     g.children[PRIMARY_OUTLET].segments; // returns 2 segments 'user' and 'victor'\n     *     g.children['support'].segments; // return 1 segment 'help'\n     *   }\n     * }\n     * ```\n     *\n     *\n     */\n    UrlTree = /** @class */ (function () {\n        /** @internal */\n        function UrlTree(/** The root segment group of the URL tree */\n        root, /** The query params of the URL */\n        queryParams, /** The fragment of the URL */\n        fragment) {\n            this.root = root;\n            this.queryParams = queryParams;\n            this.fragment = fragment;\n        }\n        Object.defineProperty(UrlTree.prototype, \"queryParamMap\", {\n            get: function () {\n                if (!this._queryParamMap) {\n                    this._queryParamMap = convertToParamMap(this.queryParams);\n                }\n                return this._queryParamMap;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /** @docsNotRequired */\n        /** @docsNotRequired */\n        UrlTree.prototype.toString = /** @docsNotRequired */\n        function () { return DEFAULT_SERIALIZER.serialize(this); };\n        return UrlTree;\n    }());\n    /**\n     * @description\n     *\n     * Represents the parsed URL segment group.\n     *\n     * See `UrlTree` for more information.\n     *\n     *\n     */\n    var  /**\n     * @description\n     *\n     * Represents the parsed URL segment group.\n     *\n     * See `UrlTree` for more information.\n     *\n     *\n     */\n    UrlSegmentGroup = /** @class */ (function () {\n        function UrlSegmentGroup(/** The URL segments of this group. See `UrlSegment` for more information */\n        segments, /** The list of children of this group */\n        children) {\n            var _this = this;\n            this.segments = segments;\n            this.children = children;\n            /** The parent node in the url tree */\n            this.parent = null;\n            forEach(children, function (v, k) { return v.parent = _this; });\n        }\n        /** Whether the segment has child segments */\n        /** Whether the segment has child segments */\n        UrlSegmentGroup.prototype.hasChildren = /** Whether the segment has child segments */\n        function () { return this.numberOfChildren > 0; };\n        Object.defineProperty(UrlSegmentGroup.prototype, \"numberOfChildren\", {\n            /** Number of child segments */\n            get: /** Number of child segments */\n            function () { return Object.keys(this.children).length; },\n            enumerable: true,\n            configurable: true\n        });\n        /** @docsNotRequired */\n        /** @docsNotRequired */\n        UrlSegmentGroup.prototype.toString = /** @docsNotRequired */\n        function () { return serializePaths(this); };\n        return UrlSegmentGroup;\n    }());\n    /**\n     * @description\n     *\n     * Represents a single URL segment.\n     *\n     * A UrlSegment is a part of a URL between the two slashes. It contains a path and the matrix\n     * parameters associated with the segment.\n     *\n     * ## Example\n     *\n     * ```\n     * @Component({templateUrl:'template.html'})\n     * class MyComponent {\n     *   constructor(router: Router) {\n     *     const tree: UrlTree = router.parseUrl('/team;id=33');\n     *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n     *     const s: UrlSegment[] = g.segments;\n     *     s[0].path; // returns 'team'\n     *     s[0].parameters; // returns {id: 33}\n     *   }\n     * }\n     * ```\n     *\n     *\n     */\n    var  /**\n     * @description\n     *\n     * Represents a single URL segment.\n     *\n     * A UrlSegment is a part of a URL between the two slashes. It contains a path and the matrix\n     * parameters associated with the segment.\n     *\n     * ## Example\n     *\n     * ```\n     * @Component({templateUrl:'template.html'})\n     * class MyComponent {\n     *   constructor(router: Router) {\n     *     const tree: UrlTree = router.parseUrl('/team;id=33');\n     *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n     *     const s: UrlSegment[] = g.segments;\n     *     s[0].path; // returns 'team'\n     *     s[0].parameters; // returns {id: 33}\n     *   }\n     * }\n     * ```\n     *\n     *\n     */\n    UrlSegment = /** @class */ (function () {\n        function UrlSegment(/** The path part of a URL segment */\n        path, /** The matrix parameters associated with a segment */\n        parameters) {\n            this.path = path;\n            this.parameters = parameters;\n        }\n        Object.defineProperty(UrlSegment.prototype, \"parameterMap\", {\n            get: function () {\n                if (!this._parameterMap) {\n                    this._parameterMap = convertToParamMap(this.parameters);\n                }\n                return this._parameterMap;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /** @docsNotRequired */\n        /** @docsNotRequired */\n        UrlSegment.prototype.toString = /** @docsNotRequired */\n        function () { return serializePath(this); };\n        return UrlSegment;\n    }());\n    function equalSegments(as, bs) {\n        return equalPath(as, bs) && as.every(function (a, i) { return shallowEqual(a.parameters, bs[i].parameters); });\n    }\n    function equalPath(as, bs) {\n        if (as.length !== bs.length)\n            return false;\n        return as.every(function (a, i) { return a.path === bs[i].path; });\n    }\n    function mapChildrenIntoArray(segment, fn) {\n        var res = [];\n        forEach(segment.children, function (child, childOutlet) {\n            if (childOutlet === PRIMARY_OUTLET) {\n                res = res.concat(fn(child, childOutlet));\n            }\n        });\n        forEach(segment.children, function (child, childOutlet) {\n            if (childOutlet !== PRIMARY_OUTLET) {\n                res = res.concat(fn(child, childOutlet));\n            }\n        });\n        return res;\n    }\n    /**\n     * @description\n     *\n     * Serializes and deserializes a URL string into a URL tree.\n     *\n     * The url serialization strategy is customizable. You can\n     * make all URLs case insensitive by providing a custom UrlSerializer.\n     *\n     * See `DefaultUrlSerializer` for an example of a URL serializer.\n     *\n     *\n     */\n    var  /**\n     * @description\n     *\n     * Serializes and deserializes a URL string into a URL tree.\n     *\n     * The url serialization strategy is customizable. You can\n     * make all URLs case insensitive by providing a custom UrlSerializer.\n     *\n     * See `DefaultUrlSerializer` for an example of a URL serializer.\n     *\n     *\n     */\n    UrlSerializer = /** @class */ (function () {\n        function UrlSerializer() {\n        }\n        return UrlSerializer;\n    }());\n    /**\n     * @description\n     *\n     * A default implementation of the `UrlSerializer`.\n     *\n     * Example URLs:\n     *\n     * ```\n     * /inbox/33(popup:compose)\n     * /inbox/33;open=true/messages/44\n     * ```\n     *\n     * DefaultUrlSerializer uses parentheses to serialize secondary segments (e.g., popup:compose), the\n     * colon syntax to specify the outlet, and the ';parameter=value' syntax (e.g., open=true) to\n     * specify route specific parameters.\n     *\n     *\n     */\n    var  /**\n     * @description\n     *\n     * A default implementation of the `UrlSerializer`.\n     *\n     * Example URLs:\n     *\n     * ```\n     * /inbox/33(popup:compose)\n     * /inbox/33;open=true/messages/44\n     * ```\n     *\n     * DefaultUrlSerializer uses parentheses to serialize secondary segments (e.g., popup:compose), the\n     * colon syntax to specify the outlet, and the ';parameter=value' syntax (e.g., open=true) to\n     * specify route specific parameters.\n     *\n     *\n     */\n    DefaultUrlSerializer = /** @class */ (function () {\n        function DefaultUrlSerializer() {\n        }\n        /** Parses a url into a `UrlTree` */\n        /** Parses a url into a `UrlTree` */\n        DefaultUrlSerializer.prototype.parse = /** Parses a url into a `UrlTree` */\n        function (url) {\n            var p = new UrlParser(url);\n            return new UrlTree(p.parseRootSegment(), p.parseQueryParams(), p.parseFragment());\n        };\n        /** Converts a `UrlTree` into a url */\n        /** Converts a `UrlTree` into a url */\n        DefaultUrlSerializer.prototype.serialize = /** Converts a `UrlTree` into a url */\n        function (tree) {\n            var segment = \"/\" + serializeSegment(tree.root, true);\n            var query = serializeQueryParams(tree.queryParams);\n            var fragment = typeof tree.fragment === \"string\" ? \"#\" + encodeUriFragment((tree.fragment)) : '';\n            return \"\" + segment + query + fragment;\n        };\n        return DefaultUrlSerializer;\n    }());\n    var DEFAULT_SERIALIZER = new DefaultUrlSerializer();\n    function serializePaths(segment) {\n        return segment.segments.map(function (p) { return serializePath(p); }).join('/');\n    }\n    function serializeSegment(segment, root) {\n        if (!segment.hasChildren()) {\n            return serializePaths(segment);\n        }\n        if (root) {\n            var primary = segment.children[PRIMARY_OUTLET] ?\n                serializeSegment(segment.children[PRIMARY_OUTLET], false) :\n                '';\n            var children_1 = [];\n            forEach(segment.children, function (v, k) {\n                if (k !== PRIMARY_OUTLET) {\n                    children_1.push(k + \":\" + serializeSegment(v, false));\n                }\n            });\n            return children_1.length > 0 ? primary + \"(\" + children_1.join('//') + \")\" : primary;\n        }\n        else {\n            var children = mapChildrenIntoArray(segment, function (v, k) {\n                if (k === PRIMARY_OUTLET) {\n                    return [serializeSegment(segment.children[PRIMARY_OUTLET], false)];\n                }\n                return [k + \":\" + serializeSegment(v, false)];\n            });\n            return serializePaths(segment) + \"/(\" + children.join('//') + \")\";\n        }\n    }\n    /**\n     * Encodes a URI string with the default encoding. This function will only ever be called from\n     * `encodeUriQuery` or `encodeUriSegment` as it's the base set of encodings to be used. We need\n     * a custom encoding because encodeURIComponent is too aggressive and encodes stuff that doesn't\n     * have to be encoded per https://url.spec.whatwg.org.\n     */\n    function encodeUriString(s) {\n        return encodeURIComponent(s)\n            .replace(/%40/g, '@')\n            .replace(/%3A/gi, ':')\n            .replace(/%24/g, '$')\n            .replace(/%2C/gi, ',');\n    }\n    /**\n     * This function should be used to encode both keys and values in a query string key/value. In\n     * the following URL, you need to call encodeUriQuery on \"k\" and \"v\":\n     *\n     * http://www.site.org/html;mk=mv?k=v#f\n     */\n    function encodeUriQuery(s) {\n        return encodeUriString(s).replace(/%3B/gi, ';');\n    }\n    /**\n     * This function should be used to encode a URL fragment. In the following URL, you need to call\n     * encodeUriFragment on \"f\":\n     *\n     * http://www.site.org/html;mk=mv?k=v#f\n     */\n    function encodeUriFragment(s) {\n        return encodeURI(s);\n    }\n    /**\n     * This function should be run on any URI segment as well as the key and value in a key/value\n     * pair for matrix params. In the following URL, you need to call encodeUriSegment on \"html\",\n     * \"mk\", and \"mv\":\n     *\n     * http://www.site.org/html;mk=mv?k=v#f\n     */\n    function encodeUriSegment(s) {\n        return encodeUriString(s).replace(/\\(/g, '%28').replace(/\\)/g, '%29').replace(/%26/gi, '&');\n    }\n    function decode(s) {\n        return decodeURIComponent(s);\n    }\n    // Query keys/values should have the \"+\" replaced first, as \"+\" in a query string is \" \".\n    // decodeURIComponent function will not decode \"+\" as a space.\n    function decodeQuery(s) {\n        return decode(s.replace(/\\+/g, '%20'));\n    }\n    function serializePath(path) {\n        return \"\" + encodeUriSegment(path.path) + serializeMatrixParams(path.parameters);\n    }\n    function serializeMatrixParams(params) {\n        return Object.keys(params)\n            .map(function (key) { return \";\" + encodeUriSegment(key) + \"=\" + encodeUriSegment(params[key]); })\n            .join('');\n    }\n    function serializeQueryParams(params) {\n        var strParams = Object.keys(params).map(function (name) {\n            var value = params[name];\n            return Array.isArray(value) ?\n                value.map(function (v) { return encodeUriQuery(name) + \"=\" + encodeUriQuery(v); }).join('&') :\n                encodeUriQuery(name) + \"=\" + encodeUriQuery(value);\n        });\n        return strParams.length ? \"?\" + strParams.join(\"&\") : '';\n    }\n    var SEGMENT_RE = /^[^\\/()?;=#]+/;\n    function matchSegments(str) {\n        var match = str.match(SEGMENT_RE);\n        return match ? match[0] : '';\n    }\n    var QUERY_PARAM_RE = /^[^=?&#]+/;\n    // Return the name of the query param at the start of the string or an empty string\n    function matchQueryParams(str) {\n        var match = str.match(QUERY_PARAM_RE);\n        return match ? match[0] : '';\n    }\n    var QUERY_PARAM_VALUE_RE = /^[^?&#]+/;\n    // Return the value of the query param at the start of the string or an empty string\n    function matchUrlQueryParamValue(str) {\n        var match = str.match(QUERY_PARAM_VALUE_RE);\n        return match ? match[0] : '';\n    }\n    var UrlParser = /** @class */ (function () {\n        function UrlParser(url) {\n            this.url = url;\n            this.remaining = url;\n        }\n        UrlParser.prototype.parseRootSegment = function () {\n            this.consumeOptional('/');\n            if (this.remaining === '' || this.peekStartsWith('?') || this.peekStartsWith('#')) {\n                return new UrlSegmentGroup([], {});\n            }\n            // The root segment group never has segments\n            return new UrlSegmentGroup([], this.parseChildren());\n        };\n        UrlParser.prototype.parseQueryParams = function () {\n            var params = {};\n            if (this.consumeOptional('?')) {\n                do {\n                    this.parseQueryParam(params);\n                } while (this.consumeOptional('&'));\n            }\n            return params;\n        };\n        UrlParser.prototype.parseFragment = function () {\n            return this.consumeOptional('#') ? decodeURIComponent(this.remaining) : null;\n        };\n        UrlParser.prototype.parseChildren = function () {\n            if (this.remaining === '') {\n                return {};\n            }\n            this.consumeOptional('/');\n            var segments = [];\n            if (!this.peekStartsWith('(')) {\n                segments.push(this.parseSegment());\n            }\n            while (this.peekStartsWith('/') && !this.peekStartsWith('//') && !this.peekStartsWith('/(')) {\n                this.capture('/');\n                segments.push(this.parseSegment());\n            }\n            var children = {};\n            if (this.peekStartsWith('/(')) {\n                this.capture('/');\n                children = this.parseParens(true);\n            }\n            var res = {};\n            if (this.peekStartsWith('(')) {\n                res = this.parseParens(false);\n            }\n            if (segments.length > 0 || Object.keys(children).length > 0) {\n                res[PRIMARY_OUTLET] = new UrlSegmentGroup(segments, children);\n            }\n            return res;\n        };\n        // parse a segment with its matrix parameters\n        // ie `name;k1=v1;k2`\n        // parse a segment with its matrix parameters\n        // ie `name;k1=v1;k2`\n        UrlParser.prototype.parseSegment = \n        // parse a segment with its matrix parameters\n        // ie `name;k1=v1;k2`\n        function () {\n            var path = matchSegments(this.remaining);\n            if (path === '' && this.peekStartsWith(';')) {\n                throw new Error(\"Empty path url segment cannot have parameters: '\" + this.remaining + \"'.\");\n            }\n            this.capture(path);\n            return new UrlSegment(decode(path), this.parseMatrixParams());\n        };\n        UrlParser.prototype.parseMatrixParams = function () {\n            var params = {};\n            while (this.consumeOptional(';')) {\n                this.parseParam(params);\n            }\n            return params;\n        };\n        UrlParser.prototype.parseParam = function (params) {\n            var key = matchSegments(this.remaining);\n            if (!key) {\n                return;\n            }\n            this.capture(key);\n            var value = '';\n            if (this.consumeOptional('=')) {\n                var valueMatch = matchSegments(this.remaining);\n                if (valueMatch) {\n                    value = valueMatch;\n                    this.capture(value);\n                }\n            }\n            params[decode(key)] = decode(value);\n        };\n        // Parse a single query parameter `name[=value]`\n        // Parse a single query parameter `name[=value]`\n        UrlParser.prototype.parseQueryParam = \n        // Parse a single query parameter `name[=value]`\n        function (params) {\n            var key = matchQueryParams(this.remaining);\n            if (!key) {\n                return;\n            }\n            this.capture(key);\n            var value = '';\n            if (this.consumeOptional('=')) {\n                var valueMatch = matchUrlQueryParamValue(this.remaining);\n                if (valueMatch) {\n                    value = valueMatch;\n                    this.capture(value);\n                }\n            }\n            var decodedKey = decodeQuery(key);\n            var decodedVal = decodeQuery(value);\n            if (params.hasOwnProperty(decodedKey)) {\n                // Append to existing values\n                var currentVal = params[decodedKey];\n                if (!Array.isArray(currentVal)) {\n                    currentVal = [currentVal];\n                    params[decodedKey] = currentVal;\n                }\n                currentVal.push(decodedVal);\n            }\n            else {\n                // Create a new value\n                params[decodedKey] = decodedVal;\n            }\n        };\n        // parse `(a/b//outlet_name:c/d)`\n        // parse `(a/b//outlet_name:c/d)`\n        UrlParser.prototype.parseParens = \n        // parse `(a/b//outlet_name:c/d)`\n        function (allowPrimary) {\n            var segments = {};\n            this.capture('(');\n            while (!this.consumeOptional(')') && this.remaining.length > 0) {\n                var path = matchSegments(this.remaining);\n                var next = this.remaining[path.length];\n                // if is is not one of these characters, then the segment was unescaped\n                // or the group was not closed\n                if (next !== '/' && next !== ')' && next !== ';') {\n                    throw new Error(\"Cannot parse url '\" + this.url + \"'\");\n                }\n                var outletName = (undefined);\n                if (path.indexOf(':') > -1) {\n                    outletName = path.substr(0, path.indexOf(':'));\n                    this.capture(outletName);\n                    this.capture(':');\n                }\n                else if (allowPrimary) {\n                    outletName = PRIMARY_OUTLET;\n                }\n                var children = this.parseChildren();\n                segments[outletName] = Object.keys(children).length === 1 ? children[PRIMARY_OUTLET] :\n                    new UrlSegmentGroup([], children);\n                this.consumeOptional('//');\n            }\n            return segments;\n        };\n        UrlParser.prototype.peekStartsWith = function (str) { return this.remaining.startsWith(str); };\n        // Consumes the prefix when it is present and returns whether it has been consumed\n        // Consumes the prefix when it is present and returns whether it has been consumed\n        UrlParser.prototype.consumeOptional = \n        // Consumes the prefix when it is present and returns whether it has been consumed\n        function (str) {\n            if (this.peekStartsWith(str)) {\n                this.remaining = this.remaining.substring(str.length);\n                return true;\n            }\n            return false;\n        };\n        UrlParser.prototype.capture = function (str) {\n            if (!this.consumeOptional(str)) {\n                throw new Error(\"Expected \\\"\" + str + \"\\\".\");\n            }\n        };\n        return UrlParser;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NoMatch = /** @class */ (function () {\n        function NoMatch(segmentGroup) {\n            this.segmentGroup = segmentGroup || null;\n        }\n        return NoMatch;\n    }());\n    var AbsoluteRedirect = /** @class */ (function () {\n        function AbsoluteRedirect(urlTree) {\n            this.urlTree = urlTree;\n        }\n        return AbsoluteRedirect;\n    }());\n    function noMatch(segmentGroup) {\n        return new rxjs.Observable(function (obs) { return obs.error(new NoMatch(segmentGroup)); });\n    }\n    function absoluteRedirect(newTree) {\n        return new rxjs.Observable(function (obs) { return obs.error(new AbsoluteRedirect(newTree)); });\n    }\n    function namedOutletsRedirect(redirectTo) {\n        return new rxjs.Observable(function (obs) {\n            return obs.error(new Error(\"Only absolute redirects can have named outlets. redirectTo: '\" + redirectTo + \"'\"));\n        });\n    }\n    function canLoadFails(route) {\n        return new rxjs.Observable(function (obs) {\n            return obs.error(navigationCancelingError(\"Cannot load children because the guard of the route \\\"path: '\" + route.path + \"'\\\" returned false\"));\n        });\n    }\n    /**\n     * Returns the `UrlTree` with the redirection applied.\n     *\n     * Lazy modules are loaded along the way.\n     */\n    function applyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config) {\n        return new ApplyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config).apply();\n    }\n    var ApplyRedirects = /** @class */ (function () {\n        function ApplyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config) {\n            this.configLoader = configLoader;\n            this.urlSerializer = urlSerializer;\n            this.urlTree = urlTree;\n            this.config = config;\n            this.allowRedirects = true;\n            this.ngModule = moduleInjector.get(core.NgModuleRef);\n        }\n        ApplyRedirects.prototype.apply = function () {\n            var _this = this;\n            var expanded$ = this.expandSegmentGroup(this.ngModule, this.config, this.urlTree.root, PRIMARY_OUTLET);\n            var urlTrees$ = expanded$.pipe(operators.map(function (rootSegmentGroup) {\n                return _this.createUrlTree(rootSegmentGroup, _this.urlTree.queryParams, (_this.urlTree.fragment));\n            }));\n            return urlTrees$.pipe(operators.catchError(function (e) {\n                if (e instanceof AbsoluteRedirect) {\n                    // after an absolute redirect we do not apply any more redirects!\n                    // after an absolute redirect we do not apply any more redirects!\n                    _this.allowRedirects = false;\n                    // we need to run matching, so we can fetch all lazy-loaded modules\n                    return _this.match(e.urlTree);\n                }\n                if (e instanceof NoMatch) {\n                    throw _this.noMatchError(e);\n                }\n                throw e;\n            }));\n        };\n        ApplyRedirects.prototype.match = function (tree) {\n            var _this = this;\n            var expanded$ = this.expandSegmentGroup(this.ngModule, this.config, tree.root, PRIMARY_OUTLET);\n            var mapped$ = expanded$.pipe(operators.map(function (rootSegmentGroup) {\n                return _this.createUrlTree(rootSegmentGroup, tree.queryParams, (tree.fragment));\n            }));\n            return mapped$.pipe(operators.catchError(function (e) {\n                if (e instanceof NoMatch) {\n                    throw _this.noMatchError(e);\n                }\n                throw e;\n            }));\n        };\n        ApplyRedirects.prototype.noMatchError = function (e) {\n            return new Error(\"Cannot match any routes. URL Segment: '\" + e.segmentGroup + \"'\");\n        };\n        ApplyRedirects.prototype.createUrlTree = function (rootCandidate, queryParams, fragment) {\n            var root = rootCandidate.segments.length > 0 ?\n                new UrlSegmentGroup([], (_a = {}, _a[PRIMARY_OUTLET] = rootCandidate, _a)) :\n                rootCandidate;\n            return new UrlTree(root, queryParams, fragment);\n            var _a;\n        };\n        ApplyRedirects.prototype.expandSegmentGroup = function (ngModule, routes, segmentGroup, outlet) {\n            if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n                return this.expandChildren(ngModule, routes, segmentGroup)\n                    .pipe(operators.map(function (children) { return new UrlSegmentGroup([], children); }));\n            }\n            return this.expandSegment(ngModule, segmentGroup, routes, segmentGroup.segments, outlet, true);\n        };\n        // Recursively expand segment groups for all the child outlets\n        // Recursively expand segment groups for all the child outlets\n        ApplyRedirects.prototype.expandChildren = \n        // Recursively expand segment groups for all the child outlets\n        function (ngModule, routes, segmentGroup) {\n            var _this = this;\n            return waitForMap(segmentGroup.children, function (childOutlet, child) { return _this.expandSegmentGroup(ngModule, routes, child, childOutlet); });\n        };\n        ApplyRedirects.prototype.expandSegment = function (ngModule, segmentGroup, routes, segments, outlet, allowRedirects) {\n            var _this = this;\n            return rxjs.of.apply(void 0, __spread(routes)).pipe(operators.map(function (r) {\n                var expanded$ = _this.expandSegmentAgainstRoute(ngModule, segmentGroup, routes, r, segments, outlet, allowRedirects);\n                return expanded$.pipe(operators.catchError(function (e) {\n                    if (e instanceof NoMatch) {\n                        // TODO(i): this return type doesn't match the declared Observable<UrlSegmentGroup> -\n                        // talk to Jason\n                        return rxjs.of(null);\n                    }\n                    throw e;\n                }));\n            }), operators.concatAll(), operators.first(function (s) { return !!s; }), operators.catchError(function (e, _) {\n                if (e instanceof rxjs.EmptyError || e.name === 'EmptyError') {\n                    if (_this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n                        return rxjs.of(new UrlSegmentGroup([], {}));\n                    }\n                    throw new NoMatch(segmentGroup);\n                }\n                throw e;\n            }));\n        };\n        ApplyRedirects.prototype.noLeftoversInUrl = function (segmentGroup, segments, outlet) {\n            return segments.length === 0 && !segmentGroup.children[outlet];\n        };\n        ApplyRedirects.prototype.expandSegmentAgainstRoute = function (ngModule, segmentGroup, routes, route, paths, outlet, allowRedirects) {\n            if (getOutlet(route) !== outlet) {\n                return noMatch(segmentGroup);\n            }\n            if (route.redirectTo === undefined) {\n                return this.matchSegmentAgainstRoute(ngModule, segmentGroup, route, paths);\n            }\n            if (allowRedirects && this.allowRedirects) {\n                return this.expandSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, paths, outlet);\n            }\n            return noMatch(segmentGroup);\n        };\n        ApplyRedirects.prototype.expandSegmentAgainstRouteUsingRedirect = function (ngModule, segmentGroup, routes, route, segments, outlet) {\n            if (route.path === '**') {\n                return this.expandWildCardWithParamsAgainstRouteUsingRedirect(ngModule, routes, route, outlet);\n            }\n            return this.expandRegularSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, segments, outlet);\n        };\n        ApplyRedirects.prototype.expandWildCardWithParamsAgainstRouteUsingRedirect = function (ngModule, routes, route, outlet) {\n            var _this = this;\n            var newTree = this.applyRedirectCommands([], (route.redirectTo), {});\n            if (route.redirectTo.startsWith('/')) {\n                return absoluteRedirect(newTree);\n            }\n            return this.lineralizeSegments(route, newTree).pipe(operators.mergeMap(function (newSegments) {\n                var group = new UrlSegmentGroup(newSegments, {});\n                return _this.expandSegment(ngModule, group, routes, newSegments, outlet, false);\n            }));\n        };\n        ApplyRedirects.prototype.expandRegularSegmentAgainstRouteUsingRedirect = function (ngModule, segmentGroup, routes, route, segments, outlet) {\n            var _this = this;\n            var _a = match(segmentGroup, route, segments), matched = _a.matched, consumedSegments = _a.consumedSegments, lastChild = _a.lastChild, positionalParamSegments = _a.positionalParamSegments;\n            if (!matched)\n                return noMatch(segmentGroup);\n            var newTree = this.applyRedirectCommands(consumedSegments, (route.redirectTo), positionalParamSegments);\n            if (route.redirectTo.startsWith('/')) {\n                return absoluteRedirect(newTree);\n            }\n            return this.lineralizeSegments(route, newTree).pipe(operators.mergeMap(function (newSegments) {\n                return _this.expandSegment(ngModule, segmentGroup, routes, newSegments.concat(segments.slice(lastChild)), outlet, false);\n            }));\n        };\n        ApplyRedirects.prototype.matchSegmentAgainstRoute = function (ngModule, rawSegmentGroup, route, segments) {\n            var _this = this;\n            if (route.path === '**') {\n                if (route.loadChildren) {\n                    return this.configLoader.load(ngModule.injector, route)\n                        .pipe(operators.map(function (cfg) {\n                        route._loadedConfig = cfg;\n                        return new UrlSegmentGroup(segments, {});\n                    }));\n                }\n                return rxjs.of(new UrlSegmentGroup(segments, {}));\n            }\n            var _a = match(rawSegmentGroup, route, segments), matched = _a.matched, consumedSegments = _a.consumedSegments, lastChild = _a.lastChild;\n            if (!matched)\n                return noMatch(rawSegmentGroup);\n            var rawSlicedSegments = segments.slice(lastChild);\n            var childConfig$ = this.getChildConfig(ngModule, route);\n            return childConfig$.pipe(operators.mergeMap(function (routerConfig) {\n                var childModule = routerConfig.module;\n                var childConfig = routerConfig.routes;\n                var _a = split(rawSegmentGroup, consumedSegments, rawSlicedSegments, childConfig), segmentGroup = _a.segmentGroup, slicedSegments = _a.slicedSegments;\n                if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n                    var expanded$_1 = _this.expandChildren(childModule, childConfig, segmentGroup);\n                    return expanded$_1.pipe(operators.map(function (children) { return new UrlSegmentGroup(consumedSegments, children); }));\n                }\n                if (childConfig.length === 0 && slicedSegments.length === 0) {\n                    return rxjs.of(new UrlSegmentGroup(consumedSegments, {}));\n                }\n                var expanded$ = _this.expandSegment(childModule, segmentGroup, childConfig, slicedSegments, PRIMARY_OUTLET, true);\n                return expanded$.pipe(operators.map(function (cs) {\n                    return new UrlSegmentGroup(consumedSegments.concat(cs.segments), cs.children);\n                }));\n            }));\n        };\n        ApplyRedirects.prototype.getChildConfig = function (ngModule, route) {\n            var _this = this;\n            if (route.children) {\n                // The children belong to the same module\n                return rxjs.of(new LoadedRouterConfig(route.children, ngModule));\n            }\n            if (route.loadChildren) {\n                // lazy children belong to the loaded module\n                if (route._loadedConfig !== undefined) {\n                    return rxjs.of(route._loadedConfig);\n                }\n                return runCanLoadGuard(ngModule.injector, route).pipe(operators.mergeMap(function (shouldLoad) {\n                    if (shouldLoad) {\n                        return _this.configLoader.load(ngModule.injector, route)\n                            .pipe(operators.map(function (cfg) {\n                            route._loadedConfig = cfg;\n                            return cfg;\n                        }));\n                    }\n                    return canLoadFails(route);\n                }));\n            }\n            return rxjs.of(new LoadedRouterConfig([], ngModule));\n        };\n        ApplyRedirects.prototype.lineralizeSegments = function (route, urlTree) {\n            var res = [];\n            var c = urlTree.root;\n            while (true) {\n                res = res.concat(c.segments);\n                if (c.numberOfChildren === 0) {\n                    return rxjs.of(res);\n                }\n                if (c.numberOfChildren > 1 || !c.children[PRIMARY_OUTLET]) {\n                    return namedOutletsRedirect((route.redirectTo));\n                }\n                c = c.children[PRIMARY_OUTLET];\n            }\n        };\n        ApplyRedirects.prototype.applyRedirectCommands = function (segments, redirectTo, posParams) {\n            return this.applyRedirectCreatreUrlTree(redirectTo, this.urlSerializer.parse(redirectTo), segments, posParams);\n        };\n        ApplyRedirects.prototype.applyRedirectCreatreUrlTree = function (redirectTo, urlTree, segments, posParams) {\n            var newRoot = this.createSegmentGroup(redirectTo, urlTree.root, segments, posParams);\n            return new UrlTree(newRoot, this.createQueryParams(urlTree.queryParams, this.urlTree.queryParams), urlTree.fragment);\n        };\n        ApplyRedirects.prototype.createQueryParams = function (redirectToParams, actualParams) {\n            var res = {};\n            forEach(redirectToParams, function (v, k) {\n                var copySourceValue = typeof v === 'string' && v.startsWith(':');\n                if (copySourceValue) {\n                    var sourceName = v.substring(1);\n                    res[k] = actualParams[sourceName];\n                }\n                else {\n                    res[k] = v;\n                }\n            });\n            return res;\n        };\n        ApplyRedirects.prototype.createSegmentGroup = function (redirectTo, group, segments, posParams) {\n            var _this = this;\n            var updatedSegments = this.createSegments(redirectTo, group.segments, segments, posParams);\n            var children = {};\n            forEach(group.children, function (child, name) {\n                children[name] = _this.createSegmentGroup(redirectTo, child, segments, posParams);\n            });\n            return new UrlSegmentGroup(updatedSegments, children);\n        };\n        ApplyRedirects.prototype.createSegments = function (redirectTo, redirectToSegments, actualSegments, posParams) {\n            var _this = this;\n            return redirectToSegments.map(function (s) {\n                return s.path.startsWith(':') ? _this.findPosParam(redirectTo, s, posParams) :\n                    _this.findOrReturn(s, actualSegments);\n            });\n        };\n        ApplyRedirects.prototype.findPosParam = function (redirectTo, redirectToUrlSegment, posParams) {\n            var pos = posParams[redirectToUrlSegment.path.substring(1)];\n            if (!pos)\n                throw new Error(\"Cannot redirect to '\" + redirectTo + \"'. Cannot find '\" + redirectToUrlSegment.path + \"'.\");\n            return pos;\n        };\n        ApplyRedirects.prototype.findOrReturn = function (redirectToUrlSegment, actualSegments) {\n            var idx = 0;\n            try {\n                for (var actualSegments_1 = __values(actualSegments), actualSegments_1_1 = actualSegments_1.next(); !actualSegments_1_1.done; actualSegments_1_1 = actualSegments_1.next()) {\n                    var s = actualSegments_1_1.value;\n                    if (s.path === redirectToUrlSegment.path) {\n                        actualSegments.splice(idx);\n                        return s;\n                    }\n                    idx++;\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (actualSegments_1_1 && !actualSegments_1_1.done && (_a = actualSegments_1.return)) _a.call(actualSegments_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            return redirectToUrlSegment;\n            var e_1, _a;\n        };\n        return ApplyRedirects;\n    }());\n    function runCanLoadGuard(moduleInjector, route) {\n        var canLoad = route.canLoad;\n        if (!canLoad || canLoad.length === 0)\n            return rxjs.of(true);\n        var obs = rxjs.from(canLoad).pipe(operators.map(function (injectionToken) {\n            var guard = moduleInjector.get(injectionToken);\n            return wrapIntoObservable(guard.canLoad ? guard.canLoad(route) : guard(route));\n        }));\n        return andObservables(obs);\n    }\n    function match(segmentGroup, route, segments) {\n        if (route.path === '') {\n            if ((route.pathMatch === 'full') && (segmentGroup.hasChildren() || segments.length > 0)) {\n                return { matched: false, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n            }\n            return { matched: true, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n        }\n        var matcher = route.matcher || defaultUrlMatcher;\n        var res = matcher(segments, segmentGroup, route);\n        if (!res) {\n            return {\n                matched: false,\n                consumedSegments: [],\n                lastChild: 0,\n                positionalParamSegments: {},\n            };\n        }\n        return {\n            matched: true,\n            consumedSegments: (res.consumed),\n            lastChild: (res.consumed.length),\n            positionalParamSegments: (res.posParams),\n        };\n    }\n    function split(segmentGroup, consumedSegments, slicedSegments, config) {\n        if (slicedSegments.length > 0 &&\n            containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n            var s = new UrlSegmentGroup(consumedSegments, createChildrenForEmptySegments(config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n            return { segmentGroup: mergeTrivialChildren(s), slicedSegments: [] };\n        }\n        if (slicedSegments.length === 0 &&\n            containsEmptyPathRedirects(segmentGroup, slicedSegments, config)) {\n            var s = new UrlSegmentGroup(segmentGroup.segments, addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, config, segmentGroup.children));\n            return { segmentGroup: mergeTrivialChildren(s), slicedSegments: slicedSegments };\n        }\n        return { segmentGroup: segmentGroup, slicedSegments: slicedSegments };\n    }\n    function mergeTrivialChildren(s) {\n        if (s.numberOfChildren === 1 && s.children[PRIMARY_OUTLET]) {\n            var c = s.children[PRIMARY_OUTLET];\n            return new UrlSegmentGroup(s.segments.concat(c.segments), c.children);\n        }\n        return s;\n    }\n    function addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, routes, children) {\n        var res = {};\n        try {\n            for (var routes_1 = __values(routes), routes_1_1 = routes_1.next(); !routes_1_1.done; routes_1_1 = routes_1.next()) {\n                var r = routes_1_1.value;\n                if (isEmptyPathRedirect(segmentGroup, slicedSegments, r) && !children[getOutlet(r)]) {\n                    res[getOutlet(r)] = new UrlSegmentGroup([], {});\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (routes_1_1 && !routes_1_1.done && (_a = routes_1.return)) _a.call(routes_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return __assign({}, children, res);\n        var e_2, _a;\n    }\n    function createChildrenForEmptySegments(routes, primarySegmentGroup) {\n        var res = {};\n        res[PRIMARY_OUTLET] = primarySegmentGroup;\n        try {\n            for (var routes_2 = __values(routes), routes_2_1 = routes_2.next(); !routes_2_1.done; routes_2_1 = routes_2.next()) {\n                var r = routes_2_1.value;\n                if (r.path === '' && getOutlet(r) !== PRIMARY_OUTLET) {\n                    res[getOutlet(r)] = new UrlSegmentGroup([], {});\n                }\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (routes_2_1 && !routes_2_1.done && (_a = routes_2.return)) _a.call(routes_2);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n        return res;\n        var e_3, _a;\n    }\n    function containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, segments, routes) {\n        return routes.some(function (r) { return isEmptyPathRedirect(segmentGroup, segments, r) && getOutlet(r) !== PRIMARY_OUTLET; });\n    }\n    function containsEmptyPathRedirects(segmentGroup, segments, routes) {\n        return routes.some(function (r) { return isEmptyPathRedirect(segmentGroup, segments, r); });\n    }\n    function isEmptyPathRedirect(segmentGroup, segments, r) {\n        if ((segmentGroup.hasChildren() || segments.length > 0) && r.pathMatch === 'full') {\n            return false;\n        }\n        return r.path === '' && r.redirectTo !== undefined;\n    }\n    function getOutlet(route) {\n        return route.outlet || PRIMARY_OUTLET;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Tree = /** @class */ (function () {\n        function Tree(root) {\n            this._root = root;\n        }\n        Object.defineProperty(Tree.prototype, \"root\", {\n            get: function () { return this._root.value; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @internal\n         */\n        /**\n           * @internal\n           */\n        Tree.prototype.parent = /**\n           * @internal\n           */\n        function (t) {\n            var p = this.pathFromRoot(t);\n            return p.length > 1 ? p[p.length - 2] : null;\n        };\n        /**\n         * @internal\n         */\n        /**\n           * @internal\n           */\n        Tree.prototype.children = /**\n           * @internal\n           */\n        function (t) {\n            var n = findNode(t, this._root);\n            return n ? n.children.map(function (t) { return t.value; }) : [];\n        };\n        /**\n         * @internal\n         */\n        /**\n           * @internal\n           */\n        Tree.prototype.firstChild = /**\n           * @internal\n           */\n        function (t) {\n            var n = findNode(t, this._root);\n            return n && n.children.length > 0 ? n.children[0].value : null;\n        };\n        /**\n         * @internal\n         */\n        /**\n           * @internal\n           */\n        Tree.prototype.siblings = /**\n           * @internal\n           */\n        function (t) {\n            var p = findPath(t, this._root);\n            if (p.length < 2)\n                return [];\n            var c = p[p.length - 2].children.map(function (c) { return c.value; });\n            return c.filter(function (cc) { return cc !== t; });\n        };\n        /**\n         * @internal\n         */\n        /**\n           * @internal\n           */\n        Tree.prototype.pathFromRoot = /**\n           * @internal\n           */\n        function (t) { return findPath(t, this._root).map(function (s) { return s.value; }); };\n        return Tree;\n    }());\n    // DFS for the node matching the value\n    function findNode(value, node) {\n        if (value === node.value)\n            return node;\n        try {\n            for (var _a = __values(node.children), _b = _a.next(); !_b.done; _b = _a.next()) {\n                var child = _b.value;\n                var node_1 = findNode(value, child);\n                if (node_1)\n                    return node_1;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return null;\n        var e_1, _c;\n    }\n    // Return the path to the node with the given value using DFS\n    function findPath(value, node) {\n        if (value === node.value)\n            return [node];\n        try {\n            for (var _a = __values(node.children), _b = _a.next(); !_b.done; _b = _a.next()) {\n                var child = _b.value;\n                var path = findPath(value, child);\n                if (path.length) {\n                    path.unshift(node);\n                    return path;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return [];\n        var e_2, _c;\n    }\n    var TreeNode = /** @class */ (function () {\n        function TreeNode(value, children) {\n            this.value = value;\n            this.children = children;\n        }\n        TreeNode.prototype.toString = function () { return \"TreeNode(\" + this.value + \")\"; };\n        return TreeNode;\n    }());\n    // Return the list of T indexed by outlet name\n    function nodeChildrenAsMap(node) {\n        var map = {};\n        if (node) {\n            node.children.forEach(function (child) { return map[child.value.outlet] = child; });\n        }\n        return map;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents the state of the router.\n     *\n     * RouterState is a tree of activated routes. Every node in this tree knows about the \"consumed\" URL\n     * segments, the extracted parameters, and the resolved data.\n     *\n     * ### Example\n     *\n     * ```\n     * @Component({templateUrl:'template.html'})\n     * class MyComponent {\n     *   constructor(router: Router) {\n     *     const state: RouterState = router.routerState;\n     *     const root: ActivatedRoute = state.root;\n     *     const child = root.firstChild;\n     *     const id: Observable<string> = child.params.map(p => p.id);\n     *     //...\n     *   }\n     * }\n     * ```\n     *\n     * See `ActivatedRoute` for more information.\n     *\n     *\n     */\n    var  /**\n     * @description\n     *\n     * Represents the state of the router.\n     *\n     * RouterState is a tree of activated routes. Every node in this tree knows about the \"consumed\" URL\n     * segments, the extracted parameters, and the resolved data.\n     *\n     * ### Example\n     *\n     * ```\n     * @Component({templateUrl:'template.html'})\n     * class MyComponent {\n     *   constructor(router: Router) {\n     *     const state: RouterState = router.routerState;\n     *     const root: ActivatedRoute = state.root;\n     *     const child = root.firstChild;\n     *     const id: Observable<string> = child.params.map(p => p.id);\n     *     //...\n     *   }\n     * }\n     * ```\n     *\n     * See `ActivatedRoute` for more information.\n     *\n     *\n     */\n    RouterState = /** @class */ (function (_super) {\n        __extends(RouterState, _super);\n        /** @internal */\n        function RouterState(root, /** The current snapshot of the router state */\n        snapshot) {\n            var _this = _super.call(this, root) || this;\n            _this.snapshot = snapshot;\n            setRouterState(_this, root);\n            return _this;\n        }\n        RouterState.prototype.toString = function () { return this.snapshot.toString(); };\n        return RouterState;\n    }(Tree));\n    function createEmptyState(urlTree, rootComponent) {\n        var snapshot = createEmptyStateSnapshot(urlTree, rootComponent);\n        var emptyUrl = new rxjs.BehaviorSubject([new UrlSegment('', {})]);\n        var emptyParams = new rxjs.BehaviorSubject({});\n        var emptyData = new rxjs.BehaviorSubject({});\n        var emptyQueryParams = new rxjs.BehaviorSubject({});\n        var fragment = new rxjs.BehaviorSubject('');\n        var activated = new ActivatedRoute(emptyUrl, emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, snapshot.root);\n        activated.snapshot = snapshot.root;\n        return new RouterState(new TreeNode(activated, []), snapshot);\n    }\n    function createEmptyStateSnapshot(urlTree, rootComponent) {\n        var emptyParams = {};\n        var emptyData = {};\n        var emptyQueryParams = {};\n        var fragment = '';\n        var activated = new ActivatedRouteSnapshot([], emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, null, urlTree.root, -1, {});\n        return new RouterStateSnapshot('', new TreeNode(activated, []));\n    }\n    /**\n     * @description\n     *\n     * Contains the information about a route associated with a component loaded in an\n     * outlet.  An `ActivatedRoute` can also be used to traverse the router state tree.\n     *\n     * ```\n     * @Component({...})\n     * class MyComponent {\n     *   constructor(route: ActivatedRoute) {\n     *     const id: Observable<string> = route.params.map(p => p.id);\n     *     const url: Observable<string> = route.url.map(segments => segments.join(''));\n     *     // route.data includes both `data` and `resolve`\n     *     const user = route.data.map(d => d.user);\n     *   }\n     * }\n     * ```\n     *\n     *\n     */\n    var  /**\n     * @description\n     *\n     * Contains the information about a route associated with a component loaded in an\n     * outlet.  An `ActivatedRoute` can also be used to traverse the router state tree.\n     *\n     * ```\n     * @Component({...})\n     * class MyComponent {\n     *   constructor(route: ActivatedRoute) {\n     *     const id: Observable<string> = route.params.map(p => p.id);\n     *     const url: Observable<string> = route.url.map(segments => segments.join(''));\n     *     // route.data includes both `data` and `resolve`\n     *     const user = route.data.map(d => d.user);\n     *   }\n     * }\n     * ```\n     *\n     *\n     */\n    ActivatedRoute = /** @class */ (function () {\n        /** @internal */\n        function ActivatedRoute(/** An observable of the URL segments matched by this route */\n        url, /** An observable of the matrix parameters scoped to this route */\n        params, /** An observable of the query parameters shared by all the routes */\n        queryParams, /** An observable of the URL fragment shared by all the routes */\n        fragment, /** An observable of the static and resolved data of this route. */\n        data, /** The outlet name of the route. It's a constant */\n        outlet, /** The component of the route. It's a constant */\n        // TODO(vsavkin): remove |string\n        component, futureSnapshot) {\n            this.url = url;\n            this.params = params;\n            this.queryParams = queryParams;\n            this.fragment = fragment;\n            this.data = data;\n            this.outlet = outlet;\n            this.component = component;\n            this._futureSnapshot = futureSnapshot;\n        }\n        Object.defineProperty(ActivatedRoute.prototype, \"routeConfig\", {\n            /** The configuration used to match this route */\n            get: /** The configuration used to match this route */\n            function () { return this._futureSnapshot.routeConfig; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRoute.prototype, \"root\", {\n            /** The root of the router state */\n            get: /** The root of the router state */\n            function () { return this._routerState.root; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRoute.prototype, \"parent\", {\n            /** The parent of this route in the router state tree */\n            get: /** The parent of this route in the router state tree */\n            function () { return this._routerState.parent(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRoute.prototype, \"firstChild\", {\n            /** The first child of this route in the router state tree */\n            get: /** The first child of this route in the router state tree */\n            function () { return this._routerState.firstChild(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRoute.prototype, \"children\", {\n            /** The children of this route in the router state tree */\n            get: /** The children of this route in the router state tree */\n            function () { return this._routerState.children(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRoute.prototype, \"pathFromRoot\", {\n            /** The path from the root of the router state tree to this route */\n            get: /** The path from the root of the router state tree to this route */\n            function () { return this._routerState.pathFromRoot(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRoute.prototype, \"paramMap\", {\n            get: function () {\n                if (!this._paramMap) {\n                    this._paramMap = this.params.pipe(operators.map(function (p) { return convertToParamMap(p); }));\n                }\n                return this._paramMap;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRoute.prototype, \"queryParamMap\", {\n            get: function () {\n                if (!this._queryParamMap) {\n                    this._queryParamMap =\n                        this.queryParams.pipe(operators.map(function (p) { return convertToParamMap(p); }));\n                }\n                return this._queryParamMap;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ActivatedRoute.prototype.toString = function () {\n            return this.snapshot ? this.snapshot.toString() : \"Future(\" + this._futureSnapshot + \")\";\n        };\n        return ActivatedRoute;\n    }());\n    /**\n     * Returns the inherited params, data, and resolve for a given route.\n     * By default, this only inherits values up to the nearest path-less or component-less route.\n     * @internal\n     */\n    function inheritedParamsDataResolve(route, paramsInheritanceStrategy) {\n        if (paramsInheritanceStrategy === void 0) { paramsInheritanceStrategy = 'emptyOnly'; }\n        var pathFromRoot = route.pathFromRoot;\n        var inheritingStartingFrom = 0;\n        if (paramsInheritanceStrategy !== 'always') {\n            inheritingStartingFrom = pathFromRoot.length - 1;\n            while (inheritingStartingFrom >= 1) {\n                var current = pathFromRoot[inheritingStartingFrom];\n                var parent_1 = pathFromRoot[inheritingStartingFrom - 1];\n                // current route is an empty path => inherits its parent's params and data\n                if (current.routeConfig && current.routeConfig.path === '') {\n                    inheritingStartingFrom--;\n                    // parent is componentless => current route should inherit its params and data\n                }\n                else if (!parent_1.component) {\n                    inheritingStartingFrom--;\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return flattenInherited(pathFromRoot.slice(inheritingStartingFrom));\n    }\n    /** @internal */\n    function flattenInherited(pathFromRoot) {\n        return pathFromRoot.reduce(function (res, curr) {\n            var params = __assign({}, res.params, curr.params);\n            var data = __assign({}, res.data, curr.data);\n            var resolve = __assign({}, res.resolve, curr._resolvedData);\n            return { params: params, data: data, resolve: resolve };\n        }, { params: {}, data: {}, resolve: {} });\n    }\n    /**\n     * @description\n     *\n     * Contains the information about a route associated with a component loaded in an\n     * outlet at a particular moment in time. ActivatedRouteSnapshot can also be used to\n     * traverse the router state tree.\n     *\n     * ```\n     * @Component({templateUrl:'./my-component.html'})\n     * class MyComponent {\n     *   constructor(route: ActivatedRoute) {\n     *     const id: string = route.snapshot.params.id;\n     *     const url: string = route.snapshot.url.join('');\n     *     const user = route.snapshot.data.user;\n     *   }\n     * }\n     * ```\n     *\n     *\n     */\n    var  /**\n     * @description\n     *\n     * Contains the information about a route associated with a component loaded in an\n     * outlet at a particular moment in time. ActivatedRouteSnapshot can also be used to\n     * traverse the router state tree.\n     *\n     * ```\n     * @Component({templateUrl:'./my-component.html'})\n     * class MyComponent {\n     *   constructor(route: ActivatedRoute) {\n     *     const id: string = route.snapshot.params.id;\n     *     const url: string = route.snapshot.url.join('');\n     *     const user = route.snapshot.data.user;\n     *   }\n     * }\n     * ```\n     *\n     *\n     */\n    ActivatedRouteSnapshot = /** @class */ (function () {\n        /** @internal */\n        function ActivatedRouteSnapshot(/** The URL segments matched by this route */\n        url, /** The matrix parameters scoped to this route */\n        params, /** The query parameters shared by all the routes */\n        queryParams, /** The URL fragment shared by all the routes */\n        fragment, /** The static and resolved data of this route */\n        data, /** The outlet name of the route */\n        outlet, /** The component of the route */\n        component, routeConfig, urlSegment, lastPathIndex, resolve) {\n            this.url = url;\n            this.params = params;\n            this.queryParams = queryParams;\n            this.fragment = fragment;\n            this.data = data;\n            this.outlet = outlet;\n            this.component = component;\n            this.routeConfig = routeConfig;\n            this._urlSegment = urlSegment;\n            this._lastPathIndex = lastPathIndex;\n            this._resolve = resolve;\n        }\n        Object.defineProperty(ActivatedRouteSnapshot.prototype, \"root\", {\n            /** The root of the router state */\n            get: /** The root of the router state */\n            function () { return this._routerState.root; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRouteSnapshot.prototype, \"parent\", {\n            /** The parent of this route in the router state tree */\n            get: /** The parent of this route in the router state tree */\n            function () { return this._routerState.parent(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRouteSnapshot.prototype, \"firstChild\", {\n            /** The first child of this route in the router state tree */\n            get: /** The first child of this route in the router state tree */\n            function () { return this._routerState.firstChild(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRouteSnapshot.prototype, \"children\", {\n            /** The children of this route in the router state tree */\n            get: /** The children of this route in the router state tree */\n            function () { return this._routerState.children(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRouteSnapshot.prototype, \"pathFromRoot\", {\n            /** The path from the root of the router state tree to this route */\n            get: /** The path from the root of the router state tree to this route */\n            function () { return this._routerState.pathFromRoot(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRouteSnapshot.prototype, \"paramMap\", {\n            get: function () {\n                if (!this._paramMap) {\n                    this._paramMap = convertToParamMap(this.params);\n                }\n                return this._paramMap;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRouteSnapshot.prototype, \"queryParamMap\", {\n            get: function () {\n                if (!this._queryParamMap) {\n                    this._queryParamMap = convertToParamMap(this.queryParams);\n                }\n                return this._queryParamMap;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ActivatedRouteSnapshot.prototype.toString = function () {\n            var url = this.url.map(function (segment) { return segment.toString(); }).join('/');\n            var matched = this.routeConfig ? this.routeConfig.path : '';\n            return \"Route(url:'\" + url + \"', path:'\" + matched + \"')\";\n        };\n        return ActivatedRouteSnapshot;\n    }());\n    /**\n     * @description\n     *\n     * Represents the state of the router at a moment in time.\n     *\n     * This is a tree of activated route snapshots. Every node in this tree knows about\n     * the \"consumed\" URL segments, the extracted parameters, and the resolved data.\n     *\n     * ### Example\n     *\n     * ```\n     * @Component({templateUrl:'template.html'})\n     * class MyComponent {\n     *   constructor(router: Router) {\n     *     const state: RouterState = router.routerState;\n     *     const snapshot: RouterStateSnapshot = state.snapshot;\n     *     const root: ActivatedRouteSnapshot = snapshot.root;\n     *     const child = root.firstChild;\n     *     const id: Observable<string> = child.params.map(p => p.id);\n     *     //...\n     *   }\n     * }\n     * ```\n     *\n     *\n     */\n    var  /**\n     * @description\n     *\n     * Represents the state of the router at a moment in time.\n     *\n     * This is a tree of activated route snapshots. Every node in this tree knows about\n     * the \"consumed\" URL segments, the extracted parameters, and the resolved data.\n     *\n     * ### Example\n     *\n     * ```\n     * @Component({templateUrl:'template.html'})\n     * class MyComponent {\n     *   constructor(router: Router) {\n     *     const state: RouterState = router.routerState;\n     *     const snapshot: RouterStateSnapshot = state.snapshot;\n     *     const root: ActivatedRouteSnapshot = snapshot.root;\n     *     const child = root.firstChild;\n     *     const id: Observable<string> = child.params.map(p => p.id);\n     *     //...\n     *   }\n     * }\n     * ```\n     *\n     *\n     */\n    RouterStateSnapshot = /** @class */ (function (_super) {\n        __extends(RouterStateSnapshot, _super);\n        /** @internal */\n        function RouterStateSnapshot(/** The url from which this snapshot was created */\n        url, root) {\n            var _this = _super.call(this, root) || this;\n            _this.url = url;\n            setRouterState(_this, root);\n            return _this;\n        }\n        RouterStateSnapshot.prototype.toString = function () { return serializeNode(this._root); };\n        return RouterStateSnapshot;\n    }(Tree));\n    function setRouterState(state, node) {\n        node.value._routerState = state;\n        node.children.forEach(function (c) { return setRouterState(state, c); });\n    }\n    function serializeNode(node) {\n        var c = node.children.length > 0 ? \" { \" + node.children.map(serializeNode).join(', ') + \" } \" : '';\n        return \"\" + node.value + c;\n    }\n    /**\n     * The expectation is that the activate route is created with the right set of parameters.\n     * So we push new values into the observables only when they are not the initial values.\n     * And we detect that by checking if the snapshot field is set.\n     */\n    function advanceActivatedRoute(route) {\n        if (route.snapshot) {\n            var currentSnapshot = route.snapshot;\n            var nextSnapshot = route._futureSnapshot;\n            route.snapshot = nextSnapshot;\n            if (!shallowEqual(currentSnapshot.queryParams, nextSnapshot.queryParams)) {\n                route.queryParams.next(nextSnapshot.queryParams);\n            }\n            if (currentSnapshot.fragment !== nextSnapshot.fragment) {\n                route.fragment.next(nextSnapshot.fragment);\n            }\n            if (!shallowEqual(currentSnapshot.params, nextSnapshot.params)) {\n                route.params.next(nextSnapshot.params);\n            }\n            if (!shallowEqualArrays(currentSnapshot.url, nextSnapshot.url)) {\n                route.url.next(nextSnapshot.url);\n            }\n            if (!shallowEqual(currentSnapshot.data, nextSnapshot.data)) {\n                route.data.next(nextSnapshot.data);\n            }\n        }\n        else {\n            route.snapshot = route._futureSnapshot;\n            // this is for resolved data\n            // this is for resolved data\n            route.data.next(route._futureSnapshot.data);\n        }\n    }\n    function equalParamsAndUrlSegments(a, b) {\n        var equalUrlParams = shallowEqual(a.params, b.params) && equalSegments(a.url, b.url);\n        var parentsMismatch = !a.parent !== !b.parent;\n        return equalUrlParams && !parentsMismatch &&\n            (!a.parent || equalParamsAndUrlSegments(a.parent, (b.parent)));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function createRouterState(routeReuseStrategy, curr, prevState) {\n        var root = createNode(routeReuseStrategy, curr._root, prevState ? prevState._root : undefined);\n        return new RouterState(root, curr);\n    }\n    function createNode(routeReuseStrategy, curr, prevState) {\n        // reuse an activated route that is currently displayed on the screen\n        if (prevState && routeReuseStrategy.shouldReuseRoute(curr.value, prevState.value.snapshot)) {\n            var value = prevState.value;\n            value._futureSnapshot = curr.value;\n            var children = createOrReuseChildren(routeReuseStrategy, curr, prevState);\n            return new TreeNode(value, children);\n            // retrieve an activated route that is used to be displayed, but is not currently displayed\n        }\n        else {\n            var detachedRouteHandle = routeReuseStrategy.retrieve(curr.value);\n            if (detachedRouteHandle) {\n                var tree = detachedRouteHandle.route;\n                setFutureSnapshotsOfActivatedRoutes(curr, tree);\n                return tree;\n            }\n            else {\n                var value = createActivatedRoute(curr.value);\n                var children = curr.children.map(function (c) { return createNode(routeReuseStrategy, c); });\n                return new TreeNode(value, children);\n            }\n        }\n    }\n    function setFutureSnapshotsOfActivatedRoutes(curr, result) {\n        if (curr.value.routeConfig !== result.value.routeConfig) {\n            throw new Error('Cannot reattach ActivatedRouteSnapshot created from a different route');\n        }\n        if (curr.children.length !== result.children.length) {\n            throw new Error('Cannot reattach ActivatedRouteSnapshot with a different number of children');\n        }\n        result.value._futureSnapshot = curr.value;\n        for (var i = 0; i < curr.children.length; ++i) {\n            setFutureSnapshotsOfActivatedRoutes(curr.children[i], result.children[i]);\n        }\n    }\n    function createOrReuseChildren(routeReuseStrategy, curr, prevState) {\n        return curr.children.map(function (child) {\n            try {\n                for (var _a = __values(prevState.children), _b = _a.next(); !_b.done; _b = _a.next()) {\n                    var p = _b.value;\n                    if (routeReuseStrategy.shouldReuseRoute(p.value.snapshot, child.value)) {\n                        return createNode(routeReuseStrategy, child, p);\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            return createNode(routeReuseStrategy, child);\n            var e_1, _c;\n        });\n    }\n    function createActivatedRoute(c) {\n        return new ActivatedRoute(new rxjs.BehaviorSubject(c.url), new rxjs.BehaviorSubject(c.params), new rxjs.BehaviorSubject(c.queryParams), new rxjs.BehaviorSubject(c.fragment), new rxjs.BehaviorSubject(c.data), c.outlet, c.component, c);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function createUrlTree(route, urlTree, commands, queryParams, fragment) {\n        if (commands.length === 0) {\n            return tree(urlTree.root, urlTree.root, urlTree, queryParams, fragment);\n        }\n        var nav = computeNavigation(commands);\n        if (nav.toRoot()) {\n            return tree(urlTree.root, new UrlSegmentGroup([], {}), urlTree, queryParams, fragment);\n        }\n        var startingPosition = findStartingPosition(nav, urlTree, route);\n        var segmentGroup = startingPosition.processChildren ?\n            updateSegmentGroupChildren(startingPosition.segmentGroup, startingPosition.index, nav.commands) :\n            updateSegmentGroup(startingPosition.segmentGroup, startingPosition.index, nav.commands);\n        return tree(startingPosition.segmentGroup, segmentGroup, urlTree, queryParams, fragment);\n    }\n    function isMatrixParams(command) {\n        return typeof command === 'object' && command != null && !command.outlets && !command.segmentPath;\n    }\n    function tree(oldSegmentGroup, newSegmentGroup, urlTree, queryParams, fragment) {\n        var qp = {};\n        if (queryParams) {\n            forEach(queryParams, function (value, name) {\n                qp[name] = Array.isArray(value) ? value.map(function (v) { return \"\" + v; }) : \"\" + value;\n            });\n        }\n        if (urlTree.root === oldSegmentGroup) {\n            return new UrlTree(newSegmentGroup, qp, fragment);\n        }\n        return new UrlTree(replaceSegment(urlTree.root, oldSegmentGroup, newSegmentGroup), qp, fragment);\n    }\n    function replaceSegment(current, oldSegment, newSegment) {\n        var children = {};\n        forEach(current.children, function (c, outletName) {\n            if (c === oldSegment) {\n                children[outletName] = newSegment;\n            }\n            else {\n                children[outletName] = replaceSegment(c, oldSegment, newSegment);\n            }\n        });\n        return new UrlSegmentGroup(current.segments, children);\n    }\n    var Navigation = /** @class */ (function () {\n        function Navigation(isAbsolute, numberOfDoubleDots, commands) {\n            this.isAbsolute = isAbsolute;\n            this.numberOfDoubleDots = numberOfDoubleDots;\n            this.commands = commands;\n            if (isAbsolute && commands.length > 0 && isMatrixParams(commands[0])) {\n                throw new Error('Root segment cannot have matrix parameters');\n            }\n            var cmdWithOutlet = commands.find(function (c) { return typeof c === 'object' && c != null && c.outlets; });\n            if (cmdWithOutlet && cmdWithOutlet !== last(commands)) {\n                throw new Error('{outlets:{}} has to be the last command');\n            }\n        }\n        Navigation.prototype.toRoot = function () {\n            return this.isAbsolute && this.commands.length === 1 && this.commands[0] == '/';\n        };\n        return Navigation;\n    }());\n    /** Transforms commands to a normalized `Navigation` */\n    function computeNavigation(commands) {\n        if ((typeof commands[0] === 'string') && commands.length === 1 && commands[0] === '/') {\n            return new Navigation(true, 0, commands);\n        }\n        var numberOfDoubleDots = 0;\n        var isAbsolute = false;\n        var res = commands.reduce(function (res, cmd, cmdIdx) {\n            if (typeof cmd === 'object' && cmd != null) {\n                if (cmd.outlets) {\n                    var outlets_1 = {};\n                    forEach(cmd.outlets, function (commands, name) {\n                        outlets_1[name] = typeof commands === 'string' ? commands.split('/') : commands;\n                    });\n                    return __spread(res, [{ outlets: outlets_1 }]);\n                }\n                if (cmd.segmentPath) {\n                    return __spread(res, [cmd.segmentPath]);\n                }\n            }\n            if (!(typeof cmd === 'string')) {\n                return __spread(res, [cmd]);\n            }\n            if (cmdIdx === 0) {\n                cmd.split('/').forEach(function (urlPart, partIndex) {\n                    if (partIndex == 0 && urlPart === '.') ;\n                    else if (partIndex == 0 && urlPart === '') {\n                        //  '/a'\n                        isAbsolute = true;\n                    }\n                    else if (urlPart === '..') {\n                        //  '../a'\n                        numberOfDoubleDots++;\n                    }\n                    else if (urlPart != '') {\n                        res.push(urlPart);\n                    }\n                });\n                return res;\n            }\n            return __spread(res, [cmd]);\n        }, []);\n        return new Navigation(isAbsolute, numberOfDoubleDots, res);\n    }\n    var Position = /** @class */ (function () {\n        function Position(segmentGroup, processChildren, index) {\n            this.segmentGroup = segmentGroup;\n            this.processChildren = processChildren;\n            this.index = index;\n        }\n        return Position;\n    }());\n    function findStartingPosition(nav, tree, route) {\n        if (nav.isAbsolute) {\n            return new Position(tree.root, true, 0);\n        }\n        if (route.snapshot._lastPathIndex === -1) {\n            return new Position(route.snapshot._urlSegment, true, 0);\n        }\n        var modifier = isMatrixParams(nav.commands[0]) ? 0 : 1;\n        var index = route.snapshot._lastPathIndex + modifier;\n        return createPositionApplyingDoubleDots(route.snapshot._urlSegment, index, nav.numberOfDoubleDots);\n    }\n    function createPositionApplyingDoubleDots(group, index, numberOfDoubleDots) {\n        var g = group;\n        var ci = index;\n        var dd = numberOfDoubleDots;\n        while (dd > ci) {\n            dd -= ci;\n            g = (g.parent);\n            if (!g) {\n                throw new Error('Invalid number of \\'../\\'');\n            }\n            ci = g.segments.length;\n        }\n        return new Position(g, false, ci - dd);\n    }\n    function getPath(command) {\n        if (typeof command === 'object' && command != null && command.outlets) {\n            return command.outlets[PRIMARY_OUTLET];\n        }\n        return \"\" + command;\n    }\n    function getOutlets(commands) {\n        if (!(typeof commands[0] === 'object'))\n            return _a = {}, _a[PRIMARY_OUTLET] = commands, _a;\n        if (commands[0].outlets === undefined)\n            return _b = {}, _b[PRIMARY_OUTLET] = commands, _b;\n        return commands[0].outlets;\n        var _a, _b;\n    }\n    function updateSegmentGroup(segmentGroup, startIndex, commands) {\n        if (!segmentGroup) {\n            segmentGroup = new UrlSegmentGroup([], {});\n        }\n        if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n            return updateSegmentGroupChildren(segmentGroup, startIndex, commands);\n        }\n        var m = prefixedWith(segmentGroup, startIndex, commands);\n        var slicedCommands = commands.slice(m.commandIndex);\n        if (m.match && m.pathIndex < segmentGroup.segments.length) {\n            var g = new UrlSegmentGroup(segmentGroup.segments.slice(0, m.pathIndex), {});\n            g.children[PRIMARY_OUTLET] =\n                new UrlSegmentGroup(segmentGroup.segments.slice(m.pathIndex), segmentGroup.children);\n            return updateSegmentGroupChildren(g, 0, slicedCommands);\n        }\n        else if (m.match && slicedCommands.length === 0) {\n            return new UrlSegmentGroup(segmentGroup.segments, {});\n        }\n        else if (m.match && !segmentGroup.hasChildren()) {\n            return createNewSegmentGroup(segmentGroup, startIndex, commands);\n        }\n        else if (m.match) {\n            return updateSegmentGroupChildren(segmentGroup, 0, slicedCommands);\n        }\n        else {\n            return createNewSegmentGroup(segmentGroup, startIndex, commands);\n        }\n    }\n    function updateSegmentGroupChildren(segmentGroup, startIndex, commands) {\n        if (commands.length === 0) {\n            return new UrlSegmentGroup(segmentGroup.segments, {});\n        }\n        else {\n            var outlets_2 = getOutlets(commands);\n            var children_1 = {};\n            forEach(outlets_2, function (commands, outlet) {\n                if (commands !== null) {\n                    children_1[outlet] = updateSegmentGroup(segmentGroup.children[outlet], startIndex, commands);\n                }\n            });\n            forEach(segmentGroup.children, function (child, childOutlet) {\n                if (outlets_2[childOutlet] === undefined) {\n                    children_1[childOutlet] = child;\n                }\n            });\n            return new UrlSegmentGroup(segmentGroup.segments, children_1);\n        }\n    }\n    function prefixedWith(segmentGroup, startIndex, commands) {\n        var currentCommandIndex = 0;\n        var currentPathIndex = startIndex;\n        var noMatch = { match: false, pathIndex: 0, commandIndex: 0 };\n        while (currentPathIndex < segmentGroup.segments.length) {\n            if (currentCommandIndex >= commands.length)\n                return noMatch;\n            var path = segmentGroup.segments[currentPathIndex];\n            var curr = getPath(commands[currentCommandIndex]);\n            var next = currentCommandIndex < commands.length - 1 ? commands[currentCommandIndex + 1] : null;\n            if (currentPathIndex > 0 && curr === undefined)\n                break;\n            if (curr && next && (typeof next === 'object') && next.outlets === undefined) {\n                if (!compare(curr, next, path))\n                    return noMatch;\n                currentCommandIndex += 2;\n            }\n            else {\n                if (!compare(curr, {}, path))\n                    return noMatch;\n                currentCommandIndex++;\n            }\n            currentPathIndex++;\n        }\n        return { match: true, pathIndex: currentPathIndex, commandIndex: currentCommandIndex };\n    }\n    function createNewSegmentGroup(segmentGroup, startIndex, commands) {\n        var paths = segmentGroup.segments.slice(0, startIndex);\n        var i = 0;\n        while (i < commands.length) {\n            if (typeof commands[i] === 'object' && commands[i].outlets !== undefined) {\n                var children = createNewSegmentChildren(commands[i].outlets);\n                return new UrlSegmentGroup(paths, children);\n            }\n            // if we start with an object literal, we need to reuse the path part from the segment\n            if (i === 0 && isMatrixParams(commands[0])) {\n                var p = segmentGroup.segments[startIndex];\n                paths.push(new UrlSegment(p.path, commands[0]));\n                i++;\n                continue;\n            }\n            var curr = getPath(commands[i]);\n            var next = (i < commands.length - 1) ? commands[i + 1] : null;\n            if (curr && next && isMatrixParams(next)) {\n                paths.push(new UrlSegment(curr, stringify(next)));\n                i += 2;\n            }\n            else {\n                paths.push(new UrlSegment(curr, {}));\n                i++;\n            }\n        }\n        return new UrlSegmentGroup(paths, {});\n    }\n    function createNewSegmentChildren(outlets) {\n        var children = {};\n        forEach(outlets, function (commands, outlet) {\n            if (commands !== null) {\n                children[outlet] = createNewSegmentGroup(new UrlSegmentGroup([], {}), 0, commands);\n            }\n        });\n        return children;\n    }\n    function stringify(params) {\n        var res = {};\n        forEach(params, function (v, k) { return res[k] = \"\" + v; });\n        return res;\n    }\n    function compare(path, params, segment) {\n        return path == segment.path && shallowEqual(params, segment.parameters);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var CanActivate = /** @class */ (function () {\n        function CanActivate(path) {\n            this.path = path;\n            this.route = this.path[this.path.length - 1];\n        }\n        return CanActivate;\n    }());\n    var CanDeactivate = /** @class */ (function () {\n        function CanDeactivate(component, route) {\n            this.component = component;\n            this.route = route;\n        }\n        return CanDeactivate;\n    }());\n    /**\n     * This class bundles the actions involved in preactivation of a route.\n     */\n    var /**\n     * This class bundles the actions involved in preactivation of a route.\n     */\n    PreActivation = /** @class */ (function () {\n        function PreActivation(future, curr, moduleInjector, forwardEvent) {\n            this.future = future;\n            this.curr = curr;\n            this.moduleInjector = moduleInjector;\n            this.forwardEvent = forwardEvent;\n            this.canActivateChecks = [];\n            this.canDeactivateChecks = [];\n        }\n        PreActivation.prototype.initialize = function (parentContexts) {\n            var futureRoot = this.future._root;\n            var currRoot = this.curr ? this.curr._root : null;\n            this.setupChildRouteGuards(futureRoot, currRoot, parentContexts, [futureRoot.value]);\n        };\n        PreActivation.prototype.checkGuards = function () {\n            var _this = this;\n            if (!this.isDeactivating() && !this.isActivating()) {\n                return rxjs.of(true);\n            }\n            var canDeactivate$ = this.runCanDeactivateChecks();\n            return canDeactivate$.pipe(operators.mergeMap(function (canDeactivate) { return canDeactivate ? _this.runCanActivateChecks() : rxjs.of(false); }));\n        };\n        PreActivation.prototype.resolveData = function (paramsInheritanceStrategy) {\n            var _this = this;\n            if (!this.isActivating())\n                return rxjs.of(null);\n            return rxjs.from(this.canActivateChecks)\n                .pipe(operators.concatMap(function (check) { return _this.runResolve(check.route, paramsInheritanceStrategy); }), operators.reduce(function (_, __) { return _; }));\n        };\n        PreActivation.prototype.isDeactivating = function () { return this.canDeactivateChecks.length !== 0; };\n        PreActivation.prototype.isActivating = function () { return this.canActivateChecks.length !== 0; };\n        /**\n         * Iterates over child routes and calls recursive `setupRouteGuards` to get `this` instance in\n         * proper state to run `checkGuards()` method.\n         */\n        /**\n           * Iterates over child routes and calls recursive `setupRouteGuards` to get `this` instance in\n           * proper state to run `checkGuards()` method.\n           */\n        PreActivation.prototype.setupChildRouteGuards = /**\n           * Iterates over child routes and calls recursive `setupRouteGuards` to get `this` instance in\n           * proper state to run `checkGuards()` method.\n           */\n        function (futureNode, currNode, contexts, futurePath) {\n            var _this = this;\n            var prevChildren = nodeChildrenAsMap(currNode);\n            // Process the children of the future route\n            futureNode.children.forEach(function (c) {\n                _this.setupRouteGuards(c, prevChildren[c.value.outlet], contexts, futurePath.concat([c.value]));\n                delete prevChildren[c.value.outlet];\n            });\n            // Process any children left from the current route (not active for the future route)\n            forEach(prevChildren, function (v, k) {\n                return _this.deactivateRouteAndItsChildren(v, contexts.getContext(k));\n            });\n        };\n        /**\n         * Iterates over child routes and calls recursive `setupRouteGuards` to get `this` instance in\n         * proper state to run `checkGuards()` method.\n         */\n        /**\n           * Iterates over child routes and calls recursive `setupRouteGuards` to get `this` instance in\n           * proper state to run `checkGuards()` method.\n           */\n        PreActivation.prototype.setupRouteGuards = /**\n           * Iterates over child routes and calls recursive `setupRouteGuards` to get `this` instance in\n           * proper state to run `checkGuards()` method.\n           */\n        function (futureNode, currNode, parentContexts, futurePath) {\n            var future = futureNode.value;\n            var curr = currNode ? currNode.value : null;\n            var context = parentContexts ? parentContexts.getContext(futureNode.value.outlet) : null;\n            // reusing the node\n            if (curr && future.routeConfig === curr.routeConfig) {\n                var shouldRunGuardsAndResolvers = this.shouldRunGuardsAndResolvers(curr, future, future.routeConfig.runGuardsAndResolvers);\n                if (shouldRunGuardsAndResolvers) {\n                    this.canActivateChecks.push(new CanActivate(futurePath));\n                }\n                else {\n                    // we need to set the data\n                    future.data = curr.data;\n                    future._resolvedData = curr._resolvedData;\n                }\n                // If we have a component, we need to go through an outlet.\n                if (future.component) {\n                    this.setupChildRouteGuards(futureNode, currNode, context ? context.children : null, futurePath);\n                    // if we have a componentless route, we recurse but keep the same outlet map.\n                }\n                else {\n                    this.setupChildRouteGuards(futureNode, currNode, parentContexts, futurePath);\n                }\n                if (shouldRunGuardsAndResolvers) {\n                    var outlet = (context.outlet);\n                    this.canDeactivateChecks.push(new CanDeactivate(outlet.component, curr));\n                }\n            }\n            else {\n                if (curr) {\n                    this.deactivateRouteAndItsChildren(currNode, context);\n                }\n                this.canActivateChecks.push(new CanActivate(futurePath));\n                // If we have a component, we need to go through an outlet.\n                if (future.component) {\n                    this.setupChildRouteGuards(futureNode, null, context ? context.children : null, futurePath);\n                    // if we have a componentless route, we recurse but keep the same outlet map.\n                }\n                else {\n                    this.setupChildRouteGuards(futureNode, null, parentContexts, futurePath);\n                }\n            }\n        };\n        PreActivation.prototype.shouldRunGuardsAndResolvers = function (curr, future, mode) {\n            switch (mode) {\n                case 'always':\n                    return true;\n                case 'paramsOrQueryParamsChange':\n                    return !equalParamsAndUrlSegments(curr, future) ||\n                        !shallowEqual(curr.queryParams, future.queryParams);\n                case 'paramsChange':\n                default:\n                    return !equalParamsAndUrlSegments(curr, future);\n            }\n        };\n        PreActivation.prototype.deactivateRouteAndItsChildren = function (route, context) {\n            var _this = this;\n            var children = nodeChildrenAsMap(route);\n            var r = route.value;\n            forEach(children, function (node, childName) {\n                if (!r.component) {\n                    _this.deactivateRouteAndItsChildren(node, context);\n                }\n                else if (context) {\n                    _this.deactivateRouteAndItsChildren(node, context.children.getContext(childName));\n                }\n                else {\n                    _this.deactivateRouteAndItsChildren(node, null);\n                }\n            });\n            if (!r.component) {\n                this.canDeactivateChecks.push(new CanDeactivate(null, r));\n            }\n            else if (context && context.outlet && context.outlet.isActivated) {\n                this.canDeactivateChecks.push(new CanDeactivate(context.outlet.component, r));\n            }\n            else {\n                this.canDeactivateChecks.push(new CanDeactivate(null, r));\n            }\n        };\n        PreActivation.prototype.runCanDeactivateChecks = function () {\n            var _this = this;\n            return rxjs.from(this.canDeactivateChecks)\n                .pipe(operators.mergeMap(function (check) { return _this.runCanDeactivate(check.component, check.route); }), operators.every(function (result) { return result === true; }));\n        };\n        PreActivation.prototype.runCanActivateChecks = function () {\n            var _this = this;\n            return rxjs.from(this.canActivateChecks)\n                .pipe(operators.concatMap(function (check) {\n                return andObservables(rxjs.from([\n                    _this.fireChildActivationStart(check.route.parent),\n                    _this.fireActivationStart(check.route), _this.runCanActivateChild(check.path),\n                    _this.runCanActivate(check.route)\n                ]));\n            }), operators.every(function (result) { return result === true; }));\n            // this.fireChildActivationStart(check.path),\n        };\n        /**\n         * This should fire off `ActivationStart` events for each route being activated at this\n         * level.\n         * In other words, if you're activating `a` and `b` below, `path` will contain the\n         * `ActivatedRouteSnapshot`s for both and we will fire `ActivationStart` for both. Always\n         * return\n         * `true` so checks continue to run.\n         */\n        /**\n           * This should fire off `ActivationStart` events for each route being activated at this\n           * level.\n           * In other words, if you're activating `a` and `b` below, `path` will contain the\n           * `ActivatedRouteSnapshot`s for both and we will fire `ActivationStart` for both. Always\n           * return\n           * `true` so checks continue to run.\n           */\n        PreActivation.prototype.fireActivationStart = /**\n           * This should fire off `ActivationStart` events for each route being activated at this\n           * level.\n           * In other words, if you're activating `a` and `b` below, `path` will contain the\n           * `ActivatedRouteSnapshot`s for both and we will fire `ActivationStart` for both. Always\n           * return\n           * `true` so checks continue to run.\n           */\n        function (snapshot) {\n            if (snapshot !== null && this.forwardEvent) {\n                this.forwardEvent(new ActivationStart(snapshot));\n            }\n            return rxjs.of(true);\n        };\n        /**\n         * This should fire off `ChildActivationStart` events for each route being activated at this\n         * level.\n         * In other words, if you're activating `a` and `b` below, `path` will contain the\n         * `ActivatedRouteSnapshot`s for both and we will fire `ChildActivationStart` for both. Always\n         * return\n         * `true` so checks continue to run.\n         */\n        /**\n           * This should fire off `ChildActivationStart` events for each route being activated at this\n           * level.\n           * In other words, if you're activating `a` and `b` below, `path` will contain the\n           * `ActivatedRouteSnapshot`s for both and we will fire `ChildActivationStart` for both. Always\n           * return\n           * `true` so checks continue to run.\n           */\n        PreActivation.prototype.fireChildActivationStart = /**\n           * This should fire off `ChildActivationStart` events for each route being activated at this\n           * level.\n           * In other words, if you're activating `a` and `b` below, `path` will contain the\n           * `ActivatedRouteSnapshot`s for both and we will fire `ChildActivationStart` for both. Always\n           * return\n           * `true` so checks continue to run.\n           */\n        function (snapshot) {\n            if (snapshot !== null && this.forwardEvent) {\n                this.forwardEvent(new ChildActivationStart(snapshot));\n            }\n            return rxjs.of(true);\n        };\n        PreActivation.prototype.runCanActivate = function (future) {\n            var _this = this;\n            var canActivate = future.routeConfig ? future.routeConfig.canActivate : null;\n            if (!canActivate || canActivate.length === 0)\n                return rxjs.of(true);\n            var obs = rxjs.from(canActivate).pipe(operators.map(function (c) {\n                var guard = _this.getToken(c, future);\n                var observable;\n                if (guard.canActivate) {\n                    observable = wrapIntoObservable(guard.canActivate(future, _this.future));\n                }\n                else {\n                    observable = wrapIntoObservable(guard(future, _this.future));\n                }\n                return observable.pipe(operators.first());\n            }));\n            return andObservables(obs);\n        };\n        PreActivation.prototype.runCanActivateChild = function (path) {\n            var _this = this;\n            var future = path[path.length - 1];\n            var canActivateChildGuards = path.slice(0, path.length - 1)\n                .reverse()\n                .map(function (p) { return _this.extractCanActivateChild(p); })\n                .filter(function (_) { return _ !== null; });\n            return andObservables(rxjs.from(canActivateChildGuards).pipe(operators.map(function (d) {\n                var obs = rxjs.from(d.guards).pipe(operators.map(function (c) {\n                    var guard = _this.getToken(c, d.node);\n                    var observable;\n                    if (guard.canActivateChild) {\n                        observable = wrapIntoObservable(guard.canActivateChild(future, _this.future));\n                    }\n                    else {\n                        observable = wrapIntoObservable(guard(future, _this.future));\n                    }\n                    return observable.pipe(operators.first());\n                }));\n                return andObservables(obs);\n            })));\n        };\n        PreActivation.prototype.extractCanActivateChild = function (p) {\n            var canActivateChild = p.routeConfig ? p.routeConfig.canActivateChild : null;\n            if (!canActivateChild || canActivateChild.length === 0)\n                return null;\n            return { node: p, guards: canActivateChild };\n        };\n        PreActivation.prototype.runCanDeactivate = function (component, curr) {\n            var _this = this;\n            var canDeactivate = curr && curr.routeConfig ? curr.routeConfig.canDeactivate : null;\n            if (!canDeactivate || canDeactivate.length === 0)\n                return rxjs.of(true);\n            var canDeactivate$ = rxjs.from(canDeactivate).pipe(operators.mergeMap(function (c) {\n                var guard = _this.getToken(c, curr);\n                var observable;\n                if (guard.canDeactivate) {\n                    observable =\n                        wrapIntoObservable(guard.canDeactivate(component, curr, _this.curr, _this.future));\n                }\n                else {\n                    observable = wrapIntoObservable(guard(component, curr, _this.curr, _this.future));\n                }\n                return observable.pipe(operators.first());\n            }));\n            return canDeactivate$.pipe(operators.every(function (result) { return result === true; }));\n        };\n        PreActivation.prototype.runResolve = function (future, paramsInheritanceStrategy) {\n            var resolve = future._resolve;\n            return this.resolveNode(resolve, future).pipe(operators.map(function (resolvedData) {\n                future._resolvedData = resolvedData;\n                future.data = __assign({}, future.data, inheritedParamsDataResolve(future, paramsInheritanceStrategy).resolve);\n                return null;\n            }));\n        };\n        PreActivation.prototype.resolveNode = function (resolve, future) {\n            var _this = this;\n            var keys = Object.keys(resolve);\n            if (keys.length === 0) {\n                return rxjs.of({});\n            }\n            if (keys.length === 1) {\n                var key_1 = keys[0];\n                return this.getResolver(resolve[key_1], future).pipe(operators.map(function (value) {\n                    return _a = {}, _a[key_1] = value, _a;\n                    var _a;\n                }));\n            }\n            var data = {};\n            var runningResolvers$ = rxjs.from(keys).pipe(operators.mergeMap(function (key) {\n                return _this.getResolver(resolve[key], future).pipe(operators.map(function (value) {\n                    data[key] = value;\n                    return value;\n                }));\n            }));\n            return runningResolvers$.pipe(operators.last(), operators.map(function () { return data; }));\n        };\n        PreActivation.prototype.getResolver = function (injectionToken, future) {\n            var resolver = this.getToken(injectionToken, future);\n            return resolver.resolve ? wrapIntoObservable(resolver.resolve(future, this.future)) :\n                wrapIntoObservable(resolver(future, this.future));\n        };\n        PreActivation.prototype.getToken = function (token, snapshot) {\n            var config = closestLoadedConfig(snapshot);\n            var injector = config ? config.module.injector : this.moduleInjector;\n            return injector.get(token);\n        };\n        return PreActivation;\n    }());\n    function closestLoadedConfig(snapshot) {\n        if (!snapshot)\n            return null;\n        for (var s = snapshot.parent; s; s = s.parent) {\n            var route = s.routeConfig;\n            if (route && route._loadedConfig)\n                return route._loadedConfig;\n        }\n        return null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NoMatch$1 = /** @class */ (function () {\n        function NoMatch() {\n        }\n        return NoMatch;\n    }());\n    function recognize(rootComponentType, config, urlTree, url, paramsInheritanceStrategy) {\n        if (paramsInheritanceStrategy === void 0) { paramsInheritanceStrategy = 'emptyOnly'; }\n        return new Recognizer(rootComponentType, config, urlTree, url, paramsInheritanceStrategy)\n            .recognize();\n    }\n    var Recognizer = /** @class */ (function () {\n        function Recognizer(rootComponentType, config, urlTree, url, paramsInheritanceStrategy) {\n            this.rootComponentType = rootComponentType;\n            this.config = config;\n            this.urlTree = urlTree;\n            this.url = url;\n            this.paramsInheritanceStrategy = paramsInheritanceStrategy;\n        }\n        Recognizer.prototype.recognize = function () {\n            try {\n                var rootSegmentGroup = split$1(this.urlTree.root, [], [], this.config).segmentGroup;\n                var children = this.processSegmentGroup(this.config, rootSegmentGroup, PRIMARY_OUTLET);\n                var root = new ActivatedRouteSnapshot([], Object.freeze({}), Object.freeze(__assign({}, this.urlTree.queryParams)), (this.urlTree.fragment), {}, PRIMARY_OUTLET, this.rootComponentType, null, this.urlTree.root, -1, {});\n                var rootNode = new TreeNode(root, children);\n                var routeState = new RouterStateSnapshot(this.url, rootNode);\n                this.inheritParamsAndData(routeState._root);\n                return rxjs.of(routeState);\n            }\n            catch (e) {\n                return new rxjs.Observable(function (obs) { return obs.error(e); });\n            }\n        };\n        Recognizer.prototype.inheritParamsAndData = function (routeNode) {\n            var _this = this;\n            var route = routeNode.value;\n            var i = inheritedParamsDataResolve(route, this.paramsInheritanceStrategy);\n            route.params = Object.freeze(i.params);\n            route.data = Object.freeze(i.data);\n            routeNode.children.forEach(function (n) { return _this.inheritParamsAndData(n); });\n        };\n        Recognizer.prototype.processSegmentGroup = function (config, segmentGroup, outlet) {\n            if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n                return this.processChildren(config, segmentGroup);\n            }\n            return this.processSegment(config, segmentGroup, segmentGroup.segments, outlet);\n        };\n        Recognizer.prototype.processChildren = function (config, segmentGroup) {\n            var _this = this;\n            var children = mapChildrenIntoArray(segmentGroup, function (child, childOutlet) { return _this.processSegmentGroup(config, child, childOutlet); });\n            checkOutletNameUniqueness(children);\n            sortActivatedRouteSnapshots(children);\n            return children;\n        };\n        Recognizer.prototype.processSegment = function (config, segmentGroup, segments, outlet) {\n            try {\n                for (var config_1 = __values(config), config_1_1 = config_1.next(); !config_1_1.done; config_1_1 = config_1.next()) {\n                    var r = config_1_1.value;\n                    try {\n                        return this.processSegmentAgainstRoute(r, segmentGroup, segments, outlet);\n                    }\n                    catch (e) {\n                        if (!(e instanceof NoMatch$1))\n                            throw e;\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (config_1_1 && !config_1_1.done && (_a = config_1.return)) _a.call(config_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            if (this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n                return [];\n            }\n            throw new NoMatch$1();\n            var e_1, _a;\n        };\n        Recognizer.prototype.noLeftoversInUrl = function (segmentGroup, segments, outlet) {\n            return segments.length === 0 && !segmentGroup.children[outlet];\n        };\n        Recognizer.prototype.processSegmentAgainstRoute = function (route, rawSegment, segments, outlet) {\n            if (route.redirectTo)\n                throw new NoMatch$1();\n            if ((route.outlet || PRIMARY_OUTLET) !== outlet)\n                throw new NoMatch$1();\n            var snapshot;\n            var consumedSegments = [];\n            var rawSlicedSegments = [];\n            if (route.path === '**') {\n                var params = segments.length > 0 ? last(segments).parameters : {};\n                snapshot = new ActivatedRouteSnapshot(segments, params, Object.freeze(__assign({}, this.urlTree.queryParams)), (this.urlTree.fragment), getData(route), outlet, (route.component), route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + segments.length, getResolve(route));\n            }\n            else {\n                var result = match$1(rawSegment, route, segments);\n                consumedSegments = result.consumedSegments;\n                rawSlicedSegments = segments.slice(result.lastChild);\n                snapshot = new ActivatedRouteSnapshot(consumedSegments, result.parameters, Object.freeze(__assign({}, this.urlTree.queryParams)), (this.urlTree.fragment), getData(route), outlet, (route.component), route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + consumedSegments.length, getResolve(route));\n            }\n            var childConfig = getChildConfig(route);\n            var _a = split$1(rawSegment, consumedSegments, rawSlicedSegments, childConfig), segmentGroup = _a.segmentGroup, slicedSegments = _a.slicedSegments;\n            if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n                var children_1 = this.processChildren(childConfig, segmentGroup);\n                return [new TreeNode(snapshot, children_1)];\n            }\n            if (childConfig.length === 0 && slicedSegments.length === 0) {\n                return [new TreeNode(snapshot, [])];\n            }\n            var children = this.processSegment(childConfig, segmentGroup, slicedSegments, PRIMARY_OUTLET);\n            return [new TreeNode(snapshot, children)];\n        };\n        return Recognizer;\n    }());\n    function sortActivatedRouteSnapshots(nodes) {\n        nodes.sort(function (a, b) {\n            if (a.value.outlet === PRIMARY_OUTLET)\n                return -1;\n            if (b.value.outlet === PRIMARY_OUTLET)\n                return 1;\n            return a.value.outlet.localeCompare(b.value.outlet);\n        });\n    }\n    function getChildConfig(route) {\n        if (route.children) {\n            return route.children;\n        }\n        if (route.loadChildren) {\n            return route._loadedConfig.routes;\n        }\n        return [];\n    }\n    function match$1(segmentGroup, route, segments) {\n        if (route.path === '') {\n            if (route.pathMatch === 'full' && (segmentGroup.hasChildren() || segments.length > 0)) {\n                throw new NoMatch$1();\n            }\n            return { consumedSegments: [], lastChild: 0, parameters: {} };\n        }\n        var matcher = route.matcher || defaultUrlMatcher;\n        var res = matcher(segments, segmentGroup, route);\n        if (!res)\n            throw new NoMatch$1();\n        var posParams = {};\n        forEach((res.posParams), function (v, k) { posParams[k] = v.path; });\n        var parameters = res.consumed.length > 0 ? __assign({}, posParams, res.consumed[res.consumed.length - 1].parameters) :\n            posParams;\n        return { consumedSegments: res.consumed, lastChild: res.consumed.length, parameters: parameters };\n    }\n    function checkOutletNameUniqueness(nodes) {\n        var names = {};\n        nodes.forEach(function (n) {\n            var routeWithSameOutletName = names[n.value.outlet];\n            if (routeWithSameOutletName) {\n                var p = routeWithSameOutletName.url.map(function (s) { return s.toString(); }).join('/');\n                var c = n.value.url.map(function (s) { return s.toString(); }).join('/');\n                throw new Error(\"Two segments cannot have the same outlet name: '\" + p + \"' and '\" + c + \"'.\");\n            }\n            names[n.value.outlet] = n.value;\n        });\n    }\n    function getSourceSegmentGroup(segmentGroup) {\n        var s = segmentGroup;\n        while (s._sourceSegment) {\n            s = s._sourceSegment;\n        }\n        return s;\n    }\n    function getPathIndexShift(segmentGroup) {\n        var s = segmentGroup;\n        var res = (s._segmentIndexShift ? s._segmentIndexShift : 0);\n        while (s._sourceSegment) {\n            s = s._sourceSegment;\n            res += (s._segmentIndexShift ? s._segmentIndexShift : 0);\n        }\n        return res - 1;\n    }\n    function split$1(segmentGroup, consumedSegments, slicedSegments, config) {\n        if (slicedSegments.length > 0 &&\n            containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n            var s_1 = new UrlSegmentGroup(consumedSegments, createChildrenForEmptyPaths(segmentGroup, consumedSegments, config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n            s_1._sourceSegment = segmentGroup;\n            s_1._segmentIndexShift = consumedSegments.length;\n            return { segmentGroup: s_1, slicedSegments: [] };\n        }\n        if (slicedSegments.length === 0 &&\n            containsEmptyPathMatches(segmentGroup, slicedSegments, config)) {\n            var s_2 = new UrlSegmentGroup(segmentGroup.segments, addEmptyPathsToChildrenIfNeeded(segmentGroup, slicedSegments, config, segmentGroup.children));\n            s_2._sourceSegment = segmentGroup;\n            s_2._segmentIndexShift = consumedSegments.length;\n            return { segmentGroup: s_2, slicedSegments: slicedSegments };\n        }\n        var s = new UrlSegmentGroup(segmentGroup.segments, segmentGroup.children);\n        s._sourceSegment = segmentGroup;\n        s._segmentIndexShift = consumedSegments.length;\n        return { segmentGroup: s, slicedSegments: slicedSegments };\n    }\n    function addEmptyPathsToChildrenIfNeeded(segmentGroup, slicedSegments, routes, children) {\n        var res = {};\n        try {\n            for (var routes_1 = __values(routes), routes_1_1 = routes_1.next(); !routes_1_1.done; routes_1_1 = routes_1.next()) {\n                var r = routes_1_1.value;\n                if (emptyPathMatch(segmentGroup, slicedSegments, r) && !children[getOutlet$1(r)]) {\n                    var s = new UrlSegmentGroup([], {});\n                    s._sourceSegment = segmentGroup;\n                    s._segmentIndexShift = segmentGroup.segments.length;\n                    res[getOutlet$1(r)] = s;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (routes_1_1 && !routes_1_1.done && (_a = routes_1.return)) _a.call(routes_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return __assign({}, children, res);\n        var e_2, _a;\n    }\n    function createChildrenForEmptyPaths(segmentGroup, consumedSegments, routes, primarySegment) {\n        var res = {};\n        res[PRIMARY_OUTLET] = primarySegment;\n        primarySegment._sourceSegment = segmentGroup;\n        primarySegment._segmentIndexShift = consumedSegments.length;\n        try {\n            for (var routes_2 = __values(routes), routes_2_1 = routes_2.next(); !routes_2_1.done; routes_2_1 = routes_2.next()) {\n                var r = routes_2_1.value;\n                if (r.path === '' && getOutlet$1(r) !== PRIMARY_OUTLET) {\n                    var s = new UrlSegmentGroup([], {});\n                    s._sourceSegment = segmentGroup;\n                    s._segmentIndexShift = consumedSegments.length;\n                    res[getOutlet$1(r)] = s;\n                }\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (routes_2_1 && !routes_2_1.done && (_a = routes_2.return)) _a.call(routes_2);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n        return res;\n        var e_3, _a;\n    }\n    function containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, routes) {\n        return routes.some(function (r) { return emptyPathMatch(segmentGroup, slicedSegments, r) && getOutlet$1(r) !== PRIMARY_OUTLET; });\n    }\n    function containsEmptyPathMatches(segmentGroup, slicedSegments, routes) {\n        return routes.some(function (r) { return emptyPathMatch(segmentGroup, slicedSegments, r); });\n    }\n    function emptyPathMatch(segmentGroup, slicedSegments, r) {\n        if ((segmentGroup.hasChildren() || slicedSegments.length > 0) && r.pathMatch === 'full') {\n            return false;\n        }\n        return r.path === '' && r.redirectTo === undefined;\n    }\n    function getOutlet$1(route) {\n        return route.outlet || PRIMARY_OUTLET;\n    }\n    function getData(route) {\n        return route.data || {};\n    }\n    function getResolve(route) {\n        return route.resolve || {};\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Provides a way to customize when activated routes get reused.\n     *\n     * @experimental\n     */\n    var  /**\n     * @description\n     *\n     * Provides a way to customize when activated routes get reused.\n     *\n     * @experimental\n     */\n    RouteReuseStrategy = /** @class */ (function () {\n        function RouteReuseStrategy() {\n        }\n        return RouteReuseStrategy;\n    }());\n    /**\n     * Does not detach any subtrees. Reuses routes as long as their route config is the same.\n     */\n    var /**\n     * Does not detach any subtrees. Reuses routes as long as their route config is the same.\n     */\n    DefaultRouteReuseStrategy = /** @class */ (function () {\n        function DefaultRouteReuseStrategy() {\n        }\n        DefaultRouteReuseStrategy.prototype.shouldDetach = function (route) { return false; };\n        DefaultRouteReuseStrategy.prototype.store = function (route, detachedTree) { };\n        DefaultRouteReuseStrategy.prototype.shouldAttach = function (route) { return false; };\n        DefaultRouteReuseStrategy.prototype.retrieve = function (route) { return null; };\n        DefaultRouteReuseStrategy.prototype.shouldReuseRoute = function (future, curr) {\n            return future.routeConfig === curr.routeConfig;\n        };\n        return DefaultRouteReuseStrategy;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @docsNotRequired\n     * @experimental\n     */\n    var ROUTES = new core.InjectionToken('ROUTES');\n    var RouterConfigLoader = /** @class */ (function () {\n        function RouterConfigLoader(loader, compiler, onLoadStartListener, onLoadEndListener) {\n            this.loader = loader;\n            this.compiler = compiler;\n            this.onLoadStartListener = onLoadStartListener;\n            this.onLoadEndListener = onLoadEndListener;\n        }\n        RouterConfigLoader.prototype.load = function (parentInjector, route) {\n            var _this = this;\n            if (this.onLoadStartListener) {\n                this.onLoadStartListener(route);\n            }\n            var moduleFactory$ = this.loadModuleFactory((route.loadChildren));\n            return moduleFactory$.pipe(operators.map(function (factory) {\n                if (_this.onLoadEndListener) {\n                    _this.onLoadEndListener(route);\n                }\n                var module = factory.create(parentInjector);\n                return new LoadedRouterConfig(flatten(module.injector.get(ROUTES)).map(copyConfig), module);\n            }));\n        };\n        RouterConfigLoader.prototype.loadModuleFactory = function (loadChildren) {\n            var _this = this;\n            if (typeof loadChildren === 'string') {\n                return rxjs.from(this.loader.load(loadChildren));\n            }\n            else {\n                return wrapIntoObservable(loadChildren()).pipe(operators.mergeMap(function (t) {\n                    if (t instanceof core.NgModuleFactory) {\n                        return rxjs.of(t);\n                    }\n                    else {\n                        return rxjs.from(_this.compiler.compileModuleAsync(t));\n                    }\n                }));\n            }\n        };\n        return RouterConfigLoader;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Provides a way to migrate AngularJS applications to Angular.\n     *\n     * @experimental\n     */\n    var  /**\n     * @description\n     *\n     * Provides a way to migrate AngularJS applications to Angular.\n     *\n     * @experimental\n     */\n    UrlHandlingStrategy = /** @class */ (function () {\n        function UrlHandlingStrategy() {\n        }\n        return UrlHandlingStrategy;\n    }());\n    /**\n     * @experimental\n     */\n    var /**\n     * @experimental\n     */\n    DefaultUrlHandlingStrategy = /** @class */ (function () {\n        function DefaultUrlHandlingStrategy() {\n        }\n        DefaultUrlHandlingStrategy.prototype.shouldProcessUrl = function (url) { return true; };\n        DefaultUrlHandlingStrategy.prototype.extract = function (url) { return url; };\n        DefaultUrlHandlingStrategy.prototype.merge = function (newUrlPart, wholeUrl) { return newUrlPart; };\n        return DefaultUrlHandlingStrategy;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function defaultErrorHandler(error) {\n        throw error;\n    }\n    /**\n     * @internal\n     */\n    function defaultRouterHook(snapshot, runExtras) {\n        return rxjs.of(null);\n    }\n    /**\n     * @description\n     *\n     * Provides the navigation and url manipulation capabilities.\n     *\n     * See `Routes` for more details and examples.\n     *\n     * @ngModule RouterModule\n     *\n     *\n     */\n    var  /**\n     * @description\n     *\n     * Provides the navigation and url manipulation capabilities.\n     *\n     * See `Routes` for more details and examples.\n     *\n     * @ngModule RouterModule\n     *\n     *\n     */\n    Router = /** @class */ (function () {\n        /**\n         * Creates the router service.\n         */\n        // TODO: vsavkin make internal after the final is out.\n        function Router(rootComponentType, urlSerializer, rootContexts, location, injector, loader, compiler, config) {\n            var _this = this;\n            this.rootComponentType = rootComponentType;\n            this.urlSerializer = urlSerializer;\n            this.rootContexts = rootContexts;\n            this.location = location;\n            this.config = config;\n            this.navigations = new rxjs.BehaviorSubject((null));\n            this.navigationId = 0;\n            this.events = new rxjs.Subject();\n            /**\n               * Error handler that is invoked when a navigation errors.\n               *\n               * See `ErrorHandler` for more information.\n               */\n            this.errorHandler = defaultErrorHandler;\n            /**\n               * Indicates if at least one navigation happened.\n               */\n            this.navigated = false;\n            this.lastSuccessfulId = -1;\n            /**\n               * Used by RouterModule. This allows us to\n               * pause the navigation either before preactivation or after it.\n               * @internal\n               */\n            this.hooks = {\n                beforePreactivation: defaultRouterHook,\n                afterPreactivation: defaultRouterHook\n            };\n            /**\n               * Extracts and merges URLs. Used for AngularJS to Angular migrations.\n               */\n            this.urlHandlingStrategy = new DefaultUrlHandlingStrategy();\n            this.routeReuseStrategy = new DefaultRouteReuseStrategy();\n            /**\n               * Define what the router should do if it receives a navigation request to the current URL.\n               * By default, the router will ignore this navigation. However, this prevents features such\n               * as a \"refresh\" button. Use this option to configure the behavior when navigating to the\n               * current URL. Default is 'ignore'.\n               */\n            this.onSameUrlNavigation = 'ignore';\n            /**\n               * Defines how the router merges params, data and resolved data from parent to child\n               * routes. Available options are:\n               *\n               * - `'emptyOnly'`, the default, only inherits parent params for path-less or component-less\n               *   routes.\n               * - `'always'`, enables unconditional inheritance of parent params.\n               */\n            this.paramsInheritanceStrategy = 'emptyOnly';\n            var onLoadStart = function (r) { return _this.triggerEvent(new RouteConfigLoadStart(r)); };\n            var onLoadEnd = function (r) { return _this.triggerEvent(new RouteConfigLoadEnd(r)); };\n            this.ngModule = injector.get(core.NgModuleRef);\n            this.resetConfig(config);\n            this.currentUrlTree = createEmptyUrlTree();\n            this.rawUrlTree = this.currentUrlTree;\n            this.configLoader = new RouterConfigLoader(loader, compiler, onLoadStart, onLoadEnd);\n            this.routerState = createEmptyState(this.currentUrlTree, this.rootComponentType);\n            this.processNavigations();\n        }\n        /**\n         * @internal\n         * TODO: this should be removed once the constructor of the router made internal\n         */\n        /**\n           * @internal\n           * TODO: this should be removed once the constructor of the router made internal\n           */\n        Router.prototype.resetRootComponentType = /**\n           * @internal\n           * TODO: this should be removed once the constructor of the router made internal\n           */\n        function (rootComponentType) {\n            this.rootComponentType = rootComponentType;\n            // TODO: vsavkin router 4.0 should make the root component set to null\n            // this will simplify the lifecycle of the router.\n            this.routerState.root.component = this.rootComponentType;\n        };\n        /**\n         * Sets up the location change listener and performs the initial navigation.\n         */\n        /**\n           * Sets up the location change listener and performs the initial navigation.\n           */\n        Router.prototype.initialNavigation = /**\n           * Sets up the location change listener and performs the initial navigation.\n           */\n        function () {\n            this.setUpLocationChangeListener();\n            if (this.navigationId === 0) {\n                this.navigateByUrl(this.location.path(true), { replaceUrl: true });\n            }\n        };\n        /**\n         * Sets up the location change listener.\n         */\n        /**\n           * Sets up the location change listener.\n           */\n        Router.prototype.setUpLocationChangeListener = /**\n           * Sets up the location change listener.\n           */\n        function () {\n            var _this = this;\n            // Don't need to use Zone.wrap any more, because zone.js\n            // already patch onPopState, so location change callback will\n            // run into ngZone\n            if (!this.locationSubscription) {\n                this.locationSubscription = this.location.subscribe(function (change) {\n                    var rawUrlTree = _this.urlSerializer.parse(change['url']);\n                    var source = change['type'] === 'popstate' ? 'popstate' : 'hashchange';\n                    var state = change.state && change.state.navigationId ?\n                        { navigationId: change.state.navigationId } :\n                        null;\n                    setTimeout(function () { _this.scheduleNavigation(rawUrlTree, source, state, { replaceUrl: true }); }, 0);\n                });\n            }\n        };\n        Object.defineProperty(Router.prototype, \"url\", {\n            /** The current url */\n            get: /** The current url */\n            function () { return this.serializeUrl(this.currentUrlTree); },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        /** @internal */\n        Router.prototype.triggerEvent = /** @internal */\n        function (e) { this.events.next(e); };\n        /**\n         * Resets the configuration used for navigation and generating links.\n         *\n         * ### Usage\n         *\n         * ```\n         * router.resetConfig([\n         *  { path: 'team/:id', component: TeamCmp, children: [\n         *    { path: 'simple', component: SimpleCmp },\n         *    { path: 'user/:name', component: UserCmp }\n         *  ]}\n         * ]);\n         * ```\n         */\n        /**\n           * Resets the configuration used for navigation and generating links.\n           *\n           * ### Usage\n           *\n           * ```\n           * router.resetConfig([\n           *  { path: 'team/:id', component: TeamCmp, children: [\n           *    { path: 'simple', component: SimpleCmp },\n           *    { path: 'user/:name', component: UserCmp }\n           *  ]}\n           * ]);\n           * ```\n           */\n        Router.prototype.resetConfig = /**\n           * Resets the configuration used for navigation and generating links.\n           *\n           * ### Usage\n           *\n           * ```\n           * router.resetConfig([\n           *  { path: 'team/:id', component: TeamCmp, children: [\n           *    { path: 'simple', component: SimpleCmp },\n           *    { path: 'user/:name', component: UserCmp }\n           *  ]}\n           * ]);\n           * ```\n           */\n        function (config) {\n            validateConfig(config);\n            this.config = config.map(copyConfig);\n            this.navigated = false;\n            this.lastSuccessfulId = -1;\n        };\n        /** @docsNotRequired */\n        /** @docsNotRequired */\n        Router.prototype.ngOnDestroy = /** @docsNotRequired */\n        function () { this.dispose(); };\n        /** Disposes of the router */\n        /** Disposes of the router */\n        Router.prototype.dispose = /** Disposes of the router */\n        function () {\n            if (this.locationSubscription) {\n                this.locationSubscription.unsubscribe();\n                this.locationSubscription = (null);\n            }\n        };\n        /**\n         * Applies an array of commands to the current url tree and creates a new url tree.\n         *\n         * When given an activate route, applies the given commands starting from the route.\n         * When not given a route, applies the given command starting from the root.\n         *\n         * ### Usage\n         *\n         * ```\n         * // create /team/33/user/11\n         * router.createUrlTree(['/team', 33, 'user', 11]);\n         *\n         * // create /team/33;expand=true/user/11\n         * router.createUrlTree(['/team', 33, {expand: true}, 'user', 11]);\n         *\n         * // you can collapse static segments like this (this works only with the first passed-in value):\n         * router.createUrlTree(['/team/33/user', userId]);\n         *\n         * // If the first segment can contain slashes, and you do not want the router to split it, you\n         * // can do the following:\n         *\n         * router.createUrlTree([{segmentPath: '/one/two'}]);\n         *\n         * // create /team/33/(user/11//right:chat)\n         * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: 'chat'}}]);\n         *\n         * // remove the right secondary node\n         * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: null}}]);\n         *\n         * // assuming the current url is `/team/33/user/11` and the route points to `user/11`\n         *\n         * // navigate to /team/33/user/11/details\n         * router.createUrlTree(['details'], {relativeTo: route});\n         *\n         * // navigate to /team/33/user/22\n         * router.createUrlTree(['../22'], {relativeTo: route});\n         *\n         * // navigate to /team/44/user/22\n         * router.createUrlTree(['../../team/44/user/22'], {relativeTo: route});\n         * ```\n         */\n        /**\n           * Applies an array of commands to the current url tree and creates a new url tree.\n           *\n           * When given an activate route, applies the given commands starting from the route.\n           * When not given a route, applies the given command starting from the root.\n           *\n           * ### Usage\n           *\n           * ```\n           * // create /team/33/user/11\n           * router.createUrlTree(['/team', 33, 'user', 11]);\n           *\n           * // create /team/33;expand=true/user/11\n           * router.createUrlTree(['/team', 33, {expand: true}, 'user', 11]);\n           *\n           * // you can collapse static segments like this (this works only with the first passed-in value):\n           * router.createUrlTree(['/team/33/user', userId]);\n           *\n           * // If the first segment can contain slashes, and you do not want the router to split it, you\n           * // can do the following:\n           *\n           * router.createUrlTree([{segmentPath: '/one/two'}]);\n           *\n           * // create /team/33/(user/11//right:chat)\n           * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: 'chat'}}]);\n           *\n           * // remove the right secondary node\n           * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: null}}]);\n           *\n           * // assuming the current url is `/team/33/user/11` and the route points to `user/11`\n           *\n           * // navigate to /team/33/user/11/details\n           * router.createUrlTree(['details'], {relativeTo: route});\n           *\n           * // navigate to /team/33/user/22\n           * router.createUrlTree(['../22'], {relativeTo: route});\n           *\n           * // navigate to /team/44/user/22\n           * router.createUrlTree(['../../team/44/user/22'], {relativeTo: route});\n           * ```\n           */\n        Router.prototype.createUrlTree = /**\n           * Applies an array of commands to the current url tree and creates a new url tree.\n           *\n           * When given an activate route, applies the given commands starting from the route.\n           * When not given a route, applies the given command starting from the root.\n           *\n           * ### Usage\n           *\n           * ```\n           * // create /team/33/user/11\n           * router.createUrlTree(['/team', 33, 'user', 11]);\n           *\n           * // create /team/33;expand=true/user/11\n           * router.createUrlTree(['/team', 33, {expand: true}, 'user', 11]);\n           *\n           * // you can collapse static segments like this (this works only with the first passed-in value):\n           * router.createUrlTree(['/team/33/user', userId]);\n           *\n           * // If the first segment can contain slashes, and you do not want the router to split it, you\n           * // can do the following:\n           *\n           * router.createUrlTree([{segmentPath: '/one/two'}]);\n           *\n           * // create /team/33/(user/11//right:chat)\n           * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: 'chat'}}]);\n           *\n           * // remove the right secondary node\n           * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: null}}]);\n           *\n           * // assuming the current url is `/team/33/user/11` and the route points to `user/11`\n           *\n           * // navigate to /team/33/user/11/details\n           * router.createUrlTree(['details'], {relativeTo: route});\n           *\n           * // navigate to /team/33/user/22\n           * router.createUrlTree(['../22'], {relativeTo: route});\n           *\n           * // navigate to /team/44/user/22\n           * router.createUrlTree(['../../team/44/user/22'], {relativeTo: route});\n           * ```\n           */\n        function (commands, navigationExtras) {\n            if (navigationExtras === void 0) { navigationExtras = {}; }\n            var relativeTo = navigationExtras.relativeTo, queryParams = navigationExtras.queryParams, fragment = navigationExtras.fragment, preserveQueryParams = navigationExtras.preserveQueryParams, queryParamsHandling = navigationExtras.queryParamsHandling, preserveFragment = navigationExtras.preserveFragment;\n            if (core.isDevMode() && preserveQueryParams && console && console.warn) {\n                console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n            }\n            var a = relativeTo || this.routerState.root;\n            var f = preserveFragment ? this.currentUrlTree.fragment : fragment;\n            var q = null;\n            if (queryParamsHandling) {\n                switch (queryParamsHandling) {\n                    case 'merge':\n                        q = __assign({}, this.currentUrlTree.queryParams, queryParams);\n                        break;\n                    case 'preserve':\n                        q = this.currentUrlTree.queryParams;\n                        break;\n                    default:\n                        q = queryParams || null;\n                }\n            }\n            else {\n                q = preserveQueryParams ? this.currentUrlTree.queryParams : queryParams || null;\n            }\n            if (q !== null) {\n                q = this.removeEmptyProps(q);\n            }\n            return createUrlTree(a, this.currentUrlTree, commands, (q), (f));\n        };\n        /**\n         * Navigate based on the provided url. This navigation is always absolute.\n         *\n         * Returns a promise that:\n         * - resolves to 'true' when navigation succeeds,\n         * - resolves to 'false' when navigation fails,\n         * - is rejected when an error happens.\n         *\n         * ### Usage\n         *\n         * ```\n         * router.navigateByUrl(\"/team/33/user/11\");\n         *\n         * // Navigate without updating the URL\n         * router.navigateByUrl(\"/team/33/user/11\", { skipLocationChange: true });\n         * ```\n         *\n         * In opposite to `navigate`, `navigateByUrl` takes a whole URL\n         * and does not apply any delta to the current one.\n         */\n        /**\n           * Navigate based on the provided url. This navigation is always absolute.\n           *\n           * Returns a promise that:\n           * - resolves to 'true' when navigation succeeds,\n           * - resolves to 'false' when navigation fails,\n           * - is rejected when an error happens.\n           *\n           * ### Usage\n           *\n           * ```\n           * router.navigateByUrl(\"/team/33/user/11\");\n           *\n           * // Navigate without updating the URL\n           * router.navigateByUrl(\"/team/33/user/11\", { skipLocationChange: true });\n           * ```\n           *\n           * In opposite to `navigate`, `navigateByUrl` takes a whole URL\n           * and does not apply any delta to the current one.\n           */\n        Router.prototype.navigateByUrl = /**\n           * Navigate based on the provided url. This navigation is always absolute.\n           *\n           * Returns a promise that:\n           * - resolves to 'true' when navigation succeeds,\n           * - resolves to 'false' when navigation fails,\n           * - is rejected when an error happens.\n           *\n           * ### Usage\n           *\n           * ```\n           * router.navigateByUrl(\"/team/33/user/11\");\n           *\n           * // Navigate without updating the URL\n           * router.navigateByUrl(\"/team/33/user/11\", { skipLocationChange: true });\n           * ```\n           *\n           * In opposite to `navigate`, `navigateByUrl` takes a whole URL\n           * and does not apply any delta to the current one.\n           */\n        function (url, extras) {\n            if (extras === void 0) { extras = { skipLocationChange: false }; }\n            var urlTree = url instanceof UrlTree ? url : this.parseUrl(url);\n            var mergedTree = this.urlHandlingStrategy.merge(urlTree, this.rawUrlTree);\n            return this.scheduleNavigation(mergedTree, 'imperative', null, extras);\n        };\n        /**\n         * Navigate based on the provided array of commands and a starting point.\n         * If no starting route is provided, the navigation is absolute.\n         *\n         * Returns a promise that:\n         * - resolves to 'true' when navigation succeeds,\n         * - resolves to 'false' when navigation fails,\n         * - is rejected when an error happens.\n         *\n         * ### Usage\n         *\n         * ```\n         * router.navigate(['team', 33, 'user', 11], {relativeTo: route});\n         *\n         * // Navigate without updating the URL\n         * router.navigate(['team', 33, 'user', 11], {relativeTo: route, skipLocationChange: true});\n         * ```\n         *\n         * In opposite to `navigateByUrl`, `navigate` always takes a delta that is applied to the current\n         * URL.\n         */\n        /**\n           * Navigate based on the provided array of commands and a starting point.\n           * If no starting route is provided, the navigation is absolute.\n           *\n           * Returns a promise that:\n           * - resolves to 'true' when navigation succeeds,\n           * - resolves to 'false' when navigation fails,\n           * - is rejected when an error happens.\n           *\n           * ### Usage\n           *\n           * ```\n           * router.navigate(['team', 33, 'user', 11], {relativeTo: route});\n           *\n           * // Navigate without updating the URL\n           * router.navigate(['team', 33, 'user', 11], {relativeTo: route, skipLocationChange: true});\n           * ```\n           *\n           * In opposite to `navigateByUrl`, `navigate` always takes a delta that is applied to the current\n           * URL.\n           */\n        Router.prototype.navigate = /**\n           * Navigate based on the provided array of commands and a starting point.\n           * If no starting route is provided, the navigation is absolute.\n           *\n           * Returns a promise that:\n           * - resolves to 'true' when navigation succeeds,\n           * - resolves to 'false' when navigation fails,\n           * - is rejected when an error happens.\n           *\n           * ### Usage\n           *\n           * ```\n           * router.navigate(['team', 33, 'user', 11], {relativeTo: route});\n           *\n           * // Navigate without updating the URL\n           * router.navigate(['team', 33, 'user', 11], {relativeTo: route, skipLocationChange: true});\n           * ```\n           *\n           * In opposite to `navigateByUrl`, `navigate` always takes a delta that is applied to the current\n           * URL.\n           */\n        function (commands, extras) {\n            if (extras === void 0) { extras = { skipLocationChange: false }; }\n            validateCommands(commands);\n            return this.navigateByUrl(this.createUrlTree(commands, extras), extras);\n        };\n        /** Serializes a `UrlTree` into a string */\n        /** Serializes a `UrlTree` into a string */\n        Router.prototype.serializeUrl = /** Serializes a `UrlTree` into a string */\n        function (url) { return this.urlSerializer.serialize(url); };\n        /** Parses a string into a `UrlTree` */\n        /** Parses a string into a `UrlTree` */\n        Router.prototype.parseUrl = /** Parses a string into a `UrlTree` */\n        function (url) { return this.urlSerializer.parse(url); };\n        /** Returns whether the url is activated */\n        /** Returns whether the url is activated */\n        Router.prototype.isActive = /** Returns whether the url is activated */\n        function (url, exact) {\n            if (url instanceof UrlTree) {\n                return containsTree(this.currentUrlTree, url, exact);\n            }\n            var urlTree = this.urlSerializer.parse(url);\n            return containsTree(this.currentUrlTree, urlTree, exact);\n        };\n        Router.prototype.removeEmptyProps = function (params) {\n            return Object.keys(params).reduce(function (result, key) {\n                var value = params[key];\n                if (value !== null && value !== undefined) {\n                    result[key] = value;\n                }\n                return result;\n            }, {});\n        };\n        Router.prototype.processNavigations = function () {\n            var _this = this;\n            this.navigations\n                .pipe(operators.concatMap(function (nav) {\n                if (nav) {\n                    _this.executeScheduledNavigation(nav);\n                    // a failed navigation should not stop the router from processing\n                    // further navigations => the catch\n                    return nav.promise.catch(function () { });\n                }\n                else {\n                    return rxjs.of(null);\n                }\n            }))\n                .subscribe(function () { });\n        };\n        Router.prototype.scheduleNavigation = function (rawUrl, source, state, extras) {\n            var lastNavigation = this.navigations.value;\n            // If the user triggers a navigation imperatively (e.g., by using navigateByUrl),\n            // and that navigation results in 'replaceState' that leads to the same URL,\n            // we should skip those.\n            if (lastNavigation && source !== 'imperative' && lastNavigation.source === 'imperative' &&\n                lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n                return Promise.resolve(true); // return value is not used\n            }\n            // Because of a bug in IE and Edge, the location class fires two events (popstate and\n            // hashchange) every single time. The second one should be ignored. Otherwise, the URL will\n            // flicker. Handles the case when a popstate was emitted first.\n            if (lastNavigation && source == 'hashchange' && lastNavigation.source === 'popstate' &&\n                lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n                return Promise.resolve(true); // return value is not used\n            }\n            // Because of a bug in IE and Edge, the location class fires two events (popstate and\n            // hashchange) every single time. The second one should be ignored. Otherwise, the URL will\n            // flicker. Handles the case when a hashchange was emitted first.\n            if (lastNavigation && source == 'popstate' && lastNavigation.source === 'hashchange' &&\n                lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n                return Promise.resolve(true); // return value is not used\n            }\n            var resolve = null;\n            var reject = null;\n            var promise = new Promise(function (res, rej) {\n                resolve = res;\n                reject = rej;\n            });\n            var id = ++this.navigationId;\n            this.navigations.next({ id: id, source: source, state: state, rawUrl: rawUrl, extras: extras, resolve: resolve, reject: reject, promise: promise });\n            // Make sure that the error is propagated even though `processNavigations` catch\n            // handler does not rethrow\n            return promise.catch(function (e) { return Promise.reject(e); });\n        };\n        Router.prototype.executeScheduledNavigation = function (_a) {\n            var _this = this;\n            var id = _a.id, rawUrl = _a.rawUrl, extras = _a.extras, resolve = _a.resolve, reject = _a.reject, source = _a.source, state = _a.state;\n            var url = this.urlHandlingStrategy.extract(rawUrl);\n            var urlTransition = !this.navigated || url.toString() !== this.currentUrlTree.toString();\n            if ((this.onSameUrlNavigation === 'reload' ? true : urlTransition) &&\n                this.urlHandlingStrategy.shouldProcessUrl(rawUrl)) {\n                this.events\n                    .next(new NavigationStart(id, this.serializeUrl(url), source, state));\n                Promise.resolve()\n                    .then(function (_) {\n                    return _this.runNavigate(url, rawUrl, !!extras.skipLocationChange, !!extras.replaceUrl, id, null);\n                })\n                    .then(resolve, reject);\n                // we cannot process the current URL, but we could process the previous one =>\n                // we need to do some cleanup\n            }\n            else if (urlTransition && this.rawUrlTree &&\n                this.urlHandlingStrategy.shouldProcessUrl(this.rawUrlTree)) {\n                this.events\n                    .next(new NavigationStart(id, this.serializeUrl(url), source, state));\n                Promise.resolve()\n                    .then(function (_) {\n                    return _this.runNavigate(url, rawUrl, false, false, id, createEmptyState(url, _this.rootComponentType).snapshot);\n                })\n                    .then(resolve, reject);\n            }\n            else {\n                this.rawUrlTree = rawUrl;\n                resolve(null);\n            }\n        };\n        Router.prototype.runNavigate = function (url, rawUrl, skipLocationChange, replaceUrl, id, precreatedState) {\n            var _this = this;\n            if (id !== this.navigationId) {\n                this.events\n                    .next(new NavigationCancel(id, this.serializeUrl(url), \"Navigation ID \" + id + \" is not equal to the current navigation id \" + this.navigationId));\n                return Promise.resolve(false);\n            }\n            return new Promise(function (resolvePromise, rejectPromise) {\n                // create an observable of the url and route state snapshot\n                // this operation do not result in any side effects\n                var urlAndSnapshot$;\n                if (!precreatedState) {\n                    var moduleInjector = _this.ngModule.injector;\n                    var redirectsApplied$ = applyRedirects(moduleInjector, _this.configLoader, _this.urlSerializer, url, _this.config);\n                    urlAndSnapshot$ = redirectsApplied$.pipe(operators.mergeMap(function (appliedUrl) {\n                        return recognize(_this.rootComponentType, _this.config, appliedUrl, _this.serializeUrl(appliedUrl), _this.paramsInheritanceStrategy)\n                            .pipe(operators.map(function (snapshot) {\n                            _this.events\n                                .next(new RoutesRecognized(id, _this.serializeUrl(url), _this.serializeUrl(appliedUrl), snapshot));\n                            return { appliedUrl: appliedUrl, snapshot: snapshot };\n                        }));\n                    }));\n                }\n                else {\n                    urlAndSnapshot$ = rxjs.of({ appliedUrl: url, snapshot: precreatedState });\n                }\n                var beforePreactivationDone$ = urlAndSnapshot$.pipe(operators.mergeMap(function (p) {\n                    if (typeof p === 'boolean')\n                        return rxjs.of(p);\n                    return _this.hooks\n                        .beforePreactivation(p.snapshot, {\n                        navigationId: id,\n                        appliedUrlTree: url,\n                        rawUrlTree: rawUrl, skipLocationChange: skipLocationChange, replaceUrl: replaceUrl,\n                    })\n                        .pipe(operators.map(function () { return p; }));\n                }));\n                // run preactivation: guards and data resolvers\n                var preActivation;\n                var preactivationSetup$ = beforePreactivationDone$.pipe(operators.map(function (p) {\n                    if (typeof p === 'boolean')\n                        return p;\n                    var appliedUrl = p.appliedUrl, snapshot = p.snapshot;\n                    var moduleInjector = _this.ngModule.injector;\n                    preActivation = new PreActivation(snapshot, _this.routerState.snapshot, moduleInjector, function (evt) { return _this.triggerEvent(evt); });\n                    preActivation.initialize(_this.rootContexts);\n                    return { appliedUrl: appliedUrl, snapshot: snapshot };\n                }));\n                var preactivationCheckGuards$ = preactivationSetup$.pipe(operators.mergeMap(function (p) {\n                    if (typeof p === 'boolean' || _this.navigationId !== id)\n                        return rxjs.of(false);\n                    var appliedUrl = p.appliedUrl, snapshot = p.snapshot;\n                    _this.triggerEvent(new GuardsCheckStart(id, _this.serializeUrl(url), _this.serializeUrl(appliedUrl), snapshot));\n                    return preActivation.checkGuards().pipe(operators.map(function (shouldActivate) {\n                        _this.triggerEvent(new GuardsCheckEnd(id, _this.serializeUrl(url), _this.serializeUrl(appliedUrl), snapshot, shouldActivate));\n                        return { appliedUrl: appliedUrl, snapshot: snapshot, shouldActivate: shouldActivate };\n                    }));\n                }));\n                var preactivationResolveData$ = preactivationCheckGuards$.pipe(operators.mergeMap(function (p) {\n                    if (typeof p === 'boolean' || _this.navigationId !== id)\n                        return rxjs.of(false);\n                    if (p.shouldActivate && preActivation.isActivating()) {\n                        _this.triggerEvent(new ResolveStart(id, _this.serializeUrl(url), _this.serializeUrl(p.appliedUrl), p.snapshot));\n                        return preActivation.resolveData(_this.paramsInheritanceStrategy).pipe(operators.map(function () {\n                            _this.triggerEvent(new ResolveEnd(id, _this.serializeUrl(url), _this.serializeUrl(p.appliedUrl), p.snapshot));\n                            return p;\n                        }));\n                    }\n                    else {\n                        return rxjs.of(p);\n                    }\n                }));\n                var preactivationDone$ = preactivationResolveData$.pipe(operators.mergeMap(function (p) {\n                    if (typeof p === 'boolean' || _this.navigationId !== id)\n                        return rxjs.of(false);\n                    return _this.hooks\n                        .afterPreactivation(p.snapshot, {\n                        navigationId: id,\n                        appliedUrlTree: url,\n                        rawUrlTree: rawUrl, skipLocationChange: skipLocationChange, replaceUrl: replaceUrl,\n                    })\n                        .pipe(operators.map(function () { return p; }));\n                }));\n                // create router state\n                // this operation has side effects => route state is being affected\n                var routerState$ = preactivationDone$.pipe(operators.map(function (p) {\n                    if (typeof p === 'boolean' || _this.navigationId !== id)\n                        return false;\n                    var appliedUrl = p.appliedUrl, snapshot = p.snapshot, shouldActivate = p.shouldActivate;\n                    if (shouldActivate) {\n                        var state = createRouterState(_this.routeReuseStrategy, snapshot, _this.routerState);\n                        return { appliedUrl: appliedUrl, state: state, shouldActivate: shouldActivate };\n                    }\n                    else {\n                        return { appliedUrl: appliedUrl, state: null, shouldActivate: shouldActivate };\n                    }\n                }));\n                _this.activateRoutes(routerState$, _this.routerState, _this.currentUrlTree, id, url, rawUrl, skipLocationChange, replaceUrl, resolvePromise, rejectPromise);\n            });\n        };\n        /**\n         * Performs the logic of activating routes. This is a synchronous process by default. While this\n         * is a private method, it could be overridden to make activation asynchronous.\n         */\n        /**\n           * Performs the logic of activating routes. This is a synchronous process by default. While this\n           * is a private method, it could be overridden to make activation asynchronous.\n           */\n        Router.prototype.activateRoutes = /**\n           * Performs the logic of activating routes. This is a synchronous process by default. While this\n           * is a private method, it could be overridden to make activation asynchronous.\n           */\n        function (state, storedState, storedUrl, id, url, rawUrl, skipLocationChange, replaceUrl, resolvePromise, rejectPromise) {\n            var _this = this;\n            // applied the new router state\n            // this operation has side effects\n            var navigationIsSuccessful;\n            state\n                .forEach(function (p) {\n                if (typeof p === 'boolean' || !p.shouldActivate || id !== _this.navigationId || !p.state) {\n                    navigationIsSuccessful = false;\n                    return;\n                }\n                var appliedUrl = p.appliedUrl, state = p.state;\n                _this.currentUrlTree = appliedUrl;\n                _this.rawUrlTree = _this.urlHandlingStrategy.merge(_this.currentUrlTree, rawUrl);\n                _this.routerState = state;\n                if (!skipLocationChange) {\n                    var path = _this.urlSerializer.serialize(_this.rawUrlTree);\n                    if (_this.location.isCurrentPathEqualTo(path) || replaceUrl) {\n                        _this.location.replaceState(path, '', { navigationId: id });\n                    }\n                    else {\n                        _this.location.go(path, '', { navigationId: id });\n                    }\n                }\n                new ActivateRoutes(_this.routeReuseStrategy, state, storedState, function (evt) { return _this.triggerEvent(evt); })\n                    .activate(_this.rootContexts);\n                navigationIsSuccessful = true;\n            })\n                .then(function () {\n                if (navigationIsSuccessful) {\n                    _this.navigated = true;\n                    _this.lastSuccessfulId = id;\n                    _this.events\n                        .next(new NavigationEnd(id, _this.serializeUrl(url), _this.serializeUrl(_this.currentUrlTree)));\n                    resolvePromise(true);\n                }\n                else {\n                    _this.resetUrlToCurrentUrlTree();\n                    _this.events\n                        .next(new NavigationCancel(id, _this.serializeUrl(url), ''));\n                    resolvePromise(false);\n                }\n            }, function (e) {\n                if (isNavigationCancelingError(e)) {\n                    _this.navigated = true;\n                    _this.resetStateAndUrl(storedState, storedUrl, rawUrl);\n                    _this.events\n                        .next(new NavigationCancel(id, _this.serializeUrl(url), e.message));\n                    resolvePromise(false);\n                }\n                else {\n                    _this.resetStateAndUrl(storedState, storedUrl, rawUrl);\n                    _this.events\n                        .next(new NavigationError(id, _this.serializeUrl(url), e));\n                    try {\n                        resolvePromise(_this.errorHandler(e));\n                    }\n                    catch (ee) {\n                        rejectPromise(ee);\n                    }\n                }\n            });\n        };\n        Router.prototype.resetStateAndUrl = function (storedState, storedUrl, rawUrl) {\n            this.routerState = storedState;\n            this.currentUrlTree = storedUrl;\n            this.rawUrlTree = this.urlHandlingStrategy.merge(this.currentUrlTree, rawUrl);\n            this.resetUrlToCurrentUrlTree();\n        };\n        Router.prototype.resetUrlToCurrentUrlTree = function () {\n            this.location.replaceState(this.urlSerializer.serialize(this.rawUrlTree), '', { navigationId: this.lastSuccessfulId });\n        };\n        return Router;\n    }());\n    var ActivateRoutes = /** @class */ (function () {\n        function ActivateRoutes(routeReuseStrategy, futureState, currState, forwardEvent) {\n            this.routeReuseStrategy = routeReuseStrategy;\n            this.futureState = futureState;\n            this.currState = currState;\n            this.forwardEvent = forwardEvent;\n        }\n        ActivateRoutes.prototype.activate = function (parentContexts) {\n            var futureRoot = this.futureState._root;\n            var currRoot = this.currState ? this.currState._root : null;\n            this.deactivateChildRoutes(futureRoot, currRoot, parentContexts);\n            advanceActivatedRoute(this.futureState.root);\n            this.activateChildRoutes(futureRoot, currRoot, parentContexts);\n        };\n        // De-activate the child route that are not re-used for the future state\n        // De-activate the child route that are not re-used for the future state\n        ActivateRoutes.prototype.deactivateChildRoutes = \n        // De-activate the child route that are not re-used for the future state\n        function (futureNode, currNode, contexts) {\n            var _this = this;\n            var children = nodeChildrenAsMap(currNode);\n            // Recurse on the routes active in the future state to de-activate deeper children\n            futureNode.children.forEach(function (futureChild) {\n                var childOutletName = futureChild.value.outlet;\n                _this.deactivateRoutes(futureChild, children[childOutletName], contexts);\n                delete children[childOutletName];\n            });\n            // De-activate the routes that will not be re-used\n            forEach(children, function (v, childName) {\n                _this.deactivateRouteAndItsChildren(v, contexts);\n            });\n        };\n        ActivateRoutes.prototype.deactivateRoutes = function (futureNode, currNode, parentContext) {\n            var future = futureNode.value;\n            var curr = currNode ? currNode.value : null;\n            if (future === curr) {\n                // Reusing the node, check to see if the children need to be de-activated\n                if (future.component) {\n                    // If we have a normal route, we need to go through an outlet.\n                    var context = parentContext.getContext(future.outlet);\n                    if (context) {\n                        this.deactivateChildRoutes(futureNode, currNode, context.children);\n                    }\n                }\n                else {\n                    // if we have a componentless route, we recurse but keep the same outlet map.\n                    this.deactivateChildRoutes(futureNode, currNode, parentContext);\n                }\n            }\n            else {\n                if (curr) {\n                    // Deactivate the current route which will not be re-used\n                    this.deactivateRouteAndItsChildren(currNode, parentContext);\n                }\n            }\n        };\n        ActivateRoutes.prototype.deactivateRouteAndItsChildren = function (route, parentContexts) {\n            if (this.routeReuseStrategy.shouldDetach(route.value.snapshot)) {\n                this.detachAndStoreRouteSubtree(route, parentContexts);\n            }\n            else {\n                this.deactivateRouteAndOutlet(route, parentContexts);\n            }\n        };\n        ActivateRoutes.prototype.detachAndStoreRouteSubtree = function (route, parentContexts) {\n            var context = parentContexts.getContext(route.value.outlet);\n            if (context && context.outlet) {\n                var componentRef = context.outlet.detach();\n                var contexts = context.children.onOutletDeactivated();\n                this.routeReuseStrategy.store(route.value.snapshot, { componentRef: componentRef, route: route, contexts: contexts });\n            }\n        };\n        ActivateRoutes.prototype.deactivateRouteAndOutlet = function (route, parentContexts) {\n            var _this = this;\n            var context = parentContexts.getContext(route.value.outlet);\n            if (context) {\n                var children = nodeChildrenAsMap(route);\n                var contexts_1 = route.value.component ? context.children : parentContexts;\n                forEach(children, function (v, k) { return _this.deactivateRouteAndItsChildren(v, contexts_1); });\n                if (context.outlet) {\n                    // Destroy the component\n                    context.outlet.deactivate();\n                    // Destroy the contexts for all the outlets that were in the component\n                    context.children.onOutletDeactivated();\n                }\n            }\n        };\n        ActivateRoutes.prototype.activateChildRoutes = function (futureNode, currNode, contexts) {\n            var _this = this;\n            var children = nodeChildrenAsMap(currNode);\n            futureNode.children.forEach(function (c) {\n                _this.activateRoutes(c, children[c.value.outlet], contexts);\n                _this.forwardEvent(new ActivationEnd(c.value.snapshot));\n            });\n            if (futureNode.children.length) {\n                this.forwardEvent(new ChildActivationEnd(futureNode.value.snapshot));\n            }\n        };\n        ActivateRoutes.prototype.activateRoutes = function (futureNode, currNode, parentContexts) {\n            var future = futureNode.value;\n            var curr = currNode ? currNode.value : null;\n            advanceActivatedRoute(future);\n            // reusing the node\n            if (future === curr) {\n                if (future.component) {\n                    // If we have a normal route, we need to go through an outlet.\n                    var context = parentContexts.getOrCreateContext(future.outlet);\n                    this.activateChildRoutes(futureNode, currNode, context.children);\n                }\n                else {\n                    // if we have a componentless route, we recurse but keep the same outlet map.\n                    this.activateChildRoutes(futureNode, currNode, parentContexts);\n                }\n            }\n            else {\n                if (future.component) {\n                    // if we have a normal route, we need to place the component into the outlet and recurse.\n                    var context = parentContexts.getOrCreateContext(future.outlet);\n                    if (this.routeReuseStrategy.shouldAttach(future.snapshot)) {\n                        var stored = this.routeReuseStrategy.retrieve(future.snapshot);\n                        this.routeReuseStrategy.store(future.snapshot, null);\n                        context.children.onOutletReAttached(stored.contexts);\n                        context.attachRef = stored.componentRef;\n                        context.route = stored.route.value;\n                        if (context.outlet) {\n                            // Attach right away when the outlet has already been instantiated\n                            // Otherwise attach from `RouterOutlet.ngOnInit` when it is instantiated\n                            context.outlet.attach(stored.componentRef, stored.route.value);\n                        }\n                        advanceActivatedRouteNodeAndItsChildren(stored.route);\n                    }\n                    else {\n                        var config = parentLoadedConfig(future.snapshot);\n                        var cmpFactoryResolver = config ? config.module.componentFactoryResolver : null;\n                        context.route = future;\n                        context.resolver = cmpFactoryResolver;\n                        if (context.outlet) {\n                            // Activate the outlet when it has already been instantiated\n                            // Otherwise it will get activated from its `ngOnInit` when instantiated\n                            context.outlet.activateWith(future, cmpFactoryResolver);\n                        }\n                        this.activateChildRoutes(futureNode, null, context.children);\n                    }\n                }\n                else {\n                    // if we have a componentless route, we recurse but keep the same outlet map.\n                    this.activateChildRoutes(futureNode, null, parentContexts);\n                }\n            }\n        };\n        return ActivateRoutes;\n    }());\n    function advanceActivatedRouteNodeAndItsChildren(node) {\n        advanceActivatedRoute(node.value);\n        node.children.forEach(advanceActivatedRouteNodeAndItsChildren);\n    }\n    function parentLoadedConfig(snapshot) {\n        for (var s = snapshot.parent; s; s = s.parent) {\n            var route = s.routeConfig;\n            if (route && route._loadedConfig)\n                return route._loadedConfig;\n            if (route && route.component)\n                return null;\n        }\n        return null;\n    }\n    function validateCommands(commands) {\n        for (var i = 0; i < commands.length; i++) {\n            var cmd = commands[i];\n            if (cmd == null) {\n                throw new Error(\"The requested path contains \" + cmd + \" segment at index \" + i);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Lets you link to specific routes in your app.\n     *\n     * Consider the following route configuration:\n     * `[{ path: 'user/:name', component: UserCmp }]`.\n     * When linking to this `user/:name` route, you use the `RouterLink` directive.\n     *\n     * If the link is static, you can use the directive as follows:\n     * `<a routerLink=\"/user/bob\">link to user component</a>`\n     *\n     * If you use dynamic values to generate the link, you can pass an array of path\n     * segments, followed by the params for each segment.\n     *\n     * For instance `['/team', teamId, 'user', userName, {details: true}]`\n     * means that we want to generate a link to `/team/11/user/bob;details=true`.\n     *\n     * Multiple static segments can be merged into one\n     * (e.g., `['/team/11/user', userName, {details: true}]`).\n     *\n     * The first segment name can be prepended with `/`, `./`, or `../`:\n     * * If the first segment begins with `/`, the router will look up the route from the root of the\n     *   app.\n     * * If the first segment begins with `./`, or doesn't begin with a slash, the router will\n     *   instead look in the children of the current activated route.\n     * * And if the first segment begins with `../`, the router will go up one level.\n     *\n     * You can set query params and fragment as follows:\n     *\n     * ```\n     * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" fragment=\"education\">\n     *   link to user component\n     * </a>\n     * ```\n     * RouterLink will use these to generate this link: `/user/bob#education?debug=true`.\n     *\n     * (Deprecated in v4.0.0 use `queryParamsHandling` instead) You can also tell the\n     * directive to preserve the current query params and fragment:\n     *\n     * ```\n     * <a [routerLink]=\"['/user/bob']\" preserveQueryParams preserveFragment>\n     *   link to user component\n     * </a>\n     * ```\n     *\n     * You can tell the directive to how to handle queryParams, available options are:\n     *  - `'merge'`: merge the queryParams into the current queryParams\n     *  - `'preserve'`: preserve the current queryParams\n     *  - default/`''`: use the queryParams only\n     *\n     * Same options for {@link NavigationExtras#queryParamsHandling\n     * NavigationExtras#queryParamsHandling}.\n     *\n     * ```\n     * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" queryParamsHandling=\"merge\">\n     *   link to user component\n     * </a>\n     * ```\n     *\n     * The router link directive always treats the provided input as a delta to the current url.\n     *\n     * For instance, if the current url is `/user/(box//aux:team)`.\n     *\n     * Then the following link `<a [routerLink]=\"['/user/jim']\">Jim</a>` will generate the link\n     * `/user/(jim//aux:team)`.\n     *\n     * See {@link Router#createUrlTree createUrlTree} for more information.\n     *\n     * @ngModule RouterModule\n     *\n     *\n     */\n    var RouterLink = /** @class */ (function () {\n        function RouterLink(router, route, tabIndex, renderer, el) {\n            this.router = router;\n            this.route = route;\n            this.commands = [];\n            if (tabIndex == null) {\n                renderer.setAttribute(el.nativeElement, 'tabindex', '0');\n            }\n        }\n        Object.defineProperty(RouterLink.prototype, \"routerLink\", {\n            set: function (commands) {\n                if (commands != null) {\n                    this.commands = Array.isArray(commands) ? commands : [commands];\n                }\n                else {\n                    this.commands = [];\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(RouterLink.prototype, \"preserveQueryParams\", {\n            set: /**\n               * @deprecated 4.0.0 use `queryParamsHandling` instead.\n               */\n            function (value) {\n                if (core.isDevMode() && console && console.warn) {\n                    console.warn('preserveQueryParams is deprecated!, use queryParamsHandling instead.');\n                }\n                this.preserve = value;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        RouterLink.prototype.onClick = function () {\n            var extras = {\n                skipLocationChange: attrBoolValue(this.skipLocationChange),\n                replaceUrl: attrBoolValue(this.replaceUrl),\n            };\n            this.router.navigateByUrl(this.urlTree, extras);\n            return true;\n        };\n        Object.defineProperty(RouterLink.prototype, \"urlTree\", {\n            get: function () {\n                return this.router.createUrlTree(this.commands, {\n                    relativeTo: this.route,\n                    queryParams: this.queryParams,\n                    fragment: this.fragment,\n                    preserveQueryParams: attrBoolValue(this.preserve),\n                    queryParamsHandling: this.queryParamsHandling,\n                    preserveFragment: attrBoolValue(this.preserveFragment),\n                });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        RouterLink.decorators = [\n            { type: core.Directive, args: [{ selector: ':not(a)[routerLink]' },] }\n        ];\n        /** @nocollapse */\n        RouterLink.ctorParameters = function () { return [\n            { type: Router, },\n            { type: ActivatedRoute, },\n            { type: undefined, decorators: [{ type: core.Attribute, args: ['tabindex',] },] },\n            { type: core.Renderer2, },\n            { type: core.ElementRef, },\n        ]; };\n        RouterLink.propDecorators = {\n            \"queryParams\": [{ type: core.Input },],\n            \"fragment\": [{ type: core.Input },],\n            \"queryParamsHandling\": [{ type: core.Input },],\n            \"preserveFragment\": [{ type: core.Input },],\n            \"skipLocationChange\": [{ type: core.Input },],\n            \"replaceUrl\": [{ type: core.Input },],\n            \"routerLink\": [{ type: core.Input },],\n            \"preserveQueryParams\": [{ type: core.Input },],\n            \"onClick\": [{ type: core.HostListener, args: ['click',] },],\n        };\n        return RouterLink;\n    }());\n    /**\n     * @description\n     *\n     * Lets you link to specific routes in your app.\n     *\n     * See `RouterLink` for more information.\n     *\n     * @ngModule RouterModule\n     *\n     *\n     */\n    var RouterLinkWithHref = /** @class */ (function () {\n        function RouterLinkWithHref(router, route, locationStrategy) {\n            var _this = this;\n            this.router = router;\n            this.route = route;\n            this.locationStrategy = locationStrategy;\n            this.commands = [];\n            this.subscription = router.events.subscribe(function (s) {\n                if (s instanceof NavigationEnd) {\n                    _this.updateTargetUrlAndHref();\n                }\n            });\n        }\n        Object.defineProperty(RouterLinkWithHref.prototype, \"routerLink\", {\n            set: function (commands) {\n                if (commands != null) {\n                    this.commands = Array.isArray(commands) ? commands : [commands];\n                }\n                else {\n                    this.commands = [];\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(RouterLinkWithHref.prototype, \"preserveQueryParams\", {\n            set: function (value) {\n                if (core.isDevMode() && console && console.warn) {\n                    console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n                }\n                this.preserve = value;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        RouterLinkWithHref.prototype.ngOnChanges = function (changes) { this.updateTargetUrlAndHref(); };\n        RouterLinkWithHref.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n        RouterLinkWithHref.prototype.onClick = function (button, ctrlKey, metaKey, shiftKey) {\n            if (button !== 0 || ctrlKey || metaKey || shiftKey) {\n                return true;\n            }\n            if (typeof this.target === 'string' && this.target != '_self') {\n                return true;\n            }\n            var extras = {\n                skipLocationChange: attrBoolValue(this.skipLocationChange),\n                replaceUrl: attrBoolValue(this.replaceUrl),\n            };\n            this.router.navigateByUrl(this.urlTree, extras);\n            return false;\n        };\n        RouterLinkWithHref.prototype.updateTargetUrlAndHref = function () {\n            this.href = this.locationStrategy.prepareExternalUrl(this.router.serializeUrl(this.urlTree));\n        };\n        Object.defineProperty(RouterLinkWithHref.prototype, \"urlTree\", {\n            get: function () {\n                return this.router.createUrlTree(this.commands, {\n                    relativeTo: this.route,\n                    queryParams: this.queryParams,\n                    fragment: this.fragment,\n                    preserveQueryParams: attrBoolValue(this.preserve),\n                    queryParamsHandling: this.queryParamsHandling,\n                    preserveFragment: attrBoolValue(this.preserveFragment),\n                });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        RouterLinkWithHref.decorators = [\n            { type: core.Directive, args: [{ selector: 'a[routerLink]' },] }\n        ];\n        /** @nocollapse */\n        RouterLinkWithHref.ctorParameters = function () { return [\n            { type: Router, },\n            { type: ActivatedRoute, },\n            { type: common.LocationStrategy, },\n        ]; };\n        RouterLinkWithHref.propDecorators = {\n            \"target\": [{ type: core.HostBinding, args: ['attr.target',] }, { type: core.Input },],\n            \"queryParams\": [{ type: core.Input },],\n            \"fragment\": [{ type: core.Input },],\n            \"queryParamsHandling\": [{ type: core.Input },],\n            \"preserveFragment\": [{ type: core.Input },],\n            \"skipLocationChange\": [{ type: core.Input },],\n            \"replaceUrl\": [{ type: core.Input },],\n            \"href\": [{ type: core.HostBinding },],\n            \"routerLink\": [{ type: core.Input },],\n            \"preserveQueryParams\": [{ type: core.Input },],\n            \"onClick\": [{ type: core.HostListener, args: ['click', ['$event.button', '$event.ctrlKey', '$event.metaKey', '$event.shiftKey'],] },],\n        };\n        return RouterLinkWithHref;\n    }());\n    function attrBoolValue(s) {\n        return s === '' || !!s;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * @description\n     *\n     * Lets you add a CSS class to an element when the link's route becomes active.\n     *\n     * This directive lets you add a CSS class to an element when the link's route\n     * becomes active.\n     *\n     * Consider the following example:\n     *\n     * ```\n     * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\">Bob</a>\n     * ```\n     *\n     * When the url is either '/user' or '/user/bob', the active-link class will\n     * be added to the `a` tag. If the url changes, the class will be removed.\n     *\n     * You can set more than one class, as follows:\n     *\n     * ```\n     * <a routerLink=\"/user/bob\" routerLinkActive=\"class1 class2\">Bob</a>\n     * <a routerLink=\"/user/bob\" [routerLinkActive]=\"['class1', 'class2']\">Bob</a>\n     * ```\n     *\n     * You can configure RouterLinkActive by passing `exact: true`. This will add the classes\n     * only when the url matches the link exactly.\n     *\n     * ```\n     * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact:\n     * true}\">Bob</a>\n     * ```\n     *\n     * You can assign the RouterLinkActive instance to a template variable and directly check\n     * the `isActive` status.\n     * ```\n     * <a routerLink=\"/user/bob\" routerLinkActive #rla=\"routerLinkActive\">\n     *   Bob {{ rla.isActive ? '(already open)' : ''}}\n     * </a>\n     * ```\n     *\n     * Finally, you can apply the RouterLinkActive directive to an ancestor of a RouterLink.\n     *\n     * ```\n     * <div routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact: true}\">\n     *   <a routerLink=\"/user/jim\">Jim</a>\n     *   <a routerLink=\"/user/bob\">Bob</a>\n     * </div>\n     * ```\n     *\n     * This will set the active-link class on the div tag if the url is either '/user/jim' or\n     * '/user/bob'.\n     *\n     * @ngModule RouterModule\n     *\n     *\n     */\n    var RouterLinkActive = /** @class */ (function () {\n        function RouterLinkActive(router, element, renderer, cdr) {\n            var _this = this;\n            this.router = router;\n            this.element = element;\n            this.renderer = renderer;\n            this.cdr = cdr;\n            this.classes = [];\n            this.isActive = false;\n            this.routerLinkActiveOptions = { exact: false };\n            this.subscription = router.events.subscribe(function (s) {\n                if (s instanceof NavigationEnd) {\n                    _this.update();\n                }\n            });\n        }\n        RouterLinkActive.prototype.ngAfterContentInit = function () {\n            var _this = this;\n            this.links.changes.subscribe(function (_) { return _this.update(); });\n            this.linksWithHrefs.changes.subscribe(function (_) { return _this.update(); });\n            this.update();\n        };\n        Object.defineProperty(RouterLinkActive.prototype, \"routerLinkActive\", {\n            set: function (data) {\n                var classes = Array.isArray(data) ? data : data.split(' ');\n                this.classes = classes.filter(function (c) { return !!c; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        RouterLinkActive.prototype.ngOnChanges = function (changes) { this.update(); };\n        RouterLinkActive.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n        RouterLinkActive.prototype.update = function () {\n            var _this = this;\n            if (!this.links || !this.linksWithHrefs || !this.router.navigated)\n                return;\n            Promise.resolve().then(function () {\n                var hasActiveLinks = _this.hasActiveLinks();\n                if (_this.isActive !== hasActiveLinks) {\n                    _this.isActive = hasActiveLinks;\n                    _this.classes.forEach(function (c) {\n                        if (hasActiveLinks) {\n                            _this.renderer.addClass(_this.element.nativeElement, c);\n                        }\n                        else {\n                            _this.renderer.removeClass(_this.element.nativeElement, c);\n                        }\n                    });\n                }\n            });\n        };\n        RouterLinkActive.prototype.isLinkActive = function (router) {\n            var _this = this;\n            return function (link) {\n                return router.isActive(link.urlTree, _this.routerLinkActiveOptions.exact);\n            };\n        };\n        RouterLinkActive.prototype.hasActiveLinks = function () {\n            return this.links.some(this.isLinkActive(this.router)) ||\n                this.linksWithHrefs.some(this.isLinkActive(this.router));\n        };\n        RouterLinkActive.decorators = [\n            { type: core.Directive, args: [{\n                        selector: '[routerLinkActive]',\n                        exportAs: 'routerLinkActive',\n                    },] }\n        ];\n        /** @nocollapse */\n        RouterLinkActive.ctorParameters = function () { return [\n            { type: Router, },\n            { type: core.ElementRef, },\n            { type: core.Renderer2, },\n            { type: core.ChangeDetectorRef, },\n        ]; };\n        RouterLinkActive.propDecorators = {\n            \"links\": [{ type: core.ContentChildren, args: [RouterLink, { descendants: true },] },],\n            \"linksWithHrefs\": [{ type: core.ContentChildren, args: [RouterLinkWithHref, { descendants: true },] },],\n            \"routerLinkActiveOptions\": [{ type: core.Input },],\n            \"routerLinkActive\": [{ type: core.Input },],\n        };\n        return RouterLinkActive;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Store contextual information about a `RouterOutlet`\n     *\n     *\n     */\n    var  /**\n     * Store contextual information about a `RouterOutlet`\n     *\n     *\n     */\n    OutletContext = /** @class */ (function () {\n        function OutletContext() {\n            this.outlet = null;\n            this.route = null;\n            this.resolver = null;\n            this.children = new ChildrenOutletContexts();\n            this.attachRef = null;\n        }\n        return OutletContext;\n    }());\n    /**\n     * Store contextual information about the children (= nested) `RouterOutlet`\n     *\n     *\n     */\n    var  /**\n     * Store contextual information about the children (= nested) `RouterOutlet`\n     *\n     *\n     */\n    ChildrenOutletContexts = /** @class */ (function () {\n        function ChildrenOutletContexts() {\n            // contexts for child outlets, by name.\n            this.contexts = new Map();\n        }\n        /** Called when a `RouterOutlet` directive is instantiated */\n        /** Called when a `RouterOutlet` directive is instantiated */\n        ChildrenOutletContexts.prototype.onChildOutletCreated = /** Called when a `RouterOutlet` directive is instantiated */\n        function (childName, outlet) {\n            var context = this.getOrCreateContext(childName);\n            context.outlet = outlet;\n            this.contexts.set(childName, context);\n        };\n        /**\n         * Called when a `RouterOutlet` directive is destroyed.\n         * We need to keep the context as the outlet could be destroyed inside a NgIf and might be\n         * re-created later.\n         */\n        /**\n           * Called when a `RouterOutlet` directive is destroyed.\n           * We need to keep the context as the outlet could be destroyed inside a NgIf and might be\n           * re-created later.\n           */\n        ChildrenOutletContexts.prototype.onChildOutletDestroyed = /**\n           * Called when a `RouterOutlet` directive is destroyed.\n           * We need to keep the context as the outlet could be destroyed inside a NgIf and might be\n           * re-created later.\n           */\n        function (childName) {\n            var context = this.getContext(childName);\n            if (context) {\n                context.outlet = null;\n            }\n        };\n        /**\n         * Called when the corresponding route is deactivated during navigation.\n         * Because the component get destroyed, all children outlet are destroyed.\n         */\n        /**\n           * Called when the corresponding route is deactivated during navigation.\n           * Because the component get destroyed, all children outlet are destroyed.\n           */\n        ChildrenOutletContexts.prototype.onOutletDeactivated = /**\n           * Called when the corresponding route is deactivated during navigation.\n           * Because the component get destroyed, all children outlet are destroyed.\n           */\n        function () {\n            var contexts = this.contexts;\n            this.contexts = new Map();\n            return contexts;\n        };\n        ChildrenOutletContexts.prototype.onOutletReAttached = function (contexts) { this.contexts = contexts; };\n        ChildrenOutletContexts.prototype.getOrCreateContext = function (childName) {\n            var context = this.getContext(childName);\n            if (!context) {\n                context = new OutletContext();\n                this.contexts.set(childName, context);\n            }\n            return context;\n        };\n        ChildrenOutletContexts.prototype.getContext = function (childName) { return this.contexts.get(childName) || null; };\n        return ChildrenOutletContexts;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Acts as a placeholder that Angular dynamically fills based on the current router state.\n     *\n     * ```\n     * <router-outlet></router-outlet>\n     * <router-outlet name='left'></router-outlet>\n     * <router-outlet name='right'></router-outlet>\n     * ```\n     *\n     * A router outlet will emit an activate event any time a new component is being instantiated,\n     * and a deactivate event when it is being destroyed.\n     *\n     * ```\n     * <router-outlet\n     *   (activate)='onActivate($event)'\n     *   (deactivate)='onDeactivate($event)'></router-outlet>\n     * ```\n     * @ngModule RouterModule\n     *\n     *\n     */\n    var RouterOutlet = /** @class */ (function () {\n        function RouterOutlet(parentContexts, location, resolver, name, changeDetector) {\n            this.parentContexts = parentContexts;\n            this.location = location;\n            this.resolver = resolver;\n            this.changeDetector = changeDetector;\n            this.activated = null;\n            this._activatedRoute = null;\n            this.activateEvents = new core.EventEmitter();\n            this.deactivateEvents = new core.EventEmitter();\n            this.name = name || PRIMARY_OUTLET;\n            parentContexts.onChildOutletCreated(this.name, this);\n        }\n        RouterOutlet.prototype.ngOnDestroy = function () { this.parentContexts.onChildOutletDestroyed(this.name); };\n        RouterOutlet.prototype.ngOnInit = function () {\n            if (!this.activated) {\n                // If the outlet was not instantiated at the time the route got activated we need to populate\n                // the outlet when it is initialized (ie inside a NgIf)\n                var context = this.parentContexts.getContext(this.name);\n                if (context && context.route) {\n                    if (context.attachRef) {\n                        // `attachRef` is populated when there is an existing component to mount\n                        this.attach(context.attachRef, context.route);\n                    }\n                    else {\n                        // otherwise the component defined in the configuration is created\n                        this.activateWith(context.route, context.resolver || null);\n                    }\n                }\n            }\n        };\n        Object.defineProperty(RouterOutlet.prototype, \"isActivated\", {\n            get: function () { return !!this.activated; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(RouterOutlet.prototype, \"component\", {\n            get: function () {\n                if (!this.activated)\n                    throw new Error('Outlet is not activated');\n                return this.activated.instance;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(RouterOutlet.prototype, \"activatedRoute\", {\n            get: function () {\n                if (!this.activated)\n                    throw new Error('Outlet is not activated');\n                return this._activatedRoute;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(RouterOutlet.prototype, \"activatedRouteData\", {\n            get: function () {\n                if (this._activatedRoute) {\n                    return this._activatedRoute.snapshot.data;\n                }\n                return {};\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Called when the `RouteReuseStrategy` instructs to detach the subtree\n         */\n        /**\n           * Called when the `RouteReuseStrategy` instructs to detach the subtree\n           */\n        RouterOutlet.prototype.detach = /**\n           * Called when the `RouteReuseStrategy` instructs to detach the subtree\n           */\n        function () {\n            if (!this.activated)\n                throw new Error('Outlet is not activated');\n            this.location.detach();\n            var cmp = this.activated;\n            this.activated = null;\n            this._activatedRoute = null;\n            return cmp;\n        };\n        /**\n         * Called when the `RouteReuseStrategy` instructs to re-attach a previously detached subtree\n         */\n        /**\n           * Called when the `RouteReuseStrategy` instructs to re-attach a previously detached subtree\n           */\n        RouterOutlet.prototype.attach = /**\n           * Called when the `RouteReuseStrategy` instructs to re-attach a previously detached subtree\n           */\n        function (ref, activatedRoute) {\n            this.activated = ref;\n            this._activatedRoute = activatedRoute;\n            this.location.insert(ref.hostView);\n        };\n        RouterOutlet.prototype.deactivate = function () {\n            if (this.activated) {\n                var c = this.component;\n                this.activated.destroy();\n                this.activated = null;\n                this._activatedRoute = null;\n                this.deactivateEvents.emit(c);\n            }\n        };\n        RouterOutlet.prototype.activateWith = function (activatedRoute, resolver) {\n            if (this.isActivated) {\n                throw new Error('Cannot activate an already activated outlet');\n            }\n            this._activatedRoute = activatedRoute;\n            var snapshot = activatedRoute._futureSnapshot;\n            var component = snapshot.routeConfig.component;\n            resolver = resolver || this.resolver;\n            var factory = resolver.resolveComponentFactory(component);\n            var childContexts = this.parentContexts.getOrCreateContext(this.name).children;\n            var injector = new OutletInjector(activatedRoute, childContexts, this.location.injector);\n            this.activated = this.location.createComponent(factory, this.location.length, injector);\n            // Calling `markForCheck` to make sure we will run the change detection when the\n            // `RouterOutlet` is inside a `ChangeDetectionStrategy.OnPush` component.\n            this.changeDetector.markForCheck();\n            this.activateEvents.emit(this.activated.instance);\n        };\n        RouterOutlet.decorators = [\n            { type: core.Directive, args: [{ selector: 'router-outlet', exportAs: 'outlet' },] }\n        ];\n        /** @nocollapse */\n        RouterOutlet.ctorParameters = function () { return [\n            { type: ChildrenOutletContexts, },\n            { type: core.ViewContainerRef, },\n            { type: core.ComponentFactoryResolver, },\n            { type: undefined, decorators: [{ type: core.Attribute, args: ['name',] },] },\n            { type: core.ChangeDetectorRef, },\n        ]; };\n        RouterOutlet.propDecorators = {\n            \"activateEvents\": [{ type: core.Output, args: ['activate',] },],\n            \"deactivateEvents\": [{ type: core.Output, args: ['deactivate',] },],\n        };\n        return RouterOutlet;\n    }());\n    var OutletInjector = /** @class */ (function () {\n        function OutletInjector(route, childContexts, parent) {\n            this.route = route;\n            this.childContexts = childContexts;\n            this.parent = parent;\n        }\n        OutletInjector.prototype.get = function (token, notFoundValue) {\n            if (token === ActivatedRoute) {\n                return this.route;\n            }\n            if (token === ChildrenOutletContexts) {\n                return this.childContexts;\n            }\n            return this.parent.get(token, notFoundValue);\n        };\n        return OutletInjector;\n    }());\n\n    /**\n    *@license\n    *Copyright Google Inc. All Rights Reserved.\n    *\n    *Use of this source code is governed by an MIT-style license that can be\n    *found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * @description\n     *\n     * Provides a preloading strategy.\n     *\n     * @experimental\n     */\n    var  /**\n     * @description\n     *\n     * Provides a preloading strategy.\n     *\n     * @experimental\n     */\n    PreloadingStrategy = /** @class */ (function () {\n        function PreloadingStrategy() {\n        }\n        return PreloadingStrategy;\n    }());\n    /**\n     * @description\n     *\n     * Provides a preloading strategy that preloads all modules as quickly as possible.\n     *\n     * ```\n     * RouteModule.forRoot(ROUTES, {preloadingStrategy: PreloadAllModules})\n     * ```\n     *\n     * @experimental\n     */\n    var  /**\n     * @description\n     *\n     * Provides a preloading strategy that preloads all modules as quickly as possible.\n     *\n     * ```\n     * RouteModule.forRoot(ROUTES, {preloadingStrategy: PreloadAllModules})\n     * ```\n     *\n     * @experimental\n     */\n    PreloadAllModules = /** @class */ (function () {\n        function PreloadAllModules() {\n        }\n        PreloadAllModules.prototype.preload = function (route, fn) {\n            return fn().pipe(operators.catchError(function () { return rxjs.of(null); }));\n        };\n        return PreloadAllModules;\n    }());\n    /**\n     * @description\n     *\n     * Provides a preloading strategy that does not preload any modules.\n     *\n     * This strategy is enabled by default.\n     *\n     * @experimental\n     */\n    var  /**\n     * @description\n     *\n     * Provides a preloading strategy that does not preload any modules.\n     *\n     * This strategy is enabled by default.\n     *\n     * @experimental\n     */\n    NoPreloading = /** @class */ (function () {\n        function NoPreloading() {\n        }\n        NoPreloading.prototype.preload = function (route, fn) { return rxjs.of(null); };\n        return NoPreloading;\n    }());\n    /**\n     * The preloader optimistically loads all router configurations to\n     * make navigations into lazily-loaded sections of the application faster.\n     *\n     * The preloader runs in the background. When the router bootstraps, the preloader\n     * starts listening to all navigation events. After every such event, the preloader\n     * will check if any configurations can be loaded lazily.\n     *\n     * If a route is protected by `canLoad` guards, the preloaded will not load it.\n     *\n     *\n     */\n    var RouterPreloader = /** @class */ (function () {\n        function RouterPreloader(router, moduleLoader, compiler, injector, preloadingStrategy) {\n            this.router = router;\n            this.injector = injector;\n            this.preloadingStrategy = preloadingStrategy;\n            var onStartLoad = function (r) { return router.triggerEvent(new RouteConfigLoadStart(r)); };\n            var onEndLoad = function (r) { return router.triggerEvent(new RouteConfigLoadEnd(r)); };\n            this.loader = new RouterConfigLoader(moduleLoader, compiler, onStartLoad, onEndLoad);\n        }\n        RouterPreloader.prototype.setUpPreloading = function () {\n            var _this = this;\n            this.subscription =\n                this.router.events\n                    .pipe(operators.filter(function (e) { return e instanceof NavigationEnd; }), operators.concatMap(function () { return _this.preload(); }))\n                    .subscribe(function () { });\n        };\n        RouterPreloader.prototype.preload = function () {\n            var ngModule = this.injector.get(core.NgModuleRef);\n            return this.processRoutes(ngModule, this.router.config);\n        };\n        // TODO(jasonaden): This class relies on code external to the class to call setUpPreloading. If\n        // this hasn't been done, ngOnDestroy will fail as this.subscription will be undefined. This\n        // should be refactored.\n        // TODO(jasonaden): This class relies on code external to the class to call setUpPreloading. If\n        // this hasn't been done, ngOnDestroy will fail as this.subscription will be undefined. This\n        // should be refactored.\n        RouterPreloader.prototype.ngOnDestroy = \n        // TODO(jasonaden): This class relies on code external to the class to call setUpPreloading. If\n        // this hasn't been done, ngOnDestroy will fail as this.subscription will be undefined. This\n        // should be refactored.\n        function () { this.subscription.unsubscribe(); };\n        RouterPreloader.prototype.processRoutes = function (ngModule, routes) {\n            var res = [];\n            try {\n                for (var routes_1 = __values(routes), routes_1_1 = routes_1.next(); !routes_1_1.done; routes_1_1 = routes_1.next()) {\n                    var route = routes_1_1.value;\n                    // we already have the config loaded, just recurse\n                    if (route.loadChildren && !route.canLoad && route._loadedConfig) {\n                        var childConfig = route._loadedConfig;\n                        res.push(this.processRoutes(childConfig.module, childConfig.routes));\n                        // no config loaded, fetch the config\n                    }\n                    else if (route.loadChildren && !route.canLoad) {\n                        res.push(this.preloadConfig(ngModule, route));\n                        // recurse into children\n                    }\n                    else if (route.children) {\n                        res.push(this.processRoutes(ngModule, route.children));\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (routes_1_1 && !routes_1_1.done && (_a = routes_1.return)) _a.call(routes_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            return rxjs.from(res).pipe(operators.mergeAll(), operators.map(function (_) { return void 0; }));\n            var e_1, _a;\n        };\n        RouterPreloader.prototype.preloadConfig = function (ngModule, route) {\n            var _this = this;\n            return this.preloadingStrategy.preload(route, function () {\n                var loaded$ = _this.loader.load(ngModule.injector, route);\n                return loaded$.pipe(operators.mergeMap(function (config) {\n                    route._loadedConfig = config;\n                    return _this.processRoutes(config.module, config.routes);\n                }));\n            });\n        };\n        RouterPreloader.decorators = [\n            { type: core.Injectable }\n        ];\n        /** @nocollapse */\n        RouterPreloader.ctorParameters = function () { return [\n            { type: Router, },\n            { type: core.NgModuleFactoryLoader, },\n            { type: core.Compiler, },\n            { type: core.Injector, },\n            { type: PreloadingStrategy, },\n        ]; };\n        return RouterPreloader;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RouterScroller = /** @class */ (function () {\n        function RouterScroller(router, /** @docsNotRequired */ viewportScroller, options) {\n            if (options === void 0) { options = {}; }\n            this.router = router;\n            this.viewportScroller = viewportScroller;\n            this.options = options;\n            this.lastId = 0;\n            this.lastSource = 'imperative';\n            this.restoredId = 0;\n            this.store = {};\n        }\n        RouterScroller.prototype.init = function () {\n            // we want to disable the automatic scrolling because having two places\n            // responsible for scrolling results race conditions, especially given\n            // that browser don't implement this behavior consistently\n            if (this.options.scrollPositionRestoration !== 'disabled') {\n                this.viewportScroller.setHistoryScrollRestoration('manual');\n            }\n            this.routerEventsSubscription = this.createScrollEvents();\n            this.scrollEventsSubscription = this.consumeScrollEvents();\n        };\n        RouterScroller.prototype.createScrollEvents = function () {\n            var _this = this;\n            return this.router.events.subscribe(function (e) {\n                if (e instanceof NavigationStart) {\n                    // store the scroll position of the current stable navigations.\n                    // store the scroll position of the current stable navigations.\n                    _this.store[_this.lastId] = _this.viewportScroller.getScrollPosition();\n                    _this.lastSource = e.navigationTrigger;\n                    _this.restoredId = e.restoredState ? e.restoredState.navigationId : 0;\n                }\n                else if (e instanceof NavigationEnd) {\n                    _this.lastId = e.id;\n                    _this.scheduleScrollEvent(e, _this.router.parseUrl(e.urlAfterRedirects).fragment);\n                }\n            });\n        };\n        RouterScroller.prototype.consumeScrollEvents = function () {\n            var _this = this;\n            return this.router.events.subscribe(function (e) {\n                if (!(e instanceof Scroll))\n                    return;\n                // a popstate event. The pop state event will always ignore anchor scrolling.\n                if (e.position) {\n                    if (_this.options.scrollPositionRestoration === 'top') {\n                        _this.viewportScroller.scrollToPosition([0, 0]);\n                    }\n                    else if (_this.options.scrollPositionRestoration === 'enabled') {\n                        _this.viewportScroller.scrollToPosition(e.position);\n                    }\n                    // imperative navigation \"forward\"\n                }\n                else {\n                    if (e.anchor && _this.options.anchorScrolling === 'enabled') {\n                        _this.viewportScroller.scrollToAnchor(e.anchor);\n                    }\n                    else if (_this.options.scrollPositionRestoration !== 'disabled') {\n                        _this.viewportScroller.scrollToPosition([0, 0]);\n                    }\n                }\n            });\n        };\n        RouterScroller.prototype.scheduleScrollEvent = function (routerEvent, anchor) {\n            this.router.triggerEvent(new Scroll(routerEvent, this.lastSource === 'popstate' ? this.store[this.restoredId] : null, anchor));\n        };\n        RouterScroller.prototype.ngOnDestroy = function () {\n            if (this.routerEventsSubscription) {\n                this.routerEventsSubscription.unsubscribe();\n            }\n            if (this.scrollEventsSubscription) {\n                this.scrollEventsSubscription.unsubscribe();\n            }\n        };\n        return RouterScroller;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Contains a list of directives\n     *\n     *\n     */\n    var ROUTER_DIRECTIVES = [RouterOutlet, RouterLink, RouterLinkWithHref, RouterLinkActive];\n    /**\n     * @description\n     *\n     * Is used in DI to configure the router.\n     *\n     *\n     */\n    var ROUTER_CONFIGURATION = new core.InjectionToken('ROUTER_CONFIGURATION');\n    /**\n     * @docsNotRequired\n     */\n    var ROUTER_FORROOT_GUARD = new core.InjectionToken('ROUTER_FORROOT_GUARD');\n    var ROUTER_PROVIDERS = [\n        common.Location,\n        { provide: UrlSerializer, useClass: DefaultUrlSerializer },\n        {\n            provide: Router,\n            useFactory: setupRouter,\n            deps: [\n                core.ApplicationRef, UrlSerializer, ChildrenOutletContexts, common.Location, core.Injector,\n                core.NgModuleFactoryLoader, core.Compiler, ROUTES, ROUTER_CONFIGURATION,\n                [UrlHandlingStrategy, new core.Optional()], [RouteReuseStrategy, new core.Optional()]\n            ]\n        },\n        ChildrenOutletContexts,\n        { provide: ActivatedRoute, useFactory: rootRoute, deps: [Router] },\n        { provide: core.NgModuleFactoryLoader, useClass: core.SystemJsNgModuleLoader },\n        RouterPreloader,\n        NoPreloading,\n        PreloadAllModules,\n        { provide: ROUTER_CONFIGURATION, useValue: { enableTracing: false } },\n    ];\n    function routerNgProbeToken() {\n        return new core.NgProbeToken('Router', Router);\n    }\n    /**\n     * @usageNotes\n     *\n     * RouterModule can be imported multiple times: once per lazily-loaded bundle.\n     * Since the router deals with a global shared resource--location, we cannot have\n     * more than one router service active.\n     *\n     * That is why there are two ways to create the module: `RouterModule.forRoot` and\n     * `RouterModule.forChild`.\n     *\n     * * `forRoot` creates a module that contains all the directives, the given routes, and the router\n     *   service itself.\n     * * `forChild` creates a module that contains all the directives and the given routes, but does not\n     *   include the router service.\n     *\n     * When registered at the root, the module should be used as follows\n     *\n     * ```\n     * @NgModule({\n     *   imports: [RouterModule.forRoot(ROUTES)]\n     * })\n     * class MyNgModule {}\n     * ```\n     *\n     * For submodules and lazy loaded submodules the module should be used as follows:\n     *\n     * ```\n     * @NgModule({\n     *   imports: [RouterModule.forChild(ROUTES)]\n     * })\n     * class MyNgModule {}\n     * ```\n     *\n     * @description\n     *\n     * Adds router directives and providers.\n     *\n     * Managing state transitions is one of the hardest parts of building applications. This is\n     * especially true on the web, where you also need to ensure that the state is reflected in the URL.\n     * In addition, we often want to split applications into multiple bundles and load them on demand.\n     * Doing this transparently is not trivial.\n     *\n     * The Angular router solves these problems. Using the router, you can declaratively specify\n     * application states, manage state transitions while taking care of the URL, and load bundles on\n     * demand.\n     *\n     * [Read this developer guide](https://angular.io/docs/ts/latest/guide/router.html) to get an\n     * overview of how the router should be used.\n     *\n     *\n     */\n    var RouterModule = /** @class */ (function () {\n        // Note: We are injecting the Router so it gets created eagerly...\n        function RouterModule(guard, router) {\n        }\n        /**\n         * Creates a module with all the router providers and directives. It also optionally sets up an\n         * application listener to perform an initial navigation.\n         *\n         * Options (see `ExtraOptions`):\n         * * `enableTracing` makes the router log all its internal events to the console.\n         * * `useHash` enables the location strategy that uses the URL fragment instead of the history\n         * API.\n         * * `initialNavigation` disables the initial navigation.\n         * * `errorHandler` provides a custom error handler.\n         * * `preloadingStrategy` configures a preloading strategy (see `PreloadAllModules`).\n         * * `onSameUrlNavigation` configures how the router handles navigation to the current URL. See\n         * `ExtraOptions` for more details.\n         */\n        /**\n           * Creates a module with all the router providers and directives. It also optionally sets up an\n           * application listener to perform an initial navigation.\n           *\n           * Options (see `ExtraOptions`):\n           * * `enableTracing` makes the router log all its internal events to the console.\n           * * `useHash` enables the location strategy that uses the URL fragment instead of the history\n           * API.\n           * * `initialNavigation` disables the initial navigation.\n           * * `errorHandler` provides a custom error handler.\n           * * `preloadingStrategy` configures a preloading strategy (see `PreloadAllModules`).\n           * * `onSameUrlNavigation` configures how the router handles navigation to the current URL. See\n           * `ExtraOptions` for more details.\n           */\n        RouterModule.forRoot = /**\n           * Creates a module with all the router providers and directives. It also optionally sets up an\n           * application listener to perform an initial navigation.\n           *\n           * Options (see `ExtraOptions`):\n           * * `enableTracing` makes the router log all its internal events to the console.\n           * * `useHash` enables the location strategy that uses the URL fragment instead of the history\n           * API.\n           * * `initialNavigation` disables the initial navigation.\n           * * `errorHandler` provides a custom error handler.\n           * * `preloadingStrategy` configures a preloading strategy (see `PreloadAllModules`).\n           * * `onSameUrlNavigation` configures how the router handles navigation to the current URL. See\n           * `ExtraOptions` for more details.\n           */\n        function (routes, config) {\n            return {\n                ngModule: RouterModule,\n                providers: [\n                    ROUTER_PROVIDERS,\n                    provideRoutes(routes),\n                    {\n                        provide: ROUTER_FORROOT_GUARD,\n                        useFactory: provideForRootGuard,\n                        deps: [[Router, new core.Optional(), new core.SkipSelf()]]\n                    },\n                    { provide: ROUTER_CONFIGURATION, useValue: config ? config : {} },\n                    {\n                        provide: common.LocationStrategy,\n                        useFactory: provideLocationStrategy,\n                        deps: [\n                            common.PlatformLocation, [new core.Inject(common.APP_BASE_HREF), new core.Optional()], ROUTER_CONFIGURATION\n                        ]\n                    },\n                    {\n                        provide: RouterScroller,\n                        useFactory: createRouterScroller,\n                        deps: [Router, common.ViewportScroller, ROUTER_CONFIGURATION]\n                    },\n                    {\n                        provide: PreloadingStrategy,\n                        useExisting: config && config.preloadingStrategy ? config.preloadingStrategy :\n                            NoPreloading\n                    },\n                    { provide: core.NgProbeToken, multi: true, useFactory: routerNgProbeToken },\n                    provideRouterInitializer(),\n                ],\n            };\n        };\n        /**\n         * Creates a module with all the router directives and a provider registering routes.\n         */\n        /**\n           * Creates a module with all the router directives and a provider registering routes.\n           */\n        RouterModule.forChild = /**\n           * Creates a module with all the router directives and a provider registering routes.\n           */\n        function (routes) {\n            return { ngModule: RouterModule, providers: [provideRoutes(routes)] };\n        };\n        RouterModule.decorators = [\n            { type: core.NgModule, args: [{ declarations: ROUTER_DIRECTIVES, exports: ROUTER_DIRECTIVES },] }\n        ];\n        /** @nocollapse */\n        RouterModule.ctorParameters = function () { return [\n            { type: undefined, decorators: [{ type: core.Optional }, { type: core.Inject, args: [ROUTER_FORROOT_GUARD,] },] },\n            { type: Router, decorators: [{ type: core.Optional },] },\n        ]; };\n        return RouterModule;\n    }());\n    function createRouterScroller(router, viewportScroller, config) {\n        if (config.scrollOffset) {\n            viewportScroller.setOffset(config.scrollOffset);\n        }\n        return new RouterScroller(router, viewportScroller, config);\n    }\n    function provideLocationStrategy(platformLocationStrategy, baseHref, options) {\n        if (options === void 0) { options = {}; }\n        return options.useHash ? new common.HashLocationStrategy(platformLocationStrategy, baseHref) :\n            new common.PathLocationStrategy(platformLocationStrategy, baseHref);\n    }\n    function provideForRootGuard(router) {\n        if (router) {\n            throw new Error(\"RouterModule.forRoot() called twice. Lazy loaded modules should use RouterModule.forChild() instead.\");\n        }\n        return 'guarded';\n    }\n    /**\n     * @description\n     *\n     * Registers routes.\n     *\n     * ### Example\n     *\n     * ```\n     * @NgModule({\n     *   imports: [RouterModule.forChild(ROUTES)],\n     *   providers: [provideRoutes(EXTRA_ROUTES)]\n     * })\n     * class MyNgModule {}\n     * ```\n     *\n     *\n     */\n    function provideRoutes(routes) {\n        return [\n            { provide: core.ANALYZE_FOR_ENTRY_COMPONENTS, multi: true, useValue: routes },\n            { provide: ROUTES, multi: true, useValue: routes },\n        ];\n    }\n    function setupRouter(ref, urlSerializer, contexts, location, injector, loader, compiler, config, opts, urlHandlingStrategy, routeReuseStrategy) {\n        if (opts === void 0) { opts = {}; }\n        var router = new Router(null, urlSerializer, contexts, location, injector, loader, compiler, flatten(config));\n        if (urlHandlingStrategy) {\n            router.urlHandlingStrategy = urlHandlingStrategy;\n        }\n        if (routeReuseStrategy) {\n            router.routeReuseStrategy = routeReuseStrategy;\n        }\n        if (opts.errorHandler) {\n            router.errorHandler = opts.errorHandler;\n        }\n        if (opts.enableTracing) {\n            var dom_1 = platformBrowser.ɵgetDOM();\n            router.events.subscribe(function (e) {\n                dom_1.logGroup(\"Router Event: \" + e.constructor.name);\n                dom_1.log(e.toString());\n                dom_1.log(e);\n                dom_1.logGroupEnd();\n            });\n        }\n        if (opts.onSameUrlNavigation) {\n            router.onSameUrlNavigation = opts.onSameUrlNavigation;\n        }\n        if (opts.paramsInheritanceStrategy) {\n            router.paramsInheritanceStrategy = opts.paramsInheritanceStrategy;\n        }\n        return router;\n    }\n    function rootRoute(router) {\n        return router.routerState.root;\n    }\n    /**\n     * To initialize the router properly we need to do in two steps:\n     *\n     * We need to start the navigation in a APP_INITIALIZER to block the bootstrap if\n     * a resolver or a guards executes asynchronously. Second, we need to actually run\n     * activation in a BOOTSTRAP_LISTENER. We utilize the afterPreactivation\n     * hook provided by the router to do that.\n     *\n     * The router navigation starts, reaches the point when preactivation is done, and then\n     * pauses. It waits for the hook to be resolved. We then resolve it only in a bootstrap listener.\n     */\n    var RouterInitializer = /** @class */ (function () {\n        function RouterInitializer(injector) {\n            this.injector = injector;\n            this.initNavigation = false;\n            this.resultOfPreactivationDone = new rxjs.Subject();\n        }\n        RouterInitializer.prototype.appInitializer = function () {\n            var _this = this;\n            var p = this.injector.get(common.LOCATION_INITIALIZED, Promise.resolve(null));\n            return p.then(function () {\n                var resolve = (null);\n                var res = new Promise(function (r) { return resolve = r; });\n                var router = _this.injector.get(Router);\n                var opts = _this.injector.get(ROUTER_CONFIGURATION);\n                if (_this.isLegacyDisabled(opts) || _this.isLegacyEnabled(opts)) {\n                    resolve(true);\n                }\n                else if (opts.initialNavigation === 'disabled') {\n                    router.setUpLocationChangeListener();\n                    resolve(true);\n                }\n                else if (opts.initialNavigation === 'enabled') {\n                    router.hooks.afterPreactivation = function () {\n                        // only the initial navigation should be delayed\n                        if (!_this.initNavigation) {\n                            _this.initNavigation = true;\n                            resolve(true);\n                            return _this.resultOfPreactivationDone;\n                            // subsequent navigations should not be delayed\n                        }\n                        else {\n                            return rxjs.of(null);\n                        }\n                    };\n                    router.initialNavigation();\n                }\n                else {\n                    throw new Error(\"Invalid initialNavigation options: '\" + opts.initialNavigation + \"'\");\n                }\n                return res;\n            });\n        };\n        RouterInitializer.prototype.bootstrapListener = function (bootstrappedComponentRef) {\n            var opts = this.injector.get(ROUTER_CONFIGURATION);\n            var preloader = this.injector.get(RouterPreloader);\n            var routerScroller = this.injector.get(RouterScroller);\n            var router = this.injector.get(Router);\n            var ref = this.injector.get(core.ApplicationRef);\n            if (bootstrappedComponentRef !== ref.components[0]) {\n                return;\n            }\n            if (this.isLegacyEnabled(opts)) {\n                router.initialNavigation();\n            }\n            else if (this.isLegacyDisabled(opts)) {\n                router.setUpLocationChangeListener();\n            }\n            preloader.setUpPreloading();\n            routerScroller.init();\n            router.resetRootComponentType(ref.componentTypes[0]);\n            this.resultOfPreactivationDone.next((null));\n            this.resultOfPreactivationDone.complete();\n        };\n        RouterInitializer.prototype.isLegacyEnabled = function (opts) {\n            return opts.initialNavigation === 'legacy_enabled' || opts.initialNavigation === true ||\n                opts.initialNavigation === undefined;\n        };\n        RouterInitializer.prototype.isLegacyDisabled = function (opts) {\n            return opts.initialNavigation === 'legacy_disabled' || opts.initialNavigation === false;\n        };\n        RouterInitializer.decorators = [\n            { type: core.Injectable }\n        ];\n        /** @nocollapse */\n        RouterInitializer.ctorParameters = function () { return [\n            { type: core.Injector, },\n        ]; };\n        return RouterInitializer;\n    }());\n    function getAppInitializer(r) {\n        return r.appInitializer.bind(r);\n    }\n    function getBootstrapListener(r) {\n        return r.bootstrapListener.bind(r);\n    }\n    /**\n     * A token for the router initializer that will be called after the app is bootstrapped.\n     *\n     * @experimental\n     */\n    var ROUTER_INITIALIZER = new core.InjectionToken('Router Initializer');\n    function provideRouterInitializer() {\n        return [\n            RouterInitializer,\n            {\n                provide: core.APP_INITIALIZER,\n                multi: true,\n                useFactory: getAppInitializer,\n                deps: [RouterInitializer]\n            },\n            { provide: ROUTER_INITIALIZER, useFactory: getBootstrapListener, deps: [RouterInitializer] },\n            { provide: core.APP_BOOTSTRAP_LISTENER, multi: true, useExisting: ROUTER_INITIALIZER },\n        ];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var VERSION = new core.Version('6.1.0-beta.0+43.sha-6ea6926');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ɵangular_packages_router_router_a = ROUTER_FORROOT_GUARD;\n    exports.ɵangular_packages_router_router_h = RouterInitializer;\n    exports.ɵangular_packages_router_router_c = createRouterScroller;\n    exports.ɵangular_packages_router_router_i = getAppInitializer;\n    exports.ɵangular_packages_router_router_j = getBootstrapListener;\n    exports.ɵangular_packages_router_router_e = provideForRootGuard;\n    exports.ɵangular_packages_router_router_d = provideLocationStrategy;\n    exports.ɵangular_packages_router_router_k = provideRouterInitializer;\n    exports.ɵangular_packages_router_router_g = rootRoute;\n    exports.ɵangular_packages_router_router_b = routerNgProbeToken;\n    exports.ɵangular_packages_router_router_f = setupRouter;\n    exports.ɵangular_packages_router_router_n = RouterScroller;\n    exports.ɵangular_packages_router_router_l = Tree;\n    exports.ɵangular_packages_router_router_m = TreeNode;\n    exports.RouterLink = RouterLink;\n    exports.RouterLinkWithHref = RouterLinkWithHref;\n    exports.RouterLinkActive = RouterLinkActive;\n    exports.RouterOutlet = RouterOutlet;\n    exports.ActivationEnd = ActivationEnd;\n    exports.ActivationStart = ActivationStart;\n    exports.ChildActivationEnd = ChildActivationEnd;\n    exports.ChildActivationStart = ChildActivationStart;\n    exports.GuardsCheckEnd = GuardsCheckEnd;\n    exports.GuardsCheckStart = GuardsCheckStart;\n    exports.NavigationCancel = NavigationCancel;\n    exports.NavigationEnd = NavigationEnd;\n    exports.NavigationError = NavigationError;\n    exports.NavigationStart = NavigationStart;\n    exports.ResolveEnd = ResolveEnd;\n    exports.ResolveStart = ResolveStart;\n    exports.RouteConfigLoadEnd = RouteConfigLoadEnd;\n    exports.RouteConfigLoadStart = RouteConfigLoadStart;\n    exports.RouterEvent = RouterEvent;\n    exports.RoutesRecognized = RoutesRecognized;\n    exports.Scroll = Scroll;\n    exports.RouteReuseStrategy = RouteReuseStrategy;\n    exports.Router = Router;\n    exports.ROUTES = ROUTES;\n    exports.ROUTER_CONFIGURATION = ROUTER_CONFIGURATION;\n    exports.ROUTER_INITIALIZER = ROUTER_INITIALIZER;\n    exports.RouterModule = RouterModule;\n    exports.provideRoutes = provideRoutes;\n    exports.ChildrenOutletContexts = ChildrenOutletContexts;\n    exports.OutletContext = OutletContext;\n    exports.NoPreloading = NoPreloading;\n    exports.PreloadAllModules = PreloadAllModules;\n    exports.PreloadingStrategy = PreloadingStrategy;\n    exports.RouterPreloader = RouterPreloader;\n    exports.ActivatedRoute = ActivatedRoute;\n    exports.ActivatedRouteSnapshot = ActivatedRouteSnapshot;\n    exports.RouterState = RouterState;\n    exports.RouterStateSnapshot = RouterStateSnapshot;\n    exports.PRIMARY_OUTLET = PRIMARY_OUTLET;\n    exports.convertToParamMap = convertToParamMap;\n    exports.UrlHandlingStrategy = UrlHandlingStrategy;\n    exports.DefaultUrlSerializer = DefaultUrlSerializer;\n    exports.UrlSegment = UrlSegment;\n    exports.UrlSegmentGroup = UrlSegmentGroup;\n    exports.UrlSerializer = UrlSerializer;\n    exports.UrlTree = UrlTree;\n    exports.VERSION = VERSION;\n    exports.ɵROUTER_PROVIDERS = ROUTER_PROVIDERS;\n    exports.ɵflatten = flatten;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=router.umd.js.map\n"]}