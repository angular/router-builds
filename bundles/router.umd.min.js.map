{"version":3,"sources":["packages/router/router.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","router","core","rxjs","operators","common","platformBrowser","this","extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","__values","o","m","Symbol","iterator","next","value","done","__read","r","e","ar","push","error","__spread","concat","RouterEvent","NavigationStart","_super","id","url","navigationTrigger","restoredState","_this","toString","NavigationEnd","urlAfterRedirects","NavigationCancel","reason","NavigationError","RoutesRecognized","state","GuardsCheckStart","GuardsCheckEnd","shouldActivate","ResolveStart","ResolveEnd","RouteConfigLoadStart","route","path","RouteConfigLoadEnd","ChildActivationStart","snapshot","routeConfig","ChildActivationEnd","ActivationStart","ActivationEnd","EmptyOutletComponent","decorators","type","Component","args","template","PRIMARY_OUTLET","ParamsAsMap","params","has","name","get","v","isArray","getAll","defineProperty","keys","enumerable","configurable","convertToParamMap","defaultUrlMatcher","segments","segmentGroup","parts","split","pathMatch","hasChildren","posParams","index","part","segment","startsWith","substring","consumed","slice","LoadedRouterConfig","routes","validateConfig","config","parentPath","validateNode","getFullPath","fullPath","Error","component","children","loadChildren","outlet","redirectTo","matcher","charAt","currentRoute","standardizeConfig","map","c","shallowEqual","a","key","k1","k2","flatten","arr","apply","last","forEach","callback","prop","andObservables","observables","pipe","mergeAll","every","result","wrapIntoObservable","ɵisObservable","ɵisPromise","from","Promise","resolve","of","containsTree","container","containee","exact","equalQueryParams","queryParams","equalSegmentGroups","equalPath","numberOfChildren","root","containsQueryParams","containsSegmentGroup","containsSegmentGroupHelper","containeePaths","current","UrlTree","fragment","_queryParamMap","DEFAULT_SERIALIZER","serialize","UrlSegmentGroup","parent","k","serializePaths","UrlSegment","parameters","_parameterMap","serializePath","as","bs","mapChildrenIntoArray","fn","res","child","childOutlet","UrlSerializer","DefaultUrlSerializer","parse","UrlParser","parseRootSegment","parseQueryParams","parseFragment","tree","serializeSegment","primary","children_1","join","serializeQueryParams","strParams","encodeUriQuery","encodeUriFragment","encodeURI","encodeUriString","encodeURIComponent","replace","encodeUriSegment","decode","decodeURIComponent","decodeQuery","serializeMatrixParams","SEGMENT_RE","matchSegments","str","match","QUERY_PARAM_RE","QUERY_PARAM_VALUE_RE","remaining","consumeOptional","peekStartsWith","parseChildren","parseQueryParam","parseSegment","capture","parseParens","parseMatrixParams","parseParam","valueMatch","matchQueryParams","matchUrlQueryParamValue","decodedKey","decodedVal","currentVal","allowPrimary","outletName","undefined","indexOf","substr","NoMatch","AbsoluteRedirect","urlTree","noMatch","Observable","obs","absoluteRedirect","newTree","namedOutletsRedirect","ApplyRedirects","moduleInjector","configLoader","urlSerializer","allowRedirects","ngModule","NgModuleRef","expandSegmentGroup","rootSegmentGroup","createUrlTree","catchError","noMatchError","rootCandidate","_a","expandChildren","expandSegment","waitForMap","obj","waitHead","waitTail","mapped","concatAll","expandSegmentAgainstRoute","first","_","EmptyError","noLeftoversInUrl","paths","getOutlet","matchSegmentAgainstRoute","expandSegmentAgainstRouteUsingRedirect","expandWildCardWithParamsAgainstRouteUsingRedirect","expandRegularSegmentAgainstRouteUsingRedirect","applyRedirectCommands","lineralizeSegments","mergeMap","newSegments","group","consumedSegments","lastChild","positionalParamSegments","matched","rawSegmentGroup","load","injector","cfg","_loadedConfig","rawSlicedSegments","getChildConfig","routerConfig","childModule","childConfig","slicedSegments","containsEmptyPathRedirectsWithNamedOutlets","some","isEmptyPathRedirect","mergeTrivialChildren","createChildrenForEmptySegments","primarySegmentGroup","e_3","routes_2","routes_2_1","e_3_1","return","containsEmptyPathRedirects","addEmptySegmentsToChildrenIfNeeded","e_2","routes_1","routes_1_1","e_2_1","cs","runCanLoadGuard","canLoad","injectionToken","guard","shouldLoad","canLoadFails","navigationCancelingError","message","applyRedirectCreatreUrlTree","newRoot","createSegmentGroup","createQueryParams","redirectToParams","actualParams","sourceName","updatedSegments","createSegments","redirectToSegments","actualSegments","findPosParam","findOrReturn","redirectToUrlSegment","pos","e_1","idx","actualSegments_1","actualSegments_1_1","splice","e_1_1","Tree","_root","pathFromRoot","findNode","firstChild","siblings","findPath","filter","cc","node","_b","node_1","_c","unshift","TreeNode","nodeChildrenAsMap","RouterState","setRouterState","createEmptyState","rootComponent","createEmptyStateSnapshot","activated","ActivatedRouteSnapshot","RouterStateSnapshot","emptyUrl","BehaviorSubject","emptyParams","emptyData","emptyQueryParams","ActivatedRoute","data","futureSnapshot","_futureSnapshot","_routerState","_paramMap","inheritedParamsDataResolve","paramsInheritanceStrategy","inheritingStartingFrom","parent_1","flattenInherited","reduce","curr","_resolvedData","urlSegment","lastPathIndex","_urlSegment","_lastPathIndex","_resolve","serializeNode","advanceActivatedRoute","currentSnapshot","nextSnapshot","shallowEqualArrays","equalParamsAndUrlSegments","equalSegments","isMatrixParams","command","outlets","segmentPath","oldSegmentGroup","newSegmentGroup","qp","replaceSegment","oldSegment","newSegment","Navigation","isAbsolute","numberOfDoubleDots","commands","cmdWithOutlet","find","toRoot","Position","processChildren","getPath","updateSegmentGroup","startIndex","updateSegmentGroupChildren","prefixedWith","currentCommandIndex","currentPathIndex","pathIndex","commandIndex","compare","slicedCommands","g","createNewSegmentGroup","outlets_2","getOutlets","createNewSegmentChildren","stringify","CanActivate","CanDeactivate","PreActivation","future","forwardEvent","canActivateChecks","canDeactivateChecks","initialize","parentContexts","futureRoot","setupChildRouteGuards","checkGuards","isDeactivating","isActivating","runCanDeactivateChecks","canDeactivate","runCanActivateChecks","resolveData","concatMap","check","runResolve","futureNode","currNode","contexts","futurePath","prevChildren","setupRouteGuards","deactivateRouteAndItsChildren","getContext","context","shouldRunGuardsAndResolvers","runGuardsAndResolvers","mode","childName","isActivated","runCanDeactivate","fireChildActivationStart","fireActivationStart","runCanActivateChild","runCanActivate","canActivate","getToken","canActivateChildGuards","reverse","extractCanActivateChild","guards","canActivateChild","resolveNode","resolvedData","key_1","getResolver","resolver","token","closestLoadedConfig","NoMatch$1","Recognizer","rootComponentType","recognize","split$1","processSegmentGroup","freeze","rootNode","routeState","inheritParamsAndData","routeNode","processSegment","checkOutletNameUniqueness","nodes","names","routeWithSameOutletName","sortActivatedRouteSnapshots","sort","localeCompare","config_1","config_1_1","processSegmentAgainstRoute","rawSegment","getData","getSourceSegmentGroup","getPathIndexShift","getResolve","match$1","_sourceSegment","_segmentIndexShift","containsEmptyPathMatchesWithNamedOutlets","emptyPathMatch","getOutlet$1","s_1","createChildrenForEmptyPaths","primarySegment","containsEmptyPathMatches","s_2","addEmptyPathsToChildrenIfNeeded","RouteReuseStrategy","DefaultRouteReuseStrategy","shouldDetach","store","detachedTree","shouldAttach","retrieve","shouldReuseRoute","ROUTES","InjectionToken","RouterConfigLoader","loader","compiler","onLoadStartListener","onLoadEndListener","parentInjector","loadModuleFactory","NgModuleFactory","compileModuleAsync","UrlHandlingStrategy","DefaultUrlHandlingStrategy","shouldProcessUrl","extract","merge","newUrlPart","wholeUrl","defaultErrorHandler","defaultMalformedUriErrorHandler","defaultRouterHook","Router","rootContexts","location","navigations","navigationId","events","Subject","errorHandler","malformedUriErrorHandler","navigated","lastSuccessfulId","hooks","beforePreactivation","afterPreactivation","urlHandlingStrategy","routeReuseStrategy","onSameUrlNavigation","resetConfig","currentUrlTree","createEmptyUrlTree","rawUrlTree","triggerEvent","routerState","processNavigations","resetRootComponentType","initialNavigation","setUpLocationChangeListener","navigateByUrl","replaceUrl","locationSubscription","subscribe","change","parseUrl","source","setTimeout","scheduleNavigation","serializeUrl","ngOnDestroy","dispose","unsubscribe","navigationExtras","relativeTo","preserveQueryParams","queryParamsHandling","preserveFragment","isDevMode","console","warn","f","q","removeEmptyProps","nav","computeNavigation","cmd","cmdIdx","outlets_1","urlPart","partIndex","startingPosition","findStartingPosition","modifier","createPositionApplyingDoubleDots","ci","dd","extras","skipLocationChange","mergedTree","navigate","validateCommands","isActive","executeScheduledNavigation","promise","catch","rawUrl","lastNavigation","reject","rej","urlTransition","then","runNavigate","precreatedState","resolvePromise","rejectPromise","preActivation","routerState$","appliedUrl","applyRedirects","evt","createRouterState","prevState","createNode","createOrReuseChildren","detachedRouteHandle","setFutureSnapshotsOfActivatedRoutes","createActivatedRoute","activateRoutes","storedState","storedUrl","navigationIsSuccessful","isCurrentPathEqualTo","replaceState","go","ActivateRoutes","activate","resetUrlToCurrentUrlTree","isNavigationCancelingError","resetStateAndUrl","ee","futureState","currState","currRoot","deactivateChildRoutes","activateChildRoutes","futureChild","childOutletName","deactivateRoutes","parentContext","detachAndStoreRouteSubtree","deactivateRouteAndOutlet","componentRef","detach","onOutletDeactivated","contexts_1","deactivate","getOrCreateContext","stored","onOutletReAttached","attachRef","attach","advanceActivatedRouteNodeAndItsChildren","parentLoadedConfig","cmpFactoryResolver","componentFactoryResolver","activateWith","RouterLink","tabIndex","renderer","el","setAttribute","nativeElement","set","preserve","onClick","attrBoolValue","Directive","selector","ctorParameters","String","Attribute","Renderer2","ElementRef","propDecorators","Input","routerLink","HostListener","RouterLinkWithHref","locationStrategy","subscription","updateTargetUrlAndHref","ngOnChanges","changes","button","ctrlKey","metaKey","shiftKey","target","href","prepareExternalUrl","LocationStrategy","HostBinding","RouterLinkActive","element","cdr","classes","routerLinkActiveOptions","update","ngAfterContentInit","links","linksWithHrefs","hasActiveLinks","addClass","removeClass","isLinkActive","link","exportAs","ChangeDetectorRef","ContentChildren","descendants","routerLinkActive","OutletContext","ChildrenOutletContexts","Map","onChildOutletCreated","onChildOutletDestroyed","RouterOutlet","changeDetector","_activatedRoute","activateEvents","EventEmitter","deactivateEvents","ngOnInit","instance","cmp","ref","activatedRoute","insert","hostView","destroy","emit","resolveComponentFactory","childContexts","OutletInjector","createComponent","markForCheck","ViewContainerRef","ComponentFactoryResolver","Output","notFoundValue","PreloadingStrategy","PreloadAllModules","preload","NoPreloading","RouterPreloader","moduleLoader","preloadingStrategy","setUpPreloading","processRoutes","preloadConfig","Injectable","NgModuleFactoryLoader","Compiler","Injector","ROUTER_DIRECTIVES","ROUTER_CONFIGURATION","ROUTER_FORROOT_GUARD","ROUTER_PROVIDERS","Location","provide","useClass","useFactory","setupRouter","deps","ApplicationRef","Optional","rootRoute","SystemJsNgModuleLoader","useValue","enableTracing","routerNgProbeToken","NgProbeToken","RouterModule","forRoot","providers","provideRoutes","provideForRootGuard","SkipSelf","provideLocationStrategy","PlatformLocation","Inject","APP_BASE_HREF","useExisting","multi","provideRouterInitializer","forChild","NgModule","declarations","entryComponents","platformLocationStrategy","baseHref","options","useHash","HashLocationStrategy","PathLocationStrategy","ANALYZE_FOR_ENTRY_COMPONENTS","opts","dom_1","ɵgetDOM","logGroup","log","logGroupEnd","RouterInitializer","initNavigation","resultOfPreactivationDone","appInitializer","LOCATION_INITIALIZED","isLegacyDisabled","isLegacyEnabled","bootstrapListener","bootstrappedComponentRef","preloader","components","componentTypes","complete","getAppInitializer","bind","getBootstrapListener","ROUTER_INITIALIZER","APP_INITIALIZER","APP_BOOTSTRAP_LISTENER","VERSION","Version","ɵangular_packages_router_router_a","ɵangular_packages_router_router_g","ɵangular_packages_router_router_h","ɵangular_packages_router_router_i","ɵangular_packages_router_router_d","ɵangular_packages_router_router_c","ɵangular_packages_router_router_j","ɵangular_packages_router_router_f","ɵangular_packages_router_router_b","ɵangular_packages_router_router_e","ɵangular_packages_router_router_k","ɵangular_packages_router_router_l","ɵEmptyOutletComponent","ɵROUTER_PROVIDERS","ɵflatten"],"mappings":"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","sourcesContent":["/**\n * @license Angular v6.0.8+4.sha-48415ed\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('rxjs'), require('rxjs/operators'), require('@angular/common'), require('@angular/platform-browser')) :\n    typeof define === 'function' && define.amd ? define('@angular/router', ['exports', '@angular/core', 'rxjs', 'rxjs/operators', '@angular/common', '@angular/platform-browser'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.router = {}),global.ng.core,global.rxjs,global.rxjs.operators,global.ng.common,global.ng.platformBrowser));\n}(this, (function (exports,core,rxjs,operators,common,platformBrowser) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Base for events the Router goes through, as opposed to events tied to a specific\n     * Route. `RouterEvent`s will only be fired one time for any given navigation.\n     *\n     * Example:\n     *\n     * ```\n     * class MyService {\n     *   constructor(public router: Router, logger: Logger) {\n     *     router.events.filter(e => e instanceof RouterEvent).subscribe(e => {\n     *       logger.log(e.id, e.url);\n     *     });\n     *   }\n     * }\n     * ```\n     *\n     * @experimental\n     */\n    var RouterEvent = /** @class */ (function () {\n        function RouterEvent(\n        /** @docsNotRequired */\n        id, \n        /** @docsNotRequired */\n        url) {\n            this.id = id;\n            this.url = url;\n        }\n        return RouterEvent;\n    }());\n    /**\n     * @description\n     *\n     * Represents an event triggered when a navigation starts.\n     *\n     *\n     */\n    var NavigationStart = /** @class */ (function (_super) {\n        __extends(NavigationStart, _super);\n        function NavigationStart(\n        /** @docsNotRequired */\n        id, \n        /** @docsNotRequired */\n        url, \n        /** @docsNotRequired */\n        navigationTrigger, \n        /** @docsNotRequired */\n        restoredState) {\n            /** @docsNotRequired */\n            if (navigationTrigger === void 0) { navigationTrigger = 'imperative'; }\n            /** @docsNotRequired */\n            if (restoredState === void 0) { restoredState = null; }\n            var _this = _super.call(this, id, url) || this;\n            _this.navigationTrigger = navigationTrigger;\n            _this.restoredState = restoredState;\n            return _this;\n        }\n        /** @docsNotRequired */\n        NavigationStart.prototype.toString = function () { return \"NavigationStart(id: \" + this.id + \", url: '\" + this.url + \"')\"; };\n        return NavigationStart;\n    }(RouterEvent));\n    /**\n     * @description\n     *\n     * Represents an event triggered when a navigation ends successfully.\n     *\n     *\n     */\n    var NavigationEnd = /** @class */ (function (_super) {\n        __extends(NavigationEnd, _super);\n        function NavigationEnd(\n        /** @docsNotRequired */\n        id, \n        /** @docsNotRequired */\n        url, \n        /** @docsNotRequired */\n        urlAfterRedirects) {\n            var _this = _super.call(this, id, url) || this;\n            _this.urlAfterRedirects = urlAfterRedirects;\n            return _this;\n        }\n        /** @docsNotRequired */\n        NavigationEnd.prototype.toString = function () {\n            return \"NavigationEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"')\";\n        };\n        return NavigationEnd;\n    }(RouterEvent));\n    /**\n     * @description\n     *\n     * Represents an event triggered when a navigation is canceled.\n     *\n     *\n     */\n    var NavigationCancel = /** @class */ (function (_super) {\n        __extends(NavigationCancel, _super);\n        function NavigationCancel(\n        /** @docsNotRequired */\n        id, \n        /** @docsNotRequired */\n        url, \n        /** @docsNotRequired */\n        reason) {\n            var _this = _super.call(this, id, url) || this;\n            _this.reason = reason;\n            return _this;\n        }\n        /** @docsNotRequired */\n        NavigationCancel.prototype.toString = function () { return \"NavigationCancel(id: \" + this.id + \", url: '\" + this.url + \"')\"; };\n        return NavigationCancel;\n    }(RouterEvent));\n    /**\n     * @description\n     *\n     * Represents an event triggered when a navigation fails due to an unexpected error.\n     *\n     *\n     */\n    var NavigationError = /** @class */ (function (_super) {\n        __extends(NavigationError, _super);\n        function NavigationError(\n        /** @docsNotRequired */\n        id, \n        /** @docsNotRequired */\n        url, \n        /** @docsNotRequired */\n        error) {\n            var _this = _super.call(this, id, url) || this;\n            _this.error = error;\n            return _this;\n        }\n        /** @docsNotRequired */\n        NavigationError.prototype.toString = function () {\n            return \"NavigationError(id: \" + this.id + \", url: '\" + this.url + \"', error: \" + this.error + \")\";\n        };\n        return NavigationError;\n    }(RouterEvent));\n    /**\n     * @description\n     *\n     * Represents an event triggered when routes are recognized.\n     *\n     *\n     */\n    var RoutesRecognized = /** @class */ (function (_super) {\n        __extends(RoutesRecognized, _super);\n        function RoutesRecognized(\n        /** @docsNotRequired */\n        id, \n        /** @docsNotRequired */\n        url, \n        /** @docsNotRequired */\n        urlAfterRedirects, \n        /** @docsNotRequired */\n        state) {\n            var _this = _super.call(this, id, url) || this;\n            _this.urlAfterRedirects = urlAfterRedirects;\n            _this.state = state;\n            return _this;\n        }\n        /** @docsNotRequired */\n        RoutesRecognized.prototype.toString = function () {\n            return \"RoutesRecognized(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n        };\n        return RoutesRecognized;\n    }(RouterEvent));\n    /**\n     * @description\n     *\n     * Represents the start of the Guard phase of routing.\n     *\n     * @experimental\n     */\n    var GuardsCheckStart = /** @class */ (function (_super) {\n        __extends(GuardsCheckStart, _super);\n        function GuardsCheckStart(\n        /** @docsNotRequired */\n        id, \n        /** @docsNotRequired */\n        url, \n        /** @docsNotRequired */\n        urlAfterRedirects, \n        /** @docsNotRequired */\n        state) {\n            var _this = _super.call(this, id, url) || this;\n            _this.urlAfterRedirects = urlAfterRedirects;\n            _this.state = state;\n            return _this;\n        }\n        GuardsCheckStart.prototype.toString = function () {\n            return \"GuardsCheckStart(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n        };\n        return GuardsCheckStart;\n    }(RouterEvent));\n    /**\n     * @description\n     *\n     * Represents the end of the Guard phase of routing.\n     *\n     * @experimental\n     */\n    var GuardsCheckEnd = /** @class */ (function (_super) {\n        __extends(GuardsCheckEnd, _super);\n        function GuardsCheckEnd(\n        /** @docsNotRequired */\n        id, \n        /** @docsNotRequired */\n        url, \n        /** @docsNotRequired */\n        urlAfterRedirects, \n        /** @docsNotRequired */\n        state, \n        /** @docsNotRequired */\n        shouldActivate) {\n            var _this = _super.call(this, id, url) || this;\n            _this.urlAfterRedirects = urlAfterRedirects;\n            _this.state = state;\n            _this.shouldActivate = shouldActivate;\n            return _this;\n        }\n        GuardsCheckEnd.prototype.toString = function () {\n            return \"GuardsCheckEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \", shouldActivate: \" + this.shouldActivate + \")\";\n        };\n        return GuardsCheckEnd;\n    }(RouterEvent));\n    /**\n     * @description\n     *\n     * Represents the start of the Resolve phase of routing. The timing of this\n     * event may change, thus it's experimental. In the current iteration it will run\n     * in the \"resolve\" phase whether there's things to resolve or not. In the future this\n     * behavior may change to only run when there are things to be resolved.\n     *\n     * @experimental\n     */\n    var ResolveStart = /** @class */ (function (_super) {\n        __extends(ResolveStart, _super);\n        function ResolveStart(\n        /** @docsNotRequired */\n        id, \n        /** @docsNotRequired */\n        url, \n        /** @docsNotRequired */\n        urlAfterRedirects, \n        /** @docsNotRequired */\n        state) {\n            var _this = _super.call(this, id, url) || this;\n            _this.urlAfterRedirects = urlAfterRedirects;\n            _this.state = state;\n            return _this;\n        }\n        ResolveStart.prototype.toString = function () {\n            return \"ResolveStart(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n        };\n        return ResolveStart;\n    }(RouterEvent));\n    /**\n     * @description\n     *\n     * Represents the end of the Resolve phase of routing. See note on\n     * `ResolveStart` for use of this experimental API.\n     *\n     * @experimental\n     */\n    var ResolveEnd = /** @class */ (function (_super) {\n        __extends(ResolveEnd, _super);\n        function ResolveEnd(\n        /** @docsNotRequired */\n        id, \n        /** @docsNotRequired */\n        url, \n        /** @docsNotRequired */\n        urlAfterRedirects, \n        /** @docsNotRequired */\n        state) {\n            var _this = _super.call(this, id, url) || this;\n            _this.urlAfterRedirects = urlAfterRedirects;\n            _this.state = state;\n            return _this;\n        }\n        ResolveEnd.prototype.toString = function () {\n            return \"ResolveEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n        };\n        return ResolveEnd;\n    }(RouterEvent));\n    /**\n     * @description\n     *\n     * Represents an event triggered before lazy loading a route config.\n     *\n     * @experimental\n     */\n    var RouteConfigLoadStart = /** @class */ (function () {\n        function RouteConfigLoadStart(\n        /** @docsNotRequired */\n        route) {\n            this.route = route;\n        }\n        RouteConfigLoadStart.prototype.toString = function () { return \"RouteConfigLoadStart(path: \" + this.route.path + \")\"; };\n        return RouteConfigLoadStart;\n    }());\n    /**\n     * @description\n     *\n     * Represents an event triggered when a route has been lazy loaded.\n     *\n     * @experimental\n     */\n    var RouteConfigLoadEnd = /** @class */ (function () {\n        function RouteConfigLoadEnd(\n        /** @docsNotRequired */\n        route) {\n            this.route = route;\n        }\n        RouteConfigLoadEnd.prototype.toString = function () { return \"RouteConfigLoadEnd(path: \" + this.route.path + \")\"; };\n        return RouteConfigLoadEnd;\n    }());\n    /**\n     * @description\n     *\n     * Represents the start of end of the Resolve phase of routing. See note on\n     * `ChildActivationEnd` for use of this experimental API.\n     *\n     * @experimental\n     */\n    var ChildActivationStart = /** @class */ (function () {\n        function ChildActivationStart(\n        /** @docsNotRequired */\n        snapshot) {\n            this.snapshot = snapshot;\n        }\n        ChildActivationStart.prototype.toString = function () {\n            var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n            return \"ChildActivationStart(path: '\" + path + \"')\";\n        };\n        return ChildActivationStart;\n    }());\n    /**\n     * @description\n     *\n     * Represents the start of end of the Resolve phase of routing. See note on\n     * `ChildActivationStart` for use of this experimental API.\n     *\n     * @experimental\n     */\n    var ChildActivationEnd = /** @class */ (function () {\n        function ChildActivationEnd(\n        /** @docsNotRequired */\n        snapshot) {\n            this.snapshot = snapshot;\n        }\n        ChildActivationEnd.prototype.toString = function () {\n            var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n            return \"ChildActivationEnd(path: '\" + path + \"')\";\n        };\n        return ChildActivationEnd;\n    }());\n    /**\n     * @description\n     *\n     * Represents the start of end of the Resolve phase of routing. See note on\n     * `ActivationEnd` for use of this experimental API.\n     *\n     * @experimental\n     */\n    var ActivationStart = /** @class */ (function () {\n        function ActivationStart(\n        /** @docsNotRequired */\n        snapshot) {\n            this.snapshot = snapshot;\n        }\n        ActivationStart.prototype.toString = function () {\n            var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n            return \"ActivationStart(path: '\" + path + \"')\";\n        };\n        return ActivationStart;\n    }());\n    /**\n     * @description\n     *\n     * Represents the start of end of the Resolve phase of routing. See note on\n     * `ActivationStart` for use of this experimental API.\n     *\n     * @experimental\n     */\n    var ActivationEnd = /** @class */ (function () {\n        function ActivationEnd(\n        /** @docsNotRequired */\n        snapshot) {\n            this.snapshot = snapshot;\n        }\n        ActivationEnd.prototype.toString = function () {\n            var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n            return \"ActivationEnd(path: '\" + path + \"')\";\n        };\n        return ActivationEnd;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This component is used internally within the router to be a placeholder when an empty\n     * router-outlet is needed. For example, with a config such as:\n     *\n     * `{path: 'parent', outlet: 'nav', children: [...]}`\n     *\n     * In order to render, there needs to be a component on this config, which will default\n     * to this `EmptyOutletComponent`.\n     */\n    var EmptyOutletComponent = /** @class */ (function () {\n        function EmptyOutletComponent() {\n        }\n        EmptyOutletComponent.decorators = [\n            { type: core.Component, args: [{ template: \"<router-outlet></router-outlet>\" }] }\n        ];\n        return EmptyOutletComponent;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Name of the primary outlet.\n     *\n     *\n     */\n    var PRIMARY_OUTLET = 'primary';\n    var ParamsAsMap = /** @class */ (function () {\n        function ParamsAsMap(params) {\n            this.params = params || {};\n        }\n        ParamsAsMap.prototype.has = function (name) { return this.params.hasOwnProperty(name); };\n        ParamsAsMap.prototype.get = function (name) {\n            if (this.has(name)) {\n                var v = this.params[name];\n                return Array.isArray(v) ? v[0] : v;\n            }\n            return null;\n        };\n        ParamsAsMap.prototype.getAll = function (name) {\n            if (this.has(name)) {\n                var v = this.params[name];\n                return Array.isArray(v) ? v : [v];\n            }\n            return [];\n        };\n        Object.defineProperty(ParamsAsMap.prototype, \"keys\", {\n            get: function () { return Object.keys(this.params); },\n            enumerable: true,\n            configurable: true\n        });\n        return ParamsAsMap;\n    }());\n    /**\n     * Convert a `Params` instance to a `ParamMap`.\n     *\n     *\n     */\n    function convertToParamMap(params) {\n        return new ParamsAsMap(params);\n    }\n    var NAVIGATION_CANCELING_ERROR = 'ngNavigationCancelingError';\n    function navigationCancelingError(message) {\n        var error = Error('NavigationCancelingError: ' + message);\n        error[NAVIGATION_CANCELING_ERROR] = true;\n        return error;\n    }\n    function isNavigationCancelingError(error) {\n        return error && error[NAVIGATION_CANCELING_ERROR];\n    }\n    // Matches the route configuration (`route`) against the actual URL (`segments`).\n    function defaultUrlMatcher(segments, segmentGroup, route) {\n        var parts = route.path.split('/');\n        if (parts.length > segments.length) {\n            // The actual URL is shorter than the config, no match\n            return null;\n        }\n        if (route.pathMatch === 'full' &&\n            (segmentGroup.hasChildren() || parts.length < segments.length)) {\n            // The config is longer than the actual URL but we are looking for a full match, return null\n            return null;\n        }\n        var posParams = {};\n        // Check each config part against the actual URL\n        for (var index = 0; index < parts.length; index++) {\n            var part = parts[index];\n            var segment = segments[index];\n            var isParameter = part.startsWith(':');\n            if (isParameter) {\n                posParams[part.substring(1)] = segment;\n            }\n            else if (part !== segment.path) {\n                // The actual URL part does not match the config, no match\n                return null;\n            }\n        }\n        return { consumed: segments.slice(0, parts.length), posParams: posParams };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LoadedRouterConfig = /** @class */ (function () {\n        function LoadedRouterConfig(routes, module) {\n            this.routes = routes;\n            this.module = module;\n        }\n        return LoadedRouterConfig;\n    }());\n    function validateConfig(config, parentPath) {\n        if (parentPath === void 0) { parentPath = ''; }\n        // forEach doesn't iterate undefined values\n        for (var i = 0; i < config.length; i++) {\n            var route = config[i];\n            var fullPath = getFullPath(parentPath, route);\n            validateNode(route, fullPath);\n        }\n    }\n    function validateNode(route, fullPath) {\n        if (!route) {\n            throw new Error(\"\\n      Invalid configuration of route '\" + fullPath + \"': Encountered undefined route.\\n      The reason might be an extra comma.\\n\\n      Example:\\n      const routes: Routes = [\\n        { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\\n        { path: 'dashboard',  component: DashboardComponent },, << two commas\\n        { path: 'detail/:id', component: HeroDetailComponent }\\n      ];\\n    \");\n        }\n        if (Array.isArray(route)) {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': Array cannot be specified\");\n        }\n        if (!route.component && !route.children && !route.loadChildren &&\n            (route.outlet && route.outlet !== PRIMARY_OUTLET)) {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': a componentless route without children or loadChildren cannot have a named outlet set\");\n        }\n        if (route.redirectTo && route.children) {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and children cannot be used together\");\n        }\n        if (route.redirectTo && route.loadChildren) {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and loadChildren cannot be used together\");\n        }\n        if (route.children && route.loadChildren) {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': children and loadChildren cannot be used together\");\n        }\n        if (route.redirectTo && route.component) {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and component cannot be used together\");\n        }\n        if (route.path && route.matcher) {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': path and matcher cannot be used together\");\n        }\n        if (route.redirectTo === void 0 && !route.component && !route.children && !route.loadChildren) {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"'. One of the following must be provided: component, redirectTo, children or loadChildren\");\n        }\n        if (route.path === void 0 && route.matcher === void 0) {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': routes must have either a path or a matcher specified\");\n        }\n        if (typeof route.path === 'string' && route.path.charAt(0) === '/') {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': path cannot start with a slash\");\n        }\n        if (route.path === '' && route.redirectTo !== void 0 && route.pathMatch === void 0) {\n            var exp = \"The default value of 'pathMatch' is 'prefix', but often the intent is to use 'full'.\";\n            throw new Error(\"Invalid configuration of route '{path: \\\"\" + fullPath + \"\\\", redirectTo: \\\"\" + route.redirectTo + \"\\\"}': please provide 'pathMatch'. \" + exp);\n        }\n        if (route.pathMatch !== void 0 && route.pathMatch !== 'full' && route.pathMatch !== 'prefix') {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': pathMatch can only be set to 'prefix' or 'full'\");\n        }\n        if (route.children) {\n            validateConfig(route.children, fullPath);\n        }\n    }\n    function getFullPath(parentPath, currentRoute) {\n        if (!currentRoute) {\n            return parentPath;\n        }\n        if (!parentPath && !currentRoute.path) {\n            return '';\n        }\n        else if (parentPath && !currentRoute.path) {\n            return parentPath + \"/\";\n        }\n        else if (!parentPath && currentRoute.path) {\n            return currentRoute.path;\n        }\n        else {\n            return parentPath + \"/\" + currentRoute.path;\n        }\n    }\n    /**\n     * Makes a copy of the config and adds any default required properties.\n     */\n    function standardizeConfig(r) {\n        var children = r.children && r.children.map(standardizeConfig);\n        var c = children ? __assign({}, r, { children: children }) : __assign({}, r);\n        if (!c.component && (children || c.loadChildren) && (c.outlet && c.outlet !== PRIMARY_OUTLET)) {\n            c.component = EmptyOutletComponent;\n        }\n        return c;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function shallowEqualArrays(a, b) {\n        if (a.length !== b.length)\n            return false;\n        for (var i = 0; i < a.length; ++i) {\n            if (!shallowEqual(a[i], b[i]))\n                return false;\n        }\n        return true;\n    }\n    function shallowEqual(a, b) {\n        var k1 = Object.keys(a);\n        var k2 = Object.keys(b);\n        if (k1.length != k2.length) {\n            return false;\n        }\n        var key;\n        for (var i = 0; i < k1.length; i++) {\n            key = k1[i];\n            if (a[key] !== b[key]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * Flattens single-level nested arrays.\n     */\n    function flatten(arr) {\n        return Array.prototype.concat.apply([], arr);\n    }\n    /**\n     * Return the last element of an array.\n     */\n    function last(a) {\n        return a.length > 0 ? a[a.length - 1] : null;\n    }\n    function forEach(map, callback) {\n        for (var prop in map) {\n            if (map.hasOwnProperty(prop)) {\n                callback(map[prop], prop);\n            }\n        }\n    }\n    function waitForMap(obj, fn) {\n        if (Object.keys(obj).length === 0) {\n            return rxjs.of({});\n        }\n        var waitHead = [];\n        var waitTail = [];\n        var res = {};\n        forEach(obj, function (a, k) {\n            var mapped = fn(k, a).pipe(operators.map(function (r) { return res[k] = r; }));\n            if (k === PRIMARY_OUTLET) {\n                waitHead.push(mapped);\n            }\n            else {\n                waitTail.push(mapped);\n            }\n        });\n        // Closure compiler has problem with using spread operator here. So just using Array.concat.\n        return rxjs.of.apply(null, waitHead.concat(waitTail)).pipe(operators.concatAll(), operators.last(), operators.map(function () { return res; }));\n    }\n    /**\n     * ANDs Observables by merging all input observables, reducing to an Observable verifying all\n     * input Observables return `true`.\n     */\n    function andObservables(observables) {\n        return observables.pipe(operators.mergeAll(), operators.every(function (result) { return result === true; }));\n    }\n    function wrapIntoObservable(value) {\n        if (core.ɵisObservable(value)) {\n            return value;\n        }\n        if (core.ɵisPromise(value)) {\n            // Use `Promise.resolve()` to wrap promise-like instances.\n            // Required ie when a Resolver returns a AngularJS `$q` promise to correctly trigger the\n            // change detection.\n            return rxjs.from(Promise.resolve(value));\n        }\n        return rxjs.of(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function createEmptyUrlTree() {\n        return new UrlTree(new UrlSegmentGroup([], {}), {}, null);\n    }\n    function containsTree(container, containee, exact) {\n        if (exact) {\n            return equalQueryParams(container.queryParams, containee.queryParams) &&\n                equalSegmentGroups(container.root, containee.root);\n        }\n        return containsQueryParams(container.queryParams, containee.queryParams) &&\n            containsSegmentGroup(container.root, containee.root);\n    }\n    function equalQueryParams(container, containee) {\n        return shallowEqual(container, containee);\n    }\n    function equalSegmentGroups(container, containee) {\n        if (!equalPath(container.segments, containee.segments))\n            return false;\n        if (container.numberOfChildren !== containee.numberOfChildren)\n            return false;\n        for (var c in containee.children) {\n            if (!container.children[c])\n                return false;\n            if (!equalSegmentGroups(container.children[c], containee.children[c]))\n                return false;\n        }\n        return true;\n    }\n    function containsQueryParams(container, containee) {\n        return Object.keys(containee).length <= Object.keys(container).length &&\n            Object.keys(containee).every(function (key) { return containee[key] === container[key]; });\n    }\n    function containsSegmentGroup(container, containee) {\n        return containsSegmentGroupHelper(container, containee, containee.segments);\n    }\n    function containsSegmentGroupHelper(container, containee, containeePaths) {\n        if (container.segments.length > containeePaths.length) {\n            var current = container.segments.slice(0, containeePaths.length);\n            if (!equalPath(current, containeePaths))\n                return false;\n            if (containee.hasChildren())\n                return false;\n            return true;\n        }\n        else if (container.segments.length === containeePaths.length) {\n            if (!equalPath(container.segments, containeePaths))\n                return false;\n            for (var c in containee.children) {\n                if (!container.children[c])\n                    return false;\n                if (!containsSegmentGroup(container.children[c], containee.children[c]))\n                    return false;\n            }\n            return true;\n        }\n        else {\n            var current = containeePaths.slice(0, container.segments.length);\n            var next = containeePaths.slice(container.segments.length);\n            if (!equalPath(container.segments, current))\n                return false;\n            if (!container.children[PRIMARY_OUTLET])\n                return false;\n            return containsSegmentGroupHelper(container.children[PRIMARY_OUTLET], containee, next);\n        }\n    }\n    /**\n     * @description\n     *\n     * Represents the parsed URL.\n     *\n     * Since a router state is a tree, and the URL is nothing but a serialized state, the URL is a\n     * serialized tree.\n     * UrlTree is a data structure that provides a lot of affordances in dealing with URLs\n     *\n     * ### Example\n     *\n     * ```\n     * @Component({templateUrl:'template.html'})\n     * class MyComponent {\n     *   constructor(router: Router) {\n     *     const tree: UrlTree =\n     *       router.parseUrl('/team/33/(user/victor//support:help)?debug=true#fragment');\n     *     const f = tree.fragment; // return 'fragment'\n     *     const q = tree.queryParams; // returns {debug: 'true'}\n     *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n     *     const s: UrlSegment[] = g.segments; // returns 2 segments 'team' and '33'\n     *     g.children[PRIMARY_OUTLET].segments; // returns 2 segments 'user' and 'victor'\n     *     g.children['support'].segments; // return 1 segment 'help'\n     *   }\n     * }\n     * ```\n     *\n     *\n     */\n    var UrlTree = /** @class */ (function () {\n        /** @internal */\n        function UrlTree(\n        /** The root segment group of the URL tree */\n        root, \n        /** The query params of the URL */\n        queryParams, \n        /** The fragment of the URL */\n        fragment) {\n            this.root = root;\n            this.queryParams = queryParams;\n            this.fragment = fragment;\n        }\n        Object.defineProperty(UrlTree.prototype, \"queryParamMap\", {\n            get: function () {\n                if (!this._queryParamMap) {\n                    this._queryParamMap = convertToParamMap(this.queryParams);\n                }\n                return this._queryParamMap;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /** @docsNotRequired */\n        UrlTree.prototype.toString = function () { return DEFAULT_SERIALIZER.serialize(this); };\n        return UrlTree;\n    }());\n    /**\n     * @description\n     *\n     * Represents the parsed URL segment group.\n     *\n     * See `UrlTree` for more information.\n     *\n     *\n     */\n    var UrlSegmentGroup = /** @class */ (function () {\n        function UrlSegmentGroup(\n        /** The URL segments of this group. See `UrlSegment` for more information */\n        segments, \n        /** The list of children of this group */\n        children) {\n            var _this = this;\n            this.segments = segments;\n            this.children = children;\n            /** The parent node in the url tree */\n            this.parent = null;\n            forEach(children, function (v, k) { return v.parent = _this; });\n        }\n        /** Whether the segment has child segments */\n        UrlSegmentGroup.prototype.hasChildren = function () { return this.numberOfChildren > 0; };\n        Object.defineProperty(UrlSegmentGroup.prototype, \"numberOfChildren\", {\n            /** Number of child segments */\n            get: function () { return Object.keys(this.children).length; },\n            enumerable: true,\n            configurable: true\n        });\n        /** @docsNotRequired */\n        UrlSegmentGroup.prototype.toString = function () { return serializePaths(this); };\n        return UrlSegmentGroup;\n    }());\n    /**\n     * @description\n     *\n     * Represents a single URL segment.\n     *\n     * A UrlSegment is a part of a URL between the two slashes. It contains a path and the matrix\n     * parameters associated with the segment.\n     *\n     * ## Example\n     *\n     * ```\n     * @Component({templateUrl:'template.html'})\n     * class MyComponent {\n     *   constructor(router: Router) {\n     *     const tree: UrlTree = router.parseUrl('/team;id=33');\n     *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n     *     const s: UrlSegment[] = g.segments;\n     *     s[0].path; // returns 'team'\n     *     s[0].parameters; // returns {id: 33}\n     *   }\n     * }\n     * ```\n     *\n     *\n     */\n    var UrlSegment = /** @class */ (function () {\n        function UrlSegment(\n        /** The path part of a URL segment */\n        path, \n        /** The matrix parameters associated with a segment */\n        parameters) {\n            this.path = path;\n            this.parameters = parameters;\n        }\n        Object.defineProperty(UrlSegment.prototype, \"parameterMap\", {\n            get: function () {\n                if (!this._parameterMap) {\n                    this._parameterMap = convertToParamMap(this.parameters);\n                }\n                return this._parameterMap;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /** @docsNotRequired */\n        UrlSegment.prototype.toString = function () { return serializePath(this); };\n        return UrlSegment;\n    }());\n    function equalSegments(as, bs) {\n        return equalPath(as, bs) && as.every(function (a, i) { return shallowEqual(a.parameters, bs[i].parameters); });\n    }\n    function equalPath(as, bs) {\n        if (as.length !== bs.length)\n            return false;\n        return as.every(function (a, i) { return a.path === bs[i].path; });\n    }\n    function mapChildrenIntoArray(segment, fn) {\n        var res = [];\n        forEach(segment.children, function (child, childOutlet) {\n            if (childOutlet === PRIMARY_OUTLET) {\n                res = res.concat(fn(child, childOutlet));\n            }\n        });\n        forEach(segment.children, function (child, childOutlet) {\n            if (childOutlet !== PRIMARY_OUTLET) {\n                res = res.concat(fn(child, childOutlet));\n            }\n        });\n        return res;\n    }\n    /**\n     * @description\n     *\n     * Serializes and deserializes a URL string into a URL tree.\n     *\n     * The url serialization strategy is customizable. You can\n     * make all URLs case insensitive by providing a custom UrlSerializer.\n     *\n     * See `DefaultUrlSerializer` for an example of a URL serializer.\n     *\n     *\n     */\n    var UrlSerializer = /** @class */ (function () {\n        function UrlSerializer() {\n        }\n        return UrlSerializer;\n    }());\n    /**\n     * @description\n     *\n     * A default implementation of the `UrlSerializer`.\n     *\n     * Example URLs:\n     *\n     * ```\n     * /inbox/33(popup:compose)\n     * /inbox/33;open=true/messages/44\n     * ```\n     *\n     * DefaultUrlSerializer uses parentheses to serialize secondary segments (e.g., popup:compose), the\n     * colon syntax to specify the outlet, and the ';parameter=value' syntax (e.g., open=true) to\n     * specify route specific parameters.\n     *\n     *\n     */\n    var DefaultUrlSerializer = /** @class */ (function () {\n        function DefaultUrlSerializer() {\n        }\n        /** Parses a url into a `UrlTree` */\n        DefaultUrlSerializer.prototype.parse = function (url) {\n            var p = new UrlParser(url);\n            return new UrlTree(p.parseRootSegment(), p.parseQueryParams(), p.parseFragment());\n        };\n        /** Converts a `UrlTree` into a url */\n        DefaultUrlSerializer.prototype.serialize = function (tree) {\n            var segment = \"/\" + serializeSegment(tree.root, true);\n            var query = serializeQueryParams(tree.queryParams);\n            var fragment = typeof tree.fragment === \"string\" ? \"#\" + encodeUriFragment(tree.fragment) : '';\n            return \"\" + segment + query + fragment;\n        };\n        return DefaultUrlSerializer;\n    }());\n    var DEFAULT_SERIALIZER = new DefaultUrlSerializer();\n    function serializePaths(segment) {\n        return segment.segments.map(function (p) { return serializePath(p); }).join('/');\n    }\n    function serializeSegment(segment, root) {\n        if (!segment.hasChildren()) {\n            return serializePaths(segment);\n        }\n        if (root) {\n            var primary = segment.children[PRIMARY_OUTLET] ?\n                serializeSegment(segment.children[PRIMARY_OUTLET], false) :\n                '';\n            var children_1 = [];\n            forEach(segment.children, function (v, k) {\n                if (k !== PRIMARY_OUTLET) {\n                    children_1.push(k + \":\" + serializeSegment(v, false));\n                }\n            });\n            return children_1.length > 0 ? primary + \"(\" + children_1.join('//') + \")\" : primary;\n        }\n        else {\n            var children = mapChildrenIntoArray(segment, function (v, k) {\n                if (k === PRIMARY_OUTLET) {\n                    return [serializeSegment(segment.children[PRIMARY_OUTLET], false)];\n                }\n                return [k + \":\" + serializeSegment(v, false)];\n            });\n            return serializePaths(segment) + \"/(\" + children.join('//') + \")\";\n        }\n    }\n    /**\n     * Encodes a URI string with the default encoding. This function will only ever be called from\n     * `encodeUriQuery` or `encodeUriSegment` as it's the base set of encodings to be used. We need\n     * a custom encoding because encodeURIComponent is too aggressive and encodes stuff that doesn't\n     * have to be encoded per https://url.spec.whatwg.org.\n     */\n    function encodeUriString(s) {\n        return encodeURIComponent(s)\n            .replace(/%40/g, '@')\n            .replace(/%3A/gi, ':')\n            .replace(/%24/g, '$')\n            .replace(/%2C/gi, ',');\n    }\n    /**\n     * This function should be used to encode both keys and values in a query string key/value. In\n     * the following URL, you need to call encodeUriQuery on \"k\" and \"v\":\n     *\n     * http://www.site.org/html;mk=mv?k=v#f\n     */\n    function encodeUriQuery(s) {\n        return encodeUriString(s).replace(/%3B/gi, ';');\n    }\n    /**\n     * This function should be used to encode a URL fragment. In the following URL, you need to call\n     * encodeUriFragment on \"f\":\n     *\n     * http://www.site.org/html;mk=mv?k=v#f\n     */\n    function encodeUriFragment(s) {\n        return encodeURI(s);\n    }\n    /**\n     * This function should be run on any URI segment as well as the key and value in a key/value\n     * pair for matrix params. In the following URL, you need to call encodeUriSegment on \"html\",\n     * \"mk\", and \"mv\":\n     *\n     * http://www.site.org/html;mk=mv?k=v#f\n     */\n    function encodeUriSegment(s) {\n        return encodeUriString(s).replace(/\\(/g, '%28').replace(/\\)/g, '%29').replace(/%26/gi, '&');\n    }\n    function decode(s) {\n        return decodeURIComponent(s);\n    }\n    // Query keys/values should have the \"+\" replaced first, as \"+\" in a query string is \" \".\n    // decodeURIComponent function will not decode \"+\" as a space.\n    function decodeQuery(s) {\n        return decode(s.replace(/\\+/g, '%20'));\n    }\n    function serializePath(path) {\n        return \"\" + encodeUriSegment(path.path) + serializeMatrixParams(path.parameters);\n    }\n    function serializeMatrixParams(params) {\n        return Object.keys(params)\n            .map(function (key) { return \";\" + encodeUriSegment(key) + \"=\" + encodeUriSegment(params[key]); })\n            .join('');\n    }\n    function serializeQueryParams(params) {\n        var strParams = Object.keys(params).map(function (name) {\n            var value = params[name];\n            return Array.isArray(value) ?\n                value.map(function (v) { return encodeUriQuery(name) + \"=\" + encodeUriQuery(v); }).join('&') :\n                encodeUriQuery(name) + \"=\" + encodeUriQuery(value);\n        });\n        return strParams.length ? \"?\" + strParams.join(\"&\") : '';\n    }\n    var SEGMENT_RE = /^[^\\/()?;=#]+/;\n    function matchSegments(str) {\n        var match = str.match(SEGMENT_RE);\n        return match ? match[0] : '';\n    }\n    var QUERY_PARAM_RE = /^[^=?&#]+/;\n    // Return the name of the query param at the start of the string or an empty string\n    function matchQueryParams(str) {\n        var match = str.match(QUERY_PARAM_RE);\n        return match ? match[0] : '';\n    }\n    var QUERY_PARAM_VALUE_RE = /^[^?&#]+/;\n    // Return the value of the query param at the start of the string or an empty string\n    function matchUrlQueryParamValue(str) {\n        var match = str.match(QUERY_PARAM_VALUE_RE);\n        return match ? match[0] : '';\n    }\n    var UrlParser = /** @class */ (function () {\n        function UrlParser(url) {\n            this.url = url;\n            this.remaining = url;\n        }\n        UrlParser.prototype.parseRootSegment = function () {\n            this.consumeOptional('/');\n            if (this.remaining === '' || this.peekStartsWith('?') || this.peekStartsWith('#')) {\n                return new UrlSegmentGroup([], {});\n            }\n            // The root segment group never has segments\n            return new UrlSegmentGroup([], this.parseChildren());\n        };\n        UrlParser.prototype.parseQueryParams = function () {\n            var params = {};\n            if (this.consumeOptional('?')) {\n                do {\n                    this.parseQueryParam(params);\n                } while (this.consumeOptional('&'));\n            }\n            return params;\n        };\n        UrlParser.prototype.parseFragment = function () {\n            return this.consumeOptional('#') ? decodeURIComponent(this.remaining) : null;\n        };\n        UrlParser.prototype.parseChildren = function () {\n            if (this.remaining === '') {\n                return {};\n            }\n            this.consumeOptional('/');\n            var segments = [];\n            if (!this.peekStartsWith('(')) {\n                segments.push(this.parseSegment());\n            }\n            while (this.peekStartsWith('/') && !this.peekStartsWith('//') && !this.peekStartsWith('/(')) {\n                this.capture('/');\n                segments.push(this.parseSegment());\n            }\n            var children = {};\n            if (this.peekStartsWith('/(')) {\n                this.capture('/');\n                children = this.parseParens(true);\n            }\n            var res = {};\n            if (this.peekStartsWith('(')) {\n                res = this.parseParens(false);\n            }\n            if (segments.length > 0 || Object.keys(children).length > 0) {\n                res[PRIMARY_OUTLET] = new UrlSegmentGroup(segments, children);\n            }\n            return res;\n        };\n        // parse a segment with its matrix parameters\n        // ie `name;k1=v1;k2`\n        UrlParser.prototype.parseSegment = function () {\n            var path = matchSegments(this.remaining);\n            if (path === '' && this.peekStartsWith(';')) {\n                throw new Error(\"Empty path url segment cannot have parameters: '\" + this.remaining + \"'.\");\n            }\n            this.capture(path);\n            return new UrlSegment(decode(path), this.parseMatrixParams());\n        };\n        UrlParser.prototype.parseMatrixParams = function () {\n            var params = {};\n            while (this.consumeOptional(';')) {\n                this.parseParam(params);\n            }\n            return params;\n        };\n        UrlParser.prototype.parseParam = function (params) {\n            var key = matchSegments(this.remaining);\n            if (!key) {\n                return;\n            }\n            this.capture(key);\n            var value = '';\n            if (this.consumeOptional('=')) {\n                var valueMatch = matchSegments(this.remaining);\n                if (valueMatch) {\n                    value = valueMatch;\n                    this.capture(value);\n                }\n            }\n            params[decode(key)] = decode(value);\n        };\n        // Parse a single query parameter `name[=value]`\n        UrlParser.prototype.parseQueryParam = function (params) {\n            var key = matchQueryParams(this.remaining);\n            if (!key) {\n                return;\n            }\n            this.capture(key);\n            var value = '';\n            if (this.consumeOptional('=')) {\n                var valueMatch = matchUrlQueryParamValue(this.remaining);\n                if (valueMatch) {\n                    value = valueMatch;\n                    this.capture(value);\n                }\n            }\n            var decodedKey = decodeQuery(key);\n            var decodedVal = decodeQuery(value);\n            if (params.hasOwnProperty(decodedKey)) {\n                // Append to existing values\n                var currentVal = params[decodedKey];\n                if (!Array.isArray(currentVal)) {\n                    currentVal = [currentVal];\n                    params[decodedKey] = currentVal;\n                }\n                currentVal.push(decodedVal);\n            }\n            else {\n                // Create a new value\n                params[decodedKey] = decodedVal;\n            }\n        };\n        // parse `(a/b//outlet_name:c/d)`\n        UrlParser.prototype.parseParens = function (allowPrimary) {\n            var segments = {};\n            this.capture('(');\n            while (!this.consumeOptional(')') && this.remaining.length > 0) {\n                var path = matchSegments(this.remaining);\n                var next = this.remaining[path.length];\n                // if is is not one of these characters, then the segment was unescaped\n                // or the group was not closed\n                if (next !== '/' && next !== ')' && next !== ';') {\n                    throw new Error(\"Cannot parse url '\" + this.url + \"'\");\n                }\n                var outletName = undefined;\n                if (path.indexOf(':') > -1) {\n                    outletName = path.substr(0, path.indexOf(':'));\n                    this.capture(outletName);\n                    this.capture(':');\n                }\n                else if (allowPrimary) {\n                    outletName = PRIMARY_OUTLET;\n                }\n                var children = this.parseChildren();\n                segments[outletName] = Object.keys(children).length === 1 ? children[PRIMARY_OUTLET] :\n                    new UrlSegmentGroup([], children);\n                this.consumeOptional('//');\n            }\n            return segments;\n        };\n        UrlParser.prototype.peekStartsWith = function (str) { return this.remaining.startsWith(str); };\n        // Consumes the prefix when it is present and returns whether it has been consumed\n        UrlParser.prototype.consumeOptional = function (str) {\n            if (this.peekStartsWith(str)) {\n                this.remaining = this.remaining.substring(str.length);\n                return true;\n            }\n            return false;\n        };\n        UrlParser.prototype.capture = function (str) {\n            if (!this.consumeOptional(str)) {\n                throw new Error(\"Expected \\\"\" + str + \"\\\".\");\n            }\n        };\n        return UrlParser;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NoMatch = /** @class */ (function () {\n        function NoMatch(segmentGroup) {\n            this.segmentGroup = segmentGroup || null;\n        }\n        return NoMatch;\n    }());\n    var AbsoluteRedirect = /** @class */ (function () {\n        function AbsoluteRedirect(urlTree) {\n            this.urlTree = urlTree;\n        }\n        return AbsoluteRedirect;\n    }());\n    function noMatch(segmentGroup) {\n        return new rxjs.Observable(function (obs) { return obs.error(new NoMatch(segmentGroup)); });\n    }\n    function absoluteRedirect(newTree) {\n        return new rxjs.Observable(function (obs) { return obs.error(new AbsoluteRedirect(newTree)); });\n    }\n    function namedOutletsRedirect(redirectTo) {\n        return new rxjs.Observable(function (obs) { return obs.error(new Error(\"Only absolute redirects can have named outlets. redirectTo: '\" + redirectTo + \"'\")); });\n    }\n    function canLoadFails(route) {\n        return new rxjs.Observable(function (obs) { return obs.error(navigationCancelingError(\"Cannot load children because the guard of the route \\\"path: '\" + route.path + \"'\\\" returned false\")); });\n    }\n    /**\n     * Returns the `UrlTree` with the redirection applied.\n     *\n     * Lazy modules are loaded along the way.\n     */\n    function applyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config) {\n        return new ApplyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config).apply();\n    }\n    var ApplyRedirects = /** @class */ (function () {\n        function ApplyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config) {\n            this.configLoader = configLoader;\n            this.urlSerializer = urlSerializer;\n            this.urlTree = urlTree;\n            this.config = config;\n            this.allowRedirects = true;\n            this.ngModule = moduleInjector.get(core.NgModuleRef);\n        }\n        ApplyRedirects.prototype.apply = function () {\n            var _this = this;\n            var expanded$ = this.expandSegmentGroup(this.ngModule, this.config, this.urlTree.root, PRIMARY_OUTLET);\n            var urlTrees$ = expanded$.pipe(operators.map(function (rootSegmentGroup) { return _this.createUrlTree(rootSegmentGroup, _this.urlTree.queryParams, _this.urlTree.fragment); }));\n            return urlTrees$.pipe(operators.catchError(function (e) {\n                if (e instanceof AbsoluteRedirect) {\n                    // after an absolute redirect we do not apply any more redirects!\n                    _this.allowRedirects = false;\n                    // we need to run matching, so we can fetch all lazy-loaded modules\n                    return _this.match(e.urlTree);\n                }\n                if (e instanceof NoMatch) {\n                    throw _this.noMatchError(e);\n                }\n                throw e;\n            }));\n        };\n        ApplyRedirects.prototype.match = function (tree) {\n            var _this = this;\n            var expanded$ = this.expandSegmentGroup(this.ngModule, this.config, tree.root, PRIMARY_OUTLET);\n            var mapped$ = expanded$.pipe(operators.map(function (rootSegmentGroup) {\n                return _this.createUrlTree(rootSegmentGroup, tree.queryParams, tree.fragment);\n            }));\n            return mapped$.pipe(operators.catchError(function (e) {\n                if (e instanceof NoMatch) {\n                    throw _this.noMatchError(e);\n                }\n                throw e;\n            }));\n        };\n        ApplyRedirects.prototype.noMatchError = function (e) {\n            return new Error(\"Cannot match any routes. URL Segment: '\" + e.segmentGroup + \"'\");\n        };\n        ApplyRedirects.prototype.createUrlTree = function (rootCandidate, queryParams, fragment) {\n            var root = rootCandidate.segments.length > 0 ?\n                new UrlSegmentGroup([], (_a = {}, _a[PRIMARY_OUTLET] = rootCandidate, _a)) :\n                rootCandidate;\n            return new UrlTree(root, queryParams, fragment);\n            var _a;\n        };\n        ApplyRedirects.prototype.expandSegmentGroup = function (ngModule, routes, segmentGroup, outlet) {\n            if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n                return this.expandChildren(ngModule, routes, segmentGroup)\n                    .pipe(operators.map(function (children) { return new UrlSegmentGroup([], children); }));\n            }\n            return this.expandSegment(ngModule, segmentGroup, routes, segmentGroup.segments, outlet, true);\n        };\n        // Recursively expand segment groups for all the child outlets\n        ApplyRedirects.prototype.expandChildren = function (ngModule, routes, segmentGroup) {\n            var _this = this;\n            return waitForMap(segmentGroup.children, function (childOutlet, child) { return _this.expandSegmentGroup(ngModule, routes, child, childOutlet); });\n        };\n        ApplyRedirects.prototype.expandSegment = function (ngModule, segmentGroup, routes, segments, outlet, allowRedirects) {\n            var _this = this;\n            return rxjs.of.apply(void 0, __spread(routes)).pipe(operators.map(function (r) {\n                var expanded$ = _this.expandSegmentAgainstRoute(ngModule, segmentGroup, routes, r, segments, outlet, allowRedirects);\n                return expanded$.pipe(operators.catchError(function (e) {\n                    if (e instanceof NoMatch) {\n                        // TODO(i): this return type doesn't match the declared Observable<UrlSegmentGroup> -\n                        // talk to Jason\n                        return rxjs.of(null);\n                    }\n                    throw e;\n                }));\n            }), operators.concatAll(), operators.first(function (s) { return !!s; }), operators.catchError(function (e, _) {\n                if (e instanceof rxjs.EmptyError || e.name === 'EmptyError') {\n                    if (_this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n                        return rxjs.of(new UrlSegmentGroup([], {}));\n                    }\n                    throw new NoMatch(segmentGroup);\n                }\n                throw e;\n            }));\n        };\n        ApplyRedirects.prototype.noLeftoversInUrl = function (segmentGroup, segments, outlet) {\n            return segments.length === 0 && !segmentGroup.children[outlet];\n        };\n        ApplyRedirects.prototype.expandSegmentAgainstRoute = function (ngModule, segmentGroup, routes, route, paths, outlet, allowRedirects) {\n            if (getOutlet(route) !== outlet) {\n                return noMatch(segmentGroup);\n            }\n            if (route.redirectTo === undefined) {\n                return this.matchSegmentAgainstRoute(ngModule, segmentGroup, route, paths);\n            }\n            if (allowRedirects && this.allowRedirects) {\n                return this.expandSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, paths, outlet);\n            }\n            return noMatch(segmentGroup);\n        };\n        ApplyRedirects.prototype.expandSegmentAgainstRouteUsingRedirect = function (ngModule, segmentGroup, routes, route, segments, outlet) {\n            if (route.path === '**') {\n                return this.expandWildCardWithParamsAgainstRouteUsingRedirect(ngModule, routes, route, outlet);\n            }\n            return this.expandRegularSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, segments, outlet);\n        };\n        ApplyRedirects.prototype.expandWildCardWithParamsAgainstRouteUsingRedirect = function (ngModule, routes, route, outlet) {\n            var _this = this;\n            var newTree = this.applyRedirectCommands([], route.redirectTo, {});\n            if (route.redirectTo.startsWith('/')) {\n                return absoluteRedirect(newTree);\n            }\n            return this.lineralizeSegments(route, newTree).pipe(operators.mergeMap(function (newSegments) {\n                var group = new UrlSegmentGroup(newSegments, {});\n                return _this.expandSegment(ngModule, group, routes, newSegments, outlet, false);\n            }));\n        };\n        ApplyRedirects.prototype.expandRegularSegmentAgainstRouteUsingRedirect = function (ngModule, segmentGroup, routes, route, segments, outlet) {\n            var _this = this;\n            var _a = match(segmentGroup, route, segments), matched = _a.matched, consumedSegments = _a.consumedSegments, lastChild = _a.lastChild, positionalParamSegments = _a.positionalParamSegments;\n            if (!matched)\n                return noMatch(segmentGroup);\n            var newTree = this.applyRedirectCommands(consumedSegments, route.redirectTo, positionalParamSegments);\n            if (route.redirectTo.startsWith('/')) {\n                return absoluteRedirect(newTree);\n            }\n            return this.lineralizeSegments(route, newTree).pipe(operators.mergeMap(function (newSegments) {\n                return _this.expandSegment(ngModule, segmentGroup, routes, newSegments.concat(segments.slice(lastChild)), outlet, false);\n            }));\n        };\n        ApplyRedirects.prototype.matchSegmentAgainstRoute = function (ngModule, rawSegmentGroup, route, segments) {\n            var _this = this;\n            if (route.path === '**') {\n                if (route.loadChildren) {\n                    return this.configLoader.load(ngModule.injector, route)\n                        .pipe(operators.map(function (cfg) {\n                        route._loadedConfig = cfg;\n                        return new UrlSegmentGroup(segments, {});\n                    }));\n                }\n                return rxjs.of(new UrlSegmentGroup(segments, {}));\n            }\n            var _a = match(rawSegmentGroup, route, segments), matched = _a.matched, consumedSegments = _a.consumedSegments, lastChild = _a.lastChild;\n            if (!matched)\n                return noMatch(rawSegmentGroup);\n            var rawSlicedSegments = segments.slice(lastChild);\n            var childConfig$ = this.getChildConfig(ngModule, route);\n            return childConfig$.pipe(operators.mergeMap(function (routerConfig) {\n                var childModule = routerConfig.module;\n                var childConfig = routerConfig.routes;\n                var _a = split(rawSegmentGroup, consumedSegments, rawSlicedSegments, childConfig), segmentGroup = _a.segmentGroup, slicedSegments = _a.slicedSegments;\n                if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n                    var expanded$_1 = _this.expandChildren(childModule, childConfig, segmentGroup);\n                    return expanded$_1.pipe(operators.map(function (children) { return new UrlSegmentGroup(consumedSegments, children); }));\n                }\n                if (childConfig.length === 0 && slicedSegments.length === 0) {\n                    return rxjs.of(new UrlSegmentGroup(consumedSegments, {}));\n                }\n                var expanded$ = _this.expandSegment(childModule, segmentGroup, childConfig, slicedSegments, PRIMARY_OUTLET, true);\n                return expanded$.pipe(operators.map(function (cs) {\n                    return new UrlSegmentGroup(consumedSegments.concat(cs.segments), cs.children);\n                }));\n            }));\n        };\n        ApplyRedirects.prototype.getChildConfig = function (ngModule, route) {\n            var _this = this;\n            if (route.children) {\n                // The children belong to the same module\n                return rxjs.of(new LoadedRouterConfig(route.children, ngModule));\n            }\n            if (route.loadChildren) {\n                // lazy children belong to the loaded module\n                if (route._loadedConfig !== undefined) {\n                    return rxjs.of(route._loadedConfig);\n                }\n                return runCanLoadGuard(ngModule.injector, route).pipe(operators.mergeMap(function (shouldLoad) {\n                    if (shouldLoad) {\n                        return _this.configLoader.load(ngModule.injector, route)\n                            .pipe(operators.map(function (cfg) {\n                            route._loadedConfig = cfg;\n                            return cfg;\n                        }));\n                    }\n                    return canLoadFails(route);\n                }));\n            }\n            return rxjs.of(new LoadedRouterConfig([], ngModule));\n        };\n        ApplyRedirects.prototype.lineralizeSegments = function (route, urlTree) {\n            var res = [];\n            var c = urlTree.root;\n            while (true) {\n                res = res.concat(c.segments);\n                if (c.numberOfChildren === 0) {\n                    return rxjs.of(res);\n                }\n                if (c.numberOfChildren > 1 || !c.children[PRIMARY_OUTLET]) {\n                    return namedOutletsRedirect(route.redirectTo);\n                }\n                c = c.children[PRIMARY_OUTLET];\n            }\n        };\n        ApplyRedirects.prototype.applyRedirectCommands = function (segments, redirectTo, posParams) {\n            return this.applyRedirectCreatreUrlTree(redirectTo, this.urlSerializer.parse(redirectTo), segments, posParams);\n        };\n        ApplyRedirects.prototype.applyRedirectCreatreUrlTree = function (redirectTo, urlTree, segments, posParams) {\n            var newRoot = this.createSegmentGroup(redirectTo, urlTree.root, segments, posParams);\n            return new UrlTree(newRoot, this.createQueryParams(urlTree.queryParams, this.urlTree.queryParams), urlTree.fragment);\n        };\n        ApplyRedirects.prototype.createQueryParams = function (redirectToParams, actualParams) {\n            var res = {};\n            forEach(redirectToParams, function (v, k) {\n                var copySourceValue = typeof v === 'string' && v.startsWith(':');\n                if (copySourceValue) {\n                    var sourceName = v.substring(1);\n                    res[k] = actualParams[sourceName];\n                }\n                else {\n                    res[k] = v;\n                }\n            });\n            return res;\n        };\n        ApplyRedirects.prototype.createSegmentGroup = function (redirectTo, group, segments, posParams) {\n            var _this = this;\n            var updatedSegments = this.createSegments(redirectTo, group.segments, segments, posParams);\n            var children = {};\n            forEach(group.children, function (child, name) {\n                children[name] = _this.createSegmentGroup(redirectTo, child, segments, posParams);\n            });\n            return new UrlSegmentGroup(updatedSegments, children);\n        };\n        ApplyRedirects.prototype.createSegments = function (redirectTo, redirectToSegments, actualSegments, posParams) {\n            var _this = this;\n            return redirectToSegments.map(function (s) { return s.path.startsWith(':') ? _this.findPosParam(redirectTo, s, posParams) :\n                _this.findOrReturn(s, actualSegments); });\n        };\n        ApplyRedirects.prototype.findPosParam = function (redirectTo, redirectToUrlSegment, posParams) {\n            var pos = posParams[redirectToUrlSegment.path.substring(1)];\n            if (!pos)\n                throw new Error(\"Cannot redirect to '\" + redirectTo + \"'. Cannot find '\" + redirectToUrlSegment.path + \"'.\");\n            return pos;\n        };\n        ApplyRedirects.prototype.findOrReturn = function (redirectToUrlSegment, actualSegments) {\n            var idx = 0;\n            try {\n                for (var actualSegments_1 = __values(actualSegments), actualSegments_1_1 = actualSegments_1.next(); !actualSegments_1_1.done; actualSegments_1_1 = actualSegments_1.next()) {\n                    var s = actualSegments_1_1.value;\n                    if (s.path === redirectToUrlSegment.path) {\n                        actualSegments.splice(idx);\n                        return s;\n                    }\n                    idx++;\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (actualSegments_1_1 && !actualSegments_1_1.done && (_a = actualSegments_1.return)) _a.call(actualSegments_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            return redirectToUrlSegment;\n            var e_1, _a;\n        };\n        return ApplyRedirects;\n    }());\n    function runCanLoadGuard(moduleInjector, route) {\n        var canLoad = route.canLoad;\n        if (!canLoad || canLoad.length === 0)\n            return rxjs.of(true);\n        var obs = rxjs.from(canLoad).pipe(operators.map(function (injectionToken) {\n            var guard = moduleInjector.get(injectionToken);\n            return wrapIntoObservable(guard.canLoad ? guard.canLoad(route) : guard(route));\n        }));\n        return andObservables(obs);\n    }\n    function match(segmentGroup, route, segments) {\n        if (route.path === '') {\n            if ((route.pathMatch === 'full') && (segmentGroup.hasChildren() || segments.length > 0)) {\n                return { matched: false, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n            }\n            return { matched: true, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n        }\n        var matcher = route.matcher || defaultUrlMatcher;\n        var res = matcher(segments, segmentGroup, route);\n        if (!res) {\n            return {\n                matched: false,\n                consumedSegments: [],\n                lastChild: 0,\n                positionalParamSegments: {},\n            };\n        }\n        return {\n            matched: true,\n            consumedSegments: res.consumed,\n            lastChild: res.consumed.length,\n            positionalParamSegments: res.posParams,\n        };\n    }\n    function split(segmentGroup, consumedSegments, slicedSegments, config) {\n        if (slicedSegments.length > 0 &&\n            containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n            var s = new UrlSegmentGroup(consumedSegments, createChildrenForEmptySegments(config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n            return { segmentGroup: mergeTrivialChildren(s), slicedSegments: [] };\n        }\n        if (slicedSegments.length === 0 &&\n            containsEmptyPathRedirects(segmentGroup, slicedSegments, config)) {\n            var s = new UrlSegmentGroup(segmentGroup.segments, addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, config, segmentGroup.children));\n            return { segmentGroup: mergeTrivialChildren(s), slicedSegments: slicedSegments };\n        }\n        return { segmentGroup: segmentGroup, slicedSegments: slicedSegments };\n    }\n    function mergeTrivialChildren(s) {\n        if (s.numberOfChildren === 1 && s.children[PRIMARY_OUTLET]) {\n            var c = s.children[PRIMARY_OUTLET];\n            return new UrlSegmentGroup(s.segments.concat(c.segments), c.children);\n        }\n        return s;\n    }\n    function addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, routes, children) {\n        var res = {};\n        try {\n            for (var routes_1 = __values(routes), routes_1_1 = routes_1.next(); !routes_1_1.done; routes_1_1 = routes_1.next()) {\n                var r = routes_1_1.value;\n                if (isEmptyPathRedirect(segmentGroup, slicedSegments, r) && !children[getOutlet(r)]) {\n                    res[getOutlet(r)] = new UrlSegmentGroup([], {});\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (routes_1_1 && !routes_1_1.done && (_a = routes_1.return)) _a.call(routes_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return __assign({}, children, res);\n        var e_2, _a;\n    }\n    function createChildrenForEmptySegments(routes, primarySegmentGroup) {\n        var res = {};\n        res[PRIMARY_OUTLET] = primarySegmentGroup;\n        try {\n            for (var routes_2 = __values(routes), routes_2_1 = routes_2.next(); !routes_2_1.done; routes_2_1 = routes_2.next()) {\n                var r = routes_2_1.value;\n                if (r.path === '' && getOutlet(r) !== PRIMARY_OUTLET) {\n                    res[getOutlet(r)] = new UrlSegmentGroup([], {});\n                }\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (routes_2_1 && !routes_2_1.done && (_a = routes_2.return)) _a.call(routes_2);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n        return res;\n        var e_3, _a;\n    }\n    function containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, segments, routes) {\n        return routes.some(function (r) { return isEmptyPathRedirect(segmentGroup, segments, r) && getOutlet(r) !== PRIMARY_OUTLET; });\n    }\n    function containsEmptyPathRedirects(segmentGroup, segments, routes) {\n        return routes.some(function (r) { return isEmptyPathRedirect(segmentGroup, segments, r); });\n    }\n    function isEmptyPathRedirect(segmentGroup, segments, r) {\n        if ((segmentGroup.hasChildren() || segments.length > 0) && r.pathMatch === 'full') {\n            return false;\n        }\n        return r.path === '' && r.redirectTo !== undefined;\n    }\n    function getOutlet(route) {\n        return route.outlet || PRIMARY_OUTLET;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Tree = /** @class */ (function () {\n        function Tree(root) {\n            this._root = root;\n        }\n        Object.defineProperty(Tree.prototype, \"root\", {\n            get: function () { return this._root.value; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @internal\n         */\n        Tree.prototype.parent = function (t) {\n            var p = this.pathFromRoot(t);\n            return p.length > 1 ? p[p.length - 2] : null;\n        };\n        /**\n         * @internal\n         */\n        Tree.prototype.children = function (t) {\n            var n = findNode(t, this._root);\n            return n ? n.children.map(function (t) { return t.value; }) : [];\n        };\n        /**\n         * @internal\n         */\n        Tree.prototype.firstChild = function (t) {\n            var n = findNode(t, this._root);\n            return n && n.children.length > 0 ? n.children[0].value : null;\n        };\n        /**\n         * @internal\n         */\n        Tree.prototype.siblings = function (t) {\n            var p = findPath(t, this._root);\n            if (p.length < 2)\n                return [];\n            var c = p[p.length - 2].children.map(function (c) { return c.value; });\n            return c.filter(function (cc) { return cc !== t; });\n        };\n        /**\n         * @internal\n         */\n        Tree.prototype.pathFromRoot = function (t) { return findPath(t, this._root).map(function (s) { return s.value; }); };\n        return Tree;\n    }());\n    // DFS for the node matching the value\n    function findNode(value, node) {\n        if (value === node.value)\n            return node;\n        try {\n            for (var _a = __values(node.children), _b = _a.next(); !_b.done; _b = _a.next()) {\n                var child = _b.value;\n                var node_1 = findNode(value, child);\n                if (node_1)\n                    return node_1;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return null;\n        var e_1, _c;\n    }\n    // Return the path to the node with the given value using DFS\n    function findPath(value, node) {\n        if (value === node.value)\n            return [node];\n        try {\n            for (var _a = __values(node.children), _b = _a.next(); !_b.done; _b = _a.next()) {\n                var child = _b.value;\n                var path = findPath(value, child);\n                if (path.length) {\n                    path.unshift(node);\n                    return path;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return [];\n        var e_2, _c;\n    }\n    var TreeNode = /** @class */ (function () {\n        function TreeNode(value, children) {\n            this.value = value;\n            this.children = children;\n        }\n        TreeNode.prototype.toString = function () { return \"TreeNode(\" + this.value + \")\"; };\n        return TreeNode;\n    }());\n    // Return the list of T indexed by outlet name\n    function nodeChildrenAsMap(node) {\n        var map = {};\n        if (node) {\n            node.children.forEach(function (child) { return map[child.value.outlet] = child; });\n        }\n        return map;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents the state of the router.\n     *\n     * RouterState is a tree of activated routes. Every node in this tree knows about the \"consumed\" URL\n     * segments, the extracted parameters, and the resolved data.\n     *\n     * ### Example\n     *\n     * ```\n     * @Component({templateUrl:'template.html'})\n     * class MyComponent {\n     *   constructor(router: Router) {\n     *     const state: RouterState = router.routerState;\n     *     const root: ActivatedRoute = state.root;\n     *     const child = root.firstChild;\n     *     const id: Observable<string> = child.params.map(p => p.id);\n     *     //...\n     *   }\n     * }\n     * ```\n     *\n     * See `ActivatedRoute` for more information.\n     *\n     *\n     */\n    var RouterState = /** @class */ (function (_super) {\n        __extends(RouterState, _super);\n        /** @internal */\n        function RouterState(root, \n        /** The current snapshot of the router state */\n        snapshot) {\n            var _this = _super.call(this, root) || this;\n            _this.snapshot = snapshot;\n            setRouterState(_this, root);\n            return _this;\n        }\n        RouterState.prototype.toString = function () { return this.snapshot.toString(); };\n        return RouterState;\n    }(Tree));\n    function createEmptyState(urlTree, rootComponent) {\n        var snapshot = createEmptyStateSnapshot(urlTree, rootComponent);\n        var emptyUrl = new rxjs.BehaviorSubject([new UrlSegment('', {})]);\n        var emptyParams = new rxjs.BehaviorSubject({});\n        var emptyData = new rxjs.BehaviorSubject({});\n        var emptyQueryParams = new rxjs.BehaviorSubject({});\n        var fragment = new rxjs.BehaviorSubject('');\n        var activated = new ActivatedRoute(emptyUrl, emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, snapshot.root);\n        activated.snapshot = snapshot.root;\n        return new RouterState(new TreeNode(activated, []), snapshot);\n    }\n    function createEmptyStateSnapshot(urlTree, rootComponent) {\n        var emptyParams = {};\n        var emptyData = {};\n        var emptyQueryParams = {};\n        var fragment = '';\n        var activated = new ActivatedRouteSnapshot([], emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, null, urlTree.root, -1, {});\n        return new RouterStateSnapshot('', new TreeNode(activated, []));\n    }\n    /**\n     * @description\n     *\n     * Contains the information about a route associated with a component loaded in an\n     * outlet.  An `ActivatedRoute` can also be used to traverse the router state tree.\n     *\n     * ```\n     * @Component({...})\n     * class MyComponent {\n     *   constructor(route: ActivatedRoute) {\n     *     const id: Observable<string> = route.params.map(p => p.id);\n     *     const url: Observable<string> = route.url.map(segments => segments.join(''));\n     *     // route.data includes both `data` and `resolve`\n     *     const user = route.data.map(d => d.user);\n     *   }\n     * }\n     * ```\n     *\n     *\n     */\n    var ActivatedRoute = /** @class */ (function () {\n        /** @internal */\n        function ActivatedRoute(\n        /** An observable of the URL segments matched by this route */\n        url, \n        /** An observable of the matrix parameters scoped to this route */\n        params, \n        /** An observable of the query parameters shared by all the routes */\n        queryParams, \n        /** An observable of the URL fragment shared by all the routes */\n        fragment, \n        /** An observable of the static and resolved data of this route. */\n        data, \n        /** The outlet name of the route. It's a constant */\n        outlet, \n        /** The component of the route. It's a constant */\n        // TODO(vsavkin): remove |string\n        component, futureSnapshot) {\n            this.url = url;\n            this.params = params;\n            this.queryParams = queryParams;\n            this.fragment = fragment;\n            this.data = data;\n            this.outlet = outlet;\n            this.component = component;\n            this._futureSnapshot = futureSnapshot;\n        }\n        Object.defineProperty(ActivatedRoute.prototype, \"routeConfig\", {\n            /** The configuration used to match this route */\n            get: function () { return this._futureSnapshot.routeConfig; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRoute.prototype, \"root\", {\n            /** The root of the router state */\n            get: function () { return this._routerState.root; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRoute.prototype, \"parent\", {\n            /** The parent of this route in the router state tree */\n            get: function () { return this._routerState.parent(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRoute.prototype, \"firstChild\", {\n            /** The first child of this route in the router state tree */\n            get: function () { return this._routerState.firstChild(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRoute.prototype, \"children\", {\n            /** The children of this route in the router state tree */\n            get: function () { return this._routerState.children(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRoute.prototype, \"pathFromRoot\", {\n            /** The path from the root of the router state tree to this route */\n            get: function () { return this._routerState.pathFromRoot(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRoute.prototype, \"paramMap\", {\n            get: function () {\n                if (!this._paramMap) {\n                    this._paramMap = this.params.pipe(operators.map(function (p) { return convertToParamMap(p); }));\n                }\n                return this._paramMap;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRoute.prototype, \"queryParamMap\", {\n            get: function () {\n                if (!this._queryParamMap) {\n                    this._queryParamMap =\n                        this.queryParams.pipe(operators.map(function (p) { return convertToParamMap(p); }));\n                }\n                return this._queryParamMap;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ActivatedRoute.prototype.toString = function () {\n            return this.snapshot ? this.snapshot.toString() : \"Future(\" + this._futureSnapshot + \")\";\n        };\n        return ActivatedRoute;\n    }());\n    /**\n     * Returns the inherited params, data, and resolve for a given route.\n     * By default, this only inherits values up to the nearest path-less or component-less route.\n     * @internal\n     */\n    function inheritedParamsDataResolve(route, paramsInheritanceStrategy) {\n        if (paramsInheritanceStrategy === void 0) { paramsInheritanceStrategy = 'emptyOnly'; }\n        var pathFromRoot = route.pathFromRoot;\n        var inheritingStartingFrom = 0;\n        if (paramsInheritanceStrategy !== 'always') {\n            inheritingStartingFrom = pathFromRoot.length - 1;\n            while (inheritingStartingFrom >= 1) {\n                var current = pathFromRoot[inheritingStartingFrom];\n                var parent_1 = pathFromRoot[inheritingStartingFrom - 1];\n                // current route is an empty path => inherits its parent's params and data\n                if (current.routeConfig && current.routeConfig.path === '') {\n                    inheritingStartingFrom--;\n                    // parent is componentless => current route should inherit its params and data\n                }\n                else if (!parent_1.component) {\n                    inheritingStartingFrom--;\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return flattenInherited(pathFromRoot.slice(inheritingStartingFrom));\n    }\n    /** @internal */\n    function flattenInherited(pathFromRoot) {\n        return pathFromRoot.reduce(function (res, curr) {\n            var params = __assign({}, res.params, curr.params);\n            var data = __assign({}, res.data, curr.data);\n            var resolve = __assign({}, res.resolve, curr._resolvedData);\n            return { params: params, data: data, resolve: resolve };\n        }, { params: {}, data: {}, resolve: {} });\n    }\n    /**\n     * @description\n     *\n     * Contains the information about a route associated with a component loaded in an\n     * outlet at a particular moment in time. ActivatedRouteSnapshot can also be used to\n     * traverse the router state tree.\n     *\n     * ```\n     * @Component({templateUrl:'./my-component.html'})\n     * class MyComponent {\n     *   constructor(route: ActivatedRoute) {\n     *     const id: string = route.snapshot.params.id;\n     *     const url: string = route.snapshot.url.join('');\n     *     const user = route.snapshot.data.user;\n     *   }\n     * }\n     * ```\n     *\n     *\n     */\n    var ActivatedRouteSnapshot = /** @class */ (function () {\n        /** @internal */\n        function ActivatedRouteSnapshot(\n        /** The URL segments matched by this route */\n        url, \n        /** The matrix parameters scoped to this route */\n        params, \n        /** The query parameters shared by all the routes */\n        queryParams, \n        /** The URL fragment shared by all the routes */\n        fragment, \n        /** The static and resolved data of this route */\n        data, \n        /** The outlet name of the route */\n        outlet, \n        /** The component of the route */\n        component, routeConfig, urlSegment, lastPathIndex, resolve) {\n            this.url = url;\n            this.params = params;\n            this.queryParams = queryParams;\n            this.fragment = fragment;\n            this.data = data;\n            this.outlet = outlet;\n            this.component = component;\n            this.routeConfig = routeConfig;\n            this._urlSegment = urlSegment;\n            this._lastPathIndex = lastPathIndex;\n            this._resolve = resolve;\n        }\n        Object.defineProperty(ActivatedRouteSnapshot.prototype, \"root\", {\n            /** The root of the router state */\n            get: function () { return this._routerState.root; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRouteSnapshot.prototype, \"parent\", {\n            /** The parent of this route in the router state tree */\n            get: function () { return this._routerState.parent(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRouteSnapshot.prototype, \"firstChild\", {\n            /** The first child of this route in the router state tree */\n            get: function () { return this._routerState.firstChild(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRouteSnapshot.prototype, \"children\", {\n            /** The children of this route in the router state tree */\n            get: function () { return this._routerState.children(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRouteSnapshot.prototype, \"pathFromRoot\", {\n            /** The path from the root of the router state tree to this route */\n            get: function () { return this._routerState.pathFromRoot(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRouteSnapshot.prototype, \"paramMap\", {\n            get: function () {\n                if (!this._paramMap) {\n                    this._paramMap = convertToParamMap(this.params);\n                }\n                return this._paramMap;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRouteSnapshot.prototype, \"queryParamMap\", {\n            get: function () {\n                if (!this._queryParamMap) {\n                    this._queryParamMap = convertToParamMap(this.queryParams);\n                }\n                return this._queryParamMap;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ActivatedRouteSnapshot.prototype.toString = function () {\n            var url = this.url.map(function (segment) { return segment.toString(); }).join('/');\n            var matched = this.routeConfig ? this.routeConfig.path : '';\n            return \"Route(url:'\" + url + \"', path:'\" + matched + \"')\";\n        };\n        return ActivatedRouteSnapshot;\n    }());\n    /**\n     * @description\n     *\n     * Represents the state of the router at a moment in time.\n     *\n     * This is a tree of activated route snapshots. Every node in this tree knows about\n     * the \"consumed\" URL segments, the extracted parameters, and the resolved data.\n     *\n     * ### Example\n     *\n     * ```\n     * @Component({templateUrl:'template.html'})\n     * class MyComponent {\n     *   constructor(router: Router) {\n     *     const state: RouterState = router.routerState;\n     *     const snapshot: RouterStateSnapshot = state.snapshot;\n     *     const root: ActivatedRouteSnapshot = snapshot.root;\n     *     const child = root.firstChild;\n     *     const id: Observable<string> = child.params.map(p => p.id);\n     *     //...\n     *   }\n     * }\n     * ```\n     *\n     *\n     */\n    var RouterStateSnapshot = /** @class */ (function (_super) {\n        __extends(RouterStateSnapshot, _super);\n        /** @internal */\n        function RouterStateSnapshot(\n        /** The url from which this snapshot was created */\n        url, root) {\n            var _this = _super.call(this, root) || this;\n            _this.url = url;\n            setRouterState(_this, root);\n            return _this;\n        }\n        RouterStateSnapshot.prototype.toString = function () { return serializeNode(this._root); };\n        return RouterStateSnapshot;\n    }(Tree));\n    function setRouterState(state, node) {\n        node.value._routerState = state;\n        node.children.forEach(function (c) { return setRouterState(state, c); });\n    }\n    function serializeNode(node) {\n        var c = node.children.length > 0 ? \" { \" + node.children.map(serializeNode).join(', ') + \" } \" : '';\n        return \"\" + node.value + c;\n    }\n    /**\n     * The expectation is that the activate route is created with the right set of parameters.\n     * So we push new values into the observables only when they are not the initial values.\n     * And we detect that by checking if the snapshot field is set.\n     */\n    function advanceActivatedRoute(route) {\n        if (route.snapshot) {\n            var currentSnapshot = route.snapshot;\n            var nextSnapshot = route._futureSnapshot;\n            route.snapshot = nextSnapshot;\n            if (!shallowEqual(currentSnapshot.queryParams, nextSnapshot.queryParams)) {\n                route.queryParams.next(nextSnapshot.queryParams);\n            }\n            if (currentSnapshot.fragment !== nextSnapshot.fragment) {\n                route.fragment.next(nextSnapshot.fragment);\n            }\n            if (!shallowEqual(currentSnapshot.params, nextSnapshot.params)) {\n                route.params.next(nextSnapshot.params);\n            }\n            if (!shallowEqualArrays(currentSnapshot.url, nextSnapshot.url)) {\n                route.url.next(nextSnapshot.url);\n            }\n            if (!shallowEqual(currentSnapshot.data, nextSnapshot.data)) {\n                route.data.next(nextSnapshot.data);\n            }\n        }\n        else {\n            route.snapshot = route._futureSnapshot;\n            // this is for resolved data\n            route.data.next(route._futureSnapshot.data);\n        }\n    }\n    function equalParamsAndUrlSegments(a, b) {\n        var equalUrlParams = shallowEqual(a.params, b.params) && equalSegments(a.url, b.url);\n        var parentsMismatch = !a.parent !== !b.parent;\n        return equalUrlParams && !parentsMismatch &&\n            (!a.parent || equalParamsAndUrlSegments(a.parent, b.parent));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function createRouterState(routeReuseStrategy, curr, prevState) {\n        var root = createNode(routeReuseStrategy, curr._root, prevState ? prevState._root : undefined);\n        return new RouterState(root, curr);\n    }\n    function createNode(routeReuseStrategy, curr, prevState) {\n        // reuse an activated route that is currently displayed on the screen\n        if (prevState && routeReuseStrategy.shouldReuseRoute(curr.value, prevState.value.snapshot)) {\n            var value = prevState.value;\n            value._futureSnapshot = curr.value;\n            var children = createOrReuseChildren(routeReuseStrategy, curr, prevState);\n            return new TreeNode(value, children);\n            // retrieve an activated route that is used to be displayed, but is not currently displayed\n        }\n        else {\n            var detachedRouteHandle = routeReuseStrategy.retrieve(curr.value);\n            if (detachedRouteHandle) {\n                var tree = detachedRouteHandle.route;\n                setFutureSnapshotsOfActivatedRoutes(curr, tree);\n                return tree;\n            }\n            else {\n                var value = createActivatedRoute(curr.value);\n                var children = curr.children.map(function (c) { return createNode(routeReuseStrategy, c); });\n                return new TreeNode(value, children);\n            }\n        }\n    }\n    function setFutureSnapshotsOfActivatedRoutes(curr, result) {\n        if (curr.value.routeConfig !== result.value.routeConfig) {\n            throw new Error('Cannot reattach ActivatedRouteSnapshot created from a different route');\n        }\n        if (curr.children.length !== result.children.length) {\n            throw new Error('Cannot reattach ActivatedRouteSnapshot with a different number of children');\n        }\n        result.value._futureSnapshot = curr.value;\n        for (var i = 0; i < curr.children.length; ++i) {\n            setFutureSnapshotsOfActivatedRoutes(curr.children[i], result.children[i]);\n        }\n    }\n    function createOrReuseChildren(routeReuseStrategy, curr, prevState) {\n        return curr.children.map(function (child) {\n            try {\n                for (var _a = __values(prevState.children), _b = _a.next(); !_b.done; _b = _a.next()) {\n                    var p = _b.value;\n                    if (routeReuseStrategy.shouldReuseRoute(p.value.snapshot, child.value)) {\n                        return createNode(routeReuseStrategy, child, p);\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            return createNode(routeReuseStrategy, child);\n            var e_1, _c;\n        });\n    }\n    function createActivatedRoute(c) {\n        return new ActivatedRoute(new rxjs.BehaviorSubject(c.url), new rxjs.BehaviorSubject(c.params), new rxjs.BehaviorSubject(c.queryParams), new rxjs.BehaviorSubject(c.fragment), new rxjs.BehaviorSubject(c.data), c.outlet, c.component, c);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function createUrlTree(route, urlTree, commands, queryParams, fragment) {\n        if (commands.length === 0) {\n            return tree(urlTree.root, urlTree.root, urlTree, queryParams, fragment);\n        }\n        var nav = computeNavigation(commands);\n        if (nav.toRoot()) {\n            return tree(urlTree.root, new UrlSegmentGroup([], {}), urlTree, queryParams, fragment);\n        }\n        var startingPosition = findStartingPosition(nav, urlTree, route);\n        var segmentGroup = startingPosition.processChildren ?\n            updateSegmentGroupChildren(startingPosition.segmentGroup, startingPosition.index, nav.commands) :\n            updateSegmentGroup(startingPosition.segmentGroup, startingPosition.index, nav.commands);\n        return tree(startingPosition.segmentGroup, segmentGroup, urlTree, queryParams, fragment);\n    }\n    function isMatrixParams(command) {\n        return typeof command === 'object' && command != null && !command.outlets && !command.segmentPath;\n    }\n    function tree(oldSegmentGroup, newSegmentGroup, urlTree, queryParams, fragment) {\n        var qp = {};\n        if (queryParams) {\n            forEach(queryParams, function (value, name) {\n                qp[name] = Array.isArray(value) ? value.map(function (v) { return \"\" + v; }) : \"\" + value;\n            });\n        }\n        if (urlTree.root === oldSegmentGroup) {\n            return new UrlTree(newSegmentGroup, qp, fragment);\n        }\n        return new UrlTree(replaceSegment(urlTree.root, oldSegmentGroup, newSegmentGroup), qp, fragment);\n    }\n    function replaceSegment(current, oldSegment, newSegment) {\n        var children = {};\n        forEach(current.children, function (c, outletName) {\n            if (c === oldSegment) {\n                children[outletName] = newSegment;\n            }\n            else {\n                children[outletName] = replaceSegment(c, oldSegment, newSegment);\n            }\n        });\n        return new UrlSegmentGroup(current.segments, children);\n    }\n    var Navigation = /** @class */ (function () {\n        function Navigation(isAbsolute, numberOfDoubleDots, commands) {\n            this.isAbsolute = isAbsolute;\n            this.numberOfDoubleDots = numberOfDoubleDots;\n            this.commands = commands;\n            if (isAbsolute && commands.length > 0 && isMatrixParams(commands[0])) {\n                throw new Error('Root segment cannot have matrix parameters');\n            }\n            var cmdWithOutlet = commands.find(function (c) { return typeof c === 'object' && c != null && c.outlets; });\n            if (cmdWithOutlet && cmdWithOutlet !== last(commands)) {\n                throw new Error('{outlets:{}} has to be the last command');\n            }\n        }\n        Navigation.prototype.toRoot = function () {\n            return this.isAbsolute && this.commands.length === 1 && this.commands[0] == '/';\n        };\n        return Navigation;\n    }());\n    /** Transforms commands to a normalized `Navigation` */\n    function computeNavigation(commands) {\n        if ((typeof commands[0] === 'string') && commands.length === 1 && commands[0] === '/') {\n            return new Navigation(true, 0, commands);\n        }\n        var numberOfDoubleDots = 0;\n        var isAbsolute = false;\n        var res = commands.reduce(function (res, cmd, cmdIdx) {\n            if (typeof cmd === 'object' && cmd != null) {\n                if (cmd.outlets) {\n                    var outlets_1 = {};\n                    forEach(cmd.outlets, function (commands, name) {\n                        outlets_1[name] = typeof commands === 'string' ? commands.split('/') : commands;\n                    });\n                    return __spread(res, [{ outlets: outlets_1 }]);\n                }\n                if (cmd.segmentPath) {\n                    return __spread(res, [cmd.segmentPath]);\n                }\n            }\n            if (!(typeof cmd === 'string')) {\n                return __spread(res, [cmd]);\n            }\n            if (cmdIdx === 0) {\n                cmd.split('/').forEach(function (urlPart, partIndex) {\n                    if (partIndex == 0 && urlPart === '.') ;\n                    else if (partIndex == 0 && urlPart === '') {\n                        isAbsolute = true;\n                    }\n                    else if (urlPart === '..') {\n                        numberOfDoubleDots++;\n                    }\n                    else if (urlPart != '') {\n                        res.push(urlPart);\n                    }\n                });\n                return res;\n            }\n            return __spread(res, [cmd]);\n        }, []);\n        return new Navigation(isAbsolute, numberOfDoubleDots, res);\n    }\n    var Position = /** @class */ (function () {\n        function Position(segmentGroup, processChildren, index) {\n            this.segmentGroup = segmentGroup;\n            this.processChildren = processChildren;\n            this.index = index;\n        }\n        return Position;\n    }());\n    function findStartingPosition(nav, tree, route) {\n        if (nav.isAbsolute) {\n            return new Position(tree.root, true, 0);\n        }\n        if (route.snapshot._lastPathIndex === -1) {\n            return new Position(route.snapshot._urlSegment, true, 0);\n        }\n        var modifier = isMatrixParams(nav.commands[0]) ? 0 : 1;\n        var index = route.snapshot._lastPathIndex + modifier;\n        return createPositionApplyingDoubleDots(route.snapshot._urlSegment, index, nav.numberOfDoubleDots);\n    }\n    function createPositionApplyingDoubleDots(group, index, numberOfDoubleDots) {\n        var g = group;\n        var ci = index;\n        var dd = numberOfDoubleDots;\n        while (dd > ci) {\n            dd -= ci;\n            g = g.parent;\n            if (!g) {\n                throw new Error('Invalid number of \\'../\\'');\n            }\n            ci = g.segments.length;\n        }\n        return new Position(g, false, ci - dd);\n    }\n    function getPath(command) {\n        if (typeof command === 'object' && command != null && command.outlets) {\n            return command.outlets[PRIMARY_OUTLET];\n        }\n        return \"\" + command;\n    }\n    function getOutlets(commands) {\n        if (!(typeof commands[0] === 'object'))\n            return _a = {}, _a[PRIMARY_OUTLET] = commands, _a;\n        if (commands[0].outlets === undefined)\n            return _b = {}, _b[PRIMARY_OUTLET] = commands, _b;\n        return commands[0].outlets;\n        var _a, _b;\n    }\n    function updateSegmentGroup(segmentGroup, startIndex, commands) {\n        if (!segmentGroup) {\n            segmentGroup = new UrlSegmentGroup([], {});\n        }\n        if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n            return updateSegmentGroupChildren(segmentGroup, startIndex, commands);\n        }\n        var m = prefixedWith(segmentGroup, startIndex, commands);\n        var slicedCommands = commands.slice(m.commandIndex);\n        if (m.match && m.pathIndex < segmentGroup.segments.length) {\n            var g = new UrlSegmentGroup(segmentGroup.segments.slice(0, m.pathIndex), {});\n            g.children[PRIMARY_OUTLET] =\n                new UrlSegmentGroup(segmentGroup.segments.slice(m.pathIndex), segmentGroup.children);\n            return updateSegmentGroupChildren(g, 0, slicedCommands);\n        }\n        else if (m.match && slicedCommands.length === 0) {\n            return new UrlSegmentGroup(segmentGroup.segments, {});\n        }\n        else if (m.match && !segmentGroup.hasChildren()) {\n            return createNewSegmentGroup(segmentGroup, startIndex, commands);\n        }\n        else if (m.match) {\n            return updateSegmentGroupChildren(segmentGroup, 0, slicedCommands);\n        }\n        else {\n            return createNewSegmentGroup(segmentGroup, startIndex, commands);\n        }\n    }\n    function updateSegmentGroupChildren(segmentGroup, startIndex, commands) {\n        if (commands.length === 0) {\n            return new UrlSegmentGroup(segmentGroup.segments, {});\n        }\n        else {\n            var outlets_2 = getOutlets(commands);\n            var children_1 = {};\n            forEach(outlets_2, function (commands, outlet) {\n                if (commands !== null) {\n                    children_1[outlet] = updateSegmentGroup(segmentGroup.children[outlet], startIndex, commands);\n                }\n            });\n            forEach(segmentGroup.children, function (child, childOutlet) {\n                if (outlets_2[childOutlet] === undefined) {\n                    children_1[childOutlet] = child;\n                }\n            });\n            return new UrlSegmentGroup(segmentGroup.segments, children_1);\n        }\n    }\n    function prefixedWith(segmentGroup, startIndex, commands) {\n        var currentCommandIndex = 0;\n        var currentPathIndex = startIndex;\n        var noMatch = { match: false, pathIndex: 0, commandIndex: 0 };\n        while (currentPathIndex < segmentGroup.segments.length) {\n            if (currentCommandIndex >= commands.length)\n                return noMatch;\n            var path = segmentGroup.segments[currentPathIndex];\n            var curr = getPath(commands[currentCommandIndex]);\n            var next = currentCommandIndex < commands.length - 1 ? commands[currentCommandIndex + 1] : null;\n            if (currentPathIndex > 0 && curr === undefined)\n                break;\n            if (curr && next && (typeof next === 'object') && next.outlets === undefined) {\n                if (!compare(curr, next, path))\n                    return noMatch;\n                currentCommandIndex += 2;\n            }\n            else {\n                if (!compare(curr, {}, path))\n                    return noMatch;\n                currentCommandIndex++;\n            }\n            currentPathIndex++;\n        }\n        return { match: true, pathIndex: currentPathIndex, commandIndex: currentCommandIndex };\n    }\n    function createNewSegmentGroup(segmentGroup, startIndex, commands) {\n        var paths = segmentGroup.segments.slice(0, startIndex);\n        var i = 0;\n        while (i < commands.length) {\n            if (typeof commands[i] === 'object' && commands[i].outlets !== undefined) {\n                var children = createNewSegmentChildren(commands[i].outlets);\n                return new UrlSegmentGroup(paths, children);\n            }\n            // if we start with an object literal, we need to reuse the path part from the segment\n            if (i === 0 && isMatrixParams(commands[0])) {\n                var p = segmentGroup.segments[startIndex];\n                paths.push(new UrlSegment(p.path, commands[0]));\n                i++;\n                continue;\n            }\n            var curr = getPath(commands[i]);\n            var next = (i < commands.length - 1) ? commands[i + 1] : null;\n            if (curr && next && isMatrixParams(next)) {\n                paths.push(new UrlSegment(curr, stringify(next)));\n                i += 2;\n            }\n            else {\n                paths.push(new UrlSegment(curr, {}));\n                i++;\n            }\n        }\n        return new UrlSegmentGroup(paths, {});\n    }\n    function createNewSegmentChildren(outlets) {\n        var children = {};\n        forEach(outlets, function (commands, outlet) {\n            if (commands !== null) {\n                children[outlet] = createNewSegmentGroup(new UrlSegmentGroup([], {}), 0, commands);\n            }\n        });\n        return children;\n    }\n    function stringify(params) {\n        var res = {};\n        forEach(params, function (v, k) { return res[k] = \"\" + v; });\n        return res;\n    }\n    function compare(path, params, segment) {\n        return path == segment.path && shallowEqual(params, segment.parameters);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var CanActivate = /** @class */ (function () {\n        function CanActivate(path) {\n            this.path = path;\n            this.route = this.path[this.path.length - 1];\n        }\n        return CanActivate;\n    }());\n    var CanDeactivate = /** @class */ (function () {\n        function CanDeactivate(component, route) {\n            this.component = component;\n            this.route = route;\n        }\n        return CanDeactivate;\n    }());\n    /**\n     * This class bundles the actions involved in preactivation of a route.\n     */\n    var PreActivation = /** @class */ (function () {\n        function PreActivation(future, curr, moduleInjector, forwardEvent) {\n            this.future = future;\n            this.curr = curr;\n            this.moduleInjector = moduleInjector;\n            this.forwardEvent = forwardEvent;\n            this.canActivateChecks = [];\n            this.canDeactivateChecks = [];\n        }\n        PreActivation.prototype.initialize = function (parentContexts) {\n            var futureRoot = this.future._root;\n            var currRoot = this.curr ? this.curr._root : null;\n            this.setupChildRouteGuards(futureRoot, currRoot, parentContexts, [futureRoot.value]);\n        };\n        PreActivation.prototype.checkGuards = function () {\n            var _this = this;\n            if (!this.isDeactivating() && !this.isActivating()) {\n                return rxjs.of(true);\n            }\n            var canDeactivate$ = this.runCanDeactivateChecks();\n            return canDeactivate$.pipe(operators.mergeMap(function (canDeactivate) { return canDeactivate ? _this.runCanActivateChecks() : rxjs.of(false); }));\n        };\n        PreActivation.prototype.resolveData = function (paramsInheritanceStrategy) {\n            var _this = this;\n            if (!this.isActivating())\n                return rxjs.of(null);\n            return rxjs.from(this.canActivateChecks)\n                .pipe(operators.concatMap(function (check) { return _this.runResolve(check.route, paramsInheritanceStrategy); }), operators.reduce(function (_, __) { return _; }));\n        };\n        PreActivation.prototype.isDeactivating = function () { return this.canDeactivateChecks.length !== 0; };\n        PreActivation.prototype.isActivating = function () { return this.canActivateChecks.length !== 0; };\n        /**\n         * Iterates over child routes and calls recursive `setupRouteGuards` to get `this` instance in\n         * proper state to run `checkGuards()` method.\n         */\n        PreActivation.prototype.setupChildRouteGuards = function (futureNode, currNode, contexts, futurePath) {\n            var _this = this;\n            var prevChildren = nodeChildrenAsMap(currNode);\n            // Process the children of the future route\n            futureNode.children.forEach(function (c) {\n                _this.setupRouteGuards(c, prevChildren[c.value.outlet], contexts, futurePath.concat([c.value]));\n                delete prevChildren[c.value.outlet];\n            });\n            // Process any children left from the current route (not active for the future route)\n            forEach(prevChildren, function (v, k) {\n                return _this.deactivateRouteAndItsChildren(v, contexts.getContext(k));\n            });\n        };\n        /**\n         * Iterates over child routes and calls recursive `setupRouteGuards` to get `this` instance in\n         * proper state to run `checkGuards()` method.\n         */\n        PreActivation.prototype.setupRouteGuards = function (futureNode, currNode, parentContexts, futurePath) {\n            var future = futureNode.value;\n            var curr = currNode ? currNode.value : null;\n            var context = parentContexts ? parentContexts.getContext(futureNode.value.outlet) : null;\n            // reusing the node\n            if (curr && future.routeConfig === curr.routeConfig) {\n                var shouldRunGuardsAndResolvers = this.shouldRunGuardsAndResolvers(curr, future, future.routeConfig.runGuardsAndResolvers);\n                if (shouldRunGuardsAndResolvers) {\n                    this.canActivateChecks.push(new CanActivate(futurePath));\n                }\n                else {\n                    // we need to set the data\n                    future.data = curr.data;\n                    future._resolvedData = curr._resolvedData;\n                }\n                // If we have a component, we need to go through an outlet.\n                if (future.component) {\n                    this.setupChildRouteGuards(futureNode, currNode, context ? context.children : null, futurePath);\n                    // if we have a componentless route, we recurse but keep the same outlet map.\n                }\n                else {\n                    this.setupChildRouteGuards(futureNode, currNode, parentContexts, futurePath);\n                }\n                if (shouldRunGuardsAndResolvers) {\n                    var outlet = context.outlet;\n                    this.canDeactivateChecks.push(new CanDeactivate(outlet.component, curr));\n                }\n            }\n            else {\n                if (curr) {\n                    this.deactivateRouteAndItsChildren(currNode, context);\n                }\n                this.canActivateChecks.push(new CanActivate(futurePath));\n                // If we have a component, we need to go through an outlet.\n                if (future.component) {\n                    this.setupChildRouteGuards(futureNode, null, context ? context.children : null, futurePath);\n                    // if we have a componentless route, we recurse but keep the same outlet map.\n                }\n                else {\n                    this.setupChildRouteGuards(futureNode, null, parentContexts, futurePath);\n                }\n            }\n        };\n        PreActivation.prototype.shouldRunGuardsAndResolvers = function (curr, future, mode) {\n            switch (mode) {\n                case 'always':\n                    return true;\n                case 'paramsOrQueryParamsChange':\n                    return !equalParamsAndUrlSegments(curr, future) ||\n                        !shallowEqual(curr.queryParams, future.queryParams);\n                case 'paramsChange':\n                default:\n                    return !equalParamsAndUrlSegments(curr, future);\n            }\n        };\n        PreActivation.prototype.deactivateRouteAndItsChildren = function (route, context) {\n            var _this = this;\n            var children = nodeChildrenAsMap(route);\n            var r = route.value;\n            forEach(children, function (node, childName) {\n                if (!r.component) {\n                    _this.deactivateRouteAndItsChildren(node, context);\n                }\n                else if (context) {\n                    _this.deactivateRouteAndItsChildren(node, context.children.getContext(childName));\n                }\n                else {\n                    _this.deactivateRouteAndItsChildren(node, null);\n                }\n            });\n            if (!r.component) {\n                this.canDeactivateChecks.push(new CanDeactivate(null, r));\n            }\n            else if (context && context.outlet && context.outlet.isActivated) {\n                this.canDeactivateChecks.push(new CanDeactivate(context.outlet.component, r));\n            }\n            else {\n                this.canDeactivateChecks.push(new CanDeactivate(null, r));\n            }\n        };\n        PreActivation.prototype.runCanDeactivateChecks = function () {\n            var _this = this;\n            return rxjs.from(this.canDeactivateChecks)\n                .pipe(operators.mergeMap(function (check) { return _this.runCanDeactivate(check.component, check.route); }), operators.every(function (result) { return result === true; }));\n        };\n        PreActivation.prototype.runCanActivateChecks = function () {\n            var _this = this;\n            return rxjs.from(this.canActivateChecks)\n                .pipe(operators.concatMap(function (check) { return andObservables(rxjs.from([\n                _this.fireChildActivationStart(check.route.parent),\n                _this.fireActivationStart(check.route), _this.runCanActivateChild(check.path),\n                _this.runCanActivate(check.route)\n            ])); }), operators.every(function (result) { return result === true; }));\n            // this.fireChildActivationStart(check.path),\n        };\n        /**\n         * This should fire off `ActivationStart` events for each route being activated at this\n         * level.\n         * In other words, if you're activating `a` and `b` below, `path` will contain the\n         * `ActivatedRouteSnapshot`s for both and we will fire `ActivationStart` for both. Always\n         * return\n         * `true` so checks continue to run.\n         */\n        PreActivation.prototype.fireActivationStart = function (snapshot) {\n            if (snapshot !== null && this.forwardEvent) {\n                this.forwardEvent(new ActivationStart(snapshot));\n            }\n            return rxjs.of(true);\n        };\n        /**\n         * This should fire off `ChildActivationStart` events for each route being activated at this\n         * level.\n         * In other words, if you're activating `a` and `b` below, `path` will contain the\n         * `ActivatedRouteSnapshot`s for both and we will fire `ChildActivationStart` for both. Always\n         * return\n         * `true` so checks continue to run.\n         */\n        PreActivation.prototype.fireChildActivationStart = function (snapshot) {\n            if (snapshot !== null && this.forwardEvent) {\n                this.forwardEvent(new ChildActivationStart(snapshot));\n            }\n            return rxjs.of(true);\n        };\n        PreActivation.prototype.runCanActivate = function (future) {\n            var _this = this;\n            var canActivate = future.routeConfig ? future.routeConfig.canActivate : null;\n            if (!canActivate || canActivate.length === 0)\n                return rxjs.of(true);\n            var obs = rxjs.from(canActivate).pipe(operators.map(function (c) {\n                var guard = _this.getToken(c, future);\n                var observable;\n                if (guard.canActivate) {\n                    observable = wrapIntoObservable(guard.canActivate(future, _this.future));\n                }\n                else {\n                    observable = wrapIntoObservable(guard(future, _this.future));\n                }\n                return observable.pipe(operators.first());\n            }));\n            return andObservables(obs);\n        };\n        PreActivation.prototype.runCanActivateChild = function (path) {\n            var _this = this;\n            var future = path[path.length - 1];\n            var canActivateChildGuards = path.slice(0, path.length - 1)\n                .reverse()\n                .map(function (p) { return _this.extractCanActivateChild(p); })\n                .filter(function (_) { return _ !== null; });\n            return andObservables(rxjs.from(canActivateChildGuards).pipe(operators.map(function (d) {\n                var obs = rxjs.from(d.guards).pipe(operators.map(function (c) {\n                    var guard = _this.getToken(c, d.node);\n                    var observable;\n                    if (guard.canActivateChild) {\n                        observable = wrapIntoObservable(guard.canActivateChild(future, _this.future));\n                    }\n                    else {\n                        observable = wrapIntoObservable(guard(future, _this.future));\n                    }\n                    return observable.pipe(operators.first());\n                }));\n                return andObservables(obs);\n            })));\n        };\n        PreActivation.prototype.extractCanActivateChild = function (p) {\n            var canActivateChild = p.routeConfig ? p.routeConfig.canActivateChild : null;\n            if (!canActivateChild || canActivateChild.length === 0)\n                return null;\n            return { node: p, guards: canActivateChild };\n        };\n        PreActivation.prototype.runCanDeactivate = function (component, curr) {\n            var _this = this;\n            var canDeactivate = curr && curr.routeConfig ? curr.routeConfig.canDeactivate : null;\n            if (!canDeactivate || canDeactivate.length === 0)\n                return rxjs.of(true);\n            var canDeactivate$ = rxjs.from(canDeactivate).pipe(operators.mergeMap(function (c) {\n                var guard = _this.getToken(c, curr);\n                var observable;\n                if (guard.canDeactivate) {\n                    observable =\n                        wrapIntoObservable(guard.canDeactivate(component, curr, _this.curr, _this.future));\n                }\n                else {\n                    observable = wrapIntoObservable(guard(component, curr, _this.curr, _this.future));\n                }\n                return observable.pipe(operators.first());\n            }));\n            return canDeactivate$.pipe(operators.every(function (result) { return result === true; }));\n        };\n        PreActivation.prototype.runResolve = function (future, paramsInheritanceStrategy) {\n            var resolve = future._resolve;\n            return this.resolveNode(resolve, future).pipe(operators.map(function (resolvedData) {\n                future._resolvedData = resolvedData;\n                future.data = __assign({}, future.data, inheritedParamsDataResolve(future, paramsInheritanceStrategy).resolve);\n                return null;\n            }));\n        };\n        PreActivation.prototype.resolveNode = function (resolve, future) {\n            var _this = this;\n            var keys = Object.keys(resolve);\n            if (keys.length === 0) {\n                return rxjs.of({});\n            }\n            if (keys.length === 1) {\n                var key_1 = keys[0];\n                return this.getResolver(resolve[key_1], future).pipe(operators.map(function (value) {\n                    return _a = {}, _a[key_1] = value, _a;\n                    var _a;\n                }));\n            }\n            var data = {};\n            var runningResolvers$ = rxjs.from(keys).pipe(operators.mergeMap(function (key) {\n                return _this.getResolver(resolve[key], future).pipe(operators.map(function (value) {\n                    data[key] = value;\n                    return value;\n                }));\n            }));\n            return runningResolvers$.pipe(operators.last(), operators.map(function () { return data; }));\n        };\n        PreActivation.prototype.getResolver = function (injectionToken, future) {\n            var resolver = this.getToken(injectionToken, future);\n            return resolver.resolve ? wrapIntoObservable(resolver.resolve(future, this.future)) :\n                wrapIntoObservable(resolver(future, this.future));\n        };\n        PreActivation.prototype.getToken = function (token, snapshot) {\n            var config = closestLoadedConfig(snapshot);\n            var injector = config ? config.module.injector : this.moduleInjector;\n            return injector.get(token);\n        };\n        return PreActivation;\n    }());\n    function closestLoadedConfig(snapshot) {\n        if (!snapshot)\n            return null;\n        for (var s = snapshot.parent; s; s = s.parent) {\n            var route = s.routeConfig;\n            if (route && route._loadedConfig)\n                return route._loadedConfig;\n        }\n        return null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NoMatch$1 = /** @class */ (function () {\n        function NoMatch() {\n        }\n        return NoMatch;\n    }());\n    function recognize(rootComponentType, config, urlTree, url, paramsInheritanceStrategy) {\n        if (paramsInheritanceStrategy === void 0) { paramsInheritanceStrategy = 'emptyOnly'; }\n        return new Recognizer(rootComponentType, config, urlTree, url, paramsInheritanceStrategy)\n            .recognize();\n    }\n    var Recognizer = /** @class */ (function () {\n        function Recognizer(rootComponentType, config, urlTree, url, paramsInheritanceStrategy) {\n            this.rootComponentType = rootComponentType;\n            this.config = config;\n            this.urlTree = urlTree;\n            this.url = url;\n            this.paramsInheritanceStrategy = paramsInheritanceStrategy;\n        }\n        Recognizer.prototype.recognize = function () {\n            try {\n                var rootSegmentGroup = split$1(this.urlTree.root, [], [], this.config).segmentGroup;\n                var children = this.processSegmentGroup(this.config, rootSegmentGroup, PRIMARY_OUTLET);\n                var root = new ActivatedRouteSnapshot([], Object.freeze({}), Object.freeze(__assign({}, this.urlTree.queryParams)), this.urlTree.fragment, {}, PRIMARY_OUTLET, this.rootComponentType, null, this.urlTree.root, -1, {});\n                var rootNode = new TreeNode(root, children);\n                var routeState = new RouterStateSnapshot(this.url, rootNode);\n                this.inheritParamsAndData(routeState._root);\n                return rxjs.of(routeState);\n            }\n            catch (e) {\n                return new rxjs.Observable(function (obs) { return obs.error(e); });\n            }\n        };\n        Recognizer.prototype.inheritParamsAndData = function (routeNode) {\n            var _this = this;\n            var route = routeNode.value;\n            var i = inheritedParamsDataResolve(route, this.paramsInheritanceStrategy);\n            route.params = Object.freeze(i.params);\n            route.data = Object.freeze(i.data);\n            routeNode.children.forEach(function (n) { return _this.inheritParamsAndData(n); });\n        };\n        Recognizer.prototype.processSegmentGroup = function (config, segmentGroup, outlet) {\n            if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n                return this.processChildren(config, segmentGroup);\n            }\n            return this.processSegment(config, segmentGroup, segmentGroup.segments, outlet);\n        };\n        Recognizer.prototype.processChildren = function (config, segmentGroup) {\n            var _this = this;\n            var children = mapChildrenIntoArray(segmentGroup, function (child, childOutlet) { return _this.processSegmentGroup(config, child, childOutlet); });\n            checkOutletNameUniqueness(children);\n            sortActivatedRouteSnapshots(children);\n            return children;\n        };\n        Recognizer.prototype.processSegment = function (config, segmentGroup, segments, outlet) {\n            try {\n                for (var config_1 = __values(config), config_1_1 = config_1.next(); !config_1_1.done; config_1_1 = config_1.next()) {\n                    var r = config_1_1.value;\n                    try {\n                        return this.processSegmentAgainstRoute(r, segmentGroup, segments, outlet);\n                    }\n                    catch (e) {\n                        if (!(e instanceof NoMatch$1))\n                            throw e;\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (config_1_1 && !config_1_1.done && (_a = config_1.return)) _a.call(config_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            if (this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n                return [];\n            }\n            throw new NoMatch$1();\n            var e_1, _a;\n        };\n        Recognizer.prototype.noLeftoversInUrl = function (segmentGroup, segments, outlet) {\n            return segments.length === 0 && !segmentGroup.children[outlet];\n        };\n        Recognizer.prototype.processSegmentAgainstRoute = function (route, rawSegment, segments, outlet) {\n            if (route.redirectTo)\n                throw new NoMatch$1();\n            if ((route.outlet || PRIMARY_OUTLET) !== outlet)\n                throw new NoMatch$1();\n            var snapshot;\n            var consumedSegments = [];\n            var rawSlicedSegments = [];\n            if (route.path === '**') {\n                var params = segments.length > 0 ? last(segments).parameters : {};\n                snapshot = new ActivatedRouteSnapshot(segments, params, Object.freeze(__assign({}, this.urlTree.queryParams)), this.urlTree.fragment, getData(route), outlet, route.component, route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + segments.length, getResolve(route));\n            }\n            else {\n                var result = match$1(rawSegment, route, segments);\n                consumedSegments = result.consumedSegments;\n                rawSlicedSegments = segments.slice(result.lastChild);\n                snapshot = new ActivatedRouteSnapshot(consumedSegments, result.parameters, Object.freeze(__assign({}, this.urlTree.queryParams)), this.urlTree.fragment, getData(route), outlet, route.component, route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + consumedSegments.length, getResolve(route));\n            }\n            var childConfig = getChildConfig(route);\n            var _a = split$1(rawSegment, consumedSegments, rawSlicedSegments, childConfig), segmentGroup = _a.segmentGroup, slicedSegments = _a.slicedSegments;\n            if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n                var children_1 = this.processChildren(childConfig, segmentGroup);\n                return [new TreeNode(snapshot, children_1)];\n            }\n            if (childConfig.length === 0 && slicedSegments.length === 0) {\n                return [new TreeNode(snapshot, [])];\n            }\n            var children = this.processSegment(childConfig, segmentGroup, slicedSegments, PRIMARY_OUTLET);\n            return [new TreeNode(snapshot, children)];\n        };\n        return Recognizer;\n    }());\n    function sortActivatedRouteSnapshots(nodes) {\n        nodes.sort(function (a, b) {\n            if (a.value.outlet === PRIMARY_OUTLET)\n                return -1;\n            if (b.value.outlet === PRIMARY_OUTLET)\n                return 1;\n            return a.value.outlet.localeCompare(b.value.outlet);\n        });\n    }\n    function getChildConfig(route) {\n        if (route.children) {\n            return route.children;\n        }\n        if (route.loadChildren) {\n            return route._loadedConfig.routes;\n        }\n        return [];\n    }\n    function match$1(segmentGroup, route, segments) {\n        if (route.path === '') {\n            if (route.pathMatch === 'full' && (segmentGroup.hasChildren() || segments.length > 0)) {\n                throw new NoMatch$1();\n            }\n            return { consumedSegments: [], lastChild: 0, parameters: {} };\n        }\n        var matcher = route.matcher || defaultUrlMatcher;\n        var res = matcher(segments, segmentGroup, route);\n        if (!res)\n            throw new NoMatch$1();\n        var posParams = {};\n        forEach(res.posParams, function (v, k) { posParams[k] = v.path; });\n        var parameters = res.consumed.length > 0 ? __assign({}, posParams, res.consumed[res.consumed.length - 1].parameters) :\n            posParams;\n        return { consumedSegments: res.consumed, lastChild: res.consumed.length, parameters: parameters };\n    }\n    function checkOutletNameUniqueness(nodes) {\n        var names = {};\n        nodes.forEach(function (n) {\n            var routeWithSameOutletName = names[n.value.outlet];\n            if (routeWithSameOutletName) {\n                var p = routeWithSameOutletName.url.map(function (s) { return s.toString(); }).join('/');\n                var c = n.value.url.map(function (s) { return s.toString(); }).join('/');\n                throw new Error(\"Two segments cannot have the same outlet name: '\" + p + \"' and '\" + c + \"'.\");\n            }\n            names[n.value.outlet] = n.value;\n        });\n    }\n    function getSourceSegmentGroup(segmentGroup) {\n        var s = segmentGroup;\n        while (s._sourceSegment) {\n            s = s._sourceSegment;\n        }\n        return s;\n    }\n    function getPathIndexShift(segmentGroup) {\n        var s = segmentGroup;\n        var res = (s._segmentIndexShift ? s._segmentIndexShift : 0);\n        while (s._sourceSegment) {\n            s = s._sourceSegment;\n            res += (s._segmentIndexShift ? s._segmentIndexShift : 0);\n        }\n        return res - 1;\n    }\n    function split$1(segmentGroup, consumedSegments, slicedSegments, config) {\n        if (slicedSegments.length > 0 &&\n            containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n            var s_1 = new UrlSegmentGroup(consumedSegments, createChildrenForEmptyPaths(segmentGroup, consumedSegments, config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n            s_1._sourceSegment = segmentGroup;\n            s_1._segmentIndexShift = consumedSegments.length;\n            return { segmentGroup: s_1, slicedSegments: [] };\n        }\n        if (slicedSegments.length === 0 &&\n            containsEmptyPathMatches(segmentGroup, slicedSegments, config)) {\n            var s_2 = new UrlSegmentGroup(segmentGroup.segments, addEmptyPathsToChildrenIfNeeded(segmentGroup, slicedSegments, config, segmentGroup.children));\n            s_2._sourceSegment = segmentGroup;\n            s_2._segmentIndexShift = consumedSegments.length;\n            return { segmentGroup: s_2, slicedSegments: slicedSegments };\n        }\n        var s = new UrlSegmentGroup(segmentGroup.segments, segmentGroup.children);\n        s._sourceSegment = segmentGroup;\n        s._segmentIndexShift = consumedSegments.length;\n        return { segmentGroup: s, slicedSegments: slicedSegments };\n    }\n    function addEmptyPathsToChildrenIfNeeded(segmentGroup, slicedSegments, routes, children) {\n        var res = {};\n        try {\n            for (var routes_1 = __values(routes), routes_1_1 = routes_1.next(); !routes_1_1.done; routes_1_1 = routes_1.next()) {\n                var r = routes_1_1.value;\n                if (emptyPathMatch(segmentGroup, slicedSegments, r) && !children[getOutlet$1(r)]) {\n                    var s = new UrlSegmentGroup([], {});\n                    s._sourceSegment = segmentGroup;\n                    s._segmentIndexShift = segmentGroup.segments.length;\n                    res[getOutlet$1(r)] = s;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (routes_1_1 && !routes_1_1.done && (_a = routes_1.return)) _a.call(routes_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return __assign({}, children, res);\n        var e_2, _a;\n    }\n    function createChildrenForEmptyPaths(segmentGroup, consumedSegments, routes, primarySegment) {\n        var res = {};\n        res[PRIMARY_OUTLET] = primarySegment;\n        primarySegment._sourceSegment = segmentGroup;\n        primarySegment._segmentIndexShift = consumedSegments.length;\n        try {\n            for (var routes_2 = __values(routes), routes_2_1 = routes_2.next(); !routes_2_1.done; routes_2_1 = routes_2.next()) {\n                var r = routes_2_1.value;\n                if (r.path === '' && getOutlet$1(r) !== PRIMARY_OUTLET) {\n                    var s = new UrlSegmentGroup([], {});\n                    s._sourceSegment = segmentGroup;\n                    s._segmentIndexShift = consumedSegments.length;\n                    res[getOutlet$1(r)] = s;\n                }\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (routes_2_1 && !routes_2_1.done && (_a = routes_2.return)) _a.call(routes_2);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n        return res;\n        var e_3, _a;\n    }\n    function containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, routes) {\n        return routes.some(function (r) { return emptyPathMatch(segmentGroup, slicedSegments, r) && getOutlet$1(r) !== PRIMARY_OUTLET; });\n    }\n    function containsEmptyPathMatches(segmentGroup, slicedSegments, routes) {\n        return routes.some(function (r) { return emptyPathMatch(segmentGroup, slicedSegments, r); });\n    }\n    function emptyPathMatch(segmentGroup, slicedSegments, r) {\n        if ((segmentGroup.hasChildren() || slicedSegments.length > 0) && r.pathMatch === 'full') {\n            return false;\n        }\n        return r.path === '' && r.redirectTo === undefined;\n    }\n    function getOutlet$1(route) {\n        return route.outlet || PRIMARY_OUTLET;\n    }\n    function getData(route) {\n        return route.data || {};\n    }\n    function getResolve(route) {\n        return route.resolve || {};\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Provides a way to customize when activated routes get reused.\n     *\n     * @experimental\n     */\n    var RouteReuseStrategy = /** @class */ (function () {\n        function RouteReuseStrategy() {\n        }\n        return RouteReuseStrategy;\n    }());\n    /**\n     * Does not detach any subtrees. Reuses routes as long as their route config is the same.\n     */\n    var DefaultRouteReuseStrategy = /** @class */ (function () {\n        function DefaultRouteReuseStrategy() {\n        }\n        DefaultRouteReuseStrategy.prototype.shouldDetach = function (route) { return false; };\n        DefaultRouteReuseStrategy.prototype.store = function (route, detachedTree) { };\n        DefaultRouteReuseStrategy.prototype.shouldAttach = function (route) { return false; };\n        DefaultRouteReuseStrategy.prototype.retrieve = function (route) { return null; };\n        DefaultRouteReuseStrategy.prototype.shouldReuseRoute = function (future, curr) {\n            return future.routeConfig === curr.routeConfig;\n        };\n        return DefaultRouteReuseStrategy;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @docsNotRequired\n     * @experimental\n     */\n    var ROUTES = new core.InjectionToken('ROUTES');\n    var RouterConfigLoader = /** @class */ (function () {\n        function RouterConfigLoader(loader, compiler, onLoadStartListener, onLoadEndListener) {\n            this.loader = loader;\n            this.compiler = compiler;\n            this.onLoadStartListener = onLoadStartListener;\n            this.onLoadEndListener = onLoadEndListener;\n        }\n        RouterConfigLoader.prototype.load = function (parentInjector, route) {\n            var _this = this;\n            if (this.onLoadStartListener) {\n                this.onLoadStartListener(route);\n            }\n            var moduleFactory$ = this.loadModuleFactory(route.loadChildren);\n            return moduleFactory$.pipe(operators.map(function (factory) {\n                if (_this.onLoadEndListener) {\n                    _this.onLoadEndListener(route);\n                }\n                var module = factory.create(parentInjector);\n                return new LoadedRouterConfig(flatten(module.injector.get(ROUTES)).map(standardizeConfig), module);\n            }));\n        };\n        RouterConfigLoader.prototype.loadModuleFactory = function (loadChildren) {\n            var _this = this;\n            if (typeof loadChildren === 'string') {\n                return rxjs.from(this.loader.load(loadChildren));\n            }\n            else {\n                return wrapIntoObservable(loadChildren()).pipe(operators.mergeMap(function (t) {\n                    if (t instanceof core.NgModuleFactory) {\n                        return rxjs.of(t);\n                    }\n                    else {\n                        return rxjs.from(_this.compiler.compileModuleAsync(t));\n                    }\n                }));\n            }\n        };\n        return RouterConfigLoader;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Provides a way to migrate AngularJS applications to Angular.\n     *\n     * @experimental\n     */\n    var UrlHandlingStrategy = /** @class */ (function () {\n        function UrlHandlingStrategy() {\n        }\n        return UrlHandlingStrategy;\n    }());\n    /**\n     * @experimental\n     */\n    var DefaultUrlHandlingStrategy = /** @class */ (function () {\n        function DefaultUrlHandlingStrategy() {\n        }\n        DefaultUrlHandlingStrategy.prototype.shouldProcessUrl = function (url) { return true; };\n        DefaultUrlHandlingStrategy.prototype.extract = function (url) { return url; };\n        DefaultUrlHandlingStrategy.prototype.merge = function (newUrlPart, wholeUrl) { return newUrlPart; };\n        return DefaultUrlHandlingStrategy;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function defaultErrorHandler(error) {\n        throw error;\n    }\n    function defaultMalformedUriErrorHandler(error, urlSerializer, url) {\n        return urlSerializer.parse('/');\n    }\n    /**\n     * @internal\n     */\n    function defaultRouterHook(snapshot) {\n        return rxjs.of(null);\n    }\n    /**\n     * @description\n     *\n     * Provides the navigation and url manipulation capabilities.\n     *\n     * See `Routes` for more details and examples.\n     *\n     * @ngModule RouterModule\n     *\n     *\n     */\n    var Router = /** @class */ (function () {\n        /**\n         * Creates the router service.\n         */\n        // TODO: vsavkin make internal after the final is out.\n        function Router(rootComponentType, urlSerializer, rootContexts, location, injector, loader, compiler, config) {\n            var _this = this;\n            this.rootComponentType = rootComponentType;\n            this.urlSerializer = urlSerializer;\n            this.rootContexts = rootContexts;\n            this.location = location;\n            this.config = config;\n            this.navigations = new rxjs.BehaviorSubject(null);\n            this.navigationId = 0;\n            this.events = new rxjs.Subject();\n            /**\n             * Error handler that is invoked when a navigation errors.\n             *\n             * See `ErrorHandler` for more information.\n             */\n            this.errorHandler = defaultErrorHandler;\n            /**\n             * Malformed uri error handler is invoked when `Router.parseUrl(url)` throws an\n             * error due to containing an invalid character. The most common case would be a `%` sign\n             * that's not encoded and is not part of a percent encoded sequence.\n             */\n            this.malformedUriErrorHandler = defaultMalformedUriErrorHandler;\n            /**\n             * Indicates if at least one navigation happened.\n             */\n            this.navigated = false;\n            this.lastSuccessfulId = -1;\n            /**\n             * Used by RouterModule. This allows us to\n             * pause the navigation either before preactivation or after it.\n             * @internal\n             */\n            this.hooks = {\n                beforePreactivation: defaultRouterHook,\n                afterPreactivation: defaultRouterHook\n            };\n            /**\n             * Extracts and merges URLs. Used for AngularJS to Angular migrations.\n             */\n            this.urlHandlingStrategy = new DefaultUrlHandlingStrategy();\n            this.routeReuseStrategy = new DefaultRouteReuseStrategy();\n            /**\n             * Define what the router should do if it receives a navigation request to the current URL.\n             * By default, the router will ignore this navigation. However, this prevents features such\n             * as a \"refresh\" button. Use this option to configure the behavior when navigating to the\n             * current URL. Default is 'ignore'.\n             */\n            this.onSameUrlNavigation = 'ignore';\n            /**\n             * Defines how the router merges params, data and resolved data from parent to child\n             * routes. Available options are:\n             *\n             * - `'emptyOnly'`, the default, only inherits parent params for path-less or component-less\n             *   routes.\n             * - `'always'`, enables unconditional inheritance of parent params.\n             */\n            this.paramsInheritanceStrategy = 'emptyOnly';\n            var onLoadStart = function (r) { return _this.triggerEvent(new RouteConfigLoadStart(r)); };\n            var onLoadEnd = function (r) { return _this.triggerEvent(new RouteConfigLoadEnd(r)); };\n            this.ngModule = injector.get(core.NgModuleRef);\n            this.resetConfig(config);\n            this.currentUrlTree = createEmptyUrlTree();\n            this.rawUrlTree = this.currentUrlTree;\n            this.configLoader = new RouterConfigLoader(loader, compiler, onLoadStart, onLoadEnd);\n            this.routerState = createEmptyState(this.currentUrlTree, this.rootComponentType);\n            this.processNavigations();\n        }\n        /**\n         * @internal\n         * TODO: this should be removed once the constructor of the router made internal\n         */\n        Router.prototype.resetRootComponentType = function (rootComponentType) {\n            this.rootComponentType = rootComponentType;\n            // TODO: vsavkin router 4.0 should make the root component set to null\n            // this will simplify the lifecycle of the router.\n            this.routerState.root.component = this.rootComponentType;\n        };\n        /**\n         * Sets up the location change listener and performs the initial navigation.\n         */\n        Router.prototype.initialNavigation = function () {\n            this.setUpLocationChangeListener();\n            if (this.navigationId === 0) {\n                this.navigateByUrl(this.location.path(true), { replaceUrl: true });\n            }\n        };\n        /**\n         * Sets up the location change listener.\n         */\n        Router.prototype.setUpLocationChangeListener = function () {\n            var _this = this;\n            // Don't need to use Zone.wrap any more, because zone.js\n            // already patch onPopState, so location change callback will\n            // run into ngZone\n            if (!this.locationSubscription) {\n                this.locationSubscription = this.location.subscribe(function (change) {\n                    var rawUrlTree = _this.parseUrl(change['url']);\n                    var source = change['type'] === 'popstate' ? 'popstate' : 'hashchange';\n                    var state = change.state && change.state.navigationId ?\n                        { navigationId: change.state.navigationId } :\n                        null;\n                    setTimeout(function () { _this.scheduleNavigation(rawUrlTree, source, state, { replaceUrl: true }); }, 0);\n                });\n            }\n        };\n        Object.defineProperty(Router.prototype, \"url\", {\n            /** The current url */\n            get: function () { return this.serializeUrl(this.currentUrlTree); },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        Router.prototype.triggerEvent = function (e) { this.events.next(e); };\n        /**\n         * Resets the configuration used for navigation and generating links.\n         *\n         * ### Usage\n         *\n         * ```\n         * router.resetConfig([\n         *  { path: 'team/:id', component: TeamCmp, children: [\n         *    { path: 'simple', component: SimpleCmp },\n         *    { path: 'user/:name', component: UserCmp }\n         *  ]}\n         * ]);\n         * ```\n         */\n        Router.prototype.resetConfig = function (config) {\n            validateConfig(config);\n            this.config = config.map(standardizeConfig);\n            this.navigated = false;\n            this.lastSuccessfulId = -1;\n        };\n        /** @docsNotRequired */\n        Router.prototype.ngOnDestroy = function () { this.dispose(); };\n        /** Disposes of the router */\n        Router.prototype.dispose = function () {\n            if (this.locationSubscription) {\n                this.locationSubscription.unsubscribe();\n                this.locationSubscription = null;\n            }\n        };\n        /**\n         * Applies an array of commands to the current url tree and creates a new url tree.\n         *\n         * When given an activate route, applies the given commands starting from the route.\n         * When not given a route, applies the given command starting from the root.\n         *\n         * ### Usage\n         *\n         * ```\n         * // create /team/33/user/11\n         * router.createUrlTree(['/team', 33, 'user', 11]);\n         *\n         * // create /team/33;expand=true/user/11\n         * router.createUrlTree(['/team', 33, {expand: true}, 'user', 11]);\n         *\n         * // you can collapse static segments like this (this works only with the first passed-in value):\n         * router.createUrlTree(['/team/33/user', userId]);\n         *\n         * // If the first segment can contain slashes, and you do not want the router to split it, you\n         * // can do the following:\n         *\n         * router.createUrlTree([{segmentPath: '/one/two'}]);\n         *\n         * // create /team/33/(user/11//right:chat)\n         * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: 'chat'}}]);\n         *\n         * // remove the right secondary node\n         * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: null}}]);\n         *\n         * // assuming the current url is `/team/33/user/11` and the route points to `user/11`\n         *\n         * // navigate to /team/33/user/11/details\n         * router.createUrlTree(['details'], {relativeTo: route});\n         *\n         * // navigate to /team/33/user/22\n         * router.createUrlTree(['../22'], {relativeTo: route});\n         *\n         * // navigate to /team/44/user/22\n         * router.createUrlTree(['../../team/44/user/22'], {relativeTo: route});\n         * ```\n         */\n        Router.prototype.createUrlTree = function (commands, navigationExtras) {\n            if (navigationExtras === void 0) { navigationExtras = {}; }\n            var relativeTo = navigationExtras.relativeTo, queryParams = navigationExtras.queryParams, fragment = navigationExtras.fragment, preserveQueryParams = navigationExtras.preserveQueryParams, queryParamsHandling = navigationExtras.queryParamsHandling, preserveFragment = navigationExtras.preserveFragment;\n            if (core.isDevMode() && preserveQueryParams && console && console.warn) {\n                console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n            }\n            var a = relativeTo || this.routerState.root;\n            var f = preserveFragment ? this.currentUrlTree.fragment : fragment;\n            var q = null;\n            if (queryParamsHandling) {\n                switch (queryParamsHandling) {\n                    case 'merge':\n                        q = __assign({}, this.currentUrlTree.queryParams, queryParams);\n                        break;\n                    case 'preserve':\n                        q = this.currentUrlTree.queryParams;\n                        break;\n                    default:\n                        q = queryParams || null;\n                }\n            }\n            else {\n                q = preserveQueryParams ? this.currentUrlTree.queryParams : queryParams || null;\n            }\n            if (q !== null) {\n                q = this.removeEmptyProps(q);\n            }\n            return createUrlTree(a, this.currentUrlTree, commands, q, f);\n        };\n        /**\n         * Navigate based on the provided url. This navigation is always absolute.\n         *\n         * Returns a promise that:\n         * - resolves to 'true' when navigation succeeds,\n         * - resolves to 'false' when navigation fails,\n         * - is rejected when an error happens.\n         *\n         * ### Usage\n         *\n         * ```\n         * router.navigateByUrl(\"/team/33/user/11\");\n         *\n         * // Navigate without updating the URL\n         * router.navigateByUrl(\"/team/33/user/11\", { skipLocationChange: true });\n         * ```\n         *\n         * In opposite to `navigate`, `navigateByUrl` takes a whole URL\n         * and does not apply any delta to the current one.\n         */\n        Router.prototype.navigateByUrl = function (url, extras) {\n            if (extras === void 0) { extras = { skipLocationChange: false }; }\n            var urlTree = url instanceof UrlTree ? url : this.parseUrl(url);\n            var mergedTree = this.urlHandlingStrategy.merge(urlTree, this.rawUrlTree);\n            return this.scheduleNavigation(mergedTree, 'imperative', null, extras);\n        };\n        /**\n         * Navigate based on the provided array of commands and a starting point.\n         * If no starting route is provided, the navigation is absolute.\n         *\n         * Returns a promise that:\n         * - resolves to 'true' when navigation succeeds,\n         * - resolves to 'false' when navigation fails,\n         * - is rejected when an error happens.\n         *\n         * ### Usage\n         *\n         * ```\n         * router.navigate(['team', 33, 'user', 11], {relativeTo: route});\n         *\n         * // Navigate without updating the URL\n         * router.navigate(['team', 33, 'user', 11], {relativeTo: route, skipLocationChange: true});\n         * ```\n         *\n         * In opposite to `navigateByUrl`, `navigate` always takes a delta that is applied to the current\n         * URL.\n         */\n        Router.prototype.navigate = function (commands, extras) {\n            if (extras === void 0) { extras = { skipLocationChange: false }; }\n            validateCommands(commands);\n            return this.navigateByUrl(this.createUrlTree(commands, extras), extras);\n        };\n        /** Serializes a `UrlTree` into a string */\n        Router.prototype.serializeUrl = function (url) { return this.urlSerializer.serialize(url); };\n        /** Parses a string into a `UrlTree` */\n        Router.prototype.parseUrl = function (url) {\n            var urlTree;\n            try {\n                urlTree = this.urlSerializer.parse(url);\n            }\n            catch (e) {\n                urlTree = this.malformedUriErrorHandler(e, this.urlSerializer, url);\n            }\n            return urlTree;\n        };\n        /** Returns whether the url is activated */\n        Router.prototype.isActive = function (url, exact) {\n            if (url instanceof UrlTree) {\n                return containsTree(this.currentUrlTree, url, exact);\n            }\n            var urlTree = this.parseUrl(url);\n            return containsTree(this.currentUrlTree, urlTree, exact);\n        };\n        Router.prototype.removeEmptyProps = function (params) {\n            return Object.keys(params).reduce(function (result, key) {\n                var value = params[key];\n                if (value !== null && value !== undefined) {\n                    result[key] = value;\n                }\n                return result;\n            }, {});\n        };\n        Router.prototype.processNavigations = function () {\n            var _this = this;\n            this.navigations\n                .pipe(operators.concatMap(function (nav) {\n                if (nav) {\n                    _this.executeScheduledNavigation(nav);\n                    // a failed navigation should not stop the router from processing\n                    // further navigations => the catch\n                    return nav.promise.catch(function () { });\n                }\n                else {\n                    return rxjs.of(null);\n                }\n            }))\n                .subscribe(function () { });\n        };\n        Router.prototype.scheduleNavigation = function (rawUrl, source, state, extras) {\n            var lastNavigation = this.navigations.value;\n            // If the user triggers a navigation imperatively (e.g., by using navigateByUrl),\n            // and that navigation results in 'replaceState' that leads to the same URL,\n            // we should skip those.\n            if (lastNavigation && source !== 'imperative' && lastNavigation.source === 'imperative' &&\n                lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n                return Promise.resolve(true); // return value is not used\n            }\n            // Because of a bug in IE and Edge, the location class fires two events (popstate and\n            // hashchange) every single time. The second one should be ignored. Otherwise, the URL will\n            // flicker. Handles the case when a popstate was emitted first.\n            if (lastNavigation && source == 'hashchange' && lastNavigation.source === 'popstate' &&\n                lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n                return Promise.resolve(true); // return value is not used\n            }\n            // Because of a bug in IE and Edge, the location class fires two events (popstate and\n            // hashchange) every single time. The second one should be ignored. Otherwise, the URL will\n            // flicker. Handles the case when a hashchange was emitted first.\n            if (lastNavigation && source == 'popstate' && lastNavigation.source === 'hashchange' &&\n                lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n                return Promise.resolve(true); // return value is not used\n            }\n            var resolve = null;\n            var reject = null;\n            var promise = new Promise(function (res, rej) {\n                resolve = res;\n                reject = rej;\n            });\n            var id = ++this.navigationId;\n            this.navigations.next({ id: id, source: source, state: state, rawUrl: rawUrl, extras: extras, resolve: resolve, reject: reject, promise: promise });\n            // Make sure that the error is propagated even though `processNavigations` catch\n            // handler does not rethrow\n            return promise.catch(function (e) { return Promise.reject(e); });\n        };\n        Router.prototype.executeScheduledNavigation = function (_a) {\n            var _this = this;\n            var id = _a.id, rawUrl = _a.rawUrl, extras = _a.extras, resolve = _a.resolve, reject = _a.reject, source = _a.source, state = _a.state;\n            var url = this.urlHandlingStrategy.extract(rawUrl);\n            var urlTransition = !this.navigated || url.toString() !== this.currentUrlTree.toString();\n            if ((this.onSameUrlNavigation === 'reload' ? true : urlTransition) &&\n                this.urlHandlingStrategy.shouldProcessUrl(rawUrl)) {\n                this.events\n                    .next(new NavigationStart(id, this.serializeUrl(url), source, state));\n                Promise.resolve()\n                    .then(function (_) { return _this.runNavigate(url, rawUrl, !!extras.skipLocationChange, !!extras.replaceUrl, id, null); })\n                    .then(resolve, reject);\n                // we cannot process the current URL, but we could process the previous one =>\n                // we need to do some cleanup\n            }\n            else if (urlTransition && this.rawUrlTree &&\n                this.urlHandlingStrategy.shouldProcessUrl(this.rawUrlTree)) {\n                this.events\n                    .next(new NavigationStart(id, this.serializeUrl(url), source, state));\n                Promise.resolve()\n                    .then(function (_) { return _this.runNavigate(url, rawUrl, false, false, id, createEmptyState(url, _this.rootComponentType).snapshot); })\n                    .then(resolve, reject);\n            }\n            else {\n                this.rawUrlTree = rawUrl;\n                resolve(null);\n            }\n        };\n        Router.prototype.runNavigate = function (url, rawUrl, skipLocationChange, replaceUrl, id, precreatedState) {\n            var _this = this;\n            if (id !== this.navigationId) {\n                this.events\n                    .next(new NavigationCancel(id, this.serializeUrl(url), \"Navigation ID \" + id + \" is not equal to the current navigation id \" + this.navigationId));\n                return Promise.resolve(false);\n            }\n            return new Promise(function (resolvePromise, rejectPromise) {\n                // create an observable of the url and route state snapshot\n                // this operation do not result in any side effects\n                var urlAndSnapshot$;\n                if (!precreatedState) {\n                    var moduleInjector = _this.ngModule.injector;\n                    var redirectsApplied$ = applyRedirects(moduleInjector, _this.configLoader, _this.urlSerializer, url, _this.config);\n                    urlAndSnapshot$ = redirectsApplied$.pipe(operators.mergeMap(function (appliedUrl) {\n                        return recognize(_this.rootComponentType, _this.config, appliedUrl, _this.serializeUrl(appliedUrl), _this.paramsInheritanceStrategy)\n                            .pipe(operators.map(function (snapshot) {\n                            _this.events\n                                .next(new RoutesRecognized(id, _this.serializeUrl(url), _this.serializeUrl(appliedUrl), snapshot));\n                            return { appliedUrl: appliedUrl, snapshot: snapshot };\n                        }));\n                    }));\n                }\n                else {\n                    urlAndSnapshot$ = rxjs.of({ appliedUrl: url, snapshot: precreatedState });\n                }\n                var beforePreactivationDone$ = urlAndSnapshot$.pipe(operators.mergeMap(function (p) {\n                    if (typeof p === 'boolean')\n                        return rxjs.of(p);\n                    return _this.hooks.beforePreactivation(p.snapshot).pipe(operators.map(function () { return p; }));\n                }));\n                // run preactivation: guards and data resolvers\n                var preActivation;\n                var preactivationSetup$ = beforePreactivationDone$.pipe(operators.map(function (p) {\n                    if (typeof p === 'boolean')\n                        return p;\n                    var appliedUrl = p.appliedUrl, snapshot = p.snapshot;\n                    var moduleInjector = _this.ngModule.injector;\n                    preActivation = new PreActivation(snapshot, _this.routerState.snapshot, moduleInjector, function (evt) { return _this.triggerEvent(evt); });\n                    preActivation.initialize(_this.rootContexts);\n                    return { appliedUrl: appliedUrl, snapshot: snapshot };\n                }));\n                var preactivationCheckGuards$ = preactivationSetup$.pipe(operators.mergeMap(function (p) {\n                    if (typeof p === 'boolean' || _this.navigationId !== id)\n                        return rxjs.of(false);\n                    var appliedUrl = p.appliedUrl, snapshot = p.snapshot;\n                    _this.triggerEvent(new GuardsCheckStart(id, _this.serializeUrl(url), _this.serializeUrl(appliedUrl), snapshot));\n                    return preActivation.checkGuards().pipe(operators.map(function (shouldActivate) {\n                        _this.triggerEvent(new GuardsCheckEnd(id, _this.serializeUrl(url), _this.serializeUrl(appliedUrl), snapshot, shouldActivate));\n                        return { appliedUrl: appliedUrl, snapshot: snapshot, shouldActivate: shouldActivate };\n                    }));\n                }));\n                var preactivationResolveData$ = preactivationCheckGuards$.pipe(operators.mergeMap(function (p) {\n                    if (typeof p === 'boolean' || _this.navigationId !== id)\n                        return rxjs.of(false);\n                    if (p.shouldActivate && preActivation.isActivating()) {\n                        _this.triggerEvent(new ResolveStart(id, _this.serializeUrl(url), _this.serializeUrl(p.appliedUrl), p.snapshot));\n                        return preActivation.resolveData(_this.paramsInheritanceStrategy).pipe(operators.map(function () {\n                            _this.triggerEvent(new ResolveEnd(id, _this.serializeUrl(url), _this.serializeUrl(p.appliedUrl), p.snapshot));\n                            return p;\n                        }));\n                    }\n                    else {\n                        return rxjs.of(p);\n                    }\n                }));\n                var preactivationDone$ = preactivationResolveData$.pipe(operators.mergeMap(function (p) {\n                    if (typeof p === 'boolean' || _this.navigationId !== id)\n                        return rxjs.of(false);\n                    return _this.hooks.afterPreactivation(p.snapshot).pipe(operators.map(function () { return p; }));\n                }));\n                // create router state\n                // this operation has side effects => route state is being affected\n                var routerState$ = preactivationDone$.pipe(operators.map(function (p) {\n                    if (typeof p === 'boolean' || _this.navigationId !== id)\n                        return false;\n                    var appliedUrl = p.appliedUrl, snapshot = p.snapshot, shouldActivate = p.shouldActivate;\n                    if (shouldActivate) {\n                        var state = createRouterState(_this.routeReuseStrategy, snapshot, _this.routerState);\n                        return { appliedUrl: appliedUrl, state: state, shouldActivate: shouldActivate };\n                    }\n                    else {\n                        return { appliedUrl: appliedUrl, state: null, shouldActivate: shouldActivate };\n                    }\n                }));\n                _this.activateRoutes(routerState$, _this.routerState, _this.currentUrlTree, id, url, rawUrl, skipLocationChange, replaceUrl, resolvePromise, rejectPromise);\n            });\n        };\n        /**\n         * Performs the logic of activating routes. This is a synchronous process by default. While this\n         * is a private method, it could be overridden to make activation asynchronous.\n         */\n        Router.prototype.activateRoutes = function (state, storedState, storedUrl, id, url, rawUrl, skipLocationChange, replaceUrl, resolvePromise, rejectPromise) {\n            var _this = this;\n            // applied the new router state\n            // this operation has side effects\n            var navigationIsSuccessful;\n            state\n                .forEach(function (p) {\n                if (typeof p === 'boolean' || !p.shouldActivate || id !== _this.navigationId || !p.state) {\n                    navigationIsSuccessful = false;\n                    return;\n                }\n                var appliedUrl = p.appliedUrl, state = p.state;\n                _this.currentUrlTree = appliedUrl;\n                _this.rawUrlTree = _this.urlHandlingStrategy.merge(_this.currentUrlTree, rawUrl);\n                _this.routerState = state;\n                if (!skipLocationChange) {\n                    var path = _this.urlSerializer.serialize(_this.rawUrlTree);\n                    if (_this.location.isCurrentPathEqualTo(path) || replaceUrl) {\n                        _this.location.replaceState(path, '', { navigationId: id });\n                    }\n                    else {\n                        _this.location.go(path, '', { navigationId: id });\n                    }\n                }\n                new ActivateRoutes(_this.routeReuseStrategy, state, storedState, function (evt) { return _this.triggerEvent(evt); })\n                    .activate(_this.rootContexts);\n                navigationIsSuccessful = true;\n            })\n                .then(function () {\n                if (navigationIsSuccessful) {\n                    _this.navigated = true;\n                    _this.lastSuccessfulId = id;\n                    _this.events\n                        .next(new NavigationEnd(id, _this.serializeUrl(url), _this.serializeUrl(_this.currentUrlTree)));\n                    resolvePromise(true);\n                }\n                else {\n                    _this.resetUrlToCurrentUrlTree();\n                    _this.events\n                        .next(new NavigationCancel(id, _this.serializeUrl(url), ''));\n                    resolvePromise(false);\n                }\n            }, function (e) {\n                if (isNavigationCancelingError(e)) {\n                    _this.navigated = true;\n                    _this.resetStateAndUrl(storedState, storedUrl, rawUrl);\n                    _this.events\n                        .next(new NavigationCancel(id, _this.serializeUrl(url), e.message));\n                    resolvePromise(false);\n                }\n                else {\n                    _this.resetStateAndUrl(storedState, storedUrl, rawUrl);\n                    _this.events\n                        .next(new NavigationError(id, _this.serializeUrl(url), e));\n                    try {\n                        resolvePromise(_this.errorHandler(e));\n                    }\n                    catch (ee) {\n                        rejectPromise(ee);\n                    }\n                }\n            });\n        };\n        Router.prototype.resetStateAndUrl = function (storedState, storedUrl, rawUrl) {\n            this.routerState = storedState;\n            this.currentUrlTree = storedUrl;\n            this.rawUrlTree = this.urlHandlingStrategy.merge(this.currentUrlTree, rawUrl);\n            this.resetUrlToCurrentUrlTree();\n        };\n        Router.prototype.resetUrlToCurrentUrlTree = function () {\n            this.location.replaceState(this.urlSerializer.serialize(this.rawUrlTree), '', { navigationId: this.lastSuccessfulId });\n        };\n        return Router;\n    }());\n    var ActivateRoutes = /** @class */ (function () {\n        function ActivateRoutes(routeReuseStrategy, futureState, currState, forwardEvent) {\n            this.routeReuseStrategy = routeReuseStrategy;\n            this.futureState = futureState;\n            this.currState = currState;\n            this.forwardEvent = forwardEvent;\n        }\n        ActivateRoutes.prototype.activate = function (parentContexts) {\n            var futureRoot = this.futureState._root;\n            var currRoot = this.currState ? this.currState._root : null;\n            this.deactivateChildRoutes(futureRoot, currRoot, parentContexts);\n            advanceActivatedRoute(this.futureState.root);\n            this.activateChildRoutes(futureRoot, currRoot, parentContexts);\n        };\n        // De-activate the child route that are not re-used for the future state\n        ActivateRoutes.prototype.deactivateChildRoutes = function (futureNode, currNode, contexts) {\n            var _this = this;\n            var children = nodeChildrenAsMap(currNode);\n            // Recurse on the routes active in the future state to de-activate deeper children\n            futureNode.children.forEach(function (futureChild) {\n                var childOutletName = futureChild.value.outlet;\n                _this.deactivateRoutes(futureChild, children[childOutletName], contexts);\n                delete children[childOutletName];\n            });\n            // De-activate the routes that will not be re-used\n            forEach(children, function (v, childName) {\n                _this.deactivateRouteAndItsChildren(v, contexts);\n            });\n        };\n        ActivateRoutes.prototype.deactivateRoutes = function (futureNode, currNode, parentContext) {\n            var future = futureNode.value;\n            var curr = currNode ? currNode.value : null;\n            if (future === curr) {\n                // Reusing the node, check to see if the children need to be de-activated\n                if (future.component) {\n                    // If we have a normal route, we need to go through an outlet.\n                    var context = parentContext.getContext(future.outlet);\n                    if (context) {\n                        this.deactivateChildRoutes(futureNode, currNode, context.children);\n                    }\n                }\n                else {\n                    // if we have a componentless route, we recurse but keep the same outlet map.\n                    this.deactivateChildRoutes(futureNode, currNode, parentContext);\n                }\n            }\n            else {\n                if (curr) {\n                    // Deactivate the current route which will not be re-used\n                    this.deactivateRouteAndItsChildren(currNode, parentContext);\n                }\n            }\n        };\n        ActivateRoutes.prototype.deactivateRouteAndItsChildren = function (route, parentContexts) {\n            if (this.routeReuseStrategy.shouldDetach(route.value.snapshot)) {\n                this.detachAndStoreRouteSubtree(route, parentContexts);\n            }\n            else {\n                this.deactivateRouteAndOutlet(route, parentContexts);\n            }\n        };\n        ActivateRoutes.prototype.detachAndStoreRouteSubtree = function (route, parentContexts) {\n            var context = parentContexts.getContext(route.value.outlet);\n            if (context && context.outlet) {\n                var componentRef = context.outlet.detach();\n                var contexts = context.children.onOutletDeactivated();\n                this.routeReuseStrategy.store(route.value.snapshot, { componentRef: componentRef, route: route, contexts: contexts });\n            }\n        };\n        ActivateRoutes.prototype.deactivateRouteAndOutlet = function (route, parentContexts) {\n            var _this = this;\n            var context = parentContexts.getContext(route.value.outlet);\n            if (context) {\n                var children = nodeChildrenAsMap(route);\n                var contexts_1 = route.value.component ? context.children : parentContexts;\n                forEach(children, function (v, k) { return _this.deactivateRouteAndItsChildren(v, contexts_1); });\n                if (context.outlet) {\n                    // Destroy the component\n                    context.outlet.deactivate();\n                    // Destroy the contexts for all the outlets that were in the component\n                    context.children.onOutletDeactivated();\n                }\n            }\n        };\n        ActivateRoutes.prototype.activateChildRoutes = function (futureNode, currNode, contexts) {\n            var _this = this;\n            var children = nodeChildrenAsMap(currNode);\n            futureNode.children.forEach(function (c) {\n                _this.activateRoutes(c, children[c.value.outlet], contexts);\n                _this.forwardEvent(new ActivationEnd(c.value.snapshot));\n            });\n            if (futureNode.children.length) {\n                this.forwardEvent(new ChildActivationEnd(futureNode.value.snapshot));\n            }\n        };\n        ActivateRoutes.prototype.activateRoutes = function (futureNode, currNode, parentContexts) {\n            var future = futureNode.value;\n            var curr = currNode ? currNode.value : null;\n            advanceActivatedRoute(future);\n            // reusing the node\n            if (future === curr) {\n                if (future.component) {\n                    // If we have a normal route, we need to go through an outlet.\n                    var context = parentContexts.getOrCreateContext(future.outlet);\n                    this.activateChildRoutes(futureNode, currNode, context.children);\n                }\n                else {\n                    // if we have a componentless route, we recurse but keep the same outlet map.\n                    this.activateChildRoutes(futureNode, currNode, parentContexts);\n                }\n            }\n            else {\n                if (future.component) {\n                    // if we have a normal route, we need to place the component into the outlet and recurse.\n                    var context = parentContexts.getOrCreateContext(future.outlet);\n                    if (this.routeReuseStrategy.shouldAttach(future.snapshot)) {\n                        var stored = this.routeReuseStrategy.retrieve(future.snapshot);\n                        this.routeReuseStrategy.store(future.snapshot, null);\n                        context.children.onOutletReAttached(stored.contexts);\n                        context.attachRef = stored.componentRef;\n                        context.route = stored.route.value;\n                        if (context.outlet) {\n                            // Attach right away when the outlet has already been instantiated\n                            // Otherwise attach from `RouterOutlet.ngOnInit` when it is instantiated\n                            context.outlet.attach(stored.componentRef, stored.route.value);\n                        }\n                        advanceActivatedRouteNodeAndItsChildren(stored.route);\n                    }\n                    else {\n                        var config = parentLoadedConfig(future.snapshot);\n                        var cmpFactoryResolver = config ? config.module.componentFactoryResolver : null;\n                        context.route = future;\n                        context.resolver = cmpFactoryResolver;\n                        if (context.outlet) {\n                            // Activate the outlet when it has already been instantiated\n                            // Otherwise it will get activated from its `ngOnInit` when instantiated\n                            context.outlet.activateWith(future, cmpFactoryResolver);\n                        }\n                        this.activateChildRoutes(futureNode, null, context.children);\n                    }\n                }\n                else {\n                    // if we have a componentless route, we recurse but keep the same outlet map.\n                    this.activateChildRoutes(futureNode, null, parentContexts);\n                }\n            }\n        };\n        return ActivateRoutes;\n    }());\n    function advanceActivatedRouteNodeAndItsChildren(node) {\n        advanceActivatedRoute(node.value);\n        node.children.forEach(advanceActivatedRouteNodeAndItsChildren);\n    }\n    function parentLoadedConfig(snapshot) {\n        for (var s = snapshot.parent; s; s = s.parent) {\n            var route = s.routeConfig;\n            if (route && route._loadedConfig)\n                return route._loadedConfig;\n            if (route && route.component)\n                return null;\n        }\n        return null;\n    }\n    function validateCommands(commands) {\n        for (var i = 0; i < commands.length; i++) {\n            var cmd = commands[i];\n            if (cmd == null) {\n                throw new Error(\"The requested path contains \" + cmd + \" segment at index \" + i);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Lets you link to specific routes in your app.\n     *\n     * Consider the following route configuration:\n     * `[{ path: 'user/:name', component: UserCmp }]`.\n     * When linking to this `user/:name` route, you use the `RouterLink` directive.\n     *\n     * If the link is static, you can use the directive as follows:\n     * `<a routerLink=\"/user/bob\">link to user component</a>`\n     *\n     * If you use dynamic values to generate the link, you can pass an array of path\n     * segments, followed by the params for each segment.\n     *\n     * For instance `['/team', teamId, 'user', userName, {details: true}]`\n     * means that we want to generate a link to `/team/11/user/bob;details=true`.\n     *\n     * Multiple static segments can be merged into one\n     * (e.g., `['/team/11/user', userName, {details: true}]`).\n     *\n     * The first segment name can be prepended with `/`, `./`, or `../`:\n     * * If the first segment begins with `/`, the router will look up the route from the root of the\n     *   app.\n     * * If the first segment begins with `./`, or doesn't begin with a slash, the router will\n     *   instead look in the children of the current activated route.\n     * * And if the first segment begins with `../`, the router will go up one level.\n     *\n     * You can set query params and fragment as follows:\n     *\n     * ```\n     * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" fragment=\"education\">\n     *   link to user component\n     * </a>\n     * ```\n     * RouterLink will use these to generate this link: `/user/bob#education?debug=true`.\n     *\n     * (Deprecated in v4.0.0 use `queryParamsHandling` instead) You can also tell the\n     * directive to preserve the current query params and fragment:\n     *\n     * ```\n     * <a [routerLink]=\"['/user/bob']\" preserveQueryParams preserveFragment>\n     *   link to user component\n     * </a>\n     * ```\n     *\n     * You can tell the directive to how to handle queryParams, available options are:\n     *  - `'merge'`: merge the queryParams into the current queryParams\n     *  - `'preserve'`: preserve the current queryParams\n     *  - default/`''`: use the queryParams only\n     *\n     * Same options for {@link NavigationExtras#queryParamsHandling\n     * NavigationExtras#queryParamsHandling}.\n     *\n     * ```\n     * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" queryParamsHandling=\"merge\">\n     *   link to user component\n     * </a>\n     * ```\n     *\n     * The router link directive always treats the provided input as a delta to the current url.\n     *\n     * For instance, if the current url is `/user/(box//aux:team)`.\n     *\n     * Then the following link `<a [routerLink]=\"['/user/jim']\">Jim</a>` will generate the link\n     * `/user/(jim//aux:team)`.\n     *\n     * See {@link Router#createUrlTree createUrlTree} for more information.\n     *\n     * @ngModule RouterModule\n     *\n     *\n     */\n    var RouterLink = /** @class */ (function () {\n        function RouterLink(router, route, tabIndex, renderer, el) {\n            this.router = router;\n            this.route = route;\n            this.commands = [];\n            if (tabIndex == null) {\n                renderer.setAttribute(el.nativeElement, 'tabindex', '0');\n            }\n        }\n        Object.defineProperty(RouterLink.prototype, \"routerLink\", {\n            set: function (commands) {\n                if (commands != null) {\n                    this.commands = Array.isArray(commands) ? commands : [commands];\n                }\n                else {\n                    this.commands = [];\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(RouterLink.prototype, \"preserveQueryParams\", {\n            /**\n             * @deprecated 4.0.0 use `queryParamsHandling` instead.\n             */\n            set: function (value) {\n                if (core.isDevMode() && console && console.warn) {\n                    console.warn('preserveQueryParams is deprecated!, use queryParamsHandling instead.');\n                }\n                this.preserve = value;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        RouterLink.prototype.onClick = function () {\n            var extras = {\n                skipLocationChange: attrBoolValue(this.skipLocationChange),\n                replaceUrl: attrBoolValue(this.replaceUrl),\n            };\n            this.router.navigateByUrl(this.urlTree, extras);\n            return true;\n        };\n        Object.defineProperty(RouterLink.prototype, \"urlTree\", {\n            get: function () {\n                return this.router.createUrlTree(this.commands, {\n                    relativeTo: this.route,\n                    queryParams: this.queryParams,\n                    fragment: this.fragment,\n                    preserveQueryParams: attrBoolValue(this.preserve),\n                    queryParamsHandling: this.queryParamsHandling,\n                    preserveFragment: attrBoolValue(this.preserveFragment),\n                });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        RouterLink.decorators = [\n            { type: core.Directive, args: [{ selector: ':not(a)[routerLink]' },] }\n        ];\n        /** @nocollapse */\n        RouterLink.ctorParameters = function () { return [\n            { type: Router },\n            { type: ActivatedRoute },\n            { type: String, decorators: [{ type: core.Attribute, args: ['tabindex',] }] },\n            { type: core.Renderer2 },\n            { type: core.ElementRef }\n        ]; };\n        RouterLink.propDecorators = {\n            queryParams: [{ type: core.Input }],\n            fragment: [{ type: core.Input }],\n            queryParamsHandling: [{ type: core.Input }],\n            preserveFragment: [{ type: core.Input }],\n            skipLocationChange: [{ type: core.Input }],\n            replaceUrl: [{ type: core.Input }],\n            routerLink: [{ type: core.Input }],\n            preserveQueryParams: [{ type: core.Input }],\n            onClick: [{ type: core.HostListener, args: ['click',] }]\n        };\n        return RouterLink;\n    }());\n    /**\n     * @description\n     *\n     * Lets you link to specific routes in your app.\n     *\n     * See `RouterLink` for more information.\n     *\n     * @ngModule RouterModule\n     *\n     *\n     */\n    var RouterLinkWithHref = /** @class */ (function () {\n        function RouterLinkWithHref(router, route, locationStrategy) {\n            var _this = this;\n            this.router = router;\n            this.route = route;\n            this.locationStrategy = locationStrategy;\n            this.commands = [];\n            this.subscription = router.events.subscribe(function (s) {\n                if (s instanceof NavigationEnd) {\n                    _this.updateTargetUrlAndHref();\n                }\n            });\n        }\n        Object.defineProperty(RouterLinkWithHref.prototype, \"routerLink\", {\n            set: function (commands) {\n                if (commands != null) {\n                    this.commands = Array.isArray(commands) ? commands : [commands];\n                }\n                else {\n                    this.commands = [];\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(RouterLinkWithHref.prototype, \"preserveQueryParams\", {\n            set: function (value) {\n                if (core.isDevMode() && console && console.warn) {\n                    console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n                }\n                this.preserve = value;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        RouterLinkWithHref.prototype.ngOnChanges = function (changes) { this.updateTargetUrlAndHref(); };\n        RouterLinkWithHref.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n        RouterLinkWithHref.prototype.onClick = function (button, ctrlKey, metaKey, shiftKey) {\n            if (button !== 0 || ctrlKey || metaKey || shiftKey) {\n                return true;\n            }\n            if (typeof this.target === 'string' && this.target != '_self') {\n                return true;\n            }\n            var extras = {\n                skipLocationChange: attrBoolValue(this.skipLocationChange),\n                replaceUrl: attrBoolValue(this.replaceUrl),\n            };\n            this.router.navigateByUrl(this.urlTree, extras);\n            return false;\n        };\n        RouterLinkWithHref.prototype.updateTargetUrlAndHref = function () {\n            this.href = this.locationStrategy.prepareExternalUrl(this.router.serializeUrl(this.urlTree));\n        };\n        Object.defineProperty(RouterLinkWithHref.prototype, \"urlTree\", {\n            get: function () {\n                return this.router.createUrlTree(this.commands, {\n                    relativeTo: this.route,\n                    queryParams: this.queryParams,\n                    fragment: this.fragment,\n                    preserveQueryParams: attrBoolValue(this.preserve),\n                    queryParamsHandling: this.queryParamsHandling,\n                    preserveFragment: attrBoolValue(this.preserveFragment),\n                });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        RouterLinkWithHref.decorators = [\n            { type: core.Directive, args: [{ selector: 'a[routerLink]' },] }\n        ];\n        /** @nocollapse */\n        RouterLinkWithHref.ctorParameters = function () { return [\n            { type: Router },\n            { type: ActivatedRoute },\n            { type: common.LocationStrategy }\n        ]; };\n        RouterLinkWithHref.propDecorators = {\n            target: [{ type: core.HostBinding, args: ['attr.target',] }, { type: core.Input }],\n            queryParams: [{ type: core.Input }],\n            fragment: [{ type: core.Input }],\n            queryParamsHandling: [{ type: core.Input }],\n            preserveFragment: [{ type: core.Input }],\n            skipLocationChange: [{ type: core.Input }],\n            replaceUrl: [{ type: core.Input }],\n            href: [{ type: core.HostBinding }],\n            routerLink: [{ type: core.Input }],\n            preserveQueryParams: [{ type: core.Input }],\n            onClick: [{ type: core.HostListener, args: ['click', ['$event.button', '$event.ctrlKey', '$event.metaKey', '$event.shiftKey'],] }]\n        };\n        return RouterLinkWithHref;\n    }());\n    function attrBoolValue(s) {\n        return s === '' || !!s;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * @description\n     *\n     * Lets you add a CSS class to an element when the link's route becomes active.\n     *\n     * This directive lets you add a CSS class to an element when the link's route\n     * becomes active.\n     *\n     * Consider the following example:\n     *\n     * ```\n     * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\">Bob</a>\n     * ```\n     *\n     * When the url is either '/user' or '/user/bob', the active-link class will\n     * be added to the `a` tag. If the url changes, the class will be removed.\n     *\n     * You can set more than one class, as follows:\n     *\n     * ```\n     * <a routerLink=\"/user/bob\" routerLinkActive=\"class1 class2\">Bob</a>\n     * <a routerLink=\"/user/bob\" [routerLinkActive]=\"['class1', 'class2']\">Bob</a>\n     * ```\n     *\n     * You can configure RouterLinkActive by passing `exact: true`. This will add the classes\n     * only when the url matches the link exactly.\n     *\n     * ```\n     * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact:\n     * true}\">Bob</a>\n     * ```\n     *\n     * You can assign the RouterLinkActive instance to a template variable and directly check\n     * the `isActive` status.\n     * ```\n     * <a routerLink=\"/user/bob\" routerLinkActive #rla=\"routerLinkActive\">\n     *   Bob {{ rla.isActive ? '(already open)' : ''}}\n     * </a>\n     * ```\n     *\n     * Finally, you can apply the RouterLinkActive directive to an ancestor of a RouterLink.\n     *\n     * ```\n     * <div routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact: true}\">\n     *   <a routerLink=\"/user/jim\">Jim</a>\n     *   <a routerLink=\"/user/bob\">Bob</a>\n     * </div>\n     * ```\n     *\n     * This will set the active-link class on the div tag if the url is either '/user/jim' or\n     * '/user/bob'.\n     *\n     * @ngModule RouterModule\n     *\n     *\n     */\n    var RouterLinkActive = /** @class */ (function () {\n        function RouterLinkActive(router, element, renderer, cdr) {\n            var _this = this;\n            this.router = router;\n            this.element = element;\n            this.renderer = renderer;\n            this.cdr = cdr;\n            this.classes = [];\n            this.isActive = false;\n            this.routerLinkActiveOptions = { exact: false };\n            this.subscription = router.events.subscribe(function (s) {\n                if (s instanceof NavigationEnd) {\n                    _this.update();\n                }\n            });\n        }\n        RouterLinkActive.prototype.ngAfterContentInit = function () {\n            var _this = this;\n            this.links.changes.subscribe(function (_) { return _this.update(); });\n            this.linksWithHrefs.changes.subscribe(function (_) { return _this.update(); });\n            this.update();\n        };\n        Object.defineProperty(RouterLinkActive.prototype, \"routerLinkActive\", {\n            set: function (data) {\n                var classes = Array.isArray(data) ? data : data.split(' ');\n                this.classes = classes.filter(function (c) { return !!c; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        RouterLinkActive.prototype.ngOnChanges = function (changes) { this.update(); };\n        RouterLinkActive.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n        RouterLinkActive.prototype.update = function () {\n            var _this = this;\n            if (!this.links || !this.linksWithHrefs || !this.router.navigated)\n                return;\n            Promise.resolve().then(function () {\n                var hasActiveLinks = _this.hasActiveLinks();\n                if (_this.isActive !== hasActiveLinks) {\n                    _this.isActive = hasActiveLinks;\n                    _this.classes.forEach(function (c) {\n                        if (hasActiveLinks) {\n                            _this.renderer.addClass(_this.element.nativeElement, c);\n                        }\n                        else {\n                            _this.renderer.removeClass(_this.element.nativeElement, c);\n                        }\n                    });\n                }\n            });\n        };\n        RouterLinkActive.prototype.isLinkActive = function (router) {\n            var _this = this;\n            return function (link) {\n                return router.isActive(link.urlTree, _this.routerLinkActiveOptions.exact);\n            };\n        };\n        RouterLinkActive.prototype.hasActiveLinks = function () {\n            return this.links.some(this.isLinkActive(this.router)) ||\n                this.linksWithHrefs.some(this.isLinkActive(this.router));\n        };\n        RouterLinkActive.decorators = [\n            { type: core.Directive, args: [{\n                        selector: '[routerLinkActive]',\n                        exportAs: 'routerLinkActive',\n                    },] }\n        ];\n        /** @nocollapse */\n        RouterLinkActive.ctorParameters = function () { return [\n            { type: Router },\n            { type: core.ElementRef },\n            { type: core.Renderer2 },\n            { type: core.ChangeDetectorRef }\n        ]; };\n        RouterLinkActive.propDecorators = {\n            links: [{ type: core.ContentChildren, args: [RouterLink, { descendants: true },] }],\n            linksWithHrefs: [{ type: core.ContentChildren, args: [RouterLinkWithHref, { descendants: true },] }],\n            routerLinkActiveOptions: [{ type: core.Input }],\n            routerLinkActive: [{ type: core.Input }]\n        };\n        return RouterLinkActive;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Store contextual information about a `RouterOutlet`\n     *\n     *\n     */\n    var OutletContext = /** @class */ (function () {\n        function OutletContext() {\n            this.outlet = null;\n            this.route = null;\n            this.resolver = null;\n            this.children = new ChildrenOutletContexts();\n            this.attachRef = null;\n        }\n        return OutletContext;\n    }());\n    /**\n     * Store contextual information about the children (= nested) `RouterOutlet`\n     *\n     *\n     */\n    var ChildrenOutletContexts = /** @class */ (function () {\n        function ChildrenOutletContexts() {\n            // contexts for child outlets, by name.\n            this.contexts = new Map();\n        }\n        /** Called when a `RouterOutlet` directive is instantiated */\n        ChildrenOutletContexts.prototype.onChildOutletCreated = function (childName, outlet) {\n            var context = this.getOrCreateContext(childName);\n            context.outlet = outlet;\n            this.contexts.set(childName, context);\n        };\n        /**\n         * Called when a `RouterOutlet` directive is destroyed.\n         * We need to keep the context as the outlet could be destroyed inside a NgIf and might be\n         * re-created later.\n         */\n        ChildrenOutletContexts.prototype.onChildOutletDestroyed = function (childName) {\n            var context = this.getContext(childName);\n            if (context) {\n                context.outlet = null;\n            }\n        };\n        /**\n         * Called when the corresponding route is deactivated during navigation.\n         * Because the component get destroyed, all children outlet are destroyed.\n         */\n        ChildrenOutletContexts.prototype.onOutletDeactivated = function () {\n            var contexts = this.contexts;\n            this.contexts = new Map();\n            return contexts;\n        };\n        ChildrenOutletContexts.prototype.onOutletReAttached = function (contexts) { this.contexts = contexts; };\n        ChildrenOutletContexts.prototype.getOrCreateContext = function (childName) {\n            var context = this.getContext(childName);\n            if (!context) {\n                context = new OutletContext();\n                this.contexts.set(childName, context);\n            }\n            return context;\n        };\n        ChildrenOutletContexts.prototype.getContext = function (childName) { return this.contexts.get(childName) || null; };\n        return ChildrenOutletContexts;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Acts as a placeholder that Angular dynamically fills based on the current router state.\n     *\n     * ```\n     * <router-outlet></router-outlet>\n     * <router-outlet name='left'></router-outlet>\n     * <router-outlet name='right'></router-outlet>\n     * ```\n     *\n     * A router outlet will emit an activate event any time a new component is being instantiated,\n     * and a deactivate event when it is being destroyed.\n     *\n     * ```\n     * <router-outlet\n     *   (activate)='onActivate($event)'\n     *   (deactivate)='onDeactivate($event)'></router-outlet>\n     * ```\n     * @ngModule RouterModule\n     *\n     *\n     */\n    var RouterOutlet = /** @class */ (function () {\n        function RouterOutlet(parentContexts, location, resolver, name, changeDetector) {\n            this.parentContexts = parentContexts;\n            this.location = location;\n            this.resolver = resolver;\n            this.changeDetector = changeDetector;\n            this.activated = null;\n            this._activatedRoute = null;\n            this.activateEvents = new core.EventEmitter();\n            this.deactivateEvents = new core.EventEmitter();\n            this.name = name || PRIMARY_OUTLET;\n            parentContexts.onChildOutletCreated(this.name, this);\n        }\n        RouterOutlet.prototype.ngOnDestroy = function () { this.parentContexts.onChildOutletDestroyed(this.name); };\n        RouterOutlet.prototype.ngOnInit = function () {\n            if (!this.activated) {\n                // If the outlet was not instantiated at the time the route got activated we need to populate\n                // the outlet when it is initialized (ie inside a NgIf)\n                var context = this.parentContexts.getContext(this.name);\n                if (context && context.route) {\n                    if (context.attachRef) {\n                        // `attachRef` is populated when there is an existing component to mount\n                        this.attach(context.attachRef, context.route);\n                    }\n                    else {\n                        // otherwise the component defined in the configuration is created\n                        this.activateWith(context.route, context.resolver || null);\n                    }\n                }\n            }\n        };\n        Object.defineProperty(RouterOutlet.prototype, \"isActivated\", {\n            get: function () { return !!this.activated; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(RouterOutlet.prototype, \"component\", {\n            get: function () {\n                if (!this.activated)\n                    throw new Error('Outlet is not activated');\n                return this.activated.instance;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(RouterOutlet.prototype, \"activatedRoute\", {\n            get: function () {\n                if (!this.activated)\n                    throw new Error('Outlet is not activated');\n                return this._activatedRoute;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(RouterOutlet.prototype, \"activatedRouteData\", {\n            get: function () {\n                if (this._activatedRoute) {\n                    return this._activatedRoute.snapshot.data;\n                }\n                return {};\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Called when the `RouteReuseStrategy` instructs to detach the subtree\n         */\n        RouterOutlet.prototype.detach = function () {\n            if (!this.activated)\n                throw new Error('Outlet is not activated');\n            this.location.detach();\n            var cmp = this.activated;\n            this.activated = null;\n            this._activatedRoute = null;\n            return cmp;\n        };\n        /**\n         * Called when the `RouteReuseStrategy` instructs to re-attach a previously detached subtree\n         */\n        RouterOutlet.prototype.attach = function (ref, activatedRoute) {\n            this.activated = ref;\n            this._activatedRoute = activatedRoute;\n            this.location.insert(ref.hostView);\n        };\n        RouterOutlet.prototype.deactivate = function () {\n            if (this.activated) {\n                var c = this.component;\n                this.activated.destroy();\n                this.activated = null;\n                this._activatedRoute = null;\n                this.deactivateEvents.emit(c);\n            }\n        };\n        RouterOutlet.prototype.activateWith = function (activatedRoute, resolver) {\n            if (this.isActivated) {\n                throw new Error('Cannot activate an already activated outlet');\n            }\n            this._activatedRoute = activatedRoute;\n            var snapshot = activatedRoute._futureSnapshot;\n            var component = snapshot.routeConfig.component;\n            resolver = resolver || this.resolver;\n            var factory = resolver.resolveComponentFactory(component);\n            var childContexts = this.parentContexts.getOrCreateContext(this.name).children;\n            var injector = new OutletInjector(activatedRoute, childContexts, this.location.injector);\n            this.activated = this.location.createComponent(factory, this.location.length, injector);\n            // Calling `markForCheck` to make sure we will run the change detection when the\n            // `RouterOutlet` is inside a `ChangeDetectionStrategy.OnPush` component.\n            this.changeDetector.markForCheck();\n            this.activateEvents.emit(this.activated.instance);\n        };\n        RouterOutlet.decorators = [\n            { type: core.Directive, args: [{ selector: 'router-outlet', exportAs: 'outlet' },] }\n        ];\n        /** @nocollapse */\n        RouterOutlet.ctorParameters = function () { return [\n            { type: ChildrenOutletContexts },\n            { type: core.ViewContainerRef },\n            { type: core.ComponentFactoryResolver },\n            { type: String, decorators: [{ type: core.Attribute, args: ['name',] }] },\n            { type: core.ChangeDetectorRef }\n        ]; };\n        RouterOutlet.propDecorators = {\n            activateEvents: [{ type: core.Output, args: ['activate',] }],\n            deactivateEvents: [{ type: core.Output, args: ['deactivate',] }]\n        };\n        return RouterOutlet;\n    }());\n    var OutletInjector = /** @class */ (function () {\n        function OutletInjector(route, childContexts, parent) {\n            this.route = route;\n            this.childContexts = childContexts;\n            this.parent = parent;\n        }\n        OutletInjector.prototype.get = function (token, notFoundValue) {\n            if (token === ActivatedRoute) {\n                return this.route;\n            }\n            if (token === ChildrenOutletContexts) {\n                return this.childContexts;\n            }\n            return this.parent.get(token, notFoundValue);\n        };\n        return OutletInjector;\n    }());\n\n    /**\n    *@license\n    *Copyright Google Inc. All Rights Reserved.\n    *\n    *Use of this source code is governed by an MIT-style license that can be\n    *found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * @description\n     *\n     * Provides a preloading strategy.\n     *\n     * @experimental\n     */\n    var PreloadingStrategy = /** @class */ (function () {\n        function PreloadingStrategy() {\n        }\n        return PreloadingStrategy;\n    }());\n    /**\n     * @description\n     *\n     * Provides a preloading strategy that preloads all modules as quickly as possible.\n     *\n     * ```\n     * RouteModule.forRoot(ROUTES, {preloadingStrategy: PreloadAllModules})\n     * ```\n     *\n     * @experimental\n     */\n    var PreloadAllModules = /** @class */ (function () {\n        function PreloadAllModules() {\n        }\n        PreloadAllModules.prototype.preload = function (route, fn) {\n            return fn().pipe(operators.catchError(function () { return rxjs.of(null); }));\n        };\n        return PreloadAllModules;\n    }());\n    /**\n     * @description\n     *\n     * Provides a preloading strategy that does not preload any modules.\n     *\n     * This strategy is enabled by default.\n     *\n     * @experimental\n     */\n    var NoPreloading = /** @class */ (function () {\n        function NoPreloading() {\n        }\n        NoPreloading.prototype.preload = function (route, fn) { return rxjs.of(null); };\n        return NoPreloading;\n    }());\n    /**\n     * The preloader optimistically loads all router configurations to\n     * make navigations into lazily-loaded sections of the application faster.\n     *\n     * The preloader runs in the background. When the router bootstraps, the preloader\n     * starts listening to all navigation events. After every such event, the preloader\n     * will check if any configurations can be loaded lazily.\n     *\n     * If a route is protected by `canLoad` guards, the preloaded will not load it.\n     *\n     *\n     */\n    var RouterPreloader = /** @class */ (function () {\n        function RouterPreloader(router, moduleLoader, compiler, injector, preloadingStrategy) {\n            this.router = router;\n            this.injector = injector;\n            this.preloadingStrategy = preloadingStrategy;\n            var onStartLoad = function (r) { return router.triggerEvent(new RouteConfigLoadStart(r)); };\n            var onEndLoad = function (r) { return router.triggerEvent(new RouteConfigLoadEnd(r)); };\n            this.loader = new RouterConfigLoader(moduleLoader, compiler, onStartLoad, onEndLoad);\n        }\n        RouterPreloader.prototype.setUpPreloading = function () {\n            var _this = this;\n            this.subscription =\n                this.router.events\n                    .pipe(operators.filter(function (e) { return e instanceof NavigationEnd; }), operators.concatMap(function () { return _this.preload(); }))\n                    .subscribe(function () { });\n        };\n        RouterPreloader.prototype.preload = function () {\n            var ngModule = this.injector.get(core.NgModuleRef);\n            return this.processRoutes(ngModule, this.router.config);\n        };\n        // TODO(jasonaden): This class relies on code external to the class to call setUpPreloading. If\n        // this hasn't been done, ngOnDestroy will fail as this.subscription will be undefined. This\n        // should be refactored.\n        RouterPreloader.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n        RouterPreloader.prototype.processRoutes = function (ngModule, routes) {\n            var res = [];\n            try {\n                for (var routes_1 = __values(routes), routes_1_1 = routes_1.next(); !routes_1_1.done; routes_1_1 = routes_1.next()) {\n                    var route = routes_1_1.value;\n                    // we already have the config loaded, just recurse\n                    if (route.loadChildren && !route.canLoad && route._loadedConfig) {\n                        var childConfig = route._loadedConfig;\n                        res.push(this.processRoutes(childConfig.module, childConfig.routes));\n                        // no config loaded, fetch the config\n                    }\n                    else if (route.loadChildren && !route.canLoad) {\n                        res.push(this.preloadConfig(ngModule, route));\n                        // recurse into children\n                    }\n                    else if (route.children) {\n                        res.push(this.processRoutes(ngModule, route.children));\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (routes_1_1 && !routes_1_1.done && (_a = routes_1.return)) _a.call(routes_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            return rxjs.from(res).pipe(operators.mergeAll(), operators.map(function (_) { return void 0; }));\n            var e_1, _a;\n        };\n        RouterPreloader.prototype.preloadConfig = function (ngModule, route) {\n            var _this = this;\n            return this.preloadingStrategy.preload(route, function () {\n                var loaded$ = _this.loader.load(ngModule.injector, route);\n                return loaded$.pipe(operators.mergeMap(function (config) {\n                    route._loadedConfig = config;\n                    return _this.processRoutes(config.module, config.routes);\n                }));\n            });\n        };\n        RouterPreloader.decorators = [\n            { type: core.Injectable }\n        ];\n        /** @nocollapse */\n        RouterPreloader.ctorParameters = function () { return [\n            { type: Router },\n            { type: core.NgModuleFactoryLoader },\n            { type: core.Compiler },\n            { type: core.Injector },\n            { type: PreloadingStrategy }\n        ]; };\n        return RouterPreloader;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Contains a list of directives\n     *\n     *\n     */\n    var ROUTER_DIRECTIVES = [RouterOutlet, RouterLink, RouterLinkWithHref, RouterLinkActive, EmptyOutletComponent];\n    /**\n     * @description\n     *\n     * Is used in DI to configure the router.\n     *\n     *\n     */\n    var ROUTER_CONFIGURATION = new core.InjectionToken('ROUTER_CONFIGURATION');\n    /**\n     * @docsNotRequired\n     */\n    var ROUTER_FORROOT_GUARD = new core.InjectionToken('ROUTER_FORROOT_GUARD');\n    var ROUTER_PROVIDERS = [\n        common.Location,\n        { provide: UrlSerializer, useClass: DefaultUrlSerializer },\n        {\n            provide: Router,\n            useFactory: setupRouter,\n            deps: [\n                core.ApplicationRef, UrlSerializer, ChildrenOutletContexts, common.Location, core.Injector,\n                core.NgModuleFactoryLoader, core.Compiler, ROUTES, ROUTER_CONFIGURATION,\n                [UrlHandlingStrategy, new core.Optional()], [RouteReuseStrategy, new core.Optional()]\n            ]\n        },\n        ChildrenOutletContexts,\n        { provide: ActivatedRoute, useFactory: rootRoute, deps: [Router] },\n        { provide: core.NgModuleFactoryLoader, useClass: core.SystemJsNgModuleLoader },\n        RouterPreloader,\n        NoPreloading,\n        PreloadAllModules,\n        { provide: ROUTER_CONFIGURATION, useValue: { enableTracing: false } },\n    ];\n    function routerNgProbeToken() {\n        return new core.NgProbeToken('Router', Router);\n    }\n    /**\n     * @usageNotes\n     *\n     * RouterModule can be imported multiple times: once per lazily-loaded bundle.\n     * Since the router deals with a global shared resource--location, we cannot have\n     * more than one router service active.\n     *\n     * That is why there are two ways to create the module: `RouterModule.forRoot` and\n     * `RouterModule.forChild`.\n     *\n     * * `forRoot` creates a module that contains all the directives, the given routes, and the router\n     *   service itself.\n     * * `forChild` creates a module that contains all the directives and the given routes, but does not\n     *   include the router service.\n     *\n     * When registered at the root, the module should be used as follows\n     *\n     * ```\n     * @NgModule({\n     *   imports: [RouterModule.forRoot(ROUTES)]\n     * })\n     * class MyNgModule {}\n     * ```\n     *\n     * For submodules and lazy loaded submodules the module should be used as follows:\n     *\n     * ```\n     * @NgModule({\n     *   imports: [RouterModule.forChild(ROUTES)]\n     * })\n     * class MyNgModule {}\n     * ```\n     *\n     * @description\n     *\n     * Adds router directives and providers.\n     *\n     * Managing state transitions is one of the hardest parts of building applications. This is\n     * especially true on the web, where you also need to ensure that the state is reflected in the URL.\n     * In addition, we often want to split applications into multiple bundles and load them on demand.\n     * Doing this transparently is not trivial.\n     *\n     * The Angular router solves these problems. Using the router, you can declaratively specify\n     * application states, manage state transitions while taking care of the URL, and load bundles on\n     * demand.\n     *\n     * [Read this developer guide](https://angular.io/docs/ts/latest/guide/router.html) to get an\n     * overview of how the router should be used.\n     *\n     *\n     */\n    var RouterModule = /** @class */ (function () {\n        // Note: We are injecting the Router so it gets created eagerly...\n        function RouterModule(guard, router) {\n        }\n        /**\n         * Creates a module with all the router providers and directives. It also optionally sets up an\n         * application listener to perform an initial navigation.\n         *\n         * Options (see `ExtraOptions`):\n         * * `enableTracing` makes the router log all its internal events to the console.\n         * * `useHash` enables the location strategy that uses the URL fragment instead of the history\n         * API.\n         * * `initialNavigation` disables the initial navigation.\n         * * `errorHandler` provides a custom error handler.\n         * * `preloadingStrategy` configures a preloading strategy (see `PreloadAllModules`).\n         * * `onSameUrlNavigation` configures how the router handles navigation to the current URL. See\n         * `ExtraOptions` for more details.\n         * * `paramsInheritanceStrategy` defines how the router merges params, data and resolved data\n         * from parent to child routes.\n         */\n        RouterModule.forRoot = function (routes, config) {\n            return {\n                ngModule: RouterModule,\n                providers: [\n                    ROUTER_PROVIDERS,\n                    provideRoutes(routes),\n                    {\n                        provide: ROUTER_FORROOT_GUARD,\n                        useFactory: provideForRootGuard,\n                        deps: [[Router, new core.Optional(), new core.SkipSelf()]]\n                    },\n                    { provide: ROUTER_CONFIGURATION, useValue: config ? config : {} },\n                    {\n                        provide: common.LocationStrategy,\n                        useFactory: provideLocationStrategy,\n                        deps: [\n                            common.PlatformLocation, [new core.Inject(common.APP_BASE_HREF), new core.Optional()], ROUTER_CONFIGURATION\n                        ]\n                    },\n                    {\n                        provide: PreloadingStrategy,\n                        useExisting: config && config.preloadingStrategy ? config.preloadingStrategy :\n                            NoPreloading\n                    },\n                    { provide: core.NgProbeToken, multi: true, useFactory: routerNgProbeToken },\n                    provideRouterInitializer(),\n                ],\n            };\n        };\n        /**\n         * Creates a module with all the router directives and a provider registering routes.\n         */\n        RouterModule.forChild = function (routes) {\n            return { ngModule: RouterModule, providers: [provideRoutes(routes)] };\n        };\n        RouterModule.decorators = [\n            { type: core.NgModule, args: [{\n                        declarations: ROUTER_DIRECTIVES,\n                        exports: ROUTER_DIRECTIVES,\n                        entryComponents: [EmptyOutletComponent]\n                    },] }\n        ];\n        /** @nocollapse */\n        RouterModule.ctorParameters = function () { return [\n            { type: undefined, decorators: [{ type: core.Optional }, { type: core.Inject, args: [ROUTER_FORROOT_GUARD,] }] },\n            { type: Router, decorators: [{ type: core.Optional }] }\n        ]; };\n        return RouterModule;\n    }());\n    function provideLocationStrategy(platformLocationStrategy, baseHref, options) {\n        if (options === void 0) { options = {}; }\n        return options.useHash ? new common.HashLocationStrategy(platformLocationStrategy, baseHref) :\n            new common.PathLocationStrategy(platformLocationStrategy, baseHref);\n    }\n    function provideForRootGuard(router) {\n        if (router) {\n            throw new Error(\"RouterModule.forRoot() called twice. Lazy loaded modules should use RouterModule.forChild() instead.\");\n        }\n        return 'guarded';\n    }\n    /**\n     * @description\n     *\n     * Registers routes.\n     *\n     * ### Example\n     *\n     * ```\n     * @NgModule({\n     *   imports: [RouterModule.forChild(ROUTES)],\n     *   providers: [provideRoutes(EXTRA_ROUTES)]\n     * })\n     * class MyNgModule {}\n     * ```\n     *\n     *\n     */\n    function provideRoutes(routes) {\n        return [\n            { provide: core.ANALYZE_FOR_ENTRY_COMPONENTS, multi: true, useValue: routes },\n            { provide: ROUTES, multi: true, useValue: routes },\n        ];\n    }\n    function setupRouter(ref, urlSerializer, contexts, location, injector, loader, compiler, config, opts, urlHandlingStrategy, routeReuseStrategy) {\n        if (opts === void 0) { opts = {}; }\n        var router = new Router(null, urlSerializer, contexts, location, injector, loader, compiler, flatten(config));\n        if (urlHandlingStrategy) {\n            router.urlHandlingStrategy = urlHandlingStrategy;\n        }\n        if (routeReuseStrategy) {\n            router.routeReuseStrategy = routeReuseStrategy;\n        }\n        if (opts.errorHandler) {\n            router.errorHandler = opts.errorHandler;\n        }\n        if (opts.malformedUriErrorHandler) {\n            router.malformedUriErrorHandler = opts.malformedUriErrorHandler;\n        }\n        if (opts.enableTracing) {\n            var dom_1 = platformBrowser.ɵgetDOM();\n            router.events.subscribe(function (e) {\n                dom_1.logGroup(\"Router Event: \" + e.constructor.name);\n                dom_1.log(e.toString());\n                dom_1.log(e);\n                dom_1.logGroupEnd();\n            });\n        }\n        if (opts.onSameUrlNavigation) {\n            router.onSameUrlNavigation = opts.onSameUrlNavigation;\n        }\n        if (opts.paramsInheritanceStrategy) {\n            router.paramsInheritanceStrategy = opts.paramsInheritanceStrategy;\n        }\n        return router;\n    }\n    function rootRoute(router) {\n        return router.routerState.root;\n    }\n    /**\n     * To initialize the router properly we need to do in two steps:\n     *\n     * We need to start the navigation in a APP_INITIALIZER to block the bootstrap if\n     * a resolver or a guards executes asynchronously. Second, we need to actually run\n     * activation in a BOOTSTRAP_LISTENER. We utilize the afterPreactivation\n     * hook provided by the router to do that.\n     *\n     * The router navigation starts, reaches the point when preactivation is done, and then\n     * pauses. It waits for the hook to be resolved. We then resolve it only in a bootstrap listener.\n     */\n    var RouterInitializer = /** @class */ (function () {\n        function RouterInitializer(injector) {\n            this.injector = injector;\n            this.initNavigation = false;\n            this.resultOfPreactivationDone = new rxjs.Subject();\n        }\n        RouterInitializer.prototype.appInitializer = function () {\n            var _this = this;\n            var p = this.injector.get(common.LOCATION_INITIALIZED, Promise.resolve(null));\n            return p.then(function () {\n                var resolve = null;\n                var res = new Promise(function (r) { return resolve = r; });\n                var router = _this.injector.get(Router);\n                var opts = _this.injector.get(ROUTER_CONFIGURATION);\n                if (_this.isLegacyDisabled(opts) || _this.isLegacyEnabled(opts)) {\n                    resolve(true);\n                }\n                else if (opts.initialNavigation === 'disabled') {\n                    router.setUpLocationChangeListener();\n                    resolve(true);\n                }\n                else if (opts.initialNavigation === 'enabled') {\n                    router.hooks.afterPreactivation = function () {\n                        // only the initial navigation should be delayed\n                        if (!_this.initNavigation) {\n                            _this.initNavigation = true;\n                            resolve(true);\n                            return _this.resultOfPreactivationDone;\n                            // subsequent navigations should not be delayed\n                        }\n                        else {\n                            return rxjs.of(null);\n                        }\n                    };\n                    router.initialNavigation();\n                }\n                else {\n                    throw new Error(\"Invalid initialNavigation options: '\" + opts.initialNavigation + \"'\");\n                }\n                return res;\n            });\n        };\n        RouterInitializer.prototype.bootstrapListener = function (bootstrappedComponentRef) {\n            var opts = this.injector.get(ROUTER_CONFIGURATION);\n            var preloader = this.injector.get(RouterPreloader);\n            var router = this.injector.get(Router);\n            var ref = this.injector.get(core.ApplicationRef);\n            if (bootstrappedComponentRef !== ref.components[0]) {\n                return;\n            }\n            if (this.isLegacyEnabled(opts)) {\n                router.initialNavigation();\n            }\n            else if (this.isLegacyDisabled(opts)) {\n                router.setUpLocationChangeListener();\n            }\n            preloader.setUpPreloading();\n            router.resetRootComponentType(ref.componentTypes[0]);\n            this.resultOfPreactivationDone.next(null);\n            this.resultOfPreactivationDone.complete();\n        };\n        RouterInitializer.prototype.isLegacyEnabled = function (opts) {\n            return opts.initialNavigation === 'legacy_enabled' || opts.initialNavigation === true ||\n                opts.initialNavigation === undefined;\n        };\n        RouterInitializer.prototype.isLegacyDisabled = function (opts) {\n            return opts.initialNavigation === 'legacy_disabled' || opts.initialNavigation === false;\n        };\n        RouterInitializer.decorators = [\n            { type: core.Injectable }\n        ];\n        /** @nocollapse */\n        RouterInitializer.ctorParameters = function () { return [\n            { type: core.Injector }\n        ]; };\n        return RouterInitializer;\n    }());\n    function getAppInitializer(r) {\n        return r.appInitializer.bind(r);\n    }\n    function getBootstrapListener(r) {\n        return r.bootstrapListener.bind(r);\n    }\n    /**\n     * A token for the router initializer that will be called after the app is bootstrapped.\n     *\n     * @experimental\n     */\n    var ROUTER_INITIALIZER = new core.InjectionToken('Router Initializer');\n    function provideRouterInitializer() {\n        return [\n            RouterInitializer,\n            {\n                provide: core.APP_INITIALIZER,\n                multi: true,\n                useFactory: getAppInitializer,\n                deps: [RouterInitializer]\n            },\n            { provide: ROUTER_INITIALIZER, useFactory: getBootstrapListener, deps: [RouterInitializer] },\n            { provide: core.APP_BOOTSTRAP_LISTENER, multi: true, useExisting: ROUTER_INITIALIZER },\n        ];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var VERSION = new core.Version('6.0.8+4.sha-48415ed');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ɵangular_packages_router_router_a = ROUTER_FORROOT_GUARD;\n    exports.ɵangular_packages_router_router_g = RouterInitializer;\n    exports.ɵangular_packages_router_router_h = getAppInitializer;\n    exports.ɵangular_packages_router_router_i = getBootstrapListener;\n    exports.ɵangular_packages_router_router_d = provideForRootGuard;\n    exports.ɵangular_packages_router_router_c = provideLocationStrategy;\n    exports.ɵangular_packages_router_router_j = provideRouterInitializer;\n    exports.ɵangular_packages_router_router_f = rootRoute;\n    exports.ɵangular_packages_router_router_b = routerNgProbeToken;\n    exports.ɵangular_packages_router_router_e = setupRouter;\n    exports.ɵangular_packages_router_router_k = Tree;\n    exports.ɵangular_packages_router_router_l = TreeNode;\n    exports.RouterLink = RouterLink;\n    exports.RouterLinkWithHref = RouterLinkWithHref;\n    exports.RouterLinkActive = RouterLinkActive;\n    exports.RouterOutlet = RouterOutlet;\n    exports.ActivationEnd = ActivationEnd;\n    exports.ActivationStart = ActivationStart;\n    exports.ChildActivationEnd = ChildActivationEnd;\n    exports.ChildActivationStart = ChildActivationStart;\n    exports.GuardsCheckEnd = GuardsCheckEnd;\n    exports.GuardsCheckStart = GuardsCheckStart;\n    exports.NavigationCancel = NavigationCancel;\n    exports.NavigationEnd = NavigationEnd;\n    exports.NavigationError = NavigationError;\n    exports.NavigationStart = NavigationStart;\n    exports.ResolveEnd = ResolveEnd;\n    exports.ResolveStart = ResolveStart;\n    exports.RouteConfigLoadEnd = RouteConfigLoadEnd;\n    exports.RouteConfigLoadStart = RouteConfigLoadStart;\n    exports.RouterEvent = RouterEvent;\n    exports.RoutesRecognized = RoutesRecognized;\n    exports.RouteReuseStrategy = RouteReuseStrategy;\n    exports.Router = Router;\n    exports.ROUTES = ROUTES;\n    exports.ROUTER_CONFIGURATION = ROUTER_CONFIGURATION;\n    exports.ROUTER_INITIALIZER = ROUTER_INITIALIZER;\n    exports.RouterModule = RouterModule;\n    exports.provideRoutes = provideRoutes;\n    exports.ChildrenOutletContexts = ChildrenOutletContexts;\n    exports.OutletContext = OutletContext;\n    exports.NoPreloading = NoPreloading;\n    exports.PreloadAllModules = PreloadAllModules;\n    exports.PreloadingStrategy = PreloadingStrategy;\n    exports.RouterPreloader = RouterPreloader;\n    exports.ActivatedRoute = ActivatedRoute;\n    exports.ActivatedRouteSnapshot = ActivatedRouteSnapshot;\n    exports.RouterState = RouterState;\n    exports.RouterStateSnapshot = RouterStateSnapshot;\n    exports.PRIMARY_OUTLET = PRIMARY_OUTLET;\n    exports.convertToParamMap = convertToParamMap;\n    exports.UrlHandlingStrategy = UrlHandlingStrategy;\n    exports.DefaultUrlSerializer = DefaultUrlSerializer;\n    exports.UrlSegment = UrlSegment;\n    exports.UrlSegmentGroup = UrlSegmentGroup;\n    exports.UrlSerializer = UrlSerializer;\n    exports.UrlTree = UrlTree;\n    exports.VERSION = VERSION;\n    exports.ɵEmptyOutletComponent = EmptyOutletComponent;\n    exports.ɵROUTER_PROVIDERS = ROUTER_PROVIDERS;\n    exports.ɵflatten = flatten;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=router.umd.js.map\n"]}