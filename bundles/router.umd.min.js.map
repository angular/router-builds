{"version":3,"sources":["router.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","router","common","core","Rx","Observable","prototype","platformBrowser","this","_angular_common","_angular_core","rxjs_BehaviorSubject","rxjs_Subject","rxjs_observable_of","rxjs_operator_concatMap","rxjs_operator_map","rxjs_operator_mergeMap","rxjs_Observable","rxjs_observable_from","rxjs_operator_catch","rxjs_operator_concatAll","rxjs_operator_first","rxjs_util_EmptyError","rxjs_observable_fromPromise","rxjs_operator_every","rxjs_operator_last","rxjs_operator_mergeAll","rxjs_operator_reduce","_angular_platformBrowser","rxjs_operator_filter","__extends","d","b","__","constructor","extendStatics","Object","create","convertToParamMap","params","ParamsAsMap","navigationCancelingError","message","error","Error","NAVIGATION_CANCELING_ERROR","isNavigationCancelingError","defaultUrlMatcher","segments","segmentGroup","route","parts","split","length","pathMatch","hasChildren","posParams","index","part","segment","startsWith","substring","path","consumed","slice","validateConfig","config","parentPath","i","validateNode","getFullPath","fullPath","Array","isArray","component","outlet","PRIMARY_OUTLET","redirectTo","children","loadChildren","matcher","charAt","currentRoute","copyConfig","r","map","__assign","shallowEqualArrays","a","shallowEqual","k1","keys","k2","key","flatten","arr","concat","apply","last$1","forEach","map$$1","callback","prop","hasOwnProperty","waitForMap","obj","fn","of","waitHead","waitTail","res","k","mapped","call","push","concat$","concatAll","last$","last","andObservables","observables","merged$","mergeAll","every","result","wrapIntoObservable","value","ɵisObservable","ɵisPromise","fromPromise","Promise","resolve","createEmptyUrlTree","UrlTree","UrlSegmentGroup","containsTree","container","containee","exact","equalQueryParams","queryParams","equalSegmentGroups","root","containsQueryParams","containsSegmentGroup","equalPath","numberOfChildren","c","containsSegmentGroupHelper","containeePaths","current","next","equalSegments","as","bs","parameters","mapChildrenIntoArray","child","childOutlet","serializePaths","p","serializePath","join","serializeSegment","primary","children_1","v","encodeUriString","s","encodeURIComponent","replace","encodeUriQuery","encodeUriFragment","encodeURI","encodeUriSegment","decode","decodeURIComponent","decodeQuery","serializeMatrixParams","serializeQueryParams","strParams","name","matchSegments","str","match","SEGMENT_RE","matchQueryParams","QUERY_PARAM_RE","matchUrlQueryParamValue","QUERY_PARAM_VALUE_RE","noMatch","obs","NoMatch","absoluteRedirect","newTree","AbsoluteRedirect","namedOutletsRedirect","canLoadFails","applyRedirects","moduleInjector","configLoader","urlSerializer","urlTree","ApplyRedirects","runCanLoadGuard","canLoad","from","injectionToken","guard","get","matched","consumedSegments","lastChild","positionalParamSegments","slicedSegments","containsEmptyPathRedirectsWithNamedOutlets","createChildrenForEmptySegments","mergeTrivialChildren","containsEmptyPathRedirects","addEmptySegmentsToChildrenIfNeeded","routes","_i","routes_1","isEmptyPathRedirect","getOutlet","primarySegmentGroup","routes_2","some","undefined","findNode","node","_a","node_1","findPath","unshift","nodeChildrenAsMap","createEmptyState","rootComponent","snapshot","createEmptyStateSnapshot","emptyUrl","BehaviorSubject","UrlSegment","emptyParams","emptyData","emptyQueryParams","fragment","activated","ActivatedRoute","RouterState","TreeNode","ActivatedRouteSnapshot","RouterStateSnapshot","inheritedParamsDataResolve","paramsInheritanceStrategy","pathFromRoot","inheritingStartingFrom","parent_1","routeConfig","flattenInherited","reduce","curr","data","_resolvedData","setRouterState","state","_routerState","serializeNode","advanceActivatedRoute","currentSnapshot","nextSnapshot","_futureSnapshot","url","equalParamsAndUrlSegments","equalUrlParams","parentsMismatch","parent","createRouterState","routeReuseStrategy","prevState","createNode","_root","shouldReuseRoute","createOrReuseChildren","retrieve","tree","setFutureSnapshotsOfActivatedRoutes","createActivatedRoute","createUrlTree","commands","nav","computeNavigation","toRoot","startingPosition","findStartingPosition","processChildren","updateSegmentGroupChildren","updateSegmentGroup","isMatrixParams","command","outlets","segmentPath","oldSegmentGroup","newSegmentGroup","qp","replaceSegment","oldSegment","newSegment","outletName","Navigation","numberOfDoubleDots","isAbsolute","cmd","cmdIdx","outlets_1","urlPart","partIndex","Position","_lastPathIndex","_urlSegment","modifier","createPositionApplyingDoubleDots","group","g","ci","dd","getPath","getOutlets","_b","startIndex","m","prefixedWith","slicedCommands","commandIndex","pathIndex","createNewSegmentGroup","outlets_2","currentCommandIndex","currentPathIndex","compare","paths","createNewSegmentChildren","stringify","closestLoadedConfig","_loadedConfig","recognize","rootComponentType","Recognizer","sortActivatedRouteSnapshots","nodes","sort","localeCompare","getChildConfig","match$1","NoMatch$1","checkOutletNameUniqueness","names","n","routeWithSameOutletName","toString","getSourceSegmentGroup","_sourceSegment","getPathIndexShift","_segmentIndexShift","split$1","containsEmptyPathMatchesWithNamedOutlets","s_1","createChildrenForEmptyPaths","containsEmptyPathMatches","s_2","addEmptyPathsToChildrenIfNeeded","emptyPathMatch","getOutlet$1","primarySegment","getData","getResolve","defaultErrorHandler","defaultRouterHook","advanceActivatedRouteNodeAndItsChildren","parentLoadedConfig","validateCommands","attrBoolValue","routerNgProbeToken","NgProbeToken","Router","provideLocationStrategy","platformLocationStrategy","baseHref","options","useHash","HashLocationStrategy","PathLocationStrategy","provideForRootGuard","provideRoutes","provide","ANALYZE_FOR_ENTRY_COMPONENTS","multi","useValue","ROUTES","setupRouter","ref","contexts","location","injector","loader","compiler","opts","urlHandlingStrategy","errorHandler","enableTracing","dom_1","ɵgetDOM","events","subscribe","e","logGroup","log","logGroupEnd","onSameUrlNavigation","rootRoute","routerState","getAppInitializer","appInitializer","bind","getBootstrapListener","bootstrapListener","provideRouterInitializer","RouterInitializer","APP_INITIALIZER","useFactory","deps","ROUTER_INITIALIZER","APP_BOOTSTRAP_LISTENER","useExisting","setPrototypeOf","__proto__","assign","t","arguments","RouterEvent","id","NavigationStart","_super","NavigationEnd","urlAfterRedirects","_this","NavigationCancel","reason","NavigationError","RoutesRecognized","GuardsCheckStart","GuardsCheckEnd","shouldActivate","ResolveStart","ResolveEnd","RouteConfigLoadStart","RouteConfigLoadEnd","ChildActivationStart","ChildActivationEnd","ActivationStart","ActivationEnd","has","getAll","defineProperty","enumerable","configurable","LoadedRouterConfig","_queryParamMap","DEFAULT_SERIALIZER","serialize","_parameterMap","UrlSerializer","DefaultUrlSerializer","parse","UrlParser","parseRootSegment","parseQueryParams","parseFragment","remaining","consumeOptional","peekStartsWith","parseChildren","parseQueryParam","parseSegment","capture","parseParens","parseMatrixParams","parseParam","valueMatch","decodedKey","decodedVal","currentVal","allowPrimary","indexOf","substr","allowRedirects","ngModule","NgModuleRef","expanded$","expandSegmentGroup","urlTrees$","rootSegmentGroup","_catch","noMatchError","mapped$","rootCandidate","expandChildren","expandSegment","routes$","processedRoutes$","expandSegmentAgainstRoute","concattedProcessedRoutes$","first$","first","_","EmptyError","noLeftoversInUrl","matchSegmentAgainstRoute","expandSegmentAgainstRouteUsingRedirect","expandWildCardWithParamsAgainstRouteUsingRedirect","expandRegularSegmentAgainstRouteUsingRedirect","applyRedirectCommands","mergeMap","lineralizeSegments","newSegments","rawSegmentGroup","load","cfg","rawSlicedSegments","childConfig$","routerConfig","childModule","childConfig","expanded$_1","cs","shouldLoad","applyRedirectCreatreUrlTree","newRoot","createSegmentGroup","createQueryParams","redirectToParams","actualParams","sourceName","updatedSegments","createSegments","redirectToSegments","actualSegments","findPosParam","findOrReturn","redirectToUrlSegment","pos","idx","actualSegments_1","splice","Tree","firstChild","siblings","filter","cc","futureSnapshot","_paramMap","urlSegment","lastPathIndex","_resolve","cmdWithOutlet","find","CanActivate","CanDeactivate","PreActivation","future","forwardEvent","canActivateChecks","canDeactivateChecks","initialize","parentContexts","futureRoot","currRoot","setupChildRouteGuards","checkGuards","isDeactivating","isActivating","canDeactivate$","runCanDeactivateChecks","canDeactivate","runCanActivateChecks","resolveData","checks$","runningChecks$","concatMap","check","runResolve","futureNode","currNode","futurePath","prevChildren","setupRouteGuards","deactivateRouteAndItsChildren","getContext","context","shouldRunGuardsAndResolvers","runGuardsAndResolvers","mode","childName","isActivated","runCanDeactivate","fireChildActivationStart","fireActivationStart","runCanActivateChild","runCanActivate","canActivate","observable","getToken","canActivateChildGuards","reverse","extractCanActivateChild","guards","canActivateChild","resolveNode","resolvedData","key_1","getResolver","runningResolvers$","resolver","token","processSegmentGroup","freeze","rootNode","routeState","inheritParamsAndData","routeNode","processSegment","config_1","processSegmentAgainstRoute","rawSegment","RouteReuseStrategy","DefaultRouteReuseStrategy","shouldDetach","store","detachedTree","shouldAttach","InjectionToken","RouterConfigLoader","onLoadStartListener","onLoadEndListener","parentInjector","moduleFactory$","loadModuleFactory","NgModuleFactory","compileModuleAsync","UrlHandlingStrategy","DefaultUrlHandlingStrategy","shouldProcessUrl","extract","merge","newUrlPart","wholeUrl","rootContexts","navigations","navigationId","Subject","navigated","hooks","beforePreactivation","afterPreactivation","onLoadStart","triggerEvent","onLoadEnd","resetConfig","currentUrlTree","rawUrlTree","processNavigations","resetRootComponentType","initialNavigation","setUpLocationChangeListener","navigateByUrl","replaceUrl","locationSubscription","change","source","setTimeout","scheduleNavigation","serializeUrl","ngOnDestroy","dispose","unsubscribe","navigationExtras","relativeTo","preserveQueryParams","queryParamsHandling","preserveFragment","isDevMode","console","warn","f","q","removeEmptyProps","extras","skipLocationChange","parseUrl","mergedTree","navigate","isActive","executeScheduledNavigation","promise","catch","rawUrl","lastNavigation","reject","rej","urlTransition","then","runNavigate","precreatedState","resolvePromise","rejectPromise","urlAndSnapshot$","appliedUrl","redirectsApplied$","preActivation","beforePreactivationDone$","preactivationSetup$","evt","preactivationCheckGuards$","preactivationResolveData$","preactivationDone$","routerState$","activateRoutes","storedState","storedUrl","navigationIsSuccessful","isCurrentPathEqualTo","replaceState","go","ActivateRoutes","activate","resetUrlToCurrentUrlTree","resetStateAndUrl","ee","futureState","currState","deactivateChildRoutes","activateChildRoutes","futureChild","childOutletName","deactivateRoutes","parentContext","detachAndStoreRouteSubtree","deactivateRouteAndOutlet","componentRef","detach","onOutletDeactivated","contexts_1","deactivate","getOrCreateContext","stored","onOutletReAttached","attachRef","attach","cmpFactoryResolver","componentFactoryResolver","activateWith","RouterLink","tabIndex","renderer","el","setAttribute","nativeElement","set","preserve","onClick","decorators","type","Directive","args","selector","ctorParameters","Attribute","Renderer2","ElementRef","propDecorators","Input","routerLink","HostListener","RouterLinkWithHref","locationStrategy","subscription","updateTargetUrlAndHref","ngOnChanges","changes","button","ctrlKey","metaKey","shiftKey","target","href","prepareExternalUrl","LocationStrategy","HostBinding","RouterLinkActive","element","cdr","classes","routerLinkActiveOptions","update","ngAfterContentInit","links","linksWithHrefs","hasActiveLinks","addClass","removeClass","isLinkActive","link","exportAs","ChangeDetectorRef","ContentChildren","descendants","routerLinkActive","OutletContext","ChildrenOutletContexts","Map","onChildOutletCreated","onChildOutletDestroyed","RouterOutlet","changeDetector","_activatedRoute","activateEvents","EventEmitter","deactivateEvents","ngOnInit","instance","cmp","activatedRoute","insert","hostView","destroy","emit","resolveComponentFactory","childContexts","OutletInjector","createComponent","markForCheck","ViewContainerRef","ComponentFactoryResolver","Output","notFoundValue","PreloadingStrategy","PreloadAllModules","preload","NoPreloading","RouterPreloader","moduleLoader","preloadingStrategy","onStartLoad","onEndLoad","setUpPreloading","navigations$","processRoutes","preloadConfig","loaded$","Injectable","NgModuleFactoryLoader","Compiler","Injector","ROUTER_DIRECTIVES","ROUTER_CONFIGURATION","ROUTER_FORROOT_GUARD","ROUTER_PROVIDERS","Location","useClass","ApplicationRef","Optional","SystemJsNgModuleLoader","RouterModule","forRoot","providers","SkipSelf","PlatformLocation","Inject","APP_BASE_HREF","forChild","NgModule","declarations","initNavigation","resultOfPreactivationDone","LOCATION_INITIALIZED","isLegacyDisabled","isLegacyEnabled","bootstrappedComponentRef","preloader","components","componentTypes","complete","VERSION","Version","ɵROUTER_PROVIDERS","ɵflatten","ɵa","ɵg","ɵh","ɵi","ɵd","ɵc","ɵj","ɵf","ɵb","ɵe","ɵk","ɵl"],"mappings":"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","file":"router.umd.min.js","sourcesContent":["/**\n * @license Angular v5.2.10-d2e7c99\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/core'), require('rxjs/BehaviorSubject'), require('rxjs/Subject'), require('rxjs/observable/of'), require('rxjs/operator/concatMap'), require('rxjs/operator/map'), require('rxjs/operator/mergeMap'), require('rxjs/Observable'), require('rxjs/observable/from'), require('rxjs/operator/catch'), require('rxjs/operator/concatAll'), require('rxjs/operator/first'), require('rxjs/util/EmptyError'), require('rxjs/observable/fromPromise'), require('rxjs/operator/every'), require('rxjs/operator/last'), require('rxjs/operator/mergeAll'), require('rxjs/operator/reduce'), require('@angular/platform-browser'), require('rxjs/operator/filter')) :\n\ttypeof define === 'function' && define.amd ? define('@angular/router', ['exports', '@angular/common', '@angular/core', 'rxjs/BehaviorSubject', 'rxjs/Subject', 'rxjs/observable/of', 'rxjs/operator/concatMap', 'rxjs/operator/map', 'rxjs/operator/mergeMap', 'rxjs/Observable', 'rxjs/observable/from', 'rxjs/operator/catch', 'rxjs/operator/concatAll', 'rxjs/operator/first', 'rxjs/util/EmptyError', 'rxjs/observable/fromPromise', 'rxjs/operator/every', 'rxjs/operator/last', 'rxjs/operator/mergeAll', 'rxjs/operator/reduce', '@angular/platform-browser', 'rxjs/operator/filter'], factory) :\n\t(factory((global.ng = global.ng || {}, global.ng.router = {}),global.ng.common,global.ng.core,global.Rx,global.Rx,global.Rx.Observable,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx,global.Rx.Observable,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx,global.Rx.Observable,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.ng.platformBrowser,global.Rx.Observable.prototype));\n}(this, (function (exports,_angular_common,_angular_core,rxjs_BehaviorSubject,rxjs_Subject,rxjs_observable_of,rxjs_operator_concatMap,rxjs_operator_map,rxjs_operator_mergeMap,rxjs_Observable,rxjs_observable_from,rxjs_operator_catch,rxjs_operator_concatAll,rxjs_operator_first,rxjs_util_EmptyError,rxjs_observable_fromPromise,rxjs_operator_every,rxjs_operator_last,rxjs_operator_mergeAll,rxjs_operator_reduce,_angular_platformBrowser,rxjs_operator_filter) { 'use strict';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n};\n\n/**\n * @license Angular v5.2.10-d2e7c99\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Base for events the Router goes through, as opposed to events tied to a specific\n * Route. `RouterEvent`s will only be fired one time for any given navigation.\n *\n * Example:\n *\n * ```\n * class MyService {\n *   constructor(public router: Router, logger: Logger) {\n *     router.events.filter(e => e instanceof RouterEvent).subscribe(e => {\n *       logger.log(e.id, e.url);\n *     });\n *   }\n * }\n * ```\n *\n * \\@experimental\n */\nvar RouterEvent = /** @class */ (function () {\n    function RouterEvent(id, url) {\n        this.id = id;\n        this.url = url;\n    }\n    return RouterEvent;\n}());\n/**\n * \\@whatItDoes Represents an event triggered when a navigation starts.\n *\n * \\@stable\n */\nvar NavigationStart = /** @class */ (function (_super) {\n    __extends(NavigationStart, _super);\n    function NavigationStart() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /** @docsNotRequired */\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    NavigationStart.prototype.toString = /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    function () { return \"NavigationStart(id: \" + this.id + \", url: '\" + this.url + \"')\"; };\n    return NavigationStart;\n}(RouterEvent));\n/**\n * \\@whatItDoes Represents an event triggered when a navigation ends successfully.\n *\n * \\@stable\n */\nvar NavigationEnd = /** @class */ (function (_super) {\n    __extends(NavigationEnd, _super);\n    function NavigationEnd(/** @docsNotRequired */\n        /** @docsNotRequired */\n        id, /** @docsNotRequired */\n        /** @docsNotRequired */\n        url, urlAfterRedirects) {\n        var _this = _super.call(this, id, url) || this;\n        _this.urlAfterRedirects = urlAfterRedirects;\n        return _this;\n    }\n    /** @docsNotRequired */\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    NavigationEnd.prototype.toString = /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    function () {\n        return \"NavigationEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"')\";\n    };\n    return NavigationEnd;\n}(RouterEvent));\n/**\n * \\@whatItDoes Represents an event triggered when a navigation is canceled.\n *\n * \\@stable\n */\nvar NavigationCancel = /** @class */ (function (_super) {\n    __extends(NavigationCancel, _super);\n    function NavigationCancel(/** @docsNotRequired */\n        /** @docsNotRequired */\n        id, /** @docsNotRequired */\n        /** @docsNotRequired */\n        url, reason) {\n        var _this = _super.call(this, id, url) || this;\n        _this.reason = reason;\n        return _this;\n    }\n    /** @docsNotRequired */\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    NavigationCancel.prototype.toString = /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    function () { return \"NavigationCancel(id: \" + this.id + \", url: '\" + this.url + \"')\"; };\n    return NavigationCancel;\n}(RouterEvent));\n/**\n * \\@whatItDoes Represents an event triggered when a navigation fails due to an unexpected error.\n *\n * \\@stable\n */\nvar NavigationError = /** @class */ (function (_super) {\n    __extends(NavigationError, _super);\n    function NavigationError(/** @docsNotRequired */\n        /** @docsNotRequired */\n        id, /** @docsNotRequired */\n        /** @docsNotRequired */\n        url, error) {\n        var _this = _super.call(this, id, url) || this;\n        _this.error = error;\n        return _this;\n    }\n    /** @docsNotRequired */\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    NavigationError.prototype.toString = /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    function () {\n        return \"NavigationError(id: \" + this.id + \", url: '\" + this.url + \"', error: \" + this.error + \")\";\n    };\n    return NavigationError;\n}(RouterEvent));\n/**\n * \\@whatItDoes Represents an event triggered when routes are recognized.\n *\n * \\@stable\n */\nvar RoutesRecognized = /** @class */ (function (_super) {\n    __extends(RoutesRecognized, _super);\n    function RoutesRecognized(/** @docsNotRequired */\n        /** @docsNotRequired */\n        id, /** @docsNotRequired */\n        /** @docsNotRequired */\n        url, urlAfterRedirects, state) {\n        var _this = _super.call(this, id, url) || this;\n        _this.urlAfterRedirects = urlAfterRedirects;\n        _this.state = state;\n        return _this;\n    }\n    /** @docsNotRequired */\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    RoutesRecognized.prototype.toString = /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    function () {\n        return \"RoutesRecognized(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return RoutesRecognized;\n}(RouterEvent));\n/**\n * \\@whatItDoes Represents the start of the Guard phase of routing.\n *\n * \\@experimental\n */\nvar GuardsCheckStart = /** @class */ (function (_super) {\n    __extends(GuardsCheckStart, _super);\n    function GuardsCheckStart(/** @docsNotRequired */\n        /** @docsNotRequired */\n        id, /** @docsNotRequired */\n        /** @docsNotRequired */\n        url, urlAfterRedirects, state) {\n        var _this = _super.call(this, id, url) || this;\n        _this.urlAfterRedirects = urlAfterRedirects;\n        _this.state = state;\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    GuardsCheckStart.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        return \"GuardsCheckStart(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return GuardsCheckStart;\n}(RouterEvent));\n/**\n * \\@whatItDoes Represents the end of the Guard phase of routing.\n *\n * \\@experimental\n */\nvar GuardsCheckEnd = /** @class */ (function (_super) {\n    __extends(GuardsCheckEnd, _super);\n    function GuardsCheckEnd(/** @docsNotRequired */\n        /** @docsNotRequired */\n        id, /** @docsNotRequired */\n        /** @docsNotRequired */\n        url, urlAfterRedirects, state, shouldActivate) {\n        var _this = _super.call(this, id, url) || this;\n        _this.urlAfterRedirects = urlAfterRedirects;\n        _this.state = state;\n        _this.shouldActivate = shouldActivate;\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    GuardsCheckEnd.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        return \"GuardsCheckEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \", shouldActivate: \" + this.shouldActivate + \")\";\n    };\n    return GuardsCheckEnd;\n}(RouterEvent));\n/**\n * \\@whatItDoes Represents the start of the Resolve phase of routing. The timing of this\n * event may change, thus it's experimental. In the current iteration it will run\n * in the \"resolve\" phase whether there's things to resolve or not. In the future this\n * behavior may change to only run when there are things to be resolved.\n *\n * \\@experimental\n */\nvar ResolveStart = /** @class */ (function (_super) {\n    __extends(ResolveStart, _super);\n    function ResolveStart(/** @docsNotRequired */\n        /** @docsNotRequired */\n        id, /** @docsNotRequired */\n        /** @docsNotRequired */\n        url, urlAfterRedirects, state) {\n        var _this = _super.call(this, id, url) || this;\n        _this.urlAfterRedirects = urlAfterRedirects;\n        _this.state = state;\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    ResolveStart.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        return \"ResolveStart(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return ResolveStart;\n}(RouterEvent));\n/**\n * \\@whatItDoes Represents the end of the Resolve phase of routing. See note on\n * {\\@link ResolveStart} for use of this experimental API.\n *\n * \\@experimental\n */\nvar ResolveEnd = /** @class */ (function (_super) {\n    __extends(ResolveEnd, _super);\n    function ResolveEnd(/** @docsNotRequired */\n        /** @docsNotRequired */\n        id, /** @docsNotRequired */\n        /** @docsNotRequired */\n        url, urlAfterRedirects, state) {\n        var _this = _super.call(this, id, url) || this;\n        _this.urlAfterRedirects = urlAfterRedirects;\n        _this.state = state;\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    ResolveEnd.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        return \"ResolveEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return ResolveEnd;\n}(RouterEvent));\n/**\n * \\@whatItDoes Represents an event triggered before lazy loading a route config.\n *\n * \\@experimental\n */\nvar RouteConfigLoadStart = /** @class */ (function () {\n    function RouteConfigLoadStart(route) {\n        this.route = route;\n    }\n    /**\n     * @return {?}\n     */\n    RouteConfigLoadStart.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return \"RouteConfigLoadStart(path: \" + this.route.path + \")\"; };\n    return RouteConfigLoadStart;\n}());\n/**\n * \\@whatItDoes Represents an event triggered when a route has been lazy loaded.\n *\n * \\@experimental\n */\nvar RouteConfigLoadEnd = /** @class */ (function () {\n    function RouteConfigLoadEnd(route) {\n        this.route = route;\n    }\n    /**\n     * @return {?}\n     */\n    RouteConfigLoadEnd.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return \"RouteConfigLoadEnd(path: \" + this.route.path + \")\"; };\n    return RouteConfigLoadEnd;\n}());\n/**\n * \\@whatItDoes Represents the start of end of the Resolve phase of routing. See note on\n * {\\@link ChildActivationEnd} for use of this experimental API.\n *\n * \\@experimental\n */\nvar ChildActivationStart = /** @class */ (function () {\n    function ChildActivationStart(snapshot) {\n        this.snapshot = snapshot;\n    }\n    /**\n     * @return {?}\n     */\n    ChildActivationStart.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n        return \"ChildActivationStart(path: '\" + path + \"')\";\n    };\n    return ChildActivationStart;\n}());\n/**\n * \\@whatItDoes Represents the start of end of the Resolve phase of routing. See note on\n * {\\@link ChildActivationStart} for use of this experimental API.\n *\n * \\@experimental\n */\nvar ChildActivationEnd = /** @class */ (function () {\n    function ChildActivationEnd(snapshot) {\n        this.snapshot = snapshot;\n    }\n    /**\n     * @return {?}\n     */\n    ChildActivationEnd.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n        return \"ChildActivationEnd(path: '\" + path + \"')\";\n    };\n    return ChildActivationEnd;\n}());\n/**\n * \\@whatItDoes Represents the start of end of the Resolve phase of routing. See note on\n * {\\@link ActivationEnd} for use of this experimental API.\n *\n * \\@experimental\n */\nvar ActivationStart = /** @class */ (function () {\n    function ActivationStart(snapshot) {\n        this.snapshot = snapshot;\n    }\n    /**\n     * @return {?}\n     */\n    ActivationStart.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n        return \"ActivationStart(path: '\" + path + \"')\";\n    };\n    return ActivationStart;\n}());\n/**\n * \\@whatItDoes Represents the start of end of the Resolve phase of routing. See note on\n * {\\@link ActivationStart} for use of this experimental API.\n *\n * \\@experimental\n */\nvar ActivationEnd = /** @class */ (function () {\n    function ActivationEnd(snapshot) {\n        this.snapshot = snapshot;\n    }\n    /**\n     * @return {?}\n     */\n    ActivationEnd.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n        return \"ActivationEnd(path: '\" + path + \"')\";\n    };\n    return ActivationEnd;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Name of the primary outlet.\n *\n * \\@stable\n */\nvar PRIMARY_OUTLET = 'primary';\n/**\n * Matrix and Query parameters.\n *\n * `ParamMap` makes it easier to work with parameters as they could have either a single value or\n * multiple value. Because this should be known by the user, calling `get` or `getAll` returns the\n * correct type (either `string` or `string[]`).\n *\n * The API is inspired by the URLSearchParams interface.\n * see https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams\n *\n * \\@stable\n * @record\n */\n\nvar ParamsAsMap = /** @class */ (function () {\n    function ParamsAsMap(params) {\n        this.params = params || {};\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ParamsAsMap.prototype.has = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this.params.hasOwnProperty(name); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ParamsAsMap.prototype.get = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (this.has(name)) {\n            var /** @type {?} */ v = this.params[name];\n            return Array.isArray(v) ? v[0] : v;\n        }\n        return null;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ParamsAsMap.prototype.getAll = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (this.has(name)) {\n            var /** @type {?} */ v = this.params[name];\n            return Array.isArray(v) ? v : [v];\n        }\n        return [];\n    };\n    Object.defineProperty(ParamsAsMap.prototype, \"keys\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return Object.keys(this.params); },\n        enumerable: true,\n        configurable: true\n    });\n    return ParamsAsMap;\n}());\n/**\n * Convert a {\\@link Params} instance to a {\\@link ParamMap}.\n *\n * \\@stable\n * @param {?} params\n * @return {?}\n */\nfunction convertToParamMap(params) {\n    return new ParamsAsMap(params);\n}\nvar NAVIGATION_CANCELING_ERROR = 'ngNavigationCancelingError';\n/**\n * @param {?} message\n * @return {?}\n */\nfunction navigationCancelingError(message) {\n    var /** @type {?} */ error = Error('NavigationCancelingError: ' + message);\n    (/** @type {?} */ (error))[NAVIGATION_CANCELING_ERROR] = true;\n    return error;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction isNavigationCancelingError(error) {\n    return error && (/** @type {?} */ (error))[NAVIGATION_CANCELING_ERROR];\n}\n/**\n * @param {?} segments\n * @param {?} segmentGroup\n * @param {?} route\n * @return {?}\n */\nfunction defaultUrlMatcher(segments, segmentGroup, route) {\n    var /** @type {?} */ parts = /** @type {?} */ ((route.path)).split('/');\n    if (parts.length > segments.length) {\n        // The actual URL is shorter than the config, no match\n        return null;\n    }\n    if (route.pathMatch === 'full' &&\n        (segmentGroup.hasChildren() || parts.length < segments.length)) {\n        // The config is longer than the actual URL but we are looking for a full match, return null\n        return null;\n    }\n    var /** @type {?} */ posParams = {};\n    // Check each config part against the actual URL\n    for (var /** @type {?} */ index = 0; index < parts.length; index++) {\n        var /** @type {?} */ part = parts[index];\n        var /** @type {?} */ segment = segments[index];\n        var /** @type {?} */ isParameter = part.startsWith(':');\n        if (isParameter) {\n            posParams[part.substring(1)] = segment;\n        }\n        else if (part !== segment.path) {\n            // The actual URL part does not match the config, no match\n            return null;\n        }\n    }\n    return { consumed: segments.slice(0, parts.length), posParams: posParams };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * See {\\@link Routes} for more details.\n * \\@stable\n * @record\n */\n\nvar LoadedRouterConfig = /** @class */ (function () {\n    function LoadedRouterConfig(routes, module) {\n        this.routes = routes;\n        this.module = module;\n    }\n    return LoadedRouterConfig;\n}());\n/**\n * @param {?} config\n * @param {?=} parentPath\n * @return {?}\n */\nfunction validateConfig(config, parentPath) {\n    if (parentPath === void 0) { parentPath = ''; }\n    // forEach doesn't iterate undefined values\n    for (var /** @type {?} */ i = 0; i < config.length; i++) {\n        var /** @type {?} */ route = config[i];\n        var /** @type {?} */ fullPath = getFullPath(parentPath, route);\n        validateNode(route, fullPath);\n    }\n}\n/**\n * @param {?} route\n * @param {?} fullPath\n * @return {?}\n */\nfunction validateNode(route, fullPath) {\n    if (!route) {\n        throw new Error(\"\\n      Invalid configuration of route '\" + fullPath + \"': Encountered undefined route.\\n      The reason might be an extra comma.\\n\\n      Example:\\n      const routes: Routes = [\\n        { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\\n        { path: 'dashboard',  component: DashboardComponent },, << two commas\\n        { path: 'detail/:id', component: HeroDetailComponent }\\n      ];\\n    \");\n    }\n    if (Array.isArray(route)) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': Array cannot be specified\");\n    }\n    if (!route.component && (route.outlet && route.outlet !== PRIMARY_OUTLET)) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': a componentless route cannot have a named outlet set\");\n    }\n    if (route.redirectTo && route.children) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and children cannot be used together\");\n    }\n    if (route.redirectTo && route.loadChildren) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and loadChildren cannot be used together\");\n    }\n    if (route.children && route.loadChildren) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': children and loadChildren cannot be used together\");\n    }\n    if (route.redirectTo && route.component) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and component cannot be used together\");\n    }\n    if (route.path && route.matcher) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': path and matcher cannot be used together\");\n    }\n    if (route.redirectTo === void 0 && !route.component && !route.children && !route.loadChildren) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"'. One of the following must be provided: component, redirectTo, children or loadChildren\");\n    }\n    if (route.path === void 0 && route.matcher === void 0) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': routes must have either a path or a matcher specified\");\n    }\n    if (typeof route.path === 'string' && route.path.charAt(0) === '/') {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': path cannot start with a slash\");\n    }\n    if (route.path === '' && route.redirectTo !== void 0 && route.pathMatch === void 0) {\n        var /** @type {?} */ exp = \"The default value of 'pathMatch' is 'prefix', but often the intent is to use 'full'.\";\n        throw new Error(\"Invalid configuration of route '{path: \\\"\" + fullPath + \"\\\", redirectTo: \\\"\" + route.redirectTo + \"\\\"}': please provide 'pathMatch'. \" + exp);\n    }\n    if (route.pathMatch !== void 0 && route.pathMatch !== 'full' && route.pathMatch !== 'prefix') {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': pathMatch can only be set to 'prefix' or 'full'\");\n    }\n    if (route.children) {\n        validateConfig(route.children, fullPath);\n    }\n}\n/**\n * @param {?} parentPath\n * @param {?} currentRoute\n * @return {?}\n */\nfunction getFullPath(parentPath, currentRoute) {\n    if (!currentRoute) {\n        return parentPath;\n    }\n    if (!parentPath && !currentRoute.path) {\n        return '';\n    }\n    else if (parentPath && !currentRoute.path) {\n        return parentPath + \"/\";\n    }\n    else if (!parentPath && currentRoute.path) {\n        return currentRoute.path;\n    }\n    else {\n        return parentPath + \"/\" + currentRoute.path;\n    }\n}\n/**\n * @param {?} r\n * @return {?}\n */\nfunction copyConfig(r) {\n    var /** @type {?} */ children = r.children && r.children.map(copyConfig);\n    return children ? __assign({}, r, { children: children }) : __assign({}, r);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction shallowEqualArrays(a, b) {\n    if (a.length !== b.length)\n        return false;\n    for (var /** @type {?} */ i = 0; i < a.length; ++i) {\n        if (!shallowEqual(a[i], b[i]))\n            return false;\n    }\n    return true;\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction shallowEqual(a, b) {\n    var /** @type {?} */ k1 = Object.keys(a);\n    var /** @type {?} */ k2 = Object.keys(b);\n    if (k1.length != k2.length) {\n        return false;\n    }\n    var /** @type {?} */ key;\n    for (var /** @type {?} */ i = 0; i < k1.length; i++) {\n        key = k1[i];\n        if (a[key] !== b[key]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Flattens single-level nested arrays.\n * @template T\n * @param {?} arr\n * @return {?}\n */\nfunction flatten(arr) {\n    return Array.prototype.concat.apply([], arr);\n}\n/**\n * Return the last element of an array.\n * @template T\n * @param {?} a\n * @return {?}\n */\nfunction last$1(a) {\n    return a.length > 0 ? a[a.length - 1] : null;\n}\n/**\n * Verifys all booleans in an array are `true`.\n * @param {?} bools\n * @return {?}\n */\n\n/**\n * @template K, V\n * @param {?} map\n * @param {?} callback\n * @return {?}\n */\nfunction forEach(map$$1, callback) {\n    for (var /** @type {?} */ prop in map$$1) {\n        if (map$$1.hasOwnProperty(prop)) {\n            callback(map$$1[prop], prop);\n        }\n    }\n}\n/**\n * @template A, B\n * @param {?} obj\n * @param {?} fn\n * @return {?}\n */\nfunction waitForMap(obj, fn) {\n    if (Object.keys(obj).length === 0) {\n        return rxjs_observable_of.of({});\n    }\n    var /** @type {?} */ waitHead = [];\n    var /** @type {?} */ waitTail = [];\n    var /** @type {?} */ res = {};\n    forEach(obj, function (a, k) {\n        var /** @type {?} */ mapped = rxjs_operator_map.map.call(fn(k, a), function (r) { return res[k] = r; });\n        if (k === PRIMARY_OUTLET) {\n            waitHead.push(mapped);\n        }\n        else {\n            waitTail.push(mapped);\n        }\n    });\n    var /** @type {?} */ concat$ = rxjs_operator_concatAll.concatAll.call(rxjs_observable_of.of.apply(void 0, waitHead.concat(waitTail)));\n    var /** @type {?} */ last$ = rxjs_operator_last.last.call(concat$);\n    return rxjs_operator_map.map.call(last$, function () { return res; });\n}\n/**\n * ANDs Observables by merging all input observables, reducing to an Observable verifying all\n * input Observables return `true`.\n * @param {?} observables\n * @return {?}\n */\nfunction andObservables(observables) {\n    var /** @type {?} */ merged$ = rxjs_operator_mergeAll.mergeAll.call(observables);\n    return rxjs_operator_every.every.call(merged$, function (result) { return result === true; });\n}\n/**\n * @template T\n * @param {?} value\n * @return {?}\n */\nfunction wrapIntoObservable(value) {\n    if (_angular_core.ɵisObservable(value)) {\n        return value;\n    }\n    if (_angular_core.ɵisPromise(value)) {\n        // Use `Promise.resolve()` to wrap promise-like instances.\n        // Required ie when a Resolver returns a AngularJS `$q` promise to correctly trigger the\n        // change detection.\n        return rxjs_observable_fromPromise.fromPromise(Promise.resolve(value));\n    }\n    return rxjs_observable_of.of(/** @type {?} */ (value));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @return {?}\n */\nfunction createEmptyUrlTree() {\n    return new UrlTree(new UrlSegmentGroup([], {}), {}, null);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @param {?} exact\n * @return {?}\n */\nfunction containsTree(container, containee, exact) {\n    if (exact) {\n        return equalQueryParams(container.queryParams, containee.queryParams) &&\n            equalSegmentGroups(container.root, containee.root);\n    }\n    return containsQueryParams(container.queryParams, containee.queryParams) &&\n        containsSegmentGroup(container.root, containee.root);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @return {?}\n */\nfunction equalQueryParams(container, containee) {\n    return shallowEqual(container, containee);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @return {?}\n */\nfunction equalSegmentGroups(container, containee) {\n    if (!equalPath(container.segments, containee.segments))\n        return false;\n    if (container.numberOfChildren !== containee.numberOfChildren)\n        return false;\n    for (var /** @type {?} */ c in containee.children) {\n        if (!container.children[c])\n            return false;\n        if (!equalSegmentGroups(container.children[c], containee.children[c]))\n            return false;\n    }\n    return true;\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @return {?}\n */\nfunction containsQueryParams(container, containee) {\n    return Object.keys(containee).length <= Object.keys(container).length &&\n        Object.keys(containee).every(function (key) { return containee[key] === container[key]; });\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @return {?}\n */\nfunction containsSegmentGroup(container, containee) {\n    return containsSegmentGroupHelper(container, containee, containee.segments);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @param {?} containeePaths\n * @return {?}\n */\nfunction containsSegmentGroupHelper(container, containee, containeePaths) {\n    if (container.segments.length > containeePaths.length) {\n        var /** @type {?} */ current = container.segments.slice(0, containeePaths.length);\n        if (!equalPath(current, containeePaths))\n            return false;\n        if (containee.hasChildren())\n            return false;\n        return true;\n    }\n    else if (container.segments.length === containeePaths.length) {\n        if (!equalPath(container.segments, containeePaths))\n            return false;\n        for (var /** @type {?} */ c in containee.children) {\n            if (!container.children[c])\n                return false;\n            if (!containsSegmentGroup(container.children[c], containee.children[c]))\n                return false;\n        }\n        return true;\n    }\n    else {\n        var /** @type {?} */ current = containeePaths.slice(0, container.segments.length);\n        var /** @type {?} */ next = containeePaths.slice(container.segments.length);\n        if (!equalPath(container.segments, current))\n            return false;\n        if (!container.children[PRIMARY_OUTLET])\n            return false;\n        return containsSegmentGroupHelper(container.children[PRIMARY_OUTLET], containee, next);\n    }\n}\n/**\n * \\@whatItDoes Represents the parsed URL.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const tree: UrlTree =\n *       router.parseUrl('/team/33/(user/victor//support:help)?debug=true#fragment');\n *     const f = tree.fragment; // return 'fragment'\n *     const q = tree.queryParams; // returns {debug: 'true'}\n *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n *     const s: UrlSegment[] = g.segments; // returns 2 segments 'team' and '33'\n *     g.children[PRIMARY_OUTLET].segments; // returns 2 segments 'user' and 'victor'\n *     g.children['support'].segments; // return 1 segment 'help'\n *   }\n * }\n * ```\n *\n * \\@description\n *\n * Since a router state is a tree, and the URL is nothing but a serialized state, the URL is a\n * serialized tree.\n * UrlTree is a data structure that provides a lot of affordances in dealing with URLs\n *\n * \\@stable\n */\nvar UrlTree = /** @class */ (function () {\n    /** @internal */\n    function UrlTree(root, queryParams, fragment) {\n        this.root = root;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n    }\n    Object.defineProperty(UrlTree.prototype, \"queryParamMap\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            if (!this._queryParamMap) {\n                this._queryParamMap = convertToParamMap(this.queryParams);\n            }\n            return this._queryParamMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @docsNotRequired */\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    UrlTree.prototype.toString = /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    function () { return DEFAULT_SERIALIZER.serialize(this); };\n    return UrlTree;\n}());\n/**\n * \\@whatItDoes Represents the parsed URL segment group.\n *\n * See {\\@link UrlTree} for more information.\n *\n * \\@stable\n */\nvar UrlSegmentGroup = /** @class */ (function () {\n    function UrlSegmentGroup(segments, children) {\n        var _this = this;\n        this.segments = segments;\n        this.children = children;\n        /**\n         * The parent node in the url tree\n         */\n        this.parent = null;\n        forEach(children, function (v, k) { return v.parent = _this; });\n    }\n    /** Whether the segment has child segments */\n    /**\n     * Whether the segment has child segments\n     * @return {?}\n     */\n    UrlSegmentGroup.prototype.hasChildren = /**\n     * Whether the segment has child segments\n     * @return {?}\n     */\n    function () { return this.numberOfChildren > 0; };\n    Object.defineProperty(UrlSegmentGroup.prototype, \"numberOfChildren\", {\n        /** Number of child segments */\n        get: /**\n         * Number of child segments\n         * @return {?}\n         */\n        function () { return Object.keys(this.children).length; },\n        enumerable: true,\n        configurable: true\n    });\n    /** @docsNotRequired */\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    UrlSegmentGroup.prototype.toString = /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    function () { return serializePaths(this); };\n    return UrlSegmentGroup;\n}());\n/**\n * \\@whatItDoes Represents a single URL segment.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const tree: UrlTree = router.parseUrl('/team;id=33');\n *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n *     const s: UrlSegment[] = g.segments;\n *     s[0].path; // returns 'team'\n *     s[0].parameters; // returns {id: 33}\n *   }\n * }\n * ```\n *\n * \\@description\n *\n * A UrlSegment is a part of a URL between the two slashes. It contains a path and the matrix\n * parameters associated with the segment.\n *\n * \\@stable\n */\nvar UrlSegment = /** @class */ (function () {\n    function UrlSegment(path, parameters) {\n        this.path = path;\n        this.parameters = parameters;\n    }\n    Object.defineProperty(UrlSegment.prototype, \"parameterMap\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            if (!this._parameterMap) {\n                this._parameterMap = convertToParamMap(this.parameters);\n            }\n            return this._parameterMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @docsNotRequired */\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    UrlSegment.prototype.toString = /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    function () { return serializePath(this); };\n    return UrlSegment;\n}());\n/**\n * @param {?} as\n * @param {?} bs\n * @return {?}\n */\nfunction equalSegments(as, bs) {\n    return equalPath(as, bs) && as.every(function (a, i) { return shallowEqual(a.parameters, bs[i].parameters); });\n}\n/**\n * @param {?} as\n * @param {?} bs\n * @return {?}\n */\nfunction equalPath(as, bs) {\n    if (as.length !== bs.length)\n        return false;\n    return as.every(function (a, i) { return a.path === bs[i].path; });\n}\n/**\n * @template T\n * @param {?} segment\n * @param {?} fn\n * @return {?}\n */\nfunction mapChildrenIntoArray(segment, fn) {\n    var /** @type {?} */ res = [];\n    forEach(segment.children, function (child, childOutlet) {\n        if (childOutlet === PRIMARY_OUTLET) {\n            res = res.concat(fn(child, childOutlet));\n        }\n    });\n    forEach(segment.children, function (child, childOutlet) {\n        if (childOutlet !== PRIMARY_OUTLET) {\n            res = res.concat(fn(child, childOutlet));\n        }\n    });\n    return res;\n}\n/**\n * \\@whatItDoes Serializes and deserializes a URL string into a URL tree.\n *\n * \\@description The url serialization strategy is customizable. You can\n * make all URLs case insensitive by providing a custom UrlSerializer.\n *\n * See {\\@link DefaultUrlSerializer} for an example of a URL serializer.\n *\n * \\@stable\n * @abstract\n */\nvar UrlSerializer = /** @class */ (function () {\n    function UrlSerializer() {\n    }\n    return UrlSerializer;\n}());\n/**\n * \\@whatItDoes A default implementation of the {\\@link UrlSerializer}.\n *\n * \\@description\n *\n * Example URLs:\n *\n * ```\n * /inbox/33(popup:compose)\n * /inbox/33;open=true/messages/44\n * ```\n *\n * DefaultUrlSerializer uses parentheses to serialize secondary segments (e.g., popup:compose), the\n * colon syntax to specify the outlet, and the ';parameter=value' syntax (e.g., open=true) to\n * specify route specific parameters.\n *\n * \\@stable\n */\nvar DefaultUrlSerializer = /** @class */ (function () {\n    function DefaultUrlSerializer() {\n    }\n    /** Parses a url into a {@link UrlTree} */\n    /**\n     * Parses a url into a {\\@link UrlTree}\n     * @param {?} url\n     * @return {?}\n     */\n    DefaultUrlSerializer.prototype.parse = /**\n     * Parses a url into a {\\@link UrlTree}\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) {\n        var /** @type {?} */ p = new UrlParser(url);\n        return new UrlTree(p.parseRootSegment(), p.parseQueryParams(), p.parseFragment());\n    };\n    /** Converts a {@link UrlTree} into a url */\n    /**\n     * Converts a {\\@link UrlTree} into a url\n     * @param {?} tree\n     * @return {?}\n     */\n    DefaultUrlSerializer.prototype.serialize = /**\n     * Converts a {\\@link UrlTree} into a url\n     * @param {?} tree\n     * @return {?}\n     */\n    function (tree) {\n        var /** @type {?} */ segment = \"/\" + serializeSegment(tree.root, true);\n        var /** @type {?} */ query = serializeQueryParams(tree.queryParams);\n        var /** @type {?} */ fragment = typeof tree.fragment === \"string\" ? \"#\" + encodeUriFragment((/** @type {?} */ ((tree.fragment)))) : '';\n        return \"\" + segment + query + fragment;\n    };\n    return DefaultUrlSerializer;\n}());\nvar DEFAULT_SERIALIZER = new DefaultUrlSerializer();\n/**\n * @param {?} segment\n * @return {?}\n */\nfunction serializePaths(segment) {\n    return segment.segments.map(function (p) { return serializePath(p); }).join('/');\n}\n/**\n * @param {?} segment\n * @param {?} root\n * @return {?}\n */\nfunction serializeSegment(segment, root) {\n    if (!segment.hasChildren()) {\n        return serializePaths(segment);\n    }\n    if (root) {\n        var /** @type {?} */ primary = segment.children[PRIMARY_OUTLET] ?\n            serializeSegment(segment.children[PRIMARY_OUTLET], false) :\n            '';\n        var /** @type {?} */ children_1 = [];\n        forEach(segment.children, function (v, k) {\n            if (k !== PRIMARY_OUTLET) {\n                children_1.push(k + \":\" + serializeSegment(v, false));\n            }\n        });\n        return children_1.length > 0 ? primary + \"(\" + children_1.join('//') + \")\" : primary;\n    }\n    else {\n        var /** @type {?} */ children = mapChildrenIntoArray(segment, function (v, k) {\n            if (k === PRIMARY_OUTLET) {\n                return [serializeSegment(segment.children[PRIMARY_OUTLET], false)];\n            }\n            return [k + \":\" + serializeSegment(v, false)];\n        });\n        return serializePaths(segment) + \"/(\" + children.join('//') + \")\";\n    }\n}\n/**\n * Encodes a URI string with the default encoding. This function will only ever be called from\n * `encodeUriQuery` or `encodeUriSegment` as it's the base set of encodings to be used. We need\n * a custom encoding because encodeURIComponent is too aggressive and encodes stuff that doesn't\n * have to be encoded per https://url.spec.whatwg.org.\n * @param {?} s\n * @return {?}\n */\nfunction encodeUriString(s) {\n    return encodeURIComponent(s)\n        .replace(/%40/g, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/g, '$')\n        .replace(/%2C/gi, ',');\n}\n/**\n * This function should be used to encode both keys and values in a query string key/value. In\n * the following URL, you need to call encodeUriQuery on \"k\" and \"v\":\n *\n * http://www.site.org/html;mk=mv?k=v#f\n * @param {?} s\n * @return {?}\n */\nfunction encodeUriQuery(s) {\n    return encodeUriString(s).replace(/%3B/gi, ';');\n}\n/**\n * This function should be used to encode a URL fragment. In the following URL, you need to call\n * encodeUriFragment on \"f\":\n *\n * http://www.site.org/html;mk=mv?k=v#f\n * @param {?} s\n * @return {?}\n */\nfunction encodeUriFragment(s) {\n    return encodeURI(s);\n}\n/**\n * This function should be run on any URI segment as well as the key and value in a key/value\n * pair for matrix params. In the following URL, you need to call encodeUriSegment on \"html\",\n * \"mk\", and \"mv\":\n *\n * http://www.site.org/html;mk=mv?k=v#f\n * @param {?} s\n * @return {?}\n */\nfunction encodeUriSegment(s) {\n    return encodeUriString(s).replace(/\\(/g, '%28').replace(/\\)/g, '%29').replace(/%26/gi, '&');\n}\n/**\n * @param {?} s\n * @return {?}\n */\nfunction decode(s) {\n    return decodeURIComponent(s);\n}\n/**\n * @param {?} s\n * @return {?}\n */\nfunction decodeQuery(s) {\n    return decode(s.replace(/\\+/g, '%20'));\n}\n/**\n * @param {?} path\n * @return {?}\n */\nfunction serializePath(path) {\n    return \"\" + encodeUriSegment(path.path) + serializeMatrixParams(path.parameters);\n}\n/**\n * @param {?} params\n * @return {?}\n */\nfunction serializeMatrixParams(params) {\n    return Object.keys(params)\n        .map(function (key) { return \";\" + encodeUriSegment(key) + \"=\" + encodeUriSegment(params[key]); })\n        .join('');\n}\n/**\n * @param {?} params\n * @return {?}\n */\nfunction serializeQueryParams(params) {\n    var /** @type {?} */ strParams = Object.keys(params).map(function (name) {\n        var /** @type {?} */ value = params[name];\n        return Array.isArray(value) ?\n            value.map(function (v) { return encodeUriQuery(name) + \"=\" + encodeUriQuery(v); }).join('&') :\n            encodeUriQuery(name) + \"=\" + encodeUriQuery(value);\n    });\n    return strParams.length ? \"?\" + strParams.join(\"&\") : '';\n}\nvar SEGMENT_RE = /^[^\\/()?;=&#]+/;\n/**\n * @param {?} str\n * @return {?}\n */\nfunction matchSegments(str) {\n    var /** @type {?} */ match = str.match(SEGMENT_RE);\n    return match ? match[0] : '';\n}\nvar QUERY_PARAM_RE = /^[^=?&#]+/;\n/**\n * @param {?} str\n * @return {?}\n */\nfunction matchQueryParams(str) {\n    var /** @type {?} */ match = str.match(QUERY_PARAM_RE);\n    return match ? match[0] : '';\n}\nvar QUERY_PARAM_VALUE_RE = /^[^?&#]+/;\n/**\n * @param {?} str\n * @return {?}\n */\nfunction matchUrlQueryParamValue(str) {\n    var /** @type {?} */ match = str.match(QUERY_PARAM_VALUE_RE);\n    return match ? match[0] : '';\n}\nvar UrlParser = /** @class */ (function () {\n    function UrlParser(url) {\n        this.url = url;\n        this.remaining = url;\n    }\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseRootSegment = /**\n     * @return {?}\n     */\n    function () {\n        this.consumeOptional('/');\n        if (this.remaining === '' || this.peekStartsWith('?') || this.peekStartsWith('#')) {\n            return new UrlSegmentGroup([], {});\n        }\n        // The root segment group never has segments\n        return new UrlSegmentGroup([], this.parseChildren());\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseQueryParams = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ params = {};\n        if (this.consumeOptional('?')) {\n            do {\n                this.parseQueryParam(params);\n            } while (this.consumeOptional('&'));\n        }\n        return params;\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseFragment = /**\n     * @return {?}\n     */\n    function () {\n        return this.consumeOptional('#') ? decodeURIComponent(this.remaining) : null;\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseChildren = /**\n     * @return {?}\n     */\n    function () {\n        if (this.remaining === '') {\n            return {};\n        }\n        this.consumeOptional('/');\n        var /** @type {?} */ segments = [];\n        if (!this.peekStartsWith('(')) {\n            segments.push(this.parseSegment());\n        }\n        while (this.peekStartsWith('/') && !this.peekStartsWith('//') && !this.peekStartsWith('/(')) {\n            this.capture('/');\n            segments.push(this.parseSegment());\n        }\n        var /** @type {?} */ children = {};\n        if (this.peekStartsWith('/(')) {\n            this.capture('/');\n            children = this.parseParens(true);\n        }\n        var /** @type {?} */ res = {};\n        if (this.peekStartsWith('(')) {\n            res = this.parseParens(false);\n        }\n        if (segments.length > 0 || Object.keys(children).length > 0) {\n            res[PRIMARY_OUTLET] = new UrlSegmentGroup(segments, children);\n        }\n        return res;\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseSegment = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ path = matchSegments(this.remaining);\n        if (path === '' && this.peekStartsWith(';')) {\n            throw new Error(\"Empty path url segment cannot have parameters: '\" + this.remaining + \"'.\");\n        }\n        this.capture(path);\n        return new UrlSegment(decode(path), this.parseMatrixParams());\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseMatrixParams = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ params = {};\n        while (this.consumeOptional(';')) {\n            this.parseParam(params);\n        }\n        return params;\n    };\n    /**\n     * @param {?} params\n     * @return {?}\n     */\n    UrlParser.prototype.parseParam = /**\n     * @param {?} params\n     * @return {?}\n     */\n    function (params) {\n        var /** @type {?} */ key = matchSegments(this.remaining);\n        if (!key) {\n            return;\n        }\n        this.capture(key);\n        var /** @type {?} */ value = '';\n        if (this.consumeOptional('=')) {\n            var /** @type {?} */ valueMatch = matchSegments(this.remaining);\n            if (valueMatch) {\n                value = valueMatch;\n                this.capture(value);\n            }\n        }\n        params[decode(key)] = decode(value);\n    };\n    /**\n     * @param {?} params\n     * @return {?}\n     */\n    UrlParser.prototype.parseQueryParam = /**\n     * @param {?} params\n     * @return {?}\n     */\n    function (params) {\n        var /** @type {?} */ key = matchQueryParams(this.remaining);\n        if (!key) {\n            return;\n        }\n        this.capture(key);\n        var /** @type {?} */ value = '';\n        if (this.consumeOptional('=')) {\n            var /** @type {?} */ valueMatch = matchUrlQueryParamValue(this.remaining);\n            if (valueMatch) {\n                value = valueMatch;\n                this.capture(value);\n            }\n        }\n        var /** @type {?} */ decodedKey = decodeQuery(key);\n        var /** @type {?} */ decodedVal = decodeQuery(value);\n        if (params.hasOwnProperty(decodedKey)) {\n            // Append to existing values\n            var /** @type {?} */ currentVal = params[decodedKey];\n            if (!Array.isArray(currentVal)) {\n                currentVal = [currentVal];\n                params[decodedKey] = currentVal;\n            }\n            currentVal.push(decodedVal);\n        }\n        else {\n            // Create a new value\n            params[decodedKey] = decodedVal;\n        }\n    };\n    /**\n     * @param {?} allowPrimary\n     * @return {?}\n     */\n    UrlParser.prototype.parseParens = /**\n     * @param {?} allowPrimary\n     * @return {?}\n     */\n    function (allowPrimary) {\n        var /** @type {?} */ segments = {};\n        this.capture('(');\n        while (!this.consumeOptional(')') && this.remaining.length > 0) {\n            var /** @type {?} */ path = matchSegments(this.remaining);\n            var /** @type {?} */ next = this.remaining[path.length];\n            // if is is not one of these characters, then the segment was unescaped\n            // or the group was not closed\n            if (next !== '/' && next !== ')' && next !== ';') {\n                throw new Error(\"Cannot parse url '\" + this.url + \"'\");\n            }\n            var /** @type {?} */ outletName = /** @type {?} */ ((undefined));\n            if (path.indexOf(':') > -1) {\n                outletName = path.substr(0, path.indexOf(':'));\n                this.capture(outletName);\n                this.capture(':');\n            }\n            else if (allowPrimary) {\n                outletName = PRIMARY_OUTLET;\n            }\n            var /** @type {?} */ children = this.parseChildren();\n            segments[outletName] = Object.keys(children).length === 1 ? children[PRIMARY_OUTLET] :\n                new UrlSegmentGroup([], children);\n            this.consumeOptional('//');\n        }\n        return segments;\n    };\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    UrlParser.prototype.peekStartsWith = /**\n     * @param {?} str\n     * @return {?}\n     */\n    function (str) { return this.remaining.startsWith(str); };\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    UrlParser.prototype.consumeOptional = /**\n     * @param {?} str\n     * @return {?}\n     */\n    function (str) {\n        if (this.peekStartsWith(str)) {\n            this.remaining = this.remaining.substring(str.length);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    UrlParser.prototype.capture = /**\n     * @param {?} str\n     * @return {?}\n     */\n    function (str) {\n        if (!this.consumeOptional(str)) {\n            throw new Error(\"Expected \\\"\" + str + \"\\\".\");\n        }\n    };\n    return UrlParser;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NoMatch = /** @class */ (function () {\n    function NoMatch(segmentGroup) {\n        this.segmentGroup = segmentGroup || null;\n    }\n    return NoMatch;\n}());\nvar AbsoluteRedirect = /** @class */ (function () {\n    function AbsoluteRedirect(urlTree) {\n        this.urlTree = urlTree;\n    }\n    return AbsoluteRedirect;\n}());\n/**\n * @param {?} segmentGroup\n * @return {?}\n */\nfunction noMatch(segmentGroup) {\n    return new rxjs_Observable.Observable(function (obs) { return obs.error(new NoMatch(segmentGroup)); });\n}\n/**\n * @param {?} newTree\n * @return {?}\n */\nfunction absoluteRedirect(newTree) {\n    return new rxjs_Observable.Observable(function (obs) { return obs.error(new AbsoluteRedirect(newTree)); });\n}\n/**\n * @param {?} redirectTo\n * @return {?}\n */\nfunction namedOutletsRedirect(redirectTo) {\n    return new rxjs_Observable.Observable(function (obs) {\n        return obs.error(new Error(\"Only absolute redirects can have named outlets. redirectTo: '\" + redirectTo + \"'\"));\n    });\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction canLoadFails(route) {\n    return new rxjs_Observable.Observable(function (obs) {\n        return obs.error(navigationCancelingError(\"Cannot load children because the guard of the route \\\"path: '\" + route.path + \"'\\\" returned false\"));\n    });\n}\n/**\n * Returns the `UrlTree` with the redirection applied.\n *\n * Lazy modules are loaded along the way.\n * @param {?} moduleInjector\n * @param {?} configLoader\n * @param {?} urlSerializer\n * @param {?} urlTree\n * @param {?} config\n * @return {?}\n */\nfunction applyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config) {\n    return new ApplyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config).apply();\n}\nvar ApplyRedirects = /** @class */ (function () {\n    function ApplyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config) {\n        this.configLoader = configLoader;\n        this.urlSerializer = urlSerializer;\n        this.urlTree = urlTree;\n        this.config = config;\n        this.allowRedirects = true;\n        this.ngModule = moduleInjector.get(_angular_core.NgModuleRef);\n    }\n    /**\n     * @return {?}\n     */\n    ApplyRedirects.prototype.apply = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ expanded$ = this.expandSegmentGroup(this.ngModule, this.config, this.urlTree.root, PRIMARY_OUTLET);\n        var /** @type {?} */ urlTrees$ = rxjs_operator_map.map.call(expanded$, function (rootSegmentGroup) {\n            return _this.createUrlTree(rootSegmentGroup, _this.urlTree.queryParams, /** @type {?} */ ((_this.urlTree.fragment)));\n        });\n        return rxjs_operator_catch._catch.call(urlTrees$, function (e) {\n            if (e instanceof AbsoluteRedirect) {\n                // after an absolute redirect we do not apply any more redirects!\n                // after an absolute redirect we do not apply any more redirects!\n                _this.allowRedirects = false;\n                // we need to run matching, so we can fetch all lazy-loaded modules\n                return _this.match(e.urlTree);\n            }\n            if (e instanceof NoMatch) {\n                throw _this.noMatchError(e);\n            }\n            throw e;\n        });\n    };\n    /**\n     * @param {?} tree\n     * @return {?}\n     */\n    ApplyRedirects.prototype.match = /**\n     * @param {?} tree\n     * @return {?}\n     */\n    function (tree) {\n        var _this = this;\n        var /** @type {?} */ expanded$ = this.expandSegmentGroup(this.ngModule, this.config, tree.root, PRIMARY_OUTLET);\n        var /** @type {?} */ mapped$ = rxjs_operator_map.map.call(expanded$, function (rootSegmentGroup) {\n            return _this.createUrlTree(rootSegmentGroup, tree.queryParams, /** @type {?} */ ((tree.fragment)));\n        });\n        return rxjs_operator_catch._catch.call(mapped$, function (e) {\n            if (e instanceof NoMatch) {\n                throw _this.noMatchError(e);\n            }\n            throw e;\n        });\n    };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ApplyRedirects.prototype.noMatchError = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return new Error(\"Cannot match any routes. URL Segment: '\" + e.segmentGroup + \"'\");\n    };\n    /**\n     * @param {?} rootCandidate\n     * @param {?} queryParams\n     * @param {?} fragment\n     * @return {?}\n     */\n    ApplyRedirects.prototype.createUrlTree = /**\n     * @param {?} rootCandidate\n     * @param {?} queryParams\n     * @param {?} fragment\n     * @return {?}\n     */\n    function (rootCandidate, queryParams, fragment) {\n        var /** @type {?} */ root = rootCandidate.segments.length > 0 ?\n            new UrlSegmentGroup([], (_a = {}, _a[PRIMARY_OUTLET] = rootCandidate, _a)) :\n            rootCandidate;\n        return new UrlTree(root, queryParams, fragment);\n        var _a;\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @param {?} segmentGroup\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandSegmentGroup = /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @param {?} segmentGroup\n     * @param {?} outlet\n     * @return {?}\n     */\n    function (ngModule, routes, segmentGroup, outlet) {\n        if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n            return rxjs_operator_map.map.call(this.expandChildren(ngModule, routes, segmentGroup), function (children) { return new UrlSegmentGroup([], children); });\n        }\n        return this.expandSegment(ngModule, segmentGroup, routes, segmentGroup.segments, outlet, true);\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @param {?} segmentGroup\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandChildren = /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @param {?} segmentGroup\n     * @return {?}\n     */\n    function (ngModule, routes, segmentGroup) {\n        var _this = this;\n        return waitForMap(segmentGroup.children, function (childOutlet, child) { return _this.expandSegmentGroup(ngModule, routes, child, childOutlet); });\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} segments\n     * @param {?} outlet\n     * @param {?} allowRedirects\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandSegment = /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} segments\n     * @param {?} outlet\n     * @param {?} allowRedirects\n     * @return {?}\n     */\n    function (ngModule, segmentGroup, routes, segments, outlet, allowRedirects) {\n        var _this = this;\n        var /** @type {?} */ routes$ = rxjs_observable_of.of.apply(void 0, routes);\n        var /** @type {?} */ processedRoutes$ = rxjs_operator_map.map.call(routes$, function (r) {\n            var /** @type {?} */ expanded$ = _this.expandSegmentAgainstRoute(ngModule, segmentGroup, routes, r, segments, outlet, allowRedirects);\n            return rxjs_operator_catch._catch.call(expanded$, function (e) {\n                if (e instanceof NoMatch) {\n                    return rxjs_observable_of.of(null);\n                }\n                throw e;\n            });\n        });\n        var /** @type {?} */ concattedProcessedRoutes$ = rxjs_operator_concatAll.concatAll.call(processedRoutes$);\n        var /** @type {?} */ first$ = rxjs_operator_first.first.call(concattedProcessedRoutes$, function (s) { return !!s; });\n        return rxjs_operator_catch._catch.call(first$, function (e, _) {\n            if (e instanceof rxjs_util_EmptyError.EmptyError || e.name === 'EmptyError') {\n                if (_this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n                    return rxjs_observable_of.of(new UrlSegmentGroup([], {}));\n                }\n                throw new NoMatch(segmentGroup);\n            }\n            throw e;\n        });\n    };\n    /**\n     * @param {?} segmentGroup\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.noLeftoversInUrl = /**\n     * @param {?} segmentGroup\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    function (segmentGroup, segments, outlet) {\n        return segments.length === 0 && !segmentGroup.children[outlet];\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} paths\n     * @param {?} outlet\n     * @param {?} allowRedirects\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandSegmentAgainstRoute = /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} paths\n     * @param {?} outlet\n     * @param {?} allowRedirects\n     * @return {?}\n     */\n    function (ngModule, segmentGroup, routes, route, paths, outlet, allowRedirects) {\n        if (getOutlet(route) !== outlet) {\n            return noMatch(segmentGroup);\n        }\n        if (route.redirectTo === undefined) {\n            return this.matchSegmentAgainstRoute(ngModule, segmentGroup, route, paths);\n        }\n        if (allowRedirects && this.allowRedirects) {\n            return this.expandSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, paths, outlet);\n        }\n        return noMatch(segmentGroup);\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandSegmentAgainstRouteUsingRedirect = /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    function (ngModule, segmentGroup, routes, route, segments, outlet) {\n        if (route.path === '**') {\n            return this.expandWildCardWithParamsAgainstRouteUsingRedirect(ngModule, routes, route, outlet);\n        }\n        return this.expandRegularSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, segments, outlet);\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandWildCardWithParamsAgainstRouteUsingRedirect = /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} outlet\n     * @return {?}\n     */\n    function (ngModule, routes, route, outlet) {\n        var _this = this;\n        var /** @type {?} */ newTree = this.applyRedirectCommands([], /** @type {?} */ ((route.redirectTo)), {});\n        if (/** @type {?} */ ((route.redirectTo)).startsWith('/')) {\n            return absoluteRedirect(newTree);\n        }\n        return rxjs_operator_mergeMap.mergeMap.call(this.lineralizeSegments(route, newTree), function (newSegments) {\n            var /** @type {?} */ group = new UrlSegmentGroup(newSegments, {});\n            return _this.expandSegment(ngModule, group, routes, newSegments, outlet, false);\n        });\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandRegularSegmentAgainstRouteUsingRedirect = /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    function (ngModule, segmentGroup, routes, route, segments, outlet) {\n        var _this = this;\n        var _a = match(segmentGroup, route, segments), matched = _a.matched, consumedSegments = _a.consumedSegments, lastChild = _a.lastChild, positionalParamSegments = _a.positionalParamSegments;\n        if (!matched)\n            return noMatch(segmentGroup);\n        var /** @type {?} */ newTree = this.applyRedirectCommands(consumedSegments, /** @type {?} */ ((route.redirectTo)), /** @type {?} */ (positionalParamSegments));\n        if (/** @type {?} */ ((route.redirectTo)).startsWith('/')) {\n            return absoluteRedirect(newTree);\n        }\n        return rxjs_operator_mergeMap.mergeMap.call(this.lineralizeSegments(route, newTree), function (newSegments) {\n            return _this.expandSegment(ngModule, segmentGroup, routes, newSegments.concat(segments.slice(lastChild)), outlet, false);\n        });\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} rawSegmentGroup\n     * @param {?} route\n     * @param {?} segments\n     * @return {?}\n     */\n    ApplyRedirects.prototype.matchSegmentAgainstRoute = /**\n     * @param {?} ngModule\n     * @param {?} rawSegmentGroup\n     * @param {?} route\n     * @param {?} segments\n     * @return {?}\n     */\n    function (ngModule, rawSegmentGroup, route, segments) {\n        var _this = this;\n        if (route.path === '**') {\n            if (route.loadChildren) {\n                return rxjs_operator_map.map.call(this.configLoader.load(ngModule.injector, route), function (cfg) {\n                    route._loadedConfig = cfg;\n                    return new UrlSegmentGroup(segments, {});\n                });\n            }\n            return rxjs_observable_of.of(new UrlSegmentGroup(segments, {}));\n        }\n        var _a = match(rawSegmentGroup, route, segments), matched = _a.matched, consumedSegments = _a.consumedSegments, lastChild = _a.lastChild;\n        if (!matched)\n            return noMatch(rawSegmentGroup);\n        var /** @type {?} */ rawSlicedSegments = segments.slice(lastChild);\n        var /** @type {?} */ childConfig$ = this.getChildConfig(ngModule, route);\n        return rxjs_operator_mergeMap.mergeMap.call(childConfig$, function (routerConfig) {\n            var /** @type {?} */ childModule = routerConfig.module;\n            var /** @type {?} */ childConfig = routerConfig.routes;\n            var _a = split(rawSegmentGroup, consumedSegments, rawSlicedSegments, childConfig), segmentGroup = _a.segmentGroup, slicedSegments = _a.slicedSegments;\n            if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n                var /** @type {?} */ expanded$_1 = _this.expandChildren(childModule, childConfig, segmentGroup);\n                return rxjs_operator_map.map.call(expanded$_1, function (children) { return new UrlSegmentGroup(consumedSegments, children); });\n            }\n            if (childConfig.length === 0 && slicedSegments.length === 0) {\n                return rxjs_observable_of.of(new UrlSegmentGroup(consumedSegments, {}));\n            }\n            var /** @type {?} */ expanded$ = _this.expandSegment(childModule, segmentGroup, childConfig, slicedSegments, PRIMARY_OUTLET, true);\n            return rxjs_operator_map.map.call(expanded$, function (cs) {\n                return new UrlSegmentGroup(consumedSegments.concat(cs.segments), cs.children);\n            });\n        });\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} route\n     * @return {?}\n     */\n    ApplyRedirects.prototype.getChildConfig = /**\n     * @param {?} ngModule\n     * @param {?} route\n     * @return {?}\n     */\n    function (ngModule, route) {\n        var _this = this;\n        if (route.children) {\n            // The children belong to the same module\n            return rxjs_observable_of.of(new LoadedRouterConfig(route.children, ngModule));\n        }\n        if (route.loadChildren) {\n            // lazy children belong to the loaded module\n            if (route._loadedConfig !== undefined) {\n                return rxjs_observable_of.of(route._loadedConfig);\n            }\n            return rxjs_operator_mergeMap.mergeMap.call(runCanLoadGuard(ngModule.injector, route), function (shouldLoad) {\n                if (shouldLoad) {\n                    return rxjs_operator_map.map.call(_this.configLoader.load(ngModule.injector, route), function (cfg) {\n                        route._loadedConfig = cfg;\n                        return cfg;\n                    });\n                }\n                return canLoadFails(route);\n            });\n        }\n        return rxjs_observable_of.of(new LoadedRouterConfig([], ngModule));\n    };\n    /**\n     * @param {?} route\n     * @param {?} urlTree\n     * @return {?}\n     */\n    ApplyRedirects.prototype.lineralizeSegments = /**\n     * @param {?} route\n     * @param {?} urlTree\n     * @return {?}\n     */\n    function (route, urlTree) {\n        var /** @type {?} */ res = [];\n        var /** @type {?} */ c = urlTree.root;\n        while (true) {\n            res = res.concat(c.segments);\n            if (c.numberOfChildren === 0) {\n                return rxjs_observable_of.of(res);\n            }\n            if (c.numberOfChildren > 1 || !c.children[PRIMARY_OUTLET]) {\n                return namedOutletsRedirect(/** @type {?} */ ((route.redirectTo)));\n            }\n            c = c.children[PRIMARY_OUTLET];\n        }\n    };\n    /**\n     * @param {?} segments\n     * @param {?} redirectTo\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.applyRedirectCommands = /**\n     * @param {?} segments\n     * @param {?} redirectTo\n     * @param {?} posParams\n     * @return {?}\n     */\n    function (segments, redirectTo, posParams) {\n        return this.applyRedirectCreatreUrlTree(redirectTo, this.urlSerializer.parse(redirectTo), segments, posParams);\n    };\n    /**\n     * @param {?} redirectTo\n     * @param {?} urlTree\n     * @param {?} segments\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.applyRedirectCreatreUrlTree = /**\n     * @param {?} redirectTo\n     * @param {?} urlTree\n     * @param {?} segments\n     * @param {?} posParams\n     * @return {?}\n     */\n    function (redirectTo, urlTree, segments, posParams) {\n        var /** @type {?} */ newRoot = this.createSegmentGroup(redirectTo, urlTree.root, segments, posParams);\n        return new UrlTree(newRoot, this.createQueryParams(urlTree.queryParams, this.urlTree.queryParams), urlTree.fragment);\n    };\n    /**\n     * @param {?} redirectToParams\n     * @param {?} actualParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.createQueryParams = /**\n     * @param {?} redirectToParams\n     * @param {?} actualParams\n     * @return {?}\n     */\n    function (redirectToParams, actualParams) {\n        var /** @type {?} */ res = {};\n        forEach(redirectToParams, function (v, k) {\n            var /** @type {?} */ copySourceValue = typeof v === 'string' && v.startsWith(':');\n            if (copySourceValue) {\n                var /** @type {?} */ sourceName = v.substring(1);\n                res[k] = actualParams[sourceName];\n            }\n            else {\n                res[k] = v;\n            }\n        });\n        return res;\n    };\n    /**\n     * @param {?} redirectTo\n     * @param {?} group\n     * @param {?} segments\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.createSegmentGroup = /**\n     * @param {?} redirectTo\n     * @param {?} group\n     * @param {?} segments\n     * @param {?} posParams\n     * @return {?}\n     */\n    function (redirectTo, group, segments, posParams) {\n        var _this = this;\n        var /** @type {?} */ updatedSegments = this.createSegments(redirectTo, group.segments, segments, posParams);\n        var /** @type {?} */ children = {};\n        forEach(group.children, function (child, name) {\n            children[name] = _this.createSegmentGroup(redirectTo, child, segments, posParams);\n        });\n        return new UrlSegmentGroup(updatedSegments, children);\n    };\n    /**\n     * @param {?} redirectTo\n     * @param {?} redirectToSegments\n     * @param {?} actualSegments\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.createSegments = /**\n     * @param {?} redirectTo\n     * @param {?} redirectToSegments\n     * @param {?} actualSegments\n     * @param {?} posParams\n     * @return {?}\n     */\n    function (redirectTo, redirectToSegments, actualSegments, posParams) {\n        var _this = this;\n        return redirectToSegments.map(function (s) {\n            return s.path.startsWith(':') ? _this.findPosParam(redirectTo, s, posParams) :\n                _this.findOrReturn(s, actualSegments);\n        });\n    };\n    /**\n     * @param {?} redirectTo\n     * @param {?} redirectToUrlSegment\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.findPosParam = /**\n     * @param {?} redirectTo\n     * @param {?} redirectToUrlSegment\n     * @param {?} posParams\n     * @return {?}\n     */\n    function (redirectTo, redirectToUrlSegment, posParams) {\n        var /** @type {?} */ pos = posParams[redirectToUrlSegment.path.substring(1)];\n        if (!pos)\n            throw new Error(\"Cannot redirect to '\" + redirectTo + \"'. Cannot find '\" + redirectToUrlSegment.path + \"'.\");\n        return pos;\n    };\n    /**\n     * @param {?} redirectToUrlSegment\n     * @param {?} actualSegments\n     * @return {?}\n     */\n    ApplyRedirects.prototype.findOrReturn = /**\n     * @param {?} redirectToUrlSegment\n     * @param {?} actualSegments\n     * @return {?}\n     */\n    function (redirectToUrlSegment, actualSegments) {\n        var /** @type {?} */ idx = 0;\n        for (var _i = 0, actualSegments_1 = actualSegments; _i < actualSegments_1.length; _i++) {\n            var s = actualSegments_1[_i];\n            if (s.path === redirectToUrlSegment.path) {\n                actualSegments.splice(idx);\n                return s;\n            }\n            idx++;\n        }\n        return redirectToUrlSegment;\n    };\n    return ApplyRedirects;\n}());\n/**\n * @param {?} moduleInjector\n * @param {?} route\n * @return {?}\n */\nfunction runCanLoadGuard(moduleInjector, route) {\n    var /** @type {?} */ canLoad = route.canLoad;\n    if (!canLoad || canLoad.length === 0)\n        return rxjs_observable_of.of(true);\n    var /** @type {?} */ obs = rxjs_operator_map.map.call(rxjs_observable_from.from(canLoad), function (injectionToken) {\n        var /** @type {?} */ guard = moduleInjector.get(injectionToken);\n        return wrapIntoObservable(guard.canLoad ? guard.canLoad(route) : guard(route));\n    });\n    return andObservables(obs);\n}\n/**\n * @param {?} segmentGroup\n * @param {?} route\n * @param {?} segments\n * @return {?}\n */\nfunction match(segmentGroup, route, segments) {\n    if (route.path === '') {\n        if ((route.pathMatch === 'full') && (segmentGroup.hasChildren() || segments.length > 0)) {\n            return { matched: false, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n        }\n        return { matched: true, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n    }\n    var /** @type {?} */ matcher = route.matcher || defaultUrlMatcher;\n    var /** @type {?} */ res = matcher(segments, segmentGroup, route);\n    if (!res) {\n        return {\n            matched: false,\n            consumedSegments: /** @type {?} */ ([]),\n            lastChild: 0,\n            positionalParamSegments: {},\n        };\n    }\n    return {\n        matched: true,\n        consumedSegments: /** @type {?} */ ((res.consumed)),\n        lastChild: /** @type {?} */ ((res.consumed.length)),\n        positionalParamSegments: /** @type {?} */ ((res.posParams)),\n    };\n}\n/**\n * @param {?} segmentGroup\n * @param {?} consumedSegments\n * @param {?} slicedSegments\n * @param {?} config\n * @return {?}\n */\nfunction split(segmentGroup, consumedSegments, slicedSegments, config) {\n    if (slicedSegments.length > 0 &&\n        containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n        var /** @type {?} */ s = new UrlSegmentGroup(consumedSegments, createChildrenForEmptySegments(config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n        return { segmentGroup: mergeTrivialChildren(s), slicedSegments: [] };\n    }\n    if (slicedSegments.length === 0 &&\n        containsEmptyPathRedirects(segmentGroup, slicedSegments, config)) {\n        var /** @type {?} */ s = new UrlSegmentGroup(segmentGroup.segments, addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, config, segmentGroup.children));\n        return { segmentGroup: mergeTrivialChildren(s), slicedSegments: slicedSegments };\n    }\n    return { segmentGroup: segmentGroup, slicedSegments: slicedSegments };\n}\n/**\n * @param {?} s\n * @return {?}\n */\nfunction mergeTrivialChildren(s) {\n    if (s.numberOfChildren === 1 && s.children[PRIMARY_OUTLET]) {\n        var /** @type {?} */ c = s.children[PRIMARY_OUTLET];\n        return new UrlSegmentGroup(s.segments.concat(c.segments), c.children);\n    }\n    return s;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} routes\n * @param {?} children\n * @return {?}\n */\nfunction addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, routes, children) {\n    var /** @type {?} */ res = {};\n    for (var _i = 0, routes_1 = routes; _i < routes_1.length; _i++) {\n        var r = routes_1[_i];\n        if (isEmptyPathRedirect(segmentGroup, slicedSegments, r) && !children[getOutlet(r)]) {\n            res[getOutlet(r)] = new UrlSegmentGroup([], {});\n        }\n    }\n    return __assign({}, children, res);\n}\n/**\n * @param {?} routes\n * @param {?} primarySegmentGroup\n * @return {?}\n */\nfunction createChildrenForEmptySegments(routes, primarySegmentGroup) {\n    var /** @type {?} */ res = {};\n    res[PRIMARY_OUTLET] = primarySegmentGroup;\n    for (var _i = 0, routes_2 = routes; _i < routes_2.length; _i++) {\n        var r = routes_2[_i];\n        if (r.path === '' && getOutlet(r) !== PRIMARY_OUTLET) {\n            res[getOutlet(r)] = new UrlSegmentGroup([], {});\n        }\n    }\n    return res;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} segments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, segments, routes) {\n    return routes.some(function (r) { return isEmptyPathRedirect(segmentGroup, segments, r) && getOutlet(r) !== PRIMARY_OUTLET; });\n}\n/**\n * @param {?} segmentGroup\n * @param {?} segments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathRedirects(segmentGroup, segments, routes) {\n    return routes.some(function (r) { return isEmptyPathRedirect(segmentGroup, segments, r); });\n}\n/**\n * @param {?} segmentGroup\n * @param {?} segments\n * @param {?} r\n * @return {?}\n */\nfunction isEmptyPathRedirect(segmentGroup, segments, r) {\n    if ((segmentGroup.hasChildren() || segments.length > 0) && r.pathMatch === 'full') {\n        return false;\n    }\n    return r.path === '' && r.redirectTo !== undefined;\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getOutlet(route) {\n    return route.outlet || PRIMARY_OUTLET;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @template T\n */\nvar Tree = /** @class */ (function () {\n    function Tree(root) {\n        this._root = root;\n    }\n    Object.defineProperty(Tree.prototype, \"root\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._root.value; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @internal\n     */\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.parent = /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    function (t) {\n        var /** @type {?} */ p = this.pathFromRoot(t);\n        return p.length > 1 ? p[p.length - 2] : null;\n    };\n    /**\n     * @internal\n     */\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.children = /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    function (t) {\n        var /** @type {?} */ n = findNode(t, this._root);\n        return n ? n.children.map(function (t) { return t.value; }) : [];\n    };\n    /**\n     * @internal\n     */\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.firstChild = /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    function (t) {\n        var /** @type {?} */ n = findNode(t, this._root);\n        return n && n.children.length > 0 ? n.children[0].value : null;\n    };\n    /**\n     * @internal\n     */\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.siblings = /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    function (t) {\n        var /** @type {?} */ p = findPath(t, this._root);\n        if (p.length < 2)\n            return [];\n        var /** @type {?} */ c = p[p.length - 2].children.map(function (c) { return c.value; });\n        return c.filter(function (cc) { return cc !== t; });\n    };\n    /**\n     * @internal\n     */\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.pathFromRoot = /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    function (t) { return findPath(t, this._root).map(function (s) { return s.value; }); };\n    return Tree;\n}());\n/**\n * @template T\n * @param {?} value\n * @param {?} node\n * @return {?}\n */\nfunction findNode(value, node) {\n    if (value === node.value)\n        return node;\n    for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n        var child = _a[_i];\n        var /** @type {?} */ node_1 = findNode(value, child);\n        if (node_1)\n            return node_1;\n    }\n    return null;\n}\n/**\n * @template T\n * @param {?} value\n * @param {?} node\n * @return {?}\n */\nfunction findPath(value, node) {\n    if (value === node.value)\n        return [node];\n    for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n        var child = _a[_i];\n        var /** @type {?} */ path = findPath(value, child);\n        if (path.length) {\n            path.unshift(node);\n            return path;\n        }\n    }\n    return [];\n}\n/**\n * @template T\n */\nvar TreeNode = /** @class */ (function () {\n    function TreeNode(value, children) {\n        this.value = value;\n        this.children = children;\n    }\n    /**\n     * @return {?}\n     */\n    TreeNode.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return \"TreeNode(\" + this.value + \")\"; };\n    return TreeNode;\n}());\n/**\n * @template T\n * @param {?} node\n * @return {?}\n */\nfunction nodeChildrenAsMap(node) {\n    var /** @type {?} */ map$$1 = {};\n    if (node) {\n        node.children.forEach(function (child) { return map$$1[child.value.outlet] = child; });\n    }\n    return map$$1;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Represents the state of the router.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const state: RouterState = router.routerState;\n *     const root: ActivatedRoute = state.root;\n *     const child = root.firstChild;\n *     const id: Observable<string> = child.params.map(p => p.id);\n *     //...\n *   }\n * }\n * ```\n *\n * \\@description\n * RouterState is a tree of activated routes. Every node in this tree knows about the \"consumed\" URL\n * segments, the extracted parameters, and the resolved data.\n *\n * See {\\@link ActivatedRoute} for more information.\n *\n * \\@stable\n */\nvar RouterState = /** @class */ (function (_super) {\n    __extends(RouterState, _super);\n    /** @internal */\n    function RouterState(root, snapshot) {\n        var _this = _super.call(this, root) || this;\n        _this.snapshot = snapshot;\n        setRouterState(/** @type {?} */ (_this), root);\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    RouterState.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return this.snapshot.toString(); };\n    return RouterState;\n}(Tree));\n/**\n * @param {?} urlTree\n * @param {?} rootComponent\n * @return {?}\n */\nfunction createEmptyState(urlTree, rootComponent) {\n    var /** @type {?} */ snapshot = createEmptyStateSnapshot(urlTree, rootComponent);\n    var /** @type {?} */ emptyUrl = new rxjs_BehaviorSubject.BehaviorSubject([new UrlSegment('', {})]);\n    var /** @type {?} */ emptyParams = new rxjs_BehaviorSubject.BehaviorSubject({});\n    var /** @type {?} */ emptyData = new rxjs_BehaviorSubject.BehaviorSubject({});\n    var /** @type {?} */ emptyQueryParams = new rxjs_BehaviorSubject.BehaviorSubject({});\n    var /** @type {?} */ fragment = new rxjs_BehaviorSubject.BehaviorSubject('');\n    var /** @type {?} */ activated = new ActivatedRoute(emptyUrl, emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, snapshot.root);\n    activated.snapshot = snapshot.root;\n    return new RouterState(new TreeNode(activated, []), snapshot);\n}\n/**\n * @param {?} urlTree\n * @param {?} rootComponent\n * @return {?}\n */\nfunction createEmptyStateSnapshot(urlTree, rootComponent) {\n    var /** @type {?} */ emptyParams = {};\n    var /** @type {?} */ emptyData = {};\n    var /** @type {?} */ emptyQueryParams = {};\n    var /** @type {?} */ fragment = '';\n    var /** @type {?} */ activated = new ActivatedRouteSnapshot([], emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, null, urlTree.root, -1, {});\n    return new RouterStateSnapshot('', new TreeNode(activated, []));\n}\n/**\n * \\@whatItDoes Contains the information about a route associated with a component loaded in an\n * outlet.\n * An `ActivatedRoute` can also be used to traverse the router state tree.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({...})\n * class MyComponent {\n *   constructor(route: ActivatedRoute) {\n *     const id: Observable<string> = route.params.map(p => p.id);\n *     const url: Observable<string> = route.url.map(segments => segments.join(''));\n *     // route.data includes both `data` and `resolve`\n *     const user = route.data.map(d => d.user);\n *   }\n * }\n * ```\n *\n * \\@stable\n */\nvar ActivatedRoute = /** @class */ (function () {\n    /** @internal */\n    function ActivatedRoute(url, params, queryParams, fragment, data, outlet, component, futureSnapshot) {\n        this.url = url;\n        this.params = params;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n        this.data = data;\n        this.outlet = outlet;\n        this.component = component;\n        this._futureSnapshot = futureSnapshot;\n    }\n    Object.defineProperty(ActivatedRoute.prototype, \"routeConfig\", {\n        /** The configuration used to match this route */\n        get: /**\n         * The configuration used to match this route\n         * @return {?}\n         */\n        function () { return this._futureSnapshot.routeConfig; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"root\", {\n        /** The root of the router state */\n        get: /**\n         * The root of the router state\n         * @return {?}\n         */\n        function () { return this._routerState.root; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"parent\", {\n        /** The parent of this route in the router state tree */\n        get: /**\n         * The parent of this route in the router state tree\n         * @return {?}\n         */\n        function () { return this._routerState.parent(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"firstChild\", {\n        /** The first child of this route in the router state tree */\n        get: /**\n         * The first child of this route in the router state tree\n         * @return {?}\n         */\n        function () { return this._routerState.firstChild(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"children\", {\n        /** The children of this route in the router state tree */\n        get: /**\n         * The children of this route in the router state tree\n         * @return {?}\n         */\n        function () { return this._routerState.children(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"pathFromRoot\", {\n        /** The path from the root of the router state tree to this route */\n        get: /**\n         * The path from the root of the router state tree to this route\n         * @return {?}\n         */\n        function () { return this._routerState.pathFromRoot(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"paramMap\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            if (!this._paramMap) {\n                this._paramMap = rxjs_operator_map.map.call(this.params, function (p) { return convertToParamMap(p); });\n            }\n            return this._paramMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"queryParamMap\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            if (!this._queryParamMap) {\n                this._queryParamMap =\n                    rxjs_operator_map.map.call(this.queryParams, function (p) { return convertToParamMap(p); });\n            }\n            return this._queryParamMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ActivatedRoute.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        return this.snapshot ? this.snapshot.toString() : \"Future(\" + this._futureSnapshot + \")\";\n    };\n    return ActivatedRoute;\n}());\n/**\n * Returns the inherited params, data, and resolve for a given route.\n * By default, this only inherits values up to the nearest path-less or component-less route.\n * \\@internal\n * @param {?} route\n * @param {?=} paramsInheritanceStrategy\n * @return {?}\n */\nfunction inheritedParamsDataResolve(route, paramsInheritanceStrategy) {\n    if (paramsInheritanceStrategy === void 0) { paramsInheritanceStrategy = 'emptyOnly'; }\n    var /** @type {?} */ pathFromRoot = route.pathFromRoot;\n    var /** @type {?} */ inheritingStartingFrom = 0;\n    if (paramsInheritanceStrategy !== 'always') {\n        inheritingStartingFrom = pathFromRoot.length - 1;\n        while (inheritingStartingFrom >= 1) {\n            var /** @type {?} */ current = pathFromRoot[inheritingStartingFrom];\n            var /** @type {?} */ parent_1 = pathFromRoot[inheritingStartingFrom - 1];\n            // current route is an empty path => inherits its parent's params and data\n            if (current.routeConfig && current.routeConfig.path === '') {\n                inheritingStartingFrom--;\n                // parent is componentless => current route should inherit its params and data\n            }\n            else if (!parent_1.component) {\n                inheritingStartingFrom--;\n            }\n            else {\n                break;\n            }\n        }\n    }\n    return flattenInherited(pathFromRoot.slice(inheritingStartingFrom));\n}\n/**\n * \\@internal\n * @param {?} pathFromRoot\n * @return {?}\n */\nfunction flattenInherited(pathFromRoot) {\n    return pathFromRoot.reduce(function (res, curr) {\n        var /** @type {?} */ params = __assign({}, res.params, curr.params);\n        var /** @type {?} */ data = __assign({}, res.data, curr.data);\n        var /** @type {?} */ resolve = __assign({}, res.resolve, curr._resolvedData);\n        return { params: params, data: data, resolve: resolve };\n    }, /** @type {?} */ ({ params: {}, data: {}, resolve: {} }));\n}\n/**\n * \\@whatItDoes Contains the information about a route associated with a component loaded in an\n * outlet\n * at a particular moment in time. ActivatedRouteSnapshot can also be used to traverse the router\n * state tree.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'./my-component.html'})\n * class MyComponent {\n *   constructor(route: ActivatedRoute) {\n *     const id: string = route.snapshot.params.id;\n *     const url: string = route.snapshot.url.join('');\n *     const user = route.snapshot.data.user;\n *   }\n * }\n * ```\n *\n * \\@stable\n */\nvar ActivatedRouteSnapshot = /** @class */ (function () {\n    /** @internal */\n    function ActivatedRouteSnapshot(url, params, queryParams, fragment, data, outlet, component, routeConfig, urlSegment, lastPathIndex, resolve) {\n        this.url = url;\n        this.params = params;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n        this.data = data;\n        this.outlet = outlet;\n        this.component = component;\n        this.routeConfig = routeConfig;\n        this._urlSegment = urlSegment;\n        this._lastPathIndex = lastPathIndex;\n        this._resolve = resolve;\n    }\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"root\", {\n        /** The root of the router state */\n        get: /**\n         * The root of the router state\n         * @return {?}\n         */\n        function () { return this._routerState.root; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"parent\", {\n        /** The parent of this route in the router state tree */\n        get: /**\n         * The parent of this route in the router state tree\n         * @return {?}\n         */\n        function () { return this._routerState.parent(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"firstChild\", {\n        /** The first child of this route in the router state tree */\n        get: /**\n         * The first child of this route in the router state tree\n         * @return {?}\n         */\n        function () { return this._routerState.firstChild(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"children\", {\n        /** The children of this route in the router state tree */\n        get: /**\n         * The children of this route in the router state tree\n         * @return {?}\n         */\n        function () { return this._routerState.children(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"pathFromRoot\", {\n        /** The path from the root of the router state tree to this route */\n        get: /**\n         * The path from the root of the router state tree to this route\n         * @return {?}\n         */\n        function () { return this._routerState.pathFromRoot(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"paramMap\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            if (!this._paramMap) {\n                this._paramMap = convertToParamMap(this.params);\n            }\n            return this._paramMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"queryParamMap\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            if (!this._queryParamMap) {\n                this._queryParamMap = convertToParamMap(this.queryParams);\n            }\n            return this._queryParamMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ActivatedRouteSnapshot.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ url = this.url.map(function (segment) { return segment.toString(); }).join('/');\n        var /** @type {?} */ matched = this.routeConfig ? this.routeConfig.path : '';\n        return \"Route(url:'\" + url + \"', path:'\" + matched + \"')\";\n    };\n    return ActivatedRouteSnapshot;\n}());\n/**\n * \\@whatItDoes Represents the state of the router at a moment in time.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const state: RouterState = router.routerState;\n *     const snapshot: RouterStateSnapshot = state.snapshot;\n *     const root: ActivatedRouteSnapshot = snapshot.root;\n *     const child = root.firstChild;\n *     const id: Observable<string> = child.params.map(p => p.id);\n *     //...\n *   }\n * }\n * ```\n *\n * \\@description\n * RouterStateSnapshot is a tree of activated route snapshots. Every node in this tree knows about\n * the \"consumed\" URL segments, the extracted parameters, and the resolved data.\n *\n * \\@stable\n */\nvar RouterStateSnapshot = /** @class */ (function (_super) {\n    __extends(RouterStateSnapshot, _super);\n    /** @internal */\n    function RouterStateSnapshot(url, root) {\n        var _this = _super.call(this, root) || this;\n        _this.url = url;\n        setRouterState(/** @type {?} */ (_this), root);\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    RouterStateSnapshot.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return serializeNode(this._root); };\n    return RouterStateSnapshot;\n}(Tree));\n/**\n * @template U, T\n * @param {?} state\n * @param {?} node\n * @return {?}\n */\nfunction setRouterState(state, node) {\n    node.value._routerState = state;\n    node.children.forEach(function (c) { return setRouterState(state, c); });\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction serializeNode(node) {\n    var /** @type {?} */ c = node.children.length > 0 ? \" { \" + node.children.map(serializeNode).join(', ') + \" } \" : '';\n    return \"\" + node.value + c;\n}\n/**\n * The expectation is that the activate route is created with the right set of parameters.\n * So we push new values into the observables only when they are not the initial values.\n * And we detect that by checking if the snapshot field is set.\n * @param {?} route\n * @return {?}\n */\nfunction advanceActivatedRoute(route) {\n    if (route.snapshot) {\n        var /** @type {?} */ currentSnapshot = route.snapshot;\n        var /** @type {?} */ nextSnapshot = route._futureSnapshot;\n        route.snapshot = nextSnapshot;\n        if (!shallowEqual(currentSnapshot.queryParams, nextSnapshot.queryParams)) {\n            (/** @type {?} */ (route.queryParams)).next(nextSnapshot.queryParams);\n        }\n        if (currentSnapshot.fragment !== nextSnapshot.fragment) {\n            (/** @type {?} */ (route.fragment)).next(nextSnapshot.fragment);\n        }\n        if (!shallowEqual(currentSnapshot.params, nextSnapshot.params)) {\n            (/** @type {?} */ (route.params)).next(nextSnapshot.params);\n        }\n        if (!shallowEqualArrays(currentSnapshot.url, nextSnapshot.url)) {\n            (/** @type {?} */ (route.url)).next(nextSnapshot.url);\n        }\n        if (!shallowEqual(currentSnapshot.data, nextSnapshot.data)) {\n            (/** @type {?} */ (route.data)).next(nextSnapshot.data);\n        }\n    }\n    else {\n        route.snapshot = route._futureSnapshot;\n        // this is for resolved data\n        (/** @type {?} */ (route.data)).next(route._futureSnapshot.data);\n    }\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction equalParamsAndUrlSegments(a, b) {\n    var /** @type {?} */ equalUrlParams = shallowEqual(a.params, b.params) && equalSegments(a.url, b.url);\n    var /** @type {?} */ parentsMismatch = !a.parent !== !b.parent;\n    return equalUrlParams && !parentsMismatch &&\n        (!a.parent || equalParamsAndUrlSegments(a.parent, /** @type {?} */ ((b.parent))));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} routeReuseStrategy\n * @param {?} curr\n * @param {?} prevState\n * @return {?}\n */\nfunction createRouterState(routeReuseStrategy, curr, prevState) {\n    var /** @type {?} */ root = createNode(routeReuseStrategy, curr._root, prevState ? prevState._root : undefined);\n    return new RouterState(root, curr);\n}\n/**\n * @param {?} routeReuseStrategy\n * @param {?} curr\n * @param {?=} prevState\n * @return {?}\n */\nfunction createNode(routeReuseStrategy, curr, prevState) {\n    // reuse an activated route that is currently displayed on the screen\n    if (prevState && routeReuseStrategy.shouldReuseRoute(curr.value, prevState.value.snapshot)) {\n        var /** @type {?} */ value = prevState.value;\n        value._futureSnapshot = curr.value;\n        var /** @type {?} */ children = createOrReuseChildren(routeReuseStrategy, curr, prevState);\n        return new TreeNode(value, children);\n        // retrieve an activated route that is used to be displayed, but is not currently displayed\n    }\n    else if (routeReuseStrategy.retrieve(curr.value)) {\n        var /** @type {?} */ tree = (/** @type {?} */ (routeReuseStrategy.retrieve(curr.value))).route;\n        setFutureSnapshotsOfActivatedRoutes(curr, tree);\n        return tree;\n    }\n    else {\n        var /** @type {?} */ value = createActivatedRoute(curr.value);\n        var /** @type {?} */ children = curr.children.map(function (c) { return createNode(routeReuseStrategy, c); });\n        return new TreeNode(value, children);\n    }\n}\n/**\n * @param {?} curr\n * @param {?} result\n * @return {?}\n */\nfunction setFutureSnapshotsOfActivatedRoutes(curr, result) {\n    if (curr.value.routeConfig !== result.value.routeConfig) {\n        throw new Error('Cannot reattach ActivatedRouteSnapshot created from a different route');\n    }\n    if (curr.children.length !== result.children.length) {\n        throw new Error('Cannot reattach ActivatedRouteSnapshot with a different number of children');\n    }\n    result.value._futureSnapshot = curr.value;\n    for (var /** @type {?} */ i = 0; i < curr.children.length; ++i) {\n        setFutureSnapshotsOfActivatedRoutes(curr.children[i], result.children[i]);\n    }\n}\n/**\n * @param {?} routeReuseStrategy\n * @param {?} curr\n * @param {?} prevState\n * @return {?}\n */\nfunction createOrReuseChildren(routeReuseStrategy, curr, prevState) {\n    return curr.children.map(function (child) {\n        for (var _i = 0, _a = prevState.children; _i < _a.length; _i++) {\n            var p = _a[_i];\n            if (routeReuseStrategy.shouldReuseRoute(p.value.snapshot, child.value)) {\n                return createNode(routeReuseStrategy, child, p);\n            }\n        }\n        return createNode(routeReuseStrategy, child);\n    });\n}\n/**\n * @param {?} c\n * @return {?}\n */\nfunction createActivatedRoute(c) {\n    return new ActivatedRoute(new rxjs_BehaviorSubject.BehaviorSubject(c.url), new rxjs_BehaviorSubject.BehaviorSubject(c.params), new rxjs_BehaviorSubject.BehaviorSubject(c.queryParams), new rxjs_BehaviorSubject.BehaviorSubject(c.fragment), new rxjs_BehaviorSubject.BehaviorSubject(c.data), c.outlet, c.component, c);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} route\n * @param {?} urlTree\n * @param {?} commands\n * @param {?} queryParams\n * @param {?} fragment\n * @return {?}\n */\nfunction createUrlTree(route, urlTree, commands, queryParams, fragment) {\n    if (commands.length === 0) {\n        return tree(urlTree.root, urlTree.root, urlTree, queryParams, fragment);\n    }\n    var /** @type {?} */ nav = computeNavigation(commands);\n    if (nav.toRoot()) {\n        return tree(urlTree.root, new UrlSegmentGroup([], {}), urlTree, queryParams, fragment);\n    }\n    var /** @type {?} */ startingPosition = findStartingPosition(nav, urlTree, route);\n    var /** @type {?} */ segmentGroup = startingPosition.processChildren ?\n        updateSegmentGroupChildren(startingPosition.segmentGroup, startingPosition.index, nav.commands) :\n        updateSegmentGroup(startingPosition.segmentGroup, startingPosition.index, nav.commands);\n    return tree(startingPosition.segmentGroup, segmentGroup, urlTree, queryParams, fragment);\n}\n/**\n * @param {?} command\n * @return {?}\n */\nfunction isMatrixParams(command) {\n    return typeof command === 'object' && command != null && !command.outlets && !command.segmentPath;\n}\n/**\n * @param {?} oldSegmentGroup\n * @param {?} newSegmentGroup\n * @param {?} urlTree\n * @param {?} queryParams\n * @param {?} fragment\n * @return {?}\n */\nfunction tree(oldSegmentGroup, newSegmentGroup, urlTree, queryParams, fragment) {\n    var /** @type {?} */ qp = {};\n    if (queryParams) {\n        forEach(queryParams, function (value, name) {\n            qp[name] = Array.isArray(value) ? value.map(function (v) { return \"\" + v; }) : \"\" + value;\n        });\n    }\n    if (urlTree.root === oldSegmentGroup) {\n        return new UrlTree(newSegmentGroup, qp, fragment);\n    }\n    return new UrlTree(replaceSegment(urlTree.root, oldSegmentGroup, newSegmentGroup), qp, fragment);\n}\n/**\n * @param {?} current\n * @param {?} oldSegment\n * @param {?} newSegment\n * @return {?}\n */\nfunction replaceSegment(current, oldSegment, newSegment) {\n    var /** @type {?} */ children = {};\n    forEach(current.children, function (c, outletName) {\n        if (c === oldSegment) {\n            children[outletName] = newSegment;\n        }\n        else {\n            children[outletName] = replaceSegment(c, oldSegment, newSegment);\n        }\n    });\n    return new UrlSegmentGroup(current.segments, children);\n}\nvar Navigation = /** @class */ (function () {\n    function Navigation(isAbsolute, numberOfDoubleDots, commands) {\n        this.isAbsolute = isAbsolute;\n        this.numberOfDoubleDots = numberOfDoubleDots;\n        this.commands = commands;\n        if (isAbsolute && commands.length > 0 && isMatrixParams(commands[0])) {\n            throw new Error('Root segment cannot have matrix parameters');\n        }\n        var /** @type {?} */ cmdWithOutlet = commands.find(function (c) { return typeof c === 'object' && c != null && c.outlets; });\n        if (cmdWithOutlet && cmdWithOutlet !== last$1(commands)) {\n            throw new Error('{outlets:{}} has to be the last command');\n        }\n    }\n    /**\n     * @return {?}\n     */\n    Navigation.prototype.toRoot = /**\n     * @return {?}\n     */\n    function () {\n        return this.isAbsolute && this.commands.length === 1 && this.commands[0] == '/';\n    };\n    return Navigation;\n}());\n/**\n * Transforms commands to a normalized `Navigation`\n * @param {?} commands\n * @return {?}\n */\nfunction computeNavigation(commands) {\n    if ((typeof commands[0] === 'string') && commands.length === 1 && commands[0] === '/') {\n        return new Navigation(true, 0, commands);\n    }\n    var /** @type {?} */ numberOfDoubleDots = 0;\n    var /** @type {?} */ isAbsolute = false;\n    var /** @type {?} */ res = commands.reduce(function (res, cmd, cmdIdx) {\n        if (typeof cmd === 'object' && cmd != null) {\n            if (cmd.outlets) {\n                var /** @type {?} */ outlets_1 = {};\n                forEach(cmd.outlets, function (commands, name) {\n                    outlets_1[name] = typeof commands === 'string' ? commands.split('/') : commands;\n                });\n                return res.concat([{ outlets: outlets_1 }]);\n            }\n            if (cmd.segmentPath) {\n                return res.concat([cmd.segmentPath]);\n            }\n        }\n        if (!(typeof cmd === 'string')) {\n            return res.concat([cmd]);\n        }\n        if (cmdIdx === 0) {\n            cmd.split('/').forEach(function (urlPart, partIndex) {\n                if (partIndex == 0 && urlPart === '.') {\n                    // skip './a'\n                }\n                else if (partIndex == 0 && urlPart === '') {\n                    //  '/a'\n                    isAbsolute = true;\n                }\n                else if (urlPart === '..') {\n                    //  '../a'\n                    numberOfDoubleDots++;\n                }\n                else if (urlPart != '') {\n                    res.push(urlPart);\n                }\n            });\n            return res;\n        }\n        return res.concat([cmd]);\n    }, []);\n    return new Navigation(isAbsolute, numberOfDoubleDots, res);\n}\nvar Position = /** @class */ (function () {\n    function Position(segmentGroup, processChildren, index) {\n        this.segmentGroup = segmentGroup;\n        this.processChildren = processChildren;\n        this.index = index;\n    }\n    return Position;\n}());\n/**\n * @param {?} nav\n * @param {?} tree\n * @param {?} route\n * @return {?}\n */\nfunction findStartingPosition(nav, tree, route) {\n    if (nav.isAbsolute) {\n        return new Position(tree.root, true, 0);\n    }\n    if (route.snapshot._lastPathIndex === -1) {\n        return new Position(route.snapshot._urlSegment, true, 0);\n    }\n    var /** @type {?} */ modifier = isMatrixParams(nav.commands[0]) ? 0 : 1;\n    var /** @type {?} */ index = route.snapshot._lastPathIndex + modifier;\n    return createPositionApplyingDoubleDots(route.snapshot._urlSegment, index, nav.numberOfDoubleDots);\n}\n/**\n * @param {?} group\n * @param {?} index\n * @param {?} numberOfDoubleDots\n * @return {?}\n */\nfunction createPositionApplyingDoubleDots(group, index, numberOfDoubleDots) {\n    var /** @type {?} */ g = group;\n    var /** @type {?} */ ci = index;\n    var /** @type {?} */ dd = numberOfDoubleDots;\n    while (dd > ci) {\n        dd -= ci;\n        g = /** @type {?} */ ((g.parent));\n        if (!g) {\n            throw new Error('Invalid number of \\'../\\'');\n        }\n        ci = g.segments.length;\n    }\n    return new Position(g, false, ci - dd);\n}\n/**\n * @param {?} command\n * @return {?}\n */\nfunction getPath(command) {\n    if (typeof command === 'object' && command != null && command.outlets) {\n        return command.outlets[PRIMARY_OUTLET];\n    }\n    return \"\" + command;\n}\n/**\n * @param {?} commands\n * @return {?}\n */\nfunction getOutlets(commands) {\n    if (!(typeof commands[0] === 'object'))\n        return _a = {}, _a[PRIMARY_OUTLET] = commands, _a;\n    if (commands[0].outlets === undefined)\n        return _b = {}, _b[PRIMARY_OUTLET] = commands, _b;\n    return commands[0].outlets;\n    var _a, _b;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction updateSegmentGroup(segmentGroup, startIndex, commands) {\n    if (!segmentGroup) {\n        segmentGroup = new UrlSegmentGroup([], {});\n    }\n    if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n        return updateSegmentGroupChildren(segmentGroup, startIndex, commands);\n    }\n    var /** @type {?} */ m = prefixedWith(segmentGroup, startIndex, commands);\n    var /** @type {?} */ slicedCommands = commands.slice(m.commandIndex);\n    if (m.match && m.pathIndex < segmentGroup.segments.length) {\n        var /** @type {?} */ g = new UrlSegmentGroup(segmentGroup.segments.slice(0, m.pathIndex), {});\n        g.children[PRIMARY_OUTLET] =\n            new UrlSegmentGroup(segmentGroup.segments.slice(m.pathIndex), segmentGroup.children);\n        return updateSegmentGroupChildren(g, 0, slicedCommands);\n    }\n    else if (m.match && slicedCommands.length === 0) {\n        return new UrlSegmentGroup(segmentGroup.segments, {});\n    }\n    else if (m.match && !segmentGroup.hasChildren()) {\n        return createNewSegmentGroup(segmentGroup, startIndex, commands);\n    }\n    else if (m.match) {\n        return updateSegmentGroupChildren(segmentGroup, 0, slicedCommands);\n    }\n    else {\n        return createNewSegmentGroup(segmentGroup, startIndex, commands);\n    }\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction updateSegmentGroupChildren(segmentGroup, startIndex, commands) {\n    if (commands.length === 0) {\n        return new UrlSegmentGroup(segmentGroup.segments, {});\n    }\n    else {\n        var /** @type {?} */ outlets_2 = getOutlets(commands);\n        var /** @type {?} */ children_1 = {};\n        forEach(outlets_2, function (commands, outlet) {\n            if (commands !== null) {\n                children_1[outlet] = updateSegmentGroup(segmentGroup.children[outlet], startIndex, commands);\n            }\n        });\n        forEach(segmentGroup.children, function (child, childOutlet) {\n            if (outlets_2[childOutlet] === undefined) {\n                children_1[childOutlet] = child;\n            }\n        });\n        return new UrlSegmentGroup(segmentGroup.segments, children_1);\n    }\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction prefixedWith(segmentGroup, startIndex, commands) {\n    var /** @type {?} */ currentCommandIndex = 0;\n    var /** @type {?} */ currentPathIndex = startIndex;\n    var /** @type {?} */ noMatch = { match: false, pathIndex: 0, commandIndex: 0 };\n    while (currentPathIndex < segmentGroup.segments.length) {\n        if (currentCommandIndex >= commands.length)\n            return noMatch;\n        var /** @type {?} */ path = segmentGroup.segments[currentPathIndex];\n        var /** @type {?} */ curr = getPath(commands[currentCommandIndex]);\n        var /** @type {?} */ next = currentCommandIndex < commands.length - 1 ? commands[currentCommandIndex + 1] : null;\n        if (currentPathIndex > 0 && curr === undefined)\n            break;\n        if (curr && next && (typeof next === 'object') && next.outlets === undefined) {\n            if (!compare(curr, next, path))\n                return noMatch;\n            currentCommandIndex += 2;\n        }\n        else {\n            if (!compare(curr, {}, path))\n                return noMatch;\n            currentCommandIndex++;\n        }\n        currentPathIndex++;\n    }\n    return { match: true, pathIndex: currentPathIndex, commandIndex: currentCommandIndex };\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction createNewSegmentGroup(segmentGroup, startIndex, commands) {\n    var /** @type {?} */ paths = segmentGroup.segments.slice(0, startIndex);\n    var /** @type {?} */ i = 0;\n    while (i < commands.length) {\n        if (typeof commands[i] === 'object' && commands[i].outlets !== undefined) {\n            var /** @type {?} */ children = createNewSegmentChildren(commands[i].outlets);\n            return new UrlSegmentGroup(paths, children);\n        }\n        // if we start with an object literal, we need to reuse the path part from the segment\n        if (i === 0 && isMatrixParams(commands[0])) {\n            var /** @type {?} */ p = segmentGroup.segments[startIndex];\n            paths.push(new UrlSegment(p.path, commands[0]));\n            i++;\n            continue;\n        }\n        var /** @type {?} */ curr = getPath(commands[i]);\n        var /** @type {?} */ next = (i < commands.length - 1) ? commands[i + 1] : null;\n        if (curr && next && isMatrixParams(next)) {\n            paths.push(new UrlSegment(curr, stringify(next)));\n            i += 2;\n        }\n        else {\n            paths.push(new UrlSegment(curr, {}));\n            i++;\n        }\n    }\n    return new UrlSegmentGroup(paths, {});\n}\n/**\n * @param {?} outlets\n * @return {?}\n */\nfunction createNewSegmentChildren(outlets) {\n    var /** @type {?} */ children = {};\n    forEach(outlets, function (commands, outlet) {\n        if (commands !== null) {\n            children[outlet] = createNewSegmentGroup(new UrlSegmentGroup([], {}), 0, commands);\n        }\n    });\n    return children;\n}\n/**\n * @param {?} params\n * @return {?}\n */\nfunction stringify(params) {\n    var /** @type {?} */ res = {};\n    forEach(params, function (v, k) { return res[k] = \"\" + v; });\n    return res;\n}\n/**\n * @param {?} path\n * @param {?} params\n * @param {?} segment\n * @return {?}\n */\nfunction compare(path, params, segment) {\n    return path == segment.path && shallowEqual(params, segment.parameters);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CanActivate = /** @class */ (function () {\n    function CanActivate(path) {\n        this.path = path;\n        this.route = this.path[this.path.length - 1];\n    }\n    return CanActivate;\n}());\nvar CanDeactivate = /** @class */ (function () {\n    function CanDeactivate(component, route) {\n        this.component = component;\n        this.route = route;\n    }\n    return CanDeactivate;\n}());\n/**\n * This class bundles the actions involved in preactivation of a route.\n */\nvar PreActivation = /** @class */ (function () {\n    function PreActivation(future, curr, moduleInjector, forwardEvent) {\n        this.future = future;\n        this.curr = curr;\n        this.moduleInjector = moduleInjector;\n        this.forwardEvent = forwardEvent;\n        this.canActivateChecks = [];\n        this.canDeactivateChecks = [];\n    }\n    /**\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    PreActivation.prototype.initialize = /**\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    function (parentContexts) {\n        var /** @type {?} */ futureRoot = this.future._root;\n        var /** @type {?} */ currRoot = this.curr ? this.curr._root : null;\n        this.setupChildRouteGuards(futureRoot, currRoot, parentContexts, [futureRoot.value]);\n    };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.checkGuards = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!this.isDeactivating() && !this.isActivating()) {\n            return rxjs_observable_of.of(true);\n        }\n        var /** @type {?} */ canDeactivate$ = this.runCanDeactivateChecks();\n        return rxjs_operator_mergeMap.mergeMap.call(canDeactivate$, function (canDeactivate) { return canDeactivate ? _this.runCanActivateChecks() : rxjs_observable_of.of(false); });\n    };\n    /**\n     * @param {?} paramsInheritanceStrategy\n     * @return {?}\n     */\n    PreActivation.prototype.resolveData = /**\n     * @param {?} paramsInheritanceStrategy\n     * @return {?}\n     */\n    function (paramsInheritanceStrategy) {\n        var _this = this;\n        if (!this.isActivating())\n            return rxjs_observable_of.of(null);\n        var /** @type {?} */ checks$ = rxjs_observable_from.from(this.canActivateChecks);\n        var /** @type {?} */ runningChecks$ = rxjs_operator_concatMap.concatMap.call(checks$, function (check) { return _this.runResolve(check.route, paramsInheritanceStrategy); });\n        return rxjs_operator_reduce.reduce.call(runningChecks$, function (_, __) { return _; });\n    };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.isDeactivating = /**\n     * @return {?}\n     */\n    function () { return this.canDeactivateChecks.length !== 0; };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.isActivating = /**\n     * @return {?}\n     */\n    function () { return this.canActivateChecks.length !== 0; };\n    /**\n     * Iterates over child routes and calls recursive `setupRouteGuards` to get `this` instance in\n     * proper state to run `checkGuards()` method.\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} contexts\n     * @param {?} futurePath\n     * @return {?}\n     */\n    PreActivation.prototype.setupChildRouteGuards = /**\n     * Iterates over child routes and calls recursive `setupRouteGuards` to get `this` instance in\n     * proper state to run `checkGuards()` method.\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} contexts\n     * @param {?} futurePath\n     * @return {?}\n     */\n    function (futureNode, currNode, contexts, futurePath) {\n        var _this = this;\n        var /** @type {?} */ prevChildren = nodeChildrenAsMap(currNode);\n        // Process the children of the future route\n        futureNode.children.forEach(function (c) {\n            _this.setupRouteGuards(c, prevChildren[c.value.outlet], contexts, futurePath.concat([c.value]));\n            delete prevChildren[c.value.outlet];\n        });\n        // Process any children left from the current route (not active for the future route)\n        forEach(prevChildren, function (v, k) {\n            return _this.deactivateRouteAndItsChildren(v, /** @type {?} */ ((contexts)).getContext(k));\n        });\n    };\n    /**\n     * Iterates over child routes and calls recursive `setupRouteGuards` to get `this` instance in\n     * proper state to run `checkGuards()` method.\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} parentContexts\n     * @param {?} futurePath\n     * @return {?}\n     */\n    PreActivation.prototype.setupRouteGuards = /**\n     * Iterates over child routes and calls recursive `setupRouteGuards` to get `this` instance in\n     * proper state to run `checkGuards()` method.\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} parentContexts\n     * @param {?} futurePath\n     * @return {?}\n     */\n    function (futureNode, currNode, parentContexts, futurePath) {\n        var /** @type {?} */ future = futureNode.value;\n        var /** @type {?} */ curr = currNode ? currNode.value : null;\n        var /** @type {?} */ context = parentContexts ? parentContexts.getContext(futureNode.value.outlet) : null;\n        // reusing the node\n        if (curr && future.routeConfig === curr.routeConfig) {\n            var /** @type {?} */ shouldRunGuardsAndResolvers = this.shouldRunGuardsAndResolvers(curr, future, /** @type {?} */ ((future.routeConfig)).runGuardsAndResolvers);\n            if (shouldRunGuardsAndResolvers) {\n                this.canActivateChecks.push(new CanActivate(futurePath));\n            }\n            else {\n                // we need to set the data\n                future.data = curr.data;\n                future._resolvedData = curr._resolvedData;\n            }\n            // If we have a component, we need to go through an outlet.\n            if (future.component) {\n                this.setupChildRouteGuards(futureNode, currNode, context ? context.children : null, futurePath);\n                // if we have a componentless route, we recurse but keep the same outlet map.\n            }\n            else {\n                this.setupChildRouteGuards(futureNode, currNode, parentContexts, futurePath);\n            }\n            if (shouldRunGuardsAndResolvers) {\n                var /** @type {?} */ outlet = /** @type {?} */ ((/** @type {?} */ ((context)).outlet));\n                this.canDeactivateChecks.push(new CanDeactivate(outlet.component, curr));\n            }\n        }\n        else {\n            if (curr) {\n                this.deactivateRouteAndItsChildren(currNode, context);\n            }\n            this.canActivateChecks.push(new CanActivate(futurePath));\n            // If we have a component, we need to go through an outlet.\n            if (future.component) {\n                this.setupChildRouteGuards(futureNode, null, context ? context.children : null, futurePath);\n                // if we have a componentless route, we recurse but keep the same outlet map.\n            }\n            else {\n                this.setupChildRouteGuards(futureNode, null, parentContexts, futurePath);\n            }\n        }\n    };\n    /**\n     * @param {?} curr\n     * @param {?} future\n     * @param {?} mode\n     * @return {?}\n     */\n    PreActivation.prototype.shouldRunGuardsAndResolvers = /**\n     * @param {?} curr\n     * @param {?} future\n     * @param {?} mode\n     * @return {?}\n     */\n    function (curr, future, mode) {\n        switch (mode) {\n            case 'always':\n                return true;\n            case 'paramsOrQueryParamsChange':\n                return !equalParamsAndUrlSegments(curr, future) ||\n                    !shallowEqual(curr.queryParams, future.queryParams);\n            case 'paramsChange':\n            default:\n                return !equalParamsAndUrlSegments(curr, future);\n        }\n    };\n    /**\n     * @param {?} route\n     * @param {?} context\n     * @return {?}\n     */\n    PreActivation.prototype.deactivateRouteAndItsChildren = /**\n     * @param {?} route\n     * @param {?} context\n     * @return {?}\n     */\n    function (route, context) {\n        var _this = this;\n        var /** @type {?} */ children = nodeChildrenAsMap(route);\n        var /** @type {?} */ r = route.value;\n        forEach(children, function (node, childName) {\n            if (!r.component) {\n                _this.deactivateRouteAndItsChildren(node, context);\n            }\n            else if (context) {\n                _this.deactivateRouteAndItsChildren(node, context.children.getContext(childName));\n            }\n            else {\n                _this.deactivateRouteAndItsChildren(node, null);\n            }\n        });\n        if (!r.component) {\n            this.canDeactivateChecks.push(new CanDeactivate(null, r));\n        }\n        else if (context && context.outlet && context.outlet.isActivated) {\n            this.canDeactivateChecks.push(new CanDeactivate(context.outlet.component, r));\n        }\n        else {\n            this.canDeactivateChecks.push(new CanDeactivate(null, r));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.runCanDeactivateChecks = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ checks$ = rxjs_observable_from.from(this.canDeactivateChecks);\n        var /** @type {?} */ runningChecks$ = rxjs_operator_mergeMap.mergeMap.call(checks$, function (check) { return _this.runCanDeactivate(check.component, check.route); });\n        return rxjs_operator_every.every.call(runningChecks$, function (result) { return result === true; });\n    };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.runCanActivateChecks = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ checks$ = rxjs_observable_from.from(this.canActivateChecks);\n        var /** @type {?} */ runningChecks$ = rxjs_operator_concatMap.concatMap.call(checks$, function (check) {\n            return andObservables(rxjs_observable_from.from([\n                _this.fireChildActivationStart(check.route.parent), _this.fireActivationStart(check.route),\n                _this.runCanActivateChild(check.path), _this.runCanActivate(check.route)\n            ]));\n        });\n        return rxjs_operator_every.every.call(runningChecks$, function (result) { return result === true; });\n        // this.fireChildActivationStart(check.path),\n    };\n    /**\n     * This should fire off `ActivationStart` events for each route being activated at this\n     * level.\n     * In other words, if you're activating `a` and `b` below, `path` will contain the\n     * `ActivatedRouteSnapshot`s for both and we will fire `ActivationStart` for both. Always\n     * return\n     * `true` so checks continue to run.\n     * @param {?} snapshot\n     * @return {?}\n     */\n    PreActivation.prototype.fireActivationStart = /**\n     * This should fire off `ActivationStart` events for each route being activated at this\n     * level.\n     * In other words, if you're activating `a` and `b` below, `path` will contain the\n     * `ActivatedRouteSnapshot`s for both and we will fire `ActivationStart` for both. Always\n     * return\n     * `true` so checks continue to run.\n     * @param {?} snapshot\n     * @return {?}\n     */\n    function (snapshot) {\n        if (snapshot !== null && this.forwardEvent) {\n            this.forwardEvent(new ActivationStart(snapshot));\n        }\n        return rxjs_observable_of.of(true);\n    };\n    /**\n     * This should fire off `ChildActivationStart` events for each route being activated at this\n     * level.\n     * In other words, if you're activating `a` and `b` below, `path` will contain the\n     * `ActivatedRouteSnapshot`s for both and we will fire `ChildActivationStart` for both. Always\n     * return\n     * `true` so checks continue to run.\n     * @param {?} snapshot\n     * @return {?}\n     */\n    PreActivation.prototype.fireChildActivationStart = /**\n     * This should fire off `ChildActivationStart` events for each route being activated at this\n     * level.\n     * In other words, if you're activating `a` and `b` below, `path` will contain the\n     * `ActivatedRouteSnapshot`s for both and we will fire `ChildActivationStart` for both. Always\n     * return\n     * `true` so checks continue to run.\n     * @param {?} snapshot\n     * @return {?}\n     */\n    function (snapshot) {\n        if (snapshot !== null && this.forwardEvent) {\n            this.forwardEvent(new ChildActivationStart(snapshot));\n        }\n        return rxjs_observable_of.of(true);\n    };\n    /**\n     * @param {?} future\n     * @return {?}\n     */\n    PreActivation.prototype.runCanActivate = /**\n     * @param {?} future\n     * @return {?}\n     */\n    function (future) {\n        var _this = this;\n        var /** @type {?} */ canActivate = future.routeConfig ? future.routeConfig.canActivate : null;\n        if (!canActivate || canActivate.length === 0)\n            return rxjs_observable_of.of(true);\n        var /** @type {?} */ obs = rxjs_operator_map.map.call(rxjs_observable_from.from(canActivate), function (c) {\n            var /** @type {?} */ guard = _this.getToken(c, future);\n            var /** @type {?} */ observable;\n            if (guard.canActivate) {\n                observable = wrapIntoObservable(guard.canActivate(future, _this.future));\n            }\n            else {\n                observable = wrapIntoObservable(guard(future, _this.future));\n            }\n            return rxjs_operator_first.first.call(observable);\n        });\n        return andObservables(obs);\n    };\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    PreActivation.prototype.runCanActivateChild = /**\n     * @param {?} path\n     * @return {?}\n     */\n    function (path) {\n        var _this = this;\n        var /** @type {?} */ future = path[path.length - 1];\n        var /** @type {?} */ canActivateChildGuards = path.slice(0, path.length - 1)\n            .reverse()\n            .map(function (p) { return _this.extractCanActivateChild(p); })\n            .filter(function (_) { return _ !== null; });\n        return andObservables(rxjs_operator_map.map.call(rxjs_observable_from.from(canActivateChildGuards), function (d) {\n            var /** @type {?} */ obs = rxjs_operator_map.map.call(rxjs_observable_from.from(d.guards), function (c) {\n                var /** @type {?} */ guard = _this.getToken(c, d.node);\n                var /** @type {?} */ observable;\n                if (guard.canActivateChild) {\n                    observable = wrapIntoObservable(guard.canActivateChild(future, _this.future));\n                }\n                else {\n                    observable = wrapIntoObservable(guard(future, _this.future));\n                }\n                return rxjs_operator_first.first.call(observable);\n            });\n            return andObservables(obs);\n        }));\n    };\n    /**\n     * @param {?} p\n     * @return {?}\n     */\n    PreActivation.prototype.extractCanActivateChild = /**\n     * @param {?} p\n     * @return {?}\n     */\n    function (p) {\n        var /** @type {?} */ canActivateChild = p.routeConfig ? p.routeConfig.canActivateChild : null;\n        if (!canActivateChild || canActivateChild.length === 0)\n            return null;\n        return { node: p, guards: canActivateChild };\n    };\n    /**\n     * @param {?} component\n     * @param {?} curr\n     * @return {?}\n     */\n    PreActivation.prototype.runCanDeactivate = /**\n     * @param {?} component\n     * @param {?} curr\n     * @return {?}\n     */\n    function (component, curr) {\n        var _this = this;\n        var /** @type {?} */ canDeactivate = curr && curr.routeConfig ? curr.routeConfig.canDeactivate : null;\n        if (!canDeactivate || canDeactivate.length === 0)\n            return rxjs_observable_of.of(true);\n        var /** @type {?} */ canDeactivate$ = rxjs_operator_mergeMap.mergeMap.call(rxjs_observable_from.from(canDeactivate), function (c) {\n            var /** @type {?} */ guard = _this.getToken(c, curr);\n            var /** @type {?} */ observable;\n            if (guard.canDeactivate) {\n                observable =\n                    wrapIntoObservable(guard.canDeactivate(component, curr, _this.curr, _this.future));\n            }\n            else {\n                observable = wrapIntoObservable(guard(component, curr, _this.curr, _this.future));\n            }\n            return rxjs_operator_first.first.call(observable);\n        });\n        return rxjs_operator_every.every.call(canDeactivate$, function (result) { return result === true; });\n    };\n    /**\n     * @param {?} future\n     * @param {?} paramsInheritanceStrategy\n     * @return {?}\n     */\n    PreActivation.prototype.runResolve = /**\n     * @param {?} future\n     * @param {?} paramsInheritanceStrategy\n     * @return {?}\n     */\n    function (future, paramsInheritanceStrategy) {\n        var /** @type {?} */ resolve = future._resolve;\n        return rxjs_operator_map.map.call(this.resolveNode(resolve, future), function (resolvedData) {\n            future._resolvedData = resolvedData;\n            future.data = __assign({}, future.data, inheritedParamsDataResolve(future, paramsInheritanceStrategy).resolve);\n            return null;\n        });\n    };\n    /**\n     * @param {?} resolve\n     * @param {?} future\n     * @return {?}\n     */\n    PreActivation.prototype.resolveNode = /**\n     * @param {?} resolve\n     * @param {?} future\n     * @return {?}\n     */\n    function (resolve, future) {\n        var _this = this;\n        var /** @type {?} */ keys = Object.keys(resolve);\n        if (keys.length === 0) {\n            return rxjs_observable_of.of({});\n        }\n        if (keys.length === 1) {\n            var /** @type {?} */ key_1 = keys[0];\n            return rxjs_operator_map.map.call(this.getResolver(resolve[key_1], future), function (value) {\n                return _a = {}, _a[key_1] = value, _a;\n                var _a;\n            });\n        }\n        var /** @type {?} */ data = {};\n        var /** @type {?} */ runningResolvers$ = rxjs_operator_mergeMap.mergeMap.call(rxjs_observable_from.from(keys), function (key) {\n            return rxjs_operator_map.map.call(_this.getResolver(resolve[key], future), function (value) {\n                data[key] = value;\n                return value;\n            });\n        });\n        return rxjs_operator_map.map.call(rxjs_operator_last.last.call(runningResolvers$), function () { return data; });\n    };\n    /**\n     * @param {?} injectionToken\n     * @param {?} future\n     * @return {?}\n     */\n    PreActivation.prototype.getResolver = /**\n     * @param {?} injectionToken\n     * @param {?} future\n     * @return {?}\n     */\n    function (injectionToken, future) {\n        var /** @type {?} */ resolver = this.getToken(injectionToken, future);\n        return resolver.resolve ? wrapIntoObservable(resolver.resolve(future, this.future)) :\n            wrapIntoObservable(resolver(future, this.future));\n    };\n    /**\n     * @param {?} token\n     * @param {?} snapshot\n     * @return {?}\n     */\n    PreActivation.prototype.getToken = /**\n     * @param {?} token\n     * @param {?} snapshot\n     * @return {?}\n     */\n    function (token, snapshot) {\n        var /** @type {?} */ config = closestLoadedConfig(snapshot);\n        var /** @type {?} */ injector = config ? config.module.injector : this.moduleInjector;\n        return injector.get(token);\n    };\n    return PreActivation;\n}());\n/**\n * @param {?} snapshot\n * @return {?}\n */\nfunction closestLoadedConfig(snapshot) {\n    if (!snapshot)\n        return null;\n    for (var /** @type {?} */ s = snapshot.parent; s; s = s.parent) {\n        var /** @type {?} */ route = s.routeConfig;\n        if (route && route._loadedConfig)\n            return route._loadedConfig;\n    }\n    return null;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NoMatch$1 = /** @class */ (function () {\n    function NoMatch() {\n    }\n    return NoMatch;\n}());\n/**\n * @param {?} rootComponentType\n * @param {?} config\n * @param {?} urlTree\n * @param {?} url\n * @param {?=} paramsInheritanceStrategy\n * @return {?}\n */\nfunction recognize(rootComponentType, config, urlTree, url, paramsInheritanceStrategy) {\n    if (paramsInheritanceStrategy === void 0) { paramsInheritanceStrategy = 'emptyOnly'; }\n    return new Recognizer(rootComponentType, config, urlTree, url, paramsInheritanceStrategy)\n        .recognize();\n}\nvar Recognizer = /** @class */ (function () {\n    function Recognizer(rootComponentType, config, urlTree, url, paramsInheritanceStrategy) {\n        this.rootComponentType = rootComponentType;\n        this.config = config;\n        this.urlTree = urlTree;\n        this.url = url;\n        this.paramsInheritanceStrategy = paramsInheritanceStrategy;\n    }\n    /**\n     * @return {?}\n     */\n    Recognizer.prototype.recognize = /**\n     * @return {?}\n     */\n    function () {\n        try {\n            var /** @type {?} */ rootSegmentGroup = split$1(this.urlTree.root, [], [], this.config).segmentGroup;\n            var /** @type {?} */ children = this.processSegmentGroup(this.config, rootSegmentGroup, PRIMARY_OUTLET);\n            var /** @type {?} */ root = new ActivatedRouteSnapshot([], Object.freeze({}), Object.freeze(this.urlTree.queryParams), /** @type {?} */ ((this.urlTree.fragment)), {}, PRIMARY_OUTLET, this.rootComponentType, null, this.urlTree.root, -1, {});\n            var /** @type {?} */ rootNode = new TreeNode(root, children);\n            var /** @type {?} */ routeState = new RouterStateSnapshot(this.url, rootNode);\n            this.inheritParamsAndData(routeState._root);\n            return rxjs_observable_of.of(routeState);\n        }\n        catch (/** @type {?} */ e) {\n            return new rxjs_Observable.Observable(function (obs) { return obs.error(e); });\n        }\n    };\n    /**\n     * @param {?} routeNode\n     * @return {?}\n     */\n    Recognizer.prototype.inheritParamsAndData = /**\n     * @param {?} routeNode\n     * @return {?}\n     */\n    function (routeNode) {\n        var _this = this;\n        var /** @type {?} */ route = routeNode.value;\n        var /** @type {?} */ i = inheritedParamsDataResolve(route, this.paramsInheritanceStrategy);\n        route.params = Object.freeze(i.params);\n        route.data = Object.freeze(i.data);\n        routeNode.children.forEach(function (n) { return _this.inheritParamsAndData(n); });\n    };\n    /**\n     * @param {?} config\n     * @param {?} segmentGroup\n     * @param {?} outlet\n     * @return {?}\n     */\n    Recognizer.prototype.processSegmentGroup = /**\n     * @param {?} config\n     * @param {?} segmentGroup\n     * @param {?} outlet\n     * @return {?}\n     */\n    function (config, segmentGroup, outlet) {\n        if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n            return this.processChildren(config, segmentGroup);\n        }\n        return this.processSegment(config, segmentGroup, segmentGroup.segments, outlet);\n    };\n    /**\n     * @param {?} config\n     * @param {?} segmentGroup\n     * @return {?}\n     */\n    Recognizer.prototype.processChildren = /**\n     * @param {?} config\n     * @param {?} segmentGroup\n     * @return {?}\n     */\n    function (config, segmentGroup) {\n        var _this = this;\n        var /** @type {?} */ children = mapChildrenIntoArray(segmentGroup, function (child, childOutlet) { return _this.processSegmentGroup(config, child, childOutlet); });\n        checkOutletNameUniqueness(children);\n        sortActivatedRouteSnapshots(children);\n        return children;\n    };\n    /**\n     * @param {?} config\n     * @param {?} segmentGroup\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    Recognizer.prototype.processSegment = /**\n     * @param {?} config\n     * @param {?} segmentGroup\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    function (config, segmentGroup, segments, outlet) {\n        for (var _i = 0, config_1 = config; _i < config_1.length; _i++) {\n            var r = config_1[_i];\n            try {\n                return this.processSegmentAgainstRoute(r, segmentGroup, segments, outlet);\n            }\n            catch (/** @type {?} */ e) {\n                if (!(e instanceof NoMatch$1))\n                    throw e;\n            }\n        }\n        if (this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n            return [];\n        }\n        throw new NoMatch$1();\n    };\n    /**\n     * @param {?} segmentGroup\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    Recognizer.prototype.noLeftoversInUrl = /**\n     * @param {?} segmentGroup\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    function (segmentGroup, segments, outlet) {\n        return segments.length === 0 && !segmentGroup.children[outlet];\n    };\n    /**\n     * @param {?} route\n     * @param {?} rawSegment\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    Recognizer.prototype.processSegmentAgainstRoute = /**\n     * @param {?} route\n     * @param {?} rawSegment\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    function (route, rawSegment, segments, outlet) {\n        if (route.redirectTo)\n            throw new NoMatch$1();\n        if ((route.outlet || PRIMARY_OUTLET) !== outlet)\n            throw new NoMatch$1();\n        var /** @type {?} */ snapshot;\n        var /** @type {?} */ consumedSegments = [];\n        var /** @type {?} */ rawSlicedSegments = [];\n        if (route.path === '**') {\n            var /** @type {?} */ params = segments.length > 0 ? /** @type {?} */ ((last$1(segments))).parameters : {};\n            snapshot = new ActivatedRouteSnapshot(segments, params, Object.freeze(this.urlTree.queryParams), /** @type {?} */ ((this.urlTree.fragment)), getData(route), outlet, /** @type {?} */ ((route.component)), route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + segments.length, getResolve(route));\n        }\n        else {\n            var /** @type {?} */ result = match$1(rawSegment, route, segments);\n            consumedSegments = result.consumedSegments;\n            rawSlicedSegments = segments.slice(result.lastChild);\n            snapshot = new ActivatedRouteSnapshot(consumedSegments, result.parameters, Object.freeze(this.urlTree.queryParams), /** @type {?} */ ((this.urlTree.fragment)), getData(route), outlet, /** @type {?} */ ((route.component)), route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + consumedSegments.length, getResolve(route));\n        }\n        var /** @type {?} */ childConfig = getChildConfig(route);\n        var _a = split$1(rawSegment, consumedSegments, rawSlicedSegments, childConfig), segmentGroup = _a.segmentGroup, slicedSegments = _a.slicedSegments;\n        if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n            var /** @type {?} */ children_1 = this.processChildren(childConfig, segmentGroup);\n            return [new TreeNode(snapshot, children_1)];\n        }\n        if (childConfig.length === 0 && slicedSegments.length === 0) {\n            return [new TreeNode(snapshot, [])];\n        }\n        var /** @type {?} */ children = this.processSegment(childConfig, segmentGroup, slicedSegments, PRIMARY_OUTLET);\n        return [new TreeNode(snapshot, children)];\n    };\n    return Recognizer;\n}());\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction sortActivatedRouteSnapshots(nodes) {\n    nodes.sort(function (a, b) {\n        if (a.value.outlet === PRIMARY_OUTLET)\n            return -1;\n        if (b.value.outlet === PRIMARY_OUTLET)\n            return 1;\n        return a.value.outlet.localeCompare(b.value.outlet);\n    });\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getChildConfig(route) {\n    if (route.children) {\n        return route.children;\n    }\n    if (route.loadChildren) {\n        return /** @type {?} */ ((route._loadedConfig)).routes;\n    }\n    return [];\n}\n/**\n * @param {?} segmentGroup\n * @param {?} route\n * @param {?} segments\n * @return {?}\n */\nfunction match$1(segmentGroup, route, segments) {\n    if (route.path === '') {\n        if (route.pathMatch === 'full' && (segmentGroup.hasChildren() || segments.length > 0)) {\n            throw new NoMatch$1();\n        }\n        return { consumedSegments: [], lastChild: 0, parameters: {} };\n    }\n    var /** @type {?} */ matcher = route.matcher || defaultUrlMatcher;\n    var /** @type {?} */ res = matcher(segments, segmentGroup, route);\n    if (!res)\n        throw new NoMatch$1();\n    var /** @type {?} */ posParams = {};\n    forEach(/** @type {?} */ ((res.posParams)), function (v, k) { posParams[k] = v.path; });\n    var /** @type {?} */ parameters = res.consumed.length > 0 ? __assign({}, posParams, res.consumed[res.consumed.length - 1].parameters) :\n        posParams;\n    return { consumedSegments: res.consumed, lastChild: res.consumed.length, parameters: parameters };\n}\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction checkOutletNameUniqueness(nodes) {\n    var /** @type {?} */ names = {};\n    nodes.forEach(function (n) {\n        var /** @type {?} */ routeWithSameOutletName = names[n.value.outlet];\n        if (routeWithSameOutletName) {\n            var /** @type {?} */ p = routeWithSameOutletName.url.map(function (s) { return s.toString(); }).join('/');\n            var /** @type {?} */ c = n.value.url.map(function (s) { return s.toString(); }).join('/');\n            throw new Error(\"Two segments cannot have the same outlet name: '\" + p + \"' and '\" + c + \"'.\");\n        }\n        names[n.value.outlet] = n.value;\n    });\n}\n/**\n * @param {?} segmentGroup\n * @return {?}\n */\nfunction getSourceSegmentGroup(segmentGroup) {\n    var /** @type {?} */ s = segmentGroup;\n    while (s._sourceSegment) {\n        s = s._sourceSegment;\n    }\n    return s;\n}\n/**\n * @param {?} segmentGroup\n * @return {?}\n */\nfunction getPathIndexShift(segmentGroup) {\n    var /** @type {?} */ s = segmentGroup;\n    var /** @type {?} */ res = (s._segmentIndexShift ? s._segmentIndexShift : 0);\n    while (s._sourceSegment) {\n        s = s._sourceSegment;\n        res += (s._segmentIndexShift ? s._segmentIndexShift : 0);\n    }\n    return res - 1;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} consumedSegments\n * @param {?} slicedSegments\n * @param {?} config\n * @return {?}\n */\nfunction split$1(segmentGroup, consumedSegments, slicedSegments, config) {\n    if (slicedSegments.length > 0 &&\n        containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n        var /** @type {?} */ s_1 = new UrlSegmentGroup(consumedSegments, createChildrenForEmptyPaths(segmentGroup, consumedSegments, config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n        s_1._sourceSegment = segmentGroup;\n        s_1._segmentIndexShift = consumedSegments.length;\n        return { segmentGroup: s_1, slicedSegments: [] };\n    }\n    if (slicedSegments.length === 0 &&\n        containsEmptyPathMatches(segmentGroup, slicedSegments, config)) {\n        var /** @type {?} */ s_2 = new UrlSegmentGroup(segmentGroup.segments, addEmptyPathsToChildrenIfNeeded(segmentGroup, slicedSegments, config, segmentGroup.children));\n        s_2._sourceSegment = segmentGroup;\n        s_2._segmentIndexShift = consumedSegments.length;\n        return { segmentGroup: s_2, slicedSegments: slicedSegments };\n    }\n    var /** @type {?} */ s = new UrlSegmentGroup(segmentGroup.segments, segmentGroup.children);\n    s._sourceSegment = segmentGroup;\n    s._segmentIndexShift = consumedSegments.length;\n    return { segmentGroup: s, slicedSegments: slicedSegments };\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} routes\n * @param {?} children\n * @return {?}\n */\nfunction addEmptyPathsToChildrenIfNeeded(segmentGroup, slicedSegments, routes, children) {\n    var /** @type {?} */ res = {};\n    for (var _i = 0, routes_1 = routes; _i < routes_1.length; _i++) {\n        var r = routes_1[_i];\n        if (emptyPathMatch(segmentGroup, slicedSegments, r) && !children[getOutlet$1(r)]) {\n            var /** @type {?} */ s = new UrlSegmentGroup([], {});\n            s._sourceSegment = segmentGroup;\n            s._segmentIndexShift = segmentGroup.segments.length;\n            res[getOutlet$1(r)] = s;\n        }\n    }\n    return __assign({}, children, res);\n}\n/**\n * @param {?} segmentGroup\n * @param {?} consumedSegments\n * @param {?} routes\n * @param {?} primarySegment\n * @return {?}\n */\nfunction createChildrenForEmptyPaths(segmentGroup, consumedSegments, routes, primarySegment) {\n    var /** @type {?} */ res = {};\n    res[PRIMARY_OUTLET] = primarySegment;\n    primarySegment._sourceSegment = segmentGroup;\n    primarySegment._segmentIndexShift = consumedSegments.length;\n    for (var _i = 0, routes_2 = routes; _i < routes_2.length; _i++) {\n        var r = routes_2[_i];\n        if (r.path === '' && getOutlet$1(r) !== PRIMARY_OUTLET) {\n            var /** @type {?} */ s = new UrlSegmentGroup([], {});\n            s._sourceSegment = segmentGroup;\n            s._segmentIndexShift = consumedSegments.length;\n            res[getOutlet$1(r)] = s;\n        }\n    }\n    return res;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, routes) {\n    return routes.some(function (r) { return emptyPathMatch(segmentGroup, slicedSegments, r) && getOutlet$1(r) !== PRIMARY_OUTLET; });\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathMatches(segmentGroup, slicedSegments, routes) {\n    return routes.some(function (r) { return emptyPathMatch(segmentGroup, slicedSegments, r); });\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} r\n * @return {?}\n */\nfunction emptyPathMatch(segmentGroup, slicedSegments, r) {\n    if ((segmentGroup.hasChildren() || slicedSegments.length > 0) && r.pathMatch === 'full') {\n        return false;\n    }\n    return r.path === '' && r.redirectTo === undefined;\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getOutlet$1(route) {\n    return route.outlet || PRIMARY_OUTLET;\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getData(route) {\n    return route.data || {};\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getResolve(route) {\n    return route.resolve || {};\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Provides a way to customize when activated routes get reused.\n *\n * \\@experimental\n * @abstract\n */\nvar RouteReuseStrategy = /** @class */ (function () {\n    function RouteReuseStrategy() {\n    }\n    return RouteReuseStrategy;\n}());\n/**\n * Does not detach any subtrees. Reuses routes as long as their route config is the same.\n */\nvar DefaultRouteReuseStrategy = /** @class */ (function () {\n    function DefaultRouteReuseStrategy() {\n    }\n    /**\n     * @param {?} route\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.shouldDetach = /**\n     * @param {?} route\n     * @return {?}\n     */\n    function (route) { return false; };\n    /**\n     * @param {?} route\n     * @param {?} detachedTree\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.store = /**\n     * @param {?} route\n     * @param {?} detachedTree\n     * @return {?}\n     */\n    function (route, detachedTree) { };\n    /**\n     * @param {?} route\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.shouldAttach = /**\n     * @param {?} route\n     * @return {?}\n     */\n    function (route) { return false; };\n    /**\n     * @param {?} route\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.retrieve = /**\n     * @param {?} route\n     * @return {?}\n     */\n    function (route) { return null; };\n    /**\n     * @param {?} future\n     * @param {?} curr\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.shouldReuseRoute = /**\n     * @param {?} future\n     * @param {?} curr\n     * @return {?}\n     */\n    function (future, curr) {\n        return future.routeConfig === curr.routeConfig;\n    };\n    return DefaultRouteReuseStrategy;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docsNotRequired\n * \\@experimental\n */\nvar ROUTES = new _angular_core.InjectionToken('ROUTES');\nvar RouterConfigLoader = /** @class */ (function () {\n    function RouterConfigLoader(loader, compiler, onLoadStartListener, onLoadEndListener) {\n        this.loader = loader;\n        this.compiler = compiler;\n        this.onLoadStartListener = onLoadStartListener;\n        this.onLoadEndListener = onLoadEndListener;\n    }\n    /**\n     * @param {?} parentInjector\n     * @param {?} route\n     * @return {?}\n     */\n    RouterConfigLoader.prototype.load = /**\n     * @param {?} parentInjector\n     * @param {?} route\n     * @return {?}\n     */\n    function (parentInjector, route) {\n        var _this = this;\n        if (this.onLoadStartListener) {\n            this.onLoadStartListener(route);\n        }\n        var /** @type {?} */ moduleFactory$ = this.loadModuleFactory(/** @type {?} */ ((route.loadChildren)));\n        return rxjs_operator_map.map.call(moduleFactory$, function (factory) {\n            if (_this.onLoadEndListener) {\n                _this.onLoadEndListener(route);\n            }\n            var /** @type {?} */ module = factory.create(parentInjector);\n            return new LoadedRouterConfig(flatten(module.injector.get(ROUTES)).map(copyConfig), module);\n        });\n    };\n    /**\n     * @param {?} loadChildren\n     * @return {?}\n     */\n    RouterConfigLoader.prototype.loadModuleFactory = /**\n     * @param {?} loadChildren\n     * @return {?}\n     */\n    function (loadChildren) {\n        var _this = this;\n        if (typeof loadChildren === 'string') {\n            return rxjs_observable_fromPromise.fromPromise(this.loader.load(loadChildren));\n        }\n        else {\n            return rxjs_operator_mergeMap.mergeMap.call(wrapIntoObservable(loadChildren()), function (t) {\n                if (t instanceof _angular_core.NgModuleFactory) {\n                    return rxjs_observable_of.of(t);\n                }\n                else {\n                    return rxjs_observable_fromPromise.fromPromise(_this.compiler.compileModuleAsync(t));\n                }\n            });\n        }\n    };\n    return RouterConfigLoader;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Provides a way to migrate AngularJS applications to Angular.\n *\n * \\@experimental\n * @abstract\n */\nvar UrlHandlingStrategy = /** @class */ (function () {\n    function UrlHandlingStrategy() {\n    }\n    return UrlHandlingStrategy;\n}());\n/**\n * \\@experimental\n */\nvar DefaultUrlHandlingStrategy = /** @class */ (function () {\n    function DefaultUrlHandlingStrategy() {\n    }\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    DefaultUrlHandlingStrategy.prototype.shouldProcessUrl = /**\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) { return true; };\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    DefaultUrlHandlingStrategy.prototype.extract = /**\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) { return url; };\n    /**\n     * @param {?} newUrlPart\n     * @param {?} wholeUrl\n     * @return {?}\n     */\n    DefaultUrlHandlingStrategy.prototype.merge = /**\n     * @param {?} newUrlPart\n     * @param {?} wholeUrl\n     * @return {?}\n     */\n    function (newUrlPart, wholeUrl) { return newUrlPart; };\n    return DefaultUrlHandlingStrategy;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Represents the extra options used during navigation.\n *\n * \\@stable\n * @record\n */\n\n/**\n * @param {?} error\n * @return {?}\n */\nfunction defaultErrorHandler(error) {\n    throw error;\n}\n/**\n * \\@internal\n * @param {?} snapshot\n * @return {?}\n */\nfunction defaultRouterHook(snapshot) {\n    return /** @type {?} */ (rxjs_observable_of.of(null));\n}\n/**\n * \\@whatItDoes Provides the navigation and url manipulation capabilities.\n *\n * See {\\@link Routes} for more details and examples.\n *\n * \\@ngModule RouterModule\n *\n * \\@stable\n */\nvar Router = /** @class */ (function () {\n    /**\n     * Creates the router service.\n     */\n    // TODO: vsavkin make internal after the final is out.\n    function Router(rootComponentType, urlSerializer, rootContexts, location, injector, loader, compiler, config) {\n        var _this = this;\n        this.rootComponentType = rootComponentType;\n        this.urlSerializer = urlSerializer;\n        this.rootContexts = rootContexts;\n        this.location = location;\n        this.config = config;\n        this.navigations = new rxjs_BehaviorSubject.BehaviorSubject(/** @type {?} */ ((null)));\n        this.navigationId = 0;\n        this.events = new rxjs_Subject.Subject();\n        /**\n         * Error handler that is invoked when a navigation errors.\n         *\n         * See {\\@link ErrorHandler} for more information.\n         */\n        this.errorHandler = defaultErrorHandler;\n        /**\n         * Indicates if at least one navigation happened.\n         */\n        this.navigated = false;\n        /**\n         * Used by RouterModule. This allows us to\n         * pause the navigation either before preactivation or after it.\n         * \\@internal\n         */\n        this.hooks = {\n            beforePreactivation: defaultRouterHook,\n            afterPreactivation: defaultRouterHook\n        };\n        /**\n         * Extracts and merges URLs. Used for AngularJS to Angular migrations.\n         */\n        this.urlHandlingStrategy = new DefaultUrlHandlingStrategy();\n        this.routeReuseStrategy = new DefaultRouteReuseStrategy();\n        /**\n         * Define what the router should do if it receives a navigation request to the current URL.\n         * By default, the router will ignore this navigation. However, this prevents features such\n         * as a \"refresh\" button. Use this option to configure the behavior when navigating to the\n         * current URL. Default is 'ignore'.\n         */\n        this.onSameUrlNavigation = 'ignore';\n        /**\n         * Defines how the router merges params, data and resolved data from parent to child\n         * routes. Available options are:\n         *\n         * - `'emptyOnly'`, the default, only inherits parent params for path-less or component-less\n         *   routes.\n         * - `'always'`, enables unconditional inheritance of parent params.\n         */\n        this.paramsInheritanceStrategy = 'emptyOnly';\n        var /** @type {?} */ onLoadStart = function (r) { return _this.triggerEvent(new RouteConfigLoadStart(r)); };\n        var /** @type {?} */ onLoadEnd = function (r) { return _this.triggerEvent(new RouteConfigLoadEnd(r)); };\n        this.ngModule = injector.get(_angular_core.NgModuleRef);\n        this.resetConfig(config);\n        this.currentUrlTree = createEmptyUrlTree();\n        this.rawUrlTree = this.currentUrlTree;\n        this.configLoader = new RouterConfigLoader(loader, compiler, onLoadStart, onLoadEnd);\n        this.routerState = createEmptyState(this.currentUrlTree, this.rootComponentType);\n        this.processNavigations();\n    }\n    /**\n     * @internal\n     * TODO: this should be removed once the constructor of the router made internal\n     */\n    /**\n     * \\@internal\n     * TODO: this should be removed once the constructor of the router made internal\n     * @param {?} rootComponentType\n     * @return {?}\n     */\n    Router.prototype.resetRootComponentType = /**\n     * \\@internal\n     * TODO: this should be removed once the constructor of the router made internal\n     * @param {?} rootComponentType\n     * @return {?}\n     */\n    function (rootComponentType) {\n        this.rootComponentType = rootComponentType;\n        // TODO: vsavkin router 4.0 should make the root component set to null\n        // this will simplify the lifecycle of the router.\n        this.routerState.root.component = this.rootComponentType;\n    };\n    /**\n     * Sets up the location change listener and performs the initial navigation.\n     */\n    /**\n     * Sets up the location change listener and performs the initial navigation.\n     * @return {?}\n     */\n    Router.prototype.initialNavigation = /**\n     * Sets up the location change listener and performs the initial navigation.\n     * @return {?}\n     */\n    function () {\n        this.setUpLocationChangeListener();\n        if (this.navigationId === 0) {\n            this.navigateByUrl(this.location.path(true), { replaceUrl: true });\n        }\n    };\n    /**\n     * Sets up the location change listener.\n     */\n    /**\n     * Sets up the location change listener.\n     * @return {?}\n     */\n    Router.prototype.setUpLocationChangeListener = /**\n     * Sets up the location change listener.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // Don't need to use Zone.wrap any more, because zone.js\n        // already patch onPopState, so location change callback will\n        // run into ngZone\n        if (!this.locationSubscription) {\n            this.locationSubscription = /** @type {?} */ (this.location.subscribe(function (change) {\n                var /** @type {?} */ rawUrlTree = _this.urlSerializer.parse(change['url']);\n                var /** @type {?} */ source = change['type'] === 'popstate' ? 'popstate' : 'hashchange';\n                setTimeout(function () { _this.scheduleNavigation(rawUrlTree, source, { replaceUrl: true }); }, 0);\n            }));\n        }\n    };\n    Object.defineProperty(Router.prototype, \"url\", {\n        /** The current url */\n        get: /**\n         * The current url\n         * @return {?}\n         */\n        function () { return this.serializeUrl(this.currentUrlTree); },\n        enumerable: true,\n        configurable: true\n    });\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} e\n     * @return {?}\n     */\n    Router.prototype.triggerEvent = /**\n     * \\@internal\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) { (/** @type {?} */ (this.events)).next(e); };\n    /**\n     * Resets the configuration used for navigation and generating links.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.resetConfig([\n     *  { path: 'team/:id', component: TeamCmp, children: [\n     *    { path: 'simple', component: SimpleCmp },\n     *    { path: 'user/:name', component: UserCmp }\n     *  ]}\n     * ]);\n     * ```\n     */\n    /**\n     * Resets the configuration used for navigation and generating links.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.resetConfig([\n     *  { path: 'team/:id', component: TeamCmp, children: [\n     *    { path: 'simple', component: SimpleCmp },\n     *    { path: 'user/:name', component: UserCmp }\n     *  ]}\n     * ]);\n     * ```\n     * @param {?} config\n     * @return {?}\n     */\n    Router.prototype.resetConfig = /**\n     * Resets the configuration used for navigation and generating links.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.resetConfig([\n     *  { path: 'team/:id', component: TeamCmp, children: [\n     *    { path: 'simple', component: SimpleCmp },\n     *    { path: 'user/:name', component: UserCmp }\n     *  ]}\n     * ]);\n     * ```\n     * @param {?} config\n     * @return {?}\n     */\n    function (config) {\n        validateConfig(config);\n        this.config = config.map(copyConfig);\n        this.navigated = false;\n    };\n    /** @docsNotRequired */\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    Router.prototype.ngOnDestroy = /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    function () { this.dispose(); };\n    /** Disposes of the router */\n    /**\n     * Disposes of the router\n     * @return {?}\n     */\n    Router.prototype.dispose = /**\n     * Disposes of the router\n     * @return {?}\n     */\n    function () {\n        if (this.locationSubscription) {\n            this.locationSubscription.unsubscribe();\n            this.locationSubscription = /** @type {?} */ ((null));\n        }\n    };\n    /**\n     * Applies an array of commands to the current url tree and creates a new url tree.\n     *\n     * When given an activate route, applies the given commands starting from the route.\n     * When not given a route, applies the given command starting from the root.\n     *\n     * ### Usage\n     *\n     * ```\n     * // create /team/33/user/11\n     * router.createUrlTree(['/team', 33, 'user', 11]);\n     *\n     * // create /team/33;expand=true/user/11\n     * router.createUrlTree(['/team', 33, {expand: true}, 'user', 11]);\n     *\n     * // you can collapse static segments like this (this works only with the first passed-in value):\n     * router.createUrlTree(['/team/33/user', userId]);\n     *\n     * // If the first segment can contain slashes, and you do not want the router to split it, you\n     * // can do the following:\n     *\n     * router.createUrlTree([{segmentPath: '/one/two'}]);\n     *\n     * // create /team/33/(user/11//right:chat)\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: 'chat'}}]);\n     *\n     * // remove the right secondary node\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: null}}]);\n     *\n     * // assuming the current url is `/team/33/user/11` and the route points to `user/11`\n     *\n     * // navigate to /team/33/user/11/details\n     * router.createUrlTree(['details'], {relativeTo: route});\n     *\n     * // navigate to /team/33/user/22\n     * router.createUrlTree(['../22'], {relativeTo: route});\n     *\n     * // navigate to /team/44/user/22\n     * router.createUrlTree(['../../team/44/user/22'], {relativeTo: route});\n     * ```\n     */\n    /**\n     * Applies an array of commands to the current url tree and creates a new url tree.\n     *\n     * When given an activate route, applies the given commands starting from the route.\n     * When not given a route, applies the given command starting from the root.\n     *\n     * ### Usage\n     *\n     * ```\n     * // create /team/33/user/11\n     * router.createUrlTree(['/team', 33, 'user', 11]);\n     *\n     * // create /team/33;expand=true/user/11\n     * router.createUrlTree(['/team', 33, {expand: true}, 'user', 11]);\n     *\n     * // you can collapse static segments like this (this works only with the first passed-in value):\n     * router.createUrlTree(['/team/33/user', userId]);\n     *\n     * // If the first segment can contain slashes, and you do not want the router to split it, you\n     * // can do the following:\n     *\n     * router.createUrlTree([{segmentPath: '/one/two'}]);\n     *\n     * // create /team/33/(user/11//right:chat)\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: 'chat'}}]);\n     *\n     * // remove the right secondary node\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: null}}]);\n     *\n     * // assuming the current url is `/team/33/user/11` and the route points to `user/11`\n     *\n     * // navigate to /team/33/user/11/details\n     * router.createUrlTree(['details'], {relativeTo: route});\n     *\n     * // navigate to /team/33/user/22\n     * router.createUrlTree(['../22'], {relativeTo: route});\n     *\n     * // navigate to /team/44/user/22\n     * router.createUrlTree(['../../team/44/user/22'], {relativeTo: route});\n     * ```\n     * @param {?} commands\n     * @param {?=} navigationExtras\n     * @return {?}\n     */\n    Router.prototype.createUrlTree = /**\n     * Applies an array of commands to the current url tree and creates a new url tree.\n     *\n     * When given an activate route, applies the given commands starting from the route.\n     * When not given a route, applies the given command starting from the root.\n     *\n     * ### Usage\n     *\n     * ```\n     * // create /team/33/user/11\n     * router.createUrlTree(['/team', 33, 'user', 11]);\n     *\n     * // create /team/33;expand=true/user/11\n     * router.createUrlTree(['/team', 33, {expand: true}, 'user', 11]);\n     *\n     * // you can collapse static segments like this (this works only with the first passed-in value):\n     * router.createUrlTree(['/team/33/user', userId]);\n     *\n     * // If the first segment can contain slashes, and you do not want the router to split it, you\n     * // can do the following:\n     *\n     * router.createUrlTree([{segmentPath: '/one/two'}]);\n     *\n     * // create /team/33/(user/11//right:chat)\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: 'chat'}}]);\n     *\n     * // remove the right secondary node\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: null}}]);\n     *\n     * // assuming the current url is `/team/33/user/11` and the route points to `user/11`\n     *\n     * // navigate to /team/33/user/11/details\n     * router.createUrlTree(['details'], {relativeTo: route});\n     *\n     * // navigate to /team/33/user/22\n     * router.createUrlTree(['../22'], {relativeTo: route});\n     *\n     * // navigate to /team/44/user/22\n     * router.createUrlTree(['../../team/44/user/22'], {relativeTo: route});\n     * ```\n     * @param {?} commands\n     * @param {?=} navigationExtras\n     * @return {?}\n     */\n    function (commands, navigationExtras) {\n        if (navigationExtras === void 0) { navigationExtras = {}; }\n        var relativeTo = navigationExtras.relativeTo, queryParams = navigationExtras.queryParams, fragment = navigationExtras.fragment, preserveQueryParams = navigationExtras.preserveQueryParams, queryParamsHandling = navigationExtras.queryParamsHandling, preserveFragment = navigationExtras.preserveFragment;\n        if (_angular_core.isDevMode() && preserveQueryParams && /** @type {?} */ (console) && /** @type {?} */ (console.warn)) {\n            console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n        }\n        var /** @type {?} */ a = relativeTo || this.routerState.root;\n        var /** @type {?} */ f = preserveFragment ? this.currentUrlTree.fragment : fragment;\n        var /** @type {?} */ q = null;\n        if (queryParamsHandling) {\n            switch (queryParamsHandling) {\n                case 'merge':\n                    q = __assign({}, this.currentUrlTree.queryParams, queryParams);\n                    break;\n                case 'preserve':\n                    q = this.currentUrlTree.queryParams;\n                    break;\n                default:\n                    q = queryParams || null;\n            }\n        }\n        else {\n            q = preserveQueryParams ? this.currentUrlTree.queryParams : queryParams || null;\n        }\n        if (q !== null) {\n            q = this.removeEmptyProps(q);\n        }\n        return createUrlTree(a, this.currentUrlTree, commands, /** @type {?} */ ((q)), /** @type {?} */ ((f)));\n    };\n    /**\n     * Navigate based on the provided url. This navigation is always absolute.\n     *\n     * Returns a promise that:\n     * - resolves to 'true' when navigation succeeds,\n     * - resolves to 'false' when navigation fails,\n     * - is rejected when an error happens.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.navigateByUrl(\"/team/33/user/11\");\n     *\n     * // Navigate without updating the URL\n     * router.navigateByUrl(\"/team/33/user/11\", { skipLocationChange: true });\n     * ```\n     *\n     * In opposite to `navigate`, `navigateByUrl` takes a whole URL\n     * and does not apply any delta to the current one.\n     */\n    /**\n     * Navigate based on the provided url. This navigation is always absolute.\n     *\n     * Returns a promise that:\n     * - resolves to 'true' when navigation succeeds,\n     * - resolves to 'false' when navigation fails,\n     * - is rejected when an error happens.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.navigateByUrl(\"/team/33/user/11\");\n     *\n     * // Navigate without updating the URL\n     * router.navigateByUrl(\"/team/33/user/11\", { skipLocationChange: true });\n     * ```\n     *\n     * In opposite to `navigate`, `navigateByUrl` takes a whole URL\n     * and does not apply any delta to the current one.\n     * @param {?} url\n     * @param {?=} extras\n     * @return {?}\n     */\n    Router.prototype.navigateByUrl = /**\n     * Navigate based on the provided url. This navigation is always absolute.\n     *\n     * Returns a promise that:\n     * - resolves to 'true' when navigation succeeds,\n     * - resolves to 'false' when navigation fails,\n     * - is rejected when an error happens.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.navigateByUrl(\"/team/33/user/11\");\n     *\n     * // Navigate without updating the URL\n     * router.navigateByUrl(\"/team/33/user/11\", { skipLocationChange: true });\n     * ```\n     *\n     * In opposite to `navigate`, `navigateByUrl` takes a whole URL\n     * and does not apply any delta to the current one.\n     * @param {?} url\n     * @param {?=} extras\n     * @return {?}\n     */\n    function (url, extras) {\n        if (extras === void 0) { extras = { skipLocationChange: false }; }\n        var /** @type {?} */ urlTree = url instanceof UrlTree ? url : this.parseUrl(url);\n        var /** @type {?} */ mergedTree = this.urlHandlingStrategy.merge(urlTree, this.rawUrlTree);\n        return this.scheduleNavigation(mergedTree, 'imperative', extras);\n    };\n    /**\n     * Navigate based on the provided array of commands and a starting point.\n     * If no starting route is provided, the navigation is absolute.\n     *\n     * Returns a promise that:\n     * - resolves to 'true' when navigation succeeds,\n     * - resolves to 'false' when navigation fails,\n     * - is rejected when an error happens.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route});\n     *\n     * // Navigate without updating the URL\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route, skipLocationChange: true});\n     * ```\n     *\n     * In opposite to `navigateByUrl`, `navigate` always takes a delta that is applied to the current\n     * URL.\n     */\n    /**\n     * Navigate based on the provided array of commands and a starting point.\n     * If no starting route is provided, the navigation is absolute.\n     *\n     * Returns a promise that:\n     * - resolves to 'true' when navigation succeeds,\n     * - resolves to 'false' when navigation fails,\n     * - is rejected when an error happens.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route});\n     *\n     * // Navigate without updating the URL\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route, skipLocationChange: true});\n     * ```\n     *\n     * In opposite to `navigateByUrl`, `navigate` always takes a delta that is applied to the current\n     * URL.\n     * @param {?} commands\n     * @param {?=} extras\n     * @return {?}\n     */\n    Router.prototype.navigate = /**\n     * Navigate based on the provided array of commands and a starting point.\n     * If no starting route is provided, the navigation is absolute.\n     *\n     * Returns a promise that:\n     * - resolves to 'true' when navigation succeeds,\n     * - resolves to 'false' when navigation fails,\n     * - is rejected when an error happens.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route});\n     *\n     * // Navigate without updating the URL\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route, skipLocationChange: true});\n     * ```\n     *\n     * In opposite to `navigateByUrl`, `navigate` always takes a delta that is applied to the current\n     * URL.\n     * @param {?} commands\n     * @param {?=} extras\n     * @return {?}\n     */\n    function (commands, extras) {\n        if (extras === void 0) { extras = { skipLocationChange: false }; }\n        validateCommands(commands);\n        return this.navigateByUrl(this.createUrlTree(commands, extras), extras);\n    };\n    /** Serializes a {@link UrlTree} into a string */\n    /**\n     * Serializes a {\\@link UrlTree} into a string\n     * @param {?} url\n     * @return {?}\n     */\n    Router.prototype.serializeUrl = /**\n     * Serializes a {\\@link UrlTree} into a string\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) { return this.urlSerializer.serialize(url); };\n    /** Parses a string into a {@link UrlTree} */\n    /**\n     * Parses a string into a {\\@link UrlTree}\n     * @param {?} url\n     * @return {?}\n     */\n    Router.prototype.parseUrl = /**\n     * Parses a string into a {\\@link UrlTree}\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) { return this.urlSerializer.parse(url); };\n    /** Returns whether the url is activated */\n    /**\n     * Returns whether the url is activated\n     * @param {?} url\n     * @param {?} exact\n     * @return {?}\n     */\n    Router.prototype.isActive = /**\n     * Returns whether the url is activated\n     * @param {?} url\n     * @param {?} exact\n     * @return {?}\n     */\n    function (url, exact) {\n        if (url instanceof UrlTree) {\n            return containsTree(this.currentUrlTree, url, exact);\n        }\n        var /** @type {?} */ urlTree = this.urlSerializer.parse(url);\n        return containsTree(this.currentUrlTree, urlTree, exact);\n    };\n    /**\n     * @param {?} params\n     * @return {?}\n     */\n    Router.prototype.removeEmptyProps = /**\n     * @param {?} params\n     * @return {?}\n     */\n    function (params) {\n        return Object.keys(params).reduce(function (result, key) {\n            var /** @type {?} */ value = params[key];\n            if (value !== null && value !== undefined) {\n                result[key] = value;\n            }\n            return result;\n        }, {});\n    };\n    /**\n     * @return {?}\n     */\n    Router.prototype.processNavigations = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        rxjs_operator_concatMap.concatMap\n            .call(this.navigations, function (nav) {\n            if (nav) {\n                _this.executeScheduledNavigation(nav);\n                // a failed navigation should not stop the router from processing\n                // further navigations => the catch\n                return nav.promise.catch(function () { });\n            }\n            else {\n                return /** @type {?} */ (rxjs_observable_of.of(null));\n            }\n        })\n            .subscribe(function () { });\n    };\n    /**\n     * @param {?} rawUrl\n     * @param {?} source\n     * @param {?} extras\n     * @return {?}\n     */\n    Router.prototype.scheduleNavigation = /**\n     * @param {?} rawUrl\n     * @param {?} source\n     * @param {?} extras\n     * @return {?}\n     */\n    function (rawUrl, source, extras) {\n        var /** @type {?} */ lastNavigation = this.navigations.value;\n        // If the user triggers a navigation imperatively (e.g., by using navigateByUrl),\n        // and that navigation results in 'replaceState' that leads to the same URL,\n        // we should skip those.\n        if (lastNavigation && source !== 'imperative' && lastNavigation.source === 'imperative' &&\n            lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n            return Promise.resolve(true); // return value is not used\n        }\n        // Because of a bug in IE and Edge, the location class fires two events (popstate and\n        // hashchange) every single time. The second one should be ignored. Otherwise, the URL will\n        // flicker. Handles the case when a popstate was emitted first.\n        if (lastNavigation && source == 'hashchange' && lastNavigation.source === 'popstate' &&\n            lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n            return Promise.resolve(true); // return value is not used\n        }\n        // Because of a bug in IE and Edge, the location class fires two events (popstate and\n        // hashchange) every single time. The second one should be ignored. Otherwise, the URL will\n        // flicker. Handles the case when a hashchange was emitted first.\n        if (lastNavigation && source == 'popstate' && lastNavigation.source === 'hashchange' &&\n            lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n            return Promise.resolve(true); // return value is not used\n        }\n        var /** @type {?} */ resolve = null;\n        var /** @type {?} */ reject = null;\n        var /** @type {?} */ promise = new Promise(function (res, rej) {\n            resolve = res;\n            reject = rej;\n        });\n        var /** @type {?} */ id = ++this.navigationId;\n        this.navigations.next({ id: id, source: source, rawUrl: rawUrl, extras: extras, resolve: resolve, reject: reject, promise: promise });\n        // Make sure that the error is propagated even though `processNavigations` catch\n        // handler does not rethrow\n        return promise.catch(function (e) { return Promise.reject(e); });\n    };\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    Router.prototype.executeScheduledNavigation = /**\n     * @param {?} __0\n     * @return {?}\n     */\n    function (_a) {\n        var _this = this;\n        var id = _a.id, rawUrl = _a.rawUrl, extras = _a.extras, resolve = _a.resolve, reject = _a.reject;\n        var /** @type {?} */ url = this.urlHandlingStrategy.extract(rawUrl);\n        var /** @type {?} */ urlTransition = !this.navigated || url.toString() !== this.currentUrlTree.toString();\n        if ((this.onSameUrlNavigation === 'reload' ? true : urlTransition) &&\n            this.urlHandlingStrategy.shouldProcessUrl(rawUrl)) {\n            (/** @type {?} */ (this.events)).next(new NavigationStart(id, this.serializeUrl(url)));\n            Promise.resolve()\n                .then(function (_) {\n                return _this.runNavigate(url, rawUrl, !!extras.skipLocationChange, !!extras.replaceUrl, id, null);\n            })\n                .then(resolve, reject);\n            // we cannot process the current URL, but we could process the previous one =>\n            // we need to do some cleanup\n        }\n        else if (urlTransition && this.rawUrlTree &&\n            this.urlHandlingStrategy.shouldProcessUrl(this.rawUrlTree)) {\n            (/** @type {?} */ (this.events)).next(new NavigationStart(id, this.serializeUrl(url)));\n            Promise.resolve()\n                .then(function (_) {\n                return _this.runNavigate(url, rawUrl, false, false, id, createEmptyState(url, _this.rootComponentType).snapshot);\n            })\n                .then(resolve, reject);\n        }\n        else {\n            this.rawUrlTree = rawUrl;\n            resolve(null);\n        }\n    };\n    /**\n     * @param {?} url\n     * @param {?} rawUrl\n     * @param {?} skipLocationChange\n     * @param {?} replaceUrl\n     * @param {?} id\n     * @param {?} precreatedState\n     * @return {?}\n     */\n    Router.prototype.runNavigate = /**\n     * @param {?} url\n     * @param {?} rawUrl\n     * @param {?} skipLocationChange\n     * @param {?} replaceUrl\n     * @param {?} id\n     * @param {?} precreatedState\n     * @return {?}\n     */\n    function (url, rawUrl, skipLocationChange, replaceUrl, id, precreatedState) {\n        var _this = this;\n        if (id !== this.navigationId) {\n            (/** @type {?} */ (this.events))\n                .next(new NavigationCancel(id, this.serializeUrl(url), \"Navigation ID \" + id + \" is not equal to the current navigation id \" + this.navigationId));\n            return Promise.resolve(false);\n        }\n        return new Promise(function (resolvePromise, rejectPromise) {\n            // create an observable of the url and route state snapshot\n            // this operation do not result in any side effects\n            var /** @type {?} */ urlAndSnapshot$;\n            if (!precreatedState) {\n                var /** @type {?} */ moduleInjector = _this.ngModule.injector;\n                var /** @type {?} */ redirectsApplied$ = applyRedirects(moduleInjector, _this.configLoader, _this.urlSerializer, url, _this.config);\n                urlAndSnapshot$ = rxjs_operator_mergeMap.mergeMap.call(redirectsApplied$, function (appliedUrl) {\n                    return rxjs_operator_map.map.call(recognize(_this.rootComponentType, _this.config, appliedUrl, _this.serializeUrl(appliedUrl), _this.paramsInheritanceStrategy), function (snapshot) {\n                        (/** @type {?} */ (_this.events))\n                            .next(new RoutesRecognized(id, _this.serializeUrl(url), _this.serializeUrl(appliedUrl), snapshot));\n                        return { appliedUrl: appliedUrl, snapshot: snapshot };\n                    });\n                });\n            }\n            else {\n                urlAndSnapshot$ = rxjs_observable_of.of({ appliedUrl: url, snapshot: precreatedState });\n            }\n            var /** @type {?} */ beforePreactivationDone$ = rxjs_operator_mergeMap.mergeMap.call(urlAndSnapshot$, function (p) {\n                return rxjs_operator_map.map.call(_this.hooks.beforePreactivation(p.snapshot), function () { return p; });\n            });\n            // run preactivation: guards and data resolvers\n            var /** @type {?} */ preActivation;\n            var /** @type {?} */ preactivationSetup$ = rxjs_operator_map.map.call(beforePreactivationDone$, function (_a) {\n                var appliedUrl = _a.appliedUrl, snapshot = _a.snapshot;\n                var /** @type {?} */ moduleInjector = _this.ngModule.injector;\n                preActivation = new PreActivation(snapshot, _this.routerState.snapshot, moduleInjector, function (evt) { return _this.triggerEvent(evt); });\n                preActivation.initialize(_this.rootContexts);\n                return { appliedUrl: appliedUrl, snapshot: snapshot };\n            });\n            var /** @type {?} */ preactivationCheckGuards$ = rxjs_operator_mergeMap.mergeMap.call(preactivationSetup$, function (_a) {\n                var appliedUrl = _a.appliedUrl, snapshot = _a.snapshot;\n                if (_this.navigationId !== id)\n                    return rxjs_observable_of.of(false);\n                _this.triggerEvent(new GuardsCheckStart(id, _this.serializeUrl(url), appliedUrl, snapshot));\n                return rxjs_operator_map.map.call(preActivation.checkGuards(), function (shouldActivate) {\n                    _this.triggerEvent(new GuardsCheckEnd(id, _this.serializeUrl(url), appliedUrl, snapshot, shouldActivate));\n                    return { appliedUrl: appliedUrl, snapshot: snapshot, shouldActivate: shouldActivate };\n                });\n            });\n            var /** @type {?} */ preactivationResolveData$ = rxjs_operator_mergeMap.mergeMap.call(preactivationCheckGuards$, function (p) {\n                if (_this.navigationId !== id)\n                    return rxjs_observable_of.of(false);\n                if (p.shouldActivate && preActivation.isActivating()) {\n                    _this.triggerEvent(new ResolveStart(id, _this.serializeUrl(url), p.appliedUrl, p.snapshot));\n                    return rxjs_operator_map.map.call(preActivation.resolveData(_this.paramsInheritanceStrategy), function () {\n                        _this.triggerEvent(new ResolveEnd(id, _this.serializeUrl(url), p.appliedUrl, p.snapshot));\n                        return p;\n                    });\n                }\n                else {\n                    return rxjs_observable_of.of(p);\n                }\n            });\n            var /** @type {?} */ preactivationDone$ = rxjs_operator_mergeMap.mergeMap.call(preactivationResolveData$, function (p) {\n                return rxjs_operator_map.map.call(_this.hooks.afterPreactivation(p.snapshot), function () { return p; });\n            });\n            // create router state\n            // this operation has side effects => route state is being affected\n            var /** @type {?} */ routerState$ = rxjs_operator_map.map.call(preactivationDone$, function (_a) {\n                var appliedUrl = _a.appliedUrl, snapshot = _a.snapshot, shouldActivate = _a.shouldActivate;\n                if (shouldActivate) {\n                    var /** @type {?} */ state = createRouterState(_this.routeReuseStrategy, snapshot, _this.routerState);\n                    return { appliedUrl: appliedUrl, state: state, shouldActivate: shouldActivate };\n                }\n                else {\n                    return { appliedUrl: appliedUrl, state: null, shouldActivate: shouldActivate };\n                }\n            });\n            _this.activateRoutes(routerState$, _this.routerState, _this.currentUrlTree, id, url, rawUrl, skipLocationChange, replaceUrl, resolvePromise, rejectPromise);\n        });\n    };\n    /**\n     * Performs the logic of activating routes. This is a synchronous process by default. While this\n     * is a private method, it could be overridden to make activation asynchronous.\n     * @param {?} state\n     * @param {?} storedState\n     * @param {?} storedUrl\n     * @param {?} id\n     * @param {?} url\n     * @param {?} rawUrl\n     * @param {?} skipLocationChange\n     * @param {?} replaceUrl\n     * @param {?} resolvePromise\n     * @param {?} rejectPromise\n     * @return {?}\n     */\n    Router.prototype.activateRoutes = /**\n     * Performs the logic of activating routes. This is a synchronous process by default. While this\n     * is a private method, it could be overridden to make activation asynchronous.\n     * @param {?} state\n     * @param {?} storedState\n     * @param {?} storedUrl\n     * @param {?} id\n     * @param {?} url\n     * @param {?} rawUrl\n     * @param {?} skipLocationChange\n     * @param {?} replaceUrl\n     * @param {?} resolvePromise\n     * @param {?} rejectPromise\n     * @return {?}\n     */\n    function (state, storedState, storedUrl, id, url, rawUrl, skipLocationChange, replaceUrl, resolvePromise, rejectPromise) {\n        var _this = this;\n        // applied the new router state\n        // this operation has side effects\n        var /** @type {?} */ navigationIsSuccessful;\n        state\n            .forEach(function (_a) {\n            var appliedUrl = _a.appliedUrl, state = _a.state, shouldActivate = _a.shouldActivate;\n            if (!shouldActivate || id !== _this.navigationId) {\n                navigationIsSuccessful = false;\n                return;\n            }\n            _this.currentUrlTree = appliedUrl;\n            _this.rawUrlTree = _this.urlHandlingStrategy.merge(_this.currentUrlTree, rawUrl);\n            (/** @type {?} */ (_this)).routerState = state;\n            if (!skipLocationChange) {\n                var /** @type {?} */ path = _this.urlSerializer.serialize(_this.rawUrlTree);\n                if (_this.location.isCurrentPathEqualTo(path) || replaceUrl) {\n                    _this.location.replaceState(path);\n                }\n                else {\n                    _this.location.go(path);\n                }\n            }\n            new ActivateRoutes(_this.routeReuseStrategy, state, storedState, function (evt) { return _this.triggerEvent(evt); })\n                .activate(_this.rootContexts);\n            navigationIsSuccessful = true;\n        })\n            .then(function () {\n            if (navigationIsSuccessful) {\n                _this.navigated = true;\n                (/** @type {?} */ (_this.events))\n                    .next(new NavigationEnd(id, _this.serializeUrl(url), _this.serializeUrl(_this.currentUrlTree)));\n                resolvePromise(true);\n            }\n            else {\n                _this.resetUrlToCurrentUrlTree();\n                (/** @type {?} */ (_this.events))\n                    .next(new NavigationCancel(id, _this.serializeUrl(url), ''));\n                resolvePromise(false);\n            }\n        }, function (e) {\n            if (isNavigationCancelingError(e)) {\n                _this.navigated = true;\n                _this.resetStateAndUrl(storedState, storedUrl, rawUrl);\n                (/** @type {?} */ (_this.events))\n                    .next(new NavigationCancel(id, _this.serializeUrl(url), e.message));\n                resolvePromise(false);\n            }\n            else {\n                _this.resetStateAndUrl(storedState, storedUrl, rawUrl);\n                (/** @type {?} */ (_this.events))\n                    .next(new NavigationError(id, _this.serializeUrl(url), e));\n                try {\n                    resolvePromise(_this.errorHandler(e));\n                }\n                catch (/** @type {?} */ ee) {\n                    rejectPromise(ee);\n                }\n            }\n        });\n    };\n    /**\n     * @param {?} storedState\n     * @param {?} storedUrl\n     * @param {?} rawUrl\n     * @return {?}\n     */\n    Router.prototype.resetStateAndUrl = /**\n     * @param {?} storedState\n     * @param {?} storedUrl\n     * @param {?} rawUrl\n     * @return {?}\n     */\n    function (storedState, storedUrl, rawUrl) {\n        (/** @type {?} */ (this)).routerState = storedState;\n        this.currentUrlTree = storedUrl;\n        this.rawUrlTree = this.urlHandlingStrategy.merge(this.currentUrlTree, rawUrl);\n        this.resetUrlToCurrentUrlTree();\n    };\n    /**\n     * @return {?}\n     */\n    Router.prototype.resetUrlToCurrentUrlTree = /**\n     * @return {?}\n     */\n    function () {\n        this.location.replaceState(this.urlSerializer.serialize(this.rawUrlTree));\n    };\n    return Router;\n}());\nvar ActivateRoutes = /** @class */ (function () {\n    function ActivateRoutes(routeReuseStrategy, futureState, currState, forwardEvent) {\n        this.routeReuseStrategy = routeReuseStrategy;\n        this.futureState = futureState;\n        this.currState = currState;\n        this.forwardEvent = forwardEvent;\n    }\n    /**\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.activate = /**\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    function (parentContexts) {\n        var /** @type {?} */ futureRoot = this.futureState._root;\n        var /** @type {?} */ currRoot = this.currState ? this.currState._root : null;\n        this.deactivateChildRoutes(futureRoot, currRoot, parentContexts);\n        advanceActivatedRoute(this.futureState.root);\n        this.activateChildRoutes(futureRoot, currRoot, parentContexts);\n    };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} contexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.deactivateChildRoutes = /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} contexts\n     * @return {?}\n     */\n    function (futureNode, currNode, contexts) {\n        var _this = this;\n        var /** @type {?} */ children = nodeChildrenAsMap(currNode);\n        // Recurse on the routes active in the future state to de-activate deeper children\n        futureNode.children.forEach(function (futureChild) {\n            var /** @type {?} */ childOutletName = futureChild.value.outlet;\n            _this.deactivateRoutes(futureChild, children[childOutletName], contexts);\n            delete children[childOutletName];\n        });\n        // De-activate the routes that will not be re-used\n        forEach(children, function (v, childName) {\n            _this.deactivateRouteAndItsChildren(v, contexts);\n        });\n    };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} parentContext\n     * @return {?}\n     */\n    ActivateRoutes.prototype.deactivateRoutes = /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} parentContext\n     * @return {?}\n     */\n    function (futureNode, currNode, parentContext) {\n        var /** @type {?} */ future = futureNode.value;\n        var /** @type {?} */ curr = currNode ? currNode.value : null;\n        if (future === curr) {\n            // Reusing the node, check to see if the children need to be de-activated\n            if (future.component) {\n                // If we have a normal route, we need to go through an outlet.\n                var /** @type {?} */ context = parentContext.getContext(future.outlet);\n                if (context) {\n                    this.deactivateChildRoutes(futureNode, currNode, context.children);\n                }\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.deactivateChildRoutes(futureNode, currNode, parentContext);\n            }\n        }\n        else {\n            if (curr) {\n                // Deactivate the current route which will not be re-used\n                this.deactivateRouteAndItsChildren(currNode, parentContext);\n            }\n        }\n    };\n    /**\n     * @param {?} route\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.deactivateRouteAndItsChildren = /**\n     * @param {?} route\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    function (route, parentContexts) {\n        if (this.routeReuseStrategy.shouldDetach(route.value.snapshot)) {\n            this.detachAndStoreRouteSubtree(route, parentContexts);\n        }\n        else {\n            this.deactivateRouteAndOutlet(route, parentContexts);\n        }\n    };\n    /**\n     * @param {?} route\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.detachAndStoreRouteSubtree = /**\n     * @param {?} route\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    function (route, parentContexts) {\n        var /** @type {?} */ context = parentContexts.getContext(route.value.outlet);\n        if (context && context.outlet) {\n            var /** @type {?} */ componentRef = context.outlet.detach();\n            var /** @type {?} */ contexts = context.children.onOutletDeactivated();\n            this.routeReuseStrategy.store(route.value.snapshot, { componentRef: componentRef, route: route, contexts: contexts });\n        }\n    };\n    /**\n     * @param {?} route\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.deactivateRouteAndOutlet = /**\n     * @param {?} route\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    function (route, parentContexts) {\n        var _this = this;\n        var /** @type {?} */ context = parentContexts.getContext(route.value.outlet);\n        if (context) {\n            var /** @type {?} */ children = nodeChildrenAsMap(route);\n            var /** @type {?} */ contexts_1 = route.value.component ? context.children : parentContexts;\n            forEach(children, function (v, k) { return _this.deactivateRouteAndItsChildren(v, contexts_1); });\n            if (context.outlet) {\n                // Destroy the component\n                context.outlet.deactivate();\n                // Destroy the contexts for all the outlets that were in the component\n                context.children.onOutletDeactivated();\n            }\n        }\n    };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} contexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.activateChildRoutes = /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} contexts\n     * @return {?}\n     */\n    function (futureNode, currNode, contexts) {\n        var _this = this;\n        var /** @type {?} */ children = nodeChildrenAsMap(currNode);\n        futureNode.children.forEach(function (c) {\n            _this.activateRoutes(c, children[c.value.outlet], contexts);\n            _this.forwardEvent(new ActivationEnd(c.value.snapshot));\n        });\n        if (futureNode.children.length) {\n            this.forwardEvent(new ChildActivationEnd(futureNode.value.snapshot));\n        }\n    };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.activateRoutes = /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    function (futureNode, currNode, parentContexts) {\n        var /** @type {?} */ future = futureNode.value;\n        var /** @type {?} */ curr = currNode ? currNode.value : null;\n        advanceActivatedRoute(future);\n        // reusing the node\n        if (future === curr) {\n            if (future.component) {\n                // If we have a normal route, we need to go through an outlet.\n                var /** @type {?} */ context = parentContexts.getOrCreateContext(future.outlet);\n                this.activateChildRoutes(futureNode, currNode, context.children);\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.activateChildRoutes(futureNode, currNode, parentContexts);\n            }\n        }\n        else {\n            if (future.component) {\n                // if we have a normal route, we need to place the component into the outlet and recurse.\n                var /** @type {?} */ context = parentContexts.getOrCreateContext(future.outlet);\n                if (this.routeReuseStrategy.shouldAttach(future.snapshot)) {\n                    var /** @type {?} */ stored = (/** @type {?} */ (this.routeReuseStrategy.retrieve(future.snapshot)));\n                    this.routeReuseStrategy.store(future.snapshot, null);\n                    context.children.onOutletReAttached(stored.contexts);\n                    context.attachRef = stored.componentRef;\n                    context.route = stored.route.value;\n                    if (context.outlet) {\n                        // Attach right away when the outlet has already been instantiated\n                        // Otherwise attach from `RouterOutlet.ngOnInit` when it is instantiated\n                        context.outlet.attach(stored.componentRef, stored.route.value);\n                    }\n                    advanceActivatedRouteNodeAndItsChildren(stored.route);\n                }\n                else {\n                    var /** @type {?} */ config = parentLoadedConfig(future.snapshot);\n                    var /** @type {?} */ cmpFactoryResolver = config ? config.module.componentFactoryResolver : null;\n                    context.route = future;\n                    context.resolver = cmpFactoryResolver;\n                    if (context.outlet) {\n                        // Activate the outlet when it has already been instantiated\n                        // Otherwise it will get activated from its `ngOnInit` when instantiated\n                        context.outlet.activateWith(future, cmpFactoryResolver);\n                    }\n                    this.activateChildRoutes(futureNode, null, context.children);\n                }\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.activateChildRoutes(futureNode, null, parentContexts);\n            }\n        }\n    };\n    return ActivateRoutes;\n}());\n/**\n * @param {?} node\n * @return {?}\n */\nfunction advanceActivatedRouteNodeAndItsChildren(node) {\n    advanceActivatedRoute(node.value);\n    node.children.forEach(advanceActivatedRouteNodeAndItsChildren);\n}\n/**\n * @param {?} snapshot\n * @return {?}\n */\nfunction parentLoadedConfig(snapshot) {\n    for (var /** @type {?} */ s = snapshot.parent; s; s = s.parent) {\n        var /** @type {?} */ route = s.routeConfig;\n        if (route && route._loadedConfig)\n            return route._loadedConfig;\n        if (route && route.component)\n            return null;\n    }\n    return null;\n}\n/**\n * @param {?} commands\n * @return {?}\n */\nfunction validateCommands(commands) {\n    for (var /** @type {?} */ i = 0; i < commands.length; i++) {\n        var /** @type {?} */ cmd = commands[i];\n        if (cmd == null) {\n            throw new Error(\"The requested path contains \" + cmd + \" segment at index \" + i);\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Lets you link to specific parts of your app.\n *\n * \\@howToUse\n *\n * Consider the following route configuration:\n * `[{ path: 'user/:name', component: UserCmp }]`\n *\n * When linking to this `user/:name` route, you can write:\n * `<a routerLink='/user/bob'>link to user component</a>`\n *\n * \\@description\n *\n * The RouterLink directives let you link to specific parts of your app.\n *\n * When the link is static, you can use the directive as follows:\n * `<a routerLink=\"/user/bob\">link to user component</a>`\n *\n * If you use dynamic values to generate the link, you can pass an array of path\n * segments, followed by the params for each segment.\n *\n * For instance `['/team', teamId, 'user', userName, {details: true}]`\n * means that we want to generate a link to `/team/11/user/bob;details=true`.\n *\n * Multiple static segments can be merged into one\n * (e.g., `['/team/11/user', userName, {details: true}]`).\n *\n * The first segment name can be prepended with `/`, `./`, or `../`:\n * * If the first segment begins with `/`, the router will look up the route from the root of the\n *   app.\n * * If the first segment begins with `./`, or doesn't begin with a slash, the router will\n *   instead look in the children of the current activated route.\n * * And if the first segment begins with `../`, the router will go up one level.\n *\n * You can set query params and fragment as follows:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" fragment=\"education\">\n *   link to user component\n * </a>\n * ```\n * RouterLink will use these to generate this link: `/user/bob#education?debug=true`.\n *\n * (Deprecated in v4.0.0 use `queryParamsHandling` instead) You can also tell the\n * directive to preserve the current query params and fragment:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" preserveQueryParams preserveFragment>\n *   link to user component\n * </a>\n * ```\n *\n * You can tell the directive to how to handle queryParams, available options are:\n *  - `'merge'`: merge the queryParams into the current queryParams\n *  - `'preserve'`: preserve the current queryParams\n *  - default/`''`: use the queryParams only\n *\n * Same options for {\\@link NavigationExtras#queryParamsHandling\n * NavigationExtras#queryParamsHandling}.\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" queryParamsHandling=\"merge\">\n *   link to user component\n * </a>\n * ```\n *\n * The router link directive always treats the provided input as a delta to the current url.\n *\n * For instance, if the current url is `/user/(box//aux:team)`.\n *\n * Then the following link `<a [routerLink]=\"['/user/jim']\">Jim</a>` will generate the link\n * `/user/(jim//aux:team)`.\n *\n * See {\\@link Router#createUrlTree createUrlTree} for more information.\n *\n * \\@ngModule RouterModule\n *\n * \\@stable\n */\nvar RouterLink = /** @class */ (function () {\n    function RouterLink(router, route, tabIndex, renderer, el) {\n        this.router = router;\n        this.route = route;\n        this.commands = [];\n        if (tabIndex == null) {\n            renderer.setAttribute(el.nativeElement, 'tabindex', '0');\n        }\n    }\n    Object.defineProperty(RouterLink.prototype, \"routerLink\", {\n        set: /**\n         * @param {?} commands\n         * @return {?}\n         */\n        function (commands) {\n            if (commands != null) {\n                this.commands = Array.isArray(commands) ? commands : [commands];\n            }\n            else {\n                this.commands = [];\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterLink.prototype, \"preserveQueryParams\", {\n        set: /**\n         * @deprecated 4.0.0 use `queryParamsHandling` instead.\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            if (_angular_core.isDevMode() && /** @type {?} */ (console) && /** @type {?} */ (console.warn)) {\n                console.warn('preserveQueryParams is deprecated!, use queryParamsHandling instead.');\n            }\n            this.preserve = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    RouterLink.prototype.onClick = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ extras = {\n            skipLocationChange: attrBoolValue(this.skipLocationChange),\n            replaceUrl: attrBoolValue(this.replaceUrl),\n        };\n        this.router.navigateByUrl(this.urlTree, extras);\n        return true;\n    };\n    Object.defineProperty(RouterLink.prototype, \"urlTree\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.router.createUrlTree(this.commands, {\n                relativeTo: this.route,\n                queryParams: this.queryParams,\n                fragment: this.fragment,\n                preserveQueryParams: attrBoolValue(this.preserve),\n                queryParamsHandling: this.queryParamsHandling,\n                preserveFragment: attrBoolValue(this.preserveFragment),\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RouterLink.decorators = [\n        { type: _angular_core.Directive, args: [{ selector: ':not(a)[routerLink]' },] },\n    ];\n    /** @nocollapse */\n    RouterLink.ctorParameters = function () { return [\n        { type: Router, },\n        { type: ActivatedRoute, },\n        { type: undefined, decorators: [{ type: _angular_core.Attribute, args: ['tabindex',] },] },\n        { type: _angular_core.Renderer2, },\n        { type: _angular_core.ElementRef, },\n    ]; };\n    RouterLink.propDecorators = {\n        \"queryParams\": [{ type: _angular_core.Input },],\n        \"fragment\": [{ type: _angular_core.Input },],\n        \"queryParamsHandling\": [{ type: _angular_core.Input },],\n        \"preserveFragment\": [{ type: _angular_core.Input },],\n        \"skipLocationChange\": [{ type: _angular_core.Input },],\n        \"replaceUrl\": [{ type: _angular_core.Input },],\n        \"routerLink\": [{ type: _angular_core.Input },],\n        \"preserveQueryParams\": [{ type: _angular_core.Input },],\n        \"onClick\": [{ type: _angular_core.HostListener, args: ['click',] },],\n    };\n    return RouterLink;\n}());\n/**\n * \\@whatItDoes Lets you link to specific parts of your app.\n *\n * See {\\@link RouterLink} for more information.\n *\n * \\@ngModule RouterModule\n *\n * \\@stable\n */\nvar RouterLinkWithHref = /** @class */ (function () {\n    function RouterLinkWithHref(router, route, locationStrategy) {\n        var _this = this;\n        this.router = router;\n        this.route = route;\n        this.locationStrategy = locationStrategy;\n        this.commands = [];\n        this.subscription = router.events.subscribe(function (s) {\n            if (s instanceof NavigationEnd) {\n                _this.updateTargetUrlAndHref();\n            }\n        });\n    }\n    Object.defineProperty(RouterLinkWithHref.prototype, \"routerLink\", {\n        set: /**\n         * @param {?} commands\n         * @return {?}\n         */\n        function (commands) {\n            if (commands != null) {\n                this.commands = Array.isArray(commands) ? commands : [commands];\n            }\n            else {\n                this.commands = [];\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterLinkWithHref.prototype, \"preserveQueryParams\", {\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            if (_angular_core.isDevMode() && /** @type {?} */ (console) && /** @type {?} */ (console.warn)) {\n                console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n            }\n            this.preserve = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    RouterLinkWithHref.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) { this.updateTargetUrlAndHref(); };\n    /**\n     * @return {?}\n     */\n    RouterLinkWithHref.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () { this.subscription.unsubscribe(); };\n    /**\n     * @param {?} button\n     * @param {?} ctrlKey\n     * @param {?} metaKey\n     * @param {?} shiftKey\n     * @return {?}\n     */\n    RouterLinkWithHref.prototype.onClick = /**\n     * @param {?} button\n     * @param {?} ctrlKey\n     * @param {?} metaKey\n     * @param {?} shiftKey\n     * @return {?}\n     */\n    function (button, ctrlKey, metaKey, shiftKey) {\n        if (button !== 0 || ctrlKey || metaKey || shiftKey) {\n            return true;\n        }\n        if (typeof this.target === 'string' && this.target != '_self') {\n            return true;\n        }\n        var /** @type {?} */ extras = {\n            skipLocationChange: attrBoolValue(this.skipLocationChange),\n            replaceUrl: attrBoolValue(this.replaceUrl),\n        };\n        this.router.navigateByUrl(this.urlTree, extras);\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    RouterLinkWithHref.prototype.updateTargetUrlAndHref = /**\n     * @return {?}\n     */\n    function () {\n        this.href = this.locationStrategy.prepareExternalUrl(this.router.serializeUrl(this.urlTree));\n    };\n    Object.defineProperty(RouterLinkWithHref.prototype, \"urlTree\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.router.createUrlTree(this.commands, {\n                relativeTo: this.route,\n                queryParams: this.queryParams,\n                fragment: this.fragment,\n                preserveQueryParams: attrBoolValue(this.preserve),\n                queryParamsHandling: this.queryParamsHandling,\n                preserveFragment: attrBoolValue(this.preserveFragment),\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RouterLinkWithHref.decorators = [\n        { type: _angular_core.Directive, args: [{ selector: 'a[routerLink]' },] },\n    ];\n    /** @nocollapse */\n    RouterLinkWithHref.ctorParameters = function () { return [\n        { type: Router, },\n        { type: ActivatedRoute, },\n        { type: _angular_common.LocationStrategy, },\n    ]; };\n    RouterLinkWithHref.propDecorators = {\n        \"target\": [{ type: _angular_core.HostBinding, args: ['attr.target',] }, { type: _angular_core.Input },],\n        \"queryParams\": [{ type: _angular_core.Input },],\n        \"fragment\": [{ type: _angular_core.Input },],\n        \"queryParamsHandling\": [{ type: _angular_core.Input },],\n        \"preserveFragment\": [{ type: _angular_core.Input },],\n        \"skipLocationChange\": [{ type: _angular_core.Input },],\n        \"replaceUrl\": [{ type: _angular_core.Input },],\n        \"href\": [{ type: _angular_core.HostBinding },],\n        \"routerLink\": [{ type: _angular_core.Input },],\n        \"preserveQueryParams\": [{ type: _angular_core.Input },],\n        \"onClick\": [{ type: _angular_core.HostListener, args: ['click', ['$event.button', '$event.ctrlKey', '$event.metaKey', '$event.shiftKey'],] },],\n    };\n    return RouterLinkWithHref;\n}());\n/**\n * @param {?} s\n * @return {?}\n */\nfunction attrBoolValue(s) {\n    return s === '' || !!s;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Lets you add a CSS class to an element when the link's route becomes active.\n *\n * \\@howToUse\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\">Bob</a>\n * ```\n *\n * \\@description\n *\n * The RouterLinkActive directive lets you add a CSS class to an element when the link's route\n * becomes active.\n *\n * Consider the following example:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\">Bob</a>\n * ```\n *\n * When the url is either '/user' or '/user/bob', the active-link class will\n * be added to the `a` tag. If the url changes, the class will be removed.\n *\n * You can set more than one class, as follows:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"class1 class2\">Bob</a>\n * <a routerLink=\"/user/bob\" [routerLinkActive]=\"['class1', 'class2']\">Bob</a>\n * ```\n *\n * You can configure RouterLinkActive by passing `exact: true`. This will add the classes\n * only when the url matches the link exactly.\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact:\n * true}\">Bob</a>\n * ```\n *\n * You can assign the RouterLinkActive instance to a template variable and directly check\n * the `isActive` status.\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive #rla=\"routerLinkActive\">\n *   Bob {{ rla.isActive ? '(already open)' : ''}}\n * </a>\n * ```\n *\n * Finally, you can apply the RouterLinkActive directive to an ancestor of a RouterLink.\n *\n * ```\n * <div routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact: true}\">\n *   <a routerLink=\"/user/jim\">Jim</a>\n *   <a routerLink=\"/user/bob\">Bob</a>\n * </div>\n * ```\n *\n * This will set the active-link class on the div tag if the url is either '/user/jim' or\n * '/user/bob'.\n *\n * \\@ngModule RouterModule\n *\n * \\@stable\n */\nvar RouterLinkActive = /** @class */ (function () {\n    function RouterLinkActive(router, element, renderer, cdr) {\n        var _this = this;\n        this.router = router;\n        this.element = element;\n        this.renderer = renderer;\n        this.cdr = cdr;\n        this.classes = [];\n        this.isActive = false;\n        this.routerLinkActiveOptions = { exact: false };\n        this.subscription = router.events.subscribe(function (s) {\n            if (s instanceof NavigationEnd) {\n                _this.update();\n            }\n        });\n    }\n    /**\n     * @return {?}\n     */\n    RouterLinkActive.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this.links.changes.subscribe(function (_) { return _this.update(); });\n        this.linksWithHrefs.changes.subscribe(function (_) { return _this.update(); });\n        this.update();\n    };\n    Object.defineProperty(RouterLinkActive.prototype, \"routerLinkActive\", {\n        set: /**\n         * @param {?} data\n         * @return {?}\n         */\n        function (data) {\n            var /** @type {?} */ classes = Array.isArray(data) ? data : data.split(' ');\n            this.classes = classes.filter(function (c) { return !!c; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    RouterLinkActive.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) { this.update(); };\n    /**\n     * @return {?}\n     */\n    RouterLinkActive.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () { this.subscription.unsubscribe(); };\n    /**\n     * @return {?}\n     */\n    RouterLinkActive.prototype.update = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!this.links || !this.linksWithHrefs || !this.router.navigated)\n            return;\n        Promise.resolve().then(function () {\n            var /** @type {?} */ hasActiveLinks = _this.hasActiveLinks();\n            if (_this.isActive !== hasActiveLinks) {\n                (/** @type {?} */ (_this)).isActive = hasActiveLinks;\n                _this.classes.forEach(function (c) {\n                    if (hasActiveLinks) {\n                        _this.renderer.addClass(_this.element.nativeElement, c);\n                    }\n                    else {\n                        _this.renderer.removeClass(_this.element.nativeElement, c);\n                    }\n                });\n            }\n        });\n    };\n    /**\n     * @param {?} router\n     * @return {?}\n     */\n    RouterLinkActive.prototype.isLinkActive = /**\n     * @param {?} router\n     * @return {?}\n     */\n    function (router) {\n        var _this = this;\n        return function (link) {\n            return router.isActive(link.urlTree, _this.routerLinkActiveOptions.exact);\n        };\n    };\n    /**\n     * @return {?}\n     */\n    RouterLinkActive.prototype.hasActiveLinks = /**\n     * @return {?}\n     */\n    function () {\n        return this.links.some(this.isLinkActive(this.router)) ||\n            this.linksWithHrefs.some(this.isLinkActive(this.router));\n    };\n    RouterLinkActive.decorators = [\n        { type: _angular_core.Directive, args: [{\n                    selector: '[routerLinkActive]',\n                    exportAs: 'routerLinkActive',\n                },] },\n    ];\n    /** @nocollapse */\n    RouterLinkActive.ctorParameters = function () { return [\n        { type: Router, },\n        { type: _angular_core.ElementRef, },\n        { type: _angular_core.Renderer2, },\n        { type: _angular_core.ChangeDetectorRef, },\n    ]; };\n    RouterLinkActive.propDecorators = {\n        \"links\": [{ type: _angular_core.ContentChildren, args: [RouterLink, { descendants: true },] },],\n        \"linksWithHrefs\": [{ type: _angular_core.ContentChildren, args: [RouterLinkWithHref, { descendants: true },] },],\n        \"routerLinkActiveOptions\": [{ type: _angular_core.Input },],\n        \"routerLinkActive\": [{ type: _angular_core.Input },],\n    };\n    return RouterLinkActive;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Store contextual information about a {\\@link RouterOutlet}\n *\n * \\@stable\n */\nvar OutletContext = /** @class */ (function () {\n    function OutletContext() {\n        this.outlet = null;\n        this.route = null;\n        this.resolver = null;\n        this.children = new ChildrenOutletContexts();\n        this.attachRef = null;\n    }\n    return OutletContext;\n}());\n/**\n * Store contextual information about the children (= nested) {\\@link RouterOutlet}\n *\n * \\@stable\n */\nvar ChildrenOutletContexts = /** @class */ (function () {\n    function ChildrenOutletContexts() {\n        this.contexts = new Map();\n    }\n    /** Called when a `RouterOutlet` directive is instantiated */\n    /**\n     * Called when a `RouterOutlet` directive is instantiated\n     * @param {?} childName\n     * @param {?} outlet\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.onChildOutletCreated = /**\n     * Called when a `RouterOutlet` directive is instantiated\n     * @param {?} childName\n     * @param {?} outlet\n     * @return {?}\n     */\n    function (childName, outlet) {\n        var /** @type {?} */ context = this.getOrCreateContext(childName);\n        context.outlet = outlet;\n        this.contexts.set(childName, context);\n    };\n    /**\n     * Called when a `RouterOutlet` directive is destroyed.\n     * We need to keep the context as the outlet could be destroyed inside a NgIf and might be\n     * re-created later.\n     */\n    /**\n     * Called when a `RouterOutlet` directive is destroyed.\n     * We need to keep the context as the outlet could be destroyed inside a NgIf and might be\n     * re-created later.\n     * @param {?} childName\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.onChildOutletDestroyed = /**\n     * Called when a `RouterOutlet` directive is destroyed.\n     * We need to keep the context as the outlet could be destroyed inside a NgIf and might be\n     * re-created later.\n     * @param {?} childName\n     * @return {?}\n     */\n    function (childName) {\n        var /** @type {?} */ context = this.getContext(childName);\n        if (context) {\n            context.outlet = null;\n        }\n    };\n    /**\n     * Called when the corresponding route is deactivated during navigation.\n     * Because the component get destroyed, all children outlet are destroyed.\n     */\n    /**\n     * Called when the corresponding route is deactivated during navigation.\n     * Because the component get destroyed, all children outlet are destroyed.\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.onOutletDeactivated = /**\n     * Called when the corresponding route is deactivated during navigation.\n     * Because the component get destroyed, all children outlet are destroyed.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ contexts = this.contexts;\n        this.contexts = new Map();\n        return contexts;\n    };\n    /**\n     * @param {?} contexts\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.onOutletReAttached = /**\n     * @param {?} contexts\n     * @return {?}\n     */\n    function (contexts) { this.contexts = contexts; };\n    /**\n     * @param {?} childName\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.getOrCreateContext = /**\n     * @param {?} childName\n     * @return {?}\n     */\n    function (childName) {\n        var /** @type {?} */ context = this.getContext(childName);\n        if (!context) {\n            context = new OutletContext();\n            this.contexts.set(childName, context);\n        }\n        return context;\n    };\n    /**\n     * @param {?} childName\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.getContext = /**\n     * @param {?} childName\n     * @return {?}\n     */\n    function (childName) { return this.contexts.get(childName) || null; };\n    return ChildrenOutletContexts;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Acts as a placeholder that Angular dynamically fills based on the current router\n * state.\n *\n * \\@howToUse\n *\n * ```\n * <router-outlet></router-outlet>\n * <router-outlet name='left'></router-outlet>\n * <router-outlet name='right'></router-outlet>\n * ```\n *\n * A router outlet will emit an activate event any time a new component is being instantiated,\n * and a deactivate event when it is being destroyed.\n *\n * ```\n * <router-outlet\n *   (activate)='onActivate($event)'\n *   (deactivate)='onDeactivate($event)'></router-outlet>\n * ```\n * \\@ngModule RouterModule\n *\n * \\@stable\n */\nvar RouterOutlet = /** @class */ (function () {\n    function RouterOutlet(parentContexts, location, resolver, name, changeDetector) {\n        this.parentContexts = parentContexts;\n        this.location = location;\n        this.resolver = resolver;\n        this.changeDetector = changeDetector;\n        this.activated = null;\n        this._activatedRoute = null;\n        this.activateEvents = new _angular_core.EventEmitter();\n        this.deactivateEvents = new _angular_core.EventEmitter();\n        this.name = name || PRIMARY_OUTLET;\n        parentContexts.onChildOutletCreated(this.name, this);\n    }\n    /**\n     * @return {?}\n     */\n    RouterOutlet.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () { this.parentContexts.onChildOutletDestroyed(this.name); };\n    /**\n     * @return {?}\n     */\n    RouterOutlet.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        if (!this.activated) {\n            // If the outlet was not instantiated at the time the route got activated we need to populate\n            // the outlet when it is initialized (ie inside a NgIf)\n            var /** @type {?} */ context = this.parentContexts.getContext(this.name);\n            if (context && context.route) {\n                if (context.attachRef) {\n                    // `attachRef` is populated when there is an existing component to mount\n                    this.attach(context.attachRef, context.route);\n                }\n                else {\n                    // otherwise the component defined in the configuration is created\n                    this.activateWith(context.route, context.resolver || null);\n                }\n            }\n        }\n    };\n    Object.defineProperty(RouterOutlet.prototype, \"isActivated\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return !!this.activated; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"component\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            if (!this.activated)\n                throw new Error('Outlet is not activated');\n            return this.activated.instance;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"activatedRoute\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            if (!this.activated)\n                throw new Error('Outlet is not activated');\n            return /** @type {?} */ (this._activatedRoute);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"activatedRouteData\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            if (this._activatedRoute) {\n                return this._activatedRoute.snapshot.data;\n            }\n            return {};\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Called when the `RouteReuseStrategy` instructs to detach the subtree\n     */\n    /**\n     * Called when the `RouteReuseStrategy` instructs to detach the subtree\n     * @return {?}\n     */\n    RouterOutlet.prototype.detach = /**\n     * Called when the `RouteReuseStrategy` instructs to detach the subtree\n     * @return {?}\n     */\n    function () {\n        if (!this.activated)\n            throw new Error('Outlet is not activated');\n        this.location.detach();\n        var /** @type {?} */ cmp = this.activated;\n        this.activated = null;\n        this._activatedRoute = null;\n        return cmp;\n    };\n    /**\n     * Called when the `RouteReuseStrategy` instructs to re-attach a previously detached subtree\n     */\n    /**\n     * Called when the `RouteReuseStrategy` instructs to re-attach a previously detached subtree\n     * @param {?} ref\n     * @param {?} activatedRoute\n     * @return {?}\n     */\n    RouterOutlet.prototype.attach = /**\n     * Called when the `RouteReuseStrategy` instructs to re-attach a previously detached subtree\n     * @param {?} ref\n     * @param {?} activatedRoute\n     * @return {?}\n     */\n    function (ref, activatedRoute) {\n        this.activated = ref;\n        this._activatedRoute = activatedRoute;\n        this.location.insert(ref.hostView);\n    };\n    /**\n     * @return {?}\n     */\n    RouterOutlet.prototype.deactivate = /**\n     * @return {?}\n     */\n    function () {\n        if (this.activated) {\n            var /** @type {?} */ c = this.component;\n            this.activated.destroy();\n            this.activated = null;\n            this._activatedRoute = null;\n            this.deactivateEvents.emit(c);\n        }\n    };\n    /**\n     * @param {?} activatedRoute\n     * @param {?} resolver\n     * @return {?}\n     */\n    RouterOutlet.prototype.activateWith = /**\n     * @param {?} activatedRoute\n     * @param {?} resolver\n     * @return {?}\n     */\n    function (activatedRoute, resolver) {\n        if (this.isActivated) {\n            throw new Error('Cannot activate an already activated outlet');\n        }\n        this._activatedRoute = activatedRoute;\n        var /** @type {?} */ snapshot = activatedRoute._futureSnapshot;\n        var /** @type {?} */ component = /** @type {?} */ (/** @type {?} */ ((snapshot.routeConfig)).component);\n        resolver = resolver || this.resolver;\n        var /** @type {?} */ factory = resolver.resolveComponentFactory(component);\n        var /** @type {?} */ childContexts = this.parentContexts.getOrCreateContext(this.name).children;\n        var /** @type {?} */ injector = new OutletInjector(activatedRoute, childContexts, this.location.injector);\n        this.activated = this.location.createComponent(factory, this.location.length, injector);\n        // Calling `markForCheck` to make sure we will run the change detection when the\n        // `RouterOutlet` is inside a `ChangeDetectionStrategy.OnPush` component.\n        this.changeDetector.markForCheck();\n        this.activateEvents.emit(this.activated.instance);\n    };\n    RouterOutlet.decorators = [\n        { type: _angular_core.Directive, args: [{ selector: 'router-outlet', exportAs: 'outlet' },] },\n    ];\n    /** @nocollapse */\n    RouterOutlet.ctorParameters = function () { return [\n        { type: ChildrenOutletContexts, },\n        { type: _angular_core.ViewContainerRef, },\n        { type: _angular_core.ComponentFactoryResolver, },\n        { type: undefined, decorators: [{ type: _angular_core.Attribute, args: ['name',] },] },\n        { type: _angular_core.ChangeDetectorRef, },\n    ]; };\n    RouterOutlet.propDecorators = {\n        \"activateEvents\": [{ type: _angular_core.Output, args: ['activate',] },],\n        \"deactivateEvents\": [{ type: _angular_core.Output, args: ['deactivate',] },],\n    };\n    return RouterOutlet;\n}());\nvar OutletInjector = /** @class */ (function () {\n    function OutletInjector(route, childContexts, parent) {\n        this.route = route;\n        this.childContexts = childContexts;\n        this.parent = parent;\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    OutletInjector.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (token === ActivatedRoute) {\n            return this.route;\n        }\n        if (token === ChildrenOutletContexts) {\n            return this.childContexts;\n        }\n        return this.parent.get(token, notFoundValue);\n    };\n    return OutletInjector;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n*@license\n*Copyright Google Inc. All Rights Reserved.\n*\n*Use of this source code is governed by an MIT-style license that can be\n*found in the LICENSE file at https://angular.io/license\n*/\n/**\n * \\@whatItDoes Provides a preloading strategy.\n *\n * \\@experimental\n * @abstract\n */\nvar PreloadingStrategy = /** @class */ (function () {\n    function PreloadingStrategy() {\n    }\n    return PreloadingStrategy;\n}());\n/**\n * \\@whatItDoes Provides a preloading strategy that preloads all modules as quickly as possible.\n *\n * \\@howToUse\n *\n * ```\n * RouteModule.forRoot(ROUTES, {preloadingStrategy: PreloadAllModules})\n * ```\n *\n * \\@experimental\n */\nvar PreloadAllModules = /** @class */ (function () {\n    function PreloadAllModules() {\n    }\n    /**\n     * @param {?} route\n     * @param {?} fn\n     * @return {?}\n     */\n    PreloadAllModules.prototype.preload = /**\n     * @param {?} route\n     * @param {?} fn\n     * @return {?}\n     */\n    function (route, fn) {\n        return rxjs_operator_catch._catch.call(fn(), function () { return rxjs_observable_of.of(null); });\n    };\n    return PreloadAllModules;\n}());\n/**\n * \\@whatItDoes Provides a preloading strategy that does not preload any modules.\n *\n * \\@description\n *\n * This strategy is enabled by default.\n *\n * \\@experimental\n */\nvar NoPreloading = /** @class */ (function () {\n    function NoPreloading() {\n    }\n    /**\n     * @param {?} route\n     * @param {?} fn\n     * @return {?}\n     */\n    NoPreloading.prototype.preload = /**\n     * @param {?} route\n     * @param {?} fn\n     * @return {?}\n     */\n    function (route, fn) { return rxjs_observable_of.of(null); };\n    return NoPreloading;\n}());\n/**\n * The preloader optimistically loads all router configurations to\n * make navigations into lazily-loaded sections of the application faster.\n *\n * The preloader runs in the background. When the router bootstraps, the preloader\n * starts listening to all navigation events. After every such event, the preloader\n * will check if any configurations can be loaded lazily.\n *\n * If a route is protected by `canLoad` guards, the preloaded will not load it.\n *\n * \\@stable\n */\nvar RouterPreloader = /** @class */ (function () {\n    function RouterPreloader(router, moduleLoader, compiler, injector, preloadingStrategy) {\n        this.router = router;\n        this.injector = injector;\n        this.preloadingStrategy = preloadingStrategy;\n        var /** @type {?} */ onStartLoad = function (r) { return router.triggerEvent(new RouteConfigLoadStart(r)); };\n        var /** @type {?} */ onEndLoad = function (r) { return router.triggerEvent(new RouteConfigLoadEnd(r)); };\n        this.loader = new RouterConfigLoader(moduleLoader, compiler, onStartLoad, onEndLoad);\n    }\n    /**\n     * @return {?}\n     */\n    RouterPreloader.prototype.setUpPreloading = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ navigations$ = rxjs_operator_filter.filter.call(this.router.events, function (e) { return e instanceof NavigationEnd; });\n        this.subscription = rxjs_operator_concatMap.concatMap.call(navigations$, function () { return _this.preload(); }).subscribe(function () { });\n    };\n    /**\n     * @return {?}\n     */\n    RouterPreloader.prototype.preload = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ ngModule = this.injector.get(_angular_core.NgModuleRef);\n        return this.processRoutes(ngModule, this.router.config);\n    };\n    // TODO(jasonaden): This class relies on code external to the class to call setUpPreloading. If\n    // this hasn't been done, ngOnDestroy will fail as this.subscription will be undefined. This\n    // should be refactored.\n    /**\n     * @return {?}\n     */\n    RouterPreloader.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () { this.subscription.unsubscribe(); };\n    /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @return {?}\n     */\n    RouterPreloader.prototype.processRoutes = /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @return {?}\n     */\n    function (ngModule, routes) {\n        var /** @type {?} */ res = [];\n        for (var _i = 0, routes_1 = routes; _i < routes_1.length; _i++) {\n            var route = routes_1[_i];\n            // we already have the config loaded, just recurse\n            if (route.loadChildren && !route.canLoad && route._loadedConfig) {\n                var /** @type {?} */ childConfig = route._loadedConfig;\n                res.push(this.processRoutes(childConfig.module, childConfig.routes));\n                // no config loaded, fetch the config\n            }\n            else if (route.loadChildren && !route.canLoad) {\n                res.push(this.preloadConfig(ngModule, route));\n                // recurse into children\n            }\n            else if (route.children) {\n                res.push(this.processRoutes(ngModule, route.children));\n            }\n        }\n        return rxjs_operator_mergeAll.mergeAll.call(rxjs_observable_from.from(res));\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} route\n     * @return {?}\n     */\n    RouterPreloader.prototype.preloadConfig = /**\n     * @param {?} ngModule\n     * @param {?} route\n     * @return {?}\n     */\n    function (ngModule, route) {\n        var _this = this;\n        return this.preloadingStrategy.preload(route, function () {\n            var /** @type {?} */ loaded$ = _this.loader.load(ngModule.injector, route);\n            return rxjs_operator_mergeMap.mergeMap.call(loaded$, function (config) {\n                route._loadedConfig = config;\n                return _this.processRoutes(config.module, config.routes);\n            });\n        });\n    };\n    RouterPreloader.decorators = [\n        { type: _angular_core.Injectable },\n    ];\n    /** @nocollapse */\n    RouterPreloader.ctorParameters = function () { return [\n        { type: Router, },\n        { type: _angular_core.NgModuleFactoryLoader, },\n        { type: _angular_core.Compiler, },\n        { type: _angular_core.Injector, },\n        { type: PreloadingStrategy, },\n    ]; };\n    return RouterPreloader;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Contains a list of directives\n * \\@stable\n */\nvar ROUTER_DIRECTIVES = [RouterOutlet, RouterLink, RouterLinkWithHref, RouterLinkActive];\n/**\n * \\@whatItDoes Is used in DI to configure the router.\n * \\@stable\n */\nvar ROUTER_CONFIGURATION = new _angular_core.InjectionToken('ROUTER_CONFIGURATION');\n/**\n * \\@docsNotRequired\n */\nvar ROUTER_FORROOT_GUARD = new _angular_core.InjectionToken('ROUTER_FORROOT_GUARD');\nvar ROUTER_PROVIDERS = [\n    _angular_common.Location,\n    { provide: UrlSerializer, useClass: DefaultUrlSerializer },\n    {\n        provide: Router,\n        useFactory: setupRouter,\n        deps: [\n            _angular_core.ApplicationRef, UrlSerializer, ChildrenOutletContexts, _angular_common.Location, _angular_core.Injector,\n            _angular_core.NgModuleFactoryLoader, _angular_core.Compiler, ROUTES, ROUTER_CONFIGURATION,\n            [UrlHandlingStrategy, new _angular_core.Optional()], [RouteReuseStrategy, new _angular_core.Optional()]\n        ]\n    },\n    ChildrenOutletContexts,\n    { provide: ActivatedRoute, useFactory: rootRoute, deps: [Router] },\n    { provide: _angular_core.NgModuleFactoryLoader, useClass: _angular_core.SystemJsNgModuleLoader },\n    RouterPreloader,\n    NoPreloading,\n    PreloadAllModules,\n    { provide: ROUTER_CONFIGURATION, useValue: { enableTracing: false } },\n];\n/**\n * @return {?}\n */\nfunction routerNgProbeToken() {\n    return new _angular_core.NgProbeToken('Router', Router);\n}\n/**\n * \\@whatItDoes Adds router directives and providers.\n *\n * \\@howToUse\n *\n * RouterModule can be imported multiple times: once per lazily-loaded bundle.\n * Since the router deals with a global shared resource--location, we cannot have\n * more than one router service active.\n *\n * That is why there are two ways to create the module: `RouterModule.forRoot` and\n * `RouterModule.forChild`.\n *\n * * `forRoot` creates a module that contains all the directives, the given routes, and the router\n *   service itself.\n * * `forChild` creates a module that contains all the directives and the given routes, but does not\n *   include the router service.\n *\n * When registered at the root, the module should be used as follows\n *\n * ```\n * \\@NgModule({\n *   imports: [RouterModule.forRoot(ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n * For submodules and lazy loaded submodules the module should be used as follows:\n *\n * ```\n * \\@NgModule({\n *   imports: [RouterModule.forChild(ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n * \\@description\n *\n * Managing state transitions is one of the hardest parts of building applications. This is\n * especially true on the web, where you also need to ensure that the state is reflected in the URL.\n * In addition, we often want to split applications into multiple bundles and load them on demand.\n * Doing this transparently is not trivial.\n *\n * The Angular router solves these problems. Using the router, you can declaratively specify\n * application states, manage state transitions while taking care of the URL, and load bundles on\n * demand.\n *\n * [Read this developer guide](https://angular.io/docs/ts/latest/guide/router.html) to get an\n * overview of how the router should be used.\n *\n * \\@stable\n */\nvar RouterModule = /** @class */ (function () {\n    // Note: We are injecting the Router so it gets created eagerly...\n    function RouterModule(guard, router) {\n    }\n    /**\n     * Creates a module with all the router providers and directives. It also optionally sets up an\n     * application listener to perform an initial navigation.\n     *\n     * Options (see {@link ExtraOptions}):\n     * * `enableTracing` makes the router log all its internal events to the console.\n     * * `useHash` enables the location strategy that uses the URL fragment instead of the history\n     * API.\n     * * `initialNavigation` disables the initial navigation.\n     * * `errorHandler` provides a custom error handler.\n     * * `preloadingStrategy` configures a preloading strategy (see {@link PreloadAllModules}).\n     * * `onSameUrlNavigation` configures how the router handles navigation to the current URL. See\n     * {@link ExtraOptions} for more details.\n     */\n    /**\n     * Creates a module with all the router providers and directives. It also optionally sets up an\n     * application listener to perform an initial navigation.\n     *\n     * Options (see {\\@link ExtraOptions}):\n     * * `enableTracing` makes the router log all its internal events to the console.\n     * * `useHash` enables the location strategy that uses the URL fragment instead of the history\n     * API.\n     * * `initialNavigation` disables the initial navigation.\n     * * `errorHandler` provides a custom error handler.\n     * * `preloadingStrategy` configures a preloading strategy (see {\\@link PreloadAllModules}).\n     * * `onSameUrlNavigation` configures how the router handles navigation to the current URL. See\n     * {\\@link ExtraOptions} for more details.\n     * @param {?} routes\n     * @param {?=} config\n     * @return {?}\n     */\n    RouterModule.forRoot = /**\n     * Creates a module with all the router providers and directives. It also optionally sets up an\n     * application listener to perform an initial navigation.\n     *\n     * Options (see {\\@link ExtraOptions}):\n     * * `enableTracing` makes the router log all its internal events to the console.\n     * * `useHash` enables the location strategy that uses the URL fragment instead of the history\n     * API.\n     * * `initialNavigation` disables the initial navigation.\n     * * `errorHandler` provides a custom error handler.\n     * * `preloadingStrategy` configures a preloading strategy (see {\\@link PreloadAllModules}).\n     * * `onSameUrlNavigation` configures how the router handles navigation to the current URL. See\n     * {\\@link ExtraOptions} for more details.\n     * @param {?} routes\n     * @param {?=} config\n     * @return {?}\n     */\n    function (routes, config) {\n        return {\n            ngModule: RouterModule,\n            providers: [\n                ROUTER_PROVIDERS,\n                provideRoutes(routes),\n                {\n                    provide: ROUTER_FORROOT_GUARD,\n                    useFactory: provideForRootGuard,\n                    deps: [[Router, new _angular_core.Optional(), new _angular_core.SkipSelf()]]\n                },\n                { provide: ROUTER_CONFIGURATION, useValue: config ? config : {} },\n                {\n                    provide: _angular_common.LocationStrategy,\n                    useFactory: provideLocationStrategy,\n                    deps: [\n                        _angular_common.PlatformLocation, [new _angular_core.Inject(_angular_common.APP_BASE_HREF), new _angular_core.Optional()], ROUTER_CONFIGURATION\n                    ]\n                },\n                {\n                    provide: PreloadingStrategy,\n                    useExisting: config && config.preloadingStrategy ? config.preloadingStrategy :\n                        NoPreloading\n                },\n                { provide: _angular_core.NgProbeToken, multi: true, useFactory: routerNgProbeToken },\n                provideRouterInitializer(),\n            ],\n        };\n    };\n    /**\n     * Creates a module with all the router directives and a provider registering routes.\n     */\n    /**\n     * Creates a module with all the router directives and a provider registering routes.\n     * @param {?} routes\n     * @return {?}\n     */\n    RouterModule.forChild = /**\n     * Creates a module with all the router directives and a provider registering routes.\n     * @param {?} routes\n     * @return {?}\n     */\n    function (routes) {\n        return { ngModule: RouterModule, providers: [provideRoutes(routes)] };\n    };\n    RouterModule.decorators = [\n        { type: _angular_core.NgModule, args: [{ declarations: ROUTER_DIRECTIVES, exports: ROUTER_DIRECTIVES },] },\n    ];\n    /** @nocollapse */\n    RouterModule.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Inject, args: [ROUTER_FORROOT_GUARD,] },] },\n        { type: Router, decorators: [{ type: _angular_core.Optional },] },\n    ]; };\n    return RouterModule;\n}());\n/**\n * @param {?} platformLocationStrategy\n * @param {?} baseHref\n * @param {?=} options\n * @return {?}\n */\nfunction provideLocationStrategy(platformLocationStrategy, baseHref, options) {\n    if (options === void 0) { options = {}; }\n    return options.useHash ? new _angular_common.HashLocationStrategy(platformLocationStrategy, baseHref) :\n        new _angular_common.PathLocationStrategy(platformLocationStrategy, baseHref);\n}\n/**\n * @param {?} router\n * @return {?}\n */\nfunction provideForRootGuard(router) {\n    if (router) {\n        throw new Error(\"RouterModule.forRoot() called twice. Lazy loaded modules should use RouterModule.forChild() instead.\");\n    }\n    return 'guarded';\n}\n/**\n * \\@whatItDoes Registers routes.\n *\n * \\@howToUse\n *\n * ```\n * \\@NgModule({\n *   imports: [RouterModule.forChild(ROUTES)],\n *   providers: [provideRoutes(EXTRA_ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n * \\@stable\n * @param {?} routes\n * @return {?}\n */\nfunction provideRoutes(routes) {\n    return [\n        { provide: _angular_core.ANALYZE_FOR_ENTRY_COMPONENTS, multi: true, useValue: routes },\n        { provide: ROUTES, multi: true, useValue: routes },\n    ];\n}\n/**\n * \\@whatItDoes Represents options to configure the router.\n *\n * \\@stable\n * @record\n */\n\n/**\n * @param {?} ref\n * @param {?} urlSerializer\n * @param {?} contexts\n * @param {?} location\n * @param {?} injector\n * @param {?} loader\n * @param {?} compiler\n * @param {?} config\n * @param {?=} opts\n * @param {?=} urlHandlingStrategy\n * @param {?=} routeReuseStrategy\n * @return {?}\n */\nfunction setupRouter(ref, urlSerializer, contexts, location, injector, loader, compiler, config, opts, urlHandlingStrategy, routeReuseStrategy) {\n    if (opts === void 0) { opts = {}; }\n    var /** @type {?} */ router = new Router(null, urlSerializer, contexts, location, injector, loader, compiler, flatten(config));\n    if (urlHandlingStrategy) {\n        router.urlHandlingStrategy = urlHandlingStrategy;\n    }\n    if (routeReuseStrategy) {\n        router.routeReuseStrategy = routeReuseStrategy;\n    }\n    if (opts.errorHandler) {\n        router.errorHandler = opts.errorHandler;\n    }\n    if (opts.enableTracing) {\n        var /** @type {?} */ dom_1 = _angular_platformBrowser.ɵgetDOM();\n        router.events.subscribe(function (e) {\n            dom_1.logGroup(\"Router Event: \" + ((/** @type {?} */ (e.constructor))).name);\n            dom_1.log(e.toString());\n            dom_1.log(e);\n            dom_1.logGroupEnd();\n        });\n    }\n    if (opts.onSameUrlNavigation) {\n        router.onSameUrlNavigation = opts.onSameUrlNavigation;\n    }\n    if (opts.paramsInheritanceStrategy) {\n        router.paramsInheritanceStrategy = opts.paramsInheritanceStrategy;\n    }\n    return router;\n}\n/**\n * @param {?} router\n * @return {?}\n */\nfunction rootRoute(router) {\n    return router.routerState.root;\n}\n/**\n * To initialize the router properly we need to do in two steps:\n *\n * We need to start the navigation in a APP_INITIALIZER to block the bootstrap if\n * a resolver or a guards executes asynchronously. Second, we need to actually run\n * activation in a BOOTSTRAP_LISTENER. We utilize the afterPreactivation\n * hook provided by the router to do that.\n *\n * The router navigation starts, reaches the point when preactivation is done, and then\n * pauses. It waits for the hook to be resolved. We then resolve it only in a bootstrap listener.\n */\nvar RouterInitializer = /** @class */ (function () {\n    function RouterInitializer(injector) {\n        this.injector = injector;\n        this.initNavigation = false;\n        this.resultOfPreactivationDone = new rxjs_Subject.Subject();\n    }\n    /**\n     * @return {?}\n     */\n    RouterInitializer.prototype.appInitializer = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ p = this.injector.get(_angular_common.LOCATION_INITIALIZED, Promise.resolve(null));\n        return p.then(function () {\n            var /** @type {?} */ resolve = /** @type {?} */ ((null));\n            var /** @type {?} */ res = new Promise(function (r) { return resolve = r; });\n            var /** @type {?} */ router = _this.injector.get(Router);\n            var /** @type {?} */ opts = _this.injector.get(ROUTER_CONFIGURATION);\n            if (_this.isLegacyDisabled(opts) || _this.isLegacyEnabled(opts)) {\n                resolve(true);\n            }\n            else if (opts.initialNavigation === 'disabled') {\n                router.setUpLocationChangeListener();\n                resolve(true);\n            }\n            else if (opts.initialNavigation === 'enabled') {\n                router.hooks.afterPreactivation = function () {\n                    // only the initial navigation should be delayed\n                    if (!_this.initNavigation) {\n                        _this.initNavigation = true;\n                        resolve(true);\n                        return _this.resultOfPreactivationDone;\n                        // subsequent navigations should not be delayed\n                    }\n                    else {\n                        return /** @type {?} */ (rxjs_observable_of.of(null));\n                    }\n                };\n                router.initialNavigation();\n            }\n            else {\n                throw new Error(\"Invalid initialNavigation options: '\" + opts.initialNavigation + \"'\");\n            }\n            return res;\n        });\n    };\n    /**\n     * @param {?} bootstrappedComponentRef\n     * @return {?}\n     */\n    RouterInitializer.prototype.bootstrapListener = /**\n     * @param {?} bootstrappedComponentRef\n     * @return {?}\n     */\n    function (bootstrappedComponentRef) {\n        var /** @type {?} */ opts = this.injector.get(ROUTER_CONFIGURATION);\n        var /** @type {?} */ preloader = this.injector.get(RouterPreloader);\n        var /** @type {?} */ router = this.injector.get(Router);\n        var /** @type {?} */ ref = this.injector.get(_angular_core.ApplicationRef);\n        if (bootstrappedComponentRef !== ref.components[0]) {\n            return;\n        }\n        if (this.isLegacyEnabled(opts)) {\n            router.initialNavigation();\n        }\n        else if (this.isLegacyDisabled(opts)) {\n            router.setUpLocationChangeListener();\n        }\n        preloader.setUpPreloading();\n        router.resetRootComponentType(ref.componentTypes[0]);\n        this.resultOfPreactivationDone.next(/** @type {?} */ ((null)));\n        this.resultOfPreactivationDone.complete();\n    };\n    /**\n     * @param {?} opts\n     * @return {?}\n     */\n    RouterInitializer.prototype.isLegacyEnabled = /**\n     * @param {?} opts\n     * @return {?}\n     */\n    function (opts) {\n        return opts.initialNavigation === 'legacy_enabled' || opts.initialNavigation === true ||\n            opts.initialNavigation === undefined;\n    };\n    /**\n     * @param {?} opts\n     * @return {?}\n     */\n    RouterInitializer.prototype.isLegacyDisabled = /**\n     * @param {?} opts\n     * @return {?}\n     */\n    function (opts) {\n        return opts.initialNavigation === 'legacy_disabled' || opts.initialNavigation === false;\n    };\n    RouterInitializer.decorators = [\n        { type: _angular_core.Injectable },\n    ];\n    /** @nocollapse */\n    RouterInitializer.ctorParameters = function () { return [\n        { type: _angular_core.Injector, },\n    ]; };\n    return RouterInitializer;\n}());\n/**\n * @param {?} r\n * @return {?}\n */\nfunction getAppInitializer(r) {\n    return r.appInitializer.bind(r);\n}\n/**\n * @param {?} r\n * @return {?}\n */\nfunction getBootstrapListener(r) {\n    return r.bootstrapListener.bind(r);\n}\n/**\n * A token for the router initializer that will be called after the app is bootstrapped.\n *\n * \\@experimental\n */\nvar ROUTER_INITIALIZER = new _angular_core.InjectionToken('Router Initializer');\n/**\n * @return {?}\n */\nfunction provideRouterInitializer() {\n    return [\n        RouterInitializer,\n        {\n            provide: _angular_core.APP_INITIALIZER,\n            multi: true,\n            useFactory: getAppInitializer,\n            deps: [RouterInitializer]\n        },\n        { provide: ROUTER_INITIALIZER, useFactory: getBootstrapListener, deps: [RouterInitializer] },\n        { provide: _angular_core.APP_BOOTSTRAP_LISTENER, multi: true, useExisting: ROUTER_INITIALIZER },\n    ];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@stable\n */\nvar VERSION = new _angular_core.Version('5.2.10-d2e7c99');\n\nexports.RouterLink = RouterLink;\nexports.RouterLinkWithHref = RouterLinkWithHref;\nexports.RouterLinkActive = RouterLinkActive;\nexports.RouterOutlet = RouterOutlet;\nexports.ActivationEnd = ActivationEnd;\nexports.ActivationStart = ActivationStart;\nexports.ChildActivationEnd = ChildActivationEnd;\nexports.ChildActivationStart = ChildActivationStart;\nexports.GuardsCheckEnd = GuardsCheckEnd;\nexports.GuardsCheckStart = GuardsCheckStart;\nexports.NavigationCancel = NavigationCancel;\nexports.NavigationEnd = NavigationEnd;\nexports.NavigationError = NavigationError;\nexports.NavigationStart = NavigationStart;\nexports.ResolveEnd = ResolveEnd;\nexports.ResolveStart = ResolveStart;\nexports.RouteConfigLoadEnd = RouteConfigLoadEnd;\nexports.RouteConfigLoadStart = RouteConfigLoadStart;\nexports.RouterEvent = RouterEvent;\nexports.RoutesRecognized = RoutesRecognized;\nexports.RouteReuseStrategy = RouteReuseStrategy;\nexports.Router = Router;\nexports.ROUTES = ROUTES;\nexports.ROUTER_CONFIGURATION = ROUTER_CONFIGURATION;\nexports.ROUTER_INITIALIZER = ROUTER_INITIALIZER;\nexports.RouterModule = RouterModule;\nexports.provideRoutes = provideRoutes;\nexports.ChildrenOutletContexts = ChildrenOutletContexts;\nexports.OutletContext = OutletContext;\nexports.NoPreloading = NoPreloading;\nexports.PreloadAllModules = PreloadAllModules;\nexports.PreloadingStrategy = PreloadingStrategy;\nexports.RouterPreloader = RouterPreloader;\nexports.ActivatedRoute = ActivatedRoute;\nexports.ActivatedRouteSnapshot = ActivatedRouteSnapshot;\nexports.RouterState = RouterState;\nexports.RouterStateSnapshot = RouterStateSnapshot;\nexports.PRIMARY_OUTLET = PRIMARY_OUTLET;\nexports.convertToParamMap = convertToParamMap;\nexports.UrlHandlingStrategy = UrlHandlingStrategy;\nexports.DefaultUrlSerializer = DefaultUrlSerializer;\nexports.UrlSegment = UrlSegment;\nexports.UrlSegmentGroup = UrlSegmentGroup;\nexports.UrlSerializer = UrlSerializer;\nexports.UrlTree = UrlTree;\nexports.VERSION = VERSION;\nexports.ɵROUTER_PROVIDERS = ROUTER_PROVIDERS;\nexports.ɵflatten = flatten;\nexports.ɵa = ROUTER_FORROOT_GUARD;\nexports.ɵg = RouterInitializer;\nexports.ɵh = getAppInitializer;\nexports.ɵi = getBootstrapListener;\nexports.ɵd = provideForRootGuard;\nexports.ɵc = provideLocationStrategy;\nexports.ɵj = provideRouterInitializer;\nexports.ɵf = rootRoute;\nexports.ɵb = routerNgProbeToken;\nexports.ɵe = setupRouter;\nexports.ɵk = Tree;\nexports.ɵl = TreeNode;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=router.umd.js.map\n"]}