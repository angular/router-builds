{"version":3,"sources":["packages/router/router.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","router","common","core","rxjs","operators","platformBrowser","this","extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","__values","o","m","Symbol","iterator","next","value","done","__read","r","e","ar","push","error","__spread","concat","RouterEvent","NavigationStart","_super","id","url","navigationTrigger","restoredState","_this","toString","NavigationEnd","urlAfterRedirects","NavigationCancel","reason","NavigationError","RoutesRecognized","state","GuardsCheckStart","GuardsCheckEnd","shouldActivate","ResolveStart","ResolveEnd","RouteConfigLoadStart","route","path","RouteConfigLoadEnd","ChildActivationStart","snapshot","routeConfig","ChildActivationEnd","ActivationStart","ActivationEnd","Scroll","routerEvent","position","anchor","PRIMARY_OUTLET","ParamsAsMap","params","has","name","get","v","isArray","getAll","defineProperty","keys","enumerable","configurable","convertToParamMap","defaultUrlMatcher","segments","segmentGroup","parts","split","pathMatch","hasChildren","posParams","index","part","segment","startsWith","substring","consumed","slice","LoadedRouterConfig","routes","validateConfig","config","parentPath","validateNode","getFullPath","fullPath","Error","component","outlet","redirectTo","children","loadChildren","matcher","charAt","currentRoute","copyConfig","map","shallowEqual","a","key","k1","k2","flatten","arr","apply","last$1","forEach","map$$1","callback","prop","andObservables","observables","pipe","mergeAll","every","result","wrapIntoObservable","ɵisObservable","ɵisPromise","from","Promise","resolve","of","containsTree","container","containee","exact","equalQueryParams","queryParams","equalSegmentGroups","equalPath","numberOfChildren","c","root","containsQueryParams","containsSegmentGroup","containsSegmentGroupHelper","containeePaths","current","UrlTree","fragment","_queryParamMap","DEFAULT_SERIALIZER","serialize","UrlSegmentGroup","parent","k","serializePaths","UrlSegment","parameters","_parameterMap","serializePath","as","bs","mapChildrenIntoArray","fn","res","child","childOutlet","UrlSerializer","DefaultUrlSerializer","parse","UrlParser","parseRootSegment","parseQueryParams","parseFragment","tree","serializeSegment","primary","children_1","join","serializeQueryParams","strParams","encodeUriQuery","encodeUriFragment","encodeURI","encodeUriString","encodeURIComponent","replace","encodeUriSegment","decode","decodeURIComponent","decodeQuery","serializeMatrixParams","SEGMENT_RE","matchSegments","str","match","QUERY_PARAM_RE","QUERY_PARAM_VALUE_RE","remaining","consumeOptional","peekStartsWith","parseChildren","parseQueryParam","parseSegment","capture","parseParens","parseMatrixParams","parseParam","valueMatch","matchQueryParams","matchUrlQueryParamValue","decodedKey","decodedVal","currentVal","allowPrimary","outletName","undefined","indexOf","substr","NoMatch","AbsoluteRedirect","urlTree","noMatch","Observable","obs","absoluteRedirect","newTree","namedOutletsRedirect","ApplyRedirects","moduleInjector","configLoader","urlSerializer","allowRedirects","ngModule","NgModuleRef","expandSegmentGroup","rootSegmentGroup","createUrlTree","catchError","noMatchError","rootCandidate","_a","expandChildren","expandSegment","waitForMap","obj","waitHead","waitTail","mapped","concatAll","last","expandSegmentAgainstRoute","first","_","EmptyError","noLeftoversInUrl","paths","getOutlet","matchSegmentAgainstRoute","expandSegmentAgainstRouteUsingRedirect","expandWildCardWithParamsAgainstRouteUsingRedirect","expandRegularSegmentAgainstRouteUsingRedirect","applyRedirectCommands","lineralizeSegments","mergeMap","newSegments","group","consumedSegments","lastChild","positionalParamSegments","matched","rawSegmentGroup","load","injector","cfg","_loadedConfig","rawSlicedSegments","getChildConfig","routerConfig","childModule","childConfig","slicedSegments","containsEmptyPathRedirectsWithNamedOutlets","some","isEmptyPathRedirect","mergeTrivialChildren","createChildrenForEmptySegments","primarySegmentGroup","e_3","routes_2","routes_2_1","e_3_1","return","containsEmptyPathRedirects","addEmptySegmentsToChildrenIfNeeded","e_2","routes_1","routes_1_1","e_2_1","cs","runCanLoadGuard","canLoad","injectionToken","guard","shouldLoad","canLoadFails","navigationCancelingError","message","applyRedirectCreatreUrlTree","newRoot","createSegmentGroup","createQueryParams","redirectToParams","actualParams","sourceName","updatedSegments","createSegments","redirectToSegments","actualSegments","findPosParam","findOrReturn","redirectToUrlSegment","pos","e_1","idx","actualSegments_1","actualSegments_1_1","splice","e_1_1","Tree","_root","pathFromRoot","findNode","firstChild","siblings","findPath","filter","cc","node","_b","node_1","_c","unshift","TreeNode","nodeChildrenAsMap","RouterState","setRouterState","createEmptyState","rootComponent","createEmptyStateSnapshot","activated","ActivatedRouteSnapshot","RouterStateSnapshot","emptyUrl","BehaviorSubject","emptyParams","emptyData","emptyQueryParams","ActivatedRoute","data","futureSnapshot","_futureSnapshot","_routerState","_paramMap","inheritedParamsDataResolve","paramsInheritanceStrategy","inheritingStartingFrom","parent_1","flattenInherited","reduce","curr","_resolvedData","urlSegment","lastPathIndex","_urlSegment","_lastPathIndex","_resolve","serializeNode","advanceActivatedRoute","currentSnapshot","nextSnapshot","shallowEqualArrays","equalParamsAndUrlSegments","equalSegments","isMatrixParams","command","outlets","segmentPath","oldSegmentGroup","newSegmentGroup","qp","replaceSegment","oldSegment","newSegment","Navigation","isAbsolute","numberOfDoubleDots","commands","cmdWithOutlet","find","toRoot","Position","processChildren","getPath","updateSegmentGroup","startIndex","updateSegmentGroupChildren","prefixedWith","currentCommandIndex","currentPathIndex","pathIndex","commandIndex","compare","slicedCommands","g","createNewSegmentGroup","outlets_2","getOutlets","createNewSegmentChildren","stringify","CanActivate","CanDeactivate","PreActivation","future","forwardEvent","canActivateChecks","canDeactivateChecks","initialize","parentContexts","futureRoot","setupChildRouteGuards","checkGuards","isDeactivating","isActivating","runCanDeactivateChecks","canDeactivate","runCanActivateChecks","resolveData","concatMap","check","runResolve","futureNode","currNode","contexts","futurePath","prevChildren","setupRouteGuards","deactivateRouteAndItsChildren","getContext","context","shouldRunGuardsAndResolvers","runGuardsAndResolvers","mode","childName","isActivated","runCanDeactivate","fireChildActivationStart","fireActivationStart","runCanActivateChild","runCanActivate","canActivate","getToken","canActivateChildGuards","reverse","extractCanActivateChild","guards","canActivateChild","resolveNode","resolvedData","key_1","getResolver","resolver","token","closestLoadedConfig","NoMatch$1","Recognizer","rootComponentType","recognize","split$1","processSegmentGroup","freeze","rootNode","routeState","inheritParamsAndData","routeNode","processSegment","checkOutletNameUniqueness","nodes","names","routeWithSameOutletName","sortActivatedRouteSnapshots","sort","localeCompare","config_1","config_1_1","processSegmentAgainstRoute","rawSegment","getData","getSourceSegmentGroup","getPathIndexShift","getResolve","match$1","_sourceSegment","_segmentIndexShift","containsEmptyPathMatchesWithNamedOutlets","emptyPathMatch","getOutlet$1","s_1","createChildrenForEmptyPaths","primarySegment","containsEmptyPathMatches","s_2","addEmptyPathsToChildrenIfNeeded","RouteReuseStrategy","DefaultRouteReuseStrategy","shouldDetach","store","detachedTree","shouldAttach","retrieve","shouldReuseRoute","ROUTES","InjectionToken","RouterConfigLoader","loader","compiler","onLoadStartListener","onLoadEndListener","parentInjector","loadModuleFactory","NgModuleFactory","compileModuleAsync","UrlHandlingStrategy","DefaultUrlHandlingStrategy","shouldProcessUrl","extract","merge","newUrlPart","wholeUrl","defaultErrorHandler","defaultRouterHook","runExtras","Router","rootContexts","location","navigations","navigationId","events","Subject","errorHandler","navigated","lastSuccessfulId","hooks","beforePreactivation","afterPreactivation","urlHandlingStrategy","routeReuseStrategy","onSameUrlNavigation","resetConfig","currentUrlTree","createEmptyUrlTree","rawUrlTree","triggerEvent","routerState","processNavigations","resetRootComponentType","initialNavigation","setUpLocationChangeListener","navigateByUrl","replaceUrl","locationSubscription","subscribe","change","source","setTimeout","scheduleNavigation","serializeUrl","ngOnDestroy","dispose","unsubscribe","navigationExtras","relativeTo","preserveQueryParams","queryParamsHandling","preserveFragment","isDevMode","console","warn","f","q","removeEmptyProps","nav","computeNavigation","cmd","cmdIdx","outlets_1","urlPart","partIndex","startingPosition","findStartingPosition","modifier","createPositionApplyingDoubleDots","ci","dd","extras","skipLocationChange","parseUrl","mergedTree","navigate","validateCommands","isActive","executeScheduledNavigation","promise","catch","rawUrl","lastNavigation","reject","rej","urlTransition","then","runNavigate","precreatedState","resolvePromise","rejectPromise","preActivation","routerState$","appliedUrl","applyRedirects","appliedUrlTree","evt","createRouterState","prevState","createNode","createOrReuseChildren","detachedRouteHandle","setFutureSnapshotsOfActivatedRoutes","createActivatedRoute","activateRoutes","storedState","storedUrl","navigationIsSuccessful","isCurrentPathEqualTo","replaceState","go","ActivateRoutes","activate","resetUrlToCurrentUrlTree","isNavigationCancelingError","resetStateAndUrl","ee","futureState","currState","currRoot","deactivateChildRoutes","activateChildRoutes","futureChild","childOutletName","deactivateRoutes","parentContext","detachAndStoreRouteSubtree","deactivateRouteAndOutlet","componentRef","detach","onOutletDeactivated","contexts_1","deactivate","getOrCreateContext","stored","onOutletReAttached","attachRef","attach","advanceActivatedRouteNodeAndItsChildren","parentLoadedConfig","cmpFactoryResolver","componentFactoryResolver","activateWith","RouterLink","tabIndex","renderer","el","setAttribute","nativeElement","set","preserve","onClick","attrBoolValue","decorators","type","Directive","args","selector","ctorParameters","String","Attribute","Renderer2","ElementRef","propDecorators","Input","routerLink","HostListener","RouterLinkWithHref","locationStrategy","subscription","updateTargetUrlAndHref","ngOnChanges","changes","button","ctrlKey","metaKey","shiftKey","target","href","prepareExternalUrl","LocationStrategy","HostBinding","RouterLinkActive","element","cdr","classes","routerLinkActiveOptions","update","ngAfterContentInit","links","linksWithHrefs","hasActiveLinks","addClass","removeClass","isLinkActive","link","exportAs","ChangeDetectorRef","ContentChildren","descendants","routerLinkActive","OutletContext","ChildrenOutletContexts","Map","onChildOutletCreated","onChildOutletDestroyed","RouterOutlet","changeDetector","_activatedRoute","activateEvents","EventEmitter","deactivateEvents","ngOnInit","instance","cmp","ref","activatedRoute","insert","hostView","destroy","emit","resolveComponentFactory","childContexts","OutletInjector","createComponent","markForCheck","ViewContainerRef","ComponentFactoryResolver","Output","notFoundValue","PreloadingStrategy","PreloadAllModules","preload","NoPreloading","RouterPreloader","moduleLoader","preloadingStrategy","setUpPreloading","processRoutes","preloadConfig","Injectable","NgModuleFactoryLoader","Compiler","Injector","RouterScroller","viewportScroller","options","lastId","lastSource","restoredId","init","scrollPositionRestoration","setHistoryScrollRestoration","routerEventsSubscription","createScrollEvents","scrollEventsSubscription","consumeScrollEvents","getScrollPosition","scheduleScrollEvent","scrollToPosition","anchorScrolling","scrollToAnchor","ROUTER_DIRECTIVES","ROUTER_CONFIGURATION","ROUTER_FORROOT_GUARD","ROUTER_PROVIDERS","Location","provide","useClass","useFactory","setupRouter","deps","ApplicationRef","Optional","rootRoute","SystemJsNgModuleLoader","useValue","enableTracing","routerNgProbeToken","NgProbeToken","RouterModule","forRoot","providers","provideRoutes","provideForRootGuard","SkipSelf","provideLocationStrategy","PlatformLocation","Inject","APP_BASE_HREF","createRouterScroller","ViewportScroller","useExisting","multi","provideRouterInitializer","forChild","NgModule","declarations","scrollOffset","setOffset","platformLocationStrategy","baseHref","useHash","HashLocationStrategy","PathLocationStrategy","ANALYZE_FOR_ENTRY_COMPONENTS","opts","dom_1","ɵgetDOM","logGroup","log","logGroupEnd","RouterInitializer","initNavigation","resultOfPreactivationDone","appInitializer","LOCATION_INITIALIZED","isLegacyDisabled","isLegacyEnabled","bootstrapListener","bootstrappedComponentRef","preloader","routerScroller","components","componentTypes","complete","getAppInitializer","bind","getBootstrapListener","ROUTER_INITIALIZER","APP_INITIALIZER","APP_BOOTSTRAP_LISTENER","VERSION","Version","ɵangular_packages_router_router_a","ɵangular_packages_router_router_h","ɵangular_packages_router_router_c","ɵangular_packages_router_router_i","ɵangular_packages_router_router_j","ɵangular_packages_router_router_e","ɵangular_packages_router_router_d","ɵangular_packages_router_router_k","ɵangular_packages_router_router_g","ɵangular_packages_router_router_b","ɵangular_packages_router_router_f","ɵangular_packages_router_router_n","ɵangular_packages_router_router_l","ɵangular_packages_router_router_m","ɵROUTER_PROVIDERS","ɵflatten"],"mappings":";;;;;CAMC,SAAUA,EAAQC,GACC,iBAAZC,SAA0C,oBAAXC,OAAyBF,EAAQC,QAASE,QAAQ,mBAAoBA,QAAQ,iBAAkBA,QAAQ,QAASA,QAAQ,kBAAmBA,QAAQ,8BACxK,mBAAXC,QAAyBA,OAAOC,IAAMD,OAAO,mBAAoB,UAAW,kBAAmB,gBAAiB,OAAQ,iBAAkB,6BAA8BJ,GAC9KA,GAASD,EAAOO,GAAKP,EAAOO,OAAUP,EAAOO,GAAGC,WAAaR,EAAOO,GAAGE,OAAOT,EAAOO,GAAGG,KAAKV,EAAOW,KAAKX,EAAOW,KAAKC,UAAUZ,EAAOO,GAAGM,iBAH3I,CAIEC,KAAM,SAAWZ,EAAQO,EAAOC,EAAKC,EAAKC,EAAUC,GAAmB,aAkBzE,IAAIE,EAAgBC,OAAOC,iBACpBC,wBAA2BC,OAAS,SAAUC,EAAGC,GAAKD,EAAEF,UAAYG,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIC,KAAKD,EAAOA,EAAEE,eAAeD,KAAIF,EAAEE,GAAKD,EAAEC,KAEzE,SAASE,EAAUJ,EAAGC,GAElB,SAASI,IAAOX,KAAKY,YAAcN,EADnCL,EAAcK,EAAGC,GAEjBD,EAAEO,UAAkB,OAANN,EAAaL,OAAOY,OAAOP,IAAMI,EAAGE,UAAYN,EAAEM,UAAW,IAAIF,GAGnF,IAAII,EAAWb,OAAOc,QAAU,SAASD,EAASE,GAC9C,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAIX,KADTU,EAAIG,UAAUF,GACOjB,OAAOW,UAAUJ,eAAec,KAAKL,EAAGV,KAAIS,EAAET,GAAKU,EAAEV,IAE9E,OAAOS,GAiBX,SAASO,EAASC,GACd,IAAIC,EAAsB,mBAAXC,QAAyBF,EAAEE,OAAOC,UAAWT,EAAI,EAChE,OAAIO,EAAUA,EAAEH,KAAKE,IAEjBI,KAAM,WAEF,OADIJ,GAAKN,GAAKM,EAAEH,SAAQG,OAAI,IACnBK,MAAOL,GAAKA,EAAEN,KAAMY,MAAON,KAKhD,SAASO,EAAOP,EAAGL,GACf,IAAIM,EAAsB,mBAAXC,QAAyBF,EAAEE,OAAOC,UACjD,IAAKF,EAAG,OAAOD,EACf,IAAmBQ,EAAYC,EAA3Bf,EAAIO,EAAEH,KAAKE,GAAOU,KACtB,IACI,WAAc,IAANf,GAAgBA,KAAM,MAAQa,EAAId,EAAEU,QAAQE,MAAMI,EAAGC,KAAKH,EAAEH,OAExE,MAAOO,GAASH,GAAMG,MAAOA,GAC7B,QACI,IACQJ,IAAMA,EAAEF,OAASL,EAAIP,EAAU,SAAIO,EAAEH,KAAKJ,GAElD,QAAU,GAAIe,EAAG,MAAMA,EAAEG,OAE7B,OAAOF,EAGX,SAASG,IACL,IAAK,IAAIH,KAAShB,EAAI,EAAGA,EAAIE,UAAUC,OAAQH,IAC3CgB,EAAKA,EAAGI,OAAOP,EAAOX,UAAUF,KACpC,OAAOgB;;;;;;;GA8BX,IAAIK,EAkBAC,EAAiC,SAAUC,GAE3C,SAASD,EAETE,EAEAC,EAEAC,EAEAC,QAC8B,IAAtBD,IAEJA,EAAoB,mBACE,IAAlBC,IAEJA,EAAgB,MAChB,IAAIC,EAAQL,EAAOnB,KAAKvB,KAAM2C,EAAIC,IAAQ5C,KAG1C,OAFA+C,EAAMF,kBAAoBA,EAC1BE,EAAMD,cAAgBA,EACfC,EAIX,OAvBArC,EAAU+B,EAAiBC,GAsB3BD,EAAgB5B,UAAUmC,SAAW,WAAc,MAAO,uBAAyBhD,KAAK2C,GAAK,WAAa3C,KAAK4C,IAAM,MAC9GH,EAxByB,CAlBhCD,EACA,SAASA,EAETG,EAEAC,GACI5C,KAAK2C,GAAKA,EACV3C,KAAK4C,IAAMA,IA4CfK,EAA+B,SAAUP,GAEzC,SAASO,EAETN,EAEAC,EAEAM,GACI,IAAIH,EAAQL,EAAOnB,KAAKvB,KAAM2C,EAAIC,IAAQ5C,KAE1C,OADA+C,EAAMG,kBAAoBA,EACnBH,EAMX,OAhBArC,EAAUuC,EAAeP,GAazBO,EAAcpC,UAAUmC,SAAW,WAC/B,MAAO,qBAAuBhD,KAAK2C,GAAK,WAAa3C,KAAK4C,IAAM,0BAA4B5C,KAAKkD,kBAAoB,MAElHD,EAjBuB,CAkBhCT,GAQEW,EAAkC,SAAUT,GAE5C,SAASS,EAETR,EAEAC,EAEAQ,GACI,IAAIL,EAAQL,EAAOnB,KAAKvB,KAAM2C,EAAIC,IAAQ5C,KAE1C,OADA+C,EAAMK,OAASA,EACRL,EAIX,OAdArC,EAAUyC,EAAkBT,GAa5BS,EAAiBtC,UAAUmC,SAAW,WAAc,MAAO,wBAA0BhD,KAAK2C,GAAK,WAAa3C,KAAK4C,IAAM,MAChHO,EAf0B,CAgBnCX,GAQEa,EAAiC,SAAUX,GAE3C,SAASW,EAETV,EAEAC,EAEAP,GACI,IAAIU,EAAQL,EAAOnB,KAAKvB,KAAM2C,EAAIC,IAAQ5C,KAE1C,OADA+C,EAAMV,MAAQA,EACPU,EAMX,OAhBArC,EAAU2C,EAAiBX,GAa3BW,EAAgBxC,UAAUmC,SAAW,WACjC,MAAO,uBAAyBhD,KAAK2C,GAAK,WAAa3C,KAAK4C,IAAM,aAAe5C,KAAKqC,MAAQ,KAE3FgB,EAjByB,CAkBlCb,GAQEc,EAAkC,SAAUZ,GAE5C,SAASY,EAETX,EAEAC,EAEAM,EAEAK,GACI,IAAIR,EAAQL,EAAOnB,KAAKvB,KAAM2C,EAAIC,IAAQ5C,KAG1C,OAFA+C,EAAMG,kBAAoBA,EAC1BH,EAAMQ,MAAQA,EACPR,EAMX,OAnBArC,EAAU4C,EAAkBZ,GAgB5BY,EAAiBzC,UAAUmC,SAAW,WAClC,MAAO,wBAA0BhD,KAAK2C,GAAK,WAAa3C,KAAK4C,IAAM,0BAA4B5C,KAAKkD,kBAAoB,aAAelD,KAAKuD,MAAQ,KAEjJD,EApB0B,CAqBnCd,GAQEgB,EAAkC,SAAUd,GAE5C,SAASc,EAETb,EAEAC,EAEAM,EAEAK,GACI,IAAIR,EAAQL,EAAOnB,KAAKvB,KAAM2C,EAAIC,IAAQ5C,KAG1C,OAFA+C,EAAMG,kBAAoBA,EAC1BH,EAAMQ,MAAQA,EACPR,EAKX,OAlBArC,EAAU8C,EAAkBd,GAe5Bc,EAAiB3C,UAAUmC,SAAW,WAClC,MAAO,wBAA0BhD,KAAK2C,GAAK,WAAa3C,KAAK4C,IAAM,0BAA4B5C,KAAKkD,kBAAoB,aAAelD,KAAKuD,MAAQ,KAEjJC,EAnB0B,CAoBnChB,GAQEiB,EAAgC,SAAUf,GAE1C,SAASe,EAETd,EAEAC,EAEAM,EAEAK,EAEAG,GACI,IAAIX,EAAQL,EAAOnB,KAAKvB,KAAM2C,EAAIC,IAAQ5C,KAI1C,OAHA+C,EAAMG,kBAAoBA,EAC1BH,EAAMQ,MAAQA,EACdR,EAAMW,eAAiBA,EAChBX,EAKX,OArBArC,EAAU+C,EAAgBf,GAkB1Be,EAAe5C,UAAUmC,SAAW,WAChC,MAAO,sBAAwBhD,KAAK2C,GAAK,WAAa3C,KAAK4C,IAAM,0BAA4B5C,KAAKkD,kBAAoB,aAAelD,KAAKuD,MAAQ,qBAAuBvD,KAAK0D,eAAiB,KAE5LD,EAtBwB,CAuBjCjB,GAWEmB,EAA8B,SAAUjB,GAExC,SAASiB,EAEThB,EAEAC,EAEAM,EAEAK,GACI,IAAIR,EAAQL,EAAOnB,KAAKvB,KAAM2C,EAAIC,IAAQ5C,KAG1C,OAFA+C,EAAMG,kBAAoBA,EAC1BH,EAAMQ,MAAQA,EACPR,EAKX,OAlBArC,EAAUiD,EAAcjB,GAexBiB,EAAa9C,UAAUmC,SAAW,WAC9B,MAAO,oBAAsBhD,KAAK2C,GAAK,WAAa3C,KAAK4C,IAAM,0BAA4B5C,KAAKkD,kBAAoB,aAAelD,KAAKuD,MAAQ,KAE7II,EAnBsB,CAoB/BnB,GASEoB,EAA4B,SAAUlB,GAEtC,SAASkB,EAETjB,EAEAC,EAEAM,EAEAK,GACI,IAAIR,EAAQL,EAAOnB,KAAKvB,KAAM2C,EAAIC,IAAQ5C,KAG1C,OAFA+C,EAAMG,kBAAoBA,EAC1BH,EAAMQ,MAAQA,EACPR,EAKX,OAlBArC,EAAUkD,EAAYlB,GAetBkB,EAAW/C,UAAUmC,SAAW,WAC5B,MAAO,kBAAoBhD,KAAK2C,GAAK,WAAa3C,KAAK4C,IAAM,0BAA4B5C,KAAKkD,kBAAoB,aAAelD,KAAKuD,MAAQ,KAE3IK,EAnBoB,CAoB7BpB,GAQEqB,EAAsC,WACtC,SAASA,EAETC,GACI9D,KAAK8D,MAAQA,EAGjB,OADAD,EAAqBhD,UAAUmC,SAAW,WAAc,MAAO,8BAAgChD,KAAK8D,MAAMC,KAAO,KAC1GF,EAP8B,GAgBrCG,EAAoC,WACpC,SAASA,EAETF,GACI9D,KAAK8D,MAAQA,EAGjB,OADAE,EAAmBnD,UAAUmC,SAAW,WAAc,MAAO,4BAA8BhD,KAAK8D,MAAMC,KAAO,KACtGC,EAP4B,GAiBnCC,EAAsC,WACtC,SAASA,EAETC,GACIlE,KAAKkE,SAAWA,EAMpB,OAJAD,EAAqBpD,UAAUmC,SAAW,WAEtC,MAAO,gCADIhD,KAAKkE,SAASC,aAAenE,KAAKkE,SAASC,YAAYJ,MAAQ,IAC3B,MAE5CE,EAV8B,GAoBrCG,EAAoC,WACpC,SAASA,EAETF,GACIlE,KAAKkE,SAAWA,EAMpB,OAJAE,EAAmBvD,UAAUmC,SAAW,WAEpC,MAAO,8BADIhD,KAAKkE,SAASC,aAAenE,KAAKkE,SAASC,YAAYJ,MAAQ,IAC7B,MAE1CK,EAV4B,GAoBnCC,EAAiC,WACjC,SAASA,EAETH,GACIlE,KAAKkE,SAAWA,EAMpB,OAJAG,EAAgBxD,UAAUmC,SAAW,WAEjC,MAAO,2BADIhD,KAAKkE,SAASC,aAAenE,KAAKkE,SAASC,YAAYJ,MAAQ,IAChC,MAEvCM,EAVyB,GAoBhCC,EAA+B,WAC/B,SAASA,EAETJ,GACIlE,KAAKkE,SAAWA,EAMpB,OAJAI,EAAczD,UAAUmC,SAAW,WAE/B,MAAO,yBADIhD,KAAKkE,SAASC,aAAenE,KAAKkE,SAASC,YAAYJ,MAAQ,IAClC,MAErCO,EAVuB,GAiB9BC,EAAwB,WACxB,SAASA,EAETC,EAEAC,EAEAC,GACI1E,KAAKwE,YAAcA,EACnBxE,KAAKyE,SAAWA,EAChBzE,KAAK0E,OAASA,EAMlB,OAJAH,EAAO1D,UAAUmC,SAAW,WAExB,MAAO,mBAAqBhD,KAAK0E,OAAS,kBADhC1E,KAAKyE,SAAWzE,KAAKyE,SAAS,GAAK,KAAOzE,KAAKyE,SAAS,GAAK,MACJ,MAEhEF,EAhBgB,GAiCvBI,EAAiB,UACjBC,EAA6B,WAC7B,SAASA,EAAYC,GACjB7E,KAAK6E,OAASA,MAsBlB,OApBAD,EAAY/D,UAAUiE,IAAM,SAAUC,GAAQ,OAAO/E,KAAK6E,OAAOpE,eAAesE,IAChFH,EAAY/D,UAAUmE,IAAM,SAAUD,GAClC,GAAI/E,KAAK8E,IAAIC,GAAO,CAChB,IAAIE,EAAIjF,KAAK6E,OAAOE,GACpB,OAAO1E,MAAM6E,QAAQD,GAAKA,EAAE,GAAKA,EAErC,OAAO,MAEXL,EAAY/D,UAAUsE,OAAS,SAAUJ,GACrC,GAAI/E,KAAK8E,IAAIC,GAAO,CAChB,IAAIE,EAAIjF,KAAK6E,OAAOE,GACpB,OAAO1E,MAAM6E,QAAQD,GAAKA,GAAKA,GAEnC,UAEJ/E,OAAOkF,eAAeR,EAAY/D,UAAW,QACzCmE,IAAK,WAAc,OAAO9E,OAAOmF,KAAKrF,KAAK6E,SAC3CS,YAAY,EACZC,cAAc,IAEXX,EAxBqB,GA+BhC,SAASY,EAAkBX,GACvB,OAAO,IAAID,EAAYC,GAY3B,SAASY,EAAkBC,EAAUC,EAAc7B,GAC/C,IAAI8B,EAAQ9B,EAAMC,KAAK8B,MAAM,KAC7B,GAAID,EAAMtE,OAASoE,EAASpE,OAExB,OAAO,KAEX,GAAwB,SAApBwC,EAAMgC,YACLH,EAAaI,eAAiBH,EAAMtE,OAASoE,EAASpE,QAEvD,OAAO,KAIX,IAFA,IAAI0E,KAEKC,EAAQ,EAAGA,EAAQL,EAAMtE,OAAQ2E,IAAS,CAC/C,IAAIC,EAAON,EAAMK,GACbE,EAAUT,EAASO,GAEvB,GADkBC,EAAKE,WAAW,KAE9BJ,EAAUE,EAAKG,UAAU,IAAMF,OAE9B,GAAID,IAASC,EAAQpC,KAEtB,OAAO,KAGf,OAASuC,SAAUZ,EAASa,MAAM,EAAGX,EAAMtE,QAAS0E,UAAWA;;;;;;;GAUnE,IAAIQ,EACA,SAASA,EAAmBC,EAAQpH,GAChCW,KAAKyG,OAASA,EACdzG,KAAKX,OAASA,GAItB,SAASqH,EAAeC,EAAQC,QACT,IAAfA,IAAyBA,EAAa,IAE1C,IAAK,IAAIzF,EAAI,EAAGA,EAAIwF,EAAOrF,OAAQH,IAAK,CACpC,IAAI2C,EAAQ6C,EAAOxF,GAEnB0F,EAAa/C,EADEgD,EAAYF,EAAY9C,KAI/C,SAAS+C,EAAa/C,EAAOiD,GACzB,IAAKjD,EACD,MAAM,IAAIkD,MAAM,2CAA6CD,EAAW,mWAE5E,GAAI1G,MAAM6E,QAAQpB,GACd,MAAM,IAAIkD,MAAM,mCAAqCD,EAAW,gCAEpE,IAAKjD,EAAMmD,WAAcnD,EAAMoD,QAAUpD,EAAMoD,SAAWvC,EACtD,MAAM,IAAIqC,MAAM,mCAAqCD,EAAW,2DAEpE,GAAIjD,EAAMqD,YAAcrD,EAAMsD,SAC1B,MAAM,IAAIJ,MAAM,mCAAqCD,EAAW,sDAEpE,GAAIjD,EAAMqD,YAAcrD,EAAMuD,aAC1B,MAAM,IAAIL,MAAM,mCAAqCD,EAAW,0DAEpE,GAAIjD,EAAMsD,UAAYtD,EAAMuD,aACxB,MAAM,IAAIL,MAAM,mCAAqCD,EAAW,wDAEpE,GAAIjD,EAAMqD,YAAcrD,EAAMmD,UAC1B,MAAM,IAAID,MAAM,mCAAqCD,EAAW,uDAEpE,GAAIjD,EAAMC,MAAQD,EAAMwD,QACpB,MAAM,IAAIN,MAAM,mCAAqCD,EAAW,+CAEpE,QAAyB,IAArBjD,EAAMqD,aAA0BrD,EAAMmD,YAAcnD,EAAMsD,WAAatD,EAAMuD,aAC7E,MAAM,IAAIL,MAAM,mCAAqCD,EAAW,6FAEpE,QAAmB,IAAfjD,EAAMC,WAAqC,IAAlBD,EAAMwD,QAC/B,MAAM,IAAIN,MAAM,mCAAqCD,EAAW,4DAEpE,GAA0B,iBAAfjD,EAAMC,MAA8C,MAAzBD,EAAMC,KAAKwD,OAAO,GACpD,MAAM,IAAIP,MAAM,mCAAqCD,EAAW,qCAEpE,GAAmB,KAAfjD,EAAMC,WAAoC,IAArBD,EAAMqD,iBAA6C,IAApBrD,EAAMgC,UAE1D,MAAM,IAAIkB,MAAM,4CAA8CD,EAAW,mBAAuBjD,EAAMqD,WAAa,0HAEvH,QAAwB,IAApBrD,EAAMgC,WAA4C,SAApBhC,EAAMgC,WAA4C,WAApBhC,EAAMgC,UAClE,MAAM,IAAIkB,MAAM,mCAAqCD,EAAW,sDAEhEjD,EAAMsD,UACNV,EAAe5C,EAAMsD,SAAUL,GAGvC,SAASD,EAAYF,EAAYY,GAC7B,OAAKA,EAGAZ,GAAeY,EAAazD,KAGxB6C,IAAeY,EAAazD,KAC1B6C,EAAa,KAEdA,GAAcY,EAAazD,KAC1ByD,EAAazD,KAGb6C,EAAa,IAAMY,EAAazD,KAThC,GAHA6C,EAef,SAASa,EAAWxF,GAChB,IAAImF,EAAWnF,EAAEmF,UAAYnF,EAAEmF,SAASM,IAAID,GAC5C,OAAOL,EAAWrG,KAAakB,GAAKmF,SAAUA,IAAcrG,KAAakB;;;;;;;GAmB7E,SAAS0F,EAAaC,EAAGrH,GACrB,IAKIsH,EALAC,EAAK5H,OAAOmF,KAAKuC,GACjBG,EAAK7H,OAAOmF,KAAK9E,GACrB,GAAIuH,EAAGxG,QAAUyG,EAAGzG,OAChB,OAAO,EAGX,IAAK,IAAIH,EAAI,EAAGA,EAAI2G,EAAGxG,OAAQH,IAE3B,GAAIyG,EADJC,EAAMC,EAAG3G,MACMZ,EAAEsH,GACb,OAAO,EAGf,OAAO,EAKX,SAASG,EAAQC,GACb,OAAO5H,MAAMQ,UAAU0B,OAAO2F,SAAUD,GAK5C,SAASE,EAAOP,GACZ,OAAOA,EAAEtG,OAAS,EAAIsG,EAAEA,EAAEtG,OAAS,GAAK,KAM5C,SAAS8G,EAAQC,EAAQC,GACrB,IAAK,IAAIC,KAAQF,EACTA,EAAO5H,eAAe8H,IACtBD,EAASD,EAAOE,GAAOA,GA2BnC,SAASC,EAAeC,GACpB,OAAOA,EAAYC,KAAK5I,EAAU6I,WAAY7I,EAAU8I,MAAM,SAAUC,GAAU,OAAkB,IAAXA,KAE7F,SAASC,EAAmBhH,GACxB,OAAIlC,EAAKmJ,cAAcjH,GACZA,EAEPlC,EAAKoJ,WAAWlH,GAITjC,EAAKoJ,KAAKC,QAAQC,QAAQrH,IAE9BjC,EAAKuJ,GAAGtH;;;;;;;GAanB,SAASuH,EAAaC,EAAWC,EAAWC,GACxC,OAAIA,EAOR,SAASC,EAAiBH,EAAWC,GACjC,OAAO5B,EAAa2B,EAAWC,GAPpBE,CAAiBH,EAAUI,YAAaH,EAAUG,cASjE,SAASC,EAAmBL,EAAWC,GACnC,IAAKK,EAAUN,EAAU5D,SAAU6D,EAAU7D,UACzC,OAAO,EACX,GAAI4D,EAAUO,mBAAqBN,EAAUM,iBACzC,OAAO,EACX,IAAK,IAAIC,KAAKP,EAAUnC,SAAU,CAC9B,IAAKkC,EAAUlC,SAAS0C,GACpB,OAAO,EACX,IAAKH,EAAmBL,EAAUlC,SAAS0C,GAAIP,EAAUnC,SAAS0C,IAC9D,OAAO,EAEf,OAAO,EAnBCH,CAAmBL,EAAUS,KAAMR,EAAUQ,MAqBzD,SAASC,EAAoBV,EAAWC,GACpC,OAAOrJ,OAAOmF,KAAKkE,GAAWjI,QAAUpB,OAAOmF,KAAKiE,GAAWhI,QAC3DpB,OAAOmF,KAAKkE,GAAWX,MAAM,SAAUf,GAAO,OAAO0B,EAAU1B,KAASyB,EAAUzB,KArB/EmC,CAAoBV,EAAUI,YAAaH,EAAUG,cAuBhE,SAASO,EAAqBX,EAAWC,GACrC,OAEJ,SAASW,EAA2BZ,EAAWC,EAAWY,GACtD,GAAIb,EAAU5D,SAASpE,OAAS6I,EAAe7I,OAE3C,QAAKsI,EADDQ,EAAUd,EAAU5D,SAASa,MAAM,EAAG4D,EAAe7I,QACjC6I,KAEpBZ,EAAUxD,cAIb,GAAIuD,EAAU5D,SAASpE,SAAW6I,EAAe7I,OAAQ,CAC1D,IAAKsI,EAAUN,EAAU5D,SAAUyE,GAC/B,OAAO,EACX,IAAK,IAAIL,KAAKP,EAAUnC,SAAU,CAC9B,IAAKkC,EAAUlC,SAAS0C,GACpB,OAAO,EACX,IAAKG,EAAqBX,EAAUlC,SAAS0C,GAAIP,EAAUnC,SAAS0C,IAChE,OAAO,EAEf,OAAO,EAGP,IAAIM,EAAUD,EAAe5D,MAAM,EAAG+C,EAAU5D,SAASpE,QACrDO,EAAOsI,EAAe5D,MAAM+C,EAAU5D,SAASpE,QACnD,QAAKsI,EAAUN,EAAU5D,SAAU0E,MAE9Bd,EAAUlC,SAASzC,IAEjBuF,EAA2BZ,EAAUlC,SAASzC,GAAiB4E,EAAW1H,GA7B9EqI,CAA2BZ,EAAWC,EAAWA,EAAU7D,UAvB9DuE,CAAqBX,EAAUS,KAAMR,EAAUQ,MAoFvD,IAAIM,EAAyB,WAEzB,SAASA,EAETN,EAEAL,EAEAY,GACItK,KAAK+J,KAAOA,EACZ/J,KAAK0J,YAAcA,EACnB1J,KAAKsK,SAAWA,EAcpB,OAZApK,OAAOkF,eAAeiF,EAAQxJ,UAAW,iBACrCmE,IAAK,WAID,OAHKhF,KAAKuK,iBACNvK,KAAKuK,eAAiB/E,EAAkBxF,KAAK0J,cAE1C1J,KAAKuK,gBAEhBjF,YAAY,EACZC,cAAc,IAGlB8E,EAAQxJ,UAAUmC,SAAW,WAAc,OAAOwH,EAAmBC,UAAUzK,OACxEqK,EAzBiB,GAoCxBK,EAAiC,WACjC,SAASA,EAEThF,EAEA0B,GACI,IAAIrE,EAAQ/C,KACZA,KAAK0F,SAAWA,EAChB1F,KAAKoH,SAAWA,EAEhBpH,KAAK2K,OAAS,KACdvC,EAAQhB,EAAU,SAAUnC,EAAG2F,GAAK,OAAO3F,EAAE0F,OAAS5H,IAY1D,OATA2H,EAAgB7J,UAAUkF,YAAc,WAAc,OAAO/F,KAAK6J,iBAAmB,GACrF3J,OAAOkF,eAAesF,EAAgB7J,UAAW,oBAE7CmE,IAAK,WAAc,OAAO9E,OAAOmF,KAAKrF,KAAKoH,UAAU9F,QACrDgE,YAAY,EACZC,cAAc,IAGlBmF,EAAgB7J,UAAUmC,SAAW,WAAc,OAAO6H,EAAe7K,OAClE0K,EAvByB,GAkDhCI,EAA4B,WAC5B,SAASA,EAET/G,EAEAgH,GACI/K,KAAK+D,KAAOA,EACZ/D,KAAK+K,WAAaA,EActB,OAZA7K,OAAOkF,eAAe0F,EAAWjK,UAAW,gBACxCmE,IAAK,WAID,OAHKhF,KAAKgL,gBACNhL,KAAKgL,cAAgBxF,EAAkBxF,KAAK+K,aAEzC/K,KAAKgL,eAEhB1F,YAAY,EACZC,cAAc,IAGlBuF,EAAWjK,UAAUmC,SAAW,WAAc,OAAOiI,GAAcjL,OAC5D8K,EArBoB,GA0B/B,SAASlB,EAAUsB,EAAIC,GACnB,OAAID,EAAG5J,SAAW6J,EAAG7J,QAEd4J,EAAGtC,MAAM,SAAUhB,EAAGzG,GAAK,OAAOyG,EAAE7D,OAASoH,EAAGhK,GAAG4C,OAE9D,SAASqH,EAAqBjF,EAASkF,GACnC,IAAIC,KAWJ,OAVAlD,EAAQjC,EAAQiB,SAAU,SAAUmE,EAAOC,GACnCA,IAAgB7G,IAChB2G,EAAMA,EAAI/I,OAAO8I,EAAGE,EAAOC,OAGnCpD,EAAQjC,EAAQiB,SAAU,SAAUmE,EAAOC,GACnCA,IAAgB7G,IAChB2G,EAAMA,EAAI/I,OAAO8I,EAAGE,EAAOC,OAG5BF,EAcX,IAAIG,EACA,SAASA,MAsBTC,EAAsC,WACtC,SAASA,KAcT,OAXAA,EAAqB7K,UAAU8K,MAAQ,SAAU/I,GAC7C,IAAIpC,EAAI,IAAIoL,GAAUhJ,GACtB,OAAO,IAAIyH,EAAQ7J,EAAEqL,mBAAoBrL,EAAEsL,mBAAoBtL,EAAEuL,kBAGrEL,EAAqB7K,UAAU4J,UAAY,SAAUuB,GAIjD,MAHc,IAWtB,SAASC,EAAiB9F,EAAS4D,GAC/B,IAAK5D,EAAQJ,cACT,OAAO8E,EAAe1E,GAE1B,GAAI4D,EAAM,CACN,IAAImC,EAAU/F,EAAQiB,SAASzC,GAC3BsH,EAAiB9F,EAAQiB,SAASzC,IAAiB,GACnD,GACAwH,KAMJ,OALA/D,EAAQjC,EAAQiB,SAAU,SAAUnC,EAAG2F,GAC/BA,IAAMjG,GACNwH,EAAW/J,KAAKwI,EAAI,IAAMqB,EAAiBhH,GAAG,MAG/CkH,EAAW7K,OAAS,EAAI4K,EAAU,IAAMC,EAAWC,KAAK,MAAQ,IAAMF,EAG7E,IAAI9E,EAAWgE,EAAqBjF,EAAS,SAAUlB,EAAG2F,GACtD,OAAIA,IAAMjG,GACEsH,EAAiB9F,EAAQiB,SAASzC,IAAiB,KAEvDiG,EAAI,IAAMqB,EAAiBhH,GAAG,MAE1C,OAAO4F,EAAe1E,GAAW,KAAOiB,EAASgF,KAAK,MAAQ,IAlC1CH,CAAiBD,EAAKjC,MAAM,GA8FxD,SAASsC,EAAqBxH,GAC1B,IAAIyH,EAAYpM,OAAOmF,KAAKR,GAAQ6C,IAAI,SAAU3C,GAC9C,IAAIjD,EAAQ+C,EAAOE,GACnB,OAAO1E,MAAM6E,QAAQpD,GACjBA,EAAM4F,IAAI,SAAUzC,GAAK,OAAOsH,GAAexH,GAAQ,IAAMwH,GAAetH,KAAOmH,KAAK,KACxFG,GAAexH,GAAQ,IAAMwH,GAAezK,KAEpD,OAAOwK,EAAUhL,OAAS,IAAMgL,EAAUF,KAAK,KAAO,GApGtCC,CAAqBL,EAAKtC,cACE,iBAAlBsC,EAAK1B,SAAwB,IA+D3D,SAASkC,EAAkBtL,GACvB,OAAOuL,UAAUvL,GAhE4CsL,CAAkBR,EAAK1B,UAAY,KAGzFoB,EAf8B,GAiBrClB,EAAqB,IAAIkB,EAC7B,SAASb,EAAe1E,GACpB,OAAOA,EAAQT,SAASgC,IAAI,SAAUlH,GAAK,OAAOyK,GAAczK,KAAO4L,KAAK,KAkChF,SAASM,GAAgBxL,GACrB,OAAOyL,mBAAmBzL,GACrB0L,QAAQ,OAAQ,KAChBA,QAAQ,QAAS,KACjBA,QAAQ,OAAQ,KAChBA,QAAQ,QAAS,KAQ1B,SAASL,GAAerL,GACpB,OAAOwL,GAAgBxL,GAAG0L,QAAQ,QAAS,KAkB/C,SAASC,GAAiB3L,GACtB,OAAOwL,GAAgBxL,GAAG0L,QAAQ,MAAO,OAAOA,QAAQ,MAAO,OAAOA,QAAQ,QAAS,KAE3F,SAASE,GAAO5L,GACZ,OAAO6L,mBAAmB7L,GAI9B,SAAS8L,GAAY9L,GACjB,OAAO4L,GAAO5L,EAAE0L,QAAQ,MAAO,QAEnC,SAAS3B,GAAclH,GACnB,MAAO,GAAK8I,GAAiB9I,EAAKA,MAEtC,SAASkJ,EAAsBpI,GAC3B,OAAO3E,OAAOmF,KAAKR,GACd6C,IAAI,SAAUG,GAAO,MAAO,IAAMgF,GAAiBhF,GAAO,IAAMgF,GAAiBhI,EAAOgD,MACxFuE,KAAK,IALgCa,CAAsBlJ,EAAKgH,YAgBzE,IAAImC,GAAa,gBACjB,SAASC,GAAcC,GACnB,IAAIC,EAAQD,EAAIC,MAAMH,IACtB,OAAOG,EAAQA,EAAM,GAAK,GAE9B,IAAIC,GAAiB,YAMjBC,GAAuB,WAMvB3B,GAA2B,WAC3B,SAASA,EAAUhJ,GACf5C,KAAK4C,IAAMA,EACX5C,KAAKwN,UAAY5K,EA2JrB,OAzJAgJ,EAAU/K,UAAUgL,iBAAmB,WAEnC,OADA7L,KAAKyN,gBAAgB,KACE,KAAnBzN,KAAKwN,WAAoBxN,KAAK0N,eAAe,MAAQ1N,KAAK0N,eAAe,KAClE,IAAIhD,SAGR,IAAIA,KAAoB1K,KAAK2N,kBAExC/B,EAAU/K,UAAUiL,iBAAmB,WACnC,IAAIjH,KACJ,GAAI7E,KAAKyN,gBAAgB,KACrB,GACIzN,KAAK4N,gBAAgB/I,SAChB7E,KAAKyN,gBAAgB,MAElC,OAAO5I,GAEX+G,EAAU/K,UAAUkL,cAAgB,WAChC,OAAO/L,KAAKyN,gBAAgB,KAAOV,mBAAmB/M,KAAKwN,WAAa,MAE5E5B,EAAU/K,UAAU8M,cAAgB,WAChC,GAAuB,KAAnB3N,KAAKwN,UACL,SAEJxN,KAAKyN,gBAAgB,KACrB,IAAI/H,KAIJ,IAHK1F,KAAK0N,eAAe,MACrBhI,EAAStD,KAAKpC,KAAK6N,gBAEhB7N,KAAK0N,eAAe,OAAS1N,KAAK0N,eAAe,QAAU1N,KAAK0N,eAAe,OAClF1N,KAAK8N,QAAQ,KACbpI,EAAStD,KAAKpC,KAAK6N,gBAEvB,IAAIzG,KACApH,KAAK0N,eAAe,QACpB1N,KAAK8N,QAAQ,KACb1G,EAAWpH,KAAK+N,aAAY,IAEhC,IAAIzC,KAOJ,OANItL,KAAK0N,eAAe,OACpBpC,EAAMtL,KAAK+N,aAAY,KAEvBrI,EAASpE,OAAS,GAAKpB,OAAOmF,KAAK+B,GAAU9F,OAAS,KACtDgK,EAAI3G,GAAkB,IAAI+F,EAAgBhF,EAAU0B,IAEjDkE,GAIXM,EAAU/K,UAAUgN,aAAe,WAC/B,IAAI9J,EAAOoJ,GAAcnN,KAAKwN,WAC9B,GAAa,KAATzJ,GAAe/D,KAAK0N,eAAe,KACnC,MAAM,IAAI1G,MAAM,mDAAqDhH,KAAKwN,UAAY,MAG1F,OADAxN,KAAK8N,QAAQ/J,GACN,IAAI+G,EAAWgC,GAAO/I,GAAO/D,KAAKgO,sBAE7CpC,EAAU/K,UAAUmN,kBAAoB,WAEpC,IADA,IAAInJ,KACG7E,KAAKyN,gBAAgB,MACxBzN,KAAKiO,WAAWpJ,GAEpB,OAAOA,GAEX+G,EAAU/K,UAAUoN,WAAa,SAAUpJ,GACvC,IAAIgD,EAAMsF,GAAcnN,KAAKwN,WAC7B,GAAK3F,EAAL,CAGA7H,KAAK8N,QAAQjG,GACb,IAAI/F,EAAQ,GACZ,GAAI9B,KAAKyN,gBAAgB,KAAM,CAC3B,IAAIS,EAAaf,GAAcnN,KAAKwN,WAChCU,GAEAlO,KAAK8N,QADLhM,EAAQoM,GAIhBrJ,EAAOiI,GAAOjF,IAAQiF,GAAOhL,KAGjC8J,EAAU/K,UAAU+M,gBAAkB,SAAU/I,GAC5C,IAAIgD,EAjGZ,SAASsG,EAAiBf,GACtB,IAAIC,EAAQD,EAAIC,MAAMC,IACtB,OAAOD,EAAQA,EAAM,GAAK,GA+FZc,CAAiBnO,KAAKwN,WAChC,GAAK3F,EAAL,CAGA7H,KAAK8N,QAAQjG,GACb,IAAI/F,EAAQ,GACZ,GAAI9B,KAAKyN,gBAAgB,KAAM,CAC3B,IAAIS,EAlGhB,SAASE,EAAwBhB,GAC7B,IAAIC,EAAQD,EAAIC,MAAME,IACtB,OAAOF,EAAQA,EAAM,GAAK,GAgGDe,CAAwBpO,KAAKwN,WAC1CU,GAEAlO,KAAK8N,QADLhM,EAAQoM,GAIhB,IAAIG,EAAarB,GAAYnF,GACzByG,EAAatB,GAAYlL,GAC7B,GAAI+C,EAAOpE,eAAe4N,GAAa,CAEnC,IAAIE,EAAa1J,EAAOwJ,GACnBhO,MAAM6E,QAAQqJ,KAEf1J,EAAOwJ,GADPE,GAAcA,IAGlBA,EAAWnM,KAAKkM,QAIhBzJ,EAAOwJ,GAAcC,IAI7B1C,EAAU/K,UAAUkN,YAAc,SAAUS,GACxC,IAAI9I,KAEJ,IADA1F,KAAK8N,QAAQ,MACL9N,KAAKyN,gBAAgB,MAAQzN,KAAKwN,UAAUlM,OAAS,GAAG,CAC5D,IAAIyC,EAAOoJ,GAAcnN,KAAKwN,WAC1B3L,EAAO7B,KAAKwN,UAAUzJ,EAAKzC,QAG/B,GAAa,MAATO,GAAyB,MAATA,GAAyB,MAATA,EAChC,MAAM,IAAImF,MAAM,qBAAuBhH,KAAK4C,IAAM,KAEtD,IAAI6L,OAAaC,EACb3K,EAAK4K,QAAQ,MAAQ,GACrBF,EAAa1K,EAAK6K,OAAO,EAAG7K,EAAK4K,QAAQ,MACzC3O,KAAK8N,QAAQW,GACbzO,KAAK8N,QAAQ,MAERU,IACLC,EAAa9J,GAEjB,IAAIyC,EAAWpH,KAAK2N,gBACpBjI,EAAS+I,GAA+C,IAAjCvO,OAAOmF,KAAK+B,GAAU9F,OAAe8F,EAASzC,GACjE,IAAI+F,KAAoBtD,GAC5BpH,KAAKyN,gBAAgB,MAEzB,OAAO/H,GAEXkG,EAAU/K,UAAU6M,eAAiB,SAAUN,GAAO,OAAOpN,KAAKwN,UAAUpH,WAAWgH,IAEvFxB,EAAU/K,UAAU4M,gBAAkB,SAAUL,GAC5C,QAAIpN,KAAK0N,eAAeN,KACpBpN,KAAKwN,UAAYxN,KAAKwN,UAAUnH,UAAU+G,EAAI9L,SACvC,IAIfsK,EAAU/K,UAAUiN,QAAU,SAAUV,GACpC,IAAKpN,KAAKyN,gBAAgBL,GACtB,MAAM,IAAIpG,MAAM,aAAgBoG,EAAM,OAGvCxB,EA9JmB,GAwK1BiD,GACA,SAASA,GAAQlJ,GACb3F,KAAK2F,aAAeA,GAAgB,MAIxCmJ,GACA,SAASA,GAAiBC,GACtB/O,KAAK+O,QAAUA,GAIvB,SAASC,GAAQrJ,GACb,OAAO,IAAI9F,EAAKoP,WAAW,SAAUC,GAAO,OAAOA,EAAI7M,MAAM,IAAIwM,GAAQlJ,MAE7E,SAASwJ,GAAiBC,GACtB,OAAO,IAAIvP,EAAKoP,WAAW,SAAUC,GAAO,OAAOA,EAAI7M,MAAM,IAAIyM,GAAiBM,MAEtF,SAASC,GAAqBlI,GAC1B,OAAO,IAAItH,EAAKoP,WAAW,SAAUC,GAAO,OAAOA,EAAI7M,MAAM,IAAI2E,MAAM,gEAAkEG,EAAa,QAa1J,IAAImI,GAAgC,WAChC,SAASA,EAAeC,EAAgBC,EAAcC,EAAeV,EAASpI,GAC1E3G,KAAKwP,aAAeA,EACpBxP,KAAKyP,cAAgBA,EACrBzP,KAAK+O,QAAUA,EACf/O,KAAK2G,OAASA,EACd3G,KAAK0P,gBAAiB,EACtB1P,KAAK2P,SAAWJ,EAAevK,IAAIpF,EAAKgQ,aAgQ5C,OA9PAN,EAAezO,UAAUqH,MAAQ,WAC7B,IAAInF,EAAQ/C,KAGZ,OAFgBA,KAAK6P,mBAAmB7P,KAAK2P,SAAU3P,KAAK2G,OAAQ3G,KAAK+O,QAAQhF,KAAMpF,GAC7D+D,KAAK5I,EAAU4H,IAAI,SAAUoI,GAAoB,OAAO/M,EAAMgN,cAAcD,EAAkB/M,EAAMgM,QAAQrF,YAAa3G,EAAMgM,QAAQzE,aAChJ5B,KAAK5I,EAAUkQ,WAAW,SAAU9N,GACjD,GAAIA,aAAa4M,GAIb,OAFA/L,EAAM2M,gBAAiB,EAEhB3M,EAAMsK,MAAMnL,EAAE6M,SAEzB,GAAI7M,aAAa2M,GACb,MAAM9L,EAAMkN,aAAa/N,GAE7B,MAAMA,MAGdoN,EAAezO,UAAUwM,MAAQ,SAAUrB,GACvC,IAAIjJ,EAAQ/C,KAKZ,OAJgBA,KAAK6P,mBAAmB7P,KAAK2P,SAAU3P,KAAK2G,OAAQqF,EAAKjC,KAAMpF,GACvD+D,KAAK5I,EAAU4H,IAAI,SAAUoI,GACjD,OAAO/M,EAAMgN,cAAcD,EAAkB9D,EAAKtC,YAAasC,EAAK1B,aAEzD5B,KAAK5I,EAAUkQ,WAAW,SAAU9N,GAC/C,GAAIA,aAAa2M,GACb,MAAM9L,EAAMkN,aAAa/N,GAE7B,MAAMA,MAGdoN,EAAezO,UAAUoP,aAAe,SAAU/N,GAC9C,OAAO,IAAI8E,MAAM,0CAA4C9E,EAAEyD,aAAe,MAElF2J,EAAezO,UAAUkP,cAAgB,SAAUG,EAAexG,EAAaY,GAC3E,IAII6F,EAJApG,EAAOmG,EAAcxK,SAASpE,OAAS,EACvC,IAAIoJ,OAAqByF,MAAYxL,GAAkBuL,EAAeC,IACtED,EACJ,OAAO,IAAI7F,EAAQN,EAAML,EAAaY,IAG1CgF,EAAezO,UAAUgP,mBAAqB,SAAUF,EAAUlJ,EAAQd,EAAcuB,GACpF,OAAqC,IAAjCvB,EAAaD,SAASpE,QAAgBqE,EAAaI,cAC5C/F,KAAKoQ,eAAeT,EAAUlJ,EAAQd,GACxC+C,KAAK5I,EAAU4H,IAAI,SAAUN,GAAY,OAAO,IAAIsD,KAAoBtD,MAE1EpH,KAAKqQ,cAAcV,EAAUhK,EAAcc,EAAQd,EAAaD,SAAUwB,GAAQ,IAG7FoI,EAAezO,UAAUuP,eAAiB,SAAUT,EAAUlJ,EAAQd,GAClE,IAAI5C,EAAQ/C,KACZ,OAtrBR,SAASsQ,EAAWC,EAAKlF,GACrB,GAAgC,IAA5BnL,OAAOmF,KAAKkL,GAAKjP,OACjB,OAAOzB,EAAKuJ,OAEhB,IAAIoH,KACAC,KACAnF,KAWJ,OAVAlD,EAAQmI,EAAK,SAAU3I,EAAGgD,GACtB,IAAI8F,EAASrF,EAAGT,EAAGhD,GAAGc,KAAK5I,EAAU4H,IAAI,SAAUzF,GAAK,OAAOqJ,EAAIV,GAAK3I,KACpE2I,IAAMjG,EACN6L,EAASpO,KAAKsO,GAGdD,EAASrO,KAAKsO,KAIf7Q,EAAKuJ,GAAGlB,MAAM,KAAMsI,EAASjO,OAAOkO,IAAW/H,KAAK5I,EAAU6Q,YAAa7Q,EAAU8Q,OAAQ9Q,EAAU4H,IAAI,WAAc,OAAO4D,KAqqB5HgF,CAAW3K,EAAayB,SAAU,SAAUoE,EAAaD,GAAS,OAAOxI,EAAM8M,mBAAmBF,EAAUlJ,EAAQ8E,EAAOC,MAEtI8D,EAAezO,UAAUwP,cAAgB,SAAUV,EAAUhK,EAAcc,EAAQf,EAAUwB,EAAQwI,GACjG,IAAI3M,EAAQ/C,KACZ,OAAOH,EAAKuJ,GAAGlB,WAAM,EAAQ5F,EAASmE,IAASiC,KAAK5I,EAAU4H,IAAI,SAAUzF,GAExE,OADgBc,EAAM8N,0BAA0BlB,EAAUhK,EAAcc,EAAQxE,EAAGyD,EAAUwB,EAAQwI,GACpFhH,KAAK5I,EAAUkQ,WAAW,SAAU9N,GACjD,GAAIA,aAAa2M,GAGb,OAAOhP,EAAKuJ,GAAG,MAEnB,MAAMlH,OAEVpC,EAAU6Q,YAAa7Q,EAAUgR,MAAM,SAAU5P,GAAK,QAASA,IAAOpB,EAAUkQ,WAAW,SAAU9N,EAAG6O,GACxG,GAAI7O,aAAarC,EAAKmR,YAAyB,eAAX9O,EAAE6C,KAAuB,CACzD,GAAIhC,EAAMkO,iBAAiBtL,EAAcD,EAAUwB,GAC/C,OAAOrH,EAAKuJ,GAAG,IAAIsB,UAEvB,MAAM,IAAImE,GAAQlJ,GAEtB,MAAMzD,MAGdoN,EAAezO,UAAUoQ,iBAAmB,SAAUtL,EAAcD,EAAUwB,GAC1E,OAA2B,IAApBxB,EAASpE,SAAiBqE,EAAayB,SAASF,IAE3DoI,EAAezO,UAAUgQ,0BAA4B,SAAUlB,EAAUhK,EAAcc,EAAQ3C,EAAOoN,EAAOhK,EAAQwI,GACjH,OAAIyB,GAAUrN,KAAWoD,EACd8H,GAAQrJ,QAEM+I,IAArB5K,EAAMqD,WACCnH,KAAKoR,yBAAyBzB,EAAUhK,EAAc7B,EAAOoN,GAEpExB,GAAkB1P,KAAK0P,eAChB1P,KAAKqR,uCAAuC1B,EAAUhK,EAAcc,EAAQ3C,EAAOoN,EAAOhK,GAE9F8H,GAAQrJ,IAEnB2J,EAAezO,UAAUwQ,uCAAyC,SAAU1B,EAAUhK,EAAcc,EAAQ3C,EAAO4B,EAAUwB,GACzH,MAAmB,OAAfpD,EAAMC,KACC/D,KAAKsR,kDAAkD3B,EAAUlJ,EAAQ3C,EAAOoD,GAEpFlH,KAAKuR,8CAA8C5B,EAAUhK,EAAcc,EAAQ3C,EAAO4B,EAAUwB,IAE/GoI,EAAezO,UAAUyQ,kDAAoD,SAAU3B,EAAUlJ,EAAQ3C,EAAOoD,GAC5G,IAAInE,EAAQ/C,KACRoP,EAAUpP,KAAKwR,yBAA0B1N,EAAMqD,eACnD,OAAIrD,EAAMqD,WAAWf,WAAW,KACrB+I,GAAiBC,GAErBpP,KAAKyR,mBAAmB3N,EAAOsL,GAAS1G,KAAK5I,EAAU4R,SAAS,SAAUC,GAC7E,IAAIC,EAAQ,IAAIlH,EAAgBiH,MAChC,OAAO5O,EAAMsN,cAAcV,EAAUiC,EAAOnL,EAAQkL,EAAazK,GAAQ,OAGjFoI,EAAezO,UAAU0Q,8CAAgD,SAAU5B,EAAUhK,EAAcc,EAAQ3C,EAAO4B,EAAUwB,GAChI,IAAInE,EAAQ/C,KACRmQ,EAAK9C,GAAM1H,EAAc7B,EAAO4B,GAAiCmM,EAAmB1B,EAAG0B,iBAAkBC,EAAY3B,EAAG2B,UAAWC,EAA0B5B,EAAG4B,wBACpK,IADyD5B,EAAG6B,QAExD,OAAOhD,GAAQrJ,GACnB,IAAIyJ,EAAUpP,KAAKwR,sBAAsBK,EAAkB/N,EAAMqD,WAAY4K,GAC7E,OAAIjO,EAAMqD,WAAWf,WAAW,KACrB+I,GAAiBC,GAErBpP,KAAKyR,mBAAmB3N,EAAOsL,GAAS1G,KAAK5I,EAAU4R,SAAS,SAAUC,GAC7E,OAAO5O,EAAMsN,cAAcV,EAAUhK,EAAcc,EAAQkL,EAAYpP,OAAOmD,EAASa,MAAMuL,IAAa5K,GAAQ,OAG1HoI,EAAezO,UAAUuQ,yBAA2B,SAAUzB,EAAUsC,EAAiBnO,EAAO4B,GAC5F,IAAI3C,EAAQ/C,KACZ,GAAmB,OAAf8D,EAAMC,KACN,OAAID,EAAMuD,aACCrH,KAAKwP,aAAa0C,KAAKvC,EAASwC,SAAUrO,GAC5C4E,KAAK5I,EAAU4H,IAAI,SAAU0K,GAE9B,OADAtO,EAAMuO,cAAgBD,EACf,IAAI1H,EAAgBhF,SAG5B7F,EAAKuJ,GAAG,IAAIsB,EAAgBhF,OAEvC,IAAIyK,EAAK9C,GAAM4E,EAAiBnO,EAAO4B,GAAiCmM,EAAmB1B,EAAG0B,iBAAkBC,EAAY3B,EAAG2B,UAC/H,IAD4D3B,EAAG6B,QAE3D,OAAOhD,GAAQiD,GACnB,IAAIK,EAAoB5M,EAASa,MAAMuL,GAEvC,OADmB9R,KAAKuS,eAAe5C,EAAU7L,GAC7B4E,KAAK5I,EAAU4R,SAAS,SAAUc,GAClD,IAAIC,EAAcD,EAAanT,OAC3BqT,EAAcF,EAAa/L,OAC3B0J,EAuJhB,SAAStK,EAAMF,EAAckM,EAAkBc,EAAgBhM,GAC3D,OAAIgM,EAAerR,OAAS,GA4DhC,SAASsR,EAA2CjN,EAAcD,EAAUe,GACxE,OAAOA,EAAOoM,KAAK,SAAU5Q,GAAK,OAAO6Q,GAAoBnN,EAAcD,EAAUzD,IAAMkP,GAAUlP,KAAO0C,IA5DxGiO,CAA2CjN,EAAcgN,EAAgBhM,IAEhEhB,aAAcoN,GADf,IAAIrI,EAAgBmH,EAqCpC,SAASmB,EAA+BvM,EAAQwM,GAC5C,IAkBIC,EAAK/C,EAlBL7E,KACJA,EAAI3G,GAAkBsO,EACtB,IACI,IAAK,IAAIE,EAAW3R,EAASiF,GAAS2M,EAAaD,EAAStR,QAASuR,EAAWrR,KAAMqR,EAAaD,EAAStR,OAAQ,CAChH,IAAII,EAAImR,EAAWtR,MACJ,KAAXG,EAAE8B,MAAeoN,GAAUlP,KAAO0C,IAClC2G,EAAI6F,GAAUlP,IAAM,IAAIyI,WAIpC,MAAO2I,GAASH,GAAQ7Q,MAAOgR,GAC/B,QACI,IACQD,IAAeA,EAAWrR,OAASoO,EAAKgD,EAASG,SAASnD,EAAG5O,KAAK4R,GAE1E,QAAU,GAAID,EAAK,MAAMA,EAAI7Q,OAEjC,OAAOiJ,EAvD2C0H,CAA+BrM,EAAQ,IAAI+D,EAAgBiI,EAAgBhN,EAAayB,aACtFuL,mBAEtB,IAA1BA,EAAerR,QA0DvB,SAASiS,EAA2B5N,EAAcD,EAAUe,GACxD,OAAOA,EAAOoM,KAAK,SAAU5Q,GAAK,OAAO6Q,GAAoBnN,EAAcD,EAAUzD,KA1DjFsR,CAA2B5N,EAAcgN,EAAgBhM,IAEhDhB,aAAcoN,GADf,IAAIrI,EAAgB/E,EAAaD,SAYjD,SAAS8N,EAAmC7N,EAAcgN,EAAgBlM,EAAQW,GAC9E,IAiBIqM,EAAKtD,EAjBL7E,KACJ,IACI,IAAK,IAAIoI,EAAWlS,EAASiF,GAASkN,EAAaD,EAAS7R,QAAS8R,EAAW5R,KAAM4R,EAAaD,EAAS7R,OAAQ,CAChH,IAAII,EAAI0R,EAAW7R,MACfgR,GAAoBnN,EAAcgN,EAAgB1Q,KAAOmF,EAAS+J,GAAUlP,MAC5EqJ,EAAI6F,GAAUlP,IAAM,IAAIyI,WAIpC,MAAOkJ,GAASH,GAAQpR,MAAOuR,GAC/B,QACI,IACQD,IAAeA,EAAW5R,OAASoO,EAAKuD,EAASJ,SAASnD,EAAG5O,KAAKmS,GAE1E,QAAU,GAAID,EAAK,MAAMA,EAAIpR,OAEjC,OAAOtB,KAAaqG,EAAUkE,GA7ByBkI,CAAmC7N,EAAcgN,EAAgBhM,EAAQhB,EAAayB,YACzFuL,eAAgBA,IAE3DhN,aAAcA,EAAcgN,eAAgBA,GAlKpC9M,CAAMoM,EAAiBJ,EAAkBS,EAAmBI,GAAc/M,EAAewK,EAAGxK,aAAcgN,EAAiBxC,EAAGwC,eACvI,OAA8B,IAA1BA,EAAerR,QAAgBqE,EAAaI,cAC1BhD,EAAMqN,eAAeqC,EAAaC,EAAa/M,GAC9C+C,KAAK5I,EAAU4H,IAAI,SAAUN,GAAY,OAAO,IAAIsD,EAAgBmH,EAAkBzK,MAElF,IAAvBsL,EAAYpR,QAA0C,IAA1BqR,EAAerR,OACpCzB,EAAKuJ,GAAG,IAAIsB,EAAgBmH,OAEvB9O,EAAMsN,cAAcoC,EAAa9M,EAAc+M,EAAaC,EAAgBhO,GAAgB,GAC3F+D,KAAK5I,EAAU4H,IAAI,SAAUmM,GAC1C,OAAO,IAAInJ,EAAgBmH,EAAiBtP,OAAOsR,EAAGnO,UAAWmO,EAAGzM,iBAIhFkI,EAAezO,UAAU0R,eAAiB,SAAU5C,EAAU7L,GAC1D,IAAIf,EAAQ/C,KACZ,OAAI8D,EAAMsD,SAECvH,EAAKuJ,GAAG,IAAI5C,EAAmB1C,EAAMsD,SAAUuI,IAEtD7L,EAAMuD,kBAEsBqH,IAAxB5K,EAAMuO,cACCxS,EAAKuJ,GAAGtF,EAAMuO,eA8FrC,SAASyB,EAAgBvE,EAAgBzL,GACrC,IAAIiQ,EAAUjQ,EAAMiQ,QACpB,OAAKA,GAA8B,IAAnBA,EAAQzS,OAMjBkH,EAJG3I,EAAKoJ,KAAK8K,GAASrL,KAAK5I,EAAU4H,IAAI,SAAUsM,GACtD,IAAIC,EAAQ1E,EAAevK,IAAIgP,GAC/B,OAAOlL,EAAmBmL,EAAMF,QAAUE,EAAMF,QAAQjQ,GAASmQ,EAAMnQ,QAHhEjE,EAAKuJ,IAAG,GA/FJ0K,CAAgBnE,EAASwC,SAAUrO,GAAO4E,KAAK5I,EAAU4R,SAAS,SAAUwC,GAC/E,OAAIA,EACOnR,EAAMyM,aAAa0C,KAAKvC,EAASwC,SAAUrO,GAC7C4E,KAAK5I,EAAU4H,IAAI,SAAU0K,GAE9B,OADAtO,EAAMuO,cAAgBD,EACfA,KA7L/B,SAAS+B,EAAarQ,GAClB,OAAO,IAAIjE,EAAKoP,WAAW,SAAUC,GAAO,OAAOA,EAAI7M,MAtyB3D,SAAS+R,EAAyBC,GAC9B,IAAIhS,EAAQ2E,MAAM,6BAA+BqN,GAEjD,OADAhS,EAAgC,4BAAI,EAC7BA,EAmyBsD+R,CAAyB,gEAAkEtQ,EAAMC,KAAO,yBA+LlJoQ,CAAarQ,MAGrBjE,EAAKuJ,GAAG,IAAI5C,KAAuBmJ,KAE9CL,EAAezO,UAAU4Q,mBAAqB,SAAU3N,EAAOiL,GAG3D,IAFA,IAAIzD,KACAxB,EAAIiF,EAAQhF,OACH,CAET,GADAuB,EAAMA,EAAI/I,OAAOuH,EAAEpE,UACQ,IAAvBoE,EAAED,iBACF,OAAOhK,EAAKuJ,GAAGkC,GAEnB,GAAIxB,EAAED,iBAAmB,IAAMC,EAAE1C,SAASzC,GACtC,OAAO0K,GAAqBvL,EAAMqD,YAEtC2C,EAAIA,EAAE1C,SAASzC,KAGvB2K,EAAezO,UAAU2Q,sBAAwB,SAAU9L,EAAUyB,EAAYnB,GAC7E,OAAOhG,KAAKsU,4BAA4BnN,EAAYnH,KAAKyP,cAAc9D,MAAMxE,GAAazB,EAAUM,IAExGsJ,EAAezO,UAAUyT,4BAA8B,SAAUnN,EAAY4H,EAASrJ,EAAUM,GAC5F,IAAIuO,EAAUvU,KAAKwU,mBAAmBrN,EAAY4H,EAAQhF,KAAMrE,EAAUM,GAC1E,OAAO,IAAIqE,EAAQkK,EAASvU,KAAKyU,kBAAkB1F,EAAQrF,YAAa1J,KAAK+O,QAAQrF,aAAcqF,EAAQzE,WAE/GgF,EAAezO,UAAU4T,kBAAoB,SAAUC,EAAkBC,GACrE,IAAIrJ,KAWJ,OAVAlD,EAAQsM,EAAkB,SAAUzP,EAAG2F,GAEnC,GADmC,iBAAN3F,GAAkBA,EAAEmB,WAAW,KACvC,CACjB,IAAIwO,EAAa3P,EAAEoB,UAAU,GAC7BiF,EAAIV,GAAK+J,EAAaC,QAGtBtJ,EAAIV,GAAK3F,IAGVqG,GAEXgE,EAAezO,UAAU2T,mBAAqB,SAAUrN,EAAYyK,EAAOlM,EAAUM,GACjF,IAAIjD,EAAQ/C,KACR6U,EAAkB7U,KAAK8U,eAAe3N,EAAYyK,EAAMlM,SAAUA,EAAUM,GAC5EoB,KAIJ,OAHAgB,EAAQwJ,EAAMxK,SAAU,SAAUmE,EAAOxG,GACrCqC,EAASrC,GAAQhC,EAAMyR,mBAAmBrN,EAAYoE,EAAO7F,EAAUM,KAEpE,IAAI0E,EAAgBmK,EAAiBzN,IAEhDkI,EAAezO,UAAUiU,eAAiB,SAAU3N,EAAY4N,EAAoBC,EAAgBhP,GAChG,IAAIjD,EAAQ/C,KACZ,OAAO+U,EAAmBrN,IAAI,SAAUxG,GAAK,OAAOA,EAAE6C,KAAKqC,WAAW,KAAOrD,EAAMkS,aAAa9N,EAAYjG,EAAG8E,GAC3GjD,EAAMmS,aAAahU,EAAG8T,MAE9B1F,EAAezO,UAAUoU,aAAe,SAAU9N,EAAYgO,EAAsBnP,GAChF,IAAIoP,EAAMpP,EAAUmP,EAAqBpR,KAAKsC,UAAU,IACxD,IAAK+O,EACD,MAAM,IAAIpO,MAAM,uBAAyBG,EAAa,mBAAqBgO,EAAqBpR,KAAO,MAC3G,OAAOqR,GAEX9F,EAAezO,UAAUqU,aAAe,SAAUC,EAAsBH,GACpE,IAmBIK,EAAKlF,EAnBLmF,EAAM,EACV,IACI,IAAK,IAAIC,EAAmB/T,EAASwT,GAAiBQ,EAAqBD,EAAiB1T,QAAS2T,EAAmBzT,KAAMyT,EAAqBD,EAAiB1T,OAAQ,CACxK,IAAIX,EAAIsU,EAAmB1T,MAC3B,GAAIZ,EAAE6C,OAASoR,EAAqBpR,KAEhC,OADAiR,EAAeS,OAAOH,GACfpU,EAEXoU,KAGR,MAAOI,GAASL,GAAQhT,MAAOqT,GAC/B,QACI,IACQF,IAAuBA,EAAmBzT,OAASoO,EAAKoF,EAAiBjC,SAASnD,EAAG5O,KAAKgU,GAElG,QAAU,GAAIF,EAAK,MAAMA,EAAIhT,OAEjC,OAAO8S,GAGJ7F,EAvQwB,GAmRnC,SAASjC,GAAM1H,EAAc7B,EAAO4B,GAChC,GAAmB,KAAf5B,EAAMC,KACN,MAAyB,SAApBD,EAAMgC,YAA0BH,EAAaI,eAAiBL,EAASpE,OAAS,IACxE0Q,SAAS,EAAOH,oBAAsBC,UAAW,EAAGC,6BAExDC,SAAS,EAAMH,oBAAsBC,UAAW,EAAGC,4BAEhE,IACIzG,GADUxH,EAAMwD,SAAW7B,GACbC,EAAUC,EAAc7B,GAC1C,OAAKwH,GASD0G,SAAS,EACTH,iBAAkBvG,EAAIhF,SACtBwL,UAAWxG,EAAIhF,SAAShF,OACxByQ,wBAAyBzG,EAAItF,YAVzBgM,SAAS,EACTH,oBACAC,UAAW,EACXC,4BAuBZ,SAASgB,GAAqB7R,GAC1B,GAA2B,IAAvBA,EAAE2I,kBAA0B3I,EAAEkG,SAASzC,GAAiB,CACxD,IAAImF,EAAI5I,EAAEkG,SAASzC,GACnB,OAAO,IAAI+F,EAAgBxJ,EAAEwE,SAASnD,OAAOuH,EAAEpE,UAAWoE,EAAE1C,UAEhE,OAAOlG,EAiDX,SAAS4R,GAAoBnN,EAAcD,EAAUzD,GACjD,SAAK0D,EAAaI,eAAiBL,EAASpE,OAAS,IAAsB,SAAhBW,EAAE6D,YAG3C,KAAX7D,EAAE8B,WAAgC2K,IAAjBzM,EAAEkF,WAE9B,SAASgK,GAAUrN,GACf,OAAOA,EAAMoD,QAAUvC;;;;;;;GAU3B,IAAIgR,GAAsB,WACtB,SAASA,EAAK5L,GACV/J,KAAK4V,MAAQ7L,EA0CjB,OAxCA7J,OAAOkF,eAAeuQ,EAAK9U,UAAW,QAClCmE,IAAK,WAAc,OAAOhF,KAAK4V,MAAM9T,OACrCwD,YAAY,EACZC,cAAc,IAKlBoQ,EAAK9U,UAAU8J,OAAS,SAAU1J,GAC9B,IAAIT,EAAIR,KAAK6V,aAAa5U,GAC1B,OAAOT,EAAEc,OAAS,EAAId,EAAEA,EAAEc,OAAS,GAAK,MAK5CqU,EAAK9U,UAAUuG,SAAW,SAAUnG,GAChC,IAAIG,EAAI0U,GAAS7U,EAAGjB,KAAK4V,OACzB,OAAOxU,EAAIA,EAAEgG,SAASM,IAAI,SAAUzG,GAAK,OAAOA,EAAEa,YAKtD6T,EAAK9U,UAAUkV,WAAa,SAAU9U,GAClC,IAAIG,EAAI0U,GAAS7U,EAAGjB,KAAK4V,OACzB,OAAOxU,GAAKA,EAAEgG,SAAS9F,OAAS,EAAIF,EAAEgG,SAAS,GAAGtF,MAAQ,MAK9D6T,EAAK9U,UAAUmV,SAAW,SAAU/U,GAChC,IAAIT,EAAIyV,GAAShV,EAAGjB,KAAK4V,OACzB,OAAIpV,EAAEc,OAAS,KAEPd,EAAEA,EAAEc,OAAS,GAAG8F,SAASM,IAAI,SAAUoC,GAAK,OAAOA,EAAEhI,QACpDoU,OAAO,SAAUC,GAAM,OAAOA,IAAOlV,KAKlD0U,EAAK9U,UAAUgV,aAAe,SAAU5U,GAAK,OAAOgV,GAAShV,EAAGjB,KAAK4V,OAAOlO,IAAI,SAAUxG,GAAK,OAAOA,EAAEY,SACjG6T,EA5Cc,GA+CzB,SAASG,GAAShU,EAAOsU,GACrB,GAAItU,IAAUsU,EAAKtU,MACf,OAAOsU,EACX,IACI,IAAK,IAAIjG,EAAK3O,EAAS4U,EAAKhP,UAAWiP,EAAKlG,EAAGtO,QAASwU,EAAGtU,KAAMsU,EAAKlG,EAAGtO,OAAQ,CAC7E,IACIyU,EAASR,GAAShU,EADVuU,EAAGvU,OAEf,GAAIwU,EACA,OAAOA,GAGnB,MAAOZ,GAASL,GAAQhT,MAAOqT,GAC/B,QACI,IACQW,IAAOA,EAAGtU,OAASwU,EAAKpG,EAAGmD,SAASiD,EAAGhV,KAAK4O,GAEpD,QAAU,GAAIkF,EAAK,MAAMA,EAAIhT,OAEjC,OAAO,KACP,IAAIgT,EAAKkB,EAGb,SAASN,GAASnU,EAAOsU,GACrB,GAAItU,IAAUsU,EAAKtU,MACf,OAAQsU,GACZ,IACI,IAAK,IAAIjG,EAAK3O,EAAS4U,EAAKhP,UAAWiP,EAAKlG,EAAGtO,QAASwU,EAAGtU,KAAMsU,EAAKlG,EAAGtO,OAAQ,CAC7E,IACIkC,EAAOkS,GAASnU,EADRuU,EAAGvU,OAEf,GAAIiC,EAAKzC,OAEL,OADAyC,EAAKyS,QAAQJ,GACNrS,GAInB,MAAO6P,GAASH,GAAQpR,MAAOuR,GAC/B,QACI,IACQyC,IAAOA,EAAGtU,OAASwU,EAAKpG,EAAGmD,SAASiD,EAAGhV,KAAK4O,GAEpD,QAAU,GAAIsD,EAAK,MAAMA,EAAIpR,OAEjC,SACA,IAAIoR,EAAK8C,EAEb,IAAIE,GAA0B,WAC1B,SAASA,EAAS3U,EAAOsF,GACrBpH,KAAK8B,MAAQA,EACb9B,KAAKoH,SAAWA,EAGpB,OADAqP,EAAS5V,UAAUmC,SAAW,WAAc,MAAO,YAAchD,KAAK8B,MAAQ,KACvE2U,EANkB,GAS7B,SAASC,GAAkBN,GACvB,IAAI/N,KAIJ,OAHI+N,GACAA,EAAKhP,SAASgB,QAAQ,SAAUmD,GAAS,OAAOlD,EAAOkD,EAAMzJ,MAAMoF,QAAUqE,IAE1ElD;;;;;;;GAqCX,IAAIsO,GAA6B,SAAUjU,GAGvC,SAASiU,EAAY5M,EAErB7F,GACI,IAAInB,EAAQL,EAAOnB,KAAKvB,KAAM+J,IAAS/J,KAGvC,OAFA+C,EAAMmB,SAAWA,EACjB0S,GAAe7T,EAAOgH,GACfhH,EAGX,OAXArC,EAAUiW,EAAajU,GAUvBiU,EAAY9V,UAAUmC,SAAW,WAAc,OAAOhD,KAAKkE,SAASlB,YAC7D2T,EAZqB,CAa9BhB,IACF,SAASkB,GAAiB9H,EAAS+H,GAC/B,IAAI5S,EAUR,SAAS6S,EAAyBhI,EAAS+H,GACvC,IAIIE,EAAY,IAAIC,YADL,MACoFtS,EAAgBmS,EAAe,KAAM/H,EAAQhF,MAAO,MACvJ,OAAO,IAAImN,GAAoB,GAAI,IAAIT,GAASO,OAhBjCD,CAAyBhI,EAAS+H,GAC7CK,EAAW,IAAItX,EAAKuX,iBAAiB,IAAItM,EAAW,SACpDuM,EAAc,IAAIxX,EAAKuX,oBACvBE,EAAY,IAAIzX,EAAKuX,oBACrBG,EAAmB,IAAI1X,EAAKuX,oBAC5B9M,EAAW,IAAIzK,EAAKuX,gBAAgB,IACpCJ,EAAY,IAAIQ,GAAeL,EAAUE,EAAaE,EAAkBjN,EAAUgN,EAAW3S,EAAgBmS,EAAe5S,EAAS6F,MAEzI,OADAiN,EAAU9S,SAAWA,EAAS6F,KACvB,IAAI4M,GAAY,IAAIF,GAASO,MAAgB9S,GA8BxD,IAAIsT,GAAgC,WAEhC,SAASA,EAET5U,EAEAiC,EAEA6E,EAEAY,EAEAmN,EAEAvQ,EAGAD,EAAWyQ,GACP1X,KAAK4C,IAAMA,EACX5C,KAAK6E,OAASA,EACd7E,KAAK0J,YAAcA,EACnB1J,KAAKsK,SAAWA,EAChBtK,KAAKyX,KAAOA,EACZzX,KAAKkH,OAASA,EACdlH,KAAKiH,UAAYA,EACjBjH,KAAK2X,gBAAkBD,EA8D3B,OA5DAxX,OAAOkF,eAAeoS,EAAe3W,UAAW,eAE5CmE,IAAK,WAAc,OAAOhF,KAAK2X,gBAAgBxT,aAC/CmB,YAAY,EACZC,cAAc,IAElBrF,OAAOkF,eAAeoS,EAAe3W,UAAW,QAE5CmE,IAAK,WAAc,OAAOhF,KAAK4X,aAAa7N,MAC5CzE,YAAY,EACZC,cAAc,IAElBrF,OAAOkF,eAAeoS,EAAe3W,UAAW,UAE5CmE,IAAK,WAAc,OAAOhF,KAAK4X,aAAajN,OAAO3K,OACnDsF,YAAY,EACZC,cAAc,IAElBrF,OAAOkF,eAAeoS,EAAe3W,UAAW,cAE5CmE,IAAK,WAAc,OAAOhF,KAAK4X,aAAa7B,WAAW/V,OACvDsF,YAAY,EACZC,cAAc,IAElBrF,OAAOkF,eAAeoS,EAAe3W,UAAW,YAE5CmE,IAAK,WAAc,OAAOhF,KAAK4X,aAAaxQ,SAASpH,OACrDsF,YAAY,EACZC,cAAc,IAElBrF,OAAOkF,eAAeoS,EAAe3W,UAAW,gBAE5CmE,IAAK,WAAc,OAAOhF,KAAK4X,aAAa/B,aAAa7V,OACzDsF,YAAY,EACZC,cAAc,IAElBrF,OAAOkF,eAAeoS,EAAe3W,UAAW,YAC5CmE,IAAK,WAID,OAHKhF,KAAK6X,YACN7X,KAAK6X,UAAY7X,KAAK6E,OAAO6D,KAAK5I,EAAU4H,IAAI,SAAUlH,GAAK,OAAOgF,EAAkBhF,OAErFR,KAAK6X,WAEhBvS,YAAY,EACZC,cAAc,IAElBrF,OAAOkF,eAAeoS,EAAe3W,UAAW,iBAC5CmE,IAAK,WAKD,OAJKhF,KAAKuK,iBACNvK,KAAKuK,eACDvK,KAAK0J,YAAYhB,KAAK5I,EAAU4H,IAAI,SAAUlH,GAAK,OAAOgF,EAAkBhF,OAE7ER,KAAKuK,gBAEhBjF,YAAY,EACZC,cAAc,IAElBiS,EAAe3W,UAAUmC,SAAW,WAChC,OAAOhD,KAAKkE,SAAWlE,KAAKkE,SAASlB,WAAa,UAAYhD,KAAK2X,gBAAkB,KAElFH,EAvFwB,GA8FnC,SAASM,GAA2BhU,EAAOiU,QACL,IAA9BA,IAAwCA,EAA4B,aACxE,IAAIlC,EAAe/R,EAAM+R,aACrBmC,EAAyB,EAC7B,GAAkC,WAA9BD,EAEA,IADAC,EAAyBnC,EAAavU,OAAS,EACxC0W,GAA0B,GAAG,CAChC,IAAI5N,EAAUyL,EAAamC,GACvBC,EAAWpC,EAAamC,EAAyB,GAErD,GAAI5N,EAAQjG,aAA4C,KAA7BiG,EAAQjG,YAAYJ,KAC3CiU,QAGC,CAAA,GAAKC,EAAShR,UAIf,MAHA+Q,KAOZ,OAGJ,SAASE,EAAiBrC,GACtB,OAAOA,EAAasC,OAAO,SAAU7M,EAAK8M,GAItC,OAASvT,OAHI9D,KAAauK,EAAIzG,OAAQuT,EAAKvT,QAGlB4S,KAFd1W,KAAauK,EAAImM,KAAMW,EAAKX,MAEFtO,QADvBpI,KAAauK,EAAInC,QAASiP,EAAKC,kBAE5CxT,UAAY4S,QAAUtO,aATpB+O,CAAiBrC,EAAatP,MAAMyR,IA+B/C,IAAIf,GAAwC,WAExC,SAASA,EAETrU,EAEAiC,EAEA6E,EAEAY,EAEAmN,EAEAvQ,EAEAD,EAAW9C,EAAamU,EAAYC,EAAepP,GAC/CnJ,KAAK4C,IAAMA,EACX5C,KAAK6E,OAASA,EACd7E,KAAK0J,YAAcA,EACnB1J,KAAKsK,SAAWA,EAChBtK,KAAKyX,KAAOA,EACZzX,KAAKkH,OAASA,EACdlH,KAAKiH,UAAYA,EACjBjH,KAAKmE,YAAcA,EACnBnE,KAAKwY,YAAcF,EACnBtY,KAAKyY,eAAiBF,EACtBvY,KAAK0Y,SAAWvP,EAyDpB,OAvDAjJ,OAAOkF,eAAe6R,EAAuBpW,UAAW,QAEpDmE,IAAK,WAAc,OAAOhF,KAAK4X,aAAa7N,MAC5CzE,YAAY,EACZC,cAAc,IAElBrF,OAAOkF,eAAe6R,EAAuBpW,UAAW,UAEpDmE,IAAK,WAAc,OAAOhF,KAAK4X,aAAajN,OAAO3K,OACnDsF,YAAY,EACZC,cAAc,IAElBrF,OAAOkF,eAAe6R,EAAuBpW,UAAW,cAEpDmE,IAAK,WAAc,OAAOhF,KAAK4X,aAAa7B,WAAW/V,OACvDsF,YAAY,EACZC,cAAc,IAElBrF,OAAOkF,eAAe6R,EAAuBpW,UAAW,YAEpDmE,IAAK,WAAc,OAAOhF,KAAK4X,aAAaxQ,SAASpH,OACrDsF,YAAY,EACZC,cAAc,IAElBrF,OAAOkF,eAAe6R,EAAuBpW,UAAW,gBAEpDmE,IAAK,WAAc,OAAOhF,KAAK4X,aAAa/B,aAAa7V,OACzDsF,YAAY,EACZC,cAAc,IAElBrF,OAAOkF,eAAe6R,EAAuBpW,UAAW,YACpDmE,IAAK,WAID,OAHKhF,KAAK6X,YACN7X,KAAK6X,UAAYrS,EAAkBxF,KAAK6E,SAErC7E,KAAK6X,WAEhBvS,YAAY,EACZC,cAAc,IAElBrF,OAAOkF,eAAe6R,EAAuBpW,UAAW,iBACpDmE,IAAK,WAID,OAHKhF,KAAKuK,iBACNvK,KAAKuK,eAAiB/E,EAAkBxF,KAAK0J,cAE1C1J,KAAKuK,gBAEhBjF,YAAY,EACZC,cAAc,IAElB0R,EAAuBpW,UAAUmC,SAAW,WAGxC,MAAO,cAFGhD,KAAK4C,IAAI8E,IAAI,SAAUvB,GAAW,OAAOA,EAAQnD,aAAeoJ,KAAK,KAElD,aADfpM,KAAKmE,YAAcnE,KAAKmE,YAAYJ,KAAO,IACJ,MAElDkT,EApFgC,GAgHvCC,GAAqC,SAAUxU,GAG/C,SAASwU,EAETtU,EAAKmH,GACD,IAAIhH,EAAQL,EAAOnB,KAAKvB,KAAM+J,IAAS/J,KAGvC,OAFA+C,EAAMH,IAAMA,EACZgU,GAAe7T,EAAOgH,GACfhH,EAGX,OAXArC,EAAUwW,EAAqBxU,GAU/BwU,EAAoBrW,UAAUmC,SAAW,WAAc,OAAO2V,GAAc3Y,KAAK4V,QAC1EsB,EAZ6B,CAatCvB,IACF,SAASiB,GAAerT,EAAO6S,GAC3BA,EAAKtU,MAAM8V,aAAerU,EAC1B6S,EAAKhP,SAASgB,QAAQ,SAAU0B,GAAK,OAAO8M,GAAerT,EAAOuG,KAEtE,SAAS6O,GAAcvC,GACnB,IAAItM,EAAIsM,EAAKhP,SAAS9F,OAAS,EAAI,MAAQ8U,EAAKhP,SAASM,IAAIiR,IAAevM,KAAK,MAAQ,MAAQ,GACjG,MAAO,GAAKgK,EAAKtU,MAAQgI,EAO7B,SAAS8O,GAAsB9U,GAC3B,GAAIA,EAAMI,SAAU,CAChB,IAAI2U,EAAkB/U,EAAMI,SACxB4U,EAAehV,EAAM6T,gBACzB7T,EAAMI,SAAW4U,EACZnR,EAAakR,EAAgBnP,YAAaoP,EAAapP,cACxD5F,EAAM4F,YAAY7H,KAAKiX,EAAapP,aAEpCmP,EAAgBvO,WAAawO,EAAaxO,UAC1CxG,EAAMwG,SAASzI,KAAKiX,EAAaxO,UAEhC3C,EAAakR,EAAgBhU,OAAQiU,EAAajU,SACnDf,EAAMe,OAAOhD,KAAKiX,EAAajU,QAvhD3C,SAASkU,EAAmBnR,EAAGrH,GAC3B,GAAIqH,EAAEtG,SAAWf,EAAEe,OACf,OAAO,EACX,IAAK,IAAIH,EAAI,EAAGA,EAAIyG,EAAEtG,SAAUH,EAC5B,IAAKwG,EAAaC,EAAEzG,GAAIZ,EAAEY,IACtB,OAAO,EAEf,OAAO,EAkhDE4X,CAAmBF,EAAgBjW,IAAKkW,EAAalW,MACtDkB,EAAMlB,IAAIf,KAAKiX,EAAalW,KAE3B+E,EAAakR,EAAgBpB,KAAMqB,EAAarB,OACjD3T,EAAM2T,KAAK5V,KAAKiX,EAAarB,WAIjC3T,EAAMI,SAAWJ,EAAM6T,gBAEvB7T,EAAM2T,KAAK5V,KAAKiC,EAAM6T,gBAAgBF,MAG9C,SAASuB,GAA0BpR,EAAGrH,GAGlC,OAFqBoH,EAAaC,EAAE/C,OAAQtE,EAAEsE,SAhwClD,SAASoU,EAAc/N,EAAIC,GACvB,OAAOvB,EAAUsB,EAAIC,IAAOD,EAAGtC,MAAM,SAAUhB,EAAGzG,GAAK,OAAOwG,EAAaC,EAAEmD,WAAYI,EAAGhK,GAAG4J,cA+vCtCkO,CAAcrR,EAAEhF,IAAKrC,EAAEqC,SACzDgF,EAAE+C,SAAYpK,EAAEoK,WAEjC/C,EAAE+C,QAAUqO,GAA0BpR,EAAE+C,OAAQpK,EAAEoK;;;;;;;GA+F5D,SAASuO,GAAeC,GACpB,MAA0B,iBAAZA,GAAmC,MAAXA,IAAoBA,EAAQC,UAAYD,EAAQE,YAE1F,SAASrN,GAAKsN,EAAiBC,EAAiBxK,EAASrF,EAAaY,GAClE,IAAIkP,KAMJ,OALI9P,GACAtB,EAAQsB,EAAa,SAAU5H,EAAOiD,GAClCyU,EAAGzU,GAAQ1E,MAAM6E,QAAQpD,GAASA,EAAM4F,IAAI,SAAUzC,GAAK,MAAO,GAAKA,IAAQ,GAAKnD,IAIjF,IAAIuI,EADX0E,EAAQhF,OAASuP,EACEC,EAI3B,SAASE,EAAerP,EAASsP,EAAYC,GACzC,IAAIvS,KASJ,OARAgB,EAAQgC,EAAQhD,SAAU,SAAU0C,EAAG2E,GAE/BrH,EAASqH,GADT3E,IAAM4P,EACiBC,EAGAF,EAAe3P,EAAG4P,EAAYC,KAGtD,IAAIjP,EAAgBN,EAAQ1E,SAAU0B,GAZ1BqS,CAAe1K,EAAQhF,KAAMuP,EAAiBC,GAFzBC,EAAIlP,GAgBhD,IAAIsP,GAA4B,WAC5B,SAASA,EAAWC,EAAYC,EAAoBC,GAIhD,GAHA/Z,KAAK6Z,WAAaA,EAClB7Z,KAAK8Z,mBAAqBA,EAC1B9Z,KAAK+Z,SAAWA,EACZF,GAAcE,EAASzY,OAAS,GAAK4X,GAAea,EAAS,IAC7D,MAAM,IAAI/S,MAAM,8CAEpB,IAAIgT,EAAgBD,EAASE,KAAK,SAAUnQ,GAAK,MAAoB,iBAANA,GAAuB,MAALA,GAAaA,EAAEsP,UAChG,GAAIY,GAAiBA,IAAkB7R,EAAO4R,GAC1C,MAAM,IAAI/S,MAAM,2CAMxB,OAHA4S,EAAW/Y,UAAUqZ,OAAS,WAC1B,OAAOla,KAAK6Z,YAAuC,IAAzB7Z,KAAK+Z,SAASzY,QAAoC,KAApBtB,KAAK+Z,SAAS,IAEnEH,EAhBoB,GA8D3BO,GACA,SAASA,GAASxU,EAAcyU,EAAiBnU,GAC7CjG,KAAK2F,aAAeA,EACpB3F,KAAKoa,gBAAkBA,EACvBpa,KAAKiG,MAAQA,GA6BrB,SAASoU,GAAQlB,GACb,MAAuB,iBAAZA,GAAmC,MAAXA,GAAmBA,EAAQC,QACnDD,EAAQC,QAAQzU,GAEpB,GAAKwU,EAUhB,SAASmB,GAAmB3U,EAAc4U,EAAYR,GAIlD,GAHKpU,IACDA,EAAe,IAAI+E,UAEc,IAAjC/E,EAAaD,SAASpE,QAAgBqE,EAAaI,cACnD,OAAOyU,GAA2B7U,EAAc4U,EAAYR,GAEhE,IAAIrY,EAyCR,SAAS+Y,EAAa9U,EAAc4U,EAAYR,GAI5C,IAHA,IAAIW,EAAsB,EACtBC,EAAmBJ,EACnBvL,GAAY3B,OAAO,EAAOuN,UAAW,EAAGC,aAAc,GACnDF,EAAmBhV,EAAaD,SAASpE,QAAQ,CACpD,GAAIoZ,GAAuBX,EAASzY,OAChC,OAAO0N,EACX,IAAIjL,EAAO4B,EAAaD,SAASiV,GAC7BvC,EAAOiC,GAAQN,EAASW,IACxB7Y,EAAO6Y,EAAsBX,EAASzY,OAAS,EAAIyY,EAASW,EAAsB,GAAK,KAC3F,GAAIC,EAAmB,QAAcjM,IAAT0J,EACxB,MACJ,GAAIA,GAAQvW,GAAyB,iBAATA,QAAuC6M,IAAjB7M,EAAKuX,QAAuB,CAC1E,IAAK0B,GAAQ1C,EAAMvW,EAAMkC,GACrB,OAAOiL,EACX0L,GAAuB,MAEtB,CACD,IAAKI,GAAQ1C,KAAUrU,GACnB,OAAOiL,EACX0L,IAEJC,IAEJ,OAAStN,OAAO,EAAMuN,UAAWD,EAAkBE,aAAcH,GAjEzDD,CAAa9U,EAAc4U,EAAYR,GAC3CgB,EAAiBhB,EAASxT,MAAM7E,EAAEmZ,cACtC,GAAInZ,EAAE2L,OAAS3L,EAAEkZ,UAAYjV,EAAaD,SAASpE,OAAQ,CACvD,IAAI0Z,EAAI,IAAItQ,EAAgB/E,EAAaD,SAASa,MAAM,EAAG7E,EAAEkZ,eAG7D,OAFAI,EAAE5T,SAASzC,GACP,IAAI+F,EAAgB/E,EAAaD,SAASa,MAAM7E,EAAEkZ,WAAYjV,EAAayB,UACxEoT,GAA2BQ,EAAG,EAAGD,GAEvC,OAAIrZ,EAAE2L,OAAmC,IAA1B0N,EAAezZ,OACxB,IAAIoJ,EAAgB/E,EAAaD,aAEnChE,EAAE2L,QAAU1H,EAAaI,cACvBkV,GAAsBtV,EAAc4U,EAAYR,GAElDrY,EAAE2L,MACAmN,GAA2B7U,EAAc,EAAGoV,GAG5CE,GAAsBtV,EAAc4U,EAAYR,GAG/D,SAASS,GAA2B7U,EAAc4U,EAAYR,GAC1D,GAAwB,IAApBA,EAASzY,OACT,OAAO,IAAIoJ,EAAgB/E,EAAaD,aAGxC,IAAIwV,EAzCZ,SAASC,EAAWpB,GAChB,MAA6B,iBAAhBA,EAAS,KACX5J,MAAYxL,GAAkBoV,EAAU5J,QACvBzB,IAAxBqL,EAAS,GAAGX,UACL/C,MAAY1R,GAAkBoV,EAAU1D,GAC5C0D,EAAS,GAAGX,QACnB,IAAIjJ,EAAIkG,EAmCY8E,CAAWpB,GACvB5N,KAWJ,OAVA/D,EAAQ8S,EAAW,SAAUnB,EAAU7S,GAClB,OAAb6S,IACA5N,EAAWjF,GAAUoT,GAAmB3U,EAAayB,SAASF,GAASqT,EAAYR,MAG3F3R,EAAQzC,EAAayB,SAAU,SAAUmE,EAAOC,QACbkD,IAA3BwM,EAAU1P,KACVW,EAAWX,GAAeD,KAG3B,IAAIb,EAAgB/E,EAAaD,SAAUyG,GA6B1D,SAAS8O,GAAsBtV,EAAc4U,EAAYR,GAGrD,IAFA,IAAI7I,EAAQvL,EAAaD,SAASa,MAAM,EAAGgU,GACvCpZ,EAAI,EACDA,EAAI4Y,EAASzY,QAAQ,CACxB,GAA2B,iBAAhByY,EAAS5Y,SAA2CuN,IAAxBqL,EAAS5Y,GAAGiY,QAAuB,CACtE,IAAIhS,EAAWgU,GAAyBrB,EAAS5Y,GAAGiY,SACpD,OAAO,IAAI1O,EAAgBwG,EAAO9J,GAGtC,GAAU,IAANjG,GAAW+X,GAAea,EAAS,IAEnC7I,EAAM9O,KAAK,IAAI0I,EADPnF,EAAaD,SAAS6U,GACFxW,KAAMgW,EAAS,KAC3C5Y,QAHJ,CAMA,IAAIiX,EAAOiC,GAAQN,EAAS5Y,IACxBU,EAAQV,EAAI4Y,EAASzY,OAAS,EAAKyY,EAAS5Y,EAAI,GAAK,KACrDiX,GAAQvW,GAAQqX,GAAerX,IAC/BqP,EAAM9O,KAAK,IAAI0I,EAAWsN,EAAMiD,GAAUxZ,KAC1CV,GAAK,IAGL+P,EAAM9O,KAAK,IAAI0I,EAAWsN,OAC1BjX,MAGR,OAAO,IAAIuJ,EAAgBwG,MAE/B,SAASkK,GAAyBhC,GAC9B,IAAIhS,KAMJ,OALAgB,EAAQgR,EAAS,SAAUW,EAAU7S,GAChB,OAAb6S,IACA3S,EAASF,GAAU+T,GAAsB,IAAIvQ,SAAyB,EAAGqP,MAG1E3S,EAEX,SAASiU,GAAUxW,GACf,IAAIyG,KAEJ,OADAlD,EAAQvD,EAAQ,SAAUI,EAAG2F,GAAK,OAAOU,EAAIV,GAAK,GAAK3F,IAChDqG,EAEX,SAASwP,GAAQ/W,EAAMc,EAAQsB,GAC3B,OAAOpC,GAAQoC,EAAQpC,MAAQ4D,EAAa9C,EAAQsB,EAAQ4E;;;;;;;GAUhE,IAAIuQ,GACA,SAASA,GAAYvX,GACjB/D,KAAK+D,KAAOA,EACZ/D,KAAK8D,MAAQ9D,KAAK+D,KAAK/D,KAAK+D,KAAKzC,OAAS,IAI9Cia,GACA,SAASA,GAActU,EAAWnD,GAC9B9D,KAAKiH,UAAYA,EACjBjH,KAAK8D,MAAQA,GAOjB0X,GAA+B,WAC/B,SAASA,EAAcC,EAAQrD,EAAM7I,EAAgBmM,GACjD1b,KAAKyb,OAASA,EACdzb,KAAKoY,KAAOA,EACZpY,KAAKuP,eAAiBA,EACtBvP,KAAK0b,aAAeA,EACpB1b,KAAK2b,qBACL3b,KAAK4b,uBAiRT,OA/QAJ,EAAc3a,UAAUgb,WAAa,SAAUC,GAC3C,IAAIC,EAAa/b,KAAKyb,OAAO7F,MAE7B5V,KAAKgc,sBAAsBD,EADZ/b,KAAKoY,KAAOpY,KAAKoY,KAAKxC,MAAQ,KACIkG,GAAiBC,EAAWja,SAEjF0Z,EAAc3a,UAAUob,YAAc,WAClC,IAAIlZ,EAAQ/C,KACZ,OAAKA,KAAKkc,kBAAqBlc,KAAKmc,eAGfnc,KAAKoc,yBACJ1T,KAAK5I,EAAU4R,SAAS,SAAU2K,GAAiB,OAAOA,EAAgBtZ,EAAMuZ,uBAAyBzc,EAAKuJ,IAAG,MAH5HvJ,EAAKuJ,IAAG,IAKvBoS,EAAc3a,UAAU0b,YAAc,SAAUxE,GAC5C,IAAIhV,EAAQ/C,KACZ,OAAKA,KAAKmc,eAEHtc,EAAKoJ,KAAKjJ,KAAK2b,mBACjBjT,KAAK5I,EAAU0c,UAAU,SAAUC,GAAS,OAAO1Z,EAAM2Z,WAAWD,EAAM3Y,MAAOiU,KAAgCjY,EAAUqY,OAAO,SAAUpH,EAAGpQ,GAAM,OAAOoQ,KAFtJlR,EAAKuJ,GAAG,OAIvBoS,EAAc3a,UAAUqb,eAAiB,WAAc,OAA2C,IAApClc,KAAK4b,oBAAoBta,QACvFka,EAAc3a,UAAUsb,aAAe,WAAc,OAAyC,IAAlCnc,KAAK2b,kBAAkBra,QAKnFka,EAAc3a,UAAUmb,sBAAwB,SAAUW,EAAYC,EAAUC,EAAUC,GACtF,IAAI/Z,EAAQ/C,KACR+c,EAAerG,GAAkBkG,GAErCD,EAAWvV,SAASgB,QAAQ,SAAU0B,GAClC/G,EAAMia,iBAAiBlT,EAAGiT,EAAajT,EAAEhI,MAAMoF,QAAS2V,EAAUC,EAAWva,QAAQuH,EAAEhI,gBAChFib,EAAajT,EAAEhI,MAAMoF,UAGhCkB,EAAQ2U,EAAc,SAAU9X,EAAG2F,GAC/B,OAAO7H,EAAMka,8BAA8BhY,EAAG4X,EAASK,WAAWtS,OAO1E4Q,EAAc3a,UAAUmc,iBAAmB,SAAUL,EAAYC,EAAUd,EAAgBgB,GACvF,IAAIrB,EAASkB,EAAW7a,MACpBsW,EAAOwE,EAAWA,EAAS9a,MAAQ,KACnCqb,EAAUrB,EAAiBA,EAAeoB,WAAWP,EAAW7a,MAAMoF,QAAU,KAEpF,GAAIkR,GAAQqD,EAAOtX,cAAgBiU,EAAKjU,YAAa,CACjD,IAAIiZ,EAA8Bpd,KAAKod,4BAA4BhF,EAAMqD,EAAQA,EAAOtX,YAAYkZ,uBAChGD,EACApd,KAAK2b,kBAAkBvZ,KAAK,IAAIkZ,GAAYwB,KAI5CrB,EAAOhE,KAAOW,EAAKX,KACnBgE,EAAOpD,cAAgBD,EAAKC,eAI5BrY,KAAKgc,sBAAsBW,EAAYC,EADvCnB,EAAOxU,UAC0CkW,EAAUA,EAAQ/V,SAAW,KAI7B0U,EAJmCgB,GAMpFM,GAEApd,KAAK4b,oBAAoBxZ,KAAK,IAAImZ,GADrB4B,EAAQjW,OACkCD,UAAWmR,SAIlEA,GACApY,KAAKid,8BAA8BL,EAAUO,GAEjDnd,KAAK2b,kBAAkBvZ,KAAK,IAAIkZ,GAAYwB,IAGxC9c,KAAKgc,sBAAsBW,EAAY,KADvClB,EAAOxU,UACsCkW,EAAUA,EAAQ/V,SAAW,KAI7B0U,EAJmCgB,IAQ5FtB,EAAc3a,UAAUuc,4BAA8B,SAAUhF,EAAMqD,EAAQ6B,GAC1E,OAAQA,GACJ,IAAK,SACD,OAAO,EACX,IAAK,4BACD,OAAQtE,GAA0BZ,EAAMqD,KACnC9T,EAAayQ,EAAK1O,YAAa+R,EAAO/R,aAC/C,IAAK,eACL,QACI,OAAQsP,GAA0BZ,EAAMqD,KAGpDD,EAAc3a,UAAUoc,8BAAgC,SAAUnZ,EAAOqZ,GACrE,IAAIpa,EAAQ/C,KACRoH,EAAWsP,GAAkB5S,GAC7B7B,EAAI6B,EAAMhC,MACdsG,EAAQhB,EAAU,SAAUgP,EAAMmH,GAK1Bxa,EAAMka,8BAA8B7G,EAJnCnU,EAAEgF,UAGEkW,EACqCA,EAAQ/V,SAAS8V,WAAWK,GAG5B,KANAJ,KAa9Cnd,KAAK4b,oBAAoBxZ,KAAK,IAAImZ,GAJjCtZ,EAAEgF,WAGEkW,GAAWA,EAAQjW,QAAUiW,EAAQjW,OAAOsW,YACDL,EAAQjW,OAAOD,UAHf,KAG0BhF,KAMlFuZ,EAAc3a,UAAUub,uBAAyB,WAC7C,IAAIrZ,EAAQ/C,KACZ,OAAOH,EAAKoJ,KAAKjJ,KAAK4b,qBACjBlT,KAAK5I,EAAU4R,SAAS,SAAU+K,GAAS,OAAO1Z,EAAM0a,iBAAiBhB,EAAMxV,UAAWwV,EAAM3Y,SAAYhE,EAAU8I,MAAM,SAAUC,GAAU,OAAkB,IAAXA,MAEhK2S,EAAc3a,UAAUyb,qBAAuB,WAC3C,IAAIvZ,EAAQ/C,KACZ,OAAOH,EAAKoJ,KAAKjJ,KAAK2b,mBACjBjT,KAAK5I,EAAU0c,UAAU,SAAUC,GAAS,OAAOjU,EAAe3I,EAAKoJ,MACxElG,EAAM2a,yBAAyBjB,EAAM3Y,MAAM6G,QAC3C5H,EAAM4a,oBAAoBlB,EAAM3Y,OAAQf,EAAM6a,oBAAoBnB,EAAM1Y,MACxEhB,EAAM8a,eAAepB,EAAM3Y,YACtBhE,EAAU8I,MAAM,SAAUC,GAAU,OAAkB,IAAXA,MAWxD2S,EAAc3a,UAAU8c,oBAAsB,SAAUzZ,GAIpD,OAHiB,OAAbA,GAAqBlE,KAAK0b,cAC1B1b,KAAK0b,aAAa,IAAIrX,EAAgBH,IAEnCrE,EAAKuJ,IAAG,IAUnBoS,EAAc3a,UAAU6c,yBAA2B,SAAUxZ,GAIzD,OAHiB,OAAbA,GAAqBlE,KAAK0b,cAC1B1b,KAAK0b,aAAa,IAAIzX,EAAqBC,IAExCrE,EAAKuJ,IAAG,IAEnBoS,EAAc3a,UAAUgd,eAAiB,SAAUpC,GAC/C,IAAI1Y,EAAQ/C,KACR8d,EAAcrC,EAAOtX,YAAcsX,EAAOtX,YAAY2Z,YAAc,KACxE,OAAKA,GAAsC,IAAvBA,EAAYxc,OAazBkH,EAXG3I,EAAKoJ,KAAK6U,GAAapV,KAAK5I,EAAU4H,IAAI,SAAUoC,GAC1D,IAAImK,EAAQlR,EAAMgb,SAASjU,EAAG2R,GAQ9B,OALiB3S,EADbmL,EAAM6J,YAC0B7J,EAAM6J,YAAYrC,EAAQ1Y,EAAM0Y,QAGhCxH,EAAMwH,EAAQ1Y,EAAM0Y,SAEtC/S,KAAK5I,EAAUgR,aAV1BjR,EAAKuJ,IAAG,IAcvBoS,EAAc3a,UAAU+c,oBAAsB,SAAU7Z,GACpD,IAAIhB,EAAQ/C,KACRyb,EAAS1X,EAAKA,EAAKzC,OAAS,GAC5B0c,EAAyBja,EAAKwC,MAAM,EAAGxC,EAAKzC,OAAS,GACpD2c,UACAvW,IAAI,SAAUlH,GAAK,OAAOuC,EAAMmb,wBAAwB1d,KACxD0V,OAAO,SAAUnF,GAAK,OAAa,OAANA,IAClC,OAAOvI,EAAe3I,EAAKoJ,KAAK+U,GAAwBtV,KAAK5I,EAAU4H,IAAI,SAAUpH,GAYjF,OAAOkI,EAXG3I,EAAKoJ,KAAK3I,EAAE6d,QAAQzV,KAAK5I,EAAU4H,IAAI,SAAUoC,GACvD,IAAImK,EAAQlR,EAAMgb,SAASjU,EAAGxJ,EAAE8V,MAQhC,OALiBtN,EADbmL,EAAMmK,iBAC0BnK,EAAMmK,iBAAiB3C,EAAQ1Y,EAAM0Y,QAGrCxH,EAAMwH,EAAQ1Y,EAAM0Y,SAEtC/S,KAAK5I,EAAUgR,kBAK7C0K,EAAc3a,UAAUqd,wBAA0B,SAAU1d,GACxD,IAAI4d,EAAmB5d,EAAE2D,YAAc3D,EAAE2D,YAAYia,iBAAmB,KACxE,OAAKA,GAAgD,IAA5BA,EAAiB9c,QAEjC8U,KAAM5V,EAAG2d,OAAQC,GADf,MAGf5C,EAAc3a,UAAU4c,iBAAmB,SAAUxW,EAAWmR,GAC5D,IAAIrV,EAAQ/C,KACRqc,EAAgBjE,GAAQA,EAAKjU,YAAciU,EAAKjU,YAAYkY,cAAgB,KAChF,OAAKA,GAA0C,IAAzBA,EAAc/a,OAEfzB,EAAKoJ,KAAKoT,GAAe3T,KAAK5I,EAAU4R,SAAS,SAAU5H,GAC5E,IAAImK,EAAQlR,EAAMgb,SAASjU,EAAGsO,GAS9B,OALQtP,EAFJmL,EAAMoI,cAEiBpI,EAAMoI,cAAcpV,EAAWmR,EAAMrV,EAAMqV,KAAMrV,EAAM0Y,QAG9CxH,EAAMhN,EAAWmR,EAAMrV,EAAMqV,KAAMrV,EAAM0Y,SAE3D/S,KAAK5I,EAAUgR,YAEfpI,KAAK5I,EAAU8I,MAAM,SAAUC,GAAU,OAAkB,IAAXA,KAb3DhJ,EAAKuJ,IAAG,IAevBoS,EAAc3a,UAAU6b,WAAa,SAAUjB,EAAQ1D,GAEnD,OAAO/X,KAAKqe,YADE5C,EAAO/C,SACY+C,GAAQ/S,KAAK5I,EAAU4H,IAAI,SAAU4W,GAGlE,OAFA7C,EAAOpD,cAAgBiG,EACvB7C,EAAOhE,KAAO1W,KAAa0a,EAAOhE,KAAMK,GAA2B2D,EAAQ1D,GAA2B5O,SAC/F,SAGfqS,EAAc3a,UAAUwd,YAAc,SAAUlV,EAASsS,GACrD,IAAI1Y,EAAQ/C,KACRqF,EAAOnF,OAAOmF,KAAK8D,GACvB,GAAoB,IAAhB9D,EAAK/D,OACL,OAAOzB,EAAKuJ,OAEhB,GAAoB,IAAhB/D,EAAK/D,OAAc,CACnB,IAAIid,EAAQlZ,EAAK,GACjB,OAAOrF,KAAKwe,YAAYrV,EAAQoV,GAAQ9C,GAAQ/S,KAAK5I,EAAU4H,IAAI,SAAU5F,GACzE,OAAOqO,MAAYoO,GAASzc,EAAOqO,EACnC,IAAIA,KAGZ,IAAIsH,KAOJ,OANwB5X,EAAKoJ,KAAK5D,GAAMqD,KAAK5I,EAAU4R,SAAS,SAAU7J,GACtE,OAAO9E,EAAMyb,YAAYrV,EAAQtB,GAAM4T,GAAQ/S,KAAK5I,EAAU4H,IAAI,SAAU5F,GAExE,OADA2V,EAAK5P,GAAO/F,EACLA,QAGU4G,KAAK5I,EAAU8Q,OAAQ9Q,EAAU4H,IAAI,WAAc,OAAO+P,MAEvF+D,EAAc3a,UAAU2d,YAAc,SAAUxK,EAAgByH,GAC5D,IAAIgD,EAAWze,KAAK+d,SAAS/J,EAAgByH,GAC7C,OAA0B3S,EAAnB2V,EAAStV,QAA6BsV,EAAStV,QAAQsS,EAAQzb,KAAKyb,QACpDgD,EAAShD,EAAQzb,KAAKyb,UAEjDD,EAAc3a,UAAUkd,SAAW,SAAUW,EAAOxa,GAChD,IAAIyC,EAMZ,SAASgY,EAAoBza,GACzB,IAAKA,EACD,OAAO,KACX,IAAK,IAAIhD,EAAIgD,EAASyG,OAAQzJ,EAAGA,EAAIA,EAAEyJ,OAAQ,CAC3C,IAAI7G,EAAQ5C,EAAEiD,YACd,GAAIL,GAASA,EAAMuO,cACf,OAAOvO,EAAMuO,cAErB,OAAO;;;;;;;GAdUsM,CAAoBza,GAEjC,OADeyC,EAASA,EAAOtH,OAAO8S,SAAWnS,KAAKuP,gBACtCvK,IAAI0Z,IAEjBlD,EAxRuB,GA4S9BoD,GACA,SAAS/P,OASTgQ,GAA4B,WAC5B,SAASA,EAAWC,EAAmBnY,EAAQoI,EAASnM,EAAKmV,GACzD/X,KAAK8e,kBAAoBA,EACzB9e,KAAK2G,OAASA,EACd3G,KAAK+O,QAAUA,EACf/O,KAAK4C,IAAMA,EACX5C,KAAK+X,0BAA4BA,EAgGrC,OA9FA8G,EAAWhe,UAAUke,UAAY,WAC7B,IACI,IAAIjP,EAAmBkP,GAAQhf,KAAK+O,QAAQhF,WAAc/J,KAAK2G,QAAQhB,aACnEyB,EAAWpH,KAAKif,oBAAoBjf,KAAK2G,OAAQmJ,EAAkBnL,GACnEoF,EAAO,IAAIkN,MAA2B/W,OAAOgf,WAAYhf,OAAOgf,OAAOne,KAAaf,KAAK+O,QAAQrF,cAAe1J,KAAK+O,QAAQzE,YAAc3F,EAAgB3E,KAAK8e,kBAAmB,KAAM9e,KAAK+O,QAAQhF,MAAO,MAC7MoV,EAAW,IAAI1I,GAAS1M,EAAM3C,GAC9BgY,EAAa,IAAIlI,GAAoBlX,KAAK4C,IAAKuc,GAEnD,OADAnf,KAAKqf,qBAAqBD,EAAWxJ,OAC9B/V,EAAKuJ,GAAGgW,GAEnB,MAAOld,GACH,OAAO,IAAIrC,EAAKoP,WAAW,SAAUC,GAAO,OAAOA,EAAI7M,MAAMH,OAGrE2c,EAAWhe,UAAUwe,qBAAuB,SAAUC,GAClD,IAAIvc,EAAQ/C,KACR8D,EAAQwb,EAAUxd,MAClBX,EAAI2W,GAA2BhU,EAAO9D,KAAK+X,2BAC/CjU,EAAMe,OAAS3E,OAAOgf,OAAO/d,EAAE0D,QAC/Bf,EAAM2T,KAAOvX,OAAOgf,OAAO/d,EAAEsW,MAC7B6H,EAAUlY,SAASgB,QAAQ,SAAUhH,GAAK,OAAO2B,EAAMsc,qBAAqBje,MAEhFyd,EAAWhe,UAAUoe,oBAAsB,SAAUtY,EAAQhB,EAAcuB,GACvE,OAAqC,IAAjCvB,EAAaD,SAASpE,QAAgBqE,EAAaI,cAC5C/F,KAAKoa,gBAAgBzT,EAAQhB,GAEjC3F,KAAKuf,eAAe5Y,EAAQhB,EAAcA,EAAaD,SAAUwB,IAE5E2X,EAAWhe,UAAUuZ,gBAAkB,SAAUzT,EAAQhB,GACrD,IAAI5C,EAAQ/C,KACRoH,EAAWgE,EAAqBzF,EAAc,SAAU4F,EAAOC,GAAe,OAAOzI,EAAMkc,oBAAoBtY,EAAQ4E,EAAOC,KAGlI,OAkGR,SAASgU,EAA0BC,GAC/B,IAAIC,KACJD,EAAMrX,QAAQ,SAAUhH,GACpB,IAAIue,EAA0BD,EAAMte,EAAEU,MAAMoF,QAC5C,GAAIyY,EAAyB,CACzB,IAAInf,EAAImf,EAAwB/c,IAAI8E,IAAI,SAAUxG,GAAK,OAAOA,EAAE8B,aAAeoJ,KAAK,KAChFtC,EAAI1I,EAAEU,MAAMc,IAAI8E,IAAI,SAAUxG,GAAK,OAAOA,EAAE8B,aAAeoJ,KAAK,KACpE,MAAM,IAAIpF,MAAM,mDAAqDxG,EAAI,UAAYsJ,EAAI,MAE7F4V,EAAMte,EAAEU,MAAMoF,QAAU9F,EAAEU,QA7G1B0d,CAA0BpY,GAiElC,SAASwY,EAA4BH,GACjCA,EAAMI,KAAK,SAAUjY,EAAGrH,GACpB,OAAIqH,EAAE9F,MAAMoF,SAAWvC,GACX,EACRpE,EAAEuB,MAAMoF,SAAWvC,EACZ,EACJiD,EAAE9F,MAAMoF,OAAO4Y,cAAcvf,EAAEuB,MAAMoF,UAtE5C0Y,CAA4BxY,GACrBA,GAEXyX,EAAWhe,UAAU0e,eAAiB,SAAU5Y,EAAQhB,EAAcD,EAAUwB,GAC5E,IACI,IAAK,IAAI6Y,EAAWve,EAASmF,GAASqZ,EAAaD,EAASle,QAASme,EAAWje,KAAMie,EAAaD,EAASle,OAAQ,CAChH,IAAII,EAAI+d,EAAWle,MACnB,IACI,OAAO9B,KAAKigB,2BAA2Bhe,EAAG0D,EAAcD,EAAUwB,GAEtE,MAAOhF,GACH,KAAMA,aAAa0c,IACf,MAAM1c,IAItB,MAAOwT,GAASL,GAAQhT,MAAOqT,GAC/B,QACI,IACQsK,IAAeA,EAAWje,OAASoO,EAAK4P,EAASzM,SAASnD,EAAG5O,KAAKwe,GAE1E,QAAU,GAAI1K,EAAK,MAAMA,EAAIhT,OAEjC,GAAIrC,KAAKiR,iBAAiBtL,EAAcD,EAAUwB,GAC9C,SAEJ,MAAM,IAAI0X,GACV,IAAIvJ,EAAKlF,GAEb0O,EAAWhe,UAAUoQ,iBAAmB,SAAUtL,EAAcD,EAAUwB,GACtE,OAA2B,IAApBxB,EAASpE,SAAiBqE,EAAayB,SAASF,IAE3D2X,EAAWhe,UAAUof,2BAA6B,SAAUnc,EAAOoc,EAAYxa,EAAUwB,GACrF,GAAIpD,EAAMqD,WACN,MAAM,IAAIyX,GACd,IAAK9a,EAAMoD,QAAUvC,KAAoBuC,EACrC,MAAM,IAAI0X,GACd,IAAI1a,EACA2N,KACAS,KACJ,GAAmB,OAAfxO,EAAMC,KAAe,CACrB,IAAIc,EAASa,EAASpE,OAAS,EAAI6G,EAAOzC,GAAUqF,cACpD7G,EAAW,IAAI+S,GAAuBvR,EAAUb,EAAQ3E,OAAOgf,OAAOne,KAAaf,KAAK+O,QAAQrF,cAAe1J,KAAK+O,QAAQzE,SAAU6V,GAAQrc,GAAQoD,EAAQpD,EAAMmD,UAAWnD,EAAOsc,GAAsBF,GAAaG,GAAkBH,GAAcxa,EAASpE,OAAQgf,GAAWxc,QAEpR,CACD,IAAI+E,EAqChB,SAAS0X,EAAQ5a,EAAc7B,EAAO4B,GAClC,GAAmB,KAAf5B,EAAMC,KAAa,CACnB,GAAwB,SAApBD,EAAMgC,YAAyBH,EAAaI,eAAiBL,EAASpE,OAAS,GAC/E,MAAM,IAAIsd,GAEd,OAAS/M,oBAAsBC,UAAW,EAAG/G,eAEjD,IACIO,GADUxH,EAAMwD,SAAW7B,GACbC,EAAUC,EAAc7B,GAC1C,IAAKwH,EACD,MAAM,IAAIsT,GACd,IAAI5Y,KACJoC,EAAQkD,EAAItF,UAAW,SAAUf,EAAG2F,GAAK5E,EAAU4E,GAAK3F,EAAElB,OAC1D,IAAIgH,EAAaO,EAAIhF,SAAShF,OAAS,EAAIP,KAAaiF,EAAWsF,EAAIhF,SAASgF,EAAIhF,SAAShF,OAAS,GAAGyJ,YACrG/E,EACJ,OAAS6L,iBAAkBvG,EAAIhF,SAAUwL,UAAWxG,EAAIhF,SAAShF,OAAQyJ,WAAYA,GApDhEwV,CAAQL,EAAYpc,EAAO4B,GACxCmM,EAAmBhJ,EAAOgJ,iBAC1BS,EAAoB5M,EAASa,MAAMsC,EAAOiJ,WAC1C5N,EAAW,IAAI+S,GAAuBpF,EAAkBhJ,EAAOkC,WAAY7K,OAAOgf,OAAOne,KAAaf,KAAK+O,QAAQrF,cAAe1J,KAAK+O,QAAQzE,SAAU6V,GAAQrc,GAAQoD,EAAQpD,EAAMmD,UAAWnD,EAAOsc,GAAsBF,GAAaG,GAAkBH,GAAcrO,EAAiBvQ,OAAQgf,GAAWxc,IAEpT,IAAI4O,EAuBZ,SAASH,EAAezO,GACpB,OAAIA,EAAMsD,SACCtD,EAAMsD,SAEbtD,EAAMuD,aACCvD,EAAMuO,cAAc5L,UA5BT8L,CAAezO,GAC7BqM,EAAK6O,GAAQkB,EAAYrO,EAAkBS,EAAmBI,GAAc/M,EAAewK,EAAGxK,aAAcgN,EAAiBxC,EAAGwC,eACpI,GAA8B,IAA1BA,EAAerR,QAAgBqE,EAAaI,cAAe,CAC3D,IAAIoG,EAAanM,KAAKoa,gBAAgB1H,EAAa/M,GACnD,OAAQ,IAAI8Q,GAASvS,EAAUiI,IAEnC,GAA2B,IAAvBuG,EAAYpR,QAA0C,IAA1BqR,EAAerR,OAC3C,OAAQ,IAAImV,GAASvS,OAEzB,IAAIkD,EAAWpH,KAAKuf,eAAe7M,EAAa/M,EAAcgN,EAAgBhO,GAC9E,OAAQ,IAAI8R,GAASvS,EAAUkD,KAE5ByX,EAtGoB,GAuJ/B,SAASuB,GAAsBza,GAE3B,IADA,IAAIzE,EAAIyE,EACDzE,EAAEsf,gBACLtf,EAAIA,EAAEsf,eAEV,OAAOtf,EAEX,SAASmf,GAAkB1a,GAGvB,IAFA,IAAIzE,EAAIyE,EACJ2F,EAAOpK,EAAEuf,mBAAqBvf,EAAEuf,mBAAqB,EAClDvf,EAAEsf,gBAELlV,IADApK,EAAIA,EAAEsf,gBACIC,mBAAqBvf,EAAEuf,mBAAqB,EAE1D,OAAOnV,EAAM,EAEjB,SAAS0T,GAAQrZ,EAAckM,EAAkBc,EAAgBhM,GAC7D,GAAIgM,EAAerR,OAAS,GAoEhC,SAASof,EAAyC/a,EAAcgN,EAAgBlM,GAC5E,OAAOA,EAAOoM,KAAK,SAAU5Q,GAAK,OAAO0e,GAAehb,EAAcgN,EAAgB1Q,IAAM2e,GAAY3e,KAAO0C,IApE3G+b,CAAyC/a,EAAcgN,EAAgBhM,GAAS,CAChF,IAAIka,EAAM,IAAInW,EAAgBmH,EAwCtC,SAASiP,EAA4Bnb,EAAckM,EAAkBpL,EAAQsa,GACzE,IAuBI7N,EAAK/C,EAvBL7E,KACJA,EAAI3G,GAAkBoc,EACtBA,EAAeP,eAAiB7a,EAChCob,EAAeN,mBAAqB5O,EAAiBvQ,OACrD,IACI,IAAK,IAAI6R,EAAW3R,EAASiF,GAAS2M,EAAaD,EAAStR,QAASuR,EAAWrR,KAAMqR,EAAaD,EAAStR,OAAQ,CAChH,IAAII,EAAImR,EAAWtR,MACnB,GAAe,KAAXG,EAAE8B,MAAe6c,GAAY3e,KAAO0C,EAAgB,CACpD,IAAIzD,EAAI,IAAIwJ,SACZxJ,EAAEsf,eAAiB7a,EACnBzE,EAAEuf,mBAAqB5O,EAAiBvQ,OACxCgK,EAAIsV,GAAY3e,IAAMf,IAIlC,MAAOmS,GAASH,GAAQ7Q,MAAOgR,GAC/B,QACI,IACQD,IAAeA,EAAWrR,OAASoO,EAAKgD,EAASG,SAASnD,EAAG5O,KAAK4R,GAE1E,QAAU,GAAID,EAAK,MAAMA,EAAI7Q,OAEjC,OAAOiJ,EA/D6CwV,CAA4Bnb,EAAckM,EAAkBlL,EAAQ,IAAI+D,EAAgBiI,EAAgBhN,EAAayB,YAGrK,OAFAyZ,EAAIL,eAAiB7a,EACrBkb,EAAIJ,mBAAqB5O,EAAiBvQ,QACjCqE,aAAckb,EAAKlO,mBAEhC,GAA8B,IAA1BA,EAAerR,QAgEvB,SAAS0f,EAAyBrb,EAAcgN,EAAgBlM,GAC5D,OAAOA,EAAOoM,KAAK,SAAU5Q,GAAK,OAAO0e,GAAehb,EAAcgN,EAAgB1Q,KAhElF+e,CAAyBrb,EAAcgN,EAAgBhM,GAAS,CAChE,IAAIsa,EAAM,IAAIvW,EAAgB/E,EAAaD,SAUnD,SAASwb,EAAgCvb,EAAcgN,EAAgBlM,EAAQW,GAC3E,IAoBIqM,EAAKtD,EApBL7E,KACJ,IACI,IAAK,IAAIoI,EAAWlS,EAASiF,GAASkN,EAAaD,EAAS7R,QAAS8R,EAAW5R,KAAM4R,EAAaD,EAAS7R,OAAQ,CAChH,IAAII,EAAI0R,EAAW7R,MACnB,GAAI6e,GAAehb,EAAcgN,EAAgB1Q,KAAOmF,EAASwZ,GAAY3e,IAAK,CAC9E,IAAIf,EAAI,IAAIwJ,SACZxJ,EAAEsf,eAAiB7a,EACnBzE,EAAEuf,mBAAqB9a,EAAaD,SAASpE,OAC7CgK,EAAIsV,GAAY3e,IAAMf,IAIlC,MAAO0S,GAASH,GAAQpR,MAAOuR,GAC/B,QACI,IACQD,IAAeA,EAAW5R,OAASoO,EAAKuD,EAASJ,SAASnD,EAAG5O,KAAKmS,GAE1E,QAAU,GAAID,EAAK,MAAMA,EAAIpR,OAEjC,OAAOtB,KAAaqG,EAAUkE,GA9B2B4V,CAAgCvb,EAAcgN,EAAgBhM,EAAQhB,EAAayB,WAGxI,OAFA6Z,EAAIT,eAAiB7a,EACrBsb,EAAIR,mBAAqB5O,EAAiBvQ,QACjCqE,aAAcsb,EAAKtO,eAAgBA,GAEhD,IAAIzR,EAAI,IAAIwJ,EAAgB/E,EAAaD,SAAUC,EAAayB,UAGhE,OAFAlG,EAAEsf,eAAiB7a,EACnBzE,EAAEuf,mBAAqB5O,EAAiBvQ,QAC/BqE,aAAczE,EAAGyR,eAAgBA,GAyD9C,SAASgO,GAAehb,EAAcgN,EAAgB1Q,GAClD,SAAK0D,EAAaI,eAAiB4M,EAAerR,OAAS,IAAsB,SAAhBW,EAAE6D,YAGjD,KAAX7D,EAAE8B,WAAgC2K,IAAjBzM,EAAEkF,WAE9B,SAASyZ,GAAY9c,GACjB,OAAOA,EAAMoD,QAAUvC,EAE3B,SAASwb,GAAQrc,GACb,OAAOA,EAAM2T,SAEjB,SAAS6I,GAAWxc,GAChB,OAAOA,EAAMqF;;;;;;;GAiBjB,IAAIgY,GACA,SAASA,OAOTC,GAA2C,WAC3C,SAASA,KAST,OAPAA,EAA0BvgB,UAAUwgB,aAAe,SAAUvd,GAAS,OAAO,GAC7Esd,EAA0BvgB,UAAUygB,MAAQ,SAAUxd,EAAOyd,KAC7DH,EAA0BvgB,UAAU2gB,aAAe,SAAU1d,GAAS,OAAO,GAC7Esd,EAA0BvgB,UAAU4gB,SAAW,SAAU3d,GAAS,OAAO,MACzEsd,EAA0BvgB,UAAU6gB,iBAAmB,SAAUjG,EAAQrD,GACrE,OAAOqD,EAAOtX,cAAgBiU,EAAKjU,aAEhCid,EAVmC,GAyB1CO,GAAS,IAAI/hB,EAAKgiB,eAAe,UACjCC,GAAoC,WACpC,SAASA,EAAmBC,EAAQC,EAAUC,EAAqBC,GAC/DjiB,KAAK8hB,OAASA,EACd9hB,KAAK+hB,SAAWA,EAChB/hB,KAAKgiB,oBAAsBA,EAC3BhiB,KAAKiiB,kBAAoBA,EAgC7B,OA9BAJ,EAAmBhhB,UAAUqR,KAAO,SAAUgQ,EAAgBpe,GAC1D,IAAIf,EAAQ/C,KAKZ,OAJIA,KAAKgiB,qBACLhiB,KAAKgiB,oBAAoBle,GAER9D,KAAKmiB,kBAAkBre,EAAMuD,cAC5BqB,KAAK5I,EAAU4H,IAAI,SAAUvI,GAC3C4D,EAAMkf,mBACNlf,EAAMkf,kBAAkBne,GAE5B,IAAIzE,EAASF,EAAQ2B,OAAOohB,GAC5B,OAAO,IAAI1b,EAAmBwB,EAAQ3I,EAAO8S,SAASnN,IAAI2c,KAASja,IAAID,GAAapI,OAG5FwiB,EAAmBhhB,UAAUshB,kBAAoB,SAAU9a,GACvD,IAAItE,EAAQ/C,KACZ,MAA4B,iBAAjBqH,EACAxH,EAAKoJ,KAAKjJ,KAAK8hB,OAAO5P,KAAK7K,IAG3ByB,EAAmBzB,KAAgBqB,KAAK5I,EAAU4R,SAAS,SAAUzQ,GACxE,OAAIA,aAAarB,EAAKwiB,gBACXviB,EAAKuJ,GAAGnI,GAGRpB,EAAKoJ,KAAKlG,EAAMgf,SAASM,mBAAmBphB,QAK5D4gB,EArC4B,GAsDnCS,GACA,SAASA,OAOTC,GAA4C,WAC5C,SAASA,KAKT,OAHAA,EAA2B1hB,UAAU2hB,iBAAmB,SAAU5f,GAAO,OAAO,GAChF2f,EAA2B1hB,UAAU4hB,QAAU,SAAU7f,GAAO,OAAOA,GACvE2f,EAA2B1hB,UAAU6hB,MAAQ,SAAUC,EAAYC,GAAY,OAAOD,GAC/EJ,EANoC;;;;;;;;AAgB/C,SAASM,GAAoBxgB,GACzB,MAAMA,EAKV,SAASygB,GAAkB5e,EAAU6e,GACjC,OAAOljB,EAAKuJ,GAAG,MAanB,IAAI4Z,GAAwB,WAKxB,SAASA,EAAOlE,EAAmBrP,EAAewT,EAAcC,EAAU/Q,EAAU2P,EAAQC,EAAUpb,GAClG,IAAI5D,EAAQ/C,KACZA,KAAK8e,kBAAoBA,EACzB9e,KAAKyP,cAAgBA,EACrBzP,KAAKijB,aAAeA,EACpBjjB,KAAKkjB,SAAWA,EAChBljB,KAAK2G,OAASA,EACd3G,KAAKmjB,YAAc,IAAItjB,EAAKuX,gBAAgB,MAC5CpX,KAAKojB,aAAe,EACpBpjB,KAAKqjB,OAAS,IAAIxjB,EAAKyjB,QAMvBtjB,KAAKujB,aAAeV,GAIpB7iB,KAAKwjB,WAAY,EACjBxjB,KAAKyjB,kBAAoB,EAMzBzjB,KAAK0jB,OACDC,oBAAqBb,GACrBc,mBAAoBd,IAKxB9iB,KAAK6jB,oBAAsB,IAAItB,GAC/BviB,KAAK8jB,mBAAqB,IAAI1C,GAO9BphB,KAAK+jB,oBAAsB,SAS3B/jB,KAAK+X,0BAA4B,YAGjC/X,KAAK2P,SAAWwC,EAASnN,IAAIpF,EAAKgQ,aAClC5P,KAAKgkB,YAAYrd,GACjB3G,KAAKikB,eA1kFb,SAASC,IACL,OAAO,IAAI7Z,EAAQ,IAAIK,YAA6B,MAykF1BwZ,GACtBlkB,KAAKmkB,WAAankB,KAAKikB,eACvBjkB,KAAKwP,aAAe,IAAIqS,GAAmBC,EAAQC,EANjC,SAAU9f,GAAK,OAAOc,EAAMqhB,aAAa,IAAIvgB,EAAqB5B,KACpE,SAAUA,GAAK,OAAOc,EAAMqhB,aAAa,IAAIpgB,EAAmB/B,MAMhFjC,KAAKqkB,YAAcxN,GAAiB7W,KAAKikB,eAAgBjkB,KAAK8e,mBAC9D9e,KAAKskB,qBA2dT,OArdAtB,EAAOniB,UAAU0jB,uBAAyB,SAAUzF,GAChD9e,KAAK8e,kBAAoBA,EAGzB9e,KAAKqkB,YAAYta,KAAK9C,UAAYjH,KAAK8e,mBAK3CkE,EAAOniB,UAAU2jB,kBAAoB,WACjCxkB,KAAKykB,8BACqB,IAAtBzkB,KAAKojB,cACLpjB,KAAK0kB,cAAc1kB,KAAKkjB,SAASnf,MAAK,IAAS4gB,YAAY,KAMnE3B,EAAOniB,UAAU4jB,4BAA8B,WAC3C,IAAI1hB,EAAQ/C,KAIPA,KAAK4kB,uBACN5kB,KAAK4kB,qBAAuB5kB,KAAKkjB,SAAS2B,UAAU,SAAUC,GAC1D,IAAIX,EAAaphB,EAAM0M,cAAc9D,MAAMmZ,EAAY,KACnDC,EAA4B,aAAnBD,EAAa,KAAmB,WAAa,aACtDvhB,EAAQuhB,EAAOvhB,OAASuhB,EAAOvhB,MAAM6f,cACnCA,aAAc0B,EAAOvhB,MAAM6f,cAC7B,KACJ4B,WAAW,WAAcjiB,EAAMkiB,mBAAmBd,EAAYY,EAAQxhB,GAASohB,YAAY,KAAY,OAInHzkB,OAAOkF,eAAe4d,EAAOniB,UAAW,OAEpCmE,IAAK,WAAc,OAAOhF,KAAKklB,aAAallB,KAAKikB,iBACjD3e,YAAY,EACZC,cAAc,IAGlByd,EAAOniB,UAAUujB,aAAe,SAAUliB,GAAKlC,KAAKqjB,OAAOxhB,KAAKK,IAehE8gB,EAAOniB,UAAUmjB,YAAc,SAAUrd,GACrCD,EAAeC,GACf3G,KAAK2G,OAASA,EAAOe,IAAID,GACzBzH,KAAKwjB,WAAY,EACjBxjB,KAAKyjB,kBAAoB,GAG7BT,EAAOniB,UAAUskB,YAAc,WAAcnlB,KAAKolB,WAElDpC,EAAOniB,UAAUukB,QAAU,WACnBplB,KAAK4kB,uBACL5kB,KAAK4kB,qBAAqBS,cAC1BrlB,KAAK4kB,qBAAuB,OA4CpC5B,EAAOniB,UAAUkP,cAAgB,SAAUgK,EAAUuL,QACxB,IAArBA,IAA+BA,MACnC,IAAIC,EAAaD,EAAiBC,WAAY7b,EAAc4b,EAAiB5b,YAAaY,EAAWgb,EAAiBhb,SAAUkb,EAAsBF,EAAiBE,oBAAqBC,EAAsBH,EAAiBG,oBAAqBC,EAAmBJ,EAAiBI,iBACxR9lB,EAAK+lB,aAAeH,GAAuBI,SAAWA,QAAQC,MAC9DD,QAAQC,KAAK,uEAEjB,IAAIje,EAAI2d,GAAcvlB,KAAKqkB,YAAYta,KACnC+b,EAAIJ,EAAmB1lB,KAAKikB,eAAe3Z,SAAWA,EACtDyb,EAAI,KACR,GAAIN,EACA,OAAQA,GACJ,IAAK,QACDM,EAAIhlB,KAAaf,KAAKikB,eAAeva,YAAaA,GAClD,MACJ,IAAK,WACDqc,EAAI/lB,KAAKikB,eAAeva,YACxB,MACJ,QACIqc,EAAIrc,GAAe,UAI3Bqc,EAAIP,EAAsBxlB,KAAKikB,eAAeva,YAAcA,GAAe,KAK/E,OAHU,OAANqc,IACAA,EAAI/lB,KAAKgmB,iBAAiBD;;;;;;;;AA/rCtC,SAAShW,EAAcjM,EAAOiL,EAASgL,EAAUrQ,EAAaY,GAC1D,GAAwB,IAApByP,EAASzY,OACT,OAAO0K,GAAK+C,EAAQhF,KAAMgF,EAAQhF,KAAMgF,EAASrF,EAAaY,GAElE,IAAI2b,EAwDR,SAASC,EAAkBnM,GACvB,GAA4B,iBAAhBA,EAAS,IAAwC,IAApBA,EAASzY,QAAgC,MAAhByY,EAAS,GACvE,OAAO,IAAIH,IAAW,EAAM,EAAGG,GAEnC,IAAID,EAAqB,EACrBD,GAAa,EACbvO,EAAMyO,EAAS5B,OAAO,SAAU7M,EAAK6a,EAAKC,GAC1C,GAAmB,iBAARD,GAA2B,MAAPA,EAAa,CACxC,GAAIA,EAAI/M,QAAS,CACb,IAAIiN,KAIJ,OAHAje,EAAQ+d,EAAI/M,QAAS,SAAUW,EAAUhV,GACrCshB,EAAUthB,GAA4B,iBAAbgV,EAAwBA,EAASlU,MAAM,KAAOkU,IAEpEzX,EAASgJ,IAAQ8N,QAASiN,KAErC,GAAIF,EAAI9M,YACJ,OAAO/W,EAASgJ,GAAM6a,EAAI9M,cAGlC,MAAqB,iBAAR8M,EACF7jB,EAASgJ,GAAM6a,IAEX,IAAXC,GACAD,EAAItgB,MAAM,KAAKuC,QAAQ,SAAUke,EAASC,GACrB,GAAbA,GAA8B,MAAZD,IAGA,GAAbC,GAA8B,KAAZD,EACvBzM,GAAa,EAEI,OAAZyM,EACLxM,IAEgB,IAAXwM,GACLhb,EAAIlJ,KAAKkkB,MAGVhb,GAEJhJ,EAASgJ,GAAM6a,SAE1B,OAAO,IAAIvM,GAAWC,EAAYC,EAAoBxO,GAjG5C4a,CAAkBnM,GAC5B,GAAIkM,EAAI/L,SACJ,OAAOlO,GAAK+C,EAAQhF,KAAM,IAAIW,SAAyBqE,EAASrF,EAAaY,GAEjF,IAAIkc,EAuGR,SAASC,EAAqBR,EAAKja,EAAMlI,GACrC,GAAImiB,EAAIpM,WACJ,OAAO,IAAIM,GAASnO,EAAKjC,MAAM,EAAM,GAEzC,IAAuC,IAAnCjG,EAAMI,SAASuU,eACf,OAAO,IAAI0B,GAASrW,EAAMI,SAASsU,aAAa,EAAM,GAE1D,IAAIkO,EAAWxN,GAAe+M,EAAIlM,SAAS,IAAM,EAAI,EAErD,OAEJ,SAAS4M,EAAiC/U,EAAO3L,EAAO6T,GAIpD,IAHA,IAAIkB,EAAIpJ,EACJgV,EAAK3gB,EACL4gB,EAAK/M,EACF+M,EAAKD,GAAI,CAGZ,GAFAC,GAAMD,IACN5L,EAAIA,EAAErQ,QAEF,MAAM,IAAI3D,MAAM,2BAEpB4f,EAAK5L,EAAEtV,SAASpE,OAEpB,OAAO,IAAI6Y,GAASa,GAAG,EAAO4L,EAAKC,GAd5BF,CAAiC7iB,EAAMI,SAASsU,YAD3C1U,EAAMI,SAASuU,eAAiBiO,EAC+BT,EAAInM,oBAhHxD2M,CAAqBR,EAAKlX,EAASjL,GACtD6B,EAAe6gB,EAAiBpM,gBAChCI,GAA2BgM,EAAiB7gB,aAAc6gB,EAAiBvgB,MAAOggB,EAAIlM,UACtFO,GAAmBkM,EAAiB7gB,aAAc6gB,EAAiBvgB,MAAOggB,EAAIlM,UAClF,OAAO/N,GAAKwa,EAAiB7gB,aAAcA,EAAcoJ,EAASrF,EAAaY,GAqrCpEyF,CAAcnI,EAAG5H,KAAKikB,eAAgBlK,EAAUgM,EAAGD,IAsB9D9C,EAAOniB,UAAU6jB,cAAgB,SAAU9hB,EAAKkkB,QAC7B,IAAXA,IAAqBA,GAAWC,oBAAoB,IACxD,IAAIhY,EAAUnM,aAAeyH,EAAUzH,EAAM5C,KAAKgnB,SAASpkB,GACvDqkB,EAAajnB,KAAK6jB,oBAAoBnB,MAAM3T,EAAS/O,KAAKmkB,YAC9D,OAAOnkB,KAAKilB,mBAAmBgC,EAAY,aAAc,KAAMH,IAuBnE9D,EAAOniB,UAAUqmB,SAAW,SAAUnN,EAAU+M,GAG5C,YAFe,IAAXA,IAAqBA,GAAWC,oBAAoB,IA6bhE,SAASI,EAAiBpN,GACtB,IAAK,IAAI5Y,EAAI,EAAGA,EAAI4Y,EAASzY,OAAQH,IAAK,CACtC,IAAIglB,EAAMpM,EAAS5Y,GACnB,GAAW,MAAPglB,EACA,MAAM,IAAInf,MAAM,+BAAiCmf,EAAM,qBAAuBhlB;;;;;;;GAhclFgmB,CAAiBpN,GACV/Z,KAAK0kB,cAAc1kB,KAAK+P,cAAcgK,EAAU+M,GAASA,IAGpE9D,EAAOniB,UAAUqkB,aAAe,SAAUtiB,GAAO,OAAO5C,KAAKyP,cAAchF,UAAU7H,IAErFogB,EAAOniB,UAAUmmB,SAAW,SAAUpkB,GAAO,OAAO5C,KAAKyP,cAAc9D,MAAM/I,IAE7EogB,EAAOniB,UAAUumB,SAAW,SAAUxkB,EAAK4G,GACvC,GAAI5G,aAAeyH,EACf,OAAOhB,EAAarJ,KAAKikB,eAAgBrhB,EAAK4G,GAElD,IAAIuF,EAAU/O,KAAKyP,cAAc9D,MAAM/I,GACvC,OAAOyG,EAAarJ,KAAKikB,eAAgBlV,EAASvF,IAEtDwZ,EAAOniB,UAAUmlB,iBAAmB,SAAUnhB,GAC1C,OAAO3E,OAAOmF,KAAKR,GAAQsT,OAAO,SAAUtP,EAAQhB,GAChD,IAAI/F,EAAQ+C,EAAOgD,GAInB,OAHc,OAAV/F,QAA4B4M,IAAV5M,IAClB+G,EAAOhB,GAAO/F,GAEX+G,QAGfma,EAAOniB,UAAUyjB,mBAAqB,WAClC,IAAIvhB,EAAQ/C,KACZA,KAAKmjB,YACAza,KAAK5I,EAAU0c,UAAU,SAAUyJ,GACpC,OAAIA,GACAljB,EAAMskB,2BAA2BpB,GAG1BA,EAAIqB,QAAQC,MAAM,eAGlB1nB,EAAKuJ,GAAG,SAGlByb,UAAU,eAEnB7B,EAAOniB,UAAUokB,mBAAqB,SAAUuC,EAAQzC,EAAQxhB,EAAOujB,GACnE,IAAIW,EAAiBznB,KAAKmjB,YAAYrhB,MAItC,GAAI2lB,GAA6B,eAAX1C,GAAqD,eAA1B0C,EAAe1C,QAC5D0C,EAAeD,OAAOxkB,aAAewkB,EAAOxkB,WAC5C,OAAOkG,QAAQC,SAAQ,GAK3B,GAAIse,GAA4B,cAAV1C,GAAoD,aAA1B0C,EAAe1C,QAC3D0C,EAAeD,OAAOxkB,aAAewkB,EAAOxkB,WAC5C,OAAOkG,QAAQC,SAAQ,GAK3B,GAAIse,GAA4B,YAAV1C,GAAkD,eAA1B0C,EAAe1C,QACzD0C,EAAeD,OAAOxkB,aAAewkB,EAAOxkB,WAC5C,OAAOkG,QAAQC,SAAQ,GAE3B,IAAIA,EAAU,KACVue,EAAS,KACTJ,EAAU,IAAIpe,QAAQ,SAAUoC,EAAKqc,GACrCxe,EAAUmC,EACVoc,EAASC,IAEThlB,IAAO3C,KAAKojB,aAIhB,OAHApjB,KAAKmjB,YAAYthB,MAAOc,GAAIA,EAAIoiB,OAAQA,EAAQxhB,MAAOA,EAAOikB,OAAQA,EAAQV,OAAQA,EAAQ3d,QAASA,EAASue,OAAQA,EAAQJ,QAASA,IAGlIA,EAAQC,MAAM,SAAUrlB,GAAK,OAAOgH,QAAQwe,OAAOxlB,MAE9D8gB,EAAOniB,UAAUwmB,2BAA6B,SAAUlX,GACpD,IAAIpN,EAAQ/C,KACR2C,EAAKwN,EAAGxN,GAAI6kB,EAASrX,EAAGqX,OAAQV,EAAS3W,EAAG2W,OAAQ3d,EAAUgH,EAAGhH,QAASue,EAASvX,EAAGuX,OAAQ3C,EAAS5U,EAAG4U,OAAQxhB,EAAQ4M,EAAG5M,MAC7HX,EAAM5C,KAAK6jB,oBAAoBpB,QAAQ+E,GACvCI,GAAiB5nB,KAAKwjB,WAAa5gB,EAAII,aAAehD,KAAKikB,eAAejhB,YAC5C,WAA7BhD,KAAK+jB,qBAA0C6D,IAChD5nB,KAAK6jB,oBAAoBrB,iBAAiBgF,IAC1CxnB,KAAKqjB,OACAxhB,KAAK,IAAIY,EAAgBE,EAAI3C,KAAKklB,aAAatiB,GAAMmiB,EAAQxhB,IAClE2F,QAAQC,UACH0e,KAAK,SAAU9W,GAAK,OAAOhO,EAAM+kB,YAAYllB,EAAK4kB,IAAUV,EAAOC,qBAAsBD,EAAOnC,WAAYhiB,EAAI,QAChHklB,KAAK1e,EAASue,IAIdE,GAAiB5nB,KAAKmkB,YAC3BnkB,KAAK6jB,oBAAoBrB,iBAAiBxiB,KAAKmkB,aAC/CnkB,KAAKqjB,OACAxhB,KAAK,IAAIY,EAAgBE,EAAI3C,KAAKklB,aAAatiB,GAAMmiB,EAAQxhB,IAClE2F,QAAQC,UACH0e,KAAK,SAAU9W,GAAK,OAAOhO,EAAM+kB,YAAYllB,EAAK4kB,GAAQ,GAAO,EAAO7kB,EAAIkU,GAAiBjU,EAAKG,EAAM+b,mBAAmB5a,YAC3H2jB,KAAK1e,EAASue,KAGnB1nB,KAAKmkB,WAAaqD,EAClBre,EAAQ,QAGhB6Z,EAAOniB,UAAUinB,YAAc,SAAUllB,EAAK4kB,EAAQT,EAAoBpC,EAAYhiB,EAAIolB,GACtF,IAAIhlB,EAAQ/C,KACZ,OAAI2C,IAAO3C,KAAKojB,cACZpjB,KAAKqjB,OACAxhB,KAAK,IAAIsB,EAAiBR,EAAI3C,KAAKklB,aAAatiB,GAAM,iBAAmBD,EAAK,8CAAgD3C,KAAKojB,eACjIla,QAAQC,SAAQ,IAEpB,IAAID,QAAQ,SAAU8e,EAAgBC,GAGzC,IA4BIC,EA+CAC,GA1ECJ,EAaiBloB,EAAKuJ,IAAKgf,WAAYxlB,EAAKsB,SAAU6jB,IAv0EvE,SAASM,EAAe9Y,EAAgBC,EAAcC,EAAeV,EAASpI,GAC1E,OAAO,IAAI2I,GAAeC,EAAgBC,EAAcC,EAAeV,EAASpI,GAAQuB,QA2zEpDmgB,CADHtlB,EAAM4M,SAASwC,SACmBpP,EAAMyM,aAAczM,EAAM0M,cAAe7M,EAAKG,EAAM4D,QACvE+B,KAAK5I,EAAU4R,SAAS,SAAU0W,GAClE,OAnxBpB,SAASrJ,EAAUD,EAAmBnY,EAAQoI,EAASnM,EAAKmV,GAExD,YADkC,IAA9BA,IAAwCA,EAA4B,aACjE,IAAI8G,GAAWC,EAAmBnY,EAAQoI,EAASnM,EAAKmV,GAC1DgH,YAgxBkBA,CAAUhc,EAAM+b,kBAAmB/b,EAAM4D,OAAQyhB,EAAYrlB,EAAMmiB,aAAakD,GAAarlB,EAAMgV,2BACrGrP,KAAK5I,EAAU4H,IAAI,SAAUxD,GAG9B,OAFAnB,EAAMsgB,OACDxhB,KAAK,IAAIyB,EAAiBX,EAAII,EAAMmiB,aAAatiB,GAAMG,EAAMmiB,aAAakD,GAAalkB,KACnFkkB,WAAYA,EAAYlkB,SAAUA,UAORwE,KAAK5I,EAAU4R,SAAS,SAAUlR,GAC7E,MAAiB,kBAANA,EACAX,EAAKuJ,GAAG5I,GACZuC,EAAM2gB,MACRC,oBAAoBnjB,EAAE0D,UACvBkf,aAAczgB,EACd2lB,eAAgB1lB,EAChBuhB,WAAYqD,EAAQT,mBAAoBA,EAAoBpC,WAAYA,IAEvEjc,KAAK5I,EAAU4H,IAAI,WAAc,OAAOlH,QAIEkI,KAAK5I,EAAU4H,IAAI,SAAUlH,GAC5E,GAAiB,kBAANA,EACP,OAAOA,EACX,IAAI4nB,EAAa5nB,EAAE4nB,WAAYlkB,EAAW1D,EAAE0D,SAI5C,OAFAgkB,EAAgB,IAAI1M,GAActX,EAAUnB,EAAMshB,YAAYngB,SADzCnB,EAAM4M,SAASwC,SACoD,SAAUoW,GAAO,OAAOxlB,EAAMqhB,aAAamE,MACrH1M,WAAW9Y,EAAMkgB,eACtBmF,WAAYA,EAAYlkB,SAAUA,MAEKwE,KAAK5I,EAAU4R,SAAS,SAAUlR,GAClF,GAAiB,kBAANA,GAAmBuC,EAAMqgB,eAAiBzgB,EACjD,OAAO9C,EAAKuJ,IAAG,GACnB,IAAIgf,EAAa5nB,EAAE4nB,WAAYlkB,EAAW1D,EAAE0D,SAE5C,OADAnB,EAAMqhB,aAAa,IAAI5gB,EAAiBb,EAAII,EAAMmiB,aAAatiB,GAAMG,EAAMmiB,aAAakD,GAAalkB,IAC9FgkB,EAAcjM,cAAcvT,KAAK5I,EAAU4H,IAAI,SAAUhE,GAE5D,OADAX,EAAMqhB,aAAa,IAAI3gB,EAAed,EAAII,EAAMmiB,aAAatiB,GAAMG,EAAMmiB,aAAakD,GAAalkB,EAAUR,KACpG0kB,WAAYA,EAAYlkB,SAAUA,EAAUR,eAAgBA,SAGnBgF,KAAK5I,EAAU4R,SAAS,SAAUlR,GACxF,MAAiB,kBAANA,GAAmBuC,EAAMqgB,eAAiBzgB,EAC1C9C,EAAKuJ,IAAG,GACf5I,EAAEkD,gBAAkBwkB,EAAc/L,gBAClCpZ,EAAMqhB,aAAa,IAAIzgB,EAAahB,EAAII,EAAMmiB,aAAatiB,GAAMG,EAAMmiB,aAAa1kB,EAAE4nB,YAAa5nB,EAAE0D,WAC9FgkB,EAAc3L,YAAYxZ,EAAMgV,2BAA2BrP,KAAK5I,EAAU4H,IAAI,WAEjF,OADA3E,EAAMqhB,aAAa,IAAIxgB,EAAWjB,EAAII,EAAMmiB,aAAatiB,GAAMG,EAAMmiB,aAAa1kB,EAAE4nB,YAAa5nB,EAAE0D,WAC5F1D,MAIJX,EAAKuJ,GAAG5I,MAG4BkI,KAAK5I,EAAU4R,SAAS,SAAUlR,GACjF,MAAiB,kBAANA,GAAmBuC,EAAMqgB,eAAiBzgB,EAC1C9C,EAAKuJ,IAAG,GACZrG,EAAM2gB,MACRE,mBAAmBpjB,EAAE0D,UACtBkf,aAAczgB,EACd2lB,eAAgB1lB,EAChBuhB,WAAYqD,EAAQT,mBAAoBA,EAAoBpC,WAAYA,IAEvEjc,KAAK5I,EAAU4H,IAAI,WAAc,OAAOlH,QAIXkI,KAAK5I,EAAU4H,IAAI,SAAUlH,GAC/D,GAAiB,kBAANA,GAAmBuC,EAAMqgB,eAAiBzgB,EACjD,OAAO,EACX,IAAIylB,EAAa5nB,EAAE4nB,WAAmC1kB,EAAiBlD,EAAEkD,eACzE,OAAIA,GAES0kB,WAAYA,EAAY7kB,MA7/CrD,SAASilB,EAAkB1E,EAAoB1L,EAAMqQ,GACjD,IAAI1e,EAGR,SAAS2e,EAAW5E,EAAoB1L,EAAMqQ,GAE1C,GAAIA,GAAa3E,EAAmBpC,iBAAiBtJ,EAAKtW,MAAO2mB,EAAU3mB,MAAMoC,UAAW,EACpFpC,EAAQ2mB,EAAU3mB,OAChB6V,gBAAkBS,EAAKtW,MAC7B,IAAIsF,EA8BZ,SAASuhB,EAAsB7E,EAAoB1L,EAAMqQ,GACrD,OAAOrQ,EAAKhR,SAASM,IAAI,SAAU6D,GAC/B,IACI,IAAK,IAAI4E,EAAK3O,EAASinB,EAAUrhB,UAAWiP,EAAKlG,EAAGtO,QAASwU,EAAGtU,KAAMsU,EAAKlG,EAAGtO,OAAQ,CAClF,IAAIrB,EAAI6V,EAAGvU,MACX,GAAIgiB,EAAmBpC,iBAAiBlhB,EAAEsB,MAAMoC,SAAUqH,EAAMzJ,OAC5D,OAAO4mB,EAAW5E,EAAoBvY,EAAO/K,IAIzD,MAAOkV,GAASL,GAAQhT,MAAOqT,GAC/B,QACI,IACQW,IAAOA,EAAGtU,OAASwU,EAAKpG,EAAGmD,SAASiD,EAAGhV,KAAK4O,GAEpD,QAAU,GAAIkF,EAAK,MAAMA,EAAIhT,OAEjC,OAAOqmB,EAAW5E,EAAoBvY,GACtC,IAAI8J,EAAKkB,IAhDMoS,CAAsB7E,EAAoB1L,EAAMqQ,GAC/D,OAAO,IAAIhS,GAAS3U,EAAOsF,GAI3B,IAAIwhB,EAAsB9E,EAAmBrC,SAASrJ,EAAKtW,OAC3D,GAAI8mB,EAAqB,CACrB,IAAI5c,EAAO4c,EAAoB9kB,MAE/B,OASZ,SAAS+kB,EAAoCzQ,EAAMvP,GAC/C,GAAIuP,EAAKtW,MAAMqC,cAAgB0E,EAAO/G,MAAMqC,YACxC,MAAM,IAAI6C,MAAM,yEAEpB,GAAIoR,EAAKhR,SAAS9F,SAAWuH,EAAOzB,SAAS9F,OACzC,MAAM,IAAI0F,MAAM,8EAEpB6B,EAAO/G,MAAM6V,gBAAkBS,EAAKtW,MACpC,IAAK,IAAIX,EAAI,EAAGA,EAAIiX,EAAKhR,SAAS9F,SAAUH,EACxC0nB,EAAoCzQ,EAAKhR,SAASjG,GAAI0H,EAAOzB,SAASjG,IAnBlE0nB,CAAoCzQ,EAAMpM,GACnCA,EAGP,IAAIlK,EAuChB,SAASgnB,EAAqBhf,GAC1B,OAAO,IAAI0N,GAAe,IAAI3X,EAAKuX,gBAAgBtN,EAAElH,KAAM,IAAI/C,EAAKuX,gBAAgBtN,EAAEjF,QAAS,IAAIhF,EAAKuX,gBAAgBtN,EAAEJ,aAAc,IAAI7J,EAAKuX,gBAAgBtN,EAAEQ,UAAW,IAAIzK,EAAKuX,gBAAgBtN,EAAE2N,MAAO3N,EAAE5C,OAAQ4C,EAAE7C,UAAW6C,GAxCnNgf,CAAqB1Q,EAAKtW,OAEtC,OADIsF,EAAWgR,EAAKhR,SAASM,IAAI,SAAUoC,GAAK,OAAO4e,EAAW5E,EAAoBha,KAC/E,IAAI2M,GAAS3U,EAAOsF,GAtBxBshB,CAAW5E,EAAoB1L,EAAKxC,MAAO6S,EAAYA,EAAU7S,WAAQlH,GACpF,OAAO,IAAIiI,GAAY5M,EAAMqO,GA0/CDoQ,CAAkBzlB,EAAM+gB,mBAFEtjB,EAAE0D,SAE0BnB,EAAMshB,aACzB3gB,eAAgBA,IAGtD0kB,WAAYA,EAAY7kB,MAAO,KAAMG,eAAgBA,MAGtEX,EAAMgmB,eAAeZ,EAAcplB,EAAMshB,YAAathB,EAAMkhB,eAAgBthB,EAAIC,EAAK4kB,EAAQT,EAAoBpC,EAAYqD,EAAgBC,MAOrJjF,EAAOniB,UAAUkoB,eAAiB,SAAUxlB,EAAOylB,EAAaC,EAAWtmB,EAAIC,EAAK4kB,EAAQT,EAAoBpC,EAAYqD,EAAgBC,GACxI,IAGIiB,EAHAnmB,EAAQ/C,KAIZuD,EACK6E,QAAQ,SAAU5H,GACnB,GAAiB,kBAANA,GAAoBA,EAAEkD,gBAAkBf,IAAOI,EAAMqgB,cAAiB5iB,EAAE+C,MAAnF,CAIA,IAA+BA,EAAQ/C,EAAE+C,MAIzC,GAHAR,EAAMkhB,eADWzjB,EAAE4nB,WAEnBrlB,EAAMohB,WAAaphB,EAAM8gB,oBAAoBnB,MAAM3f,EAAMkhB,eAAgBuD,GACzEzkB,EAAMshB,YAAc9gB,GACfwjB,EAAoB,CACrB,IAAIhjB,EAAOhB,EAAM0M,cAAchF,UAAU1H,EAAMohB,YAC3CphB,EAAMmgB,SAASiG,qBAAqBplB,IAAS4gB,EAC7C5hB,EAAMmgB,SAASkG,aAAarlB,EAAM,IAAMqf,aAAczgB,IAGtDI,EAAMmgB,SAASmG,GAAGtlB,EAAM,IAAMqf,aAAczgB,IAGpD,IAAI2mB,GAAevmB,EAAM+gB,mBAAoBvgB,EAAOylB,EAAa,SAAUT,GAAO,OAAOxlB,EAAMqhB,aAAamE,KACvGgB,SAASxmB,EAAMkgB,cACpBiG,GAAyB,OAlBrBA,GAAyB,IAoB5BrB,KAAK,WACFqB,GACAnmB,EAAMygB,WAAY,EAClBzgB,EAAM0gB,iBAAmB9gB,EACzBI,EAAMsgB,OACDxhB,KAAK,IAAIoB,EAAcN,EAAII,EAAMmiB,aAAatiB,GAAMG,EAAMmiB,aAAaniB,EAAMkhB,kBAClF+D,GAAe,KAGfjlB,EAAMymB,2BACNzmB,EAAMsgB,OACDxhB,KAAK,IAAIsB,EAAiBR,EAAII,EAAMmiB,aAAatiB,GAAM,KAC5DolB,GAAe,KAEpB,SAAU9lB,GACT,GA1uGZ,SAASunB,EAA2BpnB,GAChC,OAAOA,GAASA,EAAgC,2BAyuGpConB,CAA2BvnB,GAC3Ba,EAAMygB,WAAY,EAClBzgB,EAAM2mB,iBAAiBV,EAAaC,EAAWzB,GAC/CzkB,EAAMsgB,OACDxhB,KAAK,IAAIsB,EAAiBR,EAAII,EAAMmiB,aAAatiB,GAAMV,EAAEmS,UAC9D2T,GAAe,OAEd,CACDjlB,EAAM2mB,iBAAiBV,EAAaC,EAAWzB,GAC/CzkB,EAAMsgB,OACDxhB,KAAK,IAAIwB,EAAgBV,EAAII,EAAMmiB,aAAatiB,GAAMV,IAC3D,IACI8lB,EAAejlB,EAAMwgB,aAAarhB,IAEtC,MAAOynB,GACH1B,EAAc0B,QAK9B3G,EAAOniB,UAAU6oB,iBAAmB,SAAUV,EAAaC,EAAWzB,GAClExnB,KAAKqkB,YAAc2E,EACnBhpB,KAAKikB,eAAiBgF,EACtBjpB,KAAKmkB,WAAankB,KAAK6jB,oBAAoBnB,MAAM1iB,KAAKikB,eAAgBuD,GACtExnB,KAAKwpB,4BAETxG,EAAOniB,UAAU2oB,yBAA2B,WACxCxpB,KAAKkjB,SAASkG,aAAappB,KAAKyP,cAAchF,UAAUzK,KAAKmkB,YAAa,IAAMf,aAAcpjB,KAAKyjB,oBAEhGT,EA3hBgB,GA6hBvBsG,GAAgC,WAChC,SAASA,EAAexF,EAAoB8F,EAAaC,EAAWnO,GAChE1b,KAAK8jB,mBAAqBA,EAC1B9jB,KAAK4pB,YAAcA,EACnB5pB,KAAK6pB,UAAYA,EACjB7pB,KAAK0b,aAAeA,EA8IxB,OA5IA4N,EAAezoB,UAAU0oB,SAAW,SAAUzN,GAC1C,IAAIC,EAAa/b,KAAK4pB,YAAYhU,MAC9BkU,EAAW9pB,KAAK6pB,UAAY7pB,KAAK6pB,UAAUjU,MAAQ,KACvD5V,KAAK+pB,sBAAsBhO,EAAY+N,EAAUhO,GACjDlD,GAAsB5Y,KAAK4pB,YAAY7f,MACvC/J,KAAKgqB,oBAAoBjO,EAAY+N,EAAUhO,IAGnDwN,EAAezoB,UAAUkpB,sBAAwB,SAAUpN,EAAYC,EAAUC,GAC7E,IAAI9Z,EAAQ/C,KACRoH,EAAWsP,GAAkBkG,GAEjCD,EAAWvV,SAASgB,QAAQ,SAAU6hB,GAClC,IAAIC,EAAkBD,EAAYnoB,MAAMoF,OACxCnE,EAAMonB,iBAAiBF,EAAa7iB,EAAS8iB,GAAkBrN,UACxDzV,EAAS8iB,KAGpB9hB,EAAQhB,EAAU,SAAUnC,EAAGsY,GAC3Bxa,EAAMka,8BAA8BhY,EAAG4X,MAG/CyM,EAAezoB,UAAUspB,iBAAmB,SAAUxN,EAAYC,EAAUwN,GACxE,IAAI3O,EAASkB,EAAW7a,MACpBsW,EAAOwE,EAAWA,EAAS9a,MAAQ,KACvC,GAAI2Z,IAAWrD,EAEX,GAAIqD,EAAOxU,UAAW,CAElB,IAAIkW,EAAUiN,EAAclN,WAAWzB,EAAOvU,QAC1CiW,GACAnd,KAAK+pB,sBAAsBpN,EAAYC,EAAUO,EAAQ/V,eAK7DpH,KAAK+pB,sBAAsBpN,EAAYC,EAAUwN,QAIjDhS,GAEApY,KAAKid,8BAA8BL,EAAUwN,IAIzDd,EAAezoB,UAAUoc,8BAAgC,SAAUnZ,EAAOgY,GAClE9b,KAAK8jB,mBAAmBzC,aAAavd,EAAMhC,MAAMoC,UACjDlE,KAAKqqB,2BAA2BvmB,EAAOgY,GAGvC9b,KAAKsqB,yBAAyBxmB,EAAOgY,IAG7CwN,EAAezoB,UAAUwpB,2BAA6B,SAAUvmB,EAAOgY,GACnE,IAAIqB,EAAUrB,EAAeoB,WAAWpZ,EAAMhC,MAAMoF,QACpD,GAAIiW,GAAWA,EAAQjW,OAAQ,CAC3B,IAAIqjB,EAAepN,EAAQjW,OAAOsjB,SAC9B3N,EAAWM,EAAQ/V,SAASqjB,sBAChCzqB,KAAK8jB,mBAAmBxC,MAAMxd,EAAMhC,MAAMoC,UAAYqmB,aAAcA,EAAczmB,MAAOA,EAAO+Y,SAAUA,MAGlHyM,EAAezoB,UAAUypB,yBAA2B,SAAUxmB,EAAOgY,GACjE,IAAI/Y,EAAQ/C,KACRmd,EAAUrB,EAAeoB,WAAWpZ,EAAMhC,MAAMoF,QACpD,GAAIiW,EAAS,CACT,IAAI/V,EAAWsP,GAAkB5S,GAC7B4mB,EAAa5mB,EAAMhC,MAAMmF,UAAYkW,EAAQ/V,SAAW0U,EAC5D1T,EAAQhB,EAAU,SAAUnC,EAAG2F,GAAK,OAAO7H,EAAMka,8BAA8BhY,EAAGylB,KAC9EvN,EAAQjW,SAERiW,EAAQjW,OAAOyjB,aAEfxN,EAAQ/V,SAASqjB,yBAI7BnB,EAAezoB,UAAUmpB,oBAAsB,SAAUrN,EAAYC,EAAUC,GAC3E,IAAI9Z,EAAQ/C,KACRoH,EAAWsP,GAAkBkG,GACjCD,EAAWvV,SAASgB,QAAQ,SAAU0B,GAClC/G,EAAMgmB,eAAejf,EAAG1C,EAAS0C,EAAEhI,MAAMoF,QAAS2V,GAClD9Z,EAAM2Y,aAAa,IAAIpX,EAAcwF,EAAEhI,MAAMoC,aAE7CyY,EAAWvV,SAAS9F,QACpBtB,KAAK0b,aAAa,IAAItX,EAAmBuY,EAAW7a,MAAMoC,YAGlEolB,EAAezoB,UAAUkoB,eAAiB,SAAUpM,EAAYC,EAAUd,GACtE,IAAIL,EAASkB,EAAW7a,MACpBsW,EAAOwE,EAAWA,EAAS9a,MAAQ,KAGvC,GAFA8W,GAAsB6C,GAElBA,IAAWrD,EACX,GAAIqD,EAAOxU,UAAW,CAElB,IAAIkW,EAAUrB,EAAe8O,mBAAmBnP,EAAOvU,QACvDlH,KAAKgqB,oBAAoBrN,EAAYC,EAAUO,EAAQ/V,eAIvDpH,KAAKgqB,oBAAoBrN,EAAYC,EAAUd,QAInD,GAAIL,EAAOxU,UAGP,GADIkW,EAAUrB,EAAe8O,mBAAmBnP,EAAOvU,QACnDlH,KAAK8jB,mBAAmBtC,aAAa/F,EAAOvX,UAAW,CACvD,IAAI2mB,EAAS7qB,KAAK8jB,mBAAmBrC,SAAShG,EAAOvX,UACrDlE,KAAK8jB,mBAAmBxC,MAAM7F,EAAOvX,SAAU,MAC/CiZ,EAAQ/V,SAAS0jB,mBAAmBD,EAAOhO,UAC3CM,EAAQ4N,UAAYF,EAAON,aAC3BpN,EAAQrZ,MAAQ+mB,EAAO/mB,MAAMhC,MACzBqb,EAAQjW,QAGRiW,EAAQjW,OAAO8jB,OAAOH,EAAON,aAAcM,EAAO/mB,MAAMhC,OAE5DmpB,GAAwCJ,EAAO/mB,WAE9C,CACD,IAAI6C,EAwBxB,SAASukB,EAAmBhnB,GACxB,IAAK,IAAIhD,EAAIgD,EAASyG,OAAQzJ,EAAGA,EAAIA,EAAEyJ,OAAQ,CAC3C,IAAI7G,EAAQ5C,EAAEiD,YACd,GAAIL,GAASA,EAAMuO,cACf,OAAOvO,EAAMuO,cACjB,GAAIvO,GAASA,EAAMmD,UACf,OAAO,KAEf,OAAO,KAhCsBikB,CAAmBzP,EAAOvX,UACnCinB,EAAqBxkB,EAASA,EAAOtH,OAAO+rB,yBAA2B,KAC3EjO,EAAQrZ,MAAQ2X,EAChB0B,EAAQsB,SAAW0M,EACfhO,EAAQjW,QAGRiW,EAAQjW,OAAOmkB,aAAa5P,EAAQ0P,GAExCnrB,KAAKgqB,oBAAoBrN,EAAY,KAAMQ,EAAQ/V,eAKvDpH,KAAKgqB,oBAAoBrN,EAAY,KAAMb,IAIhDwN,EAnJwB,GAqJnC,SAAS2B,GAAwC7U,GAC7CwC,GAAsBxC,EAAKtU,OAC3BsU,EAAKhP,SAASgB,QAAQ6iB,IAqG1B,IAAIK,GAA4B,WAC5B,SAASA,EAAW5rB,EAAQoE,EAAOynB,EAAUC,EAAUC,GACnDzrB,KAAKN,OAASA,EACdM,KAAK8D,MAAQA,EACb9D,KAAK+Z,YACW,MAAZwR,GACAC,EAASE,aAAaD,EAAGE,cAAe,WAAY,KAwE5D,OArEAzrB,OAAOkF,eAAekmB,EAAWzqB,UAAW,cACxC+qB,IAAK,SAAU7R,GAEP/Z,KAAK+Z,SADO,MAAZA,EACgB1Z,MAAM6E,QAAQ6U,GAAYA,GAAYA,OAM9DzU,YAAY,EACZC,cAAc,IAElBrF,OAAOkF,eAAekmB,EAAWzqB,UAAW,uBAIxC+qB,IAAK,SAAU9pB,GACPlC,EAAK+lB,aAAeC,SAAWA,QAAQC,MACvCD,QAAQC,KAAK,wEAEjB7lB,KAAK6rB,SAAW/pB,GAEpBwD,YAAY,EACZC,cAAc,IAElB+lB,EAAWzqB,UAAUirB,QAAU,WAC3B,IAAIhF,GACAC,mBAAoBgF,GAAc/rB,KAAK+mB,oBACvCpC,WAAYoH,GAAc/rB,KAAK2kB,aAGnC,OADA3kB,KAAKN,OAAOglB,cAAc1kB,KAAK+O,QAAS+X,IACjC,GAEX5mB,OAAOkF,eAAekmB,EAAWzqB,UAAW,WACxCmE,IAAK,WACD,OAAOhF,KAAKN,OAAOqQ,cAAc/P,KAAK+Z,UAClCwL,WAAYvlB,KAAK8D,MACjB4F,YAAa1J,KAAK0J,YAClBY,SAAUtK,KAAKsK,SACfkb,oBAAqBuG,GAAc/rB,KAAK6rB,UACxCpG,oBAAqBzlB,KAAKylB,oBAC1BC,iBAAkBqG,GAAc/rB,KAAK0lB,qBAG7CpgB,YAAY,EACZC,cAAc,IAElB+lB,EAAWU,aACLC,KAAMrsB,EAAKssB,UAAWC,OAASC,SAAU,0BAG/Cd,EAAWe,eAAiB,WAAc,QACpCJ,KAAMjJ,KACNiJ,KAAMzU,KACNyU,KAAMK,OAAQN,aAAeC,KAAMrsB,EAAK2sB,UAAWJ,MAAO,gBAC1DF,KAAMrsB,EAAK4sB,YACXP,KAAMrsB,EAAK6sB,cAEjBnB,EAAWoB,gBACPhjB,cAAgBuiB,KAAMrsB,EAAK+sB,QAC3BriB,WAAa2hB,KAAMrsB,EAAK+sB,QACxBlH,sBAAwBwG,KAAMrsB,EAAK+sB,QACnCjH,mBAAqBuG,KAAMrsB,EAAK+sB,QAChC5F,qBAAuBkF,KAAMrsB,EAAK+sB,QAClChI,aAAesH,KAAMrsB,EAAK+sB,QAC1BC,aAAeX,KAAMrsB,EAAK+sB,QAC1BnH,sBAAwByG,KAAMrsB,EAAK+sB,QACnCb,UAAYG,KAAMrsB,EAAKitB,aAAcV,MAAO,YAEzCb,EA9EoB,GA2F3BwB,GAAoC,WACpC,SAASA,EAAmBptB,EAAQoE,EAAOipB,GACvC,IAAIhqB,EAAQ/C,KACZA,KAAKN,OAASA,EACdM,KAAK8D,MAAQA,EACb9D,KAAK+sB,iBAAmBA,EACxB/sB,KAAK+Z,YACL/Z,KAAKgtB,aAAettB,EAAO2jB,OAAOwB,UAAU,SAAU3jB,GAC9CA,aAAa+B,GACbF,EAAMkqB,2BAiFlB,OA7EA/sB,OAAOkF,eAAe0nB,EAAmBjsB,UAAW,cAChD+qB,IAAK,SAAU7R,GAEP/Z,KAAK+Z,SADO,MAAZA,EACgB1Z,MAAM6E,QAAQ6U,GAAYA,GAAYA,OAM9DzU,YAAY,EACZC,cAAc,IAElBrF,OAAOkF,eAAe0nB,EAAmBjsB,UAAW,uBAChD+qB,IAAK,SAAU9pB,GACPlC,EAAK+lB,aAAeC,SAAWA,QAAQC,MACvCD,QAAQC,KAAK,uEAEjB7lB,KAAK6rB,SAAW/pB,GAEpBwD,YAAY,EACZC,cAAc,IAElBunB,EAAmBjsB,UAAUqsB,YAAc,SAAUC,GAAWntB,KAAKitB,0BACrEH,EAAmBjsB,UAAUskB,YAAc,WAAcnlB,KAAKgtB,aAAa3H,eAC3EyH,EAAmBjsB,UAAUirB,QAAU,SAAUsB,EAAQC,EAASC,EAASC,GACvE,GAAe,IAAXH,GAAgBC,GAAWC,GAAWC,EACtC,OAAO,EAEX,GAA2B,iBAAhBvtB,KAAKwtB,QAAsC,SAAfxtB,KAAKwtB,OACxC,OAAO,EAEX,IAAI1G,GACAC,mBAAoBgF,GAAc/rB,KAAK+mB,oBACvCpC,WAAYoH,GAAc/rB,KAAK2kB,aAGnC,OADA3kB,KAAKN,OAAOglB,cAAc1kB,KAAK+O,QAAS+X,IACjC,GAEXgG,EAAmBjsB,UAAUosB,uBAAyB,WAClDjtB,KAAKytB,KAAOztB,KAAK+sB,iBAAiBW,mBAAmB1tB,KAAKN,OAAOwlB,aAAallB,KAAK+O,WAEvF7O,OAAOkF,eAAe0nB,EAAmBjsB,UAAW,WAChDmE,IAAK,WACD,OAAOhF,KAAKN,OAAOqQ,cAAc/P,KAAK+Z,UAClCwL,WAAYvlB,KAAK8D,MACjB4F,YAAa1J,KAAK0J,YAClBY,SAAUtK,KAAKsK,SACfkb,oBAAqBuG,GAAc/rB,KAAK6rB,UACxCpG,oBAAqBzlB,KAAKylB,oBAC1BC,iBAAkBqG,GAAc/rB,KAAK0lB,qBAG7CpgB,YAAY,EACZC,cAAc,IAElBunB,EAAmBd,aACbC,KAAMrsB,EAAKssB,UAAWC,OAASC,SAAU,oBAG/CU,EAAmBT,eAAiB,WAAc,QAC5CJ,KAAMjJ,KACNiJ,KAAMzU,KACNyU,KAAMtsB,EAAOguB,oBAEnBb,EAAmBJ,gBACfc,SAAWvB,KAAMrsB,EAAKguB,YAAazB,MAAO,iBAAqBF,KAAMrsB,EAAK+sB,QAC1EjjB,cAAgBuiB,KAAMrsB,EAAK+sB,QAC3BriB,WAAa2hB,KAAMrsB,EAAK+sB,QACxBlH,sBAAwBwG,KAAMrsB,EAAK+sB,QACnCjH,mBAAqBuG,KAAMrsB,EAAK+sB,QAChC5F,qBAAuBkF,KAAMrsB,EAAK+sB,QAClChI,aAAesH,KAAMrsB,EAAK+sB,QAC1Bc,OAASxB,KAAMrsB,EAAKguB,cACpBhB,aAAeX,KAAMrsB,EAAK+sB,QAC1BnH,sBAAwByG,KAAMrsB,EAAK+sB,QACnCb,UAAYG,KAAMrsB,EAAKitB,aAAcV,MAAO,SAAU,gBAAiB,iBAAkB,iBAAkB,uBAExGW,EA1F4B,GA4FvC,SAASf,GAAc7qB,GACnB,MAAa,KAANA,KAAcA;;;;;;;GAmEzB,IAAI2sB,GAAkC,WAClC,SAASA,EAAiBnuB,EAAQouB,EAAStC,EAAUuC,GACjD,IAAIhrB,EAAQ/C,KACZA,KAAKN,OAASA,EACdM,KAAK8tB,QAAUA,EACf9tB,KAAKwrB,SAAWA,EAChBxrB,KAAK+tB,IAAMA,EACX/tB,KAAKguB,WACLhuB,KAAKonB,UAAW,EAChBpnB,KAAKiuB,yBAA4BzkB,OAAO,GACxCxJ,KAAKgtB,aAAettB,EAAO2jB,OAAOwB,UAAU,SAAU3jB,GAC9CA,aAAa+B,GACbF,EAAMmrB,WAoElB,OAhEAL,EAAiBhtB,UAAUstB,mBAAqB,WAC5C,IAAIprB,EAAQ/C,KACZA,KAAKouB,MAAMjB,QAAQtI,UAAU,SAAU9T,GAAK,OAAOhO,EAAMmrB,WACzDluB,KAAKquB,eAAelB,QAAQtI,UAAU,SAAU9T,GAAK,OAAOhO,EAAMmrB,WAClEluB,KAAKkuB,UAEThuB,OAAOkF,eAAeyoB,EAAiBhtB,UAAW,oBAC9C+qB,IAAK,SAAUnU,GACX,IAAIuW,EAAU3tB,MAAM6E,QAAQuS,GAAQA,EAAOA,EAAK5R,MAAM,KACtD7F,KAAKguB,QAAUA,EAAQ9X,OAAO,SAAUpM,GAAK,QAASA,KAE1DxE,YAAY,EACZC,cAAc,IAElBsoB,EAAiBhtB,UAAUqsB,YAAc,SAAUC,GAAWntB,KAAKkuB,UACnEL,EAAiBhtB,UAAUskB,YAAc,WAAcnlB,KAAKgtB,aAAa3H,eACzEwI,EAAiBhtB,UAAUqtB,OAAS,WAChC,IAAInrB,EAAQ/C,KACPA,KAAKouB,OAAUpuB,KAAKquB,gBAAmBruB,KAAKN,OAAO8jB,WAExDta,QAAQC,UAAU0e,KAAK,WACnB,IAAIyG,EAAiBvrB,EAAMurB,iBACvBvrB,EAAMqkB,WAAakH,IACnBvrB,EAAMqkB,SAAWkH,EACjBvrB,EAAMirB,QAAQ5lB,QAAQ,SAAU0B,GACxBwkB,EACAvrB,EAAMyoB,SAAS+C,SAASxrB,EAAM+qB,QAAQnC,cAAe7hB,GAGrD/G,EAAMyoB,SAASgD,YAAYzrB,EAAM+qB,QAAQnC,cAAe7hB,SAM5E+jB,EAAiBhtB,UAAU4tB,aAAe,SAAU/uB,GAChD,IAAIqD,EAAQ/C,KACZ,OAAO,SAAU0uB,GACb,OAAOhvB,EAAO0nB,SAASsH,EAAK3f,QAAShM,EAAMkrB,wBAAwBzkB,SAG3EqkB,EAAiBhtB,UAAUytB,eAAiB,WACxC,OAAOtuB,KAAKouB,MAAMvb,KAAK7S,KAAKyuB,aAAazuB,KAAKN,UAC1CM,KAAKquB,eAAexb,KAAK7S,KAAKyuB,aAAazuB,KAAKN,UAExDmuB,EAAiB7B,aACXC,KAAMrsB,EAAKssB,UAAWC,OACZC,SAAU,qBACVuC,SAAU,uBAI1Bd,EAAiBxB,eAAiB,WAAc,QAC1CJ,KAAMjJ,KACNiJ,KAAMrsB,EAAK6sB,aACXR,KAAMrsB,EAAK4sB,YACXP,KAAMrsB,EAAKgvB,qBAEjBf,EAAiBnB,gBACb0B,QAAUnC,KAAMrsB,EAAKivB,gBAAiB1C,MAAOb,IAAcwD,aAAa,MACxET,iBAAmBpC,KAAMrsB,EAAKivB,gBAAiB1C,MAAOW,IAAsBgC,aAAa,MACzFb,0BAA4BhC,KAAMrsB,EAAK+sB,QACvCoC,mBAAqB9C,KAAMrsB,EAAK+sB,SAE7BkB,EAhF0B,GA+FjCmB,GACA,SAASA,KACLhvB,KAAKkH,OAAS,KACdlH,KAAK8D,MAAQ,KACb9D,KAAKye,SAAW,KAChBze,KAAKoH,SAAW,IAAI6nB,GACpBjvB,KAAK+qB,UAAY,MASrBkE,GAAwC,WACxC,SAASA,IAELjvB,KAAK6c,SAAW,IAAIqS,IAsCxB,OAnCAD,EAAuBpuB,UAAUsuB,qBAAuB,SAAU5R,EAAWrW,GACzE,IAAIiW,EAAUnd,KAAK4qB,mBAAmBrN,GACtCJ,EAAQjW,OAASA,EACjBlH,KAAK6c,SAAS+O,IAAIrO,EAAWJ,IAOjC8R,EAAuBpuB,UAAUuuB,uBAAyB,SAAU7R,GAChE,IAAIJ,EAAUnd,KAAKkd,WAAWK,GAC1BJ,IACAA,EAAQjW,OAAS,OAOzB+nB,EAAuBpuB,UAAU4pB,oBAAsB,WACnD,IAAI5N,EAAW7c,KAAK6c,SAEpB,OADA7c,KAAK6c,SAAW,IAAIqS,IACbrS,GAEXoS,EAAuBpuB,UAAUiqB,mBAAqB,SAAUjO,GAAY7c,KAAK6c,SAAWA,GAC5FoS,EAAuBpuB,UAAU+pB,mBAAqB,SAAUrN,GAC5D,IAAIJ,EAAUnd,KAAKkd,WAAWK,GAK9B,OAJKJ,IACDA,EAAU,IAAI6R,GACdhvB,KAAK6c,SAAS+O,IAAIrO,EAAWJ,IAE1BA,GAEX8R,EAAuBpuB,UAAUqc,WAAa,SAAUK,GAAa,OAAOvd,KAAK6c,SAAS7X,IAAIuY,IAAc,MACrG0R,EAzCgC,GA0EvCI,GAA8B,WAC9B,SAASA,EAAavT,EAAgBoH,EAAUzE,EAAU1Z,EAAMuqB,GAC5DtvB,KAAK8b,eAAiBA,EACtB9b,KAAKkjB,SAAWA,EAChBljB,KAAKye,SAAWA,EAChBze,KAAKsvB,eAAiBA,EACtBtvB,KAAKgX,UAAY,KACjBhX,KAAKuvB,gBAAkB,KACvBvvB,KAAKwvB,eAAiB,IAAI5vB,EAAK6vB,aAC/BzvB,KAAK0vB,iBAAmB,IAAI9vB,EAAK6vB,aACjCzvB,KAAK+E,KAAOA,GAAQJ,EACpBmX,EAAeqT,qBAAqBnvB,KAAK+E,KAAM/E,MAkHnD,OAhHAqvB,EAAaxuB,UAAUskB,YAAc,WAAcnlB,KAAK8b,eAAesT,uBAAuBpvB,KAAK+E,OACnGsqB,EAAaxuB,UAAU8uB,SAAW,WAC9B,IAAK3vB,KAAKgX,UAAW,CAGjB,IAAImG,EAAUnd,KAAK8b,eAAeoB,WAAWld,KAAK+E,MAC9CoY,GAAWA,EAAQrZ,QACfqZ,EAAQ4N,UAER/qB,KAAKgrB,OAAO7N,EAAQ4N,UAAW5N,EAAQrZ,OAIvC9D,KAAKqrB,aAAalO,EAAQrZ,MAAOqZ,EAAQsB,UAAY,SAKrEve,OAAOkF,eAAeiqB,EAAaxuB,UAAW,eAC1CmE,IAAK,WAAc,QAAShF,KAAKgX,WACjC1R,YAAY,EACZC,cAAc,IAElBrF,OAAOkF,eAAeiqB,EAAaxuB,UAAW,aAC1CmE,IAAK,WACD,IAAKhF,KAAKgX,UACN,MAAM,IAAIhQ,MAAM,2BACpB,OAAOhH,KAAKgX,UAAU4Y,UAE1BtqB,YAAY,EACZC,cAAc,IAElBrF,OAAOkF,eAAeiqB,EAAaxuB,UAAW,kBAC1CmE,IAAK,WACD,IAAKhF,KAAKgX,UACN,MAAM,IAAIhQ,MAAM,2BACpB,OAAOhH,KAAKuvB,iBAEhBjqB,YAAY,EACZC,cAAc,IAElBrF,OAAOkF,eAAeiqB,EAAaxuB,UAAW,sBAC1CmE,IAAK,WACD,OAAIhF,KAAKuvB,gBACEvvB,KAAKuvB,gBAAgBrrB,SAASuT,SAI7CnS,YAAY,EACZC,cAAc,IAKlB8pB,EAAaxuB,UAAU2pB,OAAS,WAC5B,IAAKxqB,KAAKgX,UACN,MAAM,IAAIhQ,MAAM,2BACpBhH,KAAKkjB,SAASsH,SACd,IAAIqF,EAAM7vB,KAAKgX,UAGf,OAFAhX,KAAKgX,UAAY,KACjBhX,KAAKuvB,gBAAkB,KAChBM,GAKXR,EAAaxuB,UAAUmqB,OAAS,SAAU8E,EAAKC,GAC3C/vB,KAAKgX,UAAY8Y,EACjB9vB,KAAKuvB,gBAAkBQ,EACvB/vB,KAAKkjB,SAAS8M,OAAOF,EAAIG,WAE7BZ,EAAaxuB,UAAU8pB,WAAa,WAChC,GAAI3qB,KAAKgX,UAAW,CAChB,IAAIlN,EAAI9J,KAAKiH,UACbjH,KAAKgX,UAAUkZ,UACflwB,KAAKgX,UAAY,KACjBhX,KAAKuvB,gBAAkB,KACvBvvB,KAAK0vB,iBAAiBS,KAAKrmB,KAGnCulB,EAAaxuB,UAAUwqB,aAAe,SAAU0E,EAAgBtR,GAC5D,GAAIze,KAAKwd,YACL,MAAM,IAAIxW,MAAM,+CAEpBhH,KAAKuvB,gBAAkBQ,EAIvB,IAAI5wB,GADJsf,EAAWA,GAAYze,KAAKye,UACL2R,wBAHRL,EAAepY,gBACLxT,YAAY8C,WAGjCopB,EAAgBrwB,KAAK8b,eAAe8O,mBAAmB5qB,KAAK+E,MAAMqC,SAClE+K,EAAW,IAAIme,GAAeP,EAAgBM,EAAerwB,KAAKkjB,SAAS/Q,UAC/EnS,KAAKgX,UAAYhX,KAAKkjB,SAASqN,gBAAgBpxB,EAASa,KAAKkjB,SAAS5hB,OAAQ6Q,GAG9EnS,KAAKsvB,eAAekB,eACpBxwB,KAAKwvB,eAAeW,KAAKnwB,KAAKgX,UAAU4Y,WAE5CP,EAAarD,aACPC,KAAMrsB,EAAKssB,UAAWC,OAASC,SAAU,gBAAiBuC,SAAU,aAG1EU,EAAahD,eAAiB,WAAc,QACtCJ,KAAMgD,KACNhD,KAAMrsB,EAAK6wB,mBACXxE,KAAMrsB,EAAK8wB,2BACXzE,KAAMK,OAAQN,aAAeC,KAAMrsB,EAAK2sB,UAAWJ,MAAO,YAC1DF,KAAMrsB,EAAKgvB,qBAEjBS,EAAa3C,gBACT8C,iBAAmBvD,KAAMrsB,EAAK+wB,OAAQxE,MAAO,cAC7CuD,mBAAqBzD,KAAMrsB,EAAK+wB,OAAQxE,MAAO,iBAE5CkD,EA7HsB,GA+H7BiB,GAAgC,WAChC,SAASA,EAAexsB,EAAOusB,EAAe1lB,GAC1C3K,KAAK8D,MAAQA,EACb9D,KAAKqwB,cAAgBA,EACrBrwB,KAAK2K,OAASA,EAWlB,OATA2lB,EAAezvB,UAAUmE,IAAM,SAAU0Z,EAAOkS,GAC5C,OAAIlS,IAAUlH,GACHxX,KAAK8D,MAEZ4a,IAAUuQ,GACHjvB,KAAKqwB,cAETrwB,KAAK2K,OAAO3F,IAAI0Z,EAAOkS,IAE3BN,EAfwB,GAgC/BO,GACA,SAASA,OAeTC,GAAmC,WACnC,SAASA,KAKT,OAHAA,EAAkBjwB,UAAUkwB,QAAU,SAAUjtB,EAAOuH,GACnD,OAAOA,IAAK3C,KAAK5I,EAAUkQ,WAAW,WAAc,OAAOnQ,EAAKuJ,GAAG,UAEhE0nB,EAN2B,GAiBlCE,GAA8B,WAC9B,SAASA,KAGT,OADAA,EAAanwB,UAAUkwB,QAAU,SAAUjtB,EAAOuH,GAAM,OAAOxL,EAAKuJ,GAAG,OAChE4nB,EAJsB,GAkB7BC,GAAiC,WACjC,SAASA,EAAgBvxB,EAAQwxB,EAAcnP,EAAU5P,EAAUgf,GAC/DnxB,KAAKN,OAASA,EACdM,KAAKmS,SAAWA,EAChBnS,KAAKmxB,mBAAqBA,EAG1BnxB,KAAK8hB,OAAS,IAAID,GAAmBqP,EAAcnP,EAFjC,SAAU9f,GAAK,OAAOvC,EAAO0kB,aAAa,IAAIvgB,EAAqB5B,KACrE,SAAUA,GAAK,OAAOvC,EAAO0kB,aAAa,IAAIpgB,EAAmB/B,MAqErF,OAlEAgvB,EAAgBpwB,UAAUuwB,gBAAkB,WACxC,IAAIruB,EAAQ/C,KACZA,KAAKgtB,aACDhtB,KAAKN,OAAO2jB,OACP3a,KAAK5I,EAAUoW,OAAO,SAAUhU,GAAK,OAAOA,aAAae,IAAmBnD,EAAU0c,UAAU,WAAc,OAAOzZ,EAAMguB,aAC3HlM,UAAU,eAEvBoM,EAAgBpwB,UAAUkwB,QAAU,WAChC,IAAIphB,EAAW3P,KAAKmS,SAASnN,IAAIpF,EAAKgQ,aACtC,OAAO5P,KAAKqxB,cAAc1hB,EAAU3P,KAAKN,OAAOiH,SAKpDsqB,EAAgBpwB,UAAUskB,YAAc,WAAcnlB,KAAKgtB,aAAa3H,eACxE4L,EAAgBpwB,UAAUwwB,cAAgB,SAAU1hB,EAAUlJ,GAC1D,IA2BI4O,EAAKlF,EA3BL7E,KACJ,IACI,IAAK,IAAIoI,EAAWlS,EAASiF,GAASkN,EAAaD,EAAS7R,QAAS8R,EAAW5R,KAAM4R,EAAaD,EAAS7R,OAAQ,CAChH,IAAIiC,EAAQ6P,EAAW7R,MAEvB,GAAIgC,EAAMuD,eAAiBvD,EAAMiQ,SAAWjQ,EAAMuO,cAAe,CAC7D,IAAIK,EAAc5O,EAAMuO,cACxB/G,EAAIlJ,KAAKpC,KAAKqxB,cAAc3e,EAAYrT,OAAQqT,EAAYjM,cAGvD3C,EAAMuD,eAAiBvD,EAAMiQ,QAClCzI,EAAIlJ,KAAKpC,KAAKsxB,cAAc3hB,EAAU7L,IAGjCA,EAAMsD,UACXkE,EAAIlJ,KAAKpC,KAAKqxB,cAAc1hB,EAAU7L,EAAMsD,YAIxD,MAAOsO,GAASL,GAAQhT,MAAOqT,GAC/B,QACI,IACQ/B,IAAeA,EAAW5R,OAASoO,EAAKuD,EAASJ,SAASnD,EAAG5O,KAAKmS,GAE1E,QAAU,GAAI2B,EAAK,MAAMA,EAAIhT,OAEjC,OAAOxC,EAAKoJ,KAAKqC,GAAK5C,KAAK5I,EAAU6I,WAAY7I,EAAU4H,IAAI,SAAUqJ,QAG7EkgB,EAAgBpwB,UAAUywB,cAAgB,SAAU3hB,EAAU7L,GAC1D,IAAIf,EAAQ/C,KACZ,OAAOA,KAAKmxB,mBAAmBJ,QAAQjtB,EAAO,WAE1C,OADcf,EAAM+e,OAAO5P,KAAKvC,EAASwC,SAAUrO,GACpC4E,KAAK5I,EAAU4R,SAAS,SAAU/K,GAE7C,OADA7C,EAAMuO,cAAgB1L,EACf5D,EAAMsuB,cAAc1qB,EAAOtH,OAAQsH,EAAOF,cAI7DwqB,EAAgBjF,aACVC,KAAMrsB,EAAK2xB,aAGjBN,EAAgB5E,eAAiB,WAAc,QACzCJ,KAAMjJ,KACNiJ,KAAMrsB,EAAK4xB,wBACXvF,KAAMrsB,EAAK6xB,WACXxF,KAAMrsB,EAAK8xB,WACXzF,KAAM4E,MAELI,EA3EyB,GAqFhCU,GAAgC,WAChC,SAASA,EAAejyB,EACAkyB,EAAkBC,QACtB,IAAZA,IAAsBA,MAC1B7xB,KAAKN,OAASA,EACdM,KAAK4xB,iBAAmBA,EACxB5xB,KAAK6xB,QAAUA,EACf7xB,KAAK8xB,OAAS,EACd9xB,KAAK+xB,WAAa,aAClB/xB,KAAKgyB,WAAa,EAClBhyB,KAAKshB,SA+DT,OA7DAqQ,EAAe9wB,UAAUoxB,KAAO,WAImB,aAA3CjyB,KAAK6xB,QAAQK,2BACblyB,KAAK4xB,iBAAiBO,4BAA4B,UAEtDnyB,KAAKoyB,yBAA2BpyB,KAAKqyB,qBACrCryB,KAAKsyB,yBAA2BtyB,KAAKuyB,uBAEzCZ,EAAe9wB,UAAUwxB,mBAAqB,WAC1C,IAAItvB,EAAQ/C,KACZ,OAAOA,KAAKN,OAAO2jB,OAAOwB,UAAU,SAAU3iB,GACtCA,aAAaO,GAEbM,EAAMue,MAAMve,EAAM+uB,QAAU/uB,EAAM6uB,iBAAiBY,oBACnDzvB,EAAMgvB,WAAa7vB,EAAEW,kBACrBE,EAAMivB,WAAa9vB,EAAEY,cAAgBZ,EAAEY,cAAcsgB,aAAe,GAE/DlhB,aAAae,IAClBF,EAAM+uB,OAAS5vB,EAAES,GACjBI,EAAM0vB,oBAAoBvwB,EAAGa,EAAMrD,OAAOsnB,SAAS9kB,EAAEgB,mBAAmBoH,cAIpFqnB,EAAe9wB,UAAU0xB,oBAAsB,WAC3C,IAAIxvB,EAAQ/C,KACZ,OAAOA,KAAKN,OAAO2jB,OAAOwB,UAAU,SAAU3iB,GACpCA,aAAaqC,IAGfrC,EAAEuC,SAC8C,QAA5C1B,EAAM8uB,QAAQK,0BACdnvB,EAAM6uB,iBAAiBc,kBAAkB,EAAG,IAEK,YAA5C3vB,EAAM8uB,QAAQK,2BACnBnvB,EAAM6uB,iBAAiBc,iBAAiBxwB,EAAEuC,UAK1CvC,EAAEwC,QAA4C,YAAlC3B,EAAM8uB,QAAQc,gBAC1B5vB,EAAM6uB,iBAAiBgB,eAAe1wB,EAAEwC,QAES,aAA5C3B,EAAM8uB,QAAQK,2BACnBnvB,EAAM6uB,iBAAiBc,kBAAkB,EAAG,QAK5Df,EAAe9wB,UAAU4xB,oBAAsB,SAAUjuB,EAAaE,GAClE1E,KAAKN,OAAO0kB,aAAa,IAAI7f,EAAOC,EAAiC,aAApBxE,KAAK+xB,WAA4B/xB,KAAKshB,MAAMthB,KAAKgyB,YAAc,KAAMttB,KAE1HitB,EAAe9wB,UAAUskB,YAAc,WAC/BnlB,KAAKoyB,0BACLpyB,KAAKoyB,yBAAyB/M,cAE9BrlB,KAAKsyB,0BACLtyB,KAAKsyB,yBAAyBjN,eAG/BsM,EAzEwB,GA0F/BkB,IAAqBxD,GAAc/D,GAAYwB,GAAoBe,IAQnEiF,GAAuB,IAAIlzB,EAAKgiB,eAAe,wBAI/CmR,GAAuB,IAAInzB,EAAKgiB,eAAe,wBAC/CoR,IACArzB,EAAOszB,UACLC,QAASznB,EAAe0nB,SAAUznB,IAEhCwnB,QAASlQ,GACToQ,WAAYC,GACZC,MACI1zB,EAAK2zB,eAAgB9nB,EAAewjB,GAAwBtvB,EAAOszB,SAAUrzB,EAAK8xB,SAClF9xB,EAAK4xB,sBAAuB5xB,EAAK6xB,SAAU9P,GAAQmR,IAClDxQ,GAAqB,IAAI1iB,EAAK4zB,WAAcrS,GAAoB,IAAIvhB,EAAK4zB,YAGlFvE,IACEiE,QAAS1b,GAAgB4b,WAAYK,GAAWH,MAAOtQ,MACvDkQ,QAAStzB,EAAK4xB,sBAAuB2B,SAAUvzB,EAAK8zB,wBACtDzC,GACAD,GACAF,IACEoC,QAASJ,GAAsBa,UAAYC,eAAe;;;;;;;GAEhE,SAASC,KACL,OAAO,IAAIj0B,EAAKk0B,aAAa,SAAU9Q,IAqD3C,IAAI+Q,GAA8B,WAE9B,SAASA,EAAa9f,EAAOvU,IAgE7B,OAhDAq0B,EAAaC,QAAU,SAAUvtB,EAAQE,GACrC,OACIgJ,SAAUokB,EACVE,WACIjB,GACAkB,GAAcztB,IAEVysB,QAASH,GACTK,WAAYe,GACZb,OAAQtQ,GAAQ,IAAIpjB,EAAK4zB,SAAY,IAAI5zB,EAAKw0B,aAEhDlB,QAASJ,GAAsBa,SAAUhtB,QAEvCusB,QAASvzB,EAAOguB,iBAChByF,WAAYiB,GACZf,MACI3zB,EAAO20B,kBAAmB,IAAI10B,EAAK20B,OAAO50B,EAAO60B,eAAgB,IAAI50B,EAAK4zB,UAAaV,MAI3FI,QAASvB,GACTyB,WAAYqB,GACZnB,MAAOtQ,GAAQrjB,EAAO+0B,iBAAkB5B,MAGxCI,QAASrC,GACT8D,YAAahuB,GAAUA,EAAOwqB,mBAAqBxqB,EAAOwqB,mBACtDH,KAENkC,QAAStzB,EAAKk0B,aAAcc,OAAO,EAAMxB,WAAYS,IACvDgB,QAOZd,EAAae,SAAW,SAAUruB,GAC9B,OAASkJ,SAAUokB,EAAcE,WAAYC,GAAcztB,MAE/DstB,EAAa/H,aACPC,KAAMrsB,EAAKm1B,SAAU5I,OAAS6I,aAAcnC,GAAmBzzB,QAASyzB,OAG9EkB,EAAa1H,eAAiB,WAAc,QACtCJ,UAAMvd,EAAWsd,aAAeC,KAAMrsB,EAAK4zB,WAAcvH,KAAMrsB,EAAK20B,OAAQpI,MAAO4G,QACnF9G,KAAMjJ,GAAQgJ,aAAeC,KAAMrsB,EAAK4zB,cAEvCO,EAlEsB,GAoEjC,SAASU,GAAqB/0B,EAAQkyB,EAAkBjrB,GAIpD,OAHIA,EAAOsuB,cACPrD,EAAiBsD,UAAUvuB,EAAOsuB,cAE/B,IAAItD,GAAejyB,EAAQkyB,EAAkBjrB,GAExD,SAAS0tB,GAAwBc,EAA0BC,EAAUvD,GAEjE,YADgB,IAAZA,IAAsBA,MACnBA,EAAQwD,QAAU,IAAI11B,EAAO21B,qBAAqBH,EAA0BC,GAC/E,IAAIz1B,EAAO41B,qBAAqBJ,EAA0BC,GAElE,SAASjB,GAAoBz0B,GACzB,GAAIA,EACA,MAAM,IAAIsH,MAAM,wGAEpB,MAAO,UAmBX,SAASktB,GAAcztB,GACnB,QACMysB,QAAStzB,EAAK41B,6BAA8BZ,OAAO,EAAMjB,SAAUltB,IACnEysB,QAASvR,GAAQiT,OAAO,EAAMjB,SAAUltB,IAGlD,SAAS4sB,GAAYvD,EAAKrgB,EAAeoN,EAAUqG,EAAU/Q,EAAU2P,EAAQC,EAAUpb,EAAQ8uB,EAAM5R,EAAqBC,QAC3G,IAAT2R,IAAmBA,MACvB,IAAI/1B,EAAS,IAAIsjB,GAAO,KAAMvT,EAAeoN,EAAUqG,EAAU/Q,EAAU2P,EAAQC,EAAU/Z,EAAQrB,IAUrG,GATIkd,IACAnkB,EAAOmkB,oBAAsBA,GAE7BC,IACApkB,EAAOokB,mBAAqBA,GAE5B2R,EAAKlS,eACL7jB,EAAO6jB,aAAekS,EAAKlS,cAE3BkS,EAAK7B,cAAe,CACpB,IAAI8B,EAAQ31B,EAAgB41B,UAC5Bj2B,EAAO2jB,OAAOwB,UAAU,SAAU3iB,GAC9BwzB,EAAME,SAAS,iBAAmB1zB,EAAEtB,YAAYmE,MAChD2wB,EAAMG,IAAI3zB,EAAEc,YACZ0yB,EAAMG,IAAI3zB,GACVwzB,EAAMI,gBASd,OANIL,EAAK1R,sBACLrkB,EAAOqkB,oBAAsB0R,EAAK1R,qBAElC0R,EAAK1d,4BACLrY,EAAOqY,0BAA4B0d,EAAK1d,2BAErCrY,EAEX,SAAS+zB,GAAU/zB,GACf,OAAOA,EAAO2kB,YAAYta,KAa9B,IAAIgsB,GAAmC,WACnC,SAASA,EAAkB5jB,GACvBnS,KAAKmS,SAAWA,EAChBnS,KAAKg2B,gBAAiB,EACtBh2B,KAAKi2B,0BAA4B,IAAIp2B,EAAKyjB,QAyE9C,OAvEAyS,EAAkBl1B,UAAUq1B,eAAiB,WACzC,IAAInzB,EAAQ/C,KAEZ,OADQA,KAAKmS,SAASnN,IAAIrF,EAAOw2B,qBAAsBjtB,QAAQC,QAAQ,OAC9D0e,KAAK,WACV,IAAI1e,EAAU,KACVmC,EAAM,IAAIpC,QAAQ,SAAUjH,GAAK,OAAOkH,EAAUlH,IAClDvC,EAASqD,EAAMoP,SAASnN,IAAIge,IAC5ByS,EAAO1yB,EAAMoP,SAASnN,IAAI8tB,IAC9B,GAAI/vB,EAAMqzB,iBAAiBX,IAAS1yB,EAAMszB,gBAAgBZ,GACtDtsB,GAAQ,QAEP,GAA+B,aAA3BssB,EAAKjR,kBACV9kB,EAAO+kB,8BACPtb,GAAQ,OAEP,CAAA,GAA+B,YAA3BssB,EAAKjR,kBAgBV,MAAM,IAAIxd,MAAM,uCAAyCyuB,EAAKjR,kBAAoB,KAflF9kB,EAAOgkB,MAAME,mBAAqB,WAE9B,OAAK7gB,EAAMizB,eAOAn2B,EAAKuJ,GAAG,OANfrG,EAAMizB,gBAAiB,EACvB7sB,GAAQ,GACDpG,EAAMkzB,4BAOrBv2B,EAAO8kB,oBAKX,OAAOlZ,KAGfyqB,EAAkBl1B,UAAUy1B,kBAAoB,SAAUC,GACtD,IAAId,EAAOz1B,KAAKmS,SAASnN,IAAI8tB,IACzB0D,EAAYx2B,KAAKmS,SAASnN,IAAIisB,IAC9BwF,EAAiBz2B,KAAKmS,SAASnN,IAAI2sB,IACnCjyB,EAASM,KAAKmS,SAASnN,IAAIge,IAC3B8M,EAAM9vB,KAAKmS,SAASnN,IAAIpF,EAAK2zB,gBAC7BgD,IAA6BzG,EAAI4G,WAAW,KAG5C12B,KAAKq2B,gBAAgBZ,GACrB/1B,EAAO8kB,oBAEFxkB,KAAKo2B,iBAAiBX,IAC3B/1B,EAAO+kB,8BAEX+R,EAAUpF,kBACVqF,EAAexE,OACfvyB,EAAO6kB,uBAAuBuL,EAAI6G,eAAe,IACjD32B,KAAKi2B,0BAA0Bp0B,KAAK,MACpC7B,KAAKi2B,0BAA0BW,aAEnCb,EAAkBl1B,UAAUw1B,gBAAkB,SAAUZ,GACpD,MAAkC,mBAA3BA,EAAKjR,oBAAqE,IAA3BiR,EAAKjR,wBAC5B9V,IAA3B+mB,EAAKjR,mBAEbuR,EAAkBl1B,UAAUu1B,iBAAmB,SAAUX,GACrD,MAAkC,oBAA3BA,EAAKjR,oBAAsE,IAA3BiR,EAAKjR,mBAEhEuR,EAAkB/J,aACZC,KAAMrsB,EAAK2xB,aAGjBwE,EAAkB1J,eAAiB,WAAc,QAC3CJ,KAAMrsB,EAAK8xB,YAEVqE,EA7E2B,GA+EtC,SAASc,GAAkB50B,GACvB,OAAOA,EAAEi0B,eAAeY,KAAK70B,GAEjC,SAAS80B,GAAqB90B,GAC1B,OAAOA,EAAEq0B,kBAAkBQ,KAAK70B,GAOpC,IAAI+0B,GAAqB,IAAIp3B,EAAKgiB,eAAe,sBACjD,SAASiT,KACL,OACIkB,IAEI7C,QAAStzB,EAAKq3B,gBACdrC,OAAO,EACPxB,WAAYyD,GACZvD,MAAOyC,MAET7C,QAAS8D,GAAoB5D,WAAY2D,GAAsBzD,MAAOyC,MACtE7C,QAAStzB,EAAKs3B,uBAAwBtC,OAAO,EAAMD,YAAaqC;;;;;;;GAgB1E,IAAIG,GAAU,IAAIv3B,EAAKw3B,QAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAiD/Bh4B,EAAQi4B,kCAAoCtE,GAC5C3zB,EAAQk4B,kCAAoCvB,GAC5C32B,EAAQm4B,kCAAoC9C,GAC5Cr1B,EAAQo4B,kCAAoCX,GAC5Cz3B,EAAQq4B,kCAAoCV,GAC5C33B,EAAQs4B,kCAAoCvD,GAC5C/0B,EAAQu4B,kCAAoCtD,GAC5Cj1B,EAAQw4B,kCAAoC/C,GAC5Cz1B,EAAQy4B,kCAAoCpE,GAC5Cr0B,EAAQ04B,kCAAoCjE,GAC5Cz0B,EAAQ24B,kCAAoC1E,GAC5Cj0B,EAAQ44B,kCAAoCrG,GAC5CvyB,EAAQ64B,kCAAoCtiB,GAC5CvW,EAAQ84B,kCAAoCzhB,GAC5CrX,EAAQksB,WAAaA,GACrBlsB,EAAQ0tB,mBAAqBA,GAC7B1tB,EAAQyuB,iBAAmBA,GAC3BzuB,EAAQiwB,aAAeA,GACvBjwB,EAAQkF,cAAgBA,EACxBlF,EAAQiF,gBAAkBA,EAC1BjF,EAAQgF,mBAAqBA,EAC7BhF,EAAQ6E,qBAAuBA,EAC/B7E,EAAQqE,eAAiBA,EACzBrE,EAAQoE,iBAAmBA,EAC3BpE,EAAQ+D,iBAAmBA,EAC3B/D,EAAQ6D,cAAgBA,EACxB7D,EAAQiE,gBAAkBA,EAC1BjE,EAAQqD,gBAAkBA,EAC1BrD,EAAQwE,WAAaA,EACrBxE,EAAQuE,aAAeA,EACvBvE,EAAQ4E,mBAAqBA,EAC7B5E,EAAQyE,qBAAuBA,EAC/BzE,EAAQoD,YAAcA,EACtBpD,EAAQkE,iBAAmBA,EAC3BlE,EAAQmF,OAASA,EACjBnF,EAAQ+hB,mBAAqBA,GAC7B/hB,EAAQ4jB,OAASA,GACjB5jB,EAAQuiB,OAASA,GACjBviB,EAAQ0zB,qBAAuBA,GAC/B1zB,EAAQ43B,mBAAqBA,GAC7B53B,EAAQ20B,aAAeA,GACvB30B,EAAQ80B,cAAgBA,GACxB90B,EAAQ6vB,uBAAyBA,GACjC7vB,EAAQ4vB,cAAgBA,GACxB5vB,EAAQ4xB,aAAeA,GACvB5xB,EAAQ0xB,kBAAoBA,GAC5B1xB,EAAQyxB,mBAAqBA,GAC7BzxB,EAAQ6xB,gBAAkBA,GAC1B7xB,EAAQoY,eAAiBA,GACzBpY,EAAQ6X,uBAAyBA,GACjC7X,EAAQuX,YAAcA,GACtBvX,EAAQ8X,oBAAsBA,GAC9B9X,EAAQuF,eAAiBA,EACzBvF,EAAQoG,kBAAoBA,EAC5BpG,EAAQkjB,oBAAsBA,GAC9BljB,EAAQsM,qBAAuBA,EAC/BtM,EAAQ0L,WAAaA,EACrB1L,EAAQsL,gBAAkBA,EAC1BtL,EAAQqM,cAAgBA,EACxBrM,EAAQiL,QAAUA,EAClBjL,EAAQ+3B,QAAUA,GAClB/3B,EAAQ+4B,kBAAoBnF,GAC5B5zB,EAAQg5B,SAAWpwB,EAEnB9H,OAAOkF,eAAehG,EAAS,cAAgB0C,OAAO","sourcesContent":["/**\n * @license Angular v6.1.0-beta.0+30.sha-29eb24b\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/core'), require('rxjs'), require('rxjs/operators'), require('@angular/platform-browser')) :\n\ttypeof define === 'function' && define.amd ? define('@angular/router', ['exports', '@angular/common', '@angular/core', 'rxjs', 'rxjs/operators', '@angular/platform-browser'], factory) :\n\t(factory((global.ng = global.ng || {}, global.ng.router = {}),global.ng.common,global.ng.core,global.rxjs,global.rxjs.operators,global.ng.platformBrowser));\n}(this, (function (exports,common,core,rxjs,operators,platformBrowser) { 'use strict';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Base for events the Router goes through, as opposed to events tied to a specific\n * Route. `RouterEvent`s will only be fired one time for any given navigation.\n *\n * Example:\n *\n * ```\n * class MyService {\n *   constructor(public router: Router, logger: Logger) {\n *     router.events.filter(e => e instanceof RouterEvent).subscribe(e => {\n *       logger.log(e.id, e.url);\n *     });\n *   }\n * }\n * ```\n *\n * @experimental\n */\nvar RouterEvent = /** @class */ (function () {\n    function RouterEvent(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url) {\n        this.id = id;\n        this.url = url;\n    }\n    return RouterEvent;\n}());\n/**\n * @description\n *\n * Represents an event triggered when a navigation starts.\n *\n *\n */\nvar NavigationStart = /** @class */ (function (_super) {\n    __extends(NavigationStart, _super);\n    function NavigationStart(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    navigationTrigger, \n    /** @docsNotRequired */\n    restoredState) {\n        if (navigationTrigger === void 0) { \n        /** @docsNotRequired */\n        navigationTrigger = 'imperative'; }\n        if (restoredState === void 0) { \n        /** @docsNotRequired */\n        restoredState = null; }\n        var _this = _super.call(this, id, url) || this;\n        _this.navigationTrigger = navigationTrigger;\n        _this.restoredState = restoredState;\n        return _this;\n    }\n    /** @docsNotRequired */\n    NavigationStart.prototype.toString = function () { return \"NavigationStart(id: \" + this.id + \", url: '\" + this.url + \"')\"; };\n    return NavigationStart;\n}(RouterEvent));\n/**\n * @description\n *\n * Represents an event triggered when a navigation ends successfully.\n *\n *\n */\nvar NavigationEnd = /** @class */ (function (_super) {\n    __extends(NavigationEnd, _super);\n    function NavigationEnd(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    urlAfterRedirects) {\n        var _this = _super.call(this, id, url) || this;\n        _this.urlAfterRedirects = urlAfterRedirects;\n        return _this;\n    }\n    /** @docsNotRequired */\n    NavigationEnd.prototype.toString = function () {\n        return \"NavigationEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"')\";\n    };\n    return NavigationEnd;\n}(RouterEvent));\n/**\n * @description\n *\n * Represents an event triggered when a navigation is canceled.\n *\n *\n */\nvar NavigationCancel = /** @class */ (function (_super) {\n    __extends(NavigationCancel, _super);\n    function NavigationCancel(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    reason) {\n        var _this = _super.call(this, id, url) || this;\n        _this.reason = reason;\n        return _this;\n    }\n    /** @docsNotRequired */\n    NavigationCancel.prototype.toString = function () { return \"NavigationCancel(id: \" + this.id + \", url: '\" + this.url + \"')\"; };\n    return NavigationCancel;\n}(RouterEvent));\n/**\n * @description\n *\n * Represents an event triggered when a navigation fails due to an unexpected error.\n *\n *\n */\nvar NavigationError = /** @class */ (function (_super) {\n    __extends(NavigationError, _super);\n    function NavigationError(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    error) {\n        var _this = _super.call(this, id, url) || this;\n        _this.error = error;\n        return _this;\n    }\n    /** @docsNotRequired */\n    NavigationError.prototype.toString = function () {\n        return \"NavigationError(id: \" + this.id + \", url: '\" + this.url + \"', error: \" + this.error + \")\";\n    };\n    return NavigationError;\n}(RouterEvent));\n/**\n * @description\n *\n * Represents an event triggered when routes are recognized.\n *\n *\n */\nvar RoutesRecognized = /** @class */ (function (_super) {\n    __extends(RoutesRecognized, _super);\n    function RoutesRecognized(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    urlAfterRedirects, \n    /** @docsNotRequired */\n    state) {\n        var _this = _super.call(this, id, url) || this;\n        _this.urlAfterRedirects = urlAfterRedirects;\n        _this.state = state;\n        return _this;\n    }\n    /** @docsNotRequired */\n    RoutesRecognized.prototype.toString = function () {\n        return \"RoutesRecognized(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return RoutesRecognized;\n}(RouterEvent));\n/**\n * @description\n *\n * Represents the start of the Guard phase of routing.\n *\n * @experimental\n */\nvar GuardsCheckStart = /** @class */ (function (_super) {\n    __extends(GuardsCheckStart, _super);\n    function GuardsCheckStart(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    urlAfterRedirects, \n    /** @docsNotRequired */\n    state) {\n        var _this = _super.call(this, id, url) || this;\n        _this.urlAfterRedirects = urlAfterRedirects;\n        _this.state = state;\n        return _this;\n    }\n    GuardsCheckStart.prototype.toString = function () {\n        return \"GuardsCheckStart(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return GuardsCheckStart;\n}(RouterEvent));\n/**\n * @description\n *\n * Represents the end of the Guard phase of routing.\n *\n * @experimental\n */\nvar GuardsCheckEnd = /** @class */ (function (_super) {\n    __extends(GuardsCheckEnd, _super);\n    function GuardsCheckEnd(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    urlAfterRedirects, \n    /** @docsNotRequired */\n    state, \n    /** @docsNotRequired */\n    shouldActivate) {\n        var _this = _super.call(this, id, url) || this;\n        _this.urlAfterRedirects = urlAfterRedirects;\n        _this.state = state;\n        _this.shouldActivate = shouldActivate;\n        return _this;\n    }\n    GuardsCheckEnd.prototype.toString = function () {\n        return \"GuardsCheckEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \", shouldActivate: \" + this.shouldActivate + \")\";\n    };\n    return GuardsCheckEnd;\n}(RouterEvent));\n/**\n * @description\n *\n * Represents the start of the Resolve phase of routing. The timing of this\n * event may change, thus it's experimental. In the current iteration it will run\n * in the \"resolve\" phase whether there's things to resolve or not. In the future this\n * behavior may change to only run when there are things to be resolved.\n *\n * @experimental\n */\nvar ResolveStart = /** @class */ (function (_super) {\n    __extends(ResolveStart, _super);\n    function ResolveStart(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    urlAfterRedirects, \n    /** @docsNotRequired */\n    state) {\n        var _this = _super.call(this, id, url) || this;\n        _this.urlAfterRedirects = urlAfterRedirects;\n        _this.state = state;\n        return _this;\n    }\n    ResolveStart.prototype.toString = function () {\n        return \"ResolveStart(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return ResolveStart;\n}(RouterEvent));\n/**\n * @description\n *\n * Represents the end of the Resolve phase of routing. See note on\n * `ResolveStart` for use of this experimental API.\n *\n * @experimental\n */\nvar ResolveEnd = /** @class */ (function (_super) {\n    __extends(ResolveEnd, _super);\n    function ResolveEnd(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    urlAfterRedirects, \n    /** @docsNotRequired */\n    state) {\n        var _this = _super.call(this, id, url) || this;\n        _this.urlAfterRedirects = urlAfterRedirects;\n        _this.state = state;\n        return _this;\n    }\n    ResolveEnd.prototype.toString = function () {\n        return \"ResolveEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return ResolveEnd;\n}(RouterEvent));\n/**\n * @description\n *\n * Represents an event triggered before lazy loading a route config.\n *\n * @experimental\n */\nvar RouteConfigLoadStart = /** @class */ (function () {\n    function RouteConfigLoadStart(\n    /** @docsNotRequired */\n    route) {\n        this.route = route;\n    }\n    RouteConfigLoadStart.prototype.toString = function () { return \"RouteConfigLoadStart(path: \" + this.route.path + \")\"; };\n    return RouteConfigLoadStart;\n}());\n/**\n * @description\n *\n * Represents an event triggered when a route has been lazy loaded.\n *\n * @experimental\n */\nvar RouteConfigLoadEnd = /** @class */ (function () {\n    function RouteConfigLoadEnd(\n    /** @docsNotRequired */\n    route) {\n        this.route = route;\n    }\n    RouteConfigLoadEnd.prototype.toString = function () { return \"RouteConfigLoadEnd(path: \" + this.route.path + \")\"; };\n    return RouteConfigLoadEnd;\n}());\n/**\n * @description\n *\n * Represents the start of end of the Resolve phase of routing. See note on\n * `ChildActivationEnd` for use of this experimental API.\n *\n * @experimental\n */\nvar ChildActivationStart = /** @class */ (function () {\n    function ChildActivationStart(\n    /** @docsNotRequired */\n    snapshot) {\n        this.snapshot = snapshot;\n    }\n    ChildActivationStart.prototype.toString = function () {\n        var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n        return \"ChildActivationStart(path: '\" + path + \"')\";\n    };\n    return ChildActivationStart;\n}());\n/**\n * @description\n *\n * Represents the start of end of the Resolve phase of routing. See note on\n * `ChildActivationStart` for use of this experimental API.\n *\n * @experimental\n */\nvar ChildActivationEnd = /** @class */ (function () {\n    function ChildActivationEnd(\n    /** @docsNotRequired */\n    snapshot) {\n        this.snapshot = snapshot;\n    }\n    ChildActivationEnd.prototype.toString = function () {\n        var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n        return \"ChildActivationEnd(path: '\" + path + \"')\";\n    };\n    return ChildActivationEnd;\n}());\n/**\n * @description\n *\n * Represents the start of end of the Resolve phase of routing. See note on\n * `ActivationEnd` for use of this experimental API.\n *\n * @experimental\n */\nvar ActivationStart = /** @class */ (function () {\n    function ActivationStart(\n    /** @docsNotRequired */\n    snapshot) {\n        this.snapshot = snapshot;\n    }\n    ActivationStart.prototype.toString = function () {\n        var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n        return \"ActivationStart(path: '\" + path + \"')\";\n    };\n    return ActivationStart;\n}());\n/**\n * @description\n *\n * Represents the start of end of the Resolve phase of routing. See note on\n * `ActivationStart` for use of this experimental API.\n *\n * @experimental\n */\nvar ActivationEnd = /** @class */ (function () {\n    function ActivationEnd(\n    /** @docsNotRequired */\n    snapshot) {\n        this.snapshot = snapshot;\n    }\n    ActivationEnd.prototype.toString = function () {\n        var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n        return \"ActivationEnd(path: '\" + path + \"')\";\n    };\n    return ActivationEnd;\n}());\n/**\n * @description\n *\n * Represents a scrolling event.\n */\nvar Scroll = /** @class */ (function () {\n    function Scroll(\n    /** @docsNotRequired */\n    routerEvent, \n    /** @docsNotRequired */\n    position, \n    /** @docsNotRequired */\n    anchor) {\n        this.routerEvent = routerEvent;\n        this.position = position;\n        this.anchor = anchor;\n    }\n    Scroll.prototype.toString = function () {\n        var pos = this.position ? this.position[0] + \", \" + this.position[1] : null;\n        return \"Scroll(anchor: '\" + this.anchor + \"', position: '\" + pos + \"')\";\n    };\n    return Scroll;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Name of the primary outlet.\n *\n *\n */\nvar PRIMARY_OUTLET = 'primary';\nvar ParamsAsMap = /** @class */ (function () {\n    function ParamsAsMap(params) {\n        this.params = params || {};\n    }\n    ParamsAsMap.prototype.has = function (name) { return this.params.hasOwnProperty(name); };\n    ParamsAsMap.prototype.get = function (name) {\n        if (this.has(name)) {\n            var v = this.params[name];\n            return Array.isArray(v) ? v[0] : v;\n        }\n        return null;\n    };\n    ParamsAsMap.prototype.getAll = function (name) {\n        if (this.has(name)) {\n            var v = this.params[name];\n            return Array.isArray(v) ? v : [v];\n        }\n        return [];\n    };\n    Object.defineProperty(ParamsAsMap.prototype, \"keys\", {\n        get: function () { return Object.keys(this.params); },\n        enumerable: true,\n        configurable: true\n    });\n    return ParamsAsMap;\n}());\n/**\n * Convert a `Params` instance to a `ParamMap`.\n *\n *\n */\nfunction convertToParamMap(params) {\n    return new ParamsAsMap(params);\n}\nvar NAVIGATION_CANCELING_ERROR = 'ngNavigationCancelingError';\nfunction navigationCancelingError(message) {\n    var error = Error('NavigationCancelingError: ' + message);\n    error[NAVIGATION_CANCELING_ERROR] = true;\n    return error;\n}\nfunction isNavigationCancelingError(error) {\n    return error && error[NAVIGATION_CANCELING_ERROR];\n}\n// Matches the route configuration (`route`) against the actual URL (`segments`).\nfunction defaultUrlMatcher(segments, segmentGroup, route) {\n    var parts = route.path.split('/');\n    if (parts.length > segments.length) {\n        // The actual URL is shorter than the config, no match\n        return null;\n    }\n    if (route.pathMatch === 'full' &&\n        (segmentGroup.hasChildren() || parts.length < segments.length)) {\n        // The config is longer than the actual URL but we are looking for a full match, return null\n        return null;\n    }\n    var posParams = {};\n    // Check each config part against the actual URL\n    for (var index = 0; index < parts.length; index++) {\n        var part = parts[index];\n        var segment = segments[index];\n        var isParameter = part.startsWith(':');\n        if (isParameter) {\n            posParams[part.substring(1)] = segment;\n        }\n        else if (part !== segment.path) {\n            // The actual URL part does not match the config, no match\n            return null;\n        }\n    }\n    return { consumed: segments.slice(0, parts.length), posParams: posParams };\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar LoadedRouterConfig = /** @class */ (function () {\n    function LoadedRouterConfig(routes, module) {\n        this.routes = routes;\n        this.module = module;\n    }\n    return LoadedRouterConfig;\n}());\nfunction validateConfig(config, parentPath) {\n    if (parentPath === void 0) { parentPath = ''; }\n    // forEach doesn't iterate undefined values\n    for (var i = 0; i < config.length; i++) {\n        var route = config[i];\n        var fullPath = getFullPath(parentPath, route);\n        validateNode(route, fullPath);\n    }\n}\nfunction validateNode(route, fullPath) {\n    if (!route) {\n        throw new Error(\"\\n      Invalid configuration of route '\" + fullPath + \"': Encountered undefined route.\\n      The reason might be an extra comma.\\n\\n      Example:\\n      const routes: Routes = [\\n        { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\\n        { path: 'dashboard',  component: DashboardComponent },, << two commas\\n        { path: 'detail/:id', component: HeroDetailComponent }\\n      ];\\n    \");\n    }\n    if (Array.isArray(route)) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': Array cannot be specified\");\n    }\n    if (!route.component && (route.outlet && route.outlet !== PRIMARY_OUTLET)) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': a componentless route cannot have a named outlet set\");\n    }\n    if (route.redirectTo && route.children) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and children cannot be used together\");\n    }\n    if (route.redirectTo && route.loadChildren) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and loadChildren cannot be used together\");\n    }\n    if (route.children && route.loadChildren) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': children and loadChildren cannot be used together\");\n    }\n    if (route.redirectTo && route.component) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and component cannot be used together\");\n    }\n    if (route.path && route.matcher) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': path and matcher cannot be used together\");\n    }\n    if (route.redirectTo === void 0 && !route.component && !route.children && !route.loadChildren) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"'. One of the following must be provided: component, redirectTo, children or loadChildren\");\n    }\n    if (route.path === void 0 && route.matcher === void 0) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': routes must have either a path or a matcher specified\");\n    }\n    if (typeof route.path === 'string' && route.path.charAt(0) === '/') {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': path cannot start with a slash\");\n    }\n    if (route.path === '' && route.redirectTo !== void 0 && route.pathMatch === void 0) {\n        var exp = \"The default value of 'pathMatch' is 'prefix', but often the intent is to use 'full'.\";\n        throw new Error(\"Invalid configuration of route '{path: \\\"\" + fullPath + \"\\\", redirectTo: \\\"\" + route.redirectTo + \"\\\"}': please provide 'pathMatch'. \" + exp);\n    }\n    if (route.pathMatch !== void 0 && route.pathMatch !== 'full' && route.pathMatch !== 'prefix') {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': pathMatch can only be set to 'prefix' or 'full'\");\n    }\n    if (route.children) {\n        validateConfig(route.children, fullPath);\n    }\n}\nfunction getFullPath(parentPath, currentRoute) {\n    if (!currentRoute) {\n        return parentPath;\n    }\n    if (!parentPath && !currentRoute.path) {\n        return '';\n    }\n    else if (parentPath && !currentRoute.path) {\n        return parentPath + \"/\";\n    }\n    else if (!parentPath && currentRoute.path) {\n        return currentRoute.path;\n    }\n    else {\n        return parentPath + \"/\" + currentRoute.path;\n    }\n}\nfunction copyConfig(r) {\n    var children = r.children && r.children.map(copyConfig);\n    return children ? __assign({}, r, { children: children }) : __assign({}, r);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction shallowEqualArrays(a, b) {\n    if (a.length !== b.length)\n        return false;\n    for (var i = 0; i < a.length; ++i) {\n        if (!shallowEqual(a[i], b[i]))\n            return false;\n    }\n    return true;\n}\nfunction shallowEqual(a, b) {\n    var k1 = Object.keys(a);\n    var k2 = Object.keys(b);\n    if (k1.length != k2.length) {\n        return false;\n    }\n    var key;\n    for (var i = 0; i < k1.length; i++) {\n        key = k1[i];\n        if (a[key] !== b[key]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Flattens single-level nested arrays.\n */\nfunction flatten(arr) {\n    return Array.prototype.concat.apply([], arr);\n}\n/**\n * Return the last element of an array.\n */\nfunction last$1(a) {\n    return a.length > 0 ? a[a.length - 1] : null;\n}\n/**\n * Verifys all booleans in an array are `true`.\n */\n\nfunction forEach(map$$1, callback) {\n    for (var prop in map$$1) {\n        if (map$$1.hasOwnProperty(prop)) {\n            callback(map$$1[prop], prop);\n        }\n    }\n}\nfunction waitForMap(obj, fn) {\n    if (Object.keys(obj).length === 0) {\n        return rxjs.of({});\n    }\n    var waitHead = [];\n    var waitTail = [];\n    var res = {};\n    forEach(obj, function (a, k) {\n        var mapped = fn(k, a).pipe(operators.map(function (r) { return res[k] = r; }));\n        if (k === PRIMARY_OUTLET) {\n            waitHead.push(mapped);\n        }\n        else {\n            waitTail.push(mapped);\n        }\n    });\n    // Closure compiler has problem with using spread operator here. So just using Array.concat.\n    return rxjs.of.apply(null, waitHead.concat(waitTail)).pipe(operators.concatAll(), operators.last(), operators.map(function () { return res; }));\n}\n/**\n * ANDs Observables by merging all input observables, reducing to an Observable verifying all\n * input Observables return `true`.\n */\nfunction andObservables(observables) {\n    return observables.pipe(operators.mergeAll(), operators.every(function (result) { return result === true; }));\n}\nfunction wrapIntoObservable(value) {\n    if (core.ɵisObservable(value)) {\n        return value;\n    }\n    if (core.ɵisPromise(value)) {\n        // Use `Promise.resolve()` to wrap promise-like instances.\n        // Required ie when a Resolver returns a AngularJS `$q` promise to correctly trigger the\n        // change detection.\n        return rxjs.from(Promise.resolve(value));\n    }\n    return rxjs.of(value);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction createEmptyUrlTree() {\n    return new UrlTree(new UrlSegmentGroup([], {}), {}, null);\n}\nfunction containsTree(container, containee, exact) {\n    if (exact) {\n        return equalQueryParams(container.queryParams, containee.queryParams) &&\n            equalSegmentGroups(container.root, containee.root);\n    }\n    return containsQueryParams(container.queryParams, containee.queryParams) &&\n        containsSegmentGroup(container.root, containee.root);\n}\nfunction equalQueryParams(container, containee) {\n    return shallowEqual(container, containee);\n}\nfunction equalSegmentGroups(container, containee) {\n    if (!equalPath(container.segments, containee.segments))\n        return false;\n    if (container.numberOfChildren !== containee.numberOfChildren)\n        return false;\n    for (var c in containee.children) {\n        if (!container.children[c])\n            return false;\n        if (!equalSegmentGroups(container.children[c], containee.children[c]))\n            return false;\n    }\n    return true;\n}\nfunction containsQueryParams(container, containee) {\n    return Object.keys(containee).length <= Object.keys(container).length &&\n        Object.keys(containee).every(function (key) { return containee[key] === container[key]; });\n}\nfunction containsSegmentGroup(container, containee) {\n    return containsSegmentGroupHelper(container, containee, containee.segments);\n}\nfunction containsSegmentGroupHelper(container, containee, containeePaths) {\n    if (container.segments.length > containeePaths.length) {\n        var current = container.segments.slice(0, containeePaths.length);\n        if (!equalPath(current, containeePaths))\n            return false;\n        if (containee.hasChildren())\n            return false;\n        return true;\n    }\n    else if (container.segments.length === containeePaths.length) {\n        if (!equalPath(container.segments, containeePaths))\n            return false;\n        for (var c in containee.children) {\n            if (!container.children[c])\n                return false;\n            if (!containsSegmentGroup(container.children[c], containee.children[c]))\n                return false;\n        }\n        return true;\n    }\n    else {\n        var current = containeePaths.slice(0, container.segments.length);\n        var next = containeePaths.slice(container.segments.length);\n        if (!equalPath(container.segments, current))\n            return false;\n        if (!container.children[PRIMARY_OUTLET])\n            return false;\n        return containsSegmentGroupHelper(container.children[PRIMARY_OUTLET], containee, next);\n    }\n}\n/**\n * @description\n *\n * Represents the parsed URL.\n *\n * Since a router state is a tree, and the URL is nothing but a serialized state, the URL is a\n * serialized tree.\n * UrlTree is a data structure that provides a lot of affordances in dealing with URLs\n *\n * ### Example\n *\n * ```\n * @Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const tree: UrlTree =\n *       router.parseUrl('/team/33/(user/victor//support:help)?debug=true#fragment');\n *     const f = tree.fragment; // return 'fragment'\n *     const q = tree.queryParams; // returns {debug: 'true'}\n *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n *     const s: UrlSegment[] = g.segments; // returns 2 segments 'team' and '33'\n *     g.children[PRIMARY_OUTLET].segments; // returns 2 segments 'user' and 'victor'\n *     g.children['support'].segments; // return 1 segment 'help'\n *   }\n * }\n * ```\n *\n *\n */\nvar UrlTree = /** @class */ (function () {\n    /** @internal */\n    function UrlTree(\n    /** The root segment group of the URL tree */\n    root, \n    /** The query params of the URL */\n    queryParams, \n    /** The fragment of the URL */\n    fragment) {\n        this.root = root;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n    }\n    Object.defineProperty(UrlTree.prototype, \"queryParamMap\", {\n        get: function () {\n            if (!this._queryParamMap) {\n                this._queryParamMap = convertToParamMap(this.queryParams);\n            }\n            return this._queryParamMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @docsNotRequired */\n    UrlTree.prototype.toString = function () { return DEFAULT_SERIALIZER.serialize(this); };\n    return UrlTree;\n}());\n/**\n * @description\n *\n * Represents the parsed URL segment group.\n *\n * See `UrlTree` for more information.\n *\n *\n */\nvar UrlSegmentGroup = /** @class */ (function () {\n    function UrlSegmentGroup(\n    /** The URL segments of this group. See `UrlSegment` for more information */\n    segments, \n    /** The list of children of this group */\n    children) {\n        var _this = this;\n        this.segments = segments;\n        this.children = children;\n        /** The parent node in the url tree */\n        this.parent = null;\n        forEach(children, function (v, k) { return v.parent = _this; });\n    }\n    /** Whether the segment has child segments */\n    UrlSegmentGroup.prototype.hasChildren = function () { return this.numberOfChildren > 0; };\n    Object.defineProperty(UrlSegmentGroup.prototype, \"numberOfChildren\", {\n        /** Number of child segments */\n        get: function () { return Object.keys(this.children).length; },\n        enumerable: true,\n        configurable: true\n    });\n    /** @docsNotRequired */\n    UrlSegmentGroup.prototype.toString = function () { return serializePaths(this); };\n    return UrlSegmentGroup;\n}());\n/**\n * @description\n *\n * Represents a single URL segment.\n *\n * A UrlSegment is a part of a URL between the two slashes. It contains a path and the matrix\n * parameters associated with the segment.\n *\n * ## Example\n *\n * ```\n * @Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const tree: UrlTree = router.parseUrl('/team;id=33');\n *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n *     const s: UrlSegment[] = g.segments;\n *     s[0].path; // returns 'team'\n *     s[0].parameters; // returns {id: 33}\n *   }\n * }\n * ```\n *\n *\n */\nvar UrlSegment = /** @class */ (function () {\n    function UrlSegment(\n    /** The path part of a URL segment */\n    path, \n    /** The matrix parameters associated with a segment */\n    parameters) {\n        this.path = path;\n        this.parameters = parameters;\n    }\n    Object.defineProperty(UrlSegment.prototype, \"parameterMap\", {\n        get: function () {\n            if (!this._parameterMap) {\n                this._parameterMap = convertToParamMap(this.parameters);\n            }\n            return this._parameterMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @docsNotRequired */\n    UrlSegment.prototype.toString = function () { return serializePath(this); };\n    return UrlSegment;\n}());\nfunction equalSegments(as, bs) {\n    return equalPath(as, bs) && as.every(function (a, i) { return shallowEqual(a.parameters, bs[i].parameters); });\n}\nfunction equalPath(as, bs) {\n    if (as.length !== bs.length)\n        return false;\n    return as.every(function (a, i) { return a.path === bs[i].path; });\n}\nfunction mapChildrenIntoArray(segment, fn) {\n    var res = [];\n    forEach(segment.children, function (child, childOutlet) {\n        if (childOutlet === PRIMARY_OUTLET) {\n            res = res.concat(fn(child, childOutlet));\n        }\n    });\n    forEach(segment.children, function (child, childOutlet) {\n        if (childOutlet !== PRIMARY_OUTLET) {\n            res = res.concat(fn(child, childOutlet));\n        }\n    });\n    return res;\n}\n/**\n * @description\n *\n * Serializes and deserializes a URL string into a URL tree.\n *\n * The url serialization strategy is customizable. You can\n * make all URLs case insensitive by providing a custom UrlSerializer.\n *\n * See `DefaultUrlSerializer` for an example of a URL serializer.\n *\n *\n */\nvar UrlSerializer = /** @class */ (function () {\n    function UrlSerializer() {\n    }\n    return UrlSerializer;\n}());\n/**\n * @description\n *\n * A default implementation of the `UrlSerializer`.\n *\n * Example URLs:\n *\n * ```\n * /inbox/33(popup:compose)\n * /inbox/33;open=true/messages/44\n * ```\n *\n * DefaultUrlSerializer uses parentheses to serialize secondary segments (e.g., popup:compose), the\n * colon syntax to specify the outlet, and the ';parameter=value' syntax (e.g., open=true) to\n * specify route specific parameters.\n *\n *\n */\nvar DefaultUrlSerializer = /** @class */ (function () {\n    function DefaultUrlSerializer() {\n    }\n    /** Parses a url into a `UrlTree` */\n    DefaultUrlSerializer.prototype.parse = function (url) {\n        var p = new UrlParser(url);\n        return new UrlTree(p.parseRootSegment(), p.parseQueryParams(), p.parseFragment());\n    };\n    /** Converts a `UrlTree` into a url */\n    DefaultUrlSerializer.prototype.serialize = function (tree) {\n        var segment = \"/\" + serializeSegment(tree.root, true);\n        var query = serializeQueryParams(tree.queryParams);\n        var fragment = typeof tree.fragment === \"string\" ? \"#\" + encodeUriFragment(tree.fragment) : '';\n        return \"\" + segment + query + fragment;\n    };\n    return DefaultUrlSerializer;\n}());\nvar DEFAULT_SERIALIZER = new DefaultUrlSerializer();\nfunction serializePaths(segment) {\n    return segment.segments.map(function (p) { return serializePath(p); }).join('/');\n}\nfunction serializeSegment(segment, root) {\n    if (!segment.hasChildren()) {\n        return serializePaths(segment);\n    }\n    if (root) {\n        var primary = segment.children[PRIMARY_OUTLET] ?\n            serializeSegment(segment.children[PRIMARY_OUTLET], false) :\n            '';\n        var children_1 = [];\n        forEach(segment.children, function (v, k) {\n            if (k !== PRIMARY_OUTLET) {\n                children_1.push(k + \":\" + serializeSegment(v, false));\n            }\n        });\n        return children_1.length > 0 ? primary + \"(\" + children_1.join('//') + \")\" : primary;\n    }\n    else {\n        var children = mapChildrenIntoArray(segment, function (v, k) {\n            if (k === PRIMARY_OUTLET) {\n                return [serializeSegment(segment.children[PRIMARY_OUTLET], false)];\n            }\n            return [k + \":\" + serializeSegment(v, false)];\n        });\n        return serializePaths(segment) + \"/(\" + children.join('//') + \")\";\n    }\n}\n/**\n * Encodes a URI string with the default encoding. This function will only ever be called from\n * `encodeUriQuery` or `encodeUriSegment` as it's the base set of encodings to be used. We need\n * a custom encoding because encodeURIComponent is too aggressive and encodes stuff that doesn't\n * have to be encoded per https://url.spec.whatwg.org.\n */\nfunction encodeUriString(s) {\n    return encodeURIComponent(s)\n        .replace(/%40/g, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/g, '$')\n        .replace(/%2C/gi, ',');\n}\n/**\n * This function should be used to encode both keys and values in a query string key/value. In\n * the following URL, you need to call encodeUriQuery on \"k\" and \"v\":\n *\n * http://www.site.org/html;mk=mv?k=v#f\n */\nfunction encodeUriQuery(s) {\n    return encodeUriString(s).replace(/%3B/gi, ';');\n}\n/**\n * This function should be used to encode a URL fragment. In the following URL, you need to call\n * encodeUriFragment on \"f\":\n *\n * http://www.site.org/html;mk=mv?k=v#f\n */\nfunction encodeUriFragment(s) {\n    return encodeURI(s);\n}\n/**\n * This function should be run on any URI segment as well as the key and value in a key/value\n * pair for matrix params. In the following URL, you need to call encodeUriSegment on \"html\",\n * \"mk\", and \"mv\":\n *\n * http://www.site.org/html;mk=mv?k=v#f\n */\nfunction encodeUriSegment(s) {\n    return encodeUriString(s).replace(/\\(/g, '%28').replace(/\\)/g, '%29').replace(/%26/gi, '&');\n}\nfunction decode(s) {\n    return decodeURIComponent(s);\n}\n// Query keys/values should have the \"+\" replaced first, as \"+\" in a query string is \" \".\n// decodeURIComponent function will not decode \"+\" as a space.\nfunction decodeQuery(s) {\n    return decode(s.replace(/\\+/g, '%20'));\n}\nfunction serializePath(path) {\n    return \"\" + encodeUriSegment(path.path) + serializeMatrixParams(path.parameters);\n}\nfunction serializeMatrixParams(params) {\n    return Object.keys(params)\n        .map(function (key) { return \";\" + encodeUriSegment(key) + \"=\" + encodeUriSegment(params[key]); })\n        .join('');\n}\nfunction serializeQueryParams(params) {\n    var strParams = Object.keys(params).map(function (name) {\n        var value = params[name];\n        return Array.isArray(value) ?\n            value.map(function (v) { return encodeUriQuery(name) + \"=\" + encodeUriQuery(v); }).join('&') :\n            encodeUriQuery(name) + \"=\" + encodeUriQuery(value);\n    });\n    return strParams.length ? \"?\" + strParams.join(\"&\") : '';\n}\nvar SEGMENT_RE = /^[^\\/()?;=#]+/;\nfunction matchSegments(str) {\n    var match = str.match(SEGMENT_RE);\n    return match ? match[0] : '';\n}\nvar QUERY_PARAM_RE = /^[^=?&#]+/;\n// Return the name of the query param at the start of the string or an empty string\nfunction matchQueryParams(str) {\n    var match = str.match(QUERY_PARAM_RE);\n    return match ? match[0] : '';\n}\nvar QUERY_PARAM_VALUE_RE = /^[^?&#]+/;\n// Return the value of the query param at the start of the string or an empty string\nfunction matchUrlQueryParamValue(str) {\n    var match = str.match(QUERY_PARAM_VALUE_RE);\n    return match ? match[0] : '';\n}\nvar UrlParser = /** @class */ (function () {\n    function UrlParser(url) {\n        this.url = url;\n        this.remaining = url;\n    }\n    UrlParser.prototype.parseRootSegment = function () {\n        this.consumeOptional('/');\n        if (this.remaining === '' || this.peekStartsWith('?') || this.peekStartsWith('#')) {\n            return new UrlSegmentGroup([], {});\n        }\n        // The root segment group never has segments\n        return new UrlSegmentGroup([], this.parseChildren());\n    };\n    UrlParser.prototype.parseQueryParams = function () {\n        var params = {};\n        if (this.consumeOptional('?')) {\n            do {\n                this.parseQueryParam(params);\n            } while (this.consumeOptional('&'));\n        }\n        return params;\n    };\n    UrlParser.prototype.parseFragment = function () {\n        return this.consumeOptional('#') ? decodeURIComponent(this.remaining) : null;\n    };\n    UrlParser.prototype.parseChildren = function () {\n        if (this.remaining === '') {\n            return {};\n        }\n        this.consumeOptional('/');\n        var segments = [];\n        if (!this.peekStartsWith('(')) {\n            segments.push(this.parseSegment());\n        }\n        while (this.peekStartsWith('/') && !this.peekStartsWith('//') && !this.peekStartsWith('/(')) {\n            this.capture('/');\n            segments.push(this.parseSegment());\n        }\n        var children = {};\n        if (this.peekStartsWith('/(')) {\n            this.capture('/');\n            children = this.parseParens(true);\n        }\n        var res = {};\n        if (this.peekStartsWith('(')) {\n            res = this.parseParens(false);\n        }\n        if (segments.length > 0 || Object.keys(children).length > 0) {\n            res[PRIMARY_OUTLET] = new UrlSegmentGroup(segments, children);\n        }\n        return res;\n    };\n    // parse a segment with its matrix parameters\n    // ie `name;k1=v1;k2`\n    UrlParser.prototype.parseSegment = function () {\n        var path = matchSegments(this.remaining);\n        if (path === '' && this.peekStartsWith(';')) {\n            throw new Error(\"Empty path url segment cannot have parameters: '\" + this.remaining + \"'.\");\n        }\n        this.capture(path);\n        return new UrlSegment(decode(path), this.parseMatrixParams());\n    };\n    UrlParser.prototype.parseMatrixParams = function () {\n        var params = {};\n        while (this.consumeOptional(';')) {\n            this.parseParam(params);\n        }\n        return params;\n    };\n    UrlParser.prototype.parseParam = function (params) {\n        var key = matchSegments(this.remaining);\n        if (!key) {\n            return;\n        }\n        this.capture(key);\n        var value = '';\n        if (this.consumeOptional('=')) {\n            var valueMatch = matchSegments(this.remaining);\n            if (valueMatch) {\n                value = valueMatch;\n                this.capture(value);\n            }\n        }\n        params[decode(key)] = decode(value);\n    };\n    // Parse a single query parameter `name[=value]`\n    UrlParser.prototype.parseQueryParam = function (params) {\n        var key = matchQueryParams(this.remaining);\n        if (!key) {\n            return;\n        }\n        this.capture(key);\n        var value = '';\n        if (this.consumeOptional('=')) {\n            var valueMatch = matchUrlQueryParamValue(this.remaining);\n            if (valueMatch) {\n                value = valueMatch;\n                this.capture(value);\n            }\n        }\n        var decodedKey = decodeQuery(key);\n        var decodedVal = decodeQuery(value);\n        if (params.hasOwnProperty(decodedKey)) {\n            // Append to existing values\n            var currentVal = params[decodedKey];\n            if (!Array.isArray(currentVal)) {\n                currentVal = [currentVal];\n                params[decodedKey] = currentVal;\n            }\n            currentVal.push(decodedVal);\n        }\n        else {\n            // Create a new value\n            params[decodedKey] = decodedVal;\n        }\n    };\n    // parse `(a/b//outlet_name:c/d)`\n    UrlParser.prototype.parseParens = function (allowPrimary) {\n        var segments = {};\n        this.capture('(');\n        while (!this.consumeOptional(')') && this.remaining.length > 0) {\n            var path = matchSegments(this.remaining);\n            var next = this.remaining[path.length];\n            // if is is not one of these characters, then the segment was unescaped\n            // or the group was not closed\n            if (next !== '/' && next !== ')' && next !== ';') {\n                throw new Error(\"Cannot parse url '\" + this.url + \"'\");\n            }\n            var outletName = undefined;\n            if (path.indexOf(':') > -1) {\n                outletName = path.substr(0, path.indexOf(':'));\n                this.capture(outletName);\n                this.capture(':');\n            }\n            else if (allowPrimary) {\n                outletName = PRIMARY_OUTLET;\n            }\n            var children = this.parseChildren();\n            segments[outletName] = Object.keys(children).length === 1 ? children[PRIMARY_OUTLET] :\n                new UrlSegmentGroup([], children);\n            this.consumeOptional('//');\n        }\n        return segments;\n    };\n    UrlParser.prototype.peekStartsWith = function (str) { return this.remaining.startsWith(str); };\n    // Consumes the prefix when it is present and returns whether it has been consumed\n    UrlParser.prototype.consumeOptional = function (str) {\n        if (this.peekStartsWith(str)) {\n            this.remaining = this.remaining.substring(str.length);\n            return true;\n        }\n        return false;\n    };\n    UrlParser.prototype.capture = function (str) {\n        if (!this.consumeOptional(str)) {\n            throw new Error(\"Expected \\\"\" + str + \"\\\".\");\n        }\n    };\n    return UrlParser;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NoMatch = /** @class */ (function () {\n    function NoMatch(segmentGroup) {\n        this.segmentGroup = segmentGroup || null;\n    }\n    return NoMatch;\n}());\nvar AbsoluteRedirect = /** @class */ (function () {\n    function AbsoluteRedirect(urlTree) {\n        this.urlTree = urlTree;\n    }\n    return AbsoluteRedirect;\n}());\nfunction noMatch(segmentGroup) {\n    return new rxjs.Observable(function (obs) { return obs.error(new NoMatch(segmentGroup)); });\n}\nfunction absoluteRedirect(newTree) {\n    return new rxjs.Observable(function (obs) { return obs.error(new AbsoluteRedirect(newTree)); });\n}\nfunction namedOutletsRedirect(redirectTo) {\n    return new rxjs.Observable(function (obs) { return obs.error(new Error(\"Only absolute redirects can have named outlets. redirectTo: '\" + redirectTo + \"'\")); });\n}\nfunction canLoadFails(route) {\n    return new rxjs.Observable(function (obs) { return obs.error(navigationCancelingError(\"Cannot load children because the guard of the route \\\"path: '\" + route.path + \"'\\\" returned false\")); });\n}\n/**\n * Returns the `UrlTree` with the redirection applied.\n *\n * Lazy modules are loaded along the way.\n */\nfunction applyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config) {\n    return new ApplyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config).apply();\n}\nvar ApplyRedirects = /** @class */ (function () {\n    function ApplyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config) {\n        this.configLoader = configLoader;\n        this.urlSerializer = urlSerializer;\n        this.urlTree = urlTree;\n        this.config = config;\n        this.allowRedirects = true;\n        this.ngModule = moduleInjector.get(core.NgModuleRef);\n    }\n    ApplyRedirects.prototype.apply = function () {\n        var _this = this;\n        var expanded$ = this.expandSegmentGroup(this.ngModule, this.config, this.urlTree.root, PRIMARY_OUTLET);\n        var urlTrees$ = expanded$.pipe(operators.map(function (rootSegmentGroup) { return _this.createUrlTree(rootSegmentGroup, _this.urlTree.queryParams, _this.urlTree.fragment); }));\n        return urlTrees$.pipe(operators.catchError(function (e) {\n            if (e instanceof AbsoluteRedirect) {\n                // after an absolute redirect we do not apply any more redirects!\n                _this.allowRedirects = false;\n                // we need to run matching, so we can fetch all lazy-loaded modules\n                return _this.match(e.urlTree);\n            }\n            if (e instanceof NoMatch) {\n                throw _this.noMatchError(e);\n            }\n            throw e;\n        }));\n    };\n    ApplyRedirects.prototype.match = function (tree) {\n        var _this = this;\n        var expanded$ = this.expandSegmentGroup(this.ngModule, this.config, tree.root, PRIMARY_OUTLET);\n        var mapped$ = expanded$.pipe(operators.map(function (rootSegmentGroup) {\n            return _this.createUrlTree(rootSegmentGroup, tree.queryParams, tree.fragment);\n        }));\n        return mapped$.pipe(operators.catchError(function (e) {\n            if (e instanceof NoMatch) {\n                throw _this.noMatchError(e);\n            }\n            throw e;\n        }));\n    };\n    ApplyRedirects.prototype.noMatchError = function (e) {\n        return new Error(\"Cannot match any routes. URL Segment: '\" + e.segmentGroup + \"'\");\n    };\n    ApplyRedirects.prototype.createUrlTree = function (rootCandidate, queryParams, fragment) {\n        var root = rootCandidate.segments.length > 0 ?\n            new UrlSegmentGroup([], (_a = {}, _a[PRIMARY_OUTLET] = rootCandidate, _a)) :\n            rootCandidate;\n        return new UrlTree(root, queryParams, fragment);\n        var _a;\n    };\n    ApplyRedirects.prototype.expandSegmentGroup = function (ngModule, routes, segmentGroup, outlet) {\n        if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n            return this.expandChildren(ngModule, routes, segmentGroup)\n                .pipe(operators.map(function (children) { return new UrlSegmentGroup([], children); }));\n        }\n        return this.expandSegment(ngModule, segmentGroup, routes, segmentGroup.segments, outlet, true);\n    };\n    // Recursively expand segment groups for all the child outlets\n    ApplyRedirects.prototype.expandChildren = function (ngModule, routes, segmentGroup) {\n        var _this = this;\n        return waitForMap(segmentGroup.children, function (childOutlet, child) { return _this.expandSegmentGroup(ngModule, routes, child, childOutlet); });\n    };\n    ApplyRedirects.prototype.expandSegment = function (ngModule, segmentGroup, routes, segments, outlet, allowRedirects) {\n        var _this = this;\n        return rxjs.of.apply(void 0, __spread(routes)).pipe(operators.map(function (r) {\n            var expanded$ = _this.expandSegmentAgainstRoute(ngModule, segmentGroup, routes, r, segments, outlet, allowRedirects);\n            return expanded$.pipe(operators.catchError(function (e) {\n                if (e instanceof NoMatch) {\n                    // TODO(i): this return type doesn't match the declared Observable<UrlSegmentGroup> -\n                    // talk to Jason\n                    return rxjs.of(null);\n                }\n                throw e;\n            }));\n        }), operators.concatAll(), operators.first(function (s) { return !!s; }), operators.catchError(function (e, _) {\n            if (e instanceof rxjs.EmptyError || e.name === 'EmptyError') {\n                if (_this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n                    return rxjs.of(new UrlSegmentGroup([], {}));\n                }\n                throw new NoMatch(segmentGroup);\n            }\n            throw e;\n        }));\n    };\n    ApplyRedirects.prototype.noLeftoversInUrl = function (segmentGroup, segments, outlet) {\n        return segments.length === 0 && !segmentGroup.children[outlet];\n    };\n    ApplyRedirects.prototype.expandSegmentAgainstRoute = function (ngModule, segmentGroup, routes, route, paths, outlet, allowRedirects) {\n        if (getOutlet(route) !== outlet) {\n            return noMatch(segmentGroup);\n        }\n        if (route.redirectTo === undefined) {\n            return this.matchSegmentAgainstRoute(ngModule, segmentGroup, route, paths);\n        }\n        if (allowRedirects && this.allowRedirects) {\n            return this.expandSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, paths, outlet);\n        }\n        return noMatch(segmentGroup);\n    };\n    ApplyRedirects.prototype.expandSegmentAgainstRouteUsingRedirect = function (ngModule, segmentGroup, routes, route, segments, outlet) {\n        if (route.path === '**') {\n            return this.expandWildCardWithParamsAgainstRouteUsingRedirect(ngModule, routes, route, outlet);\n        }\n        return this.expandRegularSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, segments, outlet);\n    };\n    ApplyRedirects.prototype.expandWildCardWithParamsAgainstRouteUsingRedirect = function (ngModule, routes, route, outlet) {\n        var _this = this;\n        var newTree = this.applyRedirectCommands([], route.redirectTo, {});\n        if (route.redirectTo.startsWith('/')) {\n            return absoluteRedirect(newTree);\n        }\n        return this.lineralizeSegments(route, newTree).pipe(operators.mergeMap(function (newSegments) {\n            var group = new UrlSegmentGroup(newSegments, {});\n            return _this.expandSegment(ngModule, group, routes, newSegments, outlet, false);\n        }));\n    };\n    ApplyRedirects.prototype.expandRegularSegmentAgainstRouteUsingRedirect = function (ngModule, segmentGroup, routes, route, segments, outlet) {\n        var _this = this;\n        var _a = match(segmentGroup, route, segments), matched = _a.matched, consumedSegments = _a.consumedSegments, lastChild = _a.lastChild, positionalParamSegments = _a.positionalParamSegments;\n        if (!matched)\n            return noMatch(segmentGroup);\n        var newTree = this.applyRedirectCommands(consumedSegments, route.redirectTo, positionalParamSegments);\n        if (route.redirectTo.startsWith('/')) {\n            return absoluteRedirect(newTree);\n        }\n        return this.lineralizeSegments(route, newTree).pipe(operators.mergeMap(function (newSegments) {\n            return _this.expandSegment(ngModule, segmentGroup, routes, newSegments.concat(segments.slice(lastChild)), outlet, false);\n        }));\n    };\n    ApplyRedirects.prototype.matchSegmentAgainstRoute = function (ngModule, rawSegmentGroup, route, segments) {\n        var _this = this;\n        if (route.path === '**') {\n            if (route.loadChildren) {\n                return this.configLoader.load(ngModule.injector, route)\n                    .pipe(operators.map(function (cfg) {\n                    route._loadedConfig = cfg;\n                    return new UrlSegmentGroup(segments, {});\n                }));\n            }\n            return rxjs.of(new UrlSegmentGroup(segments, {}));\n        }\n        var _a = match(rawSegmentGroup, route, segments), matched = _a.matched, consumedSegments = _a.consumedSegments, lastChild = _a.lastChild;\n        if (!matched)\n            return noMatch(rawSegmentGroup);\n        var rawSlicedSegments = segments.slice(lastChild);\n        var childConfig$ = this.getChildConfig(ngModule, route);\n        return childConfig$.pipe(operators.mergeMap(function (routerConfig) {\n            var childModule = routerConfig.module;\n            var childConfig = routerConfig.routes;\n            var _a = split(rawSegmentGroup, consumedSegments, rawSlicedSegments, childConfig), segmentGroup = _a.segmentGroup, slicedSegments = _a.slicedSegments;\n            if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n                var expanded$_1 = _this.expandChildren(childModule, childConfig, segmentGroup);\n                return expanded$_1.pipe(operators.map(function (children) { return new UrlSegmentGroup(consumedSegments, children); }));\n            }\n            if (childConfig.length === 0 && slicedSegments.length === 0) {\n                return rxjs.of(new UrlSegmentGroup(consumedSegments, {}));\n            }\n            var expanded$ = _this.expandSegment(childModule, segmentGroup, childConfig, slicedSegments, PRIMARY_OUTLET, true);\n            return expanded$.pipe(operators.map(function (cs) {\n                return new UrlSegmentGroup(consumedSegments.concat(cs.segments), cs.children);\n            }));\n        }));\n    };\n    ApplyRedirects.prototype.getChildConfig = function (ngModule, route) {\n        var _this = this;\n        if (route.children) {\n            // The children belong to the same module\n            return rxjs.of(new LoadedRouterConfig(route.children, ngModule));\n        }\n        if (route.loadChildren) {\n            // lazy children belong to the loaded module\n            if (route._loadedConfig !== undefined) {\n                return rxjs.of(route._loadedConfig);\n            }\n            return runCanLoadGuard(ngModule.injector, route).pipe(operators.mergeMap(function (shouldLoad) {\n                if (shouldLoad) {\n                    return _this.configLoader.load(ngModule.injector, route)\n                        .pipe(operators.map(function (cfg) {\n                        route._loadedConfig = cfg;\n                        return cfg;\n                    }));\n                }\n                return canLoadFails(route);\n            }));\n        }\n        return rxjs.of(new LoadedRouterConfig([], ngModule));\n    };\n    ApplyRedirects.prototype.lineralizeSegments = function (route, urlTree) {\n        var res = [];\n        var c = urlTree.root;\n        while (true) {\n            res = res.concat(c.segments);\n            if (c.numberOfChildren === 0) {\n                return rxjs.of(res);\n            }\n            if (c.numberOfChildren > 1 || !c.children[PRIMARY_OUTLET]) {\n                return namedOutletsRedirect(route.redirectTo);\n            }\n            c = c.children[PRIMARY_OUTLET];\n        }\n    };\n    ApplyRedirects.prototype.applyRedirectCommands = function (segments, redirectTo, posParams) {\n        return this.applyRedirectCreatreUrlTree(redirectTo, this.urlSerializer.parse(redirectTo), segments, posParams);\n    };\n    ApplyRedirects.prototype.applyRedirectCreatreUrlTree = function (redirectTo, urlTree, segments, posParams) {\n        var newRoot = this.createSegmentGroup(redirectTo, urlTree.root, segments, posParams);\n        return new UrlTree(newRoot, this.createQueryParams(urlTree.queryParams, this.urlTree.queryParams), urlTree.fragment);\n    };\n    ApplyRedirects.prototype.createQueryParams = function (redirectToParams, actualParams) {\n        var res = {};\n        forEach(redirectToParams, function (v, k) {\n            var copySourceValue = typeof v === 'string' && v.startsWith(':');\n            if (copySourceValue) {\n                var sourceName = v.substring(1);\n                res[k] = actualParams[sourceName];\n            }\n            else {\n                res[k] = v;\n            }\n        });\n        return res;\n    };\n    ApplyRedirects.prototype.createSegmentGroup = function (redirectTo, group, segments, posParams) {\n        var _this = this;\n        var updatedSegments = this.createSegments(redirectTo, group.segments, segments, posParams);\n        var children = {};\n        forEach(group.children, function (child, name) {\n            children[name] = _this.createSegmentGroup(redirectTo, child, segments, posParams);\n        });\n        return new UrlSegmentGroup(updatedSegments, children);\n    };\n    ApplyRedirects.prototype.createSegments = function (redirectTo, redirectToSegments, actualSegments, posParams) {\n        var _this = this;\n        return redirectToSegments.map(function (s) { return s.path.startsWith(':') ? _this.findPosParam(redirectTo, s, posParams) :\n            _this.findOrReturn(s, actualSegments); });\n    };\n    ApplyRedirects.prototype.findPosParam = function (redirectTo, redirectToUrlSegment, posParams) {\n        var pos = posParams[redirectToUrlSegment.path.substring(1)];\n        if (!pos)\n            throw new Error(\"Cannot redirect to '\" + redirectTo + \"'. Cannot find '\" + redirectToUrlSegment.path + \"'.\");\n        return pos;\n    };\n    ApplyRedirects.prototype.findOrReturn = function (redirectToUrlSegment, actualSegments) {\n        var idx = 0;\n        try {\n            for (var actualSegments_1 = __values(actualSegments), actualSegments_1_1 = actualSegments_1.next(); !actualSegments_1_1.done; actualSegments_1_1 = actualSegments_1.next()) {\n                var s = actualSegments_1_1.value;\n                if (s.path === redirectToUrlSegment.path) {\n                    actualSegments.splice(idx);\n                    return s;\n                }\n                idx++;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (actualSegments_1_1 && !actualSegments_1_1.done && (_a = actualSegments_1.return)) _a.call(actualSegments_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return redirectToUrlSegment;\n        var e_1, _a;\n    };\n    return ApplyRedirects;\n}());\nfunction runCanLoadGuard(moduleInjector, route) {\n    var canLoad = route.canLoad;\n    if (!canLoad || canLoad.length === 0)\n        return rxjs.of(true);\n    var obs = rxjs.from(canLoad).pipe(operators.map(function (injectionToken) {\n        var guard = moduleInjector.get(injectionToken);\n        return wrapIntoObservable(guard.canLoad ? guard.canLoad(route) : guard(route));\n    }));\n    return andObservables(obs);\n}\nfunction match(segmentGroup, route, segments) {\n    if (route.path === '') {\n        if ((route.pathMatch === 'full') && (segmentGroup.hasChildren() || segments.length > 0)) {\n            return { matched: false, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n        }\n        return { matched: true, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n    }\n    var matcher = route.matcher || defaultUrlMatcher;\n    var res = matcher(segments, segmentGroup, route);\n    if (!res) {\n        return {\n            matched: false,\n            consumedSegments: [],\n            lastChild: 0,\n            positionalParamSegments: {},\n        };\n    }\n    return {\n        matched: true,\n        consumedSegments: res.consumed,\n        lastChild: res.consumed.length,\n        positionalParamSegments: res.posParams,\n    };\n}\nfunction split(segmentGroup, consumedSegments, slicedSegments, config) {\n    if (slicedSegments.length > 0 &&\n        containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n        var s = new UrlSegmentGroup(consumedSegments, createChildrenForEmptySegments(config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n        return { segmentGroup: mergeTrivialChildren(s), slicedSegments: [] };\n    }\n    if (slicedSegments.length === 0 &&\n        containsEmptyPathRedirects(segmentGroup, slicedSegments, config)) {\n        var s = new UrlSegmentGroup(segmentGroup.segments, addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, config, segmentGroup.children));\n        return { segmentGroup: mergeTrivialChildren(s), slicedSegments: slicedSegments };\n    }\n    return { segmentGroup: segmentGroup, slicedSegments: slicedSegments };\n}\nfunction mergeTrivialChildren(s) {\n    if (s.numberOfChildren === 1 && s.children[PRIMARY_OUTLET]) {\n        var c = s.children[PRIMARY_OUTLET];\n        return new UrlSegmentGroup(s.segments.concat(c.segments), c.children);\n    }\n    return s;\n}\nfunction addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, routes, children) {\n    var res = {};\n    try {\n        for (var routes_1 = __values(routes), routes_1_1 = routes_1.next(); !routes_1_1.done; routes_1_1 = routes_1.next()) {\n            var r = routes_1_1.value;\n            if (isEmptyPathRedirect(segmentGroup, slicedSegments, r) && !children[getOutlet(r)]) {\n                res[getOutlet(r)] = new UrlSegmentGroup([], {});\n            }\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (routes_1_1 && !routes_1_1.done && (_a = routes_1.return)) _a.call(routes_1);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    return __assign({}, children, res);\n    var e_2, _a;\n}\nfunction createChildrenForEmptySegments(routes, primarySegmentGroup) {\n    var res = {};\n    res[PRIMARY_OUTLET] = primarySegmentGroup;\n    try {\n        for (var routes_2 = __values(routes), routes_2_1 = routes_2.next(); !routes_2_1.done; routes_2_1 = routes_2.next()) {\n            var r = routes_2_1.value;\n            if (r.path === '' && getOutlet(r) !== PRIMARY_OUTLET) {\n                res[getOutlet(r)] = new UrlSegmentGroup([], {});\n            }\n        }\n    }\n    catch (e_3_1) { e_3 = { error: e_3_1 }; }\n    finally {\n        try {\n            if (routes_2_1 && !routes_2_1.done && (_a = routes_2.return)) _a.call(routes_2);\n        }\n        finally { if (e_3) throw e_3.error; }\n    }\n    return res;\n    var e_3, _a;\n}\nfunction containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, segments, routes) {\n    return routes.some(function (r) { return isEmptyPathRedirect(segmentGroup, segments, r) && getOutlet(r) !== PRIMARY_OUTLET; });\n}\nfunction containsEmptyPathRedirects(segmentGroup, segments, routes) {\n    return routes.some(function (r) { return isEmptyPathRedirect(segmentGroup, segments, r); });\n}\nfunction isEmptyPathRedirect(segmentGroup, segments, r) {\n    if ((segmentGroup.hasChildren() || segments.length > 0) && r.pathMatch === 'full') {\n        return false;\n    }\n    return r.path === '' && r.redirectTo !== undefined;\n}\nfunction getOutlet(route) {\n    return route.outlet || PRIMARY_OUTLET;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Tree = /** @class */ (function () {\n    function Tree(root) {\n        this._root = root;\n    }\n    Object.defineProperty(Tree.prototype, \"root\", {\n        get: function () { return this._root.value; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @internal\n     */\n    Tree.prototype.parent = function (t) {\n        var p = this.pathFromRoot(t);\n        return p.length > 1 ? p[p.length - 2] : null;\n    };\n    /**\n     * @internal\n     */\n    Tree.prototype.children = function (t) {\n        var n = findNode(t, this._root);\n        return n ? n.children.map(function (t) { return t.value; }) : [];\n    };\n    /**\n     * @internal\n     */\n    Tree.prototype.firstChild = function (t) {\n        var n = findNode(t, this._root);\n        return n && n.children.length > 0 ? n.children[0].value : null;\n    };\n    /**\n     * @internal\n     */\n    Tree.prototype.siblings = function (t) {\n        var p = findPath(t, this._root);\n        if (p.length < 2)\n            return [];\n        var c = p[p.length - 2].children.map(function (c) { return c.value; });\n        return c.filter(function (cc) { return cc !== t; });\n    };\n    /**\n     * @internal\n     */\n    Tree.prototype.pathFromRoot = function (t) { return findPath(t, this._root).map(function (s) { return s.value; }); };\n    return Tree;\n}());\n// DFS for the node matching the value\nfunction findNode(value, node) {\n    if (value === node.value)\n        return node;\n    try {\n        for (var _a = __values(node.children), _b = _a.next(); !_b.done; _b = _a.next()) {\n            var child = _b.value;\n            var node_1 = findNode(value, child);\n            if (node_1)\n                return node_1;\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return null;\n    var e_1, _c;\n}\n// Return the path to the node with the given value using DFS\nfunction findPath(value, node) {\n    if (value === node.value)\n        return [node];\n    try {\n        for (var _a = __values(node.children), _b = _a.next(); !_b.done; _b = _a.next()) {\n            var child = _b.value;\n            var path = findPath(value, child);\n            if (path.length) {\n                path.unshift(node);\n                return path;\n            }\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    return [];\n    var e_2, _c;\n}\nvar TreeNode = /** @class */ (function () {\n    function TreeNode(value, children) {\n        this.value = value;\n        this.children = children;\n    }\n    TreeNode.prototype.toString = function () { return \"TreeNode(\" + this.value + \")\"; };\n    return TreeNode;\n}());\n// Return the list of T indexed by outlet name\nfunction nodeChildrenAsMap(node) {\n    var map$$1 = {};\n    if (node) {\n        node.children.forEach(function (child) { return map$$1[child.value.outlet] = child; });\n    }\n    return map$$1;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Represents the state of the router.\n *\n * RouterState is a tree of activated routes. Every node in this tree knows about the \"consumed\" URL\n * segments, the extracted parameters, and the resolved data.\n *\n * ### Example\n *\n * ```\n * @Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const state: RouterState = router.routerState;\n *     const root: ActivatedRoute = state.root;\n *     const child = root.firstChild;\n *     const id: Observable<string> = child.params.map(p => p.id);\n *     //...\n *   }\n * }\n * ```\n *\n * See `ActivatedRoute` for more information.\n *\n *\n */\nvar RouterState = /** @class */ (function (_super) {\n    __extends(RouterState, _super);\n    /** @internal */\n    function RouterState(root, \n    /** The current snapshot of the router state */\n    snapshot) {\n        var _this = _super.call(this, root) || this;\n        _this.snapshot = snapshot;\n        setRouterState(_this, root);\n        return _this;\n    }\n    RouterState.prototype.toString = function () { return this.snapshot.toString(); };\n    return RouterState;\n}(Tree));\nfunction createEmptyState(urlTree, rootComponent) {\n    var snapshot = createEmptyStateSnapshot(urlTree, rootComponent);\n    var emptyUrl = new rxjs.BehaviorSubject([new UrlSegment('', {})]);\n    var emptyParams = new rxjs.BehaviorSubject({});\n    var emptyData = new rxjs.BehaviorSubject({});\n    var emptyQueryParams = new rxjs.BehaviorSubject({});\n    var fragment = new rxjs.BehaviorSubject('');\n    var activated = new ActivatedRoute(emptyUrl, emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, snapshot.root);\n    activated.snapshot = snapshot.root;\n    return new RouterState(new TreeNode(activated, []), snapshot);\n}\nfunction createEmptyStateSnapshot(urlTree, rootComponent) {\n    var emptyParams = {};\n    var emptyData = {};\n    var emptyQueryParams = {};\n    var fragment = '';\n    var activated = new ActivatedRouteSnapshot([], emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, null, urlTree.root, -1, {});\n    return new RouterStateSnapshot('', new TreeNode(activated, []));\n}\n/**\n * @description\n *\n * Contains the information about a route associated with a component loaded in an\n * outlet.  An `ActivatedRoute` can also be used to traverse the router state tree.\n *\n * ```\n * @Component({...})\n * class MyComponent {\n *   constructor(route: ActivatedRoute) {\n *     const id: Observable<string> = route.params.map(p => p.id);\n *     const url: Observable<string> = route.url.map(segments => segments.join(''));\n *     // route.data includes both `data` and `resolve`\n *     const user = route.data.map(d => d.user);\n *   }\n * }\n * ```\n *\n *\n */\nvar ActivatedRoute = /** @class */ (function () {\n    /** @internal */\n    function ActivatedRoute(\n    /** An observable of the URL segments matched by this route */\n    url, \n    /** An observable of the matrix parameters scoped to this route */\n    params, \n    /** An observable of the query parameters shared by all the routes */\n    queryParams, \n    /** An observable of the URL fragment shared by all the routes */\n    fragment, \n    /** An observable of the static and resolved data of this route. */\n    data, \n    /** The outlet name of the route. It's a constant */\n    outlet, \n    /** The component of the route. It's a constant */\n    // TODO(vsavkin): remove |string\n    component, futureSnapshot) {\n        this.url = url;\n        this.params = params;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n        this.data = data;\n        this.outlet = outlet;\n        this.component = component;\n        this._futureSnapshot = futureSnapshot;\n    }\n    Object.defineProperty(ActivatedRoute.prototype, \"routeConfig\", {\n        /** The configuration used to match this route */\n        get: function () { return this._futureSnapshot.routeConfig; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"root\", {\n        /** The root of the router state */\n        get: function () { return this._routerState.root; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"parent\", {\n        /** The parent of this route in the router state tree */\n        get: function () { return this._routerState.parent(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"firstChild\", {\n        /** The first child of this route in the router state tree */\n        get: function () { return this._routerState.firstChild(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"children\", {\n        /** The children of this route in the router state tree */\n        get: function () { return this._routerState.children(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"pathFromRoot\", {\n        /** The path from the root of the router state tree to this route */\n        get: function () { return this._routerState.pathFromRoot(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"paramMap\", {\n        get: function () {\n            if (!this._paramMap) {\n                this._paramMap = this.params.pipe(operators.map(function (p) { return convertToParamMap(p); }));\n            }\n            return this._paramMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"queryParamMap\", {\n        get: function () {\n            if (!this._queryParamMap) {\n                this._queryParamMap =\n                    this.queryParams.pipe(operators.map(function (p) { return convertToParamMap(p); }));\n            }\n            return this._queryParamMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ActivatedRoute.prototype.toString = function () {\n        return this.snapshot ? this.snapshot.toString() : \"Future(\" + this._futureSnapshot + \")\";\n    };\n    return ActivatedRoute;\n}());\n/**\n * Returns the inherited params, data, and resolve for a given route.\n * By default, this only inherits values up to the nearest path-less or component-less route.\n * @internal\n */\nfunction inheritedParamsDataResolve(route, paramsInheritanceStrategy) {\n    if (paramsInheritanceStrategy === void 0) { paramsInheritanceStrategy = 'emptyOnly'; }\n    var pathFromRoot = route.pathFromRoot;\n    var inheritingStartingFrom = 0;\n    if (paramsInheritanceStrategy !== 'always') {\n        inheritingStartingFrom = pathFromRoot.length - 1;\n        while (inheritingStartingFrom >= 1) {\n            var current = pathFromRoot[inheritingStartingFrom];\n            var parent_1 = pathFromRoot[inheritingStartingFrom - 1];\n            // current route is an empty path => inherits its parent's params and data\n            if (current.routeConfig && current.routeConfig.path === '') {\n                inheritingStartingFrom--;\n                // parent is componentless => current route should inherit its params and data\n            }\n            else if (!parent_1.component) {\n                inheritingStartingFrom--;\n            }\n            else {\n                break;\n            }\n        }\n    }\n    return flattenInherited(pathFromRoot.slice(inheritingStartingFrom));\n}\n/** @internal */\nfunction flattenInherited(pathFromRoot) {\n    return pathFromRoot.reduce(function (res, curr) {\n        var params = __assign({}, res.params, curr.params);\n        var data = __assign({}, res.data, curr.data);\n        var resolve = __assign({}, res.resolve, curr._resolvedData);\n        return { params: params, data: data, resolve: resolve };\n    }, { params: {}, data: {}, resolve: {} });\n}\n/**\n * @description\n *\n * Contains the information about a route associated with a component loaded in an\n * outlet at a particular moment in time. ActivatedRouteSnapshot can also be used to\n * traverse the router state tree.\n *\n * ```\n * @Component({templateUrl:'./my-component.html'})\n * class MyComponent {\n *   constructor(route: ActivatedRoute) {\n *     const id: string = route.snapshot.params.id;\n *     const url: string = route.snapshot.url.join('');\n *     const user = route.snapshot.data.user;\n *   }\n * }\n * ```\n *\n *\n */\nvar ActivatedRouteSnapshot = /** @class */ (function () {\n    /** @internal */\n    function ActivatedRouteSnapshot(\n    /** The URL segments matched by this route */\n    url, \n    /** The matrix parameters scoped to this route */\n    params, \n    /** The query parameters shared by all the routes */\n    queryParams, \n    /** The URL fragment shared by all the routes */\n    fragment, \n    /** The static and resolved data of this route */\n    data, \n    /** The outlet name of the route */\n    outlet, \n    /** The component of the route */\n    component, routeConfig, urlSegment, lastPathIndex, resolve) {\n        this.url = url;\n        this.params = params;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n        this.data = data;\n        this.outlet = outlet;\n        this.component = component;\n        this.routeConfig = routeConfig;\n        this._urlSegment = urlSegment;\n        this._lastPathIndex = lastPathIndex;\n        this._resolve = resolve;\n    }\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"root\", {\n        /** The root of the router state */\n        get: function () { return this._routerState.root; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"parent\", {\n        /** The parent of this route in the router state tree */\n        get: function () { return this._routerState.parent(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"firstChild\", {\n        /** The first child of this route in the router state tree */\n        get: function () { return this._routerState.firstChild(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"children\", {\n        /** The children of this route in the router state tree */\n        get: function () { return this._routerState.children(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"pathFromRoot\", {\n        /** The path from the root of the router state tree to this route */\n        get: function () { return this._routerState.pathFromRoot(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"paramMap\", {\n        get: function () {\n            if (!this._paramMap) {\n                this._paramMap = convertToParamMap(this.params);\n            }\n            return this._paramMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"queryParamMap\", {\n        get: function () {\n            if (!this._queryParamMap) {\n                this._queryParamMap = convertToParamMap(this.queryParams);\n            }\n            return this._queryParamMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ActivatedRouteSnapshot.prototype.toString = function () {\n        var url = this.url.map(function (segment) { return segment.toString(); }).join('/');\n        var matched = this.routeConfig ? this.routeConfig.path : '';\n        return \"Route(url:'\" + url + \"', path:'\" + matched + \"')\";\n    };\n    return ActivatedRouteSnapshot;\n}());\n/**\n * @description\n *\n * Represents the state of the router at a moment in time.\n *\n * This is a tree of activated route snapshots. Every node in this tree knows about\n * the \"consumed\" URL segments, the extracted parameters, and the resolved data.\n *\n * ### Example\n *\n * ```\n * @Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const state: RouterState = router.routerState;\n *     const snapshot: RouterStateSnapshot = state.snapshot;\n *     const root: ActivatedRouteSnapshot = snapshot.root;\n *     const child = root.firstChild;\n *     const id: Observable<string> = child.params.map(p => p.id);\n *     //...\n *   }\n * }\n * ```\n *\n *\n */\nvar RouterStateSnapshot = /** @class */ (function (_super) {\n    __extends(RouterStateSnapshot, _super);\n    /** @internal */\n    function RouterStateSnapshot(\n    /** The url from which this snapshot was created */\n    url, root) {\n        var _this = _super.call(this, root) || this;\n        _this.url = url;\n        setRouterState(_this, root);\n        return _this;\n    }\n    RouterStateSnapshot.prototype.toString = function () { return serializeNode(this._root); };\n    return RouterStateSnapshot;\n}(Tree));\nfunction setRouterState(state, node) {\n    node.value._routerState = state;\n    node.children.forEach(function (c) { return setRouterState(state, c); });\n}\nfunction serializeNode(node) {\n    var c = node.children.length > 0 ? \" { \" + node.children.map(serializeNode).join(', ') + \" } \" : '';\n    return \"\" + node.value + c;\n}\n/**\n * The expectation is that the activate route is created with the right set of parameters.\n * So we push new values into the observables only when they are not the initial values.\n * And we detect that by checking if the snapshot field is set.\n */\nfunction advanceActivatedRoute(route) {\n    if (route.snapshot) {\n        var currentSnapshot = route.snapshot;\n        var nextSnapshot = route._futureSnapshot;\n        route.snapshot = nextSnapshot;\n        if (!shallowEqual(currentSnapshot.queryParams, nextSnapshot.queryParams)) {\n            route.queryParams.next(nextSnapshot.queryParams);\n        }\n        if (currentSnapshot.fragment !== nextSnapshot.fragment) {\n            route.fragment.next(nextSnapshot.fragment);\n        }\n        if (!shallowEqual(currentSnapshot.params, nextSnapshot.params)) {\n            route.params.next(nextSnapshot.params);\n        }\n        if (!shallowEqualArrays(currentSnapshot.url, nextSnapshot.url)) {\n            route.url.next(nextSnapshot.url);\n        }\n        if (!shallowEqual(currentSnapshot.data, nextSnapshot.data)) {\n            route.data.next(nextSnapshot.data);\n        }\n    }\n    else {\n        route.snapshot = route._futureSnapshot;\n        // this is for resolved data\n        route.data.next(route._futureSnapshot.data);\n    }\n}\nfunction equalParamsAndUrlSegments(a, b) {\n    var equalUrlParams = shallowEqual(a.params, b.params) && equalSegments(a.url, b.url);\n    var parentsMismatch = !a.parent !== !b.parent;\n    return equalUrlParams && !parentsMismatch &&\n        (!a.parent || equalParamsAndUrlSegments(a.parent, b.parent));\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction createRouterState(routeReuseStrategy, curr, prevState) {\n    var root = createNode(routeReuseStrategy, curr._root, prevState ? prevState._root : undefined);\n    return new RouterState(root, curr);\n}\nfunction createNode(routeReuseStrategy, curr, prevState) {\n    // reuse an activated route that is currently displayed on the screen\n    if (prevState && routeReuseStrategy.shouldReuseRoute(curr.value, prevState.value.snapshot)) {\n        var value = prevState.value;\n        value._futureSnapshot = curr.value;\n        var children = createOrReuseChildren(routeReuseStrategy, curr, prevState);\n        return new TreeNode(value, children);\n        // retrieve an activated route that is used to be displayed, but is not currently displayed\n    }\n    else {\n        var detachedRouteHandle = routeReuseStrategy.retrieve(curr.value);\n        if (detachedRouteHandle) {\n            var tree = detachedRouteHandle.route;\n            setFutureSnapshotsOfActivatedRoutes(curr, tree);\n            return tree;\n        }\n        else {\n            var value = createActivatedRoute(curr.value);\n            var children = curr.children.map(function (c) { return createNode(routeReuseStrategy, c); });\n            return new TreeNode(value, children);\n        }\n    }\n}\nfunction setFutureSnapshotsOfActivatedRoutes(curr, result) {\n    if (curr.value.routeConfig !== result.value.routeConfig) {\n        throw new Error('Cannot reattach ActivatedRouteSnapshot created from a different route');\n    }\n    if (curr.children.length !== result.children.length) {\n        throw new Error('Cannot reattach ActivatedRouteSnapshot with a different number of children');\n    }\n    result.value._futureSnapshot = curr.value;\n    for (var i = 0; i < curr.children.length; ++i) {\n        setFutureSnapshotsOfActivatedRoutes(curr.children[i], result.children[i]);\n    }\n}\nfunction createOrReuseChildren(routeReuseStrategy, curr, prevState) {\n    return curr.children.map(function (child) {\n        try {\n            for (var _a = __values(prevState.children), _b = _a.next(); !_b.done; _b = _a.next()) {\n                var p = _b.value;\n                if (routeReuseStrategy.shouldReuseRoute(p.value.snapshot, child.value)) {\n                    return createNode(routeReuseStrategy, child, p);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return createNode(routeReuseStrategy, child);\n        var e_1, _c;\n    });\n}\nfunction createActivatedRoute(c) {\n    return new ActivatedRoute(new rxjs.BehaviorSubject(c.url), new rxjs.BehaviorSubject(c.params), new rxjs.BehaviorSubject(c.queryParams), new rxjs.BehaviorSubject(c.fragment), new rxjs.BehaviorSubject(c.data), c.outlet, c.component, c);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction createUrlTree(route, urlTree, commands, queryParams, fragment) {\n    if (commands.length === 0) {\n        return tree(urlTree.root, urlTree.root, urlTree, queryParams, fragment);\n    }\n    var nav = computeNavigation(commands);\n    if (nav.toRoot()) {\n        return tree(urlTree.root, new UrlSegmentGroup([], {}), urlTree, queryParams, fragment);\n    }\n    var startingPosition = findStartingPosition(nav, urlTree, route);\n    var segmentGroup = startingPosition.processChildren ?\n        updateSegmentGroupChildren(startingPosition.segmentGroup, startingPosition.index, nav.commands) :\n        updateSegmentGroup(startingPosition.segmentGroup, startingPosition.index, nav.commands);\n    return tree(startingPosition.segmentGroup, segmentGroup, urlTree, queryParams, fragment);\n}\nfunction isMatrixParams(command) {\n    return typeof command === 'object' && command != null && !command.outlets && !command.segmentPath;\n}\nfunction tree(oldSegmentGroup, newSegmentGroup, urlTree, queryParams, fragment) {\n    var qp = {};\n    if (queryParams) {\n        forEach(queryParams, function (value, name) {\n            qp[name] = Array.isArray(value) ? value.map(function (v) { return \"\" + v; }) : \"\" + value;\n        });\n    }\n    if (urlTree.root === oldSegmentGroup) {\n        return new UrlTree(newSegmentGroup, qp, fragment);\n    }\n    return new UrlTree(replaceSegment(urlTree.root, oldSegmentGroup, newSegmentGroup), qp, fragment);\n}\nfunction replaceSegment(current, oldSegment, newSegment) {\n    var children = {};\n    forEach(current.children, function (c, outletName) {\n        if (c === oldSegment) {\n            children[outletName] = newSegment;\n        }\n        else {\n            children[outletName] = replaceSegment(c, oldSegment, newSegment);\n        }\n    });\n    return new UrlSegmentGroup(current.segments, children);\n}\nvar Navigation = /** @class */ (function () {\n    function Navigation(isAbsolute, numberOfDoubleDots, commands) {\n        this.isAbsolute = isAbsolute;\n        this.numberOfDoubleDots = numberOfDoubleDots;\n        this.commands = commands;\n        if (isAbsolute && commands.length > 0 && isMatrixParams(commands[0])) {\n            throw new Error('Root segment cannot have matrix parameters');\n        }\n        var cmdWithOutlet = commands.find(function (c) { return typeof c === 'object' && c != null && c.outlets; });\n        if (cmdWithOutlet && cmdWithOutlet !== last$1(commands)) {\n            throw new Error('{outlets:{}} has to be the last command');\n        }\n    }\n    Navigation.prototype.toRoot = function () {\n        return this.isAbsolute && this.commands.length === 1 && this.commands[0] == '/';\n    };\n    return Navigation;\n}());\n/** Transforms commands to a normalized `Navigation` */\nfunction computeNavigation(commands) {\n    if ((typeof commands[0] === 'string') && commands.length === 1 && commands[0] === '/') {\n        return new Navigation(true, 0, commands);\n    }\n    var numberOfDoubleDots = 0;\n    var isAbsolute = false;\n    var res = commands.reduce(function (res, cmd, cmdIdx) {\n        if (typeof cmd === 'object' && cmd != null) {\n            if (cmd.outlets) {\n                var outlets_1 = {};\n                forEach(cmd.outlets, function (commands, name) {\n                    outlets_1[name] = typeof commands === 'string' ? commands.split('/') : commands;\n                });\n                return __spread(res, [{ outlets: outlets_1 }]);\n            }\n            if (cmd.segmentPath) {\n                return __spread(res, [cmd.segmentPath]);\n            }\n        }\n        if (!(typeof cmd === 'string')) {\n            return __spread(res, [cmd]);\n        }\n        if (cmdIdx === 0) {\n            cmd.split('/').forEach(function (urlPart, partIndex) {\n                if (partIndex == 0 && urlPart === '.') {\n                    // skip './a'\n                }\n                else if (partIndex == 0 && urlPart === '') { //  '/a'\n                    isAbsolute = true;\n                }\n                else if (urlPart === '..') { //  '../a'\n                    numberOfDoubleDots++;\n                }\n                else if (urlPart != '') {\n                    res.push(urlPart);\n                }\n            });\n            return res;\n        }\n        return __spread(res, [cmd]);\n    }, []);\n    return new Navigation(isAbsolute, numberOfDoubleDots, res);\n}\nvar Position = /** @class */ (function () {\n    function Position(segmentGroup, processChildren, index) {\n        this.segmentGroup = segmentGroup;\n        this.processChildren = processChildren;\n        this.index = index;\n    }\n    return Position;\n}());\nfunction findStartingPosition(nav, tree, route) {\n    if (nav.isAbsolute) {\n        return new Position(tree.root, true, 0);\n    }\n    if (route.snapshot._lastPathIndex === -1) {\n        return new Position(route.snapshot._urlSegment, true, 0);\n    }\n    var modifier = isMatrixParams(nav.commands[0]) ? 0 : 1;\n    var index = route.snapshot._lastPathIndex + modifier;\n    return createPositionApplyingDoubleDots(route.snapshot._urlSegment, index, nav.numberOfDoubleDots);\n}\nfunction createPositionApplyingDoubleDots(group, index, numberOfDoubleDots) {\n    var g = group;\n    var ci = index;\n    var dd = numberOfDoubleDots;\n    while (dd > ci) {\n        dd -= ci;\n        g = g.parent;\n        if (!g) {\n            throw new Error('Invalid number of \\'../\\'');\n        }\n        ci = g.segments.length;\n    }\n    return new Position(g, false, ci - dd);\n}\nfunction getPath(command) {\n    if (typeof command === 'object' && command != null && command.outlets) {\n        return command.outlets[PRIMARY_OUTLET];\n    }\n    return \"\" + command;\n}\nfunction getOutlets(commands) {\n    if (!(typeof commands[0] === 'object'))\n        return _a = {}, _a[PRIMARY_OUTLET] = commands, _a;\n    if (commands[0].outlets === undefined)\n        return _b = {}, _b[PRIMARY_OUTLET] = commands, _b;\n    return commands[0].outlets;\n    var _a, _b;\n}\nfunction updateSegmentGroup(segmentGroup, startIndex, commands) {\n    if (!segmentGroup) {\n        segmentGroup = new UrlSegmentGroup([], {});\n    }\n    if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n        return updateSegmentGroupChildren(segmentGroup, startIndex, commands);\n    }\n    var m = prefixedWith(segmentGroup, startIndex, commands);\n    var slicedCommands = commands.slice(m.commandIndex);\n    if (m.match && m.pathIndex < segmentGroup.segments.length) {\n        var g = new UrlSegmentGroup(segmentGroup.segments.slice(0, m.pathIndex), {});\n        g.children[PRIMARY_OUTLET] =\n            new UrlSegmentGroup(segmentGroup.segments.slice(m.pathIndex), segmentGroup.children);\n        return updateSegmentGroupChildren(g, 0, slicedCommands);\n    }\n    else if (m.match && slicedCommands.length === 0) {\n        return new UrlSegmentGroup(segmentGroup.segments, {});\n    }\n    else if (m.match && !segmentGroup.hasChildren()) {\n        return createNewSegmentGroup(segmentGroup, startIndex, commands);\n    }\n    else if (m.match) {\n        return updateSegmentGroupChildren(segmentGroup, 0, slicedCommands);\n    }\n    else {\n        return createNewSegmentGroup(segmentGroup, startIndex, commands);\n    }\n}\nfunction updateSegmentGroupChildren(segmentGroup, startIndex, commands) {\n    if (commands.length === 0) {\n        return new UrlSegmentGroup(segmentGroup.segments, {});\n    }\n    else {\n        var outlets_2 = getOutlets(commands);\n        var children_1 = {};\n        forEach(outlets_2, function (commands, outlet) {\n            if (commands !== null) {\n                children_1[outlet] = updateSegmentGroup(segmentGroup.children[outlet], startIndex, commands);\n            }\n        });\n        forEach(segmentGroup.children, function (child, childOutlet) {\n            if (outlets_2[childOutlet] === undefined) {\n                children_1[childOutlet] = child;\n            }\n        });\n        return new UrlSegmentGroup(segmentGroup.segments, children_1);\n    }\n}\nfunction prefixedWith(segmentGroup, startIndex, commands) {\n    var currentCommandIndex = 0;\n    var currentPathIndex = startIndex;\n    var noMatch = { match: false, pathIndex: 0, commandIndex: 0 };\n    while (currentPathIndex < segmentGroup.segments.length) {\n        if (currentCommandIndex >= commands.length)\n            return noMatch;\n        var path = segmentGroup.segments[currentPathIndex];\n        var curr = getPath(commands[currentCommandIndex]);\n        var next = currentCommandIndex < commands.length - 1 ? commands[currentCommandIndex + 1] : null;\n        if (currentPathIndex > 0 && curr === undefined)\n            break;\n        if (curr && next && (typeof next === 'object') && next.outlets === undefined) {\n            if (!compare(curr, next, path))\n                return noMatch;\n            currentCommandIndex += 2;\n        }\n        else {\n            if (!compare(curr, {}, path))\n                return noMatch;\n            currentCommandIndex++;\n        }\n        currentPathIndex++;\n    }\n    return { match: true, pathIndex: currentPathIndex, commandIndex: currentCommandIndex };\n}\nfunction createNewSegmentGroup(segmentGroup, startIndex, commands) {\n    var paths = segmentGroup.segments.slice(0, startIndex);\n    var i = 0;\n    while (i < commands.length) {\n        if (typeof commands[i] === 'object' && commands[i].outlets !== undefined) {\n            var children = createNewSegmentChildren(commands[i].outlets);\n            return new UrlSegmentGroup(paths, children);\n        }\n        // if we start with an object literal, we need to reuse the path part from the segment\n        if (i === 0 && isMatrixParams(commands[0])) {\n            var p = segmentGroup.segments[startIndex];\n            paths.push(new UrlSegment(p.path, commands[0]));\n            i++;\n            continue;\n        }\n        var curr = getPath(commands[i]);\n        var next = (i < commands.length - 1) ? commands[i + 1] : null;\n        if (curr && next && isMatrixParams(next)) {\n            paths.push(new UrlSegment(curr, stringify(next)));\n            i += 2;\n        }\n        else {\n            paths.push(new UrlSegment(curr, {}));\n            i++;\n        }\n    }\n    return new UrlSegmentGroup(paths, {});\n}\nfunction createNewSegmentChildren(outlets) {\n    var children = {};\n    forEach(outlets, function (commands, outlet) {\n        if (commands !== null) {\n            children[outlet] = createNewSegmentGroup(new UrlSegmentGroup([], {}), 0, commands);\n        }\n    });\n    return children;\n}\nfunction stringify(params) {\n    var res = {};\n    forEach(params, function (v, k) { return res[k] = \"\" + v; });\n    return res;\n}\nfunction compare(path, params, segment) {\n    return path == segment.path && shallowEqual(params, segment.parameters);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CanActivate = /** @class */ (function () {\n    function CanActivate(path) {\n        this.path = path;\n        this.route = this.path[this.path.length - 1];\n    }\n    return CanActivate;\n}());\nvar CanDeactivate = /** @class */ (function () {\n    function CanDeactivate(component, route) {\n        this.component = component;\n        this.route = route;\n    }\n    return CanDeactivate;\n}());\n/**\n * This class bundles the actions involved in preactivation of a route.\n */\nvar PreActivation = /** @class */ (function () {\n    function PreActivation(future, curr, moduleInjector, forwardEvent) {\n        this.future = future;\n        this.curr = curr;\n        this.moduleInjector = moduleInjector;\n        this.forwardEvent = forwardEvent;\n        this.canActivateChecks = [];\n        this.canDeactivateChecks = [];\n    }\n    PreActivation.prototype.initialize = function (parentContexts) {\n        var futureRoot = this.future._root;\n        var currRoot = this.curr ? this.curr._root : null;\n        this.setupChildRouteGuards(futureRoot, currRoot, parentContexts, [futureRoot.value]);\n    };\n    PreActivation.prototype.checkGuards = function () {\n        var _this = this;\n        if (!this.isDeactivating() && !this.isActivating()) {\n            return rxjs.of(true);\n        }\n        var canDeactivate$ = this.runCanDeactivateChecks();\n        return canDeactivate$.pipe(operators.mergeMap(function (canDeactivate) { return canDeactivate ? _this.runCanActivateChecks() : rxjs.of(false); }));\n    };\n    PreActivation.prototype.resolveData = function (paramsInheritanceStrategy) {\n        var _this = this;\n        if (!this.isActivating())\n            return rxjs.of(null);\n        return rxjs.from(this.canActivateChecks)\n            .pipe(operators.concatMap(function (check) { return _this.runResolve(check.route, paramsInheritanceStrategy); }), operators.reduce(function (_, __) { return _; }));\n    };\n    PreActivation.prototype.isDeactivating = function () { return this.canDeactivateChecks.length !== 0; };\n    PreActivation.prototype.isActivating = function () { return this.canActivateChecks.length !== 0; };\n    /**\n     * Iterates over child routes and calls recursive `setupRouteGuards` to get `this` instance in\n     * proper state to run `checkGuards()` method.\n     */\n    PreActivation.prototype.setupChildRouteGuards = function (futureNode, currNode, contexts, futurePath) {\n        var _this = this;\n        var prevChildren = nodeChildrenAsMap(currNode);\n        // Process the children of the future route\n        futureNode.children.forEach(function (c) {\n            _this.setupRouteGuards(c, prevChildren[c.value.outlet], contexts, futurePath.concat([c.value]));\n            delete prevChildren[c.value.outlet];\n        });\n        // Process any children left from the current route (not active for the future route)\n        forEach(prevChildren, function (v, k) {\n            return _this.deactivateRouteAndItsChildren(v, contexts.getContext(k));\n        });\n    };\n    /**\n     * Iterates over child routes and calls recursive `setupRouteGuards` to get `this` instance in\n     * proper state to run `checkGuards()` method.\n     */\n    PreActivation.prototype.setupRouteGuards = function (futureNode, currNode, parentContexts, futurePath) {\n        var future = futureNode.value;\n        var curr = currNode ? currNode.value : null;\n        var context = parentContexts ? parentContexts.getContext(futureNode.value.outlet) : null;\n        // reusing the node\n        if (curr && future.routeConfig === curr.routeConfig) {\n            var shouldRunGuardsAndResolvers = this.shouldRunGuardsAndResolvers(curr, future, future.routeConfig.runGuardsAndResolvers);\n            if (shouldRunGuardsAndResolvers) {\n                this.canActivateChecks.push(new CanActivate(futurePath));\n            }\n            else {\n                // we need to set the data\n                future.data = curr.data;\n                future._resolvedData = curr._resolvedData;\n            }\n            // If we have a component, we need to go through an outlet.\n            if (future.component) {\n                this.setupChildRouteGuards(futureNode, currNode, context ? context.children : null, futurePath);\n                // if we have a componentless route, we recurse but keep the same outlet map.\n            }\n            else {\n                this.setupChildRouteGuards(futureNode, currNode, parentContexts, futurePath);\n            }\n            if (shouldRunGuardsAndResolvers) {\n                var outlet = context.outlet;\n                this.canDeactivateChecks.push(new CanDeactivate(outlet.component, curr));\n            }\n        }\n        else {\n            if (curr) {\n                this.deactivateRouteAndItsChildren(currNode, context);\n            }\n            this.canActivateChecks.push(new CanActivate(futurePath));\n            // If we have a component, we need to go through an outlet.\n            if (future.component) {\n                this.setupChildRouteGuards(futureNode, null, context ? context.children : null, futurePath);\n                // if we have a componentless route, we recurse but keep the same outlet map.\n            }\n            else {\n                this.setupChildRouteGuards(futureNode, null, parentContexts, futurePath);\n            }\n        }\n    };\n    PreActivation.prototype.shouldRunGuardsAndResolvers = function (curr, future, mode) {\n        switch (mode) {\n            case 'always':\n                return true;\n            case 'paramsOrQueryParamsChange':\n                return !equalParamsAndUrlSegments(curr, future) ||\n                    !shallowEqual(curr.queryParams, future.queryParams);\n            case 'paramsChange':\n            default:\n                return !equalParamsAndUrlSegments(curr, future);\n        }\n    };\n    PreActivation.prototype.deactivateRouteAndItsChildren = function (route, context) {\n        var _this = this;\n        var children = nodeChildrenAsMap(route);\n        var r = route.value;\n        forEach(children, function (node, childName) {\n            if (!r.component) {\n                _this.deactivateRouteAndItsChildren(node, context);\n            }\n            else if (context) {\n                _this.deactivateRouteAndItsChildren(node, context.children.getContext(childName));\n            }\n            else {\n                _this.deactivateRouteAndItsChildren(node, null);\n            }\n        });\n        if (!r.component) {\n            this.canDeactivateChecks.push(new CanDeactivate(null, r));\n        }\n        else if (context && context.outlet && context.outlet.isActivated) {\n            this.canDeactivateChecks.push(new CanDeactivate(context.outlet.component, r));\n        }\n        else {\n            this.canDeactivateChecks.push(new CanDeactivate(null, r));\n        }\n    };\n    PreActivation.prototype.runCanDeactivateChecks = function () {\n        var _this = this;\n        return rxjs.from(this.canDeactivateChecks)\n            .pipe(operators.mergeMap(function (check) { return _this.runCanDeactivate(check.component, check.route); }), operators.every(function (result) { return result === true; }));\n    };\n    PreActivation.prototype.runCanActivateChecks = function () {\n        var _this = this;\n        return rxjs.from(this.canActivateChecks)\n            .pipe(operators.concatMap(function (check) { return andObservables(rxjs.from([\n            _this.fireChildActivationStart(check.route.parent),\n            _this.fireActivationStart(check.route), _this.runCanActivateChild(check.path),\n            _this.runCanActivate(check.route)\n        ])); }), operators.every(function (result) { return result === true; }));\n        // this.fireChildActivationStart(check.path),\n    };\n    /**\n     * This should fire off `ActivationStart` events for each route being activated at this\n     * level.\n     * In other words, if you're activating `a` and `b` below, `path` will contain the\n     * `ActivatedRouteSnapshot`s for both and we will fire `ActivationStart` for both. Always\n     * return\n     * `true` so checks continue to run.\n     */\n    PreActivation.prototype.fireActivationStart = function (snapshot) {\n        if (snapshot !== null && this.forwardEvent) {\n            this.forwardEvent(new ActivationStart(snapshot));\n        }\n        return rxjs.of(true);\n    };\n    /**\n     * This should fire off `ChildActivationStart` events for each route being activated at this\n     * level.\n     * In other words, if you're activating `a` and `b` below, `path` will contain the\n     * `ActivatedRouteSnapshot`s for both and we will fire `ChildActivationStart` for both. Always\n     * return\n     * `true` so checks continue to run.\n     */\n    PreActivation.prototype.fireChildActivationStart = function (snapshot) {\n        if (snapshot !== null && this.forwardEvent) {\n            this.forwardEvent(new ChildActivationStart(snapshot));\n        }\n        return rxjs.of(true);\n    };\n    PreActivation.prototype.runCanActivate = function (future) {\n        var _this = this;\n        var canActivate = future.routeConfig ? future.routeConfig.canActivate : null;\n        if (!canActivate || canActivate.length === 0)\n            return rxjs.of(true);\n        var obs = rxjs.from(canActivate).pipe(operators.map(function (c) {\n            var guard = _this.getToken(c, future);\n            var observable;\n            if (guard.canActivate) {\n                observable = wrapIntoObservable(guard.canActivate(future, _this.future));\n            }\n            else {\n                observable = wrapIntoObservable(guard(future, _this.future));\n            }\n            return observable.pipe(operators.first());\n        }));\n        return andObservables(obs);\n    };\n    PreActivation.prototype.runCanActivateChild = function (path) {\n        var _this = this;\n        var future = path[path.length - 1];\n        var canActivateChildGuards = path.slice(0, path.length - 1)\n            .reverse()\n            .map(function (p) { return _this.extractCanActivateChild(p); })\n            .filter(function (_) { return _ !== null; });\n        return andObservables(rxjs.from(canActivateChildGuards).pipe(operators.map(function (d) {\n            var obs = rxjs.from(d.guards).pipe(operators.map(function (c) {\n                var guard = _this.getToken(c, d.node);\n                var observable;\n                if (guard.canActivateChild) {\n                    observable = wrapIntoObservable(guard.canActivateChild(future, _this.future));\n                }\n                else {\n                    observable = wrapIntoObservable(guard(future, _this.future));\n                }\n                return observable.pipe(operators.first());\n            }));\n            return andObservables(obs);\n        })));\n    };\n    PreActivation.prototype.extractCanActivateChild = function (p) {\n        var canActivateChild = p.routeConfig ? p.routeConfig.canActivateChild : null;\n        if (!canActivateChild || canActivateChild.length === 0)\n            return null;\n        return { node: p, guards: canActivateChild };\n    };\n    PreActivation.prototype.runCanDeactivate = function (component, curr) {\n        var _this = this;\n        var canDeactivate = curr && curr.routeConfig ? curr.routeConfig.canDeactivate : null;\n        if (!canDeactivate || canDeactivate.length === 0)\n            return rxjs.of(true);\n        var canDeactivate$ = rxjs.from(canDeactivate).pipe(operators.mergeMap(function (c) {\n            var guard = _this.getToken(c, curr);\n            var observable;\n            if (guard.canDeactivate) {\n                observable =\n                    wrapIntoObservable(guard.canDeactivate(component, curr, _this.curr, _this.future));\n            }\n            else {\n                observable = wrapIntoObservable(guard(component, curr, _this.curr, _this.future));\n            }\n            return observable.pipe(operators.first());\n        }));\n        return canDeactivate$.pipe(operators.every(function (result) { return result === true; }));\n    };\n    PreActivation.prototype.runResolve = function (future, paramsInheritanceStrategy) {\n        var resolve = future._resolve;\n        return this.resolveNode(resolve, future).pipe(operators.map(function (resolvedData) {\n            future._resolvedData = resolvedData;\n            future.data = __assign({}, future.data, inheritedParamsDataResolve(future, paramsInheritanceStrategy).resolve);\n            return null;\n        }));\n    };\n    PreActivation.prototype.resolveNode = function (resolve, future) {\n        var _this = this;\n        var keys = Object.keys(resolve);\n        if (keys.length === 0) {\n            return rxjs.of({});\n        }\n        if (keys.length === 1) {\n            var key_1 = keys[0];\n            return this.getResolver(resolve[key_1], future).pipe(operators.map(function (value) {\n                return _a = {}, _a[key_1] = value, _a;\n                var _a;\n            }));\n        }\n        var data = {};\n        var runningResolvers$ = rxjs.from(keys).pipe(operators.mergeMap(function (key) {\n            return _this.getResolver(resolve[key], future).pipe(operators.map(function (value) {\n                data[key] = value;\n                return value;\n            }));\n        }));\n        return runningResolvers$.pipe(operators.last(), operators.map(function () { return data; }));\n    };\n    PreActivation.prototype.getResolver = function (injectionToken, future) {\n        var resolver = this.getToken(injectionToken, future);\n        return resolver.resolve ? wrapIntoObservable(resolver.resolve(future, this.future)) :\n            wrapIntoObservable(resolver(future, this.future));\n    };\n    PreActivation.prototype.getToken = function (token, snapshot) {\n        var config = closestLoadedConfig(snapshot);\n        var injector = config ? config.module.injector : this.moduleInjector;\n        return injector.get(token);\n    };\n    return PreActivation;\n}());\nfunction closestLoadedConfig(snapshot) {\n    if (!snapshot)\n        return null;\n    for (var s = snapshot.parent; s; s = s.parent) {\n        var route = s.routeConfig;\n        if (route && route._loadedConfig)\n            return route._loadedConfig;\n    }\n    return null;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NoMatch$1 = /** @class */ (function () {\n    function NoMatch() {\n    }\n    return NoMatch;\n}());\nfunction recognize(rootComponentType, config, urlTree, url, paramsInheritanceStrategy) {\n    if (paramsInheritanceStrategy === void 0) { paramsInheritanceStrategy = 'emptyOnly'; }\n    return new Recognizer(rootComponentType, config, urlTree, url, paramsInheritanceStrategy)\n        .recognize();\n}\nvar Recognizer = /** @class */ (function () {\n    function Recognizer(rootComponentType, config, urlTree, url, paramsInheritanceStrategy) {\n        this.rootComponentType = rootComponentType;\n        this.config = config;\n        this.urlTree = urlTree;\n        this.url = url;\n        this.paramsInheritanceStrategy = paramsInheritanceStrategy;\n    }\n    Recognizer.prototype.recognize = function () {\n        try {\n            var rootSegmentGroup = split$1(this.urlTree.root, [], [], this.config).segmentGroup;\n            var children = this.processSegmentGroup(this.config, rootSegmentGroup, PRIMARY_OUTLET);\n            var root = new ActivatedRouteSnapshot([], Object.freeze({}), Object.freeze(__assign({}, this.urlTree.queryParams)), this.urlTree.fragment, {}, PRIMARY_OUTLET, this.rootComponentType, null, this.urlTree.root, -1, {});\n            var rootNode = new TreeNode(root, children);\n            var routeState = new RouterStateSnapshot(this.url, rootNode);\n            this.inheritParamsAndData(routeState._root);\n            return rxjs.of(routeState);\n        }\n        catch (e) {\n            return new rxjs.Observable(function (obs) { return obs.error(e); });\n        }\n    };\n    Recognizer.prototype.inheritParamsAndData = function (routeNode) {\n        var _this = this;\n        var route = routeNode.value;\n        var i = inheritedParamsDataResolve(route, this.paramsInheritanceStrategy);\n        route.params = Object.freeze(i.params);\n        route.data = Object.freeze(i.data);\n        routeNode.children.forEach(function (n) { return _this.inheritParamsAndData(n); });\n    };\n    Recognizer.prototype.processSegmentGroup = function (config, segmentGroup, outlet) {\n        if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n            return this.processChildren(config, segmentGroup);\n        }\n        return this.processSegment(config, segmentGroup, segmentGroup.segments, outlet);\n    };\n    Recognizer.prototype.processChildren = function (config, segmentGroup) {\n        var _this = this;\n        var children = mapChildrenIntoArray(segmentGroup, function (child, childOutlet) { return _this.processSegmentGroup(config, child, childOutlet); });\n        checkOutletNameUniqueness(children);\n        sortActivatedRouteSnapshots(children);\n        return children;\n    };\n    Recognizer.prototype.processSegment = function (config, segmentGroup, segments, outlet) {\n        try {\n            for (var config_1 = __values(config), config_1_1 = config_1.next(); !config_1_1.done; config_1_1 = config_1.next()) {\n                var r = config_1_1.value;\n                try {\n                    return this.processSegmentAgainstRoute(r, segmentGroup, segments, outlet);\n                }\n                catch (e) {\n                    if (!(e instanceof NoMatch$1))\n                        throw e;\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (config_1_1 && !config_1_1.done && (_a = config_1.return)) _a.call(config_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        if (this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n            return [];\n        }\n        throw new NoMatch$1();\n        var e_1, _a;\n    };\n    Recognizer.prototype.noLeftoversInUrl = function (segmentGroup, segments, outlet) {\n        return segments.length === 0 && !segmentGroup.children[outlet];\n    };\n    Recognizer.prototype.processSegmentAgainstRoute = function (route, rawSegment, segments, outlet) {\n        if (route.redirectTo)\n            throw new NoMatch$1();\n        if ((route.outlet || PRIMARY_OUTLET) !== outlet)\n            throw new NoMatch$1();\n        var snapshot;\n        var consumedSegments = [];\n        var rawSlicedSegments = [];\n        if (route.path === '**') {\n            var params = segments.length > 0 ? last$1(segments).parameters : {};\n            snapshot = new ActivatedRouteSnapshot(segments, params, Object.freeze(__assign({}, this.urlTree.queryParams)), this.urlTree.fragment, getData(route), outlet, route.component, route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + segments.length, getResolve(route));\n        }\n        else {\n            var result = match$1(rawSegment, route, segments);\n            consumedSegments = result.consumedSegments;\n            rawSlicedSegments = segments.slice(result.lastChild);\n            snapshot = new ActivatedRouteSnapshot(consumedSegments, result.parameters, Object.freeze(__assign({}, this.urlTree.queryParams)), this.urlTree.fragment, getData(route), outlet, route.component, route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + consumedSegments.length, getResolve(route));\n        }\n        var childConfig = getChildConfig(route);\n        var _a = split$1(rawSegment, consumedSegments, rawSlicedSegments, childConfig), segmentGroup = _a.segmentGroup, slicedSegments = _a.slicedSegments;\n        if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n            var children_1 = this.processChildren(childConfig, segmentGroup);\n            return [new TreeNode(snapshot, children_1)];\n        }\n        if (childConfig.length === 0 && slicedSegments.length === 0) {\n            return [new TreeNode(snapshot, [])];\n        }\n        var children = this.processSegment(childConfig, segmentGroup, slicedSegments, PRIMARY_OUTLET);\n        return [new TreeNode(snapshot, children)];\n    };\n    return Recognizer;\n}());\nfunction sortActivatedRouteSnapshots(nodes) {\n    nodes.sort(function (a, b) {\n        if (a.value.outlet === PRIMARY_OUTLET)\n            return -1;\n        if (b.value.outlet === PRIMARY_OUTLET)\n            return 1;\n        return a.value.outlet.localeCompare(b.value.outlet);\n    });\n}\nfunction getChildConfig(route) {\n    if (route.children) {\n        return route.children;\n    }\n    if (route.loadChildren) {\n        return route._loadedConfig.routes;\n    }\n    return [];\n}\nfunction match$1(segmentGroup, route, segments) {\n    if (route.path === '') {\n        if (route.pathMatch === 'full' && (segmentGroup.hasChildren() || segments.length > 0)) {\n            throw new NoMatch$1();\n        }\n        return { consumedSegments: [], lastChild: 0, parameters: {} };\n    }\n    var matcher = route.matcher || defaultUrlMatcher;\n    var res = matcher(segments, segmentGroup, route);\n    if (!res)\n        throw new NoMatch$1();\n    var posParams = {};\n    forEach(res.posParams, function (v, k) { posParams[k] = v.path; });\n    var parameters = res.consumed.length > 0 ? __assign({}, posParams, res.consumed[res.consumed.length - 1].parameters) :\n        posParams;\n    return { consumedSegments: res.consumed, lastChild: res.consumed.length, parameters: parameters };\n}\nfunction checkOutletNameUniqueness(nodes) {\n    var names = {};\n    nodes.forEach(function (n) {\n        var routeWithSameOutletName = names[n.value.outlet];\n        if (routeWithSameOutletName) {\n            var p = routeWithSameOutletName.url.map(function (s) { return s.toString(); }).join('/');\n            var c = n.value.url.map(function (s) { return s.toString(); }).join('/');\n            throw new Error(\"Two segments cannot have the same outlet name: '\" + p + \"' and '\" + c + \"'.\");\n        }\n        names[n.value.outlet] = n.value;\n    });\n}\nfunction getSourceSegmentGroup(segmentGroup) {\n    var s = segmentGroup;\n    while (s._sourceSegment) {\n        s = s._sourceSegment;\n    }\n    return s;\n}\nfunction getPathIndexShift(segmentGroup) {\n    var s = segmentGroup;\n    var res = (s._segmentIndexShift ? s._segmentIndexShift : 0);\n    while (s._sourceSegment) {\n        s = s._sourceSegment;\n        res += (s._segmentIndexShift ? s._segmentIndexShift : 0);\n    }\n    return res - 1;\n}\nfunction split$1(segmentGroup, consumedSegments, slicedSegments, config) {\n    if (slicedSegments.length > 0 &&\n        containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n        var s_1 = new UrlSegmentGroup(consumedSegments, createChildrenForEmptyPaths(segmentGroup, consumedSegments, config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n        s_1._sourceSegment = segmentGroup;\n        s_1._segmentIndexShift = consumedSegments.length;\n        return { segmentGroup: s_1, slicedSegments: [] };\n    }\n    if (slicedSegments.length === 0 &&\n        containsEmptyPathMatches(segmentGroup, slicedSegments, config)) {\n        var s_2 = new UrlSegmentGroup(segmentGroup.segments, addEmptyPathsToChildrenIfNeeded(segmentGroup, slicedSegments, config, segmentGroup.children));\n        s_2._sourceSegment = segmentGroup;\n        s_2._segmentIndexShift = consumedSegments.length;\n        return { segmentGroup: s_2, slicedSegments: slicedSegments };\n    }\n    var s = new UrlSegmentGroup(segmentGroup.segments, segmentGroup.children);\n    s._sourceSegment = segmentGroup;\n    s._segmentIndexShift = consumedSegments.length;\n    return { segmentGroup: s, slicedSegments: slicedSegments };\n}\nfunction addEmptyPathsToChildrenIfNeeded(segmentGroup, slicedSegments, routes, children) {\n    var res = {};\n    try {\n        for (var routes_1 = __values(routes), routes_1_1 = routes_1.next(); !routes_1_1.done; routes_1_1 = routes_1.next()) {\n            var r = routes_1_1.value;\n            if (emptyPathMatch(segmentGroup, slicedSegments, r) && !children[getOutlet$1(r)]) {\n                var s = new UrlSegmentGroup([], {});\n                s._sourceSegment = segmentGroup;\n                s._segmentIndexShift = segmentGroup.segments.length;\n                res[getOutlet$1(r)] = s;\n            }\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (routes_1_1 && !routes_1_1.done && (_a = routes_1.return)) _a.call(routes_1);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    return __assign({}, children, res);\n    var e_2, _a;\n}\nfunction createChildrenForEmptyPaths(segmentGroup, consumedSegments, routes, primarySegment) {\n    var res = {};\n    res[PRIMARY_OUTLET] = primarySegment;\n    primarySegment._sourceSegment = segmentGroup;\n    primarySegment._segmentIndexShift = consumedSegments.length;\n    try {\n        for (var routes_2 = __values(routes), routes_2_1 = routes_2.next(); !routes_2_1.done; routes_2_1 = routes_2.next()) {\n            var r = routes_2_1.value;\n            if (r.path === '' && getOutlet$1(r) !== PRIMARY_OUTLET) {\n                var s = new UrlSegmentGroup([], {});\n                s._sourceSegment = segmentGroup;\n                s._segmentIndexShift = consumedSegments.length;\n                res[getOutlet$1(r)] = s;\n            }\n        }\n    }\n    catch (e_3_1) { e_3 = { error: e_3_1 }; }\n    finally {\n        try {\n            if (routes_2_1 && !routes_2_1.done && (_a = routes_2.return)) _a.call(routes_2);\n        }\n        finally { if (e_3) throw e_3.error; }\n    }\n    return res;\n    var e_3, _a;\n}\nfunction containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, routes) {\n    return routes.some(function (r) { return emptyPathMatch(segmentGroup, slicedSegments, r) && getOutlet$1(r) !== PRIMARY_OUTLET; });\n}\nfunction containsEmptyPathMatches(segmentGroup, slicedSegments, routes) {\n    return routes.some(function (r) { return emptyPathMatch(segmentGroup, slicedSegments, r); });\n}\nfunction emptyPathMatch(segmentGroup, slicedSegments, r) {\n    if ((segmentGroup.hasChildren() || slicedSegments.length > 0) && r.pathMatch === 'full') {\n        return false;\n    }\n    return r.path === '' && r.redirectTo === undefined;\n}\nfunction getOutlet$1(route) {\n    return route.outlet || PRIMARY_OUTLET;\n}\nfunction getData(route) {\n    return route.data || {};\n}\nfunction getResolve(route) {\n    return route.resolve || {};\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Provides a way to customize when activated routes get reused.\n *\n * @experimental\n */\nvar RouteReuseStrategy = /** @class */ (function () {\n    function RouteReuseStrategy() {\n    }\n    return RouteReuseStrategy;\n}());\n/**\n * Does not detach any subtrees. Reuses routes as long as their route config is the same.\n */\nvar DefaultRouteReuseStrategy = /** @class */ (function () {\n    function DefaultRouteReuseStrategy() {\n    }\n    DefaultRouteReuseStrategy.prototype.shouldDetach = function (route) { return false; };\n    DefaultRouteReuseStrategy.prototype.store = function (route, detachedTree) { };\n    DefaultRouteReuseStrategy.prototype.shouldAttach = function (route) { return false; };\n    DefaultRouteReuseStrategy.prototype.retrieve = function (route) { return null; };\n    DefaultRouteReuseStrategy.prototype.shouldReuseRoute = function (future, curr) {\n        return future.routeConfig === curr.routeConfig;\n    };\n    return DefaultRouteReuseStrategy;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(i): switch to fromPromise once it's expored in rxjs\n/**\n * @docsNotRequired\n * @experimental\n */\nvar ROUTES = new core.InjectionToken('ROUTES');\nvar RouterConfigLoader = /** @class */ (function () {\n    function RouterConfigLoader(loader, compiler, onLoadStartListener, onLoadEndListener) {\n        this.loader = loader;\n        this.compiler = compiler;\n        this.onLoadStartListener = onLoadStartListener;\n        this.onLoadEndListener = onLoadEndListener;\n    }\n    RouterConfigLoader.prototype.load = function (parentInjector, route) {\n        var _this = this;\n        if (this.onLoadStartListener) {\n            this.onLoadStartListener(route);\n        }\n        var moduleFactory$ = this.loadModuleFactory(route.loadChildren);\n        return moduleFactory$.pipe(operators.map(function (factory) {\n            if (_this.onLoadEndListener) {\n                _this.onLoadEndListener(route);\n            }\n            var module = factory.create(parentInjector);\n            return new LoadedRouterConfig(flatten(module.injector.get(ROUTES)).map(copyConfig), module);\n        }));\n    };\n    RouterConfigLoader.prototype.loadModuleFactory = function (loadChildren) {\n        var _this = this;\n        if (typeof loadChildren === 'string') {\n            return rxjs.from(this.loader.load(loadChildren));\n        }\n        else {\n            return wrapIntoObservable(loadChildren()).pipe(operators.mergeMap(function (t) {\n                if (t instanceof core.NgModuleFactory) {\n                    return rxjs.of(t);\n                }\n                else {\n                    return rxjs.from(_this.compiler.compileModuleAsync(t));\n                }\n            }));\n        }\n    };\n    return RouterConfigLoader;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Provides a way to migrate AngularJS applications to Angular.\n *\n * @experimental\n */\nvar UrlHandlingStrategy = /** @class */ (function () {\n    function UrlHandlingStrategy() {\n    }\n    return UrlHandlingStrategy;\n}());\n/**\n * @experimental\n */\nvar DefaultUrlHandlingStrategy = /** @class */ (function () {\n    function DefaultUrlHandlingStrategy() {\n    }\n    DefaultUrlHandlingStrategy.prototype.shouldProcessUrl = function (url) { return true; };\n    DefaultUrlHandlingStrategy.prototype.extract = function (url) { return url; };\n    DefaultUrlHandlingStrategy.prototype.merge = function (newUrlPart, wholeUrl) { return newUrlPart; };\n    return DefaultUrlHandlingStrategy;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction defaultErrorHandler(error) {\n    throw error;\n}\n/**\n * @internal\n */\nfunction defaultRouterHook(snapshot, runExtras) {\n    return rxjs.of(null);\n}\n/**\n * @description\n *\n * Provides the navigation and url manipulation capabilities.\n *\n * See `Routes` for more details and examples.\n *\n * @ngModule RouterModule\n *\n *\n */\nvar Router = /** @class */ (function () {\n    /**\n     * Creates the router service.\n     */\n    // TODO: vsavkin make internal after the final is out.\n    function Router(rootComponentType, urlSerializer, rootContexts, location, injector, loader, compiler, config) {\n        var _this = this;\n        this.rootComponentType = rootComponentType;\n        this.urlSerializer = urlSerializer;\n        this.rootContexts = rootContexts;\n        this.location = location;\n        this.config = config;\n        this.navigations = new rxjs.BehaviorSubject(null);\n        this.navigationId = 0;\n        this.events = new rxjs.Subject();\n        /**\n         * Error handler that is invoked when a navigation errors.\n         *\n         * See `ErrorHandler` for more information.\n         */\n        this.errorHandler = defaultErrorHandler;\n        /**\n         * Indicates if at least one navigation happened.\n         */\n        this.navigated = false;\n        this.lastSuccessfulId = -1;\n        /**\n         * Used by RouterModule. This allows us to\n         * pause the navigation either before preactivation or after it.\n         * @internal\n         */\n        this.hooks = {\n            beforePreactivation: defaultRouterHook,\n            afterPreactivation: defaultRouterHook\n        };\n        /**\n         * Extracts and merges URLs. Used for AngularJS to Angular migrations.\n         */\n        this.urlHandlingStrategy = new DefaultUrlHandlingStrategy();\n        this.routeReuseStrategy = new DefaultRouteReuseStrategy();\n        /**\n         * Define what the router should do if it receives a navigation request to the current URL.\n         * By default, the router will ignore this navigation. However, this prevents features such\n         * as a \"refresh\" button. Use this option to configure the behavior when navigating to the\n         * current URL. Default is 'ignore'.\n         */\n        this.onSameUrlNavigation = 'ignore';\n        /**\n         * Defines how the router merges params, data and resolved data from parent to child\n         * routes. Available options are:\n         *\n         * - `'emptyOnly'`, the default, only inherits parent params for path-less or component-less\n         *   routes.\n         * - `'always'`, enables unconditional inheritance of parent params.\n         */\n        this.paramsInheritanceStrategy = 'emptyOnly';\n        var onLoadStart = function (r) { return _this.triggerEvent(new RouteConfigLoadStart(r)); };\n        var onLoadEnd = function (r) { return _this.triggerEvent(new RouteConfigLoadEnd(r)); };\n        this.ngModule = injector.get(core.NgModuleRef);\n        this.resetConfig(config);\n        this.currentUrlTree = createEmptyUrlTree();\n        this.rawUrlTree = this.currentUrlTree;\n        this.configLoader = new RouterConfigLoader(loader, compiler, onLoadStart, onLoadEnd);\n        this.routerState = createEmptyState(this.currentUrlTree, this.rootComponentType);\n        this.processNavigations();\n    }\n    /**\n     * @internal\n     * TODO: this should be removed once the constructor of the router made internal\n     */\n    Router.prototype.resetRootComponentType = function (rootComponentType) {\n        this.rootComponentType = rootComponentType;\n        // TODO: vsavkin router 4.0 should make the root component set to null\n        // this will simplify the lifecycle of the router.\n        this.routerState.root.component = this.rootComponentType;\n    };\n    /**\n     * Sets up the location change listener and performs the initial navigation.\n     */\n    Router.prototype.initialNavigation = function () {\n        this.setUpLocationChangeListener();\n        if (this.navigationId === 0) {\n            this.navigateByUrl(this.location.path(true), { replaceUrl: true });\n        }\n    };\n    /**\n     * Sets up the location change listener.\n     */\n    Router.prototype.setUpLocationChangeListener = function () {\n        var _this = this;\n        // Don't need to use Zone.wrap any more, because zone.js\n        // already patch onPopState, so location change callback will\n        // run into ngZone\n        if (!this.locationSubscription) {\n            this.locationSubscription = this.location.subscribe(function (change) {\n                var rawUrlTree = _this.urlSerializer.parse(change['url']);\n                var source = change['type'] === 'popstate' ? 'popstate' : 'hashchange';\n                var state = change.state && change.state.navigationId ?\n                    { navigationId: change.state.navigationId } :\n                    null;\n                setTimeout(function () { _this.scheduleNavigation(rawUrlTree, source, state, { replaceUrl: true }); }, 0);\n            });\n        }\n    };\n    Object.defineProperty(Router.prototype, \"url\", {\n        /** The current url */\n        get: function () { return this.serializeUrl(this.currentUrlTree); },\n        enumerable: true,\n        configurable: true\n    });\n    /** @internal */\n    Router.prototype.triggerEvent = function (e) { this.events.next(e); };\n    /**\n     * Resets the configuration used for navigation and generating links.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.resetConfig([\n     *  { path: 'team/:id', component: TeamCmp, children: [\n     *    { path: 'simple', component: SimpleCmp },\n     *    { path: 'user/:name', component: UserCmp }\n     *  ]}\n     * ]);\n     * ```\n     */\n    Router.prototype.resetConfig = function (config) {\n        validateConfig(config);\n        this.config = config.map(copyConfig);\n        this.navigated = false;\n        this.lastSuccessfulId = -1;\n    };\n    /** @docsNotRequired */\n    Router.prototype.ngOnDestroy = function () { this.dispose(); };\n    /** Disposes of the router */\n    Router.prototype.dispose = function () {\n        if (this.locationSubscription) {\n            this.locationSubscription.unsubscribe();\n            this.locationSubscription = null;\n        }\n    };\n    /**\n     * Applies an array of commands to the current url tree and creates a new url tree.\n     *\n     * When given an activate route, applies the given commands starting from the route.\n     * When not given a route, applies the given command starting from the root.\n     *\n     * ### Usage\n     *\n     * ```\n     * // create /team/33/user/11\n     * router.createUrlTree(['/team', 33, 'user', 11]);\n     *\n     * // create /team/33;expand=true/user/11\n     * router.createUrlTree(['/team', 33, {expand: true}, 'user', 11]);\n     *\n     * // you can collapse static segments like this (this works only with the first passed-in value):\n     * router.createUrlTree(['/team/33/user', userId]);\n     *\n     * // If the first segment can contain slashes, and you do not want the router to split it, you\n     * // can do the following:\n     *\n     * router.createUrlTree([{segmentPath: '/one/two'}]);\n     *\n     * // create /team/33/(user/11//right:chat)\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: 'chat'}}]);\n     *\n     * // remove the right secondary node\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: null}}]);\n     *\n     * // assuming the current url is `/team/33/user/11` and the route points to `user/11`\n     *\n     * // navigate to /team/33/user/11/details\n     * router.createUrlTree(['details'], {relativeTo: route});\n     *\n     * // navigate to /team/33/user/22\n     * router.createUrlTree(['../22'], {relativeTo: route});\n     *\n     * // navigate to /team/44/user/22\n     * router.createUrlTree(['../../team/44/user/22'], {relativeTo: route});\n     * ```\n     */\n    Router.prototype.createUrlTree = function (commands, navigationExtras) {\n        if (navigationExtras === void 0) { navigationExtras = {}; }\n        var relativeTo = navigationExtras.relativeTo, queryParams = navigationExtras.queryParams, fragment = navigationExtras.fragment, preserveQueryParams = navigationExtras.preserveQueryParams, queryParamsHandling = navigationExtras.queryParamsHandling, preserveFragment = navigationExtras.preserveFragment;\n        if (core.isDevMode() && preserveQueryParams && console && console.warn) {\n            console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n        }\n        var a = relativeTo || this.routerState.root;\n        var f = preserveFragment ? this.currentUrlTree.fragment : fragment;\n        var q = null;\n        if (queryParamsHandling) {\n            switch (queryParamsHandling) {\n                case 'merge':\n                    q = __assign({}, this.currentUrlTree.queryParams, queryParams);\n                    break;\n                case 'preserve':\n                    q = this.currentUrlTree.queryParams;\n                    break;\n                default:\n                    q = queryParams || null;\n            }\n        }\n        else {\n            q = preserveQueryParams ? this.currentUrlTree.queryParams : queryParams || null;\n        }\n        if (q !== null) {\n            q = this.removeEmptyProps(q);\n        }\n        return createUrlTree(a, this.currentUrlTree, commands, q, f);\n    };\n    /**\n     * Navigate based on the provided url. This navigation is always absolute.\n     *\n     * Returns a promise that:\n     * - resolves to 'true' when navigation succeeds,\n     * - resolves to 'false' when navigation fails,\n     * - is rejected when an error happens.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.navigateByUrl(\"/team/33/user/11\");\n     *\n     * // Navigate without updating the URL\n     * router.navigateByUrl(\"/team/33/user/11\", { skipLocationChange: true });\n     * ```\n     *\n     * In opposite to `navigate`, `navigateByUrl` takes a whole URL\n     * and does not apply any delta to the current one.\n     */\n    Router.prototype.navigateByUrl = function (url, extras) {\n        if (extras === void 0) { extras = { skipLocationChange: false }; }\n        var urlTree = url instanceof UrlTree ? url : this.parseUrl(url);\n        var mergedTree = this.urlHandlingStrategy.merge(urlTree, this.rawUrlTree);\n        return this.scheduleNavigation(mergedTree, 'imperative', null, extras);\n    };\n    /**\n     * Navigate based on the provided array of commands and a starting point.\n     * If no starting route is provided, the navigation is absolute.\n     *\n     * Returns a promise that:\n     * - resolves to 'true' when navigation succeeds,\n     * - resolves to 'false' when navigation fails,\n     * - is rejected when an error happens.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route});\n     *\n     * // Navigate without updating the URL\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route, skipLocationChange: true});\n     * ```\n     *\n     * In opposite to `navigateByUrl`, `navigate` always takes a delta that is applied to the current\n     * URL.\n     */\n    Router.prototype.navigate = function (commands, extras) {\n        if (extras === void 0) { extras = { skipLocationChange: false }; }\n        validateCommands(commands);\n        return this.navigateByUrl(this.createUrlTree(commands, extras), extras);\n    };\n    /** Serializes a `UrlTree` into a string */\n    Router.prototype.serializeUrl = function (url) { return this.urlSerializer.serialize(url); };\n    /** Parses a string into a `UrlTree` */\n    Router.prototype.parseUrl = function (url) { return this.urlSerializer.parse(url); };\n    /** Returns whether the url is activated */\n    Router.prototype.isActive = function (url, exact) {\n        if (url instanceof UrlTree) {\n            return containsTree(this.currentUrlTree, url, exact);\n        }\n        var urlTree = this.urlSerializer.parse(url);\n        return containsTree(this.currentUrlTree, urlTree, exact);\n    };\n    Router.prototype.removeEmptyProps = function (params) {\n        return Object.keys(params).reduce(function (result, key) {\n            var value = params[key];\n            if (value !== null && value !== undefined) {\n                result[key] = value;\n            }\n            return result;\n        }, {});\n    };\n    Router.prototype.processNavigations = function () {\n        var _this = this;\n        this.navigations\n            .pipe(operators.concatMap(function (nav) {\n            if (nav) {\n                _this.executeScheduledNavigation(nav);\n                // a failed navigation should not stop the router from processing\n                // further navigations => the catch\n                return nav.promise.catch(function () { });\n            }\n            else {\n                return rxjs.of(null);\n            }\n        }))\n            .subscribe(function () { });\n    };\n    Router.prototype.scheduleNavigation = function (rawUrl, source, state, extras) {\n        var lastNavigation = this.navigations.value;\n        // If the user triggers a navigation imperatively (e.g., by using navigateByUrl),\n        // and that navigation results in 'replaceState' that leads to the same URL,\n        // we should skip those.\n        if (lastNavigation && source !== 'imperative' && lastNavigation.source === 'imperative' &&\n            lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n            return Promise.resolve(true); // return value is not used\n        }\n        // Because of a bug in IE and Edge, the location class fires two events (popstate and\n        // hashchange) every single time. The second one should be ignored. Otherwise, the URL will\n        // flicker. Handles the case when a popstate was emitted first.\n        if (lastNavigation && source == 'hashchange' && lastNavigation.source === 'popstate' &&\n            lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n            return Promise.resolve(true); // return value is not used\n        }\n        // Because of a bug in IE and Edge, the location class fires two events (popstate and\n        // hashchange) every single time. The second one should be ignored. Otherwise, the URL will\n        // flicker. Handles the case when a hashchange was emitted first.\n        if (lastNavigation && source == 'popstate' && lastNavigation.source === 'hashchange' &&\n            lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n            return Promise.resolve(true); // return value is not used\n        }\n        var resolve = null;\n        var reject = null;\n        var promise = new Promise(function (res, rej) {\n            resolve = res;\n            reject = rej;\n        });\n        var id = ++this.navigationId;\n        this.navigations.next({ id: id, source: source, state: state, rawUrl: rawUrl, extras: extras, resolve: resolve, reject: reject, promise: promise });\n        // Make sure that the error is propagated even though `processNavigations` catch\n        // handler does not rethrow\n        return promise.catch(function (e) { return Promise.reject(e); });\n    };\n    Router.prototype.executeScheduledNavigation = function (_a) {\n        var _this = this;\n        var id = _a.id, rawUrl = _a.rawUrl, extras = _a.extras, resolve = _a.resolve, reject = _a.reject, source = _a.source, state = _a.state;\n        var url = this.urlHandlingStrategy.extract(rawUrl);\n        var urlTransition = !this.navigated || url.toString() !== this.currentUrlTree.toString();\n        if ((this.onSameUrlNavigation === 'reload' ? true : urlTransition) &&\n            this.urlHandlingStrategy.shouldProcessUrl(rawUrl)) {\n            this.events\n                .next(new NavigationStart(id, this.serializeUrl(url), source, state));\n            Promise.resolve()\n                .then(function (_) { return _this.runNavigate(url, rawUrl, !!extras.skipLocationChange, !!extras.replaceUrl, id, null); })\n                .then(resolve, reject);\n            // we cannot process the current URL, but we could process the previous one =>\n            // we need to do some cleanup\n        }\n        else if (urlTransition && this.rawUrlTree &&\n            this.urlHandlingStrategy.shouldProcessUrl(this.rawUrlTree)) {\n            this.events\n                .next(new NavigationStart(id, this.serializeUrl(url), source, state));\n            Promise.resolve()\n                .then(function (_) { return _this.runNavigate(url, rawUrl, false, false, id, createEmptyState(url, _this.rootComponentType).snapshot); })\n                .then(resolve, reject);\n        }\n        else {\n            this.rawUrlTree = rawUrl;\n            resolve(null);\n        }\n    };\n    Router.prototype.runNavigate = function (url, rawUrl, skipLocationChange, replaceUrl, id, precreatedState) {\n        var _this = this;\n        if (id !== this.navigationId) {\n            this.events\n                .next(new NavigationCancel(id, this.serializeUrl(url), \"Navigation ID \" + id + \" is not equal to the current navigation id \" + this.navigationId));\n            return Promise.resolve(false);\n        }\n        return new Promise(function (resolvePromise, rejectPromise) {\n            // create an observable of the url and route state snapshot\n            // this operation do not result in any side effects\n            var urlAndSnapshot$;\n            if (!precreatedState) {\n                var moduleInjector = _this.ngModule.injector;\n                var redirectsApplied$ = applyRedirects(moduleInjector, _this.configLoader, _this.urlSerializer, url, _this.config);\n                urlAndSnapshot$ = redirectsApplied$.pipe(operators.mergeMap(function (appliedUrl) {\n                    return recognize(_this.rootComponentType, _this.config, appliedUrl, _this.serializeUrl(appliedUrl), _this.paramsInheritanceStrategy)\n                        .pipe(operators.map(function (snapshot) {\n                        _this.events\n                            .next(new RoutesRecognized(id, _this.serializeUrl(url), _this.serializeUrl(appliedUrl), snapshot));\n                        return { appliedUrl: appliedUrl, snapshot: snapshot };\n                    }));\n                }));\n            }\n            else {\n                urlAndSnapshot$ = rxjs.of({ appliedUrl: url, snapshot: precreatedState });\n            }\n            var beforePreactivationDone$ = urlAndSnapshot$.pipe(operators.mergeMap(function (p) {\n                if (typeof p === 'boolean')\n                    return rxjs.of(p);\n                return _this.hooks\n                    .beforePreactivation(p.snapshot, {\n                    navigationId: id,\n                    appliedUrlTree: url,\n                    rawUrlTree: rawUrl, skipLocationChange: skipLocationChange, replaceUrl: replaceUrl,\n                })\n                    .pipe(operators.map(function () { return p; }));\n            }));\n            // run preactivation: guards and data resolvers\n            var preActivation;\n            var preactivationSetup$ = beforePreactivationDone$.pipe(operators.map(function (p) {\n                if (typeof p === 'boolean')\n                    return p;\n                var appliedUrl = p.appliedUrl, snapshot = p.snapshot;\n                var moduleInjector = _this.ngModule.injector;\n                preActivation = new PreActivation(snapshot, _this.routerState.snapshot, moduleInjector, function (evt) { return _this.triggerEvent(evt); });\n                preActivation.initialize(_this.rootContexts);\n                return { appliedUrl: appliedUrl, snapshot: snapshot };\n            }));\n            var preactivationCheckGuards$ = preactivationSetup$.pipe(operators.mergeMap(function (p) {\n                if (typeof p === 'boolean' || _this.navigationId !== id)\n                    return rxjs.of(false);\n                var appliedUrl = p.appliedUrl, snapshot = p.snapshot;\n                _this.triggerEvent(new GuardsCheckStart(id, _this.serializeUrl(url), _this.serializeUrl(appliedUrl), snapshot));\n                return preActivation.checkGuards().pipe(operators.map(function (shouldActivate) {\n                    _this.triggerEvent(new GuardsCheckEnd(id, _this.serializeUrl(url), _this.serializeUrl(appliedUrl), snapshot, shouldActivate));\n                    return { appliedUrl: appliedUrl, snapshot: snapshot, shouldActivate: shouldActivate };\n                }));\n            }));\n            var preactivationResolveData$ = preactivationCheckGuards$.pipe(operators.mergeMap(function (p) {\n                if (typeof p === 'boolean' || _this.navigationId !== id)\n                    return rxjs.of(false);\n                if (p.shouldActivate && preActivation.isActivating()) {\n                    _this.triggerEvent(new ResolveStart(id, _this.serializeUrl(url), _this.serializeUrl(p.appliedUrl), p.snapshot));\n                    return preActivation.resolveData(_this.paramsInheritanceStrategy).pipe(operators.map(function () {\n                        _this.triggerEvent(new ResolveEnd(id, _this.serializeUrl(url), _this.serializeUrl(p.appliedUrl), p.snapshot));\n                        return p;\n                    }));\n                }\n                else {\n                    return rxjs.of(p);\n                }\n            }));\n            var preactivationDone$ = preactivationResolveData$.pipe(operators.mergeMap(function (p) {\n                if (typeof p === 'boolean' || _this.navigationId !== id)\n                    return rxjs.of(false);\n                return _this.hooks\n                    .afterPreactivation(p.snapshot, {\n                    navigationId: id,\n                    appliedUrlTree: url,\n                    rawUrlTree: rawUrl, skipLocationChange: skipLocationChange, replaceUrl: replaceUrl,\n                })\n                    .pipe(operators.map(function () { return p; }));\n            }));\n            // create router state\n            // this operation has side effects => route state is being affected\n            var routerState$ = preactivationDone$.pipe(operators.map(function (p) {\n                if (typeof p === 'boolean' || _this.navigationId !== id)\n                    return false;\n                var appliedUrl = p.appliedUrl, snapshot = p.snapshot, shouldActivate = p.shouldActivate;\n                if (shouldActivate) {\n                    var state = createRouterState(_this.routeReuseStrategy, snapshot, _this.routerState);\n                    return { appliedUrl: appliedUrl, state: state, shouldActivate: shouldActivate };\n                }\n                else {\n                    return { appliedUrl: appliedUrl, state: null, shouldActivate: shouldActivate };\n                }\n            }));\n            _this.activateRoutes(routerState$, _this.routerState, _this.currentUrlTree, id, url, rawUrl, skipLocationChange, replaceUrl, resolvePromise, rejectPromise);\n        });\n    };\n    /**\n     * Performs the logic of activating routes. This is a synchronous process by default. While this\n     * is a private method, it could be overridden to make activation asynchronous.\n     */\n    Router.prototype.activateRoutes = function (state, storedState, storedUrl, id, url, rawUrl, skipLocationChange, replaceUrl, resolvePromise, rejectPromise) {\n        var _this = this;\n        // applied the new router state\n        // this operation has side effects\n        var navigationIsSuccessful;\n        state\n            .forEach(function (p) {\n            if (typeof p === 'boolean' || !p.shouldActivate || id !== _this.navigationId || !p.state) {\n                navigationIsSuccessful = false;\n                return;\n            }\n            var appliedUrl = p.appliedUrl, state = p.state;\n            _this.currentUrlTree = appliedUrl;\n            _this.rawUrlTree = _this.urlHandlingStrategy.merge(_this.currentUrlTree, rawUrl);\n            _this.routerState = state;\n            if (!skipLocationChange) {\n                var path = _this.urlSerializer.serialize(_this.rawUrlTree);\n                if (_this.location.isCurrentPathEqualTo(path) || replaceUrl) {\n                    _this.location.replaceState(path, '', { navigationId: id });\n                }\n                else {\n                    _this.location.go(path, '', { navigationId: id });\n                }\n            }\n            new ActivateRoutes(_this.routeReuseStrategy, state, storedState, function (evt) { return _this.triggerEvent(evt); })\n                .activate(_this.rootContexts);\n            navigationIsSuccessful = true;\n        })\n            .then(function () {\n            if (navigationIsSuccessful) {\n                _this.navigated = true;\n                _this.lastSuccessfulId = id;\n                _this.events\n                    .next(new NavigationEnd(id, _this.serializeUrl(url), _this.serializeUrl(_this.currentUrlTree)));\n                resolvePromise(true);\n            }\n            else {\n                _this.resetUrlToCurrentUrlTree();\n                _this.events\n                    .next(new NavigationCancel(id, _this.serializeUrl(url), ''));\n                resolvePromise(false);\n            }\n        }, function (e) {\n            if (isNavigationCancelingError(e)) {\n                _this.navigated = true;\n                _this.resetStateAndUrl(storedState, storedUrl, rawUrl);\n                _this.events\n                    .next(new NavigationCancel(id, _this.serializeUrl(url), e.message));\n                resolvePromise(false);\n            }\n            else {\n                _this.resetStateAndUrl(storedState, storedUrl, rawUrl);\n                _this.events\n                    .next(new NavigationError(id, _this.serializeUrl(url), e));\n                try {\n                    resolvePromise(_this.errorHandler(e));\n                }\n                catch (ee) {\n                    rejectPromise(ee);\n                }\n            }\n        });\n    };\n    Router.prototype.resetStateAndUrl = function (storedState, storedUrl, rawUrl) {\n        this.routerState = storedState;\n        this.currentUrlTree = storedUrl;\n        this.rawUrlTree = this.urlHandlingStrategy.merge(this.currentUrlTree, rawUrl);\n        this.resetUrlToCurrentUrlTree();\n    };\n    Router.prototype.resetUrlToCurrentUrlTree = function () {\n        this.location.replaceState(this.urlSerializer.serialize(this.rawUrlTree), '', { navigationId: this.lastSuccessfulId });\n    };\n    return Router;\n}());\nvar ActivateRoutes = /** @class */ (function () {\n    function ActivateRoutes(routeReuseStrategy, futureState, currState, forwardEvent) {\n        this.routeReuseStrategy = routeReuseStrategy;\n        this.futureState = futureState;\n        this.currState = currState;\n        this.forwardEvent = forwardEvent;\n    }\n    ActivateRoutes.prototype.activate = function (parentContexts) {\n        var futureRoot = this.futureState._root;\n        var currRoot = this.currState ? this.currState._root : null;\n        this.deactivateChildRoutes(futureRoot, currRoot, parentContexts);\n        advanceActivatedRoute(this.futureState.root);\n        this.activateChildRoutes(futureRoot, currRoot, parentContexts);\n    };\n    // De-activate the child route that are not re-used for the future state\n    ActivateRoutes.prototype.deactivateChildRoutes = function (futureNode, currNode, contexts) {\n        var _this = this;\n        var children = nodeChildrenAsMap(currNode);\n        // Recurse on the routes active in the future state to de-activate deeper children\n        futureNode.children.forEach(function (futureChild) {\n            var childOutletName = futureChild.value.outlet;\n            _this.deactivateRoutes(futureChild, children[childOutletName], contexts);\n            delete children[childOutletName];\n        });\n        // De-activate the routes that will not be re-used\n        forEach(children, function (v, childName) {\n            _this.deactivateRouteAndItsChildren(v, contexts);\n        });\n    };\n    ActivateRoutes.prototype.deactivateRoutes = function (futureNode, currNode, parentContext) {\n        var future = futureNode.value;\n        var curr = currNode ? currNode.value : null;\n        if (future === curr) {\n            // Reusing the node, check to see if the children need to be de-activated\n            if (future.component) {\n                // If we have a normal route, we need to go through an outlet.\n                var context = parentContext.getContext(future.outlet);\n                if (context) {\n                    this.deactivateChildRoutes(futureNode, currNode, context.children);\n                }\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.deactivateChildRoutes(futureNode, currNode, parentContext);\n            }\n        }\n        else {\n            if (curr) {\n                // Deactivate the current route which will not be re-used\n                this.deactivateRouteAndItsChildren(currNode, parentContext);\n            }\n        }\n    };\n    ActivateRoutes.prototype.deactivateRouteAndItsChildren = function (route, parentContexts) {\n        if (this.routeReuseStrategy.shouldDetach(route.value.snapshot)) {\n            this.detachAndStoreRouteSubtree(route, parentContexts);\n        }\n        else {\n            this.deactivateRouteAndOutlet(route, parentContexts);\n        }\n    };\n    ActivateRoutes.prototype.detachAndStoreRouteSubtree = function (route, parentContexts) {\n        var context = parentContexts.getContext(route.value.outlet);\n        if (context && context.outlet) {\n            var componentRef = context.outlet.detach();\n            var contexts = context.children.onOutletDeactivated();\n            this.routeReuseStrategy.store(route.value.snapshot, { componentRef: componentRef, route: route, contexts: contexts });\n        }\n    };\n    ActivateRoutes.prototype.deactivateRouteAndOutlet = function (route, parentContexts) {\n        var _this = this;\n        var context = parentContexts.getContext(route.value.outlet);\n        if (context) {\n            var children = nodeChildrenAsMap(route);\n            var contexts_1 = route.value.component ? context.children : parentContexts;\n            forEach(children, function (v, k) { return _this.deactivateRouteAndItsChildren(v, contexts_1); });\n            if (context.outlet) {\n                // Destroy the component\n                context.outlet.deactivate();\n                // Destroy the contexts for all the outlets that were in the component\n                context.children.onOutletDeactivated();\n            }\n        }\n    };\n    ActivateRoutes.prototype.activateChildRoutes = function (futureNode, currNode, contexts) {\n        var _this = this;\n        var children = nodeChildrenAsMap(currNode);\n        futureNode.children.forEach(function (c) {\n            _this.activateRoutes(c, children[c.value.outlet], contexts);\n            _this.forwardEvent(new ActivationEnd(c.value.snapshot));\n        });\n        if (futureNode.children.length) {\n            this.forwardEvent(new ChildActivationEnd(futureNode.value.snapshot));\n        }\n    };\n    ActivateRoutes.prototype.activateRoutes = function (futureNode, currNode, parentContexts) {\n        var future = futureNode.value;\n        var curr = currNode ? currNode.value : null;\n        advanceActivatedRoute(future);\n        // reusing the node\n        if (future === curr) {\n            if (future.component) {\n                // If we have a normal route, we need to go through an outlet.\n                var context = parentContexts.getOrCreateContext(future.outlet);\n                this.activateChildRoutes(futureNode, currNode, context.children);\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.activateChildRoutes(futureNode, currNode, parentContexts);\n            }\n        }\n        else {\n            if (future.component) {\n                // if we have a normal route, we need to place the component into the outlet and recurse.\n                var context = parentContexts.getOrCreateContext(future.outlet);\n                if (this.routeReuseStrategy.shouldAttach(future.snapshot)) {\n                    var stored = this.routeReuseStrategy.retrieve(future.snapshot);\n                    this.routeReuseStrategy.store(future.snapshot, null);\n                    context.children.onOutletReAttached(stored.contexts);\n                    context.attachRef = stored.componentRef;\n                    context.route = stored.route.value;\n                    if (context.outlet) {\n                        // Attach right away when the outlet has already been instantiated\n                        // Otherwise attach from `RouterOutlet.ngOnInit` when it is instantiated\n                        context.outlet.attach(stored.componentRef, stored.route.value);\n                    }\n                    advanceActivatedRouteNodeAndItsChildren(stored.route);\n                }\n                else {\n                    var config = parentLoadedConfig(future.snapshot);\n                    var cmpFactoryResolver = config ? config.module.componentFactoryResolver : null;\n                    context.route = future;\n                    context.resolver = cmpFactoryResolver;\n                    if (context.outlet) {\n                        // Activate the outlet when it has already been instantiated\n                        // Otherwise it will get activated from its `ngOnInit` when instantiated\n                        context.outlet.activateWith(future, cmpFactoryResolver);\n                    }\n                    this.activateChildRoutes(futureNode, null, context.children);\n                }\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.activateChildRoutes(futureNode, null, parentContexts);\n            }\n        }\n    };\n    return ActivateRoutes;\n}());\nfunction advanceActivatedRouteNodeAndItsChildren(node) {\n    advanceActivatedRoute(node.value);\n    node.children.forEach(advanceActivatedRouteNodeAndItsChildren);\n}\nfunction parentLoadedConfig(snapshot) {\n    for (var s = snapshot.parent; s; s = s.parent) {\n        var route = s.routeConfig;\n        if (route && route._loadedConfig)\n            return route._loadedConfig;\n        if (route && route.component)\n            return null;\n    }\n    return null;\n}\nfunction validateCommands(commands) {\n    for (var i = 0; i < commands.length; i++) {\n        var cmd = commands[i];\n        if (cmd == null) {\n            throw new Error(\"The requested path contains \" + cmd + \" segment at index \" + i);\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Lets you link to specific routes in your app.\n *\n * Consider the following route configuration:\n * `[{ path: 'user/:name', component: UserCmp }]`.\n * When linking to this `user/:name` route, you use the `RouterLink` directive.\n *\n * If the link is static, you can use the directive as follows:\n * `<a routerLink=\"/user/bob\">link to user component</a>`\n *\n * If you use dynamic values to generate the link, you can pass an array of path\n * segments, followed by the params for each segment.\n *\n * For instance `['/team', teamId, 'user', userName, {details: true}]`\n * means that we want to generate a link to `/team/11/user/bob;details=true`.\n *\n * Multiple static segments can be merged into one\n * (e.g., `['/team/11/user', userName, {details: true}]`).\n *\n * The first segment name can be prepended with `/`, `./`, or `../`:\n * * If the first segment begins with `/`, the router will look up the route from the root of the\n *   app.\n * * If the first segment begins with `./`, or doesn't begin with a slash, the router will\n *   instead look in the children of the current activated route.\n * * And if the first segment begins with `../`, the router will go up one level.\n *\n * You can set query params and fragment as follows:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" fragment=\"education\">\n *   link to user component\n * </a>\n * ```\n * RouterLink will use these to generate this link: `/user/bob#education?debug=true`.\n *\n * (Deprecated in v4.0.0 use `queryParamsHandling` instead) You can also tell the\n * directive to preserve the current query params and fragment:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" preserveQueryParams preserveFragment>\n *   link to user component\n * </a>\n * ```\n *\n * You can tell the directive to how to handle queryParams, available options are:\n *  - `'merge'`: merge the queryParams into the current queryParams\n *  - `'preserve'`: preserve the current queryParams\n *  - default/`''`: use the queryParams only\n *\n * Same options for {@link NavigationExtras#queryParamsHandling\n * NavigationExtras#queryParamsHandling}.\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" queryParamsHandling=\"merge\">\n *   link to user component\n * </a>\n * ```\n *\n * The router link directive always treats the provided input as a delta to the current url.\n *\n * For instance, if the current url is `/user/(box//aux:team)`.\n *\n * Then the following link `<a [routerLink]=\"['/user/jim']\">Jim</a>` will generate the link\n * `/user/(jim//aux:team)`.\n *\n * See {@link Router#createUrlTree createUrlTree} for more information.\n *\n * @ngModule RouterModule\n *\n *\n */\nvar RouterLink = /** @class */ (function () {\n    function RouterLink(router, route, tabIndex, renderer, el) {\n        this.router = router;\n        this.route = route;\n        this.commands = [];\n        if (tabIndex == null) {\n            renderer.setAttribute(el.nativeElement, 'tabindex', '0');\n        }\n    }\n    Object.defineProperty(RouterLink.prototype, \"routerLink\", {\n        set: function (commands) {\n            if (commands != null) {\n                this.commands = Array.isArray(commands) ? commands : [commands];\n            }\n            else {\n                this.commands = [];\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterLink.prototype, \"preserveQueryParams\", {\n        /**\n         * @deprecated 4.0.0 use `queryParamsHandling` instead.\n         */\n        set: function (value) {\n            if (core.isDevMode() && console && console.warn) {\n                console.warn('preserveQueryParams is deprecated!, use queryParamsHandling instead.');\n            }\n            this.preserve = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RouterLink.prototype.onClick = function () {\n        var extras = {\n            skipLocationChange: attrBoolValue(this.skipLocationChange),\n            replaceUrl: attrBoolValue(this.replaceUrl),\n        };\n        this.router.navigateByUrl(this.urlTree, extras);\n        return true;\n    };\n    Object.defineProperty(RouterLink.prototype, \"urlTree\", {\n        get: function () {\n            return this.router.createUrlTree(this.commands, {\n                relativeTo: this.route,\n                queryParams: this.queryParams,\n                fragment: this.fragment,\n                preserveQueryParams: attrBoolValue(this.preserve),\n                queryParamsHandling: this.queryParamsHandling,\n                preserveFragment: attrBoolValue(this.preserveFragment),\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RouterLink.decorators = [\n        { type: core.Directive, args: [{ selector: ':not(a)[routerLink]' },] }\n    ];\n    /** @nocollapse */\n    RouterLink.ctorParameters = function () { return [\n        { type: Router },\n        { type: ActivatedRoute },\n        { type: String, decorators: [{ type: core.Attribute, args: ['tabindex',] }] },\n        { type: core.Renderer2 },\n        { type: core.ElementRef }\n    ]; };\n    RouterLink.propDecorators = {\n        queryParams: [{ type: core.Input }],\n        fragment: [{ type: core.Input }],\n        queryParamsHandling: [{ type: core.Input }],\n        preserveFragment: [{ type: core.Input }],\n        skipLocationChange: [{ type: core.Input }],\n        replaceUrl: [{ type: core.Input }],\n        routerLink: [{ type: core.Input }],\n        preserveQueryParams: [{ type: core.Input }],\n        onClick: [{ type: core.HostListener, args: ['click',] }]\n    };\n    return RouterLink;\n}());\n/**\n * @description\n *\n * Lets you link to specific routes in your app.\n *\n * See `RouterLink` for more information.\n *\n * @ngModule RouterModule\n *\n *\n */\nvar RouterLinkWithHref = /** @class */ (function () {\n    function RouterLinkWithHref(router, route, locationStrategy) {\n        var _this = this;\n        this.router = router;\n        this.route = route;\n        this.locationStrategy = locationStrategy;\n        this.commands = [];\n        this.subscription = router.events.subscribe(function (s) {\n            if (s instanceof NavigationEnd) {\n                _this.updateTargetUrlAndHref();\n            }\n        });\n    }\n    Object.defineProperty(RouterLinkWithHref.prototype, \"routerLink\", {\n        set: function (commands) {\n            if (commands != null) {\n                this.commands = Array.isArray(commands) ? commands : [commands];\n            }\n            else {\n                this.commands = [];\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterLinkWithHref.prototype, \"preserveQueryParams\", {\n        set: function (value) {\n            if (core.isDevMode() && console && console.warn) {\n                console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n            }\n            this.preserve = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RouterLinkWithHref.prototype.ngOnChanges = function (changes) { this.updateTargetUrlAndHref(); };\n    RouterLinkWithHref.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n    RouterLinkWithHref.prototype.onClick = function (button, ctrlKey, metaKey, shiftKey) {\n        if (button !== 0 || ctrlKey || metaKey || shiftKey) {\n            return true;\n        }\n        if (typeof this.target === 'string' && this.target != '_self') {\n            return true;\n        }\n        var extras = {\n            skipLocationChange: attrBoolValue(this.skipLocationChange),\n            replaceUrl: attrBoolValue(this.replaceUrl),\n        };\n        this.router.navigateByUrl(this.urlTree, extras);\n        return false;\n    };\n    RouterLinkWithHref.prototype.updateTargetUrlAndHref = function () {\n        this.href = this.locationStrategy.prepareExternalUrl(this.router.serializeUrl(this.urlTree));\n    };\n    Object.defineProperty(RouterLinkWithHref.prototype, \"urlTree\", {\n        get: function () {\n            return this.router.createUrlTree(this.commands, {\n                relativeTo: this.route,\n                queryParams: this.queryParams,\n                fragment: this.fragment,\n                preserveQueryParams: attrBoolValue(this.preserve),\n                queryParamsHandling: this.queryParamsHandling,\n                preserveFragment: attrBoolValue(this.preserveFragment),\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RouterLinkWithHref.decorators = [\n        { type: core.Directive, args: [{ selector: 'a[routerLink]' },] }\n    ];\n    /** @nocollapse */\n    RouterLinkWithHref.ctorParameters = function () { return [\n        { type: Router },\n        { type: ActivatedRoute },\n        { type: common.LocationStrategy }\n    ]; };\n    RouterLinkWithHref.propDecorators = {\n        target: [{ type: core.HostBinding, args: ['attr.target',] }, { type: core.Input }],\n        queryParams: [{ type: core.Input }],\n        fragment: [{ type: core.Input }],\n        queryParamsHandling: [{ type: core.Input }],\n        preserveFragment: [{ type: core.Input }],\n        skipLocationChange: [{ type: core.Input }],\n        replaceUrl: [{ type: core.Input }],\n        href: [{ type: core.HostBinding }],\n        routerLink: [{ type: core.Input }],\n        preserveQueryParams: [{ type: core.Input }],\n        onClick: [{ type: core.HostListener, args: ['click', ['$event.button', '$event.ctrlKey', '$event.metaKey', '$event.shiftKey'],] }]\n    };\n    return RouterLinkWithHref;\n}());\nfunction attrBoolValue(s) {\n    return s === '' || !!s;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n *\n * @description\n *\n * Lets you add a CSS class to an element when the link's route becomes active.\n *\n * This directive lets you add a CSS class to an element when the link's route\n * becomes active.\n *\n * Consider the following example:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\">Bob</a>\n * ```\n *\n * When the url is either '/user' or '/user/bob', the active-link class will\n * be added to the `a` tag. If the url changes, the class will be removed.\n *\n * You can set more than one class, as follows:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"class1 class2\">Bob</a>\n * <a routerLink=\"/user/bob\" [routerLinkActive]=\"['class1', 'class2']\">Bob</a>\n * ```\n *\n * You can configure RouterLinkActive by passing `exact: true`. This will add the classes\n * only when the url matches the link exactly.\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact:\n * true}\">Bob</a>\n * ```\n *\n * You can assign the RouterLinkActive instance to a template variable and directly check\n * the `isActive` status.\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive #rla=\"routerLinkActive\">\n *   Bob {{ rla.isActive ? '(already open)' : ''}}\n * </a>\n * ```\n *\n * Finally, you can apply the RouterLinkActive directive to an ancestor of a RouterLink.\n *\n * ```\n * <div routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact: true}\">\n *   <a routerLink=\"/user/jim\">Jim</a>\n *   <a routerLink=\"/user/bob\">Bob</a>\n * </div>\n * ```\n *\n * This will set the active-link class on the div tag if the url is either '/user/jim' or\n * '/user/bob'.\n *\n * @ngModule RouterModule\n *\n *\n */\nvar RouterLinkActive = /** @class */ (function () {\n    function RouterLinkActive(router, element, renderer, cdr) {\n        var _this = this;\n        this.router = router;\n        this.element = element;\n        this.renderer = renderer;\n        this.cdr = cdr;\n        this.classes = [];\n        this.isActive = false;\n        this.routerLinkActiveOptions = { exact: false };\n        this.subscription = router.events.subscribe(function (s) {\n            if (s instanceof NavigationEnd) {\n                _this.update();\n            }\n        });\n    }\n    RouterLinkActive.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        this.links.changes.subscribe(function (_) { return _this.update(); });\n        this.linksWithHrefs.changes.subscribe(function (_) { return _this.update(); });\n        this.update();\n    };\n    Object.defineProperty(RouterLinkActive.prototype, \"routerLinkActive\", {\n        set: function (data) {\n            var classes = Array.isArray(data) ? data : data.split(' ');\n            this.classes = classes.filter(function (c) { return !!c; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RouterLinkActive.prototype.ngOnChanges = function (changes) { this.update(); };\n    RouterLinkActive.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n    RouterLinkActive.prototype.update = function () {\n        var _this = this;\n        if (!this.links || !this.linksWithHrefs || !this.router.navigated)\n            return;\n        Promise.resolve().then(function () {\n            var hasActiveLinks = _this.hasActiveLinks();\n            if (_this.isActive !== hasActiveLinks) {\n                _this.isActive = hasActiveLinks;\n                _this.classes.forEach(function (c) {\n                    if (hasActiveLinks) {\n                        _this.renderer.addClass(_this.element.nativeElement, c);\n                    }\n                    else {\n                        _this.renderer.removeClass(_this.element.nativeElement, c);\n                    }\n                });\n            }\n        });\n    };\n    RouterLinkActive.prototype.isLinkActive = function (router) {\n        var _this = this;\n        return function (link) {\n            return router.isActive(link.urlTree, _this.routerLinkActiveOptions.exact);\n        };\n    };\n    RouterLinkActive.prototype.hasActiveLinks = function () {\n        return this.links.some(this.isLinkActive(this.router)) ||\n            this.linksWithHrefs.some(this.isLinkActive(this.router));\n    };\n    RouterLinkActive.decorators = [\n        { type: core.Directive, args: [{\n                    selector: '[routerLinkActive]',\n                    exportAs: 'routerLinkActive',\n                },] }\n    ];\n    /** @nocollapse */\n    RouterLinkActive.ctorParameters = function () { return [\n        { type: Router },\n        { type: core.ElementRef },\n        { type: core.Renderer2 },\n        { type: core.ChangeDetectorRef }\n    ]; };\n    RouterLinkActive.propDecorators = {\n        links: [{ type: core.ContentChildren, args: [RouterLink, { descendants: true },] }],\n        linksWithHrefs: [{ type: core.ContentChildren, args: [RouterLinkWithHref, { descendants: true },] }],\n        routerLinkActiveOptions: [{ type: core.Input }],\n        routerLinkActive: [{ type: core.Input }]\n    };\n    return RouterLinkActive;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Store contextual information about a `RouterOutlet`\n *\n *\n */\nvar OutletContext = /** @class */ (function () {\n    function OutletContext() {\n        this.outlet = null;\n        this.route = null;\n        this.resolver = null;\n        this.children = new ChildrenOutletContexts();\n        this.attachRef = null;\n    }\n    return OutletContext;\n}());\n/**\n * Store contextual information about the children (= nested) `RouterOutlet`\n *\n *\n */\nvar ChildrenOutletContexts = /** @class */ (function () {\n    function ChildrenOutletContexts() {\n        // contexts for child outlets, by name.\n        this.contexts = new Map();\n    }\n    /** Called when a `RouterOutlet` directive is instantiated */\n    ChildrenOutletContexts.prototype.onChildOutletCreated = function (childName, outlet) {\n        var context = this.getOrCreateContext(childName);\n        context.outlet = outlet;\n        this.contexts.set(childName, context);\n    };\n    /**\n     * Called when a `RouterOutlet` directive is destroyed.\n     * We need to keep the context as the outlet could be destroyed inside a NgIf and might be\n     * re-created later.\n     */\n    ChildrenOutletContexts.prototype.onChildOutletDestroyed = function (childName) {\n        var context = this.getContext(childName);\n        if (context) {\n            context.outlet = null;\n        }\n    };\n    /**\n     * Called when the corresponding route is deactivated during navigation.\n     * Because the component get destroyed, all children outlet are destroyed.\n     */\n    ChildrenOutletContexts.prototype.onOutletDeactivated = function () {\n        var contexts = this.contexts;\n        this.contexts = new Map();\n        return contexts;\n    };\n    ChildrenOutletContexts.prototype.onOutletReAttached = function (contexts) { this.contexts = contexts; };\n    ChildrenOutletContexts.prototype.getOrCreateContext = function (childName) {\n        var context = this.getContext(childName);\n        if (!context) {\n            context = new OutletContext();\n            this.contexts.set(childName, context);\n        }\n        return context;\n    };\n    ChildrenOutletContexts.prototype.getContext = function (childName) { return this.contexts.get(childName) || null; };\n    return ChildrenOutletContexts;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Acts as a placeholder that Angular dynamically fills based on the current router state.\n *\n * ```\n * <router-outlet></router-outlet>\n * <router-outlet name='left'></router-outlet>\n * <router-outlet name='right'></router-outlet>\n * ```\n *\n * A router outlet will emit an activate event any time a new component is being instantiated,\n * and a deactivate event when it is being destroyed.\n *\n * ```\n * <router-outlet\n *   (activate)='onActivate($event)'\n *   (deactivate)='onDeactivate($event)'></router-outlet>\n * ```\n * @ngModule RouterModule\n *\n *\n */\nvar RouterOutlet = /** @class */ (function () {\n    function RouterOutlet(parentContexts, location, resolver, name, changeDetector) {\n        this.parentContexts = parentContexts;\n        this.location = location;\n        this.resolver = resolver;\n        this.changeDetector = changeDetector;\n        this.activated = null;\n        this._activatedRoute = null;\n        this.activateEvents = new core.EventEmitter();\n        this.deactivateEvents = new core.EventEmitter();\n        this.name = name || PRIMARY_OUTLET;\n        parentContexts.onChildOutletCreated(this.name, this);\n    }\n    RouterOutlet.prototype.ngOnDestroy = function () { this.parentContexts.onChildOutletDestroyed(this.name); };\n    RouterOutlet.prototype.ngOnInit = function () {\n        if (!this.activated) {\n            // If the outlet was not instantiated at the time the route got activated we need to populate\n            // the outlet when it is initialized (ie inside a NgIf)\n            var context = this.parentContexts.getContext(this.name);\n            if (context && context.route) {\n                if (context.attachRef) {\n                    // `attachRef` is populated when there is an existing component to mount\n                    this.attach(context.attachRef, context.route);\n                }\n                else {\n                    // otherwise the component defined in the configuration is created\n                    this.activateWith(context.route, context.resolver || null);\n                }\n            }\n        }\n    };\n    Object.defineProperty(RouterOutlet.prototype, \"isActivated\", {\n        get: function () { return !!this.activated; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"component\", {\n        get: function () {\n            if (!this.activated)\n                throw new Error('Outlet is not activated');\n            return this.activated.instance;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"activatedRoute\", {\n        get: function () {\n            if (!this.activated)\n                throw new Error('Outlet is not activated');\n            return this._activatedRoute;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"activatedRouteData\", {\n        get: function () {\n            if (this._activatedRoute) {\n                return this._activatedRoute.snapshot.data;\n            }\n            return {};\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Called when the `RouteReuseStrategy` instructs to detach the subtree\n     */\n    RouterOutlet.prototype.detach = function () {\n        if (!this.activated)\n            throw new Error('Outlet is not activated');\n        this.location.detach();\n        var cmp = this.activated;\n        this.activated = null;\n        this._activatedRoute = null;\n        return cmp;\n    };\n    /**\n     * Called when the `RouteReuseStrategy` instructs to re-attach a previously detached subtree\n     */\n    RouterOutlet.prototype.attach = function (ref, activatedRoute) {\n        this.activated = ref;\n        this._activatedRoute = activatedRoute;\n        this.location.insert(ref.hostView);\n    };\n    RouterOutlet.prototype.deactivate = function () {\n        if (this.activated) {\n            var c = this.component;\n            this.activated.destroy();\n            this.activated = null;\n            this._activatedRoute = null;\n            this.deactivateEvents.emit(c);\n        }\n    };\n    RouterOutlet.prototype.activateWith = function (activatedRoute, resolver) {\n        if (this.isActivated) {\n            throw new Error('Cannot activate an already activated outlet');\n        }\n        this._activatedRoute = activatedRoute;\n        var snapshot = activatedRoute._futureSnapshot;\n        var component = snapshot.routeConfig.component;\n        resolver = resolver || this.resolver;\n        var factory = resolver.resolveComponentFactory(component);\n        var childContexts = this.parentContexts.getOrCreateContext(this.name).children;\n        var injector = new OutletInjector(activatedRoute, childContexts, this.location.injector);\n        this.activated = this.location.createComponent(factory, this.location.length, injector);\n        // Calling `markForCheck` to make sure we will run the change detection when the\n        // `RouterOutlet` is inside a `ChangeDetectionStrategy.OnPush` component.\n        this.changeDetector.markForCheck();\n        this.activateEvents.emit(this.activated.instance);\n    };\n    RouterOutlet.decorators = [\n        { type: core.Directive, args: [{ selector: 'router-outlet', exportAs: 'outlet' },] }\n    ];\n    /** @nocollapse */\n    RouterOutlet.ctorParameters = function () { return [\n        { type: ChildrenOutletContexts },\n        { type: core.ViewContainerRef },\n        { type: core.ComponentFactoryResolver },\n        { type: String, decorators: [{ type: core.Attribute, args: ['name',] }] },\n        { type: core.ChangeDetectorRef }\n    ]; };\n    RouterOutlet.propDecorators = {\n        activateEvents: [{ type: core.Output, args: ['activate',] }],\n        deactivateEvents: [{ type: core.Output, args: ['deactivate',] }]\n    };\n    return RouterOutlet;\n}());\nvar OutletInjector = /** @class */ (function () {\n    function OutletInjector(route, childContexts, parent) {\n        this.route = route;\n        this.childContexts = childContexts;\n        this.parent = parent;\n    }\n    OutletInjector.prototype.get = function (token, notFoundValue) {\n        if (token === ActivatedRoute) {\n            return this.route;\n        }\n        if (token === ChildrenOutletContexts) {\n            return this.childContexts;\n        }\n        return this.parent.get(token, notFoundValue);\n    };\n    return OutletInjector;\n}());\n\n/**\n*@license\n*Copyright Google Inc. All Rights Reserved.\n*\n*Use of this source code is governed by an MIT-style license that can be\n*found in the LICENSE file at https://angular.io/license\n*/\n/**\n * @description\n *\n * Provides a preloading strategy.\n *\n * @experimental\n */\nvar PreloadingStrategy = /** @class */ (function () {\n    function PreloadingStrategy() {\n    }\n    return PreloadingStrategy;\n}());\n/**\n * @description\n *\n * Provides a preloading strategy that preloads all modules as quickly as possible.\n *\n * ```\n * RouteModule.forRoot(ROUTES, {preloadingStrategy: PreloadAllModules})\n * ```\n *\n * @experimental\n */\nvar PreloadAllModules = /** @class */ (function () {\n    function PreloadAllModules() {\n    }\n    PreloadAllModules.prototype.preload = function (route, fn) {\n        return fn().pipe(operators.catchError(function () { return rxjs.of(null); }));\n    };\n    return PreloadAllModules;\n}());\n/**\n * @description\n *\n * Provides a preloading strategy that does not preload any modules.\n *\n * This strategy is enabled by default.\n *\n * @experimental\n */\nvar NoPreloading = /** @class */ (function () {\n    function NoPreloading() {\n    }\n    NoPreloading.prototype.preload = function (route, fn) { return rxjs.of(null); };\n    return NoPreloading;\n}());\n/**\n * The preloader optimistically loads all router configurations to\n * make navigations into lazily-loaded sections of the application faster.\n *\n * The preloader runs in the background. When the router bootstraps, the preloader\n * starts listening to all navigation events. After every such event, the preloader\n * will check if any configurations can be loaded lazily.\n *\n * If a route is protected by `canLoad` guards, the preloaded will not load it.\n *\n *\n */\nvar RouterPreloader = /** @class */ (function () {\n    function RouterPreloader(router, moduleLoader, compiler, injector, preloadingStrategy) {\n        this.router = router;\n        this.injector = injector;\n        this.preloadingStrategy = preloadingStrategy;\n        var onStartLoad = function (r) { return router.triggerEvent(new RouteConfigLoadStart(r)); };\n        var onEndLoad = function (r) { return router.triggerEvent(new RouteConfigLoadEnd(r)); };\n        this.loader = new RouterConfigLoader(moduleLoader, compiler, onStartLoad, onEndLoad);\n    }\n    RouterPreloader.prototype.setUpPreloading = function () {\n        var _this = this;\n        this.subscription =\n            this.router.events\n                .pipe(operators.filter(function (e) { return e instanceof NavigationEnd; }), operators.concatMap(function () { return _this.preload(); }))\n                .subscribe(function () { });\n    };\n    RouterPreloader.prototype.preload = function () {\n        var ngModule = this.injector.get(core.NgModuleRef);\n        return this.processRoutes(ngModule, this.router.config);\n    };\n    // TODO(jasonaden): This class relies on code external to the class to call setUpPreloading. If\n    // this hasn't been done, ngOnDestroy will fail as this.subscription will be undefined. This\n    // should be refactored.\n    RouterPreloader.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n    RouterPreloader.prototype.processRoutes = function (ngModule, routes) {\n        var res = [];\n        try {\n            for (var routes_1 = __values(routes), routes_1_1 = routes_1.next(); !routes_1_1.done; routes_1_1 = routes_1.next()) {\n                var route = routes_1_1.value;\n                // we already have the config loaded, just recurse\n                if (route.loadChildren && !route.canLoad && route._loadedConfig) {\n                    var childConfig = route._loadedConfig;\n                    res.push(this.processRoutes(childConfig.module, childConfig.routes));\n                    // no config loaded, fetch the config\n                }\n                else if (route.loadChildren && !route.canLoad) {\n                    res.push(this.preloadConfig(ngModule, route));\n                    // recurse into children\n                }\n                else if (route.children) {\n                    res.push(this.processRoutes(ngModule, route.children));\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (routes_1_1 && !routes_1_1.done && (_a = routes_1.return)) _a.call(routes_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return rxjs.from(res).pipe(operators.mergeAll(), operators.map(function (_) { return void 0; }));\n        var e_1, _a;\n    };\n    RouterPreloader.prototype.preloadConfig = function (ngModule, route) {\n        var _this = this;\n        return this.preloadingStrategy.preload(route, function () {\n            var loaded$ = _this.loader.load(ngModule.injector, route);\n            return loaded$.pipe(operators.mergeMap(function (config) {\n                route._loadedConfig = config;\n                return _this.processRoutes(config.module, config.routes);\n            }));\n        });\n    };\n    RouterPreloader.decorators = [\n        { type: core.Injectable }\n    ];\n    /** @nocollapse */\n    RouterPreloader.ctorParameters = function () { return [\n        { type: Router },\n        { type: core.NgModuleFactoryLoader },\n        { type: core.Compiler },\n        { type: core.Injector },\n        { type: PreloadingStrategy }\n    ]; };\n    return RouterPreloader;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar RouterScroller = /** @class */ (function () {\n    function RouterScroller(router, \n    /** @docsNotRequired */ viewportScroller, options) {\n        if (options === void 0) { options = {}; }\n        this.router = router;\n        this.viewportScroller = viewportScroller;\n        this.options = options;\n        this.lastId = 0;\n        this.lastSource = 'imperative';\n        this.restoredId = 0;\n        this.store = {};\n    }\n    RouterScroller.prototype.init = function () {\n        // we want to disable the automatic scrolling because having two places\n        // responsible for scrolling results race conditions, especially given\n        // that browser don't implement this behavior consistently\n        if (this.options.scrollPositionRestoration !== 'disabled') {\n            this.viewportScroller.setHistoryScrollRestoration('manual');\n        }\n        this.routerEventsSubscription = this.createScrollEvents();\n        this.scrollEventsSubscription = this.consumeScrollEvents();\n    };\n    RouterScroller.prototype.createScrollEvents = function () {\n        var _this = this;\n        return this.router.events.subscribe(function (e) {\n            if (e instanceof NavigationStart) {\n                // store the scroll position of the current stable navigations.\n                _this.store[_this.lastId] = _this.viewportScroller.getScrollPosition();\n                _this.lastSource = e.navigationTrigger;\n                _this.restoredId = e.restoredState ? e.restoredState.navigationId : 0;\n            }\n            else if (e instanceof NavigationEnd) {\n                _this.lastId = e.id;\n                _this.scheduleScrollEvent(e, _this.router.parseUrl(e.urlAfterRedirects).fragment);\n            }\n        });\n    };\n    RouterScroller.prototype.consumeScrollEvents = function () {\n        var _this = this;\n        return this.router.events.subscribe(function (e) {\n            if (!(e instanceof Scroll))\n                return;\n            // a popstate event. The pop state event will always ignore anchor scrolling.\n            if (e.position) {\n                if (_this.options.scrollPositionRestoration === 'top') {\n                    _this.viewportScroller.scrollToPosition([0, 0]);\n                }\n                else if (_this.options.scrollPositionRestoration === 'enabled') {\n                    _this.viewportScroller.scrollToPosition(e.position);\n                }\n                // imperative navigation \"forward\"\n            }\n            else {\n                if (e.anchor && _this.options.anchorScrolling === 'enabled') {\n                    _this.viewportScroller.scrollToAnchor(e.anchor);\n                }\n                else if (_this.options.scrollPositionRestoration !== 'disabled') {\n                    _this.viewportScroller.scrollToPosition([0, 0]);\n                }\n            }\n        });\n    };\n    RouterScroller.prototype.scheduleScrollEvent = function (routerEvent, anchor) {\n        this.router.triggerEvent(new Scroll(routerEvent, this.lastSource === 'popstate' ? this.store[this.restoredId] : null, anchor));\n    };\n    RouterScroller.prototype.ngOnDestroy = function () {\n        if (this.routerEventsSubscription) {\n            this.routerEventsSubscription.unsubscribe();\n        }\n        if (this.scrollEventsSubscription) {\n            this.scrollEventsSubscription.unsubscribe();\n        }\n    };\n    return RouterScroller;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Contains a list of directives\n *\n *\n */\nvar ROUTER_DIRECTIVES = [RouterOutlet, RouterLink, RouterLinkWithHref, RouterLinkActive];\n/**\n * @description\n *\n * Is used in DI to configure the router.\n *\n *\n */\nvar ROUTER_CONFIGURATION = new core.InjectionToken('ROUTER_CONFIGURATION');\n/**\n * @docsNotRequired\n */\nvar ROUTER_FORROOT_GUARD = new core.InjectionToken('ROUTER_FORROOT_GUARD');\nvar ROUTER_PROVIDERS = [\n    common.Location,\n    { provide: UrlSerializer, useClass: DefaultUrlSerializer },\n    {\n        provide: Router,\n        useFactory: setupRouter,\n        deps: [\n            core.ApplicationRef, UrlSerializer, ChildrenOutletContexts, common.Location, core.Injector,\n            core.NgModuleFactoryLoader, core.Compiler, ROUTES, ROUTER_CONFIGURATION,\n            [UrlHandlingStrategy, new core.Optional()], [RouteReuseStrategy, new core.Optional()]\n        ]\n    },\n    ChildrenOutletContexts,\n    { provide: ActivatedRoute, useFactory: rootRoute, deps: [Router] },\n    { provide: core.NgModuleFactoryLoader, useClass: core.SystemJsNgModuleLoader },\n    RouterPreloader,\n    NoPreloading,\n    PreloadAllModules,\n    { provide: ROUTER_CONFIGURATION, useValue: { enableTracing: false } },\n];\nfunction routerNgProbeToken() {\n    return new core.NgProbeToken('Router', Router);\n}\n/**\n * @usageNotes\n *\n * RouterModule can be imported multiple times: once per lazily-loaded bundle.\n * Since the router deals with a global shared resource--location, we cannot have\n * more than one router service active.\n *\n * That is why there are two ways to create the module: `RouterModule.forRoot` and\n * `RouterModule.forChild`.\n *\n * * `forRoot` creates a module that contains all the directives, the given routes, and the router\n *   service itself.\n * * `forChild` creates a module that contains all the directives and the given routes, but does not\n *   include the router service.\n *\n * When registered at the root, the module should be used as follows\n *\n * ```\n * @NgModule({\n *   imports: [RouterModule.forRoot(ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n * For submodules and lazy loaded submodules the module should be used as follows:\n *\n * ```\n * @NgModule({\n *   imports: [RouterModule.forChild(ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n * @description\n *\n * Adds router directives and providers.\n *\n * Managing state transitions is one of the hardest parts of building applications. This is\n * especially true on the web, where you also need to ensure that the state is reflected in the URL.\n * In addition, we often want to split applications into multiple bundles and load them on demand.\n * Doing this transparently is not trivial.\n *\n * The Angular router solves these problems. Using the router, you can declaratively specify\n * application states, manage state transitions while taking care of the URL, and load bundles on\n * demand.\n *\n * [Read this developer guide](https://angular.io/docs/ts/latest/guide/router.html) to get an\n * overview of how the router should be used.\n *\n *\n */\nvar RouterModule = /** @class */ (function () {\n    // Note: We are injecting the Router so it gets created eagerly...\n    function RouterModule(guard, router) {\n    }\n    /**\n     * Creates a module with all the router providers and directives. It also optionally sets up an\n     * application listener to perform an initial navigation.\n     *\n     * Options (see `ExtraOptions`):\n     * * `enableTracing` makes the router log all its internal events to the console.\n     * * `useHash` enables the location strategy that uses the URL fragment instead of the history\n     * API.\n     * * `initialNavigation` disables the initial navigation.\n     * * `errorHandler` provides a custom error handler.\n     * * `preloadingStrategy` configures a preloading strategy (see `PreloadAllModules`).\n     * * `onSameUrlNavigation` configures how the router handles navigation to the current URL. See\n     * `ExtraOptions` for more details.\n     */\n    RouterModule.forRoot = function (routes, config) {\n        return {\n            ngModule: RouterModule,\n            providers: [\n                ROUTER_PROVIDERS,\n                provideRoutes(routes),\n                {\n                    provide: ROUTER_FORROOT_GUARD,\n                    useFactory: provideForRootGuard,\n                    deps: [[Router, new core.Optional(), new core.SkipSelf()]]\n                },\n                { provide: ROUTER_CONFIGURATION, useValue: config ? config : {} },\n                {\n                    provide: common.LocationStrategy,\n                    useFactory: provideLocationStrategy,\n                    deps: [\n                        common.PlatformLocation, [new core.Inject(common.APP_BASE_HREF), new core.Optional()], ROUTER_CONFIGURATION\n                    ]\n                },\n                {\n                    provide: RouterScroller,\n                    useFactory: createRouterScroller,\n                    deps: [Router, common.ViewportScroller, ROUTER_CONFIGURATION]\n                },\n                {\n                    provide: PreloadingStrategy,\n                    useExisting: config && config.preloadingStrategy ? config.preloadingStrategy :\n                        NoPreloading\n                },\n                { provide: core.NgProbeToken, multi: true, useFactory: routerNgProbeToken },\n                provideRouterInitializer(),\n            ],\n        };\n    };\n    /**\n     * Creates a module with all the router directives and a provider registering routes.\n     */\n    RouterModule.forChild = function (routes) {\n        return { ngModule: RouterModule, providers: [provideRoutes(routes)] };\n    };\n    RouterModule.decorators = [\n        { type: core.NgModule, args: [{ declarations: ROUTER_DIRECTIVES, exports: ROUTER_DIRECTIVES },] }\n    ];\n    /** @nocollapse */\n    RouterModule.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: core.Optional }, { type: core.Inject, args: [ROUTER_FORROOT_GUARD,] }] },\n        { type: Router, decorators: [{ type: core.Optional }] }\n    ]; };\n    return RouterModule;\n}());\nfunction createRouterScroller(router, viewportScroller, config) {\n    if (config.scrollOffset) {\n        viewportScroller.setOffset(config.scrollOffset);\n    }\n    return new RouterScroller(router, viewportScroller, config);\n}\nfunction provideLocationStrategy(platformLocationStrategy, baseHref, options) {\n    if (options === void 0) { options = {}; }\n    return options.useHash ? new common.HashLocationStrategy(platformLocationStrategy, baseHref) :\n        new common.PathLocationStrategy(platformLocationStrategy, baseHref);\n}\nfunction provideForRootGuard(router) {\n    if (router) {\n        throw new Error(\"RouterModule.forRoot() called twice. Lazy loaded modules should use RouterModule.forChild() instead.\");\n    }\n    return 'guarded';\n}\n/**\n * @description\n *\n * Registers routes.\n *\n * ### Example\n *\n * ```\n * @NgModule({\n *   imports: [RouterModule.forChild(ROUTES)],\n *   providers: [provideRoutes(EXTRA_ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n *\n */\nfunction provideRoutes(routes) {\n    return [\n        { provide: core.ANALYZE_FOR_ENTRY_COMPONENTS, multi: true, useValue: routes },\n        { provide: ROUTES, multi: true, useValue: routes },\n    ];\n}\nfunction setupRouter(ref, urlSerializer, contexts, location, injector, loader, compiler, config, opts, urlHandlingStrategy, routeReuseStrategy) {\n    if (opts === void 0) { opts = {}; }\n    var router = new Router(null, urlSerializer, contexts, location, injector, loader, compiler, flatten(config));\n    if (urlHandlingStrategy) {\n        router.urlHandlingStrategy = urlHandlingStrategy;\n    }\n    if (routeReuseStrategy) {\n        router.routeReuseStrategy = routeReuseStrategy;\n    }\n    if (opts.errorHandler) {\n        router.errorHandler = opts.errorHandler;\n    }\n    if (opts.enableTracing) {\n        var dom_1 = platformBrowser.ɵgetDOM();\n        router.events.subscribe(function (e) {\n            dom_1.logGroup(\"Router Event: \" + e.constructor.name);\n            dom_1.log(e.toString());\n            dom_1.log(e);\n            dom_1.logGroupEnd();\n        });\n    }\n    if (opts.onSameUrlNavigation) {\n        router.onSameUrlNavigation = opts.onSameUrlNavigation;\n    }\n    if (opts.paramsInheritanceStrategy) {\n        router.paramsInheritanceStrategy = opts.paramsInheritanceStrategy;\n    }\n    return router;\n}\nfunction rootRoute(router) {\n    return router.routerState.root;\n}\n/**\n * To initialize the router properly we need to do in two steps:\n *\n * We need to start the navigation in a APP_INITIALIZER to block the bootstrap if\n * a resolver or a guards executes asynchronously. Second, we need to actually run\n * activation in a BOOTSTRAP_LISTENER. We utilize the afterPreactivation\n * hook provided by the router to do that.\n *\n * The router navigation starts, reaches the point when preactivation is done, and then\n * pauses. It waits for the hook to be resolved. We then resolve it only in a bootstrap listener.\n */\nvar RouterInitializer = /** @class */ (function () {\n    function RouterInitializer(injector) {\n        this.injector = injector;\n        this.initNavigation = false;\n        this.resultOfPreactivationDone = new rxjs.Subject();\n    }\n    RouterInitializer.prototype.appInitializer = function () {\n        var _this = this;\n        var p = this.injector.get(common.LOCATION_INITIALIZED, Promise.resolve(null));\n        return p.then(function () {\n            var resolve = null;\n            var res = new Promise(function (r) { return resolve = r; });\n            var router = _this.injector.get(Router);\n            var opts = _this.injector.get(ROUTER_CONFIGURATION);\n            if (_this.isLegacyDisabled(opts) || _this.isLegacyEnabled(opts)) {\n                resolve(true);\n            }\n            else if (opts.initialNavigation === 'disabled') {\n                router.setUpLocationChangeListener();\n                resolve(true);\n            }\n            else if (opts.initialNavigation === 'enabled') {\n                router.hooks.afterPreactivation = function () {\n                    // only the initial navigation should be delayed\n                    if (!_this.initNavigation) {\n                        _this.initNavigation = true;\n                        resolve(true);\n                        return _this.resultOfPreactivationDone;\n                        // subsequent navigations should not be delayed\n                    }\n                    else {\n                        return rxjs.of(null);\n                    }\n                };\n                router.initialNavigation();\n            }\n            else {\n                throw new Error(\"Invalid initialNavigation options: '\" + opts.initialNavigation + \"'\");\n            }\n            return res;\n        });\n    };\n    RouterInitializer.prototype.bootstrapListener = function (bootstrappedComponentRef) {\n        var opts = this.injector.get(ROUTER_CONFIGURATION);\n        var preloader = this.injector.get(RouterPreloader);\n        var routerScroller = this.injector.get(RouterScroller);\n        var router = this.injector.get(Router);\n        var ref = this.injector.get(core.ApplicationRef);\n        if (bootstrappedComponentRef !== ref.components[0]) {\n            return;\n        }\n        if (this.isLegacyEnabled(opts)) {\n            router.initialNavigation();\n        }\n        else if (this.isLegacyDisabled(opts)) {\n            router.setUpLocationChangeListener();\n        }\n        preloader.setUpPreloading();\n        routerScroller.init();\n        router.resetRootComponentType(ref.componentTypes[0]);\n        this.resultOfPreactivationDone.next(null);\n        this.resultOfPreactivationDone.complete();\n    };\n    RouterInitializer.prototype.isLegacyEnabled = function (opts) {\n        return opts.initialNavigation === 'legacy_enabled' || opts.initialNavigation === true ||\n            opts.initialNavigation === undefined;\n    };\n    RouterInitializer.prototype.isLegacyDisabled = function (opts) {\n        return opts.initialNavigation === 'legacy_disabled' || opts.initialNavigation === false;\n    };\n    RouterInitializer.decorators = [\n        { type: core.Injectable }\n    ];\n    /** @nocollapse */\n    RouterInitializer.ctorParameters = function () { return [\n        { type: core.Injector }\n    ]; };\n    return RouterInitializer;\n}());\nfunction getAppInitializer(r) {\n    return r.appInitializer.bind(r);\n}\nfunction getBootstrapListener(r) {\n    return r.bootstrapListener.bind(r);\n}\n/**\n * A token for the router initializer that will be called after the app is bootstrapped.\n *\n * @experimental\n */\nvar ROUTER_INITIALIZER = new core.InjectionToken('Router Initializer');\nfunction provideRouterInitializer() {\n    return [\n        RouterInitializer,\n        {\n            provide: core.APP_INITIALIZER,\n            multi: true,\n            useFactory: getAppInitializer,\n            deps: [RouterInitializer]\n        },\n        { provide: ROUTER_INITIALIZER, useFactory: getBootstrapListener, deps: [RouterInitializer] },\n        { provide: core.APP_BOOTSTRAP_LISTENER, multi: true, useExisting: ROUTER_INITIALIZER },\n    ];\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\nvar VERSION = new core.Version('6.1.0-beta.0+30.sha-29eb24b');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\n\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file is not used to build this module. It is only used during editing\n// by the TypeScript language service and during build for verification. `ngc`\n// replaces this file with production index.ts when it rewrites private symbol\n// names.\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexports.ɵangular_packages_router_router_a = ROUTER_FORROOT_GUARD;\nexports.ɵangular_packages_router_router_h = RouterInitializer;\nexports.ɵangular_packages_router_router_c = createRouterScroller;\nexports.ɵangular_packages_router_router_i = getAppInitializer;\nexports.ɵangular_packages_router_router_j = getBootstrapListener;\nexports.ɵangular_packages_router_router_e = provideForRootGuard;\nexports.ɵangular_packages_router_router_d = provideLocationStrategy;\nexports.ɵangular_packages_router_router_k = provideRouterInitializer;\nexports.ɵangular_packages_router_router_g = rootRoute;\nexports.ɵangular_packages_router_router_b = routerNgProbeToken;\nexports.ɵangular_packages_router_router_f = setupRouter;\nexports.ɵangular_packages_router_router_n = RouterScroller;\nexports.ɵangular_packages_router_router_l = Tree;\nexports.ɵangular_packages_router_router_m = TreeNode;\nexports.RouterLink = RouterLink;\nexports.RouterLinkWithHref = RouterLinkWithHref;\nexports.RouterLinkActive = RouterLinkActive;\nexports.RouterOutlet = RouterOutlet;\nexports.ActivationEnd = ActivationEnd;\nexports.ActivationStart = ActivationStart;\nexports.ChildActivationEnd = ChildActivationEnd;\nexports.ChildActivationStart = ChildActivationStart;\nexports.GuardsCheckEnd = GuardsCheckEnd;\nexports.GuardsCheckStart = GuardsCheckStart;\nexports.NavigationCancel = NavigationCancel;\nexports.NavigationEnd = NavigationEnd;\nexports.NavigationError = NavigationError;\nexports.NavigationStart = NavigationStart;\nexports.ResolveEnd = ResolveEnd;\nexports.ResolveStart = ResolveStart;\nexports.RouteConfigLoadEnd = RouteConfigLoadEnd;\nexports.RouteConfigLoadStart = RouteConfigLoadStart;\nexports.RouterEvent = RouterEvent;\nexports.RoutesRecognized = RoutesRecognized;\nexports.Scroll = Scroll;\nexports.RouteReuseStrategy = RouteReuseStrategy;\nexports.Router = Router;\nexports.ROUTES = ROUTES;\nexports.ROUTER_CONFIGURATION = ROUTER_CONFIGURATION;\nexports.ROUTER_INITIALIZER = ROUTER_INITIALIZER;\nexports.RouterModule = RouterModule;\nexports.provideRoutes = provideRoutes;\nexports.ChildrenOutletContexts = ChildrenOutletContexts;\nexports.OutletContext = OutletContext;\nexports.NoPreloading = NoPreloading;\nexports.PreloadAllModules = PreloadAllModules;\nexports.PreloadingStrategy = PreloadingStrategy;\nexports.RouterPreloader = RouterPreloader;\nexports.ActivatedRoute = ActivatedRoute;\nexports.ActivatedRouteSnapshot = ActivatedRouteSnapshot;\nexports.RouterState = RouterState;\nexports.RouterStateSnapshot = RouterStateSnapshot;\nexports.PRIMARY_OUTLET = PRIMARY_OUTLET;\nexports.convertToParamMap = convertToParamMap;\nexports.UrlHandlingStrategy = UrlHandlingStrategy;\nexports.DefaultUrlSerializer = DefaultUrlSerializer;\nexports.UrlSegment = UrlSegment;\nexports.UrlSegmentGroup = UrlSegmentGroup;\nexports.UrlSerializer = UrlSerializer;\nexports.UrlTree = UrlTree;\nexports.VERSION = VERSION;\nexports.ɵROUTER_PROVIDERS = ROUTER_PROVIDERS;\nexports.ɵflatten = flatten;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=router.umd.js.map\n"]}