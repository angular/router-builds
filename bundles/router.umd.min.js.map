{"version":3,"sources":["packages/router/router.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","router","core","rxjs","operators","common","platformBrowser","this","i0","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__values","o","m","Symbol","iterator","next","value","done","__read","r","e","ar","push","error","__spread","concat","RouterEvent","NavigationStart","_super","id","url","navigationTrigger","restoredState","_this","toString","NavigationEnd","urlAfterRedirects","NavigationCancel","reason","NavigationError","RoutesRecognized","state","GuardsCheckStart","GuardsCheckEnd","shouldActivate","ResolveStart","ResolveEnd","RouteConfigLoadStart","route","path","RouteConfigLoadEnd","ChildActivationStart","snapshot","routeConfig","ChildActivationEnd","ActivationStart","ActivationEnd","Scroll","routerEvent","position","anchor","OutletContext","outlet","resolver","children","ChildrenOutletContexts","attachRef","contexts","Map","onChildOutletCreated","childName","context","getOrCreateContext","set","onChildOutletDestroyed","getContext","onOutletDeactivated","onOutletReAttached","get","PRIMARY_OUTLET","ParamsAsMap","params","has","name","v","isArray","getAll","defineProperty","keys","enumerable","configurable","convertToParamMap","defaultUrlMatcher","segments","segmentGroup","parts","split","pathMatch","hasChildren","posParams","index","part","segment","startsWith","substring","consumed","slice","shallowEqual","a","key","k1","k2","flatten","arr","last","forEach","map","callback","prop","andObservables","observables","pipe","mergeAll","every","result","wrapIntoObservable","ɵisObservable","ɵisPromise","from","Promise","resolve","of","containsTree","container","containee","exact","equalQueryParams","queryParams","equalSegmentGroups","equalPath","numberOfChildren","c","root","containsQueryParams","containsSegmentGroup","containsSegmentGroupHelper","containeePaths","current","UrlTree","fragment","_queryParamMap","DEFAULT_SERIALIZER","serialize","UrlSegmentGroup","parent","k","serializePaths","UrlSegment","parameters","_parameterMap","serializePath","as","bs","mapChildrenIntoArray","fn","res","child","childOutlet","UrlSerializer","DefaultUrlSerializer","parse","UrlParser","parseRootSegment","parseQueryParams","parseFragment","tree","serializeSegment","primary","children_1","join","serializeQueryParams","strParams","encodeUriQuery","encodeUriFragment","encodeURI","encodeUriString","encodeURIComponent","replace","encodeUriSegment","decode","decodeURIComponent","decodeQuery","serializeMatrixParams","SEGMENT_RE","matchSegments","str","match","QUERY_PARAM_RE","QUERY_PARAM_VALUE_RE","remaining","consumeOptional","peekStartsWith","parseChildren","parseQueryParam","parseSegment","capture","parseParens","Error","parseMatrixParams","parseParam","valueMatch","matchQueryParams","matchUrlQueryParamValue","decodedKey","decodedVal","currentVal","allowPrimary","outletName","undefined","indexOf","substr","Tree","_root","pathFromRoot","findNode","firstChild","siblings","findPath","filter","cc","node","e_1","_a","_b","_c","node_1","e_1_1","return","e_2","unshift","e_2_1","TreeNode","nodeChildrenAsMap","RouterState","setRouterState","createEmptyState","urlTree","rootComponent","createEmptyStateSnapshot","activated","ActivatedRouteSnapshot","RouterStateSnapshot","emptyUrl","BehaviorSubject","emptyParams","emptyData","emptyQueryParams","ActivatedRoute","data","component","futureSnapshot","_futureSnapshot","_routerState","_paramMap","inheritedParamsDataResolve","paramsInheritanceStrategy","inheritingStartingFrom","parent_1","flattenInherited","reduce","curr","_resolvedData","urlSegment","lastPathIndex","_urlSegment","_lastPathIndex","_resolve","serializeNode","advanceActivatedRoute","currentSnapshot","nextSnapshot","shallowEqualArrays","equalParamsAndUrlSegments","equalSegments","RouterOutlet","parentContexts","location","changeDetector","_activatedRoute","activateEvents","EventEmitter","deactivateEvents","ngOnDestroy","ngOnInit","attach","activateWith","instance","detach","cmp","ref","activatedRoute","insert","hostView","deactivate","destroy","emit","isActivated","resolveComponentFactory","childContexts","injector","OutletInjector","createComponent","markForCheck","ngDirectiveDef","ɵdefineDirective","type","selectors","RouterOutlet_Factory","ɵdirectiveInject","ɵinjectViewContainerRef","ComponentFactoryResolver","ɵinjectAttribute","ɵinjectChangeDetectorRef","outputs","features","ɵPublicFeature","exportAs","token","notFoundValue","EmptyOutletComponent","ngComponentDef","ɵdefineComponent","EmptyOutletComponent_Factory","consts","vars","template","EmptyOutletComponent_Template","rf","ctx","ɵelement","directives","LoadedRouterConfig","routes","validateConfig","config","parentPath","validateNode","getFullPath","fullPath","loadChildren","redirectTo","matcher","charAt","currentRoute","standardizeConfig","NoMatch","AbsoluteRedirect","noMatch","Observable","obs","absoluteRedirect","newTree","namedOutletsRedirect","ApplyRedirects","moduleInjector","configLoader","urlSerializer","allowRedirects","ngModule","NgModuleRef","expandSegmentGroup","rootSegmentGroup","createUrlTree","catchError","noMatchError","rootCandidate","expandChildren","expandSegment","waitForMap","obj","waitHead","waitTail","mapped","concatAll","expandSegmentAgainstRoute","first","_","EmptyError","noLeftoversInUrl","paths","getOutlet","matchSegmentAgainstRoute","expandSegmentAgainstRouteUsingRedirect","expandWildCardWithParamsAgainstRouteUsingRedirect","expandRegularSegmentAgainstRouteUsingRedirect","applyRedirectCommands","lineralizeSegments","mergeMap","newSegments","group","consumedSegments","lastChild","positionalParamSegments","matched","rawSegmentGroup","load","cfg","_loadedConfig","rawSlicedSegments","getChildConfig","routerConfig","childModule","childConfig","slicedSegments","containsEmptyPathRedirectsWithNamedOutlets","some","isEmptyPathRedirect","mergeTrivialChildren","createChildrenForEmptySegments","primarySegmentGroup","e_3","routes_2","routes_2_1","e_3_1","containsEmptyPathRedirects","addEmptySegmentsToChildrenIfNeeded","routes_1","routes_1_1","cs","runCanLoadGuard","canLoad","injectionToken","guard","shouldLoad","canLoadFails","navigationCancelingError","message","applyRedirectCreatreUrlTree","newRoot","createSegmentGroup","createQueryParams","redirectToParams","actualParams","sourceName","updatedSegments","createSegments","redirectToSegments","actualSegments","findPosParam","findOrReturn","redirectToUrlSegment","pos","idx","actualSegments_1","actualSegments_1_1","splice","isMatrixParams","command","outlets","segmentPath","oldSegmentGroup","newSegmentGroup","qp","replaceSegment","oldSegment","newSegment","Navigation","isAbsolute","numberOfDoubleDots","commands","cmdWithOutlet","find","toRoot","Position","processChildren","getPath","updateSegmentGroup","startIndex","updateSegmentGroupChildren","prefixedWith","currentCommandIndex","currentPathIndex","pathIndex","commandIndex","compare","slicedCommands","g","createNewSegmentGroup","outlets_2","getOutlets","createNewSegmentChildren","stringify","CanActivate","CanDeactivate","PreActivation","future","forwardEvent","canActivateChecks","canDeactivateChecks","initialize","futureRoot","setupChildRouteGuards","checkGuards","isDeactivating","isActivating","runCanDeactivateChecks","canDeactivate","runCanActivateChecks","resolveData","concatMap","check","runResolve","futureNode","currNode","futurePath","prevChildren","setupRouteGuards","deactivateRouteAndItsChildren","shouldRunGuardsAndResolvers","runGuardsAndResolvers","mode","runCanDeactivate","fireChildActivationStart","fireActivationStart","runCanActivateChild","runCanActivate","canActivate","getToken","canActivateChildGuards","reverse","extractCanActivateChild","guards","canActivateChild","resolveNode","resolvedData","key_1","getResolver","closestLoadedConfig","NoMatch$1","Recognizer","rootComponentType","relativeLinkResolution","recognize","split$1","processSegmentGroup","freeze","rootNode","routeState","inheritParamsAndData","routeNode","processSegment","checkOutletNameUniqueness","nodes","names","routeWithSameOutletName","sortActivatedRouteSnapshots","sort","localeCompare","config_1","config_1_1","processSegmentAgainstRoute","rawSegment","getData","getSourceSegmentGroup","getPathIndexShift","getResolve","match$1","_sourceSegment","_segmentIndexShift","containsEmptyPathMatchesWithNamedOutlets","emptyPathMatch","getOutlet$1","s_1","createChildrenForEmptyPaths","primarySegment","containsEmptyPathMatches","s_2","addEmptyPathsToChildrenIfNeeded","RouteReuseStrategy","DefaultRouteReuseStrategy","shouldDetach","store","detachedTree","shouldAttach","retrieve","shouldReuseRoute","ROUTES","InjectionToken","RouterConfigLoader","loader","compiler","onLoadStartListener","onLoadEndListener","parentInjector","loadModuleFactory","NgModuleFactory","compileModuleAsync","UrlHandlingStrategy","DefaultUrlHandlingStrategy","shouldProcessUrl","extract","merge","newUrlPart","wholeUrl","defaultErrorHandler","defaultMalformedUriErrorHandler","defaultRouterHook","runExtras","Router","rootContexts","navigations","navigationId","isNgZoneEnabled","events","Subject","errorHandler","malformedUriErrorHandler","navigated","lastSuccessfulId","hooks","beforePreactivation","afterPreactivation","urlHandlingStrategy","routeReuseStrategy","onSameUrlNavigation","urlUpdateStrategy","console","ɵConsole","ngZone","NgZone","resetConfig","currentUrlTree","createEmptyUrlTree","rawUrlTree","triggerEvent","routerState","processNavigations","resetRootComponentType","initialNavigation","setUpLocationChangeListener","navigateByUrl","replaceUrl","locationSubscription","subscribe","change","parseUrl","source","setTimeout","scheduleNavigation","serializeUrl","dispose","unsubscribe","navigationExtras","relativeTo","preserveQueryParams","queryParamsHandling","preserveFragment","isDevMode","warn","f","q","removeEmptyProps","nav","computeNavigation","cmd","cmdIdx","outlets_1","urlPart","partIndex","startingPosition","findStartingPosition","modifier","createPositionApplyingDoubleDots","ci","dd","extras","skipLocationChange","isInAngularZone","mergedTree","navigate","validateCommands","isActive","executeScheduledNavigation","promise","catch","rawUrl","lastNavigation","reject","rej","urlTransition","setBrowserUrl","then","runNavigate","precreatedState","resolvePromise","rejectPromise","preActivation","routerState$","appliedUrl","applyRedirects","appliedUrlTree","evt","createRouterState","prevState","createNode","createOrReuseChildren","detachedRouteHandle","setFutureSnapshotsOfActivatedRoutes","createActivatedRoute","activateRoutes","storedState","storedUrl","navigationIsSuccessful","ActivateRoutes","activate","resetUrlToCurrentUrlTree","isNavigationCancelingError","resetStateAndUrl","ee","isCurrentPathEqualTo","replaceState","go","futureState","currState","currRoot","deactivateChildRoutes","activateChildRoutes","futureChild","childOutletName","deactivateRoutes","parentContext","detachAndStoreRouteSubtree","deactivateRouteAndOutlet","componentRef","contexts_1","stored","advanceActivatedRouteNodeAndItsChildren","parentLoadedConfig","cmpFactoryResolver","componentFactoryResolver","RouterLink","tabIndex","renderer","el","setAttribute","nativeElement","preserve","onClick","attrBoolValue","RouterLink_Factory","ɵinjectRenderer2","ɵinjectElementRef","hostBindings","RouterLink_HostBindings","dirIndex","elIndex","ɵlistener","RouterLink_click_HostBindingHandler","$event","ɵloadDirective","inputs","routerLink","RouterLinkWithHref","locationStrategy","subscription","updateTargetUrlAndHref","ngOnChanges","changes","button","ctrlKey","metaKey","shiftKey","target","href","prepareExternalUrl","RouterLinkWithHref_Factory","LocationStrategy","RouterLinkWithHref_HostBindings","ɵelementProperty","ɵbind","RouterLinkWithHref_click_HostBindingHandler","hostVars","ɵNgOnChangesFeature","RouterLinkActive","element","cdr","classes","routerLinkActiveOptions","update","ngAfterContentInit","links","linksWithHrefs","hasActiveLinks","addClass","removeClass","isLinkActive","link","RouterLinkActive_Factory","contentQueries","RouterLinkActive_ContentQueries","ɵregisterContentQuery","ɵquery","contentQueriesRefresh","RouterLinkActive_ContentQueriesRefresh","queryStartIndex","_t","ɵqueryRefresh","ɵloadQueryList","routerLinkActive","PreloadingStrategy","PreloadAllModules","preload","NoPreloading","RouterPreloader","moduleLoader","preloadingStrategy","setUpPreloading","processRoutes","preloadConfig","ngInjectableDef","defineInjectable","RouterPreloader_Factory","inject","NgModuleFactoryLoader","Compiler","INJECTOR","providedIn","RouterScroller","viewportScroller","options","lastId","lastSource","restoredId","scrollPositionRestoration","anchorScrolling","init","setHistoryScrollRestoration","routerEventsSubscription","createScrollEvents","scrollEventsSubscription","consumeScrollEvents","getScrollPosition","scheduleScrollEvent","scrollToPosition","scrollToAnchor","ROUTER_DIRECTIVES","ROUTER_CONFIGURATION","ROUTER_FORROOT_GUARD","ROUTER_PROVIDERS","Location","provide","useClass","useFactory","setupRouter","opts","enableTracing","dom_1","ɵgetDOM","logGroup","log","logGroupEnd","deps","ApplicationRef","Injector","Optional","rootRoute","SystemJsNgModuleLoader","useValue","routerNgProbeToken","NgProbeToken","RouterModule","forRoot","providers","provideRoutes","provideForRootGuard","SkipSelf","provideLocationStrategy","PlatformLocation","Inject","APP_BASE_HREF","createRouterScroller","ViewportScroller","useExisting","multi","provideRouterInitializer","RouterInitializer","APP_INITIALIZER","getAppInitializer","ROUTER_INITIALIZER","getBootstrapListener","APP_BOOTSTRAP_LISTENER","forChild","ngModuleDef","ɵdefineNgModule","bootstrap","declarations","imports","ngInjectorDef","defineInjector","RouterModule_Factory","scrollOffset","setOffset","platformLocationStrategy","baseHref","useHash","HashLocationStrategy","PathLocationStrategy","ANALYZE_FOR_ENTRY_COMPONENTS","initNavigation","resultOfPreactivationDone","appInitializer","LOCATION_INITIALIZED","isLegacyDisabled","isLegacyEnabled","bootstrapListener","bootstrappedComponentRef","preloader","routerScroller","components","componentTypes","complete","RouterInitializer_Factory","bind","VERSION","Version","ɵEmptyOutletComponent","ɵROUTER_PROVIDERS","ɵflatten"],"mappings":"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","sourcesContent":["/**\n * @license Angular v7.0.0-beta.5+54.sha-e8bab13\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('rxjs'), require('rxjs/operators'), require('@angular/common'), require('@angular/platform-browser')) :\n    typeof define === 'function' && define.amd ? define('@angular/router', ['exports', '@angular/core', 'rxjs', 'rxjs/operators', '@angular/common', '@angular/platform-browser'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.router = {}),global.ng.core,global.rxjs,global.rxjs.operators,global.ng.common,global.ng.platformBrowser));\n}(this, (function (exports,i0,rxjs,operators,common,platformBrowser) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Base for events the Router goes through, as opposed to events tied to a specific\n     * Route. `RouterEvent`s will only be fired one time for any given navigation.\n     *\n     * Example:\n     *\n     * ```\n     * class MyService {\n     *   constructor(public router: Router, logger: Logger) {\n     *     router.events.filter(e => e instanceof RouterEvent).subscribe(e => {\n     *       logger.log(e.id, e.url);\n     *     });\n     *   }\n     * }\n     * ```\n     *\n     * @experimental\n     */\n    var RouterEvent = /** @class */ (function () {\n        function RouterEvent(\n        /** @docsNotRequired */\n        id, \n        /** @docsNotRequired */\n        url) {\n            this.id = id;\n            this.url = url;\n        }\n        return RouterEvent;\n    }());\n    /**\n     * @description\n     *\n     * Represents an event triggered when a navigation starts.\n     *\n     *\n     */\n    var NavigationStart = /** @class */ (function (_super) {\n        __extends(NavigationStart, _super);\n        function NavigationStart(\n        /** @docsNotRequired */\n        id, \n        /** @docsNotRequired */\n        url, \n        /** @docsNotRequired */\n        navigationTrigger, \n        /** @docsNotRequired */\n        restoredState) {\n            if (navigationTrigger === void 0) { \n            /** @docsNotRequired */\n            navigationTrigger = 'imperative'; }\n            if (restoredState === void 0) { \n            /** @docsNotRequired */\n            restoredState = null; }\n            var _this = _super.call(this, id, url) || this;\n            _this.navigationTrigger = navigationTrigger;\n            _this.restoredState = restoredState;\n            return _this;\n        }\n        /** @docsNotRequired */\n        NavigationStart.prototype.toString = function () { return \"NavigationStart(id: \" + this.id + \", url: '\" + this.url + \"')\"; };\n        return NavigationStart;\n    }(RouterEvent));\n    /**\n     * @description\n     *\n     * Represents an event triggered when a navigation ends successfully.\n     *\n     *\n     */\n    var NavigationEnd = /** @class */ (function (_super) {\n        __extends(NavigationEnd, _super);\n        function NavigationEnd(\n        /** @docsNotRequired */\n        id, \n        /** @docsNotRequired */\n        url, \n        /** @docsNotRequired */\n        urlAfterRedirects) {\n            var _this = _super.call(this, id, url) || this;\n            _this.urlAfterRedirects = urlAfterRedirects;\n            return _this;\n        }\n        /** @docsNotRequired */\n        NavigationEnd.prototype.toString = function () {\n            return \"NavigationEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"')\";\n        };\n        return NavigationEnd;\n    }(RouterEvent));\n    /**\n     * @description\n     *\n     * Represents an event triggered when a navigation is canceled.\n     *\n     *\n     */\n    var NavigationCancel = /** @class */ (function (_super) {\n        __extends(NavigationCancel, _super);\n        function NavigationCancel(\n        /** @docsNotRequired */\n        id, \n        /** @docsNotRequired */\n        url, \n        /** @docsNotRequired */\n        reason) {\n            var _this = _super.call(this, id, url) || this;\n            _this.reason = reason;\n            return _this;\n        }\n        /** @docsNotRequired */\n        NavigationCancel.prototype.toString = function () { return \"NavigationCancel(id: \" + this.id + \", url: '\" + this.url + \"')\"; };\n        return NavigationCancel;\n    }(RouterEvent));\n    /**\n     * @description\n     *\n     * Represents an event triggered when a navigation fails due to an unexpected error.\n     *\n     *\n     */\n    var NavigationError = /** @class */ (function (_super) {\n        __extends(NavigationError, _super);\n        function NavigationError(\n        /** @docsNotRequired */\n        id, \n        /** @docsNotRequired */\n        url, \n        /** @docsNotRequired */\n        error) {\n            var _this = _super.call(this, id, url) || this;\n            _this.error = error;\n            return _this;\n        }\n        /** @docsNotRequired */\n        NavigationError.prototype.toString = function () {\n            return \"NavigationError(id: \" + this.id + \", url: '\" + this.url + \"', error: \" + this.error + \")\";\n        };\n        return NavigationError;\n    }(RouterEvent));\n    /**\n     * @description\n     *\n     * Represents an event triggered when routes are recognized.\n     *\n     *\n     */\n    var RoutesRecognized = /** @class */ (function (_super) {\n        __extends(RoutesRecognized, _super);\n        function RoutesRecognized(\n        /** @docsNotRequired */\n        id, \n        /** @docsNotRequired */\n        url, \n        /** @docsNotRequired */\n        urlAfterRedirects, \n        /** @docsNotRequired */\n        state) {\n            var _this = _super.call(this, id, url) || this;\n            _this.urlAfterRedirects = urlAfterRedirects;\n            _this.state = state;\n            return _this;\n        }\n        /** @docsNotRequired */\n        RoutesRecognized.prototype.toString = function () {\n            return \"RoutesRecognized(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n        };\n        return RoutesRecognized;\n    }(RouterEvent));\n    /**\n     * @description\n     *\n     * Represents the start of the Guard phase of routing.\n     *\n     * @experimental\n     */\n    var GuardsCheckStart = /** @class */ (function (_super) {\n        __extends(GuardsCheckStart, _super);\n        function GuardsCheckStart(\n        /** @docsNotRequired */\n        id, \n        /** @docsNotRequired */\n        url, \n        /** @docsNotRequired */\n        urlAfterRedirects, \n        /** @docsNotRequired */\n        state) {\n            var _this = _super.call(this, id, url) || this;\n            _this.urlAfterRedirects = urlAfterRedirects;\n            _this.state = state;\n            return _this;\n        }\n        GuardsCheckStart.prototype.toString = function () {\n            return \"GuardsCheckStart(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n        };\n        return GuardsCheckStart;\n    }(RouterEvent));\n    /**\n     * @description\n     *\n     * Represents the end of the Guard phase of routing.\n     *\n     * @experimental\n     */\n    var GuardsCheckEnd = /** @class */ (function (_super) {\n        __extends(GuardsCheckEnd, _super);\n        function GuardsCheckEnd(\n        /** @docsNotRequired */\n        id, \n        /** @docsNotRequired */\n        url, \n        /** @docsNotRequired */\n        urlAfterRedirects, \n        /** @docsNotRequired */\n        state, \n        /** @docsNotRequired */\n        shouldActivate) {\n            var _this = _super.call(this, id, url) || this;\n            _this.urlAfterRedirects = urlAfterRedirects;\n            _this.state = state;\n            _this.shouldActivate = shouldActivate;\n            return _this;\n        }\n        GuardsCheckEnd.prototype.toString = function () {\n            return \"GuardsCheckEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \", shouldActivate: \" + this.shouldActivate + \")\";\n        };\n        return GuardsCheckEnd;\n    }(RouterEvent));\n    /**\n     * @description\n     *\n     * Represents the start of the Resolve phase of routing. The timing of this\n     * event may change, thus it's experimental. In the current iteration it will run\n     * in the \"resolve\" phase whether there's things to resolve or not. In the future this\n     * behavior may change to only run when there are things to be resolved.\n     *\n     * @experimental\n     */\n    var ResolveStart = /** @class */ (function (_super) {\n        __extends(ResolveStart, _super);\n        function ResolveStart(\n        /** @docsNotRequired */\n        id, \n        /** @docsNotRequired */\n        url, \n        /** @docsNotRequired */\n        urlAfterRedirects, \n        /** @docsNotRequired */\n        state) {\n            var _this = _super.call(this, id, url) || this;\n            _this.urlAfterRedirects = urlAfterRedirects;\n            _this.state = state;\n            return _this;\n        }\n        ResolveStart.prototype.toString = function () {\n            return \"ResolveStart(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n        };\n        return ResolveStart;\n    }(RouterEvent));\n    /**\n     * @description\n     *\n     * Represents the end of the Resolve phase of routing. See note on\n     * `ResolveStart` for use of this experimental API.\n     *\n     * @experimental\n     */\n    var ResolveEnd = /** @class */ (function (_super) {\n        __extends(ResolveEnd, _super);\n        function ResolveEnd(\n        /** @docsNotRequired */\n        id, \n        /** @docsNotRequired */\n        url, \n        /** @docsNotRequired */\n        urlAfterRedirects, \n        /** @docsNotRequired */\n        state) {\n            var _this = _super.call(this, id, url) || this;\n            _this.urlAfterRedirects = urlAfterRedirects;\n            _this.state = state;\n            return _this;\n        }\n        ResolveEnd.prototype.toString = function () {\n            return \"ResolveEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n        };\n        return ResolveEnd;\n    }(RouterEvent));\n    /**\n     * @description\n     *\n     * Represents an event triggered before lazy loading a route config.\n     *\n     * @experimental\n     */\n    var RouteConfigLoadStart = /** @class */ (function () {\n        function RouteConfigLoadStart(\n        /** @docsNotRequired */\n        route) {\n            this.route = route;\n        }\n        RouteConfigLoadStart.prototype.toString = function () { return \"RouteConfigLoadStart(path: \" + this.route.path + \")\"; };\n        return RouteConfigLoadStart;\n    }());\n    /**\n     * @description\n     *\n     * Represents an event triggered when a route has been lazy loaded.\n     *\n     * @experimental\n     */\n    var RouteConfigLoadEnd = /** @class */ (function () {\n        function RouteConfigLoadEnd(\n        /** @docsNotRequired */\n        route) {\n            this.route = route;\n        }\n        RouteConfigLoadEnd.prototype.toString = function () { return \"RouteConfigLoadEnd(path: \" + this.route.path + \")\"; };\n        return RouteConfigLoadEnd;\n    }());\n    /**\n     * @description\n     *\n     * Represents the start of end of the Resolve phase of routing. See note on\n     * `ChildActivationEnd` for use of this experimental API.\n     *\n     * @experimental\n     */\n    var ChildActivationStart = /** @class */ (function () {\n        function ChildActivationStart(\n        /** @docsNotRequired */\n        snapshot) {\n            this.snapshot = snapshot;\n        }\n        ChildActivationStart.prototype.toString = function () {\n            var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n            return \"ChildActivationStart(path: '\" + path + \"')\";\n        };\n        return ChildActivationStart;\n    }());\n    /**\n     * @description\n     *\n     * Represents the start of end of the Resolve phase of routing. See note on\n     * `ChildActivationStart` for use of this experimental API.\n     *\n     * @experimental\n     */\n    var ChildActivationEnd = /** @class */ (function () {\n        function ChildActivationEnd(\n        /** @docsNotRequired */\n        snapshot) {\n            this.snapshot = snapshot;\n        }\n        ChildActivationEnd.prototype.toString = function () {\n            var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n            return \"ChildActivationEnd(path: '\" + path + \"')\";\n        };\n        return ChildActivationEnd;\n    }());\n    /**\n     * @description\n     *\n     * Represents the start of end of the Resolve phase of routing. See note on\n     * `ActivationEnd` for use of this experimental API.\n     *\n     * @experimental\n     */\n    var ActivationStart = /** @class */ (function () {\n        function ActivationStart(\n        /** @docsNotRequired */\n        snapshot) {\n            this.snapshot = snapshot;\n        }\n        ActivationStart.prototype.toString = function () {\n            var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n            return \"ActivationStart(path: '\" + path + \"')\";\n        };\n        return ActivationStart;\n    }());\n    /**\n     * @description\n     *\n     * Represents the start of end of the Resolve phase of routing. See note on\n     * `ActivationStart` for use of this experimental API.\n     *\n     * @experimental\n     */\n    var ActivationEnd = /** @class */ (function () {\n        function ActivationEnd(\n        /** @docsNotRequired */\n        snapshot) {\n            this.snapshot = snapshot;\n        }\n        ActivationEnd.prototype.toString = function () {\n            var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n            return \"ActivationEnd(path: '\" + path + \"')\";\n        };\n        return ActivationEnd;\n    }());\n    /**\n     * @description\n     *\n     * Represents a scrolling event.\n     */\n    var Scroll = /** @class */ (function () {\n        function Scroll(\n        /** @docsNotRequired */\n        routerEvent, \n        /** @docsNotRequired */\n        position, \n        /** @docsNotRequired */\n        anchor) {\n            this.routerEvent = routerEvent;\n            this.position = position;\n            this.anchor = anchor;\n        }\n        Scroll.prototype.toString = function () {\n            var pos = this.position ? this.position[0] + \", \" + this.position[1] : null;\n            return \"Scroll(anchor: '\" + this.anchor + \"', position: '\" + pos + \"')\";\n        };\n        return Scroll;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Store contextual information about a `RouterOutlet`\n     *\n     *\n     */\n    var OutletContext = /** @class */ (function () {\n        function OutletContext() {\n            this.outlet = null;\n            this.route = null;\n            this.resolver = null;\n            this.children = new ChildrenOutletContexts();\n            this.attachRef = null;\n        }\n        return OutletContext;\n    }());\n    /**\n     * Store contextual information about the children (= nested) `RouterOutlet`\n     *\n     *\n     */\n    var ChildrenOutletContexts = /** @class */ (function () {\n        function ChildrenOutletContexts() {\n            // contexts for child outlets, by name.\n            this.contexts = new Map();\n        }\n        /** Called when a `RouterOutlet` directive is instantiated */\n        ChildrenOutletContexts.prototype.onChildOutletCreated = function (childName, outlet) {\n            var context = this.getOrCreateContext(childName);\n            context.outlet = outlet;\n            this.contexts.set(childName, context);\n        };\n        /**\n         * Called when a `RouterOutlet` directive is destroyed.\n         * We need to keep the context as the outlet could be destroyed inside a NgIf and might be\n         * re-created later.\n         */\n        ChildrenOutletContexts.prototype.onChildOutletDestroyed = function (childName) {\n            var context = this.getContext(childName);\n            if (context) {\n                context.outlet = null;\n            }\n        };\n        /**\n         * Called when the corresponding route is deactivated during navigation.\n         * Because the component get destroyed, all children outlet are destroyed.\n         */\n        ChildrenOutletContexts.prototype.onOutletDeactivated = function () {\n            var contexts = this.contexts;\n            this.contexts = new Map();\n            return contexts;\n        };\n        ChildrenOutletContexts.prototype.onOutletReAttached = function (contexts) { this.contexts = contexts; };\n        ChildrenOutletContexts.prototype.getOrCreateContext = function (childName) {\n            var context = this.getContext(childName);\n            if (!context) {\n                context = new OutletContext();\n                this.contexts.set(childName, context);\n            }\n            return context;\n        };\n        ChildrenOutletContexts.prototype.getContext = function (childName) { return this.contexts.get(childName) || null; };\n        return ChildrenOutletContexts;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Name of the primary outlet.\n     *\n     *\n     */\n    var PRIMARY_OUTLET = 'primary';\n    var ParamsAsMap = /** @class */ (function () {\n        function ParamsAsMap(params) {\n            this.params = params || {};\n        }\n        ParamsAsMap.prototype.has = function (name) { return this.params.hasOwnProperty(name); };\n        ParamsAsMap.prototype.get = function (name) {\n            if (this.has(name)) {\n                var v = this.params[name];\n                return Array.isArray(v) ? v[0] : v;\n            }\n            return null;\n        };\n        ParamsAsMap.prototype.getAll = function (name) {\n            if (this.has(name)) {\n                var v = this.params[name];\n                return Array.isArray(v) ? v : [v];\n            }\n            return [];\n        };\n        Object.defineProperty(ParamsAsMap.prototype, \"keys\", {\n            get: function () { return Object.keys(this.params); },\n            enumerable: true,\n            configurable: true\n        });\n        return ParamsAsMap;\n    }());\n    /**\n     * Convert a `Params` instance to a `ParamMap`.\n     *\n     *\n     */\n    function convertToParamMap(params) {\n        return new ParamsAsMap(params);\n    }\n    var NAVIGATION_CANCELING_ERROR = 'ngNavigationCancelingError';\n    function navigationCancelingError(message) {\n        var error = Error('NavigationCancelingError: ' + message);\n        error[NAVIGATION_CANCELING_ERROR] = true;\n        return error;\n    }\n    function isNavigationCancelingError(error) {\n        return error && error[NAVIGATION_CANCELING_ERROR];\n    }\n    // Matches the route configuration (`route`) against the actual URL (`segments`).\n    function defaultUrlMatcher(segments, segmentGroup, route) {\n        var parts = route.path.split('/');\n        if (parts.length > segments.length) {\n            // The actual URL is shorter than the config, no match\n            return null;\n        }\n        if (route.pathMatch === 'full' &&\n            (segmentGroup.hasChildren() || parts.length < segments.length)) {\n            // The config is longer than the actual URL but we are looking for a full match, return null\n            return null;\n        }\n        var posParams = {};\n        // Check each config part against the actual URL\n        for (var index = 0; index < parts.length; index++) {\n            var part = parts[index];\n            var segment = segments[index];\n            var isParameter = part.startsWith(':');\n            if (isParameter) {\n                posParams[part.substring(1)] = segment;\n            }\n            else if (part !== segment.path) {\n                // The actual URL part does not match the config, no match\n                return null;\n            }\n        }\n        return { consumed: segments.slice(0, parts.length), posParams: posParams };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function shallowEqualArrays(a, b) {\n        if (a.length !== b.length)\n            return false;\n        for (var i = 0; i < a.length; ++i) {\n            if (!shallowEqual(a[i], b[i]))\n                return false;\n        }\n        return true;\n    }\n    function shallowEqual(a, b) {\n        var k1 = Object.keys(a);\n        var k2 = Object.keys(b);\n        if (k1.length != k2.length) {\n            return false;\n        }\n        var key;\n        for (var i = 0; i < k1.length; i++) {\n            key = k1[i];\n            if (a[key] !== b[key]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * Flattens single-level nested arrays.\n     */\n    function flatten(arr) {\n        return Array.prototype.concat.apply([], arr);\n    }\n    /**\n     * Return the last element of an array.\n     */\n    function last(a) {\n        return a.length > 0 ? a[a.length - 1] : null;\n    }\n    function forEach(map, callback) {\n        for (var prop in map) {\n            if (map.hasOwnProperty(prop)) {\n                callback(map[prop], prop);\n            }\n        }\n    }\n    function waitForMap(obj, fn) {\n        if (Object.keys(obj).length === 0) {\n            return rxjs.of({});\n        }\n        var waitHead = [];\n        var waitTail = [];\n        var res = {};\n        forEach(obj, function (a, k) {\n            var mapped = fn(k, a).pipe(operators.map(function (r) { return res[k] = r; }));\n            if (k === PRIMARY_OUTLET) {\n                waitHead.push(mapped);\n            }\n            else {\n                waitTail.push(mapped);\n            }\n        });\n        // Closure compiler has problem with using spread operator here. So just using Array.concat.\n        return rxjs.of.apply(null, waitHead.concat(waitTail)).pipe(operators.concatAll(), operators.last(), operators.map(function () { return res; }));\n    }\n    /**\n     * ANDs Observables by merging all input observables, reducing to an Observable verifying all\n     * input Observables return `true`.\n     */\n    function andObservables(observables) {\n        return observables.pipe(operators.mergeAll(), operators.every(function (result) { return result === true; }));\n    }\n    function wrapIntoObservable(value) {\n        if (i0.ɵisObservable(value)) {\n            return value;\n        }\n        if (i0.ɵisPromise(value)) {\n            // Use `Promise.resolve()` to wrap promise-like instances.\n            // Required ie when a Resolver returns a AngularJS `$q` promise to correctly trigger the\n            // change detection.\n            return rxjs.from(Promise.resolve(value));\n        }\n        return rxjs.of(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function createEmptyUrlTree() {\n        return new UrlTree(new UrlSegmentGroup([], {}), {}, null);\n    }\n    function containsTree(container, containee, exact) {\n        if (exact) {\n            return equalQueryParams(container.queryParams, containee.queryParams) &&\n                equalSegmentGroups(container.root, containee.root);\n        }\n        return containsQueryParams(container.queryParams, containee.queryParams) &&\n            containsSegmentGroup(container.root, containee.root);\n    }\n    function equalQueryParams(container, containee) {\n        // TODO: This does not handle array params correctly.\n        return shallowEqual(container, containee);\n    }\n    function equalSegmentGroups(container, containee) {\n        if (!equalPath(container.segments, containee.segments))\n            return false;\n        if (container.numberOfChildren !== containee.numberOfChildren)\n            return false;\n        for (var c in containee.children) {\n            if (!container.children[c])\n                return false;\n            if (!equalSegmentGroups(container.children[c], containee.children[c]))\n                return false;\n        }\n        return true;\n    }\n    function containsQueryParams(container, containee) {\n        // TODO: This does not handle array params correctly.\n        return Object.keys(containee).length <= Object.keys(container).length &&\n            Object.keys(containee).every(function (key) { return containee[key] === container[key]; });\n    }\n    function containsSegmentGroup(container, containee) {\n        return containsSegmentGroupHelper(container, containee, containee.segments);\n    }\n    function containsSegmentGroupHelper(container, containee, containeePaths) {\n        if (container.segments.length > containeePaths.length) {\n            var current = container.segments.slice(0, containeePaths.length);\n            if (!equalPath(current, containeePaths))\n                return false;\n            if (containee.hasChildren())\n                return false;\n            return true;\n        }\n        else if (container.segments.length === containeePaths.length) {\n            if (!equalPath(container.segments, containeePaths))\n                return false;\n            for (var c in containee.children) {\n                if (!container.children[c])\n                    return false;\n                if (!containsSegmentGroup(container.children[c], containee.children[c]))\n                    return false;\n            }\n            return true;\n        }\n        else {\n            var current = containeePaths.slice(0, container.segments.length);\n            var next = containeePaths.slice(container.segments.length);\n            if (!equalPath(container.segments, current))\n                return false;\n            if (!container.children[PRIMARY_OUTLET])\n                return false;\n            return containsSegmentGroupHelper(container.children[PRIMARY_OUTLET], containee, next);\n        }\n    }\n    /**\n     * @description\n     *\n     * Represents the parsed URL.\n     *\n     * Since a router state is a tree, and the URL is nothing but a serialized state, the URL is a\n     * serialized tree.\n     * UrlTree is a data structure that provides a lot of affordances in dealing with URLs\n     *\n     * ### Example\n     *\n     * ```\n     * @Component({templateUrl:'template.html'})\n     * class MyComponent {\n     *   constructor(router: Router) {\n     *     const tree: UrlTree =\n     *       router.parseUrl('/team/33/(user/victor//support:help)?debug=true#fragment');\n     *     const f = tree.fragment; // return 'fragment'\n     *     const q = tree.queryParams; // returns {debug: 'true'}\n     *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n     *     const s: UrlSegment[] = g.segments; // returns 2 segments 'team' and '33'\n     *     g.children[PRIMARY_OUTLET].segments; // returns 2 segments 'user' and 'victor'\n     *     g.children['support'].segments; // return 1 segment 'help'\n     *   }\n     * }\n     * ```\n     *\n     *\n     */\n    var UrlTree = /** @class */ (function () {\n        /** @internal */\n        function UrlTree(\n        /** The root segment group of the URL tree */\n        root, \n        /** The query params of the URL */\n        queryParams, \n        /** The fragment of the URL */\n        fragment) {\n            this.root = root;\n            this.queryParams = queryParams;\n            this.fragment = fragment;\n        }\n        Object.defineProperty(UrlTree.prototype, \"queryParamMap\", {\n            get: function () {\n                if (!this._queryParamMap) {\n                    this._queryParamMap = convertToParamMap(this.queryParams);\n                }\n                return this._queryParamMap;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /** @docsNotRequired */\n        UrlTree.prototype.toString = function () { return DEFAULT_SERIALIZER.serialize(this); };\n        return UrlTree;\n    }());\n    /**\n     * @description\n     *\n     * Represents the parsed URL segment group.\n     *\n     * See `UrlTree` for more information.\n     *\n     *\n     */\n    var UrlSegmentGroup = /** @class */ (function () {\n        function UrlSegmentGroup(\n        /** The URL segments of this group. See `UrlSegment` for more information */\n        segments, \n        /** The list of children of this group */\n        children) {\n            var _this = this;\n            this.segments = segments;\n            this.children = children;\n            /** The parent node in the url tree */\n            this.parent = null;\n            forEach(children, function (v, k) { return v.parent = _this; });\n        }\n        /** Whether the segment has child segments */\n        UrlSegmentGroup.prototype.hasChildren = function () { return this.numberOfChildren > 0; };\n        Object.defineProperty(UrlSegmentGroup.prototype, \"numberOfChildren\", {\n            /** Number of child segments */\n            get: function () { return Object.keys(this.children).length; },\n            enumerable: true,\n            configurable: true\n        });\n        /** @docsNotRequired */\n        UrlSegmentGroup.prototype.toString = function () { return serializePaths(this); };\n        return UrlSegmentGroup;\n    }());\n    /**\n     * @description\n     *\n     * Represents a single URL segment.\n     *\n     * A UrlSegment is a part of a URL between the two slashes. It contains a path and the matrix\n     * parameters associated with the segment.\n     *\n     * ## Example\n     *\n     * ```\n     * @Component({templateUrl:'template.html'})\n     * class MyComponent {\n     *   constructor(router: Router) {\n     *     const tree: UrlTree = router.parseUrl('/team;id=33');\n     *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n     *     const s: UrlSegment[] = g.segments;\n     *     s[0].path; // returns 'team'\n     *     s[0].parameters; // returns {id: 33}\n     *   }\n     * }\n     * ```\n     *\n     *\n     */\n    var UrlSegment = /** @class */ (function () {\n        function UrlSegment(\n        /** The path part of a URL segment */\n        path, \n        /** The matrix parameters associated with a segment */\n        parameters) {\n            this.path = path;\n            this.parameters = parameters;\n        }\n        Object.defineProperty(UrlSegment.prototype, \"parameterMap\", {\n            get: function () {\n                if (!this._parameterMap) {\n                    this._parameterMap = convertToParamMap(this.parameters);\n                }\n                return this._parameterMap;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /** @docsNotRequired */\n        UrlSegment.prototype.toString = function () { return serializePath(this); };\n        return UrlSegment;\n    }());\n    function equalSegments(as, bs) {\n        return equalPath(as, bs) && as.every(function (a, i) { return shallowEqual(a.parameters, bs[i].parameters); });\n    }\n    function equalPath(as, bs) {\n        if (as.length !== bs.length)\n            return false;\n        return as.every(function (a, i) { return a.path === bs[i].path; });\n    }\n    function mapChildrenIntoArray(segment, fn) {\n        var res = [];\n        forEach(segment.children, function (child, childOutlet) {\n            if (childOutlet === PRIMARY_OUTLET) {\n                res = res.concat(fn(child, childOutlet));\n            }\n        });\n        forEach(segment.children, function (child, childOutlet) {\n            if (childOutlet !== PRIMARY_OUTLET) {\n                res = res.concat(fn(child, childOutlet));\n            }\n        });\n        return res;\n    }\n    /**\n     * @description\n     *\n     * Serializes and deserializes a URL string into a URL tree.\n     *\n     * The url serialization strategy is customizable. You can\n     * make all URLs case insensitive by providing a custom UrlSerializer.\n     *\n     * See `DefaultUrlSerializer` for an example of a URL serializer.\n     *\n     *\n     */\n    var UrlSerializer = /** @class */ (function () {\n        function UrlSerializer() {\n        }\n        return UrlSerializer;\n    }());\n    /**\n     * @description\n     *\n     * A default implementation of the `UrlSerializer`.\n     *\n     * Example URLs:\n     *\n     * ```\n     * /inbox/33(popup:compose)\n     * /inbox/33;open=true/messages/44\n     * ```\n     *\n     * DefaultUrlSerializer uses parentheses to serialize secondary segments (e.g., popup:compose), the\n     * colon syntax to specify the outlet, and the ';parameter=value' syntax (e.g., open=true) to\n     * specify route specific parameters.\n     *\n     *\n     */\n    var DefaultUrlSerializer = /** @class */ (function () {\n        function DefaultUrlSerializer() {\n        }\n        /** Parses a url into a `UrlTree` */\n        DefaultUrlSerializer.prototype.parse = function (url) {\n            var p = new UrlParser(url);\n            return new UrlTree(p.parseRootSegment(), p.parseQueryParams(), p.parseFragment());\n        };\n        /** Converts a `UrlTree` into a url */\n        DefaultUrlSerializer.prototype.serialize = function (tree) {\n            var segment = \"/\" + serializeSegment(tree.root, true);\n            var query = serializeQueryParams(tree.queryParams);\n            var fragment = typeof tree.fragment === \"string\" ? \"#\" + encodeUriFragment(tree.fragment) : '';\n            return \"\" + segment + query + fragment;\n        };\n        return DefaultUrlSerializer;\n    }());\n    var DEFAULT_SERIALIZER = new DefaultUrlSerializer();\n    function serializePaths(segment) {\n        return segment.segments.map(function (p) { return serializePath(p); }).join('/');\n    }\n    function serializeSegment(segment, root) {\n        if (!segment.hasChildren()) {\n            return serializePaths(segment);\n        }\n        if (root) {\n            var primary = segment.children[PRIMARY_OUTLET] ?\n                serializeSegment(segment.children[PRIMARY_OUTLET], false) :\n                '';\n            var children_1 = [];\n            forEach(segment.children, function (v, k) {\n                if (k !== PRIMARY_OUTLET) {\n                    children_1.push(k + \":\" + serializeSegment(v, false));\n                }\n            });\n            return children_1.length > 0 ? primary + \"(\" + children_1.join('//') + \")\" : primary;\n        }\n        else {\n            var children = mapChildrenIntoArray(segment, function (v, k) {\n                if (k === PRIMARY_OUTLET) {\n                    return [serializeSegment(segment.children[PRIMARY_OUTLET], false)];\n                }\n                return [k + \":\" + serializeSegment(v, false)];\n            });\n            return serializePaths(segment) + \"/(\" + children.join('//') + \")\";\n        }\n    }\n    /**\n     * Encodes a URI string with the default encoding. This function will only ever be called from\n     * `encodeUriQuery` or `encodeUriSegment` as it's the base set of encodings to be used. We need\n     * a custom encoding because encodeURIComponent is too aggressive and encodes stuff that doesn't\n     * have to be encoded per https://url.spec.whatwg.org.\n     */\n    function encodeUriString(s) {\n        return encodeURIComponent(s)\n            .replace(/%40/g, '@')\n            .replace(/%3A/gi, ':')\n            .replace(/%24/g, '$')\n            .replace(/%2C/gi, ',');\n    }\n    /**\n     * This function should be used to encode both keys and values in a query string key/value. In\n     * the following URL, you need to call encodeUriQuery on \"k\" and \"v\":\n     *\n     * http://www.site.org/html;mk=mv?k=v#f\n     */\n    function encodeUriQuery(s) {\n        return encodeUriString(s).replace(/%3B/gi, ';');\n    }\n    /**\n     * This function should be used to encode a URL fragment. In the following URL, you need to call\n     * encodeUriFragment on \"f\":\n     *\n     * http://www.site.org/html;mk=mv?k=v#f\n     */\n    function encodeUriFragment(s) {\n        return encodeURI(s);\n    }\n    /**\n     * This function should be run on any URI segment as well as the key and value in a key/value\n     * pair for matrix params. In the following URL, you need to call encodeUriSegment on \"html\",\n     * \"mk\", and \"mv\":\n     *\n     * http://www.site.org/html;mk=mv?k=v#f\n     */\n    function encodeUriSegment(s) {\n        return encodeUriString(s).replace(/\\(/g, '%28').replace(/\\)/g, '%29').replace(/%26/gi, '&');\n    }\n    function decode(s) {\n        return decodeURIComponent(s);\n    }\n    // Query keys/values should have the \"+\" replaced first, as \"+\" in a query string is \" \".\n    // decodeURIComponent function will not decode \"+\" as a space.\n    function decodeQuery(s) {\n        return decode(s.replace(/\\+/g, '%20'));\n    }\n    function serializePath(path) {\n        return \"\" + encodeUriSegment(path.path) + serializeMatrixParams(path.parameters);\n    }\n    function serializeMatrixParams(params) {\n        return Object.keys(params)\n            .map(function (key) { return \";\" + encodeUriSegment(key) + \"=\" + encodeUriSegment(params[key]); })\n            .join('');\n    }\n    function serializeQueryParams(params) {\n        var strParams = Object.keys(params).map(function (name) {\n            var value = params[name];\n            return Array.isArray(value) ?\n                value.map(function (v) { return encodeUriQuery(name) + \"=\" + encodeUriQuery(v); }).join('&') :\n                encodeUriQuery(name) + \"=\" + encodeUriQuery(value);\n        });\n        return strParams.length ? \"?\" + strParams.join(\"&\") : '';\n    }\n    var SEGMENT_RE = /^[^\\/()?;=#]+/;\n    function matchSegments(str) {\n        var match = str.match(SEGMENT_RE);\n        return match ? match[0] : '';\n    }\n    var QUERY_PARAM_RE = /^[^=?&#]+/;\n    // Return the name of the query param at the start of the string or an empty string\n    function matchQueryParams(str) {\n        var match = str.match(QUERY_PARAM_RE);\n        return match ? match[0] : '';\n    }\n    var QUERY_PARAM_VALUE_RE = /^[^?&#]+/;\n    // Return the value of the query param at the start of the string or an empty string\n    function matchUrlQueryParamValue(str) {\n        var match = str.match(QUERY_PARAM_VALUE_RE);\n        return match ? match[0] : '';\n    }\n    var UrlParser = /** @class */ (function () {\n        function UrlParser(url) {\n            this.url = url;\n            this.remaining = url;\n        }\n        UrlParser.prototype.parseRootSegment = function () {\n            this.consumeOptional('/');\n            if (this.remaining === '' || this.peekStartsWith('?') || this.peekStartsWith('#')) {\n                return new UrlSegmentGroup([], {});\n            }\n            // The root segment group never has segments\n            return new UrlSegmentGroup([], this.parseChildren());\n        };\n        UrlParser.prototype.parseQueryParams = function () {\n            var params = {};\n            if (this.consumeOptional('?')) {\n                do {\n                    this.parseQueryParam(params);\n                } while (this.consumeOptional('&'));\n            }\n            return params;\n        };\n        UrlParser.prototype.parseFragment = function () {\n            return this.consumeOptional('#') ? decodeURIComponent(this.remaining) : null;\n        };\n        UrlParser.prototype.parseChildren = function () {\n            if (this.remaining === '') {\n                return {};\n            }\n            this.consumeOptional('/');\n            var segments = [];\n            if (!this.peekStartsWith('(')) {\n                segments.push(this.parseSegment());\n            }\n            while (this.peekStartsWith('/') && !this.peekStartsWith('//') && !this.peekStartsWith('/(')) {\n                this.capture('/');\n                segments.push(this.parseSegment());\n            }\n            var children = {};\n            if (this.peekStartsWith('/(')) {\n                this.capture('/');\n                children = this.parseParens(true);\n            }\n            var res = {};\n            if (this.peekStartsWith('(')) {\n                res = this.parseParens(false);\n            }\n            if (segments.length > 0 || Object.keys(children).length > 0) {\n                res[PRIMARY_OUTLET] = new UrlSegmentGroup(segments, children);\n            }\n            return res;\n        };\n        // parse a segment with its matrix parameters\n        // ie `name;k1=v1;k2`\n        UrlParser.prototype.parseSegment = function () {\n            var path = matchSegments(this.remaining);\n            if (path === '' && this.peekStartsWith(';')) {\n                throw new Error(\"Empty path url segment cannot have parameters: '\" + this.remaining + \"'.\");\n            }\n            this.capture(path);\n            return new UrlSegment(decode(path), this.parseMatrixParams());\n        };\n        UrlParser.prototype.parseMatrixParams = function () {\n            var params = {};\n            while (this.consumeOptional(';')) {\n                this.parseParam(params);\n            }\n            return params;\n        };\n        UrlParser.prototype.parseParam = function (params) {\n            var key = matchSegments(this.remaining);\n            if (!key) {\n                return;\n            }\n            this.capture(key);\n            var value = '';\n            if (this.consumeOptional('=')) {\n                var valueMatch = matchSegments(this.remaining);\n                if (valueMatch) {\n                    value = valueMatch;\n                    this.capture(value);\n                }\n            }\n            params[decode(key)] = decode(value);\n        };\n        // Parse a single query parameter `name[=value]`\n        UrlParser.prototype.parseQueryParam = function (params) {\n            var key = matchQueryParams(this.remaining);\n            if (!key) {\n                return;\n            }\n            this.capture(key);\n            var value = '';\n            if (this.consumeOptional('=')) {\n                var valueMatch = matchUrlQueryParamValue(this.remaining);\n                if (valueMatch) {\n                    value = valueMatch;\n                    this.capture(value);\n                }\n            }\n            var decodedKey = decodeQuery(key);\n            var decodedVal = decodeQuery(value);\n            if (params.hasOwnProperty(decodedKey)) {\n                // Append to existing values\n                var currentVal = params[decodedKey];\n                if (!Array.isArray(currentVal)) {\n                    currentVal = [currentVal];\n                    params[decodedKey] = currentVal;\n                }\n                currentVal.push(decodedVal);\n            }\n            else {\n                // Create a new value\n                params[decodedKey] = decodedVal;\n            }\n        };\n        // parse `(a/b//outlet_name:c/d)`\n        UrlParser.prototype.parseParens = function (allowPrimary) {\n            var segments = {};\n            this.capture('(');\n            while (!this.consumeOptional(')') && this.remaining.length > 0) {\n                var path = matchSegments(this.remaining);\n                var next = this.remaining[path.length];\n                // if is is not one of these characters, then the segment was unescaped\n                // or the group was not closed\n                if (next !== '/' && next !== ')' && next !== ';') {\n                    throw new Error(\"Cannot parse url '\" + this.url + \"'\");\n                }\n                var outletName = undefined;\n                if (path.indexOf(':') > -1) {\n                    outletName = path.substr(0, path.indexOf(':'));\n                    this.capture(outletName);\n                    this.capture(':');\n                }\n                else if (allowPrimary) {\n                    outletName = PRIMARY_OUTLET;\n                }\n                var children = this.parseChildren();\n                segments[outletName] = Object.keys(children).length === 1 ? children[PRIMARY_OUTLET] :\n                    new UrlSegmentGroup([], children);\n                this.consumeOptional('//');\n            }\n            return segments;\n        };\n        UrlParser.prototype.peekStartsWith = function (str) { return this.remaining.startsWith(str); };\n        // Consumes the prefix when it is present and returns whether it has been consumed\n        UrlParser.prototype.consumeOptional = function (str) {\n            if (this.peekStartsWith(str)) {\n                this.remaining = this.remaining.substring(str.length);\n                return true;\n            }\n            return false;\n        };\n        UrlParser.prototype.capture = function (str) {\n            if (!this.consumeOptional(str)) {\n                throw new Error(\"Expected \\\"\" + str + \"\\\".\");\n            }\n        };\n        return UrlParser;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Tree = /** @class */ (function () {\n        function Tree(root) {\n            this._root = root;\n        }\n        Object.defineProperty(Tree.prototype, \"root\", {\n            get: function () { return this._root.value; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @internal\n         */\n        Tree.prototype.parent = function (t) {\n            var p = this.pathFromRoot(t);\n            return p.length > 1 ? p[p.length - 2] : null;\n        };\n        /**\n         * @internal\n         */\n        Tree.prototype.children = function (t) {\n            var n = findNode(t, this._root);\n            return n ? n.children.map(function (t) { return t.value; }) : [];\n        };\n        /**\n         * @internal\n         */\n        Tree.prototype.firstChild = function (t) {\n            var n = findNode(t, this._root);\n            return n && n.children.length > 0 ? n.children[0].value : null;\n        };\n        /**\n         * @internal\n         */\n        Tree.prototype.siblings = function (t) {\n            var p = findPath(t, this._root);\n            if (p.length < 2)\n                return [];\n            var c = p[p.length - 2].children.map(function (c) { return c.value; });\n            return c.filter(function (cc) { return cc !== t; });\n        };\n        /**\n         * @internal\n         */\n        Tree.prototype.pathFromRoot = function (t) { return findPath(t, this._root).map(function (s) { return s.value; }); };\n        return Tree;\n    }());\n    // DFS for the node matching the value\n    function findNode(value, node) {\n        var e_1, _a;\n        if (value === node.value)\n            return node;\n        try {\n            for (var _b = __values(node.children), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var child = _c.value;\n                var node_1 = findNode(value, child);\n                if (node_1)\n                    return node_1;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return null;\n    }\n    // Return the path to the node with the given value using DFS\n    function findPath(value, node) {\n        var e_2, _a;\n        if (value === node.value)\n            return [node];\n        try {\n            for (var _b = __values(node.children), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var child = _c.value;\n                var path = findPath(value, child);\n                if (path.length) {\n                    path.unshift(node);\n                    return path;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return [];\n    }\n    var TreeNode = /** @class */ (function () {\n        function TreeNode(value, children) {\n            this.value = value;\n            this.children = children;\n        }\n        TreeNode.prototype.toString = function () { return \"TreeNode(\" + this.value + \")\"; };\n        return TreeNode;\n    }());\n    // Return the list of T indexed by outlet name\n    function nodeChildrenAsMap(node) {\n        var map = {};\n        if (node) {\n            node.children.forEach(function (child) { return map[child.value.outlet] = child; });\n        }\n        return map;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents the state of the router.\n     *\n     * RouterState is a tree of activated routes. Every node in this tree knows about the \"consumed\" URL\n     * segments, the extracted parameters, and the resolved data.\n     *\n     * ### Example\n     *\n     * ```\n     * @Component({templateUrl:'template.html'})\n     * class MyComponent {\n     *   constructor(router: Router) {\n     *     const state: RouterState = router.routerState;\n     *     const root: ActivatedRoute = state.root;\n     *     const child = root.firstChild;\n     *     const id: Observable<string> = child.params.map(p => p.id);\n     *     //...\n     *   }\n     * }\n     * ```\n     *\n     * See `ActivatedRoute` for more information.\n     *\n     *\n     */\n    var RouterState = /** @class */ (function (_super) {\n        __extends(RouterState, _super);\n        /** @internal */\n        function RouterState(root, \n        /** The current snapshot of the router state */\n        snapshot) {\n            var _this = _super.call(this, root) || this;\n            _this.snapshot = snapshot;\n            setRouterState(_this, root);\n            return _this;\n        }\n        RouterState.prototype.toString = function () { return this.snapshot.toString(); };\n        return RouterState;\n    }(Tree));\n    function createEmptyState(urlTree, rootComponent) {\n        var snapshot = createEmptyStateSnapshot(urlTree, rootComponent);\n        var emptyUrl = new rxjs.BehaviorSubject([new UrlSegment('', {})]);\n        var emptyParams = new rxjs.BehaviorSubject({});\n        var emptyData = new rxjs.BehaviorSubject({});\n        var emptyQueryParams = new rxjs.BehaviorSubject({});\n        var fragment = new rxjs.BehaviorSubject('');\n        var activated = new ActivatedRoute(emptyUrl, emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, snapshot.root);\n        activated.snapshot = snapshot.root;\n        return new RouterState(new TreeNode(activated, []), snapshot);\n    }\n    function createEmptyStateSnapshot(urlTree, rootComponent) {\n        var emptyParams = {};\n        var emptyData = {};\n        var emptyQueryParams = {};\n        var fragment = '';\n        var activated = new ActivatedRouteSnapshot([], emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, null, urlTree.root, -1, {});\n        return new RouterStateSnapshot('', new TreeNode(activated, []));\n    }\n    /**\n     * @description\n     *\n     * Contains the information about a route associated with a component loaded in an\n     * outlet.  An `ActivatedRoute` can also be used to traverse the router state tree.\n     *\n     * ```\n     * @Component({...})\n     * class MyComponent {\n     *   constructor(route: ActivatedRoute) {\n     *     const id: Observable<string> = route.params.map(p => p.id);\n     *     const url: Observable<string> = route.url.map(segments => segments.join(''));\n     *     // route.data includes both `data` and `resolve`\n     *     const user = route.data.map(d => d.user);\n     *   }\n     * }\n     * ```\n     *\n     *\n     */\n    var ActivatedRoute = /** @class */ (function () {\n        /** @internal */\n        function ActivatedRoute(\n        /** An observable of the URL segments matched by this route */\n        url, \n        /** An observable of the matrix parameters scoped to this route */\n        params, \n        /** An observable of the query parameters shared by all the routes */\n        queryParams, \n        /** An observable of the URL fragment shared by all the routes */\n        fragment, \n        /** An observable of the static and resolved data of this route. */\n        data, \n        /** The outlet name of the route. It's a constant */\n        outlet, \n        /** The component of the route. It's a constant */\n        // TODO(vsavkin): remove |string\n        component, futureSnapshot) {\n            this.url = url;\n            this.params = params;\n            this.queryParams = queryParams;\n            this.fragment = fragment;\n            this.data = data;\n            this.outlet = outlet;\n            this.component = component;\n            this._futureSnapshot = futureSnapshot;\n        }\n        Object.defineProperty(ActivatedRoute.prototype, \"routeConfig\", {\n            /** The configuration used to match this route */\n            get: function () { return this._futureSnapshot.routeConfig; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRoute.prototype, \"root\", {\n            /** The root of the router state */\n            get: function () { return this._routerState.root; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRoute.prototype, \"parent\", {\n            /** The parent of this route in the router state tree */\n            get: function () { return this._routerState.parent(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRoute.prototype, \"firstChild\", {\n            /** The first child of this route in the router state tree */\n            get: function () { return this._routerState.firstChild(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRoute.prototype, \"children\", {\n            /** The children of this route in the router state tree */\n            get: function () { return this._routerState.children(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRoute.prototype, \"pathFromRoot\", {\n            /** The path from the root of the router state tree to this route */\n            get: function () { return this._routerState.pathFromRoot(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRoute.prototype, \"paramMap\", {\n            get: function () {\n                if (!this._paramMap) {\n                    this._paramMap = this.params.pipe(operators.map(function (p) { return convertToParamMap(p); }));\n                }\n                return this._paramMap;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRoute.prototype, \"queryParamMap\", {\n            get: function () {\n                if (!this._queryParamMap) {\n                    this._queryParamMap =\n                        this.queryParams.pipe(operators.map(function (p) { return convertToParamMap(p); }));\n                }\n                return this._queryParamMap;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ActivatedRoute.prototype.toString = function () {\n            return this.snapshot ? this.snapshot.toString() : \"Future(\" + this._futureSnapshot + \")\";\n        };\n        return ActivatedRoute;\n    }());\n    /**\n     * Returns the inherited params, data, and resolve for a given route.\n     * By default, this only inherits values up to the nearest path-less or component-less route.\n     * @internal\n     */\n    function inheritedParamsDataResolve(route, paramsInheritanceStrategy) {\n        if (paramsInheritanceStrategy === void 0) { paramsInheritanceStrategy = 'emptyOnly'; }\n        var pathFromRoot = route.pathFromRoot;\n        var inheritingStartingFrom = 0;\n        if (paramsInheritanceStrategy !== 'always') {\n            inheritingStartingFrom = pathFromRoot.length - 1;\n            while (inheritingStartingFrom >= 1) {\n                var current = pathFromRoot[inheritingStartingFrom];\n                var parent_1 = pathFromRoot[inheritingStartingFrom - 1];\n                // current route is an empty path => inherits its parent's params and data\n                if (current.routeConfig && current.routeConfig.path === '') {\n                    inheritingStartingFrom--;\n                    // parent is componentless => current route should inherit its params and data\n                }\n                else if (!parent_1.component) {\n                    inheritingStartingFrom--;\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return flattenInherited(pathFromRoot.slice(inheritingStartingFrom));\n    }\n    /** @internal */\n    function flattenInherited(pathFromRoot) {\n        return pathFromRoot.reduce(function (res, curr) {\n            var params = __assign({}, res.params, curr.params);\n            var data = __assign({}, res.data, curr.data);\n            var resolve = __assign({}, res.resolve, curr._resolvedData);\n            return { params: params, data: data, resolve: resolve };\n        }, { params: {}, data: {}, resolve: {} });\n    }\n    /**\n     * @description\n     *\n     * Contains the information about a route associated with a component loaded in an\n     * outlet at a particular moment in time. ActivatedRouteSnapshot can also be used to\n     * traverse the router state tree.\n     *\n     * ```\n     * @Component({templateUrl:'./my-component.html'})\n     * class MyComponent {\n     *   constructor(route: ActivatedRoute) {\n     *     const id: string = route.snapshot.params.id;\n     *     const url: string = route.snapshot.url.join('');\n     *     const user = route.snapshot.data.user;\n     *   }\n     * }\n     * ```\n     *\n     *\n     */\n    var ActivatedRouteSnapshot = /** @class */ (function () {\n        /** @internal */\n        function ActivatedRouteSnapshot(\n        /** The URL segments matched by this route */\n        url, \n        /** The matrix parameters scoped to this route */\n        params, \n        /** The query parameters shared by all the routes */\n        queryParams, \n        /** The URL fragment shared by all the routes */\n        fragment, \n        /** The static and resolved data of this route */\n        data, \n        /** The outlet name of the route */\n        outlet, \n        /** The component of the route */\n        component, routeConfig, urlSegment, lastPathIndex, resolve) {\n            this.url = url;\n            this.params = params;\n            this.queryParams = queryParams;\n            this.fragment = fragment;\n            this.data = data;\n            this.outlet = outlet;\n            this.component = component;\n            this.routeConfig = routeConfig;\n            this._urlSegment = urlSegment;\n            this._lastPathIndex = lastPathIndex;\n            this._resolve = resolve;\n        }\n        Object.defineProperty(ActivatedRouteSnapshot.prototype, \"root\", {\n            /** The root of the router state */\n            get: function () { return this._routerState.root; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRouteSnapshot.prototype, \"parent\", {\n            /** The parent of this route in the router state tree */\n            get: function () { return this._routerState.parent(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRouteSnapshot.prototype, \"firstChild\", {\n            /** The first child of this route in the router state tree */\n            get: function () { return this._routerState.firstChild(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRouteSnapshot.prototype, \"children\", {\n            /** The children of this route in the router state tree */\n            get: function () { return this._routerState.children(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRouteSnapshot.prototype, \"pathFromRoot\", {\n            /** The path from the root of the router state tree to this route */\n            get: function () { return this._routerState.pathFromRoot(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRouteSnapshot.prototype, \"paramMap\", {\n            get: function () {\n                if (!this._paramMap) {\n                    this._paramMap = convertToParamMap(this.params);\n                }\n                return this._paramMap;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRouteSnapshot.prototype, \"queryParamMap\", {\n            get: function () {\n                if (!this._queryParamMap) {\n                    this._queryParamMap = convertToParamMap(this.queryParams);\n                }\n                return this._queryParamMap;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ActivatedRouteSnapshot.prototype.toString = function () {\n            var url = this.url.map(function (segment) { return segment.toString(); }).join('/');\n            var matched = this.routeConfig ? this.routeConfig.path : '';\n            return \"Route(url:'\" + url + \"', path:'\" + matched + \"')\";\n        };\n        return ActivatedRouteSnapshot;\n    }());\n    /**\n     * @description\n     *\n     * Represents the state of the router at a moment in time.\n     *\n     * This is a tree of activated route snapshots. Every node in this tree knows about\n     * the \"consumed\" URL segments, the extracted parameters, and the resolved data.\n     *\n     * ### Example\n     *\n     * ```\n     * @Component({templateUrl:'template.html'})\n     * class MyComponent {\n     *   constructor(router: Router) {\n     *     const state: RouterState = router.routerState;\n     *     const snapshot: RouterStateSnapshot = state.snapshot;\n     *     const root: ActivatedRouteSnapshot = snapshot.root;\n     *     const child = root.firstChild;\n     *     const id: Observable<string> = child.params.map(p => p.id);\n     *     //...\n     *   }\n     * }\n     * ```\n     *\n     *\n     */\n    var RouterStateSnapshot = /** @class */ (function (_super) {\n        __extends(RouterStateSnapshot, _super);\n        /** @internal */\n        function RouterStateSnapshot(\n        /** The url from which this snapshot was created */\n        url, root) {\n            var _this = _super.call(this, root) || this;\n            _this.url = url;\n            setRouterState(_this, root);\n            return _this;\n        }\n        RouterStateSnapshot.prototype.toString = function () { return serializeNode(this._root); };\n        return RouterStateSnapshot;\n    }(Tree));\n    function setRouterState(state, node) {\n        node.value._routerState = state;\n        node.children.forEach(function (c) { return setRouterState(state, c); });\n    }\n    function serializeNode(node) {\n        var c = node.children.length > 0 ? \" { \" + node.children.map(serializeNode).join(', ') + \" } \" : '';\n        return \"\" + node.value + c;\n    }\n    /**\n     * The expectation is that the activate route is created with the right set of parameters.\n     * So we push new values into the observables only when they are not the initial values.\n     * And we detect that by checking if the snapshot field is set.\n     */\n    function advanceActivatedRoute(route) {\n        if (route.snapshot) {\n            var currentSnapshot = route.snapshot;\n            var nextSnapshot = route._futureSnapshot;\n            route.snapshot = nextSnapshot;\n            if (!shallowEqual(currentSnapshot.queryParams, nextSnapshot.queryParams)) {\n                route.queryParams.next(nextSnapshot.queryParams);\n            }\n            if (currentSnapshot.fragment !== nextSnapshot.fragment) {\n                route.fragment.next(nextSnapshot.fragment);\n            }\n            if (!shallowEqual(currentSnapshot.params, nextSnapshot.params)) {\n                route.params.next(nextSnapshot.params);\n            }\n            if (!shallowEqualArrays(currentSnapshot.url, nextSnapshot.url)) {\n                route.url.next(nextSnapshot.url);\n            }\n            if (!shallowEqual(currentSnapshot.data, nextSnapshot.data)) {\n                route.data.next(nextSnapshot.data);\n            }\n        }\n        else {\n            route.snapshot = route._futureSnapshot;\n            // this is for resolved data\n            route.data.next(route._futureSnapshot.data);\n        }\n    }\n    function equalParamsAndUrlSegments(a, b) {\n        var equalUrlParams = shallowEqual(a.params, b.params) && equalSegments(a.url, b.url);\n        var parentsMismatch = !a.parent !== !b.parent;\n        return equalUrlParams && !parentsMismatch &&\n            (!a.parent || equalParamsAndUrlSegments(a.parent, b.parent));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Acts as a placeholder that Angular dynamically fills based on the current router state.\n     *\n     * ```\n     * <router-outlet></router-outlet>\n     * <router-outlet name='left'></router-outlet>\n     * <router-outlet name='right'></router-outlet>\n     * ```\n     *\n     * A router outlet will emit an activate event any time a new component is being instantiated,\n     * and a deactivate event when it is being destroyed.\n     *\n     * ```\n     * <router-outlet\n     *   (activate)='onActivate($event)'\n     *   (deactivate)='onDeactivate($event)'></router-outlet>\n     * ```\n     * @ngModule RouterModule\n     *\n     *\n     */\n    var RouterOutlet = /** @class */ (function () {\n        function RouterOutlet(parentContexts, location, resolver, name, changeDetector) {\n            this.parentContexts = parentContexts;\n            this.location = location;\n            this.resolver = resolver;\n            this.changeDetector = changeDetector;\n            this.activated = null;\n            this._activatedRoute = null;\n            this.activateEvents = new i0.EventEmitter();\n            this.deactivateEvents = new i0.EventEmitter();\n            this.name = name || PRIMARY_OUTLET;\n            parentContexts.onChildOutletCreated(this.name, this);\n        }\n        RouterOutlet.prototype.ngOnDestroy = function () { this.parentContexts.onChildOutletDestroyed(this.name); };\n        RouterOutlet.prototype.ngOnInit = function () {\n            if (!this.activated) {\n                // If the outlet was not instantiated at the time the route got activated we need to populate\n                // the outlet when it is initialized (ie inside a NgIf)\n                var context = this.parentContexts.getContext(this.name);\n                if (context && context.route) {\n                    if (context.attachRef) {\n                        // `attachRef` is populated when there is an existing component to mount\n                        this.attach(context.attachRef, context.route);\n                    }\n                    else {\n                        // otherwise the component defined in the configuration is created\n                        this.activateWith(context.route, context.resolver || null);\n                    }\n                }\n            }\n        };\n        Object.defineProperty(RouterOutlet.prototype, \"isActivated\", {\n            get: function () { return !!this.activated; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(RouterOutlet.prototype, \"component\", {\n            get: function () {\n                if (!this.activated)\n                    throw new Error('Outlet is not activated');\n                return this.activated.instance;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(RouterOutlet.prototype, \"activatedRoute\", {\n            get: function () {\n                if (!this.activated)\n                    throw new Error('Outlet is not activated');\n                return this._activatedRoute;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(RouterOutlet.prototype, \"activatedRouteData\", {\n            get: function () {\n                if (this._activatedRoute) {\n                    return this._activatedRoute.snapshot.data;\n                }\n                return {};\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Called when the `RouteReuseStrategy` instructs to detach the subtree\n         */\n        RouterOutlet.prototype.detach = function () {\n            if (!this.activated)\n                throw new Error('Outlet is not activated');\n            this.location.detach();\n            var cmp = this.activated;\n            this.activated = null;\n            this._activatedRoute = null;\n            return cmp;\n        };\n        /**\n         * Called when the `RouteReuseStrategy` instructs to re-attach a previously detached subtree\n         */\n        RouterOutlet.prototype.attach = function (ref, activatedRoute) {\n            this.activated = ref;\n            this._activatedRoute = activatedRoute;\n            this.location.insert(ref.hostView);\n        };\n        RouterOutlet.prototype.deactivate = function () {\n            if (this.activated) {\n                var c = this.component;\n                this.activated.destroy();\n                this.activated = null;\n                this._activatedRoute = null;\n                this.deactivateEvents.emit(c);\n            }\n        };\n        RouterOutlet.prototype.activateWith = function (activatedRoute, resolver) {\n            if (this.isActivated) {\n                throw new Error('Cannot activate an already activated outlet');\n            }\n            this._activatedRoute = activatedRoute;\n            var snapshot = activatedRoute._futureSnapshot;\n            var component = snapshot.routeConfig.component;\n            resolver = resolver || this.resolver;\n            var factory = resolver.resolveComponentFactory(component);\n            var childContexts = this.parentContexts.getOrCreateContext(this.name).children;\n            var injector = new OutletInjector(activatedRoute, childContexts, this.location.injector);\n            this.activated = this.location.createComponent(factory, this.location.length, injector);\n            // Calling `markForCheck` to make sure we will run the change detection when the\n            // `RouterOutlet` is inside a `ChangeDetectionStrategy.OnPush` component.\n            this.changeDetector.markForCheck();\n            this.activateEvents.emit(this.activated.instance);\n        };\n        RouterOutlet.ngDirectiveDef = i0.ɵdefineDirective({ type: RouterOutlet, selectors: [[\"router-outlet\"]], factory: function RouterOutlet_Factory(t) { return new (t || RouterOutlet)(i0.ɵdirectiveInject(ChildrenOutletContexts), i0.ɵinjectViewContainerRef(), i0.ɵdirectiveInject(i0.ComponentFactoryResolver), i0.ɵinjectAttribute('name'), i0.ɵinjectChangeDetectorRef()); }, outputs: { activateEvents: \"activate\", deactivateEvents: \"deactivate\" }, features: [i0.ɵPublicFeature], exportAs: \"outlet\" });\n        return RouterOutlet;\n    }());\n    var OutletInjector = /** @class */ (function () {\n        function OutletInjector(route, childContexts, parent) {\n            this.route = route;\n            this.childContexts = childContexts;\n            this.parent = parent;\n        }\n        OutletInjector.prototype.get = function (token, notFoundValue) {\n            if (token === ActivatedRoute) {\n                return this.route;\n            }\n            if (token === ChildrenOutletContexts) {\n                return this.childContexts;\n            }\n            return this.parent.get(token, notFoundValue);\n        };\n        return OutletInjector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This component is used internally within the router to be a placeholder when an empty\n     * router-outlet is needed. For example, with a config such as:\n     *\n     * `{path: 'parent', outlet: 'nav', children: [...]}`\n     *\n     * In order to render, there needs to be a component on this config, which will default\n     * to this `EmptyOutletComponent`.\n     */\n    var EmptyOutletComponent = /** @class */ (function () {\n        function EmptyOutletComponent() {\n        }\n        EmptyOutletComponent.ngComponentDef = i0.ɵdefineComponent({ type: EmptyOutletComponent, selectors: [[\"\"]], factory: function EmptyOutletComponent_Factory(t) { return new (t || EmptyOutletComponent)(); }, features: [i0.ɵPublicFeature], consts: 1, vars: 0, template: function EmptyOutletComponent_Template(rf, ctx) { if (rf & 1) {\n                i0.ɵelement(0, \"router-outlet\");\n            } }, directives: [RouterOutlet] });\n        return EmptyOutletComponent;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LoadedRouterConfig = /** @class */ (function () {\n        function LoadedRouterConfig(routes, module) {\n            this.routes = routes;\n            this.module = module;\n        }\n        return LoadedRouterConfig;\n    }());\n    function validateConfig(config, parentPath) {\n        if (parentPath === void 0) { parentPath = ''; }\n        // forEach doesn't iterate undefined values\n        for (var i = 0; i < config.length; i++) {\n            var route = config[i];\n            var fullPath = getFullPath(parentPath, route);\n            validateNode(route, fullPath);\n        }\n    }\n    function validateNode(route, fullPath) {\n        if (!route) {\n            throw new Error(\"\\n      Invalid configuration of route '\" + fullPath + \"': Encountered undefined route.\\n      The reason might be an extra comma.\\n\\n      Example:\\n      const routes: Routes = [\\n        { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\\n        { path: 'dashboard',  component: DashboardComponent },, << two commas\\n        { path: 'detail/:id', component: HeroDetailComponent }\\n      ];\\n    \");\n        }\n        if (Array.isArray(route)) {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': Array cannot be specified\");\n        }\n        if (!route.component && !route.children && !route.loadChildren &&\n            (route.outlet && route.outlet !== PRIMARY_OUTLET)) {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': a componentless route without children or loadChildren cannot have a named outlet set\");\n        }\n        if (route.redirectTo && route.children) {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and children cannot be used together\");\n        }\n        if (route.redirectTo && route.loadChildren) {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and loadChildren cannot be used together\");\n        }\n        if (route.children && route.loadChildren) {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': children and loadChildren cannot be used together\");\n        }\n        if (route.redirectTo && route.component) {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and component cannot be used together\");\n        }\n        if (route.path && route.matcher) {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': path and matcher cannot be used together\");\n        }\n        if (route.redirectTo === void 0 && !route.component && !route.children && !route.loadChildren) {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"'. One of the following must be provided: component, redirectTo, children or loadChildren\");\n        }\n        if (route.path === void 0 && route.matcher === void 0) {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': routes must have either a path or a matcher specified\");\n        }\n        if (typeof route.path === 'string' && route.path.charAt(0) === '/') {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': path cannot start with a slash\");\n        }\n        if (route.path === '' && route.redirectTo !== void 0 && route.pathMatch === void 0) {\n            var exp = \"The default value of 'pathMatch' is 'prefix', but often the intent is to use 'full'.\";\n            throw new Error(\"Invalid configuration of route '{path: \\\"\" + fullPath + \"\\\", redirectTo: \\\"\" + route.redirectTo + \"\\\"}': please provide 'pathMatch'. \" + exp);\n        }\n        if (route.pathMatch !== void 0 && route.pathMatch !== 'full' && route.pathMatch !== 'prefix') {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': pathMatch can only be set to 'prefix' or 'full'\");\n        }\n        if (route.children) {\n            validateConfig(route.children, fullPath);\n        }\n    }\n    function getFullPath(parentPath, currentRoute) {\n        if (!currentRoute) {\n            return parentPath;\n        }\n        if (!parentPath && !currentRoute.path) {\n            return '';\n        }\n        else if (parentPath && !currentRoute.path) {\n            return parentPath + \"/\";\n        }\n        else if (!parentPath && currentRoute.path) {\n            return currentRoute.path;\n        }\n        else {\n            return parentPath + \"/\" + currentRoute.path;\n        }\n    }\n    /**\n     * Makes a copy of the config and adds any default required properties.\n     */\n    function standardizeConfig(r) {\n        var children = r.children && r.children.map(standardizeConfig);\n        var c = children ? __assign({}, r, { children: children }) : __assign({}, r);\n        if (!c.component && (children || c.loadChildren) && (c.outlet && c.outlet !== PRIMARY_OUTLET)) {\n            c.component = EmptyOutletComponent;\n        }\n        return c;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NoMatch = /** @class */ (function () {\n        function NoMatch(segmentGroup) {\n            this.segmentGroup = segmentGroup || null;\n        }\n        return NoMatch;\n    }());\n    var AbsoluteRedirect = /** @class */ (function () {\n        function AbsoluteRedirect(urlTree) {\n            this.urlTree = urlTree;\n        }\n        return AbsoluteRedirect;\n    }());\n    function noMatch(segmentGroup) {\n        return new rxjs.Observable(function (obs) { return obs.error(new NoMatch(segmentGroup)); });\n    }\n    function absoluteRedirect(newTree) {\n        return new rxjs.Observable(function (obs) { return obs.error(new AbsoluteRedirect(newTree)); });\n    }\n    function namedOutletsRedirect(redirectTo) {\n        return new rxjs.Observable(function (obs) { return obs.error(new Error(\"Only absolute redirects can have named outlets. redirectTo: '\" + redirectTo + \"'\")); });\n    }\n    function canLoadFails(route) {\n        return new rxjs.Observable(function (obs) { return obs.error(navigationCancelingError(\"Cannot load children because the guard of the route \\\"path: '\" + route.path + \"'\\\" returned false\")); });\n    }\n    /**\n     * Returns the `UrlTree` with the redirection applied.\n     *\n     * Lazy modules are loaded along the way.\n     */\n    function applyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config) {\n        return new ApplyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config).apply();\n    }\n    var ApplyRedirects = /** @class */ (function () {\n        function ApplyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config) {\n            this.configLoader = configLoader;\n            this.urlSerializer = urlSerializer;\n            this.urlTree = urlTree;\n            this.config = config;\n            this.allowRedirects = true;\n            this.ngModule = moduleInjector.get(i0.NgModuleRef);\n        }\n        ApplyRedirects.prototype.apply = function () {\n            var _this = this;\n            var expanded$ = this.expandSegmentGroup(this.ngModule, this.config, this.urlTree.root, PRIMARY_OUTLET);\n            var urlTrees$ = expanded$.pipe(operators.map(function (rootSegmentGroup) { return _this.createUrlTree(rootSegmentGroup, _this.urlTree.queryParams, _this.urlTree.fragment); }));\n            return urlTrees$.pipe(operators.catchError(function (e) {\n                if (e instanceof AbsoluteRedirect) {\n                    // after an absolute redirect we do not apply any more redirects!\n                    _this.allowRedirects = false;\n                    // we need to run matching, so we can fetch all lazy-loaded modules\n                    return _this.match(e.urlTree);\n                }\n                if (e instanceof NoMatch) {\n                    throw _this.noMatchError(e);\n                }\n                throw e;\n            }));\n        };\n        ApplyRedirects.prototype.match = function (tree) {\n            var _this = this;\n            var expanded$ = this.expandSegmentGroup(this.ngModule, this.config, tree.root, PRIMARY_OUTLET);\n            var mapped$ = expanded$.pipe(operators.map(function (rootSegmentGroup) {\n                return _this.createUrlTree(rootSegmentGroup, tree.queryParams, tree.fragment);\n            }));\n            return mapped$.pipe(operators.catchError(function (e) {\n                if (e instanceof NoMatch) {\n                    throw _this.noMatchError(e);\n                }\n                throw e;\n            }));\n        };\n        ApplyRedirects.prototype.noMatchError = function (e) {\n            return new Error(\"Cannot match any routes. URL Segment: '\" + e.segmentGroup + \"'\");\n        };\n        ApplyRedirects.prototype.createUrlTree = function (rootCandidate, queryParams, fragment) {\n            var _a;\n            var root = rootCandidate.segments.length > 0 ?\n                new UrlSegmentGroup([], (_a = {}, _a[PRIMARY_OUTLET] = rootCandidate, _a)) :\n                rootCandidate;\n            return new UrlTree(root, queryParams, fragment);\n        };\n        ApplyRedirects.prototype.expandSegmentGroup = function (ngModule, routes, segmentGroup, outlet) {\n            if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n                return this.expandChildren(ngModule, routes, segmentGroup)\n                    .pipe(operators.map(function (children) { return new UrlSegmentGroup([], children); }));\n            }\n            return this.expandSegment(ngModule, segmentGroup, routes, segmentGroup.segments, outlet, true);\n        };\n        // Recursively expand segment groups for all the child outlets\n        ApplyRedirects.prototype.expandChildren = function (ngModule, routes, segmentGroup) {\n            var _this = this;\n            return waitForMap(segmentGroup.children, function (childOutlet, child) { return _this.expandSegmentGroup(ngModule, routes, child, childOutlet); });\n        };\n        ApplyRedirects.prototype.expandSegment = function (ngModule, segmentGroup, routes, segments, outlet, allowRedirects) {\n            var _this = this;\n            return rxjs.of.apply(void 0, __spread(routes)).pipe(operators.map(function (r) {\n                var expanded$ = _this.expandSegmentAgainstRoute(ngModule, segmentGroup, routes, r, segments, outlet, allowRedirects);\n                return expanded$.pipe(operators.catchError(function (e) {\n                    if (e instanceof NoMatch) {\n                        // TODO(i): this return type doesn't match the declared Observable<UrlSegmentGroup> -\n                        // talk to Jason\n                        return rxjs.of(null);\n                    }\n                    throw e;\n                }));\n            }), operators.concatAll(), operators.first(function (s) { return !!s; }), operators.catchError(function (e, _) {\n                if (e instanceof rxjs.EmptyError || e.name === 'EmptyError') {\n                    if (_this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n                        return rxjs.of(new UrlSegmentGroup([], {}));\n                    }\n                    throw new NoMatch(segmentGroup);\n                }\n                throw e;\n            }));\n        };\n        ApplyRedirects.prototype.noLeftoversInUrl = function (segmentGroup, segments, outlet) {\n            return segments.length === 0 && !segmentGroup.children[outlet];\n        };\n        ApplyRedirects.prototype.expandSegmentAgainstRoute = function (ngModule, segmentGroup, routes, route, paths, outlet, allowRedirects) {\n            if (getOutlet(route) !== outlet) {\n                return noMatch(segmentGroup);\n            }\n            if (route.redirectTo === undefined) {\n                return this.matchSegmentAgainstRoute(ngModule, segmentGroup, route, paths);\n            }\n            if (allowRedirects && this.allowRedirects) {\n                return this.expandSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, paths, outlet);\n            }\n            return noMatch(segmentGroup);\n        };\n        ApplyRedirects.prototype.expandSegmentAgainstRouteUsingRedirect = function (ngModule, segmentGroup, routes, route, segments, outlet) {\n            if (route.path === '**') {\n                return this.expandWildCardWithParamsAgainstRouteUsingRedirect(ngModule, routes, route, outlet);\n            }\n            return this.expandRegularSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, segments, outlet);\n        };\n        ApplyRedirects.prototype.expandWildCardWithParamsAgainstRouteUsingRedirect = function (ngModule, routes, route, outlet) {\n            var _this = this;\n            var newTree = this.applyRedirectCommands([], route.redirectTo, {});\n            if (route.redirectTo.startsWith('/')) {\n                return absoluteRedirect(newTree);\n            }\n            return this.lineralizeSegments(route, newTree).pipe(operators.mergeMap(function (newSegments) {\n                var group = new UrlSegmentGroup(newSegments, {});\n                return _this.expandSegment(ngModule, group, routes, newSegments, outlet, false);\n            }));\n        };\n        ApplyRedirects.prototype.expandRegularSegmentAgainstRouteUsingRedirect = function (ngModule, segmentGroup, routes, route, segments, outlet) {\n            var _this = this;\n            var _a = match(segmentGroup, route, segments), matched = _a.matched, consumedSegments = _a.consumedSegments, lastChild = _a.lastChild, positionalParamSegments = _a.positionalParamSegments;\n            if (!matched)\n                return noMatch(segmentGroup);\n            var newTree = this.applyRedirectCommands(consumedSegments, route.redirectTo, positionalParamSegments);\n            if (route.redirectTo.startsWith('/')) {\n                return absoluteRedirect(newTree);\n            }\n            return this.lineralizeSegments(route, newTree).pipe(operators.mergeMap(function (newSegments) {\n                return _this.expandSegment(ngModule, segmentGroup, routes, newSegments.concat(segments.slice(lastChild)), outlet, false);\n            }));\n        };\n        ApplyRedirects.prototype.matchSegmentAgainstRoute = function (ngModule, rawSegmentGroup, route, segments) {\n            var _this = this;\n            if (route.path === '**') {\n                if (route.loadChildren) {\n                    return this.configLoader.load(ngModule.injector, route)\n                        .pipe(operators.map(function (cfg) {\n                        route._loadedConfig = cfg;\n                        return new UrlSegmentGroup(segments, {});\n                    }));\n                }\n                return rxjs.of(new UrlSegmentGroup(segments, {}));\n            }\n            var _a = match(rawSegmentGroup, route, segments), matched = _a.matched, consumedSegments = _a.consumedSegments, lastChild = _a.lastChild;\n            if (!matched)\n                return noMatch(rawSegmentGroup);\n            var rawSlicedSegments = segments.slice(lastChild);\n            var childConfig$ = this.getChildConfig(ngModule, route, segments);\n            return childConfig$.pipe(operators.mergeMap(function (routerConfig) {\n                var childModule = routerConfig.module;\n                var childConfig = routerConfig.routes;\n                var _a = split(rawSegmentGroup, consumedSegments, rawSlicedSegments, childConfig), segmentGroup = _a.segmentGroup, slicedSegments = _a.slicedSegments;\n                if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n                    var expanded$_1 = _this.expandChildren(childModule, childConfig, segmentGroup);\n                    return expanded$_1.pipe(operators.map(function (children) { return new UrlSegmentGroup(consumedSegments, children); }));\n                }\n                if (childConfig.length === 0 && slicedSegments.length === 0) {\n                    return rxjs.of(new UrlSegmentGroup(consumedSegments, {}));\n                }\n                var expanded$ = _this.expandSegment(childModule, segmentGroup, childConfig, slicedSegments, PRIMARY_OUTLET, true);\n                return expanded$.pipe(operators.map(function (cs) {\n                    return new UrlSegmentGroup(consumedSegments.concat(cs.segments), cs.children);\n                }));\n            }));\n        };\n        ApplyRedirects.prototype.getChildConfig = function (ngModule, route, segments) {\n            var _this = this;\n            if (route.children) {\n                // The children belong to the same module\n                return rxjs.of(new LoadedRouterConfig(route.children, ngModule));\n            }\n            if (route.loadChildren) {\n                // lazy children belong to the loaded module\n                if (route._loadedConfig !== undefined) {\n                    return rxjs.of(route._loadedConfig);\n                }\n                return runCanLoadGuard(ngModule.injector, route, segments)\n                    .pipe(operators.mergeMap(function (shouldLoad) {\n                    if (shouldLoad) {\n                        return _this.configLoader.load(ngModule.injector, route)\n                            .pipe(operators.map(function (cfg) {\n                            route._loadedConfig = cfg;\n                            return cfg;\n                        }));\n                    }\n                    return canLoadFails(route);\n                }));\n            }\n            return rxjs.of(new LoadedRouterConfig([], ngModule));\n        };\n        ApplyRedirects.prototype.lineralizeSegments = function (route, urlTree) {\n            var res = [];\n            var c = urlTree.root;\n            while (true) {\n                res = res.concat(c.segments);\n                if (c.numberOfChildren === 0) {\n                    return rxjs.of(res);\n                }\n                if (c.numberOfChildren > 1 || !c.children[PRIMARY_OUTLET]) {\n                    return namedOutletsRedirect(route.redirectTo);\n                }\n                c = c.children[PRIMARY_OUTLET];\n            }\n        };\n        ApplyRedirects.prototype.applyRedirectCommands = function (segments, redirectTo, posParams) {\n            return this.applyRedirectCreatreUrlTree(redirectTo, this.urlSerializer.parse(redirectTo), segments, posParams);\n        };\n        ApplyRedirects.prototype.applyRedirectCreatreUrlTree = function (redirectTo, urlTree, segments, posParams) {\n            var newRoot = this.createSegmentGroup(redirectTo, urlTree.root, segments, posParams);\n            return new UrlTree(newRoot, this.createQueryParams(urlTree.queryParams, this.urlTree.queryParams), urlTree.fragment);\n        };\n        ApplyRedirects.prototype.createQueryParams = function (redirectToParams, actualParams) {\n            var res = {};\n            forEach(redirectToParams, function (v, k) {\n                var copySourceValue = typeof v === 'string' && v.startsWith(':');\n                if (copySourceValue) {\n                    var sourceName = v.substring(1);\n                    res[k] = actualParams[sourceName];\n                }\n                else {\n                    res[k] = v;\n                }\n            });\n            return res;\n        };\n        ApplyRedirects.prototype.createSegmentGroup = function (redirectTo, group, segments, posParams) {\n            var _this = this;\n            var updatedSegments = this.createSegments(redirectTo, group.segments, segments, posParams);\n            var children = {};\n            forEach(group.children, function (child, name) {\n                children[name] = _this.createSegmentGroup(redirectTo, child, segments, posParams);\n            });\n            return new UrlSegmentGroup(updatedSegments, children);\n        };\n        ApplyRedirects.prototype.createSegments = function (redirectTo, redirectToSegments, actualSegments, posParams) {\n            var _this = this;\n            return redirectToSegments.map(function (s) { return s.path.startsWith(':') ? _this.findPosParam(redirectTo, s, posParams) :\n                _this.findOrReturn(s, actualSegments); });\n        };\n        ApplyRedirects.prototype.findPosParam = function (redirectTo, redirectToUrlSegment, posParams) {\n            var pos = posParams[redirectToUrlSegment.path.substring(1)];\n            if (!pos)\n                throw new Error(\"Cannot redirect to '\" + redirectTo + \"'. Cannot find '\" + redirectToUrlSegment.path + \"'.\");\n            return pos;\n        };\n        ApplyRedirects.prototype.findOrReturn = function (redirectToUrlSegment, actualSegments) {\n            var e_1, _a;\n            var idx = 0;\n            try {\n                for (var actualSegments_1 = __values(actualSegments), actualSegments_1_1 = actualSegments_1.next(); !actualSegments_1_1.done; actualSegments_1_1 = actualSegments_1.next()) {\n                    var s = actualSegments_1_1.value;\n                    if (s.path === redirectToUrlSegment.path) {\n                        actualSegments.splice(idx);\n                        return s;\n                    }\n                    idx++;\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (actualSegments_1_1 && !actualSegments_1_1.done && (_a = actualSegments_1.return)) _a.call(actualSegments_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            return redirectToUrlSegment;\n        };\n        return ApplyRedirects;\n    }());\n    function runCanLoadGuard(moduleInjector, route, segments) {\n        var canLoad = route.canLoad;\n        if (!canLoad || canLoad.length === 0)\n            return rxjs.of(true);\n        var obs = rxjs.from(canLoad).pipe(operators.map(function (injectionToken) {\n            var guard = moduleInjector.get(injectionToken);\n            return wrapIntoObservable(guard.canLoad ? guard.canLoad(route, segments) : guard(route, segments));\n        }));\n        return andObservables(obs);\n    }\n    function match(segmentGroup, route, segments) {\n        if (route.path === '') {\n            if ((route.pathMatch === 'full') && (segmentGroup.hasChildren() || segments.length > 0)) {\n                return { matched: false, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n            }\n            return { matched: true, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n        }\n        var matcher = route.matcher || defaultUrlMatcher;\n        var res = matcher(segments, segmentGroup, route);\n        if (!res) {\n            return {\n                matched: false,\n                consumedSegments: [],\n                lastChild: 0,\n                positionalParamSegments: {},\n            };\n        }\n        return {\n            matched: true,\n            consumedSegments: res.consumed,\n            lastChild: res.consumed.length,\n            positionalParamSegments: res.posParams,\n        };\n    }\n    function split(segmentGroup, consumedSegments, slicedSegments, config) {\n        if (slicedSegments.length > 0 &&\n            containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n            var s = new UrlSegmentGroup(consumedSegments, createChildrenForEmptySegments(config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n            return { segmentGroup: mergeTrivialChildren(s), slicedSegments: [] };\n        }\n        if (slicedSegments.length === 0 &&\n            containsEmptyPathRedirects(segmentGroup, slicedSegments, config)) {\n            var s = new UrlSegmentGroup(segmentGroup.segments, addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, config, segmentGroup.children));\n            return { segmentGroup: mergeTrivialChildren(s), slicedSegments: slicedSegments };\n        }\n        return { segmentGroup: segmentGroup, slicedSegments: slicedSegments };\n    }\n    function mergeTrivialChildren(s) {\n        if (s.numberOfChildren === 1 && s.children[PRIMARY_OUTLET]) {\n            var c = s.children[PRIMARY_OUTLET];\n            return new UrlSegmentGroup(s.segments.concat(c.segments), c.children);\n        }\n        return s;\n    }\n    function addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, routes, children) {\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var routes_1 = __values(routes), routes_1_1 = routes_1.next(); !routes_1_1.done; routes_1_1 = routes_1.next()) {\n                var r = routes_1_1.value;\n                if (isEmptyPathRedirect(segmentGroup, slicedSegments, r) && !children[getOutlet(r)]) {\n                    res[getOutlet(r)] = new UrlSegmentGroup([], {});\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (routes_1_1 && !routes_1_1.done && (_a = routes_1.return)) _a.call(routes_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return __assign({}, children, res);\n    }\n    function createChildrenForEmptySegments(routes, primarySegmentGroup) {\n        var e_3, _a;\n        var res = {};\n        res[PRIMARY_OUTLET] = primarySegmentGroup;\n        try {\n            for (var routes_2 = __values(routes), routes_2_1 = routes_2.next(); !routes_2_1.done; routes_2_1 = routes_2.next()) {\n                var r = routes_2_1.value;\n                if (r.path === '' && getOutlet(r) !== PRIMARY_OUTLET) {\n                    res[getOutlet(r)] = new UrlSegmentGroup([], {});\n                }\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (routes_2_1 && !routes_2_1.done && (_a = routes_2.return)) _a.call(routes_2);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n        return res;\n    }\n    function containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, segments, routes) {\n        return routes.some(function (r) { return isEmptyPathRedirect(segmentGroup, segments, r) && getOutlet(r) !== PRIMARY_OUTLET; });\n    }\n    function containsEmptyPathRedirects(segmentGroup, segments, routes) {\n        return routes.some(function (r) { return isEmptyPathRedirect(segmentGroup, segments, r); });\n    }\n    function isEmptyPathRedirect(segmentGroup, segments, r) {\n        if ((segmentGroup.hasChildren() || segments.length > 0) && r.pathMatch === 'full') {\n            return false;\n        }\n        return r.path === '' && r.redirectTo !== undefined;\n    }\n    function getOutlet(route) {\n        return route.outlet || PRIMARY_OUTLET;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function createRouterState(routeReuseStrategy, curr, prevState) {\n        var root = createNode(routeReuseStrategy, curr._root, prevState ? prevState._root : undefined);\n        return new RouterState(root, curr);\n    }\n    function createNode(routeReuseStrategy, curr, prevState) {\n        // reuse an activated route that is currently displayed on the screen\n        if (prevState && routeReuseStrategy.shouldReuseRoute(curr.value, prevState.value.snapshot)) {\n            var value = prevState.value;\n            value._futureSnapshot = curr.value;\n            var children = createOrReuseChildren(routeReuseStrategy, curr, prevState);\n            return new TreeNode(value, children);\n            // retrieve an activated route that is used to be displayed, but is not currently displayed\n        }\n        else {\n            var detachedRouteHandle = routeReuseStrategy.retrieve(curr.value);\n            if (detachedRouteHandle) {\n                var tree = detachedRouteHandle.route;\n                setFutureSnapshotsOfActivatedRoutes(curr, tree);\n                return tree;\n            }\n            else {\n                var value = createActivatedRoute(curr.value);\n                var children = curr.children.map(function (c) { return createNode(routeReuseStrategy, c); });\n                return new TreeNode(value, children);\n            }\n        }\n    }\n    function setFutureSnapshotsOfActivatedRoutes(curr, result) {\n        if (curr.value.routeConfig !== result.value.routeConfig) {\n            throw new Error('Cannot reattach ActivatedRouteSnapshot created from a different route');\n        }\n        if (curr.children.length !== result.children.length) {\n            throw new Error('Cannot reattach ActivatedRouteSnapshot with a different number of children');\n        }\n        result.value._futureSnapshot = curr.value;\n        for (var i = 0; i < curr.children.length; ++i) {\n            setFutureSnapshotsOfActivatedRoutes(curr.children[i], result.children[i]);\n        }\n    }\n    function createOrReuseChildren(routeReuseStrategy, curr, prevState) {\n        return curr.children.map(function (child) {\n            var e_1, _a;\n            try {\n                for (var _b = __values(prevState.children), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var p = _c.value;\n                    if (routeReuseStrategy.shouldReuseRoute(p.value.snapshot, child.value)) {\n                        return createNode(routeReuseStrategy, child, p);\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            return createNode(routeReuseStrategy, child);\n        });\n    }\n    function createActivatedRoute(c) {\n        return new ActivatedRoute(new rxjs.BehaviorSubject(c.url), new rxjs.BehaviorSubject(c.params), new rxjs.BehaviorSubject(c.queryParams), new rxjs.BehaviorSubject(c.fragment), new rxjs.BehaviorSubject(c.data), c.outlet, c.component, c);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function createUrlTree(route, urlTree, commands, queryParams, fragment) {\n        if (commands.length === 0) {\n            return tree(urlTree.root, urlTree.root, urlTree, queryParams, fragment);\n        }\n        var nav = computeNavigation(commands);\n        if (nav.toRoot()) {\n            return tree(urlTree.root, new UrlSegmentGroup([], {}), urlTree, queryParams, fragment);\n        }\n        var startingPosition = findStartingPosition(nav, urlTree, route);\n        var segmentGroup = startingPosition.processChildren ?\n            updateSegmentGroupChildren(startingPosition.segmentGroup, startingPosition.index, nav.commands) :\n            updateSegmentGroup(startingPosition.segmentGroup, startingPosition.index, nav.commands);\n        return tree(startingPosition.segmentGroup, segmentGroup, urlTree, queryParams, fragment);\n    }\n    function isMatrixParams(command) {\n        return typeof command === 'object' && command != null && !command.outlets && !command.segmentPath;\n    }\n    function tree(oldSegmentGroup, newSegmentGroup, urlTree, queryParams, fragment) {\n        var qp = {};\n        if (queryParams) {\n            forEach(queryParams, function (value, name) {\n                qp[name] = Array.isArray(value) ? value.map(function (v) { return \"\" + v; }) : \"\" + value;\n            });\n        }\n        if (urlTree.root === oldSegmentGroup) {\n            return new UrlTree(newSegmentGroup, qp, fragment);\n        }\n        return new UrlTree(replaceSegment(urlTree.root, oldSegmentGroup, newSegmentGroup), qp, fragment);\n    }\n    function replaceSegment(current, oldSegment, newSegment) {\n        var children = {};\n        forEach(current.children, function (c, outletName) {\n            if (c === oldSegment) {\n                children[outletName] = newSegment;\n            }\n            else {\n                children[outletName] = replaceSegment(c, oldSegment, newSegment);\n            }\n        });\n        return new UrlSegmentGroup(current.segments, children);\n    }\n    var Navigation = /** @class */ (function () {\n        function Navigation(isAbsolute, numberOfDoubleDots, commands) {\n            this.isAbsolute = isAbsolute;\n            this.numberOfDoubleDots = numberOfDoubleDots;\n            this.commands = commands;\n            if (isAbsolute && commands.length > 0 && isMatrixParams(commands[0])) {\n                throw new Error('Root segment cannot have matrix parameters');\n            }\n            var cmdWithOutlet = commands.find(function (c) { return typeof c === 'object' && c != null && c.outlets; });\n            if (cmdWithOutlet && cmdWithOutlet !== last(commands)) {\n                throw new Error('{outlets:{}} has to be the last command');\n            }\n        }\n        Navigation.prototype.toRoot = function () {\n            return this.isAbsolute && this.commands.length === 1 && this.commands[0] == '/';\n        };\n        return Navigation;\n    }());\n    /** Transforms commands to a normalized `Navigation` */\n    function computeNavigation(commands) {\n        if ((typeof commands[0] === 'string') && commands.length === 1 && commands[0] === '/') {\n            return new Navigation(true, 0, commands);\n        }\n        var numberOfDoubleDots = 0;\n        var isAbsolute = false;\n        var res = commands.reduce(function (res, cmd, cmdIdx) {\n            if (typeof cmd === 'object' && cmd != null) {\n                if (cmd.outlets) {\n                    var outlets_1 = {};\n                    forEach(cmd.outlets, function (commands, name) {\n                        outlets_1[name] = typeof commands === 'string' ? commands.split('/') : commands;\n                    });\n                    return __spread(res, [{ outlets: outlets_1 }]);\n                }\n                if (cmd.segmentPath) {\n                    return __spread(res, [cmd.segmentPath]);\n                }\n            }\n            if (!(typeof cmd === 'string')) {\n                return __spread(res, [cmd]);\n            }\n            if (cmdIdx === 0) {\n                cmd.split('/').forEach(function (urlPart, partIndex) {\n                    if (partIndex == 0 && urlPart === '.') ;\n                    else if (partIndex == 0 && urlPart === '') { //  '/a'\n                        isAbsolute = true;\n                    }\n                    else if (urlPart === '..') { //  '../a'\n                        numberOfDoubleDots++;\n                    }\n                    else if (urlPart != '') {\n                        res.push(urlPart);\n                    }\n                });\n                return res;\n            }\n            return __spread(res, [cmd]);\n        }, []);\n        return new Navigation(isAbsolute, numberOfDoubleDots, res);\n    }\n    var Position = /** @class */ (function () {\n        function Position(segmentGroup, processChildren, index) {\n            this.segmentGroup = segmentGroup;\n            this.processChildren = processChildren;\n            this.index = index;\n        }\n        return Position;\n    }());\n    function findStartingPosition(nav, tree, route) {\n        if (nav.isAbsolute) {\n            return new Position(tree.root, true, 0);\n        }\n        if (route.snapshot._lastPathIndex === -1) {\n            return new Position(route.snapshot._urlSegment, true, 0);\n        }\n        var modifier = isMatrixParams(nav.commands[0]) ? 0 : 1;\n        var index = route.snapshot._lastPathIndex + modifier;\n        return createPositionApplyingDoubleDots(route.snapshot._urlSegment, index, nav.numberOfDoubleDots);\n    }\n    function createPositionApplyingDoubleDots(group, index, numberOfDoubleDots) {\n        var g = group;\n        var ci = index;\n        var dd = numberOfDoubleDots;\n        while (dd > ci) {\n            dd -= ci;\n            g = g.parent;\n            if (!g) {\n                throw new Error('Invalid number of \\'../\\'');\n            }\n            ci = g.segments.length;\n        }\n        return new Position(g, false, ci - dd);\n    }\n    function getPath(command) {\n        if (typeof command === 'object' && command != null && command.outlets) {\n            return command.outlets[PRIMARY_OUTLET];\n        }\n        return \"\" + command;\n    }\n    function getOutlets(commands) {\n        var _a, _b;\n        if (!(typeof commands[0] === 'object'))\n            return _a = {}, _a[PRIMARY_OUTLET] = commands, _a;\n        if (commands[0].outlets === undefined)\n            return _b = {}, _b[PRIMARY_OUTLET] = commands, _b;\n        return commands[0].outlets;\n    }\n    function updateSegmentGroup(segmentGroup, startIndex, commands) {\n        if (!segmentGroup) {\n            segmentGroup = new UrlSegmentGroup([], {});\n        }\n        if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n            return updateSegmentGroupChildren(segmentGroup, startIndex, commands);\n        }\n        var m = prefixedWith(segmentGroup, startIndex, commands);\n        var slicedCommands = commands.slice(m.commandIndex);\n        if (m.match && m.pathIndex < segmentGroup.segments.length) {\n            var g = new UrlSegmentGroup(segmentGroup.segments.slice(0, m.pathIndex), {});\n            g.children[PRIMARY_OUTLET] =\n                new UrlSegmentGroup(segmentGroup.segments.slice(m.pathIndex), segmentGroup.children);\n            return updateSegmentGroupChildren(g, 0, slicedCommands);\n        }\n        else if (m.match && slicedCommands.length === 0) {\n            return new UrlSegmentGroup(segmentGroup.segments, {});\n        }\n        else if (m.match && !segmentGroup.hasChildren()) {\n            return createNewSegmentGroup(segmentGroup, startIndex, commands);\n        }\n        else if (m.match) {\n            return updateSegmentGroupChildren(segmentGroup, 0, slicedCommands);\n        }\n        else {\n            return createNewSegmentGroup(segmentGroup, startIndex, commands);\n        }\n    }\n    function updateSegmentGroupChildren(segmentGroup, startIndex, commands) {\n        if (commands.length === 0) {\n            return new UrlSegmentGroup(segmentGroup.segments, {});\n        }\n        else {\n            var outlets_2 = getOutlets(commands);\n            var children_1 = {};\n            forEach(outlets_2, function (commands, outlet) {\n                if (commands !== null) {\n                    children_1[outlet] = updateSegmentGroup(segmentGroup.children[outlet], startIndex, commands);\n                }\n            });\n            forEach(segmentGroup.children, function (child, childOutlet) {\n                if (outlets_2[childOutlet] === undefined) {\n                    children_1[childOutlet] = child;\n                }\n            });\n            return new UrlSegmentGroup(segmentGroup.segments, children_1);\n        }\n    }\n    function prefixedWith(segmentGroup, startIndex, commands) {\n        var currentCommandIndex = 0;\n        var currentPathIndex = startIndex;\n        var noMatch = { match: false, pathIndex: 0, commandIndex: 0 };\n        while (currentPathIndex < segmentGroup.segments.length) {\n            if (currentCommandIndex >= commands.length)\n                return noMatch;\n            var path = segmentGroup.segments[currentPathIndex];\n            var curr = getPath(commands[currentCommandIndex]);\n            var next = currentCommandIndex < commands.length - 1 ? commands[currentCommandIndex + 1] : null;\n            if (currentPathIndex > 0 && curr === undefined)\n                break;\n            if (curr && next && (typeof next === 'object') && next.outlets === undefined) {\n                if (!compare(curr, next, path))\n                    return noMatch;\n                currentCommandIndex += 2;\n            }\n            else {\n                if (!compare(curr, {}, path))\n                    return noMatch;\n                currentCommandIndex++;\n            }\n            currentPathIndex++;\n        }\n        return { match: true, pathIndex: currentPathIndex, commandIndex: currentCommandIndex };\n    }\n    function createNewSegmentGroup(segmentGroup, startIndex, commands) {\n        var paths = segmentGroup.segments.slice(0, startIndex);\n        var i = 0;\n        while (i < commands.length) {\n            if (typeof commands[i] === 'object' && commands[i].outlets !== undefined) {\n                var children = createNewSegmentChildren(commands[i].outlets);\n                return new UrlSegmentGroup(paths, children);\n            }\n            // if we start with an object literal, we need to reuse the path part from the segment\n            if (i === 0 && isMatrixParams(commands[0])) {\n                var p = segmentGroup.segments[startIndex];\n                paths.push(new UrlSegment(p.path, commands[0]));\n                i++;\n                continue;\n            }\n            var curr = getPath(commands[i]);\n            var next = (i < commands.length - 1) ? commands[i + 1] : null;\n            if (curr && next && isMatrixParams(next)) {\n                paths.push(new UrlSegment(curr, stringify(next)));\n                i += 2;\n            }\n            else {\n                paths.push(new UrlSegment(curr, {}));\n                i++;\n            }\n        }\n        return new UrlSegmentGroup(paths, {});\n    }\n    function createNewSegmentChildren(outlets) {\n        var children = {};\n        forEach(outlets, function (commands, outlet) {\n            if (commands !== null) {\n                children[outlet] = createNewSegmentGroup(new UrlSegmentGroup([], {}), 0, commands);\n            }\n        });\n        return children;\n    }\n    function stringify(params) {\n        var res = {};\n        forEach(params, function (v, k) { return res[k] = \"\" + v; });\n        return res;\n    }\n    function compare(path, params, segment) {\n        return path == segment.path && shallowEqual(params, segment.parameters);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var CanActivate = /** @class */ (function () {\n        function CanActivate(path) {\n            this.path = path;\n            this.route = this.path[this.path.length - 1];\n        }\n        return CanActivate;\n    }());\n    var CanDeactivate = /** @class */ (function () {\n        function CanDeactivate(component, route) {\n            this.component = component;\n            this.route = route;\n        }\n        return CanDeactivate;\n    }());\n    /**\n     * This class bundles the actions involved in preactivation of a route.\n     */\n    var PreActivation = /** @class */ (function () {\n        function PreActivation(future, curr, moduleInjector, forwardEvent) {\n            this.future = future;\n            this.curr = curr;\n            this.moduleInjector = moduleInjector;\n            this.forwardEvent = forwardEvent;\n            this.canActivateChecks = [];\n            this.canDeactivateChecks = [];\n        }\n        PreActivation.prototype.initialize = function (parentContexts) {\n            var futureRoot = this.future._root;\n            var currRoot = this.curr ? this.curr._root : null;\n            this.setupChildRouteGuards(futureRoot, currRoot, parentContexts, [futureRoot.value]);\n        };\n        PreActivation.prototype.checkGuards = function () {\n            var _this = this;\n            if (!this.isDeactivating() && !this.isActivating()) {\n                return rxjs.of(true);\n            }\n            var canDeactivate$ = this.runCanDeactivateChecks();\n            return canDeactivate$.pipe(operators.mergeMap(function (canDeactivate) { return canDeactivate ? _this.runCanActivateChecks() : rxjs.of(false); }));\n        };\n        PreActivation.prototype.resolveData = function (paramsInheritanceStrategy) {\n            var _this = this;\n            if (!this.isActivating())\n                return rxjs.of(null);\n            return rxjs.from(this.canActivateChecks)\n                .pipe(operators.concatMap(function (check) { return _this.runResolve(check.route, paramsInheritanceStrategy); }), operators.reduce(function (_, __) { return _; }));\n        };\n        PreActivation.prototype.isDeactivating = function () { return this.canDeactivateChecks.length !== 0; };\n        PreActivation.prototype.isActivating = function () { return this.canActivateChecks.length !== 0; };\n        /**\n         * Iterates over child routes and calls recursive `setupRouteGuards` to get `this` instance in\n         * proper state to run `checkGuards()` method.\n         */\n        PreActivation.prototype.setupChildRouteGuards = function (futureNode, currNode, contexts, futurePath) {\n            var _this = this;\n            var prevChildren = nodeChildrenAsMap(currNode);\n            // Process the children of the future route\n            futureNode.children.forEach(function (c) {\n                _this.setupRouteGuards(c, prevChildren[c.value.outlet], contexts, futurePath.concat([c.value]));\n                delete prevChildren[c.value.outlet];\n            });\n            // Process any children left from the current route (not active for the future route)\n            forEach(prevChildren, function (v, k) {\n                return _this.deactivateRouteAndItsChildren(v, contexts.getContext(k));\n            });\n        };\n        /**\n         * Iterates over child routes and calls recursive `setupRouteGuards` to get `this` instance in\n         * proper state to run `checkGuards()` method.\n         */\n        PreActivation.prototype.setupRouteGuards = function (futureNode, currNode, parentContexts, futurePath) {\n            var future = futureNode.value;\n            var curr = currNode ? currNode.value : null;\n            var context = parentContexts ? parentContexts.getContext(futureNode.value.outlet) : null;\n            // reusing the node\n            if (curr && future.routeConfig === curr.routeConfig) {\n                var shouldRunGuardsAndResolvers = this.shouldRunGuardsAndResolvers(curr, future, future.routeConfig.runGuardsAndResolvers);\n                if (shouldRunGuardsAndResolvers) {\n                    this.canActivateChecks.push(new CanActivate(futurePath));\n                }\n                else {\n                    // we need to set the data\n                    future.data = curr.data;\n                    future._resolvedData = curr._resolvedData;\n                }\n                // If we have a component, we need to go through an outlet.\n                if (future.component) {\n                    this.setupChildRouteGuards(futureNode, currNode, context ? context.children : null, futurePath);\n                    // if we have a componentless route, we recurse but keep the same outlet map.\n                }\n                else {\n                    this.setupChildRouteGuards(futureNode, currNode, parentContexts, futurePath);\n                }\n                if (shouldRunGuardsAndResolvers) {\n                    var outlet = context.outlet;\n                    this.canDeactivateChecks.push(new CanDeactivate(outlet.component, curr));\n                }\n            }\n            else {\n                if (curr) {\n                    this.deactivateRouteAndItsChildren(currNode, context);\n                }\n                this.canActivateChecks.push(new CanActivate(futurePath));\n                // If we have a component, we need to go through an outlet.\n                if (future.component) {\n                    this.setupChildRouteGuards(futureNode, null, context ? context.children : null, futurePath);\n                    // if we have a componentless route, we recurse but keep the same outlet map.\n                }\n                else {\n                    this.setupChildRouteGuards(futureNode, null, parentContexts, futurePath);\n                }\n            }\n        };\n        PreActivation.prototype.shouldRunGuardsAndResolvers = function (curr, future, mode) {\n            switch (mode) {\n                case 'always':\n                    return true;\n                case 'paramsOrQueryParamsChange':\n                    return !equalParamsAndUrlSegments(curr, future) ||\n                        !shallowEqual(curr.queryParams, future.queryParams);\n                case 'paramsChange':\n                default:\n                    return !equalParamsAndUrlSegments(curr, future);\n            }\n        };\n        PreActivation.prototype.deactivateRouteAndItsChildren = function (route, context) {\n            var _this = this;\n            var children = nodeChildrenAsMap(route);\n            var r = route.value;\n            forEach(children, function (node, childName) {\n                if (!r.component) {\n                    _this.deactivateRouteAndItsChildren(node, context);\n                }\n                else if (context) {\n                    _this.deactivateRouteAndItsChildren(node, context.children.getContext(childName));\n                }\n                else {\n                    _this.deactivateRouteAndItsChildren(node, null);\n                }\n            });\n            if (!r.component) {\n                this.canDeactivateChecks.push(new CanDeactivate(null, r));\n            }\n            else if (context && context.outlet && context.outlet.isActivated) {\n                this.canDeactivateChecks.push(new CanDeactivate(context.outlet.component, r));\n            }\n            else {\n                this.canDeactivateChecks.push(new CanDeactivate(null, r));\n            }\n        };\n        PreActivation.prototype.runCanDeactivateChecks = function () {\n            var _this = this;\n            return rxjs.from(this.canDeactivateChecks)\n                .pipe(operators.mergeMap(function (check) { return _this.runCanDeactivate(check.component, check.route); }), operators.every(function (result) { return result === true; }));\n        };\n        PreActivation.prototype.runCanActivateChecks = function () {\n            var _this = this;\n            return rxjs.from(this.canActivateChecks)\n                .pipe(operators.concatMap(function (check) { return andObservables(rxjs.from([\n                _this.fireChildActivationStart(check.route.parent),\n                _this.fireActivationStart(check.route), _this.runCanActivateChild(check.path),\n                _this.runCanActivate(check.route)\n            ])); }), operators.every(function (result) { return result === true; }));\n            // this.fireChildActivationStart(check.path),\n        };\n        /**\n         * This should fire off `ActivationStart` events for each route being activated at this\n         * level.\n         * In other words, if you're activating `a` and `b` below, `path` will contain the\n         * `ActivatedRouteSnapshot`s for both and we will fire `ActivationStart` for both. Always\n         * return\n         * `true` so checks continue to run.\n         */\n        PreActivation.prototype.fireActivationStart = function (snapshot) {\n            if (snapshot !== null && this.forwardEvent) {\n                this.forwardEvent(new ActivationStart(snapshot));\n            }\n            return rxjs.of(true);\n        };\n        /**\n         * This should fire off `ChildActivationStart` events for each route being activated at this\n         * level.\n         * In other words, if you're activating `a` and `b` below, `path` will contain the\n         * `ActivatedRouteSnapshot`s for both and we will fire `ChildActivationStart` for both. Always\n         * return\n         * `true` so checks continue to run.\n         */\n        PreActivation.prototype.fireChildActivationStart = function (snapshot) {\n            if (snapshot !== null && this.forwardEvent) {\n                this.forwardEvent(new ChildActivationStart(snapshot));\n            }\n            return rxjs.of(true);\n        };\n        PreActivation.prototype.runCanActivate = function (future) {\n            var _this = this;\n            var canActivate = future.routeConfig ? future.routeConfig.canActivate : null;\n            if (!canActivate || canActivate.length === 0)\n                return rxjs.of(true);\n            var obs = rxjs.from(canActivate).pipe(operators.map(function (c) {\n                var guard = _this.getToken(c, future);\n                var observable;\n                if (guard.canActivate) {\n                    observable = wrapIntoObservable(guard.canActivate(future, _this.future));\n                }\n                else {\n                    observable = wrapIntoObservable(guard(future, _this.future));\n                }\n                return observable.pipe(operators.first());\n            }));\n            return andObservables(obs);\n        };\n        PreActivation.prototype.runCanActivateChild = function (path) {\n            var _this = this;\n            var future = path[path.length - 1];\n            var canActivateChildGuards = path.slice(0, path.length - 1)\n                .reverse()\n                .map(function (p) { return _this.extractCanActivateChild(p); })\n                .filter(function (_) { return _ !== null; });\n            return andObservables(rxjs.from(canActivateChildGuards).pipe(operators.map(function (d) {\n                var obs = rxjs.from(d.guards).pipe(operators.map(function (c) {\n                    var guard = _this.getToken(c, d.node);\n                    var observable;\n                    if (guard.canActivateChild) {\n                        observable = wrapIntoObservable(guard.canActivateChild(future, _this.future));\n                    }\n                    else {\n                        observable = wrapIntoObservable(guard(future, _this.future));\n                    }\n                    return observable.pipe(operators.first());\n                }));\n                return andObservables(obs);\n            })));\n        };\n        PreActivation.prototype.extractCanActivateChild = function (p) {\n            var canActivateChild = p.routeConfig ? p.routeConfig.canActivateChild : null;\n            if (!canActivateChild || canActivateChild.length === 0)\n                return null;\n            return { node: p, guards: canActivateChild };\n        };\n        PreActivation.prototype.runCanDeactivate = function (component, curr) {\n            var _this = this;\n            var canDeactivate = curr && curr.routeConfig ? curr.routeConfig.canDeactivate : null;\n            if (!canDeactivate || canDeactivate.length === 0)\n                return rxjs.of(true);\n            var canDeactivate$ = rxjs.from(canDeactivate).pipe(operators.mergeMap(function (c) {\n                var guard = _this.getToken(c, curr);\n                var observable;\n                if (guard.canDeactivate) {\n                    observable =\n                        wrapIntoObservable(guard.canDeactivate(component, curr, _this.curr, _this.future));\n                }\n                else {\n                    observable = wrapIntoObservable(guard(component, curr, _this.curr, _this.future));\n                }\n                return observable.pipe(operators.first());\n            }));\n            return canDeactivate$.pipe(operators.every(function (result) { return result === true; }));\n        };\n        PreActivation.prototype.runResolve = function (future, paramsInheritanceStrategy) {\n            var resolve = future._resolve;\n            return this.resolveNode(resolve, future).pipe(operators.map(function (resolvedData) {\n                future._resolvedData = resolvedData;\n                future.data = __assign({}, future.data, inheritedParamsDataResolve(future, paramsInheritanceStrategy).resolve);\n                return null;\n            }));\n        };\n        PreActivation.prototype.resolveNode = function (resolve, future) {\n            var _this = this;\n            var keys = Object.keys(resolve);\n            if (keys.length === 0) {\n                return rxjs.of({});\n            }\n            if (keys.length === 1) {\n                var key_1 = keys[0];\n                return this.getResolver(resolve[key_1], future).pipe(operators.map(function (value) {\n                    var _a;\n                    return _a = {}, _a[key_1] = value, _a;\n                }));\n            }\n            var data = {};\n            var runningResolvers$ = rxjs.from(keys).pipe(operators.mergeMap(function (key) {\n                return _this.getResolver(resolve[key], future).pipe(operators.map(function (value) {\n                    data[key] = value;\n                    return value;\n                }));\n            }));\n            return runningResolvers$.pipe(operators.last(), operators.map(function () { return data; }));\n        };\n        PreActivation.prototype.getResolver = function (injectionToken, future) {\n            var resolver = this.getToken(injectionToken, future);\n            return resolver.resolve ? wrapIntoObservable(resolver.resolve(future, this.future)) :\n                wrapIntoObservable(resolver(future, this.future));\n        };\n        PreActivation.prototype.getToken = function (token, snapshot) {\n            var config = closestLoadedConfig(snapshot);\n            var injector = config ? config.module.injector : this.moduleInjector;\n            return injector.get(token);\n        };\n        return PreActivation;\n    }());\n    function closestLoadedConfig(snapshot) {\n        if (!snapshot)\n            return null;\n        for (var s = snapshot.parent; s; s = s.parent) {\n            var route = s.routeConfig;\n            if (route && route._loadedConfig)\n                return route._loadedConfig;\n        }\n        return null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NoMatch$1 = /** @class */ (function () {\n        function NoMatch() {\n        }\n        return NoMatch;\n    }());\n    function recognize(rootComponentType, config, urlTree, url, paramsInheritanceStrategy, relativeLinkResolution) {\n        if (paramsInheritanceStrategy === void 0) { paramsInheritanceStrategy = 'emptyOnly'; }\n        if (relativeLinkResolution === void 0) { relativeLinkResolution = 'legacy'; }\n        return new Recognizer(rootComponentType, config, urlTree, url, paramsInheritanceStrategy, relativeLinkResolution)\n            .recognize();\n    }\n    var Recognizer = /** @class */ (function () {\n        function Recognizer(rootComponentType, config, urlTree, url, paramsInheritanceStrategy, relativeLinkResolution) {\n            this.rootComponentType = rootComponentType;\n            this.config = config;\n            this.urlTree = urlTree;\n            this.url = url;\n            this.paramsInheritanceStrategy = paramsInheritanceStrategy;\n            this.relativeLinkResolution = relativeLinkResolution;\n        }\n        Recognizer.prototype.recognize = function () {\n            try {\n                var rootSegmentGroup = split$1(this.urlTree.root, [], [], this.config, this.relativeLinkResolution).segmentGroup;\n                var children = this.processSegmentGroup(this.config, rootSegmentGroup, PRIMARY_OUTLET);\n                var root = new ActivatedRouteSnapshot([], Object.freeze({}), Object.freeze(__assign({}, this.urlTree.queryParams)), this.urlTree.fragment, {}, PRIMARY_OUTLET, this.rootComponentType, null, this.urlTree.root, -1, {});\n                var rootNode = new TreeNode(root, children);\n                var routeState = new RouterStateSnapshot(this.url, rootNode);\n                this.inheritParamsAndData(routeState._root);\n                return rxjs.of(routeState);\n            }\n            catch (e) {\n                return new rxjs.Observable(function (obs) { return obs.error(e); });\n            }\n        };\n        Recognizer.prototype.inheritParamsAndData = function (routeNode) {\n            var _this = this;\n            var route = routeNode.value;\n            var i = inheritedParamsDataResolve(route, this.paramsInheritanceStrategy);\n            route.params = Object.freeze(i.params);\n            route.data = Object.freeze(i.data);\n            routeNode.children.forEach(function (n) { return _this.inheritParamsAndData(n); });\n        };\n        Recognizer.prototype.processSegmentGroup = function (config, segmentGroup, outlet) {\n            if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n                return this.processChildren(config, segmentGroup);\n            }\n            return this.processSegment(config, segmentGroup, segmentGroup.segments, outlet);\n        };\n        Recognizer.prototype.processChildren = function (config, segmentGroup) {\n            var _this = this;\n            var children = mapChildrenIntoArray(segmentGroup, function (child, childOutlet) { return _this.processSegmentGroup(config, child, childOutlet); });\n            checkOutletNameUniqueness(children);\n            sortActivatedRouteSnapshots(children);\n            return children;\n        };\n        Recognizer.prototype.processSegment = function (config, segmentGroup, segments, outlet) {\n            var e_1, _a;\n            try {\n                for (var config_1 = __values(config), config_1_1 = config_1.next(); !config_1_1.done; config_1_1 = config_1.next()) {\n                    var r = config_1_1.value;\n                    try {\n                        return this.processSegmentAgainstRoute(r, segmentGroup, segments, outlet);\n                    }\n                    catch (e) {\n                        if (!(e instanceof NoMatch$1))\n                            throw e;\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (config_1_1 && !config_1_1.done && (_a = config_1.return)) _a.call(config_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            if (this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n                return [];\n            }\n            throw new NoMatch$1();\n        };\n        Recognizer.prototype.noLeftoversInUrl = function (segmentGroup, segments, outlet) {\n            return segments.length === 0 && !segmentGroup.children[outlet];\n        };\n        Recognizer.prototype.processSegmentAgainstRoute = function (route, rawSegment, segments, outlet) {\n            if (route.redirectTo)\n                throw new NoMatch$1();\n            if ((route.outlet || PRIMARY_OUTLET) !== outlet)\n                throw new NoMatch$1();\n            var snapshot;\n            var consumedSegments = [];\n            var rawSlicedSegments = [];\n            if (route.path === '**') {\n                var params = segments.length > 0 ? last(segments).parameters : {};\n                snapshot = new ActivatedRouteSnapshot(segments, params, Object.freeze(__assign({}, this.urlTree.queryParams)), this.urlTree.fragment, getData(route), outlet, route.component, route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + segments.length, getResolve(route));\n            }\n            else {\n                var result = match$1(rawSegment, route, segments);\n                consumedSegments = result.consumedSegments;\n                rawSlicedSegments = segments.slice(result.lastChild);\n                snapshot = new ActivatedRouteSnapshot(consumedSegments, result.parameters, Object.freeze(__assign({}, this.urlTree.queryParams)), this.urlTree.fragment, getData(route), outlet, route.component, route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + consumedSegments.length, getResolve(route));\n            }\n            var childConfig = getChildConfig(route);\n            var _a = split$1(rawSegment, consumedSegments, rawSlicedSegments, childConfig, this.relativeLinkResolution), segmentGroup = _a.segmentGroup, slicedSegments = _a.slicedSegments;\n            if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n                var children_1 = this.processChildren(childConfig, segmentGroup);\n                return [new TreeNode(snapshot, children_1)];\n            }\n            if (childConfig.length === 0 && slicedSegments.length === 0) {\n                return [new TreeNode(snapshot, [])];\n            }\n            var children = this.processSegment(childConfig, segmentGroup, slicedSegments, PRIMARY_OUTLET);\n            return [new TreeNode(snapshot, children)];\n        };\n        return Recognizer;\n    }());\n    function sortActivatedRouteSnapshots(nodes) {\n        nodes.sort(function (a, b) {\n            if (a.value.outlet === PRIMARY_OUTLET)\n                return -1;\n            if (b.value.outlet === PRIMARY_OUTLET)\n                return 1;\n            return a.value.outlet.localeCompare(b.value.outlet);\n        });\n    }\n    function getChildConfig(route) {\n        if (route.children) {\n            return route.children;\n        }\n        if (route.loadChildren) {\n            return route._loadedConfig.routes;\n        }\n        return [];\n    }\n    function match$1(segmentGroup, route, segments) {\n        if (route.path === '') {\n            if (route.pathMatch === 'full' && (segmentGroup.hasChildren() || segments.length > 0)) {\n                throw new NoMatch$1();\n            }\n            return { consumedSegments: [], lastChild: 0, parameters: {} };\n        }\n        var matcher = route.matcher || defaultUrlMatcher;\n        var res = matcher(segments, segmentGroup, route);\n        if (!res)\n            throw new NoMatch$1();\n        var posParams = {};\n        forEach(res.posParams, function (v, k) { posParams[k] = v.path; });\n        var parameters = res.consumed.length > 0 ? __assign({}, posParams, res.consumed[res.consumed.length - 1].parameters) :\n            posParams;\n        return { consumedSegments: res.consumed, lastChild: res.consumed.length, parameters: parameters };\n    }\n    function checkOutletNameUniqueness(nodes) {\n        var names = {};\n        nodes.forEach(function (n) {\n            var routeWithSameOutletName = names[n.value.outlet];\n            if (routeWithSameOutletName) {\n                var p = routeWithSameOutletName.url.map(function (s) { return s.toString(); }).join('/');\n                var c = n.value.url.map(function (s) { return s.toString(); }).join('/');\n                throw new Error(\"Two segments cannot have the same outlet name: '\" + p + \"' and '\" + c + \"'.\");\n            }\n            names[n.value.outlet] = n.value;\n        });\n    }\n    function getSourceSegmentGroup(segmentGroup) {\n        var s = segmentGroup;\n        while (s._sourceSegment) {\n            s = s._sourceSegment;\n        }\n        return s;\n    }\n    function getPathIndexShift(segmentGroup) {\n        var s = segmentGroup;\n        var res = (s._segmentIndexShift ? s._segmentIndexShift : 0);\n        while (s._sourceSegment) {\n            s = s._sourceSegment;\n            res += (s._segmentIndexShift ? s._segmentIndexShift : 0);\n        }\n        return res - 1;\n    }\n    function split$1(segmentGroup, consumedSegments, slicedSegments, config, relativeLinkResolution) {\n        if (slicedSegments.length > 0 &&\n            containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n            var s_1 = new UrlSegmentGroup(consumedSegments, createChildrenForEmptyPaths(segmentGroup, consumedSegments, config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n            s_1._sourceSegment = segmentGroup;\n            s_1._segmentIndexShift = consumedSegments.length;\n            return { segmentGroup: s_1, slicedSegments: [] };\n        }\n        if (slicedSegments.length === 0 &&\n            containsEmptyPathMatches(segmentGroup, slicedSegments, config)) {\n            var s_2 = new UrlSegmentGroup(segmentGroup.segments, addEmptyPathsToChildrenIfNeeded(segmentGroup, consumedSegments, slicedSegments, config, segmentGroup.children, relativeLinkResolution));\n            s_2._sourceSegment = segmentGroup;\n            s_2._segmentIndexShift = consumedSegments.length;\n            return { segmentGroup: s_2, slicedSegments: slicedSegments };\n        }\n        var s = new UrlSegmentGroup(segmentGroup.segments, segmentGroup.children);\n        s._sourceSegment = segmentGroup;\n        s._segmentIndexShift = consumedSegments.length;\n        return { segmentGroup: s, slicedSegments: slicedSegments };\n    }\n    function addEmptyPathsToChildrenIfNeeded(segmentGroup, consumedSegments, slicedSegments, routes, children, relativeLinkResolution) {\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var routes_1 = __values(routes), routes_1_1 = routes_1.next(); !routes_1_1.done; routes_1_1 = routes_1.next()) {\n                var r = routes_1_1.value;\n                if (emptyPathMatch(segmentGroup, slicedSegments, r) && !children[getOutlet$1(r)]) {\n                    var s = new UrlSegmentGroup([], {});\n                    s._sourceSegment = segmentGroup;\n                    if (relativeLinkResolution === 'legacy') {\n                        s._segmentIndexShift = segmentGroup.segments.length;\n                    }\n                    else {\n                        s._segmentIndexShift = consumedSegments.length;\n                    }\n                    res[getOutlet$1(r)] = s;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (routes_1_1 && !routes_1_1.done && (_a = routes_1.return)) _a.call(routes_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return __assign({}, children, res);\n    }\n    function createChildrenForEmptyPaths(segmentGroup, consumedSegments, routes, primarySegment) {\n        var e_3, _a;\n        var res = {};\n        res[PRIMARY_OUTLET] = primarySegment;\n        primarySegment._sourceSegment = segmentGroup;\n        primarySegment._segmentIndexShift = consumedSegments.length;\n        try {\n            for (var routes_2 = __values(routes), routes_2_1 = routes_2.next(); !routes_2_1.done; routes_2_1 = routes_2.next()) {\n                var r = routes_2_1.value;\n                if (r.path === '' && getOutlet$1(r) !== PRIMARY_OUTLET) {\n                    var s = new UrlSegmentGroup([], {});\n                    s._sourceSegment = segmentGroup;\n                    s._segmentIndexShift = consumedSegments.length;\n                    res[getOutlet$1(r)] = s;\n                }\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (routes_2_1 && !routes_2_1.done && (_a = routes_2.return)) _a.call(routes_2);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n        return res;\n    }\n    function containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, routes) {\n        return routes.some(function (r) { return emptyPathMatch(segmentGroup, slicedSegments, r) && getOutlet$1(r) !== PRIMARY_OUTLET; });\n    }\n    function containsEmptyPathMatches(segmentGroup, slicedSegments, routes) {\n        return routes.some(function (r) { return emptyPathMatch(segmentGroup, slicedSegments, r); });\n    }\n    function emptyPathMatch(segmentGroup, slicedSegments, r) {\n        if ((segmentGroup.hasChildren() || slicedSegments.length > 0) && r.pathMatch === 'full') {\n            return false;\n        }\n        return r.path === '' && r.redirectTo === undefined;\n    }\n    function getOutlet$1(route) {\n        return route.outlet || PRIMARY_OUTLET;\n    }\n    function getData(route) {\n        return route.data || {};\n    }\n    function getResolve(route) {\n        return route.resolve || {};\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Provides a way to customize when activated routes get reused.\n     *\n     * @experimental\n     */\n    var RouteReuseStrategy = /** @class */ (function () {\n        function RouteReuseStrategy() {\n        }\n        return RouteReuseStrategy;\n    }());\n    /**\n     * Does not detach any subtrees. Reuses routes as long as their route config is the same.\n     */\n    var DefaultRouteReuseStrategy = /** @class */ (function () {\n        function DefaultRouteReuseStrategy() {\n        }\n        DefaultRouteReuseStrategy.prototype.shouldDetach = function (route) { return false; };\n        DefaultRouteReuseStrategy.prototype.store = function (route, detachedTree) { };\n        DefaultRouteReuseStrategy.prototype.shouldAttach = function (route) { return false; };\n        DefaultRouteReuseStrategy.prototype.retrieve = function (route) { return null; };\n        DefaultRouteReuseStrategy.prototype.shouldReuseRoute = function (future, curr) {\n            return future.routeConfig === curr.routeConfig;\n        };\n        return DefaultRouteReuseStrategy;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @docsNotRequired\n     * @experimental\n     */\n    var ROUTES = new i0.InjectionToken('ROUTES');\n    var RouterConfigLoader = /** @class */ (function () {\n        function RouterConfigLoader(loader, compiler, onLoadStartListener, onLoadEndListener) {\n            this.loader = loader;\n            this.compiler = compiler;\n            this.onLoadStartListener = onLoadStartListener;\n            this.onLoadEndListener = onLoadEndListener;\n        }\n        RouterConfigLoader.prototype.load = function (parentInjector, route) {\n            var _this = this;\n            if (this.onLoadStartListener) {\n                this.onLoadStartListener(route);\n            }\n            var moduleFactory$ = this.loadModuleFactory(route.loadChildren);\n            return moduleFactory$.pipe(operators.map(function (factory) {\n                if (_this.onLoadEndListener) {\n                    _this.onLoadEndListener(route);\n                }\n                var module = factory.create(parentInjector);\n                return new LoadedRouterConfig(flatten(module.injector.get(ROUTES)).map(standardizeConfig), module);\n            }));\n        };\n        RouterConfigLoader.prototype.loadModuleFactory = function (loadChildren) {\n            var _this = this;\n            if (typeof loadChildren === 'string') {\n                return rxjs.from(this.loader.load(loadChildren));\n            }\n            else {\n                return wrapIntoObservable(loadChildren()).pipe(operators.mergeMap(function (t) {\n                    if (t instanceof i0.NgModuleFactory) {\n                        return rxjs.of(t);\n                    }\n                    else {\n                        return rxjs.from(_this.compiler.compileModuleAsync(t));\n                    }\n                }));\n            }\n        };\n        return RouterConfigLoader;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Provides a way to migrate AngularJS applications to Angular.\n     *\n     * @experimental\n     */\n    var UrlHandlingStrategy = /** @class */ (function () {\n        function UrlHandlingStrategy() {\n        }\n        return UrlHandlingStrategy;\n    }());\n    /**\n     * @experimental\n     */\n    var DefaultUrlHandlingStrategy = /** @class */ (function () {\n        function DefaultUrlHandlingStrategy() {\n        }\n        DefaultUrlHandlingStrategy.prototype.shouldProcessUrl = function (url) { return true; };\n        DefaultUrlHandlingStrategy.prototype.extract = function (url) { return url; };\n        DefaultUrlHandlingStrategy.prototype.merge = function (newUrlPart, wholeUrl) { return newUrlPart; };\n        return DefaultUrlHandlingStrategy;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function defaultErrorHandler(error) {\n        throw error;\n    }\n    function defaultMalformedUriErrorHandler(error, urlSerializer, url) {\n        return urlSerializer.parse('/');\n    }\n    /**\n     * @internal\n     */\n    function defaultRouterHook(snapshot, runExtras) {\n        return rxjs.of(null);\n    }\n    /**\n     * @description\n     *\n     * Provides the navigation and url manipulation capabilities.\n     *\n     * See `Routes` for more details and examples.\n     *\n     * @ngModule RouterModule\n     *\n     *\n     */\n    var Router = /** @class */ (function () {\n        /**\n         * Creates the router service.\n         */\n        // TODO: vsavkin make internal after the final is out.\n        function Router(rootComponentType, urlSerializer, rootContexts, location, injector, loader, compiler, config) {\n            var _this = this;\n            this.rootComponentType = rootComponentType;\n            this.urlSerializer = urlSerializer;\n            this.rootContexts = rootContexts;\n            this.location = location;\n            this.config = config;\n            this.navigations = new rxjs.BehaviorSubject(null);\n            this.navigationId = 0;\n            this.isNgZoneEnabled = false;\n            this.events = new rxjs.Subject();\n            /**\n             * Error handler that is invoked when a navigation errors.\n             *\n             * See `ErrorHandler` for more information.\n             */\n            this.errorHandler = defaultErrorHandler;\n            /**\n             * Malformed uri error handler is invoked when `Router.parseUrl(url)` throws an\n             * error due to containing an invalid character. The most common case would be a `%` sign\n             * that's not encoded and is not part of a percent encoded sequence.\n             */\n            this.malformedUriErrorHandler = defaultMalformedUriErrorHandler;\n            /**\n             * Indicates if at least one navigation happened.\n             */\n            this.navigated = false;\n            this.lastSuccessfulId = -1;\n            /**\n             * Used by RouterModule. This allows us to\n             * pause the navigation either before preactivation or after it.\n             * @internal\n             */\n            this.hooks = {\n                beforePreactivation: defaultRouterHook,\n                afterPreactivation: defaultRouterHook\n            };\n            /**\n             * Extracts and merges URLs. Used for AngularJS to Angular migrations.\n             */\n            this.urlHandlingStrategy = new DefaultUrlHandlingStrategy();\n            this.routeReuseStrategy = new DefaultRouteReuseStrategy();\n            /**\n             * Define what the router should do if it receives a navigation request to the current URL.\n             * By default, the router will ignore this navigation. However, this prevents features such\n             * as a \"refresh\" button. Use this option to configure the behavior when navigating to the\n             * current URL. Default is 'ignore'.\n             */\n            this.onSameUrlNavigation = 'ignore';\n            /**\n             * Defines how the router merges params, data and resolved data from parent to child\n             * routes. Available options are:\n             *\n             * - `'emptyOnly'`, the default, only inherits parent params for path-less or component-less\n             *   routes.\n             * - `'always'`, enables unconditional inheritance of parent params.\n             */\n            this.paramsInheritanceStrategy = 'emptyOnly';\n            /**\n             * Defines when the router updates the browser URL. The default behavior is to update after\n             * successful navigation. However, some applications may prefer a mode where the URL gets\n             * updated at the beginning of navigation. The most common use case would be updating the\n             * URL early so if navigation fails, you can show an error message with the URL that failed.\n             * Available options are:\n             *\n             * - `'deferred'`, the default, updates the browser URL after navigation has finished.\n             * - `'eager'`, updates browser URL at the beginning of navigation.\n             */\n            this.urlUpdateStrategy = 'deferred';\n            /**\n             * See {@link RouterModule} for more information.\n             */\n            this.relativeLinkResolution = 'legacy';\n            var onLoadStart = function (r) { return _this.triggerEvent(new RouteConfigLoadStart(r)); };\n            var onLoadEnd = function (r) { return _this.triggerEvent(new RouteConfigLoadEnd(r)); };\n            this.ngModule = injector.get(i0.NgModuleRef);\n            this.console = injector.get(i0.ɵConsole);\n            var ngZone = injector.get(i0.NgZone);\n            this.isNgZoneEnabled = ngZone instanceof i0.NgZone;\n            this.resetConfig(config);\n            this.currentUrlTree = createEmptyUrlTree();\n            this.rawUrlTree = this.currentUrlTree;\n            this.configLoader = new RouterConfigLoader(loader, compiler, onLoadStart, onLoadEnd);\n            this.routerState = createEmptyState(this.currentUrlTree, this.rootComponentType);\n            this.processNavigations();\n        }\n        /**\n         * @internal\n         * TODO: this should be removed once the constructor of the router made internal\n         */\n        Router.prototype.resetRootComponentType = function (rootComponentType) {\n            this.rootComponentType = rootComponentType;\n            // TODO: vsavkin router 4.0 should make the root component set to null\n            // this will simplify the lifecycle of the router.\n            this.routerState.root.component = this.rootComponentType;\n        };\n        /**\n         * Sets up the location change listener and performs the initial navigation.\n         */\n        Router.prototype.initialNavigation = function () {\n            this.setUpLocationChangeListener();\n            if (this.navigationId === 0) {\n                this.navigateByUrl(this.location.path(true), { replaceUrl: true });\n            }\n        };\n        /**\n         * Sets up the location change listener.\n         */\n        Router.prototype.setUpLocationChangeListener = function () {\n            var _this = this;\n            // Don't need to use Zone.wrap any more, because zone.js\n            // already patch onPopState, so location change callback will\n            // run into ngZone\n            if (!this.locationSubscription) {\n                this.locationSubscription = this.location.subscribe(function (change) {\n                    var rawUrlTree = _this.parseUrl(change['url']);\n                    var source = change['type'] === 'popstate' ? 'popstate' : 'hashchange';\n                    var state = change.state && change.state.navigationId ?\n                        { navigationId: change.state.navigationId } :\n                        null;\n                    setTimeout(function () { _this.scheduleNavigation(rawUrlTree, source, state, { replaceUrl: true }); }, 0);\n                });\n            }\n        };\n        Object.defineProperty(Router.prototype, \"url\", {\n            /** The current url */\n            get: function () { return this.serializeUrl(this.currentUrlTree); },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        Router.prototype.triggerEvent = function (e) { this.events.next(e); };\n        /**\n         * Resets the configuration used for navigation and generating links.\n         *\n         * ### Usage\n         *\n         * ```\n         * router.resetConfig([\n         *  { path: 'team/:id', component: TeamCmp, children: [\n         *    { path: 'simple', component: SimpleCmp },\n         *    { path: 'user/:name', component: UserCmp }\n         *  ]}\n         * ]);\n         * ```\n         */\n        Router.prototype.resetConfig = function (config) {\n            validateConfig(config);\n            this.config = config.map(standardizeConfig);\n            this.navigated = false;\n            this.lastSuccessfulId = -1;\n        };\n        /** @docsNotRequired */\n        Router.prototype.ngOnDestroy = function () { this.dispose(); };\n        /** Disposes of the router */\n        Router.prototype.dispose = function () {\n            if (this.locationSubscription) {\n                this.locationSubscription.unsubscribe();\n                this.locationSubscription = null;\n            }\n        };\n        /**\n         * Applies an array of commands to the current url tree and creates a new url tree.\n         *\n         * When given an activate route, applies the given commands starting from the route.\n         * When not given a route, applies the given command starting from the root.\n         *\n         * ### Usage\n         *\n         * ```\n         * // create /team/33/user/11\n         * router.createUrlTree(['/team', 33, 'user', 11]);\n         *\n         * // create /team/33;expand=true/user/11\n         * router.createUrlTree(['/team', 33, {expand: true}, 'user', 11]);\n         *\n         * // you can collapse static segments like this (this works only with the first passed-in value):\n         * router.createUrlTree(['/team/33/user', userId]);\n         *\n         * // If the first segment can contain slashes, and you do not want the router to split it, you\n         * // can do the following:\n         *\n         * router.createUrlTree([{segmentPath: '/one/two'}]);\n         *\n         * // create /team/33/(user/11//right:chat)\n         * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: 'chat'}}]);\n         *\n         * // remove the right secondary node\n         * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: null}}]);\n         *\n         * // assuming the current url is `/team/33/user/11` and the route points to `user/11`\n         *\n         * // navigate to /team/33/user/11/details\n         * router.createUrlTree(['details'], {relativeTo: route});\n         *\n         * // navigate to /team/33/user/22\n         * router.createUrlTree(['../22'], {relativeTo: route});\n         *\n         * // navigate to /team/44/user/22\n         * router.createUrlTree(['../../team/44/user/22'], {relativeTo: route});\n         * ```\n         */\n        Router.prototype.createUrlTree = function (commands, navigationExtras) {\n            if (navigationExtras === void 0) { navigationExtras = {}; }\n            var relativeTo = navigationExtras.relativeTo, queryParams = navigationExtras.queryParams, fragment = navigationExtras.fragment, preserveQueryParams = navigationExtras.preserveQueryParams, queryParamsHandling = navigationExtras.queryParamsHandling, preserveFragment = navigationExtras.preserveFragment;\n            if (i0.isDevMode() && preserveQueryParams && console && console.warn) {\n                console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n            }\n            var a = relativeTo || this.routerState.root;\n            var f = preserveFragment ? this.currentUrlTree.fragment : fragment;\n            var q = null;\n            if (queryParamsHandling) {\n                switch (queryParamsHandling) {\n                    case 'merge':\n                        q = __assign({}, this.currentUrlTree.queryParams, queryParams);\n                        break;\n                    case 'preserve':\n                        q = this.currentUrlTree.queryParams;\n                        break;\n                    default:\n                        q = queryParams || null;\n                }\n            }\n            else {\n                q = preserveQueryParams ? this.currentUrlTree.queryParams : queryParams || null;\n            }\n            if (q !== null) {\n                q = this.removeEmptyProps(q);\n            }\n            return createUrlTree(a, this.currentUrlTree, commands, q, f);\n        };\n        /**\n         * Navigate based on the provided url. This navigation is always absolute.\n         *\n         * Returns a promise that:\n         * - resolves to 'true' when navigation succeeds,\n         * - resolves to 'false' when navigation fails,\n         * - is rejected when an error happens.\n         *\n         * ### Usage\n         *\n         * ```\n         * router.navigateByUrl(\"/team/33/user/11\");\n         *\n         * // Navigate without updating the URL\n         * router.navigateByUrl(\"/team/33/user/11\", { skipLocationChange: true });\n         * ```\n         *\n         * Since `navigateByUrl()` takes an absolute URL as the first parameter,\n         * it will not apply any delta to the current URL and ignores any properties\n         * in the second parameter (the `NavigationExtras`) that would change the\n         * provided URL.\n         */\n        Router.prototype.navigateByUrl = function (url, extras) {\n            if (extras === void 0) { extras = { skipLocationChange: false }; }\n            if (i0.isDevMode() && this.isNgZoneEnabled && !i0.NgZone.isInAngularZone()) {\n                this.console.warn(\"Navigation triggered outside Angular zone, did you forget to call 'ngZone.run()'?\");\n            }\n            var urlTree = url instanceof UrlTree ? url : this.parseUrl(url);\n            var mergedTree = this.urlHandlingStrategy.merge(urlTree, this.rawUrlTree);\n            return this.scheduleNavigation(mergedTree, 'imperative', null, extras);\n        };\n        /**\n         * Navigate based on the provided array of commands and a starting point.\n         * If no starting route is provided, the navigation is absolute.\n         *\n         * Returns a promise that:\n         * - resolves to 'true' when navigation succeeds,\n         * - resolves to 'false' when navigation fails,\n         * - is rejected when an error happens.\n         *\n         * ### Usage\n         *\n         * ```\n         * router.navigate(['team', 33, 'user', 11], {relativeTo: route});\n         *\n         * // Navigate without updating the URL\n         * router.navigate(['team', 33, 'user', 11], {relativeTo: route, skipLocationChange: true});\n         * ```\n         *\n         * The first parameter of `navigate()` is a delta to be applied to the current URL\n         * or the one provided in the `relativeTo` property of the second parameter (the\n         * `NavigationExtras`).\n         */\n        Router.prototype.navigate = function (commands, extras) {\n            if (extras === void 0) { extras = { skipLocationChange: false }; }\n            validateCommands(commands);\n            return this.navigateByUrl(this.createUrlTree(commands, extras), extras);\n        };\n        /** Serializes a `UrlTree` into a string */\n        Router.prototype.serializeUrl = function (url) { return this.urlSerializer.serialize(url); };\n        /** Parses a string into a `UrlTree` */\n        Router.prototype.parseUrl = function (url) {\n            var urlTree;\n            try {\n                urlTree = this.urlSerializer.parse(url);\n            }\n            catch (e) {\n                urlTree = this.malformedUriErrorHandler(e, this.urlSerializer, url);\n            }\n            return urlTree;\n        };\n        /** Returns whether the url is activated */\n        Router.prototype.isActive = function (url, exact) {\n            if (url instanceof UrlTree) {\n                return containsTree(this.currentUrlTree, url, exact);\n            }\n            var urlTree = this.parseUrl(url);\n            return containsTree(this.currentUrlTree, urlTree, exact);\n        };\n        Router.prototype.removeEmptyProps = function (params) {\n            return Object.keys(params).reduce(function (result, key) {\n                var value = params[key];\n                if (value !== null && value !== undefined) {\n                    result[key] = value;\n                }\n                return result;\n            }, {});\n        };\n        Router.prototype.processNavigations = function () {\n            var _this = this;\n            this.navigations\n                .pipe(operators.concatMap(function (nav) {\n                if (nav) {\n                    _this.executeScheduledNavigation(nav);\n                    // a failed navigation should not stop the router from processing\n                    // further navigations => the catch\n                    return nav.promise.catch(function () { });\n                }\n                else {\n                    return rxjs.of(null);\n                }\n            }))\n                .subscribe(function () { });\n        };\n        Router.prototype.scheduleNavigation = function (rawUrl, source, state, extras) {\n            var lastNavigation = this.navigations.value;\n            // If the user triggers a navigation imperatively (e.g., by using navigateByUrl),\n            // and that navigation results in 'replaceState' that leads to the same URL,\n            // we should skip those.\n            if (lastNavigation && source !== 'imperative' && lastNavigation.source === 'imperative' &&\n                lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n                return Promise.resolve(true); // return value is not used\n            }\n            // Because of a bug in IE and Edge, the location class fires two events (popstate and\n            // hashchange) every single time. The second one should be ignored. Otherwise, the URL will\n            // flicker. Handles the case when a popstate was emitted first.\n            if (lastNavigation && source == 'hashchange' && lastNavigation.source === 'popstate' &&\n                lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n                return Promise.resolve(true); // return value is not used\n            }\n            // Because of a bug in IE and Edge, the location class fires two events (popstate and\n            // hashchange) every single time. The second one should be ignored. Otherwise, the URL will\n            // flicker. Handles the case when a hashchange was emitted first.\n            if (lastNavigation && source == 'popstate' && lastNavigation.source === 'hashchange' &&\n                lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n                return Promise.resolve(true); // return value is not used\n            }\n            var resolve = null;\n            var reject = null;\n            var promise = new Promise(function (res, rej) {\n                resolve = res;\n                reject = rej;\n            });\n            var id = ++this.navigationId;\n            this.navigations.next({ id: id, source: source, state: state, rawUrl: rawUrl, extras: extras, resolve: resolve, reject: reject, promise: promise });\n            // Make sure that the error is propagated even though `processNavigations` catch\n            // handler does not rethrow\n            return promise.catch(function (e) { return Promise.reject(e); });\n        };\n        Router.prototype.executeScheduledNavigation = function (_a) {\n            var _this = this;\n            var id = _a.id, rawUrl = _a.rawUrl, extras = _a.extras, resolve = _a.resolve, reject = _a.reject, source = _a.source, state = _a.state;\n            var url = this.urlHandlingStrategy.extract(rawUrl);\n            var urlTransition = !this.navigated || url.toString() !== this.currentUrlTree.toString();\n            if ((this.onSameUrlNavigation === 'reload' ? true : urlTransition) &&\n                this.urlHandlingStrategy.shouldProcessUrl(rawUrl)) {\n                if (this.urlUpdateStrategy === 'eager' && !extras.skipLocationChange) {\n                    this.setBrowserUrl(rawUrl, !!extras.replaceUrl, id);\n                }\n                this.events\n                    .next(new NavigationStart(id, this.serializeUrl(url), source, state));\n                Promise.resolve()\n                    .then(function (_) { return _this.runNavigate(url, rawUrl, !!extras.skipLocationChange, !!extras.replaceUrl, id, null); })\n                    .then(resolve, reject);\n                // we cannot process the current URL, but we could process the previous one =>\n                // we need to do some cleanup\n            }\n            else if (urlTransition && this.rawUrlTree &&\n                this.urlHandlingStrategy.shouldProcessUrl(this.rawUrlTree)) {\n                this.events\n                    .next(new NavigationStart(id, this.serializeUrl(url), source, state));\n                Promise.resolve()\n                    .then(function (_) { return _this.runNavigate(url, rawUrl, false, false, id, createEmptyState(url, _this.rootComponentType).snapshot); })\n                    .then(resolve, reject);\n            }\n            else {\n                this.rawUrlTree = rawUrl;\n                resolve(null);\n            }\n        };\n        Router.prototype.runNavigate = function (url, rawUrl, skipLocationChange, replaceUrl, id, precreatedState) {\n            var _this = this;\n            if (id !== this.navigationId) {\n                this.events\n                    .next(new NavigationCancel(id, this.serializeUrl(url), \"Navigation ID \" + id + \" is not equal to the current navigation id \" + this.navigationId));\n                return Promise.resolve(false);\n            }\n            return new Promise(function (resolvePromise, rejectPromise) {\n                // create an observable of the url and route state snapshot\n                // this operation do not result in any side effects\n                var urlAndSnapshot$;\n                if (!precreatedState) {\n                    var moduleInjector = _this.ngModule.injector;\n                    var redirectsApplied$ = applyRedirects(moduleInjector, _this.configLoader, _this.urlSerializer, url, _this.config);\n                    urlAndSnapshot$ = redirectsApplied$.pipe(operators.mergeMap(function (appliedUrl) {\n                        return recognize(_this.rootComponentType, _this.config, appliedUrl, _this.serializeUrl(appliedUrl), _this.paramsInheritanceStrategy, _this.relativeLinkResolution)\n                            .pipe(operators.map(function (snapshot) {\n                            _this.events\n                                .next(new RoutesRecognized(id, _this.serializeUrl(url), _this.serializeUrl(appliedUrl), snapshot));\n                            return { appliedUrl: appliedUrl, snapshot: snapshot };\n                        }));\n                    }));\n                }\n                else {\n                    urlAndSnapshot$ = rxjs.of({ appliedUrl: url, snapshot: precreatedState });\n                }\n                var beforePreactivationDone$ = urlAndSnapshot$.pipe(operators.mergeMap(function (p) {\n                    if (typeof p === 'boolean')\n                        return rxjs.of(p);\n                    return _this.hooks\n                        .beforePreactivation(p.snapshot, {\n                        navigationId: id,\n                        appliedUrlTree: url,\n                        rawUrlTree: rawUrl, skipLocationChange: skipLocationChange, replaceUrl: replaceUrl,\n                    })\n                        .pipe(operators.map(function () { return p; }));\n                }));\n                // run preactivation: guards and data resolvers\n                var preActivation;\n                var preactivationSetup$ = beforePreactivationDone$.pipe(operators.map(function (p) {\n                    if (typeof p === 'boolean')\n                        return p;\n                    var appliedUrl = p.appliedUrl, snapshot = p.snapshot;\n                    var moduleInjector = _this.ngModule.injector;\n                    preActivation = new PreActivation(snapshot, _this.routerState.snapshot, moduleInjector, function (evt) { return _this.triggerEvent(evt); });\n                    preActivation.initialize(_this.rootContexts);\n                    return { appliedUrl: appliedUrl, snapshot: snapshot };\n                }));\n                var preactivationCheckGuards$ = preactivationSetup$.pipe(operators.mergeMap(function (p) {\n                    if (typeof p === 'boolean' || _this.navigationId !== id)\n                        return rxjs.of(false);\n                    var appliedUrl = p.appliedUrl, snapshot = p.snapshot;\n                    _this.triggerEvent(new GuardsCheckStart(id, _this.serializeUrl(url), _this.serializeUrl(appliedUrl), snapshot));\n                    return preActivation.checkGuards().pipe(operators.map(function (shouldActivate) {\n                        _this.triggerEvent(new GuardsCheckEnd(id, _this.serializeUrl(url), _this.serializeUrl(appliedUrl), snapshot, shouldActivate));\n                        return { appliedUrl: appliedUrl, snapshot: snapshot, shouldActivate: shouldActivate };\n                    }));\n                }));\n                var preactivationResolveData$ = preactivationCheckGuards$.pipe(operators.mergeMap(function (p) {\n                    if (typeof p === 'boolean' || _this.navigationId !== id)\n                        return rxjs.of(false);\n                    if (p.shouldActivate && preActivation.isActivating()) {\n                        _this.triggerEvent(new ResolveStart(id, _this.serializeUrl(url), _this.serializeUrl(p.appliedUrl), p.snapshot));\n                        return preActivation.resolveData(_this.paramsInheritanceStrategy).pipe(operators.map(function () {\n                            _this.triggerEvent(new ResolveEnd(id, _this.serializeUrl(url), _this.serializeUrl(p.appliedUrl), p.snapshot));\n                            return p;\n                        }));\n                    }\n                    else {\n                        return rxjs.of(p);\n                    }\n                }));\n                var preactivationDone$ = preactivationResolveData$.pipe(operators.mergeMap(function (p) {\n                    if (typeof p === 'boolean' || _this.navigationId !== id)\n                        return rxjs.of(false);\n                    return _this.hooks\n                        .afterPreactivation(p.snapshot, {\n                        navigationId: id,\n                        appliedUrlTree: url,\n                        rawUrlTree: rawUrl, skipLocationChange: skipLocationChange, replaceUrl: replaceUrl,\n                    })\n                        .pipe(operators.map(function () { return p; }));\n                }));\n                // create router state\n                // this operation has side effects => route state is being affected\n                var routerState$ = preactivationDone$.pipe(operators.map(function (p) {\n                    if (typeof p === 'boolean' || _this.navigationId !== id)\n                        return false;\n                    var appliedUrl = p.appliedUrl, snapshot = p.snapshot, shouldActivate = p.shouldActivate;\n                    if (shouldActivate) {\n                        var state = createRouterState(_this.routeReuseStrategy, snapshot, _this.routerState);\n                        return { appliedUrl: appliedUrl, state: state, shouldActivate: shouldActivate };\n                    }\n                    else {\n                        return { appliedUrl: appliedUrl, state: null, shouldActivate: shouldActivate };\n                    }\n                }));\n                _this.activateRoutes(routerState$, _this.routerState, _this.currentUrlTree, id, url, rawUrl, skipLocationChange, replaceUrl, resolvePromise, rejectPromise);\n            });\n        };\n        /**\n         * Performs the logic of activating routes. This is a synchronous process by default. While this\n         * is a private method, it could be overridden to make activation asynchronous.\n         */\n        Router.prototype.activateRoutes = function (state, storedState, storedUrl, id, url, rawUrl, skipLocationChange, replaceUrl, resolvePromise, rejectPromise) {\n            var _this = this;\n            // applied the new router state\n            // this operation has side effects\n            var navigationIsSuccessful;\n            state\n                .forEach(function (p) {\n                if (typeof p === 'boolean' || !p.shouldActivate || id !== _this.navigationId || !p.state) {\n                    navigationIsSuccessful = false;\n                    return;\n                }\n                var appliedUrl = p.appliedUrl, state = p.state;\n                _this.currentUrlTree = appliedUrl;\n                _this.rawUrlTree = _this.urlHandlingStrategy.merge(_this.currentUrlTree, rawUrl);\n                _this.routerState = state;\n                if (_this.urlUpdateStrategy === 'deferred' && !skipLocationChange) {\n                    _this.setBrowserUrl(_this.rawUrlTree, replaceUrl, id);\n                }\n                new ActivateRoutes(_this.routeReuseStrategy, state, storedState, function (evt) { return _this.triggerEvent(evt); })\n                    .activate(_this.rootContexts);\n                navigationIsSuccessful = true;\n            })\n                .then(function () {\n                if (navigationIsSuccessful) {\n                    _this.navigated = true;\n                    _this.lastSuccessfulId = id;\n                    _this.events\n                        .next(new NavigationEnd(id, _this.serializeUrl(url), _this.serializeUrl(_this.currentUrlTree)));\n                    resolvePromise(true);\n                }\n                else {\n                    _this.resetUrlToCurrentUrlTree();\n                    _this.events\n                        .next(new NavigationCancel(id, _this.serializeUrl(url), ''));\n                    resolvePromise(false);\n                }\n            }, function (e) {\n                if (isNavigationCancelingError(e)) {\n                    _this.navigated = true;\n                    _this.resetStateAndUrl(storedState, storedUrl, rawUrl);\n                    _this.events\n                        .next(new NavigationCancel(id, _this.serializeUrl(url), e.message));\n                    resolvePromise(false);\n                }\n                else {\n                    _this.resetStateAndUrl(storedState, storedUrl, rawUrl);\n                    _this.events\n                        .next(new NavigationError(id, _this.serializeUrl(url), e));\n                    try {\n                        resolvePromise(_this.errorHandler(e));\n                    }\n                    catch (ee) {\n                        rejectPromise(ee);\n                    }\n                }\n            });\n        };\n        Router.prototype.setBrowserUrl = function (url, replaceUrl, id) {\n            var path = this.urlSerializer.serialize(url);\n            if (this.location.isCurrentPathEqualTo(path) || replaceUrl) {\n                this.location.replaceState(path, '', { navigationId: id });\n            }\n            else {\n                this.location.go(path, '', { navigationId: id });\n            }\n        };\n        Router.prototype.resetStateAndUrl = function (storedState, storedUrl, rawUrl) {\n            this.routerState = storedState;\n            this.currentUrlTree = storedUrl;\n            this.rawUrlTree = this.urlHandlingStrategy.merge(this.currentUrlTree, rawUrl);\n            this.resetUrlToCurrentUrlTree();\n        };\n        Router.prototype.resetUrlToCurrentUrlTree = function () {\n            this.location.replaceState(this.urlSerializer.serialize(this.rawUrlTree), '', { navigationId: this.lastSuccessfulId });\n        };\n        return Router;\n    }());\n    var ActivateRoutes = /** @class */ (function () {\n        function ActivateRoutes(routeReuseStrategy, futureState, currState, forwardEvent) {\n            this.routeReuseStrategy = routeReuseStrategy;\n            this.futureState = futureState;\n            this.currState = currState;\n            this.forwardEvent = forwardEvent;\n        }\n        ActivateRoutes.prototype.activate = function (parentContexts) {\n            var futureRoot = this.futureState._root;\n            var currRoot = this.currState ? this.currState._root : null;\n            this.deactivateChildRoutes(futureRoot, currRoot, parentContexts);\n            advanceActivatedRoute(this.futureState.root);\n            this.activateChildRoutes(futureRoot, currRoot, parentContexts);\n        };\n        // De-activate the child route that are not re-used for the future state\n        ActivateRoutes.prototype.deactivateChildRoutes = function (futureNode, currNode, contexts) {\n            var _this = this;\n            var children = nodeChildrenAsMap(currNode);\n            // Recurse on the routes active in the future state to de-activate deeper children\n            futureNode.children.forEach(function (futureChild) {\n                var childOutletName = futureChild.value.outlet;\n                _this.deactivateRoutes(futureChild, children[childOutletName], contexts);\n                delete children[childOutletName];\n            });\n            // De-activate the routes that will not be re-used\n            forEach(children, function (v, childName) {\n                _this.deactivateRouteAndItsChildren(v, contexts);\n            });\n        };\n        ActivateRoutes.prototype.deactivateRoutes = function (futureNode, currNode, parentContext) {\n            var future = futureNode.value;\n            var curr = currNode ? currNode.value : null;\n            if (future === curr) {\n                // Reusing the node, check to see if the children need to be de-activated\n                if (future.component) {\n                    // If we have a normal route, we need to go through an outlet.\n                    var context = parentContext.getContext(future.outlet);\n                    if (context) {\n                        this.deactivateChildRoutes(futureNode, currNode, context.children);\n                    }\n                }\n                else {\n                    // if we have a componentless route, we recurse but keep the same outlet map.\n                    this.deactivateChildRoutes(futureNode, currNode, parentContext);\n                }\n            }\n            else {\n                if (curr) {\n                    // Deactivate the current route which will not be re-used\n                    this.deactivateRouteAndItsChildren(currNode, parentContext);\n                }\n            }\n        };\n        ActivateRoutes.prototype.deactivateRouteAndItsChildren = function (route, parentContexts) {\n            if (this.routeReuseStrategy.shouldDetach(route.value.snapshot)) {\n                this.detachAndStoreRouteSubtree(route, parentContexts);\n            }\n            else {\n                this.deactivateRouteAndOutlet(route, parentContexts);\n            }\n        };\n        ActivateRoutes.prototype.detachAndStoreRouteSubtree = function (route, parentContexts) {\n            var context = parentContexts.getContext(route.value.outlet);\n            if (context && context.outlet) {\n                var componentRef = context.outlet.detach();\n                var contexts = context.children.onOutletDeactivated();\n                this.routeReuseStrategy.store(route.value.snapshot, { componentRef: componentRef, route: route, contexts: contexts });\n            }\n        };\n        ActivateRoutes.prototype.deactivateRouteAndOutlet = function (route, parentContexts) {\n            var _this = this;\n            var context = parentContexts.getContext(route.value.outlet);\n            if (context) {\n                var children = nodeChildrenAsMap(route);\n                var contexts_1 = route.value.component ? context.children : parentContexts;\n                forEach(children, function (v, k) { return _this.deactivateRouteAndItsChildren(v, contexts_1); });\n                if (context.outlet) {\n                    // Destroy the component\n                    context.outlet.deactivate();\n                    // Destroy the contexts for all the outlets that were in the component\n                    context.children.onOutletDeactivated();\n                }\n            }\n        };\n        ActivateRoutes.prototype.activateChildRoutes = function (futureNode, currNode, contexts) {\n            var _this = this;\n            var children = nodeChildrenAsMap(currNode);\n            futureNode.children.forEach(function (c) {\n                _this.activateRoutes(c, children[c.value.outlet], contexts);\n                _this.forwardEvent(new ActivationEnd(c.value.snapshot));\n            });\n            if (futureNode.children.length) {\n                this.forwardEvent(new ChildActivationEnd(futureNode.value.snapshot));\n            }\n        };\n        ActivateRoutes.prototype.activateRoutes = function (futureNode, currNode, parentContexts) {\n            var future = futureNode.value;\n            var curr = currNode ? currNode.value : null;\n            advanceActivatedRoute(future);\n            // reusing the node\n            if (future === curr) {\n                if (future.component) {\n                    // If we have a normal route, we need to go through an outlet.\n                    var context = parentContexts.getOrCreateContext(future.outlet);\n                    this.activateChildRoutes(futureNode, currNode, context.children);\n                }\n                else {\n                    // if we have a componentless route, we recurse but keep the same outlet map.\n                    this.activateChildRoutes(futureNode, currNode, parentContexts);\n                }\n            }\n            else {\n                if (future.component) {\n                    // if we have a normal route, we need to place the component into the outlet and recurse.\n                    var context = parentContexts.getOrCreateContext(future.outlet);\n                    if (this.routeReuseStrategy.shouldAttach(future.snapshot)) {\n                        var stored = this.routeReuseStrategy.retrieve(future.snapshot);\n                        this.routeReuseStrategy.store(future.snapshot, null);\n                        context.children.onOutletReAttached(stored.contexts);\n                        context.attachRef = stored.componentRef;\n                        context.route = stored.route.value;\n                        if (context.outlet) {\n                            // Attach right away when the outlet has already been instantiated\n                            // Otherwise attach from `RouterOutlet.ngOnInit` when it is instantiated\n                            context.outlet.attach(stored.componentRef, stored.route.value);\n                        }\n                        advanceActivatedRouteNodeAndItsChildren(stored.route);\n                    }\n                    else {\n                        var config = parentLoadedConfig(future.snapshot);\n                        var cmpFactoryResolver = config ? config.module.componentFactoryResolver : null;\n                        context.attachRef = null;\n                        context.route = future;\n                        context.resolver = cmpFactoryResolver;\n                        if (context.outlet) {\n                            // Activate the outlet when it has already been instantiated\n                            // Otherwise it will get activated from its `ngOnInit` when instantiated\n                            context.outlet.activateWith(future, cmpFactoryResolver);\n                        }\n                        this.activateChildRoutes(futureNode, null, context.children);\n                    }\n                }\n                else {\n                    // if we have a componentless route, we recurse but keep the same outlet map.\n                    this.activateChildRoutes(futureNode, null, parentContexts);\n                }\n            }\n        };\n        return ActivateRoutes;\n    }());\n    function advanceActivatedRouteNodeAndItsChildren(node) {\n        advanceActivatedRoute(node.value);\n        node.children.forEach(advanceActivatedRouteNodeAndItsChildren);\n    }\n    function parentLoadedConfig(snapshot) {\n        for (var s = snapshot.parent; s; s = s.parent) {\n            var route = s.routeConfig;\n            if (route && route._loadedConfig)\n                return route._loadedConfig;\n            if (route && route.component)\n                return null;\n        }\n        return null;\n    }\n    function validateCommands(commands) {\n        for (var i = 0; i < commands.length; i++) {\n            var cmd = commands[i];\n            if (cmd == null) {\n                throw new Error(\"The requested path contains \" + cmd + \" segment at index \" + i);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Lets you link to specific routes in your app.\n     *\n     * Consider the following route configuration:\n     * `[{ path: 'user/:name', component: UserCmp }]`.\n     * When linking to this `user/:name` route, you use the `RouterLink` directive.\n     *\n     * If the link is static, you can use the directive as follows:\n     * `<a routerLink=\"/user/bob\">link to user component</a>`\n     *\n     * If you use dynamic values to generate the link, you can pass an array of path\n     * segments, followed by the params for each segment.\n     *\n     * For instance `['/team', teamId, 'user', userName, {details: true}]`\n     * means that we want to generate a link to `/team/11/user/bob;details=true`.\n     *\n     * Multiple static segments can be merged into one\n     * (e.g., `['/team/11/user', userName, {details: true}]`).\n     *\n     * The first segment name can be prepended with `/`, `./`, or `../`:\n     * * If the first segment begins with `/`, the router will look up the route from the root of the\n     *   app.\n     * * If the first segment begins with `./`, or doesn't begin with a slash, the router will\n     *   instead look in the children of the current activated route.\n     * * And if the first segment begins with `../`, the router will go up one level.\n     *\n     * You can set query params and fragment as follows:\n     *\n     * ```\n     * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" fragment=\"education\">\n     *   link to user component\n     * </a>\n     * ```\n     * RouterLink will use these to generate this link: `/user/bob#education?debug=true`.\n     *\n     * (Deprecated in v4.0.0 use `queryParamsHandling` instead) You can also tell the\n     * directive to preserve the current query params and fragment:\n     *\n     * ```\n     * <a [routerLink]=\"['/user/bob']\" preserveQueryParams preserveFragment>\n     *   link to user component\n     * </a>\n     * ```\n     *\n     * You can tell the directive to how to handle queryParams, available options are:\n     *  - `'merge'`: merge the queryParams into the current queryParams\n     *  - `'preserve'`: preserve the current queryParams\n     *  - default/`''`: use the queryParams only\n     *\n     * Same options for {@link NavigationExtras#queryParamsHandling\n     * NavigationExtras#queryParamsHandling}.\n     *\n     * ```\n     * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" queryParamsHandling=\"merge\">\n     *   link to user component\n     * </a>\n     * ```\n     *\n     * The router link directive always treats the provided input as a delta to the current url.\n     *\n     * For instance, if the current url is `/user/(box//aux:team)`.\n     *\n     * Then the following link `<a [routerLink]=\"['/user/jim']\">Jim</a>` will generate the link\n     * `/user/(jim//aux:team)`.\n     *\n     * See {@link Router#createUrlTree createUrlTree} for more information.\n     *\n     * @ngModule RouterModule\n     *\n     *\n     */\n    var RouterLink = /** @class */ (function () {\n        function RouterLink(router, route, tabIndex, renderer, el) {\n            this.router = router;\n            this.route = route;\n            this.commands = [];\n            if (tabIndex == null) {\n                renderer.setAttribute(el.nativeElement, 'tabindex', '0');\n            }\n        }\n        Object.defineProperty(RouterLink.prototype, \"routerLink\", {\n            set: function (commands) {\n                if (commands != null) {\n                    this.commands = Array.isArray(commands) ? commands : [commands];\n                }\n                else {\n                    this.commands = [];\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(RouterLink.prototype, \"preserveQueryParams\", {\n            /**\n             * @deprecated 4.0.0 use `queryParamsHandling` instead.\n             */\n            set: function (value) {\n                if (i0.isDevMode() && console && console.warn) {\n                    console.warn('preserveQueryParams is deprecated!, use queryParamsHandling instead.');\n                }\n                this.preserve = value;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        RouterLink.prototype.onClick = function () {\n            var extras = {\n                skipLocationChange: attrBoolValue(this.skipLocationChange),\n                replaceUrl: attrBoolValue(this.replaceUrl),\n            };\n            this.router.navigateByUrl(this.urlTree, extras);\n            return true;\n        };\n        Object.defineProperty(RouterLink.prototype, \"urlTree\", {\n            get: function () {\n                return this.router.createUrlTree(this.commands, {\n                    relativeTo: this.route,\n                    queryParams: this.queryParams,\n                    fragment: this.fragment,\n                    preserveQueryParams: attrBoolValue(this.preserve),\n                    queryParamsHandling: this.queryParamsHandling,\n                    preserveFragment: attrBoolValue(this.preserveFragment),\n                });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        RouterLink.ngDirectiveDef = i0.ɵdefineDirective({ type: RouterLink, selectors: [[\"\", \"routerLink\", \"\", 5, \"a\"]], factory: function RouterLink_Factory(t) { return new (t || RouterLink)(i0.ɵdirectiveInject(Router), i0.ɵdirectiveInject(ActivatedRoute), i0.ɵinjectAttribute('tabindex'), i0.ɵinjectRenderer2(), i0.ɵinjectElementRef()); }, hostBindings: function RouterLink_HostBindings(dirIndex, elIndex) { i0.ɵlistener(\"click\", function RouterLink_click_HostBindingHandler($event) { var pd_b = (i0.ɵloadDirective(dirIndex).onClick() !== false); return pd_b; }); }, inputs: { queryParams: \"queryParams\", fragment: \"fragment\", queryParamsHandling: \"queryParamsHandling\", preserveFragment: \"preserveFragment\", skipLocationChange: \"skipLocationChange\", replaceUrl: \"replaceUrl\", routerLink: \"routerLink\", preserveQueryParams: \"preserveQueryParams\" }, features: [i0.ɵPublicFeature] });\n        return RouterLink;\n    }());\n    /**\n     * @description\n     *\n     * Lets you link to specific routes in your app.\n     *\n     * See `RouterLink` for more information.\n     *\n     * @ngModule RouterModule\n     *\n     *\n     */\n    var RouterLinkWithHref = /** @class */ (function () {\n        function RouterLinkWithHref(router, route, locationStrategy) {\n            var _this = this;\n            this.router = router;\n            this.route = route;\n            this.locationStrategy = locationStrategy;\n            this.commands = [];\n            this.subscription = router.events.subscribe(function (s) {\n                if (s instanceof NavigationEnd) {\n                    _this.updateTargetUrlAndHref();\n                }\n            });\n        }\n        Object.defineProperty(RouterLinkWithHref.prototype, \"routerLink\", {\n            set: function (commands) {\n                if (commands != null) {\n                    this.commands = Array.isArray(commands) ? commands : [commands];\n                }\n                else {\n                    this.commands = [];\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(RouterLinkWithHref.prototype, \"preserveQueryParams\", {\n            set: function (value) {\n                if (i0.isDevMode() && console && console.warn) {\n                    console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n                }\n                this.preserve = value;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        RouterLinkWithHref.prototype.ngOnChanges = function (changes) { this.updateTargetUrlAndHref(); };\n        RouterLinkWithHref.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n        RouterLinkWithHref.prototype.onClick = function (button, ctrlKey, metaKey, shiftKey) {\n            if (button !== 0 || ctrlKey || metaKey || shiftKey) {\n                return true;\n            }\n            if (typeof this.target === 'string' && this.target != '_self') {\n                return true;\n            }\n            var extras = {\n                skipLocationChange: attrBoolValue(this.skipLocationChange),\n                replaceUrl: attrBoolValue(this.replaceUrl),\n            };\n            this.router.navigateByUrl(this.urlTree, extras);\n            return false;\n        };\n        RouterLinkWithHref.prototype.updateTargetUrlAndHref = function () {\n            this.href = this.locationStrategy.prepareExternalUrl(this.router.serializeUrl(this.urlTree));\n        };\n        Object.defineProperty(RouterLinkWithHref.prototype, \"urlTree\", {\n            get: function () {\n                return this.router.createUrlTree(this.commands, {\n                    relativeTo: this.route,\n                    queryParams: this.queryParams,\n                    fragment: this.fragment,\n                    preserveQueryParams: attrBoolValue(this.preserve),\n                    queryParamsHandling: this.queryParamsHandling,\n                    preserveFragment: attrBoolValue(this.preserveFragment),\n                });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        RouterLinkWithHref.ngDirectiveDef = i0.ɵdefineDirective({ type: RouterLinkWithHref, selectors: [[\"a\", \"routerLink\", \"\"]], factory: function RouterLinkWithHref_Factory(t) { return new (t || RouterLinkWithHref)(i0.ɵdirectiveInject(Router), i0.ɵdirectiveInject(ActivatedRoute), i0.ɵdirectiveInject(common.LocationStrategy)); }, hostBindings: function RouterLinkWithHref_HostBindings(dirIndex, elIndex) { i0.ɵelementProperty(elIndex, \"attr.target\", i0.ɵbind(i0.ɵloadDirective(dirIndex).target)); i0.ɵelementProperty(elIndex, \"href\", i0.ɵbind(i0.ɵloadDirective(dirIndex).href)); i0.ɵlistener(\"click\", function RouterLinkWithHref_click_HostBindingHandler($event) { var pd_b = (i0.ɵloadDirective(dirIndex).onClick($event.button, $event.ctrlKey, $event.metaKey, $event.shiftKey) !== false); return pd_b; }); }, hostVars: 2, inputs: { target: \"target\", queryParams: \"queryParams\", fragment: \"fragment\", queryParamsHandling: \"queryParamsHandling\", preserveFragment: \"preserveFragment\", skipLocationChange: \"skipLocationChange\", replaceUrl: \"replaceUrl\", routerLink: \"routerLink\", preserveQueryParams: \"preserveQueryParams\" }, features: [i0.ɵPublicFeature, i0.ɵNgOnChangesFeature] });\n        return RouterLinkWithHref;\n    }());\n    function attrBoolValue(s) {\n        return s === '' || !!s;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * @description\n     *\n     * Lets you add a CSS class to an element when the link's route becomes active.\n     *\n     * This directive lets you add a CSS class to an element when the link's route\n     * becomes active.\n     *\n     * Consider the following example:\n     *\n     * ```\n     * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\">Bob</a>\n     * ```\n     *\n     * When the url is either '/user' or '/user/bob', the active-link class will\n     * be added to the `a` tag. If the url changes, the class will be removed.\n     *\n     * You can set more than one class, as follows:\n     *\n     * ```\n     * <a routerLink=\"/user/bob\" routerLinkActive=\"class1 class2\">Bob</a>\n     * <a routerLink=\"/user/bob\" [routerLinkActive]=\"['class1', 'class2']\">Bob</a>\n     * ```\n     *\n     * You can configure RouterLinkActive by passing `exact: true`. This will add the classes\n     * only when the url matches the link exactly.\n     *\n     * ```\n     * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact:\n     * true}\">Bob</a>\n     * ```\n     *\n     * You can assign the RouterLinkActive instance to a template variable and directly check\n     * the `isActive` status.\n     * ```\n     * <a routerLink=\"/user/bob\" routerLinkActive #rla=\"routerLinkActive\">\n     *   Bob {{ rla.isActive ? '(already open)' : ''}}\n     * </a>\n     * ```\n     *\n     * Finally, you can apply the RouterLinkActive directive to an ancestor of a RouterLink.\n     *\n     * ```\n     * <div routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact: true}\">\n     *   <a routerLink=\"/user/jim\">Jim</a>\n     *   <a routerLink=\"/user/bob\">Bob</a>\n     * </div>\n     * ```\n     *\n     * This will set the active-link class on the div tag if the url is either '/user/jim' or\n     * '/user/bob'.\n     *\n     * @ngModule RouterModule\n     *\n     *\n     */\n    var RouterLinkActive = /** @class */ (function () {\n        function RouterLinkActive(router, element, renderer, cdr) {\n            var _this = this;\n            this.router = router;\n            this.element = element;\n            this.renderer = renderer;\n            this.cdr = cdr;\n            this.classes = [];\n            this.isActive = false;\n            this.routerLinkActiveOptions = { exact: false };\n            this.subscription = router.events.subscribe(function (s) {\n                if (s instanceof NavigationEnd) {\n                    _this.update();\n                }\n            });\n        }\n        RouterLinkActive.prototype.ngAfterContentInit = function () {\n            var _this = this;\n            this.links.changes.subscribe(function (_) { return _this.update(); });\n            this.linksWithHrefs.changes.subscribe(function (_) { return _this.update(); });\n            this.update();\n        };\n        Object.defineProperty(RouterLinkActive.prototype, \"routerLinkActive\", {\n            set: function (data) {\n                var classes = Array.isArray(data) ? data : data.split(' ');\n                this.classes = classes.filter(function (c) { return !!c; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        RouterLinkActive.prototype.ngOnChanges = function (changes) { this.update(); };\n        RouterLinkActive.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n        RouterLinkActive.prototype.update = function () {\n            var _this = this;\n            if (!this.links || !this.linksWithHrefs || !this.router.navigated)\n                return;\n            Promise.resolve().then(function () {\n                var hasActiveLinks = _this.hasActiveLinks();\n                if (_this.isActive !== hasActiveLinks) {\n                    _this.isActive = hasActiveLinks;\n                    _this.classes.forEach(function (c) {\n                        if (hasActiveLinks) {\n                            _this.renderer.addClass(_this.element.nativeElement, c);\n                        }\n                        else {\n                            _this.renderer.removeClass(_this.element.nativeElement, c);\n                        }\n                    });\n                }\n            });\n        };\n        RouterLinkActive.prototype.isLinkActive = function (router) {\n            var _this = this;\n            return function (link) {\n                return router.isActive(link.urlTree, _this.routerLinkActiveOptions.exact);\n            };\n        };\n        RouterLinkActive.prototype.hasActiveLinks = function () {\n            return this.links.some(this.isLinkActive(this.router)) ||\n                this.linksWithHrefs.some(this.isLinkActive(this.router));\n        };\n        RouterLinkActive.ngDirectiveDef = i0.ɵdefineDirective({ type: RouterLinkActive, selectors: [[\"\", \"routerLinkActive\", \"\"]], factory: function RouterLinkActive_Factory(t) { return new (t || RouterLinkActive)(i0.ɵdirectiveInject(Router), i0.ɵinjectElementRef(), i0.ɵinjectRenderer2(), i0.ɵinjectChangeDetectorRef()); }, contentQueries: function RouterLinkActive_ContentQueries() { i0.ɵregisterContentQuery(i0.ɵquery(null, RouterLink, true)); i0.ɵregisterContentQuery(i0.ɵquery(null, RouterLinkWithHref, true)); }, contentQueriesRefresh: function RouterLinkActive_ContentQueriesRefresh(dirIndex, queryStartIndex) { var instance = i0.ɵloadDirective(dirIndex); var _t; (i0.ɵqueryRefresh((_t = i0.ɵloadQueryList(queryStartIndex))) && (instance.links = _t)); (i0.ɵqueryRefresh((_t = i0.ɵloadQueryList((queryStartIndex + 1)))) && (instance.linksWithHrefs = _t)); }, inputs: { routerLinkActiveOptions: \"routerLinkActiveOptions\", routerLinkActive: \"routerLinkActive\" }, features: [i0.ɵPublicFeature, i0.ɵNgOnChangesFeature], exportAs: \"routerLinkActive\" });\n        return RouterLinkActive;\n    }());\n\n    /**\n     * @description\n     *\n     * Provides a preloading strategy.\n     *\n     * @experimental\n     */\n    var PreloadingStrategy = /** @class */ (function () {\n        function PreloadingStrategy() {\n        }\n        return PreloadingStrategy;\n    }());\n    /**\n     * @description\n     *\n     * Provides a preloading strategy that preloads all modules as quickly as possible.\n     *\n     * ```\n     * RouteModule.forRoot(ROUTES, {preloadingStrategy: PreloadAllModules})\n     * ```\n     *\n     * @experimental\n     */\n    var PreloadAllModules = /** @class */ (function () {\n        function PreloadAllModules() {\n        }\n        PreloadAllModules.prototype.preload = function (route, fn) {\n            return fn().pipe(operators.catchError(function () { return rxjs.of(null); }));\n        };\n        return PreloadAllModules;\n    }());\n    /**\n     * @description\n     *\n     * Provides a preloading strategy that does not preload any modules.\n     *\n     * This strategy is enabled by default.\n     *\n     * @experimental\n     */\n    var NoPreloading = /** @class */ (function () {\n        function NoPreloading() {\n        }\n        NoPreloading.prototype.preload = function (route, fn) { return rxjs.of(null); };\n        return NoPreloading;\n    }());\n    /**\n     * The preloader optimistically loads all router configurations to\n     * make navigations into lazily-loaded sections of the application faster.\n     *\n     * The preloader runs in the background. When the router bootstraps, the preloader\n     * starts listening to all navigation events. After every such event, the preloader\n     * will check if any configurations can be loaded lazily.\n     *\n     * If a route is protected by `canLoad` guards, the preloaded will not load it.\n     *\n     *\n     */\n    var RouterPreloader = /** @class */ (function () {\n        function RouterPreloader(router, moduleLoader, compiler, injector, preloadingStrategy) {\n            this.router = router;\n            this.injector = injector;\n            this.preloadingStrategy = preloadingStrategy;\n            var onStartLoad = function (r) { return router.triggerEvent(new RouteConfigLoadStart(r)); };\n            var onEndLoad = function (r) { return router.triggerEvent(new RouteConfigLoadEnd(r)); };\n            this.loader = new RouterConfigLoader(moduleLoader, compiler, onStartLoad, onEndLoad);\n        }\n        RouterPreloader.prototype.setUpPreloading = function () {\n            var _this = this;\n            this.subscription =\n                this.router.events\n                    .pipe(operators.filter(function (e) { return e instanceof NavigationEnd; }), operators.concatMap(function () { return _this.preload(); }))\n                    .subscribe(function () { });\n        };\n        RouterPreloader.prototype.preload = function () {\n            var ngModule = this.injector.get(i0.NgModuleRef);\n            return this.processRoutes(ngModule, this.router.config);\n        };\n        // TODO(jasonaden): This class relies on code external to the class to call setUpPreloading. If\n        // this hasn't been done, ngOnDestroy will fail as this.subscription will be undefined. This\n        // should be refactored.\n        RouterPreloader.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n        RouterPreloader.prototype.processRoutes = function (ngModule, routes) {\n            var e_1, _a;\n            var res = [];\n            try {\n                for (var routes_1 = __values(routes), routes_1_1 = routes_1.next(); !routes_1_1.done; routes_1_1 = routes_1.next()) {\n                    var route = routes_1_1.value;\n                    // we already have the config loaded, just recurse\n                    if (route.loadChildren && !route.canLoad && route._loadedConfig) {\n                        var childConfig = route._loadedConfig;\n                        res.push(this.processRoutes(childConfig.module, childConfig.routes));\n                        // no config loaded, fetch the config\n                    }\n                    else if (route.loadChildren && !route.canLoad) {\n                        res.push(this.preloadConfig(ngModule, route));\n                        // recurse into children\n                    }\n                    else if (route.children) {\n                        res.push(this.processRoutes(ngModule, route.children));\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (routes_1_1 && !routes_1_1.done && (_a = routes_1.return)) _a.call(routes_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            return rxjs.from(res).pipe(operators.mergeAll(), operators.map(function (_) { return void 0; }));\n        };\n        RouterPreloader.prototype.preloadConfig = function (ngModule, route) {\n            var _this = this;\n            return this.preloadingStrategy.preload(route, function () {\n                var loaded$ = _this.loader.load(ngModule.injector, route);\n                return loaded$.pipe(operators.mergeMap(function (config) {\n                    route._loadedConfig = config;\n                    return _this.processRoutes(config.module, config.routes);\n                }));\n            });\n        };\n        RouterPreloader.ngInjectableDef = i0.defineInjectable({ token: RouterPreloader, factory: function RouterPreloader_Factory(t) { return new (t || RouterPreloader)(i0.inject(Router), i0.inject(i0.NgModuleFactoryLoader), i0.inject(i0.Compiler), i0.inject(i0.INJECTOR), i0.inject(PreloadingStrategy)); }, providedIn: null });\n        return RouterPreloader;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RouterScroller = /** @class */ (function () {\n        function RouterScroller(router, \n        /** @docsNotRequired */ viewportScroller, options) {\n            if (options === void 0) { options = {}; }\n            this.router = router;\n            this.viewportScroller = viewportScroller;\n            this.options = options;\n            this.lastId = 0;\n            this.lastSource = 'imperative';\n            this.restoredId = 0;\n            this.store = {};\n            // Default both options to 'disabled'\n            options.scrollPositionRestoration = options.scrollPositionRestoration || 'disabled';\n            options.anchorScrolling = options.anchorScrolling || 'disabled';\n        }\n        RouterScroller.prototype.init = function () {\n            // we want to disable the automatic scrolling because having two places\n            // responsible for scrolling results race conditions, especially given\n            // that browser don't implement this behavior consistently\n            if (this.options.scrollPositionRestoration !== 'disabled') {\n                this.viewportScroller.setHistoryScrollRestoration('manual');\n            }\n            this.routerEventsSubscription = this.createScrollEvents();\n            this.scrollEventsSubscription = this.consumeScrollEvents();\n        };\n        RouterScroller.prototype.createScrollEvents = function () {\n            var _this = this;\n            return this.router.events.subscribe(function (e) {\n                if (e instanceof NavigationStart) {\n                    // store the scroll position of the current stable navigations.\n                    _this.store[_this.lastId] = _this.viewportScroller.getScrollPosition();\n                    _this.lastSource = e.navigationTrigger;\n                    _this.restoredId = e.restoredState ? e.restoredState.navigationId : 0;\n                }\n                else if (e instanceof NavigationEnd) {\n                    _this.lastId = e.id;\n                    _this.scheduleScrollEvent(e, _this.router.parseUrl(e.urlAfterRedirects).fragment);\n                }\n            });\n        };\n        RouterScroller.prototype.consumeScrollEvents = function () {\n            var _this = this;\n            return this.router.events.subscribe(function (e) {\n                if (!(e instanceof Scroll))\n                    return;\n                // a popstate event. The pop state event will always ignore anchor scrolling.\n                if (e.position) {\n                    if (_this.options.scrollPositionRestoration === 'top') {\n                        _this.viewportScroller.scrollToPosition([0, 0]);\n                    }\n                    else if (_this.options.scrollPositionRestoration === 'enabled') {\n                        _this.viewportScroller.scrollToPosition(e.position);\n                    }\n                    // imperative navigation \"forward\"\n                }\n                else {\n                    if (e.anchor && _this.options.anchorScrolling === 'enabled') {\n                        _this.viewportScroller.scrollToAnchor(e.anchor);\n                    }\n                    else if (_this.options.scrollPositionRestoration !== 'disabled') {\n                        _this.viewportScroller.scrollToPosition([0, 0]);\n                    }\n                }\n            });\n        };\n        RouterScroller.prototype.scheduleScrollEvent = function (routerEvent, anchor) {\n            this.router.triggerEvent(new Scroll(routerEvent, this.lastSource === 'popstate' ? this.store[this.restoredId] : null, anchor));\n        };\n        RouterScroller.prototype.ngOnDestroy = function () {\n            if (this.routerEventsSubscription) {\n                this.routerEventsSubscription.unsubscribe();\n            }\n            if (this.scrollEventsSubscription) {\n                this.scrollEventsSubscription.unsubscribe();\n            }\n        };\n        return RouterScroller;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Contains a list of directives\n     *\n     *\n     */\n    var ROUTER_DIRECTIVES = [RouterOutlet, RouterLink, RouterLinkWithHref, RouterLinkActive, EmptyOutletComponent];\n    /**\n     * @description\n     *\n     * Is used in DI to configure the router.\n     *\n     *\n     */\n    var ROUTER_CONFIGURATION = new i0.InjectionToken('ROUTER_CONFIGURATION');\n    /**\n     * @docsNotRequired\n     */\n    var ROUTER_FORROOT_GUARD = new i0.InjectionToken('ROUTER_FORROOT_GUARD');\n    var ROUTER_PROVIDERS = [\n        common.Location,\n        { provide: UrlSerializer, useClass: DefaultUrlSerializer },\n        {\n            provide: Router,\n            useFactory: setupRouter,\n            deps: [\n                i0.ApplicationRef, UrlSerializer, ChildrenOutletContexts, common.Location, i0.Injector,\n                i0.NgModuleFactoryLoader, i0.Compiler, ROUTES, ROUTER_CONFIGURATION,\n                [UrlHandlingStrategy, new i0.Optional()], [RouteReuseStrategy, new i0.Optional()]\n            ]\n        },\n        ChildrenOutletContexts,\n        { provide: ActivatedRoute, useFactory: rootRoute, deps: [Router] },\n        { provide: i0.NgModuleFactoryLoader, useClass: i0.SystemJsNgModuleLoader },\n        RouterPreloader,\n        NoPreloading,\n        PreloadAllModules,\n        { provide: ROUTER_CONFIGURATION, useValue: { enableTracing: false } },\n    ];\n    function routerNgProbeToken() {\n        return new i0.NgProbeToken('Router', Router);\n    }\n    /**\n     * @usageNotes\n     *\n     * RouterModule can be imported multiple times: once per lazily-loaded bundle.\n     * Since the router deals with a global shared resource--location, we cannot have\n     * more than one router service active.\n     *\n     * That is why there are two ways to create the module: `RouterModule.forRoot` and\n     * `RouterModule.forChild`.\n     *\n     * * `forRoot` creates a module that contains all the directives, the given routes, and the router\n     *   service itself.\n     * * `forChild` creates a module that contains all the directives and the given routes, but does not\n     *   include the router service.\n     *\n     * When registered at the root, the module should be used as follows\n     *\n     * ```\n     * @NgModule({\n     *   imports: [RouterModule.forRoot(ROUTES)]\n     * })\n     * class MyNgModule {}\n     * ```\n     *\n     * For submodules and lazy loaded submodules the module should be used as follows:\n     *\n     * ```\n     * @NgModule({\n     *   imports: [RouterModule.forChild(ROUTES)]\n     * })\n     * class MyNgModule {}\n     * ```\n     *\n     * @description\n     *\n     * Adds router directives and providers.\n     *\n     * Managing state transitions is one of the hardest parts of building applications. This is\n     * especially true on the web, where you also need to ensure that the state is reflected in the URL.\n     * In addition, we often want to split applications into multiple bundles and load them on demand.\n     * Doing this transparently is not trivial.\n     *\n     * The Angular router solves these problems. Using the router, you can declaratively specify\n     * application states, manage state transitions while taking care of the URL, and load bundles on\n     * demand.\n     *\n     * [Read this developer guide](https://angular.io/docs/ts/latest/guide/router.html) to get an\n     * overview of how the router should be used.\n     *\n     *\n     */\n    var RouterModule = /** @class */ (function () {\n        // Note: We are injecting the Router so it gets created eagerly...\n        function RouterModule(guard, router) {\n        }\n        /**\n         * Creates a module with all the router providers and directives. It also optionally sets up an\n         * application listener to perform an initial navigation.\n         *\n         * Options (see `ExtraOptions`):\n         * * `enableTracing` makes the router log all its internal events to the console.\n         * * `useHash` enables the location strategy that uses the URL fragment instead of the history\n         * API.\n         * * `initialNavigation` disables the initial navigation.\n         * * `errorHandler` provides a custom error handler.\n         * * `preloadingStrategy` configures a preloading strategy (see `PreloadAllModules`).\n         * * `onSameUrlNavigation` configures how the router handles navigation to the current URL. See\n         * `ExtraOptions` for more details.\n         * * `paramsInheritanceStrategy` defines how the router merges params, data and resolved data\n         * from parent to child routes.\n         */\n        RouterModule.forRoot = function (routes, config) {\n            return {\n                ngModule: RouterModule,\n                providers: [\n                    ROUTER_PROVIDERS,\n                    provideRoutes(routes),\n                    {\n                        provide: ROUTER_FORROOT_GUARD,\n                        useFactory: provideForRootGuard,\n                        deps: [[Router, new i0.Optional(), new i0.SkipSelf()]]\n                    },\n                    { provide: ROUTER_CONFIGURATION, useValue: config ? config : {} },\n                    {\n                        provide: common.LocationStrategy,\n                        useFactory: provideLocationStrategy,\n                        deps: [\n                            common.PlatformLocation, [new i0.Inject(common.APP_BASE_HREF), new i0.Optional()], ROUTER_CONFIGURATION\n                        ]\n                    },\n                    {\n                        provide: RouterScroller,\n                        useFactory: createRouterScroller,\n                        deps: [Router, common.ViewportScroller, ROUTER_CONFIGURATION]\n                    },\n                    {\n                        provide: PreloadingStrategy,\n                        useExisting: config && config.preloadingStrategy ? config.preloadingStrategy :\n                            NoPreloading\n                    },\n                    { provide: i0.NgProbeToken, multi: true, useFactory: routerNgProbeToken },\n                    provideRouterInitializer(),\n                ],\n            };\n        };\n        /**\n         * Creates a module with all the router directives and a provider registering routes.\n         */\n        RouterModule.forChild = function (routes) {\n            return { ngModule: RouterModule, providers: [provideRoutes(routes)] };\n        };\n        RouterModule.ngModuleDef = i0.ɵdefineNgModule({ type: RouterModule, bootstrap: [], declarations: [RouterOutlet, RouterLink, RouterLinkWithHref, RouterLinkActive, EmptyOutletComponent], imports: [], exports: [RouterOutlet, RouterLink, RouterLinkWithHref, RouterLinkActive, EmptyOutletComponent] });\n        RouterModule.ngInjectorDef = i0.defineInjector({ factory: function RouterModule_Factory(t) { return new (t || RouterModule)(i0.inject(ROUTER_FORROOT_GUARD, 8), i0.inject(Router, 8)); }, providers: [], imports: [ROUTER_DIRECTIVES] });\n        return RouterModule;\n    }());\n    function createRouterScroller(router, viewportScroller, config) {\n        if (config.scrollOffset) {\n            viewportScroller.setOffset(config.scrollOffset);\n        }\n        return new RouterScroller(router, viewportScroller, config);\n    }\n    function provideLocationStrategy(platformLocationStrategy, baseHref, options) {\n        if (options === void 0) { options = {}; }\n        return options.useHash ? new common.HashLocationStrategy(platformLocationStrategy, baseHref) :\n            new common.PathLocationStrategy(platformLocationStrategy, baseHref);\n    }\n    function provideForRootGuard(router) {\n        if (router) {\n            throw new Error(\"RouterModule.forRoot() called twice. Lazy loaded modules should use RouterModule.forChild() instead.\");\n        }\n        return 'guarded';\n    }\n    /**\n     * @description\n     *\n     * Registers routes.\n     *\n     * ### Example\n     *\n     * ```\n     * @NgModule({\n     *   imports: [RouterModule.forChild(ROUTES)],\n     *   providers: [provideRoutes(EXTRA_ROUTES)]\n     * })\n     * class MyNgModule {}\n     * ```\n     *\n     *\n     */\n    function provideRoutes(routes) {\n        return [\n            { provide: i0.ANALYZE_FOR_ENTRY_COMPONENTS, multi: true, useValue: routes },\n            { provide: ROUTES, multi: true, useValue: routes },\n        ];\n    }\n    function setupRouter(ref, urlSerializer, contexts, location, injector, loader, compiler, config, opts, urlHandlingStrategy, routeReuseStrategy) {\n        if (opts === void 0) { opts = {}; }\n        var router = new Router(null, urlSerializer, contexts, location, injector, loader, compiler, flatten(config));\n        if (urlHandlingStrategy) {\n            router.urlHandlingStrategy = urlHandlingStrategy;\n        }\n        if (routeReuseStrategy) {\n            router.routeReuseStrategy = routeReuseStrategy;\n        }\n        if (opts.errorHandler) {\n            router.errorHandler = opts.errorHandler;\n        }\n        if (opts.malformedUriErrorHandler) {\n            router.malformedUriErrorHandler = opts.malformedUriErrorHandler;\n        }\n        if (opts.enableTracing) {\n            var dom_1 = platformBrowser.ɵgetDOM();\n            router.events.subscribe(function (e) {\n                dom_1.logGroup(\"Router Event: \" + e.constructor.name);\n                dom_1.log(e.toString());\n                dom_1.log(e);\n                dom_1.logGroupEnd();\n            });\n        }\n        if (opts.onSameUrlNavigation) {\n            router.onSameUrlNavigation = opts.onSameUrlNavigation;\n        }\n        if (opts.paramsInheritanceStrategy) {\n            router.paramsInheritanceStrategy = opts.paramsInheritanceStrategy;\n        }\n        if (opts.urlUpdateStrategy) {\n            router.urlUpdateStrategy = opts.urlUpdateStrategy;\n        }\n        if (opts.relativeLinkResolution) {\n            router.relativeLinkResolution = opts.relativeLinkResolution;\n        }\n        return router;\n    }\n    function rootRoute(router) {\n        return router.routerState.root;\n    }\n    /**\n     * To initialize the router properly we need to do in two steps:\n     *\n     * We need to start the navigation in a APP_INITIALIZER to block the bootstrap if\n     * a resolver or a guards executes asynchronously. Second, we need to actually run\n     * activation in a BOOTSTRAP_LISTENER. We utilize the afterPreactivation\n     * hook provided by the router to do that.\n     *\n     * The router navigation starts, reaches the point when preactivation is done, and then\n     * pauses. It waits for the hook to be resolved. We then resolve it only in a bootstrap listener.\n     */\n    var RouterInitializer = /** @class */ (function () {\n        function RouterInitializer(injector) {\n            this.injector = injector;\n            this.initNavigation = false;\n            this.resultOfPreactivationDone = new rxjs.Subject();\n        }\n        RouterInitializer.prototype.appInitializer = function () {\n            var _this = this;\n            var p = this.injector.get(common.LOCATION_INITIALIZED, Promise.resolve(null));\n            return p.then(function () {\n                var resolve = null;\n                var res = new Promise(function (r) { return resolve = r; });\n                var router = _this.injector.get(Router);\n                var opts = _this.injector.get(ROUTER_CONFIGURATION);\n                if (_this.isLegacyDisabled(opts) || _this.isLegacyEnabled(opts)) {\n                    resolve(true);\n                }\n                else if (opts.initialNavigation === 'disabled') {\n                    router.setUpLocationChangeListener();\n                    resolve(true);\n                }\n                else if (opts.initialNavigation === 'enabled') {\n                    router.hooks.afterPreactivation = function () {\n                        // only the initial navigation should be delayed\n                        if (!_this.initNavigation) {\n                            _this.initNavigation = true;\n                            resolve(true);\n                            return _this.resultOfPreactivationDone;\n                            // subsequent navigations should not be delayed\n                        }\n                        else {\n                            return rxjs.of(null);\n                        }\n                    };\n                    router.initialNavigation();\n                }\n                else {\n                    throw new Error(\"Invalid initialNavigation options: '\" + opts.initialNavigation + \"'\");\n                }\n                return res;\n            });\n        };\n        RouterInitializer.prototype.bootstrapListener = function (bootstrappedComponentRef) {\n            var opts = this.injector.get(ROUTER_CONFIGURATION);\n            var preloader = this.injector.get(RouterPreloader);\n            var routerScroller = this.injector.get(RouterScroller);\n            var router = this.injector.get(Router);\n            var ref = this.injector.get(i0.ApplicationRef);\n            if (bootstrappedComponentRef !== ref.components[0]) {\n                return;\n            }\n            if (this.isLegacyEnabled(opts)) {\n                router.initialNavigation();\n            }\n            else if (this.isLegacyDisabled(opts)) {\n                router.setUpLocationChangeListener();\n            }\n            preloader.setUpPreloading();\n            routerScroller.init();\n            router.resetRootComponentType(ref.componentTypes[0]);\n            this.resultOfPreactivationDone.next(null);\n            this.resultOfPreactivationDone.complete();\n        };\n        RouterInitializer.prototype.isLegacyEnabled = function (opts) {\n            return opts.initialNavigation === 'legacy_enabled' || opts.initialNavigation === true ||\n                opts.initialNavigation === undefined;\n        };\n        RouterInitializer.prototype.isLegacyDisabled = function (opts) {\n            return opts.initialNavigation === 'legacy_disabled' || opts.initialNavigation === false;\n        };\n        RouterInitializer.ngInjectableDef = i0.defineInjectable({ token: RouterInitializer, factory: function RouterInitializer_Factory(t) { return new (t || RouterInitializer)(i0.inject(i0.INJECTOR)); }, providedIn: null });\n        return RouterInitializer;\n    }());\n    function getAppInitializer(r) {\n        return r.appInitializer.bind(r);\n    }\n    function getBootstrapListener(r) {\n        return r.bootstrapListener.bind(r);\n    }\n    /**\n     * A token for the router initializer that will be called after the app is bootstrapped.\n     *\n     * @experimental\n     */\n    var ROUTER_INITIALIZER = new i0.InjectionToken('Router Initializer');\n    function provideRouterInitializer() {\n        return [\n            RouterInitializer,\n            {\n                provide: i0.APP_INITIALIZER,\n                multi: true,\n                useFactory: getAppInitializer,\n                deps: [RouterInitializer]\n            },\n            { provide: ROUTER_INITIALIZER, useFactory: getBootstrapListener, deps: [RouterInitializer] },\n            { provide: i0.APP_BOOTSTRAP_LISTENER, multi: true, useExisting: ROUTER_INITIALIZER },\n        ];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var VERSION = new i0.Version('7.0.0-beta.5+54.sha-e8bab13');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.RouterLink = RouterLink;\n    exports.RouterLinkWithHref = RouterLinkWithHref;\n    exports.RouterLinkActive = RouterLinkActive;\n    exports.RouterOutlet = RouterOutlet;\n    exports.ActivationEnd = ActivationEnd;\n    exports.ActivationStart = ActivationStart;\n    exports.ChildActivationEnd = ChildActivationEnd;\n    exports.ChildActivationStart = ChildActivationStart;\n    exports.GuardsCheckEnd = GuardsCheckEnd;\n    exports.GuardsCheckStart = GuardsCheckStart;\n    exports.NavigationCancel = NavigationCancel;\n    exports.NavigationEnd = NavigationEnd;\n    exports.NavigationError = NavigationError;\n    exports.NavigationStart = NavigationStart;\n    exports.ResolveEnd = ResolveEnd;\n    exports.ResolveStart = ResolveStart;\n    exports.RouteConfigLoadEnd = RouteConfigLoadEnd;\n    exports.RouteConfigLoadStart = RouteConfigLoadStart;\n    exports.RouterEvent = RouterEvent;\n    exports.RoutesRecognized = RoutesRecognized;\n    exports.Scroll = Scroll;\n    exports.RouteReuseStrategy = RouteReuseStrategy;\n    exports.Router = Router;\n    exports.ROUTES = ROUTES;\n    exports.ROUTER_CONFIGURATION = ROUTER_CONFIGURATION;\n    exports.ROUTER_INITIALIZER = ROUTER_INITIALIZER;\n    exports.RouterModule = RouterModule;\n    exports.provideRoutes = provideRoutes;\n    exports.ChildrenOutletContexts = ChildrenOutletContexts;\n    exports.OutletContext = OutletContext;\n    exports.NoPreloading = NoPreloading;\n    exports.PreloadAllModules = PreloadAllModules;\n    exports.PreloadingStrategy = PreloadingStrategy;\n    exports.RouterPreloader = RouterPreloader;\n    exports.ActivatedRoute = ActivatedRoute;\n    exports.ActivatedRouteSnapshot = ActivatedRouteSnapshot;\n    exports.RouterState = RouterState;\n    exports.RouterStateSnapshot = RouterStateSnapshot;\n    exports.PRIMARY_OUTLET = PRIMARY_OUTLET;\n    exports.convertToParamMap = convertToParamMap;\n    exports.UrlHandlingStrategy = UrlHandlingStrategy;\n    exports.DefaultUrlSerializer = DefaultUrlSerializer;\n    exports.UrlSegment = UrlSegment;\n    exports.UrlSegmentGroup = UrlSegmentGroup;\n    exports.UrlSerializer = UrlSerializer;\n    exports.UrlTree = UrlTree;\n    exports.VERSION = VERSION;\n    exports.ɵEmptyOutletComponent = EmptyOutletComponent;\n    exports.ɵROUTER_PROVIDERS = ROUTER_PROVIDERS;\n    exports.ɵflatten = flatten;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=router.umd.js.map\n"]}