{"version":3,"sources":["router.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","router","common","core","Rx","Observable","prototype","platformBrowser","this","_angular_common","_angular_core","rxjs_BehaviorSubject","rxjs_Subject","rxjs_observable_of","rxjs_operator_concatMap","rxjs_operator_map","rxjs_operator_mergeMap","rxjs_Observable","rxjs_observable_from","rxjs_operator_catch","rxjs_operator_concatAll","rxjs_operator_first","rxjs_util_EmptyError","rxjs_observable_fromPromise","rxjs_operator_every","rxjs_operator_last","rxjs_operator_mergeAll","rxjs_operator_reduce","_angular_platformBrowser","rxjs_operator_filter","__extends","d","b","__","constructor","extendStatics","Object","create","convertToParamMap","params","ParamsAsMap","navigationCancelingError","message","error","Error","NAVIGATION_CANCELING_ERROR","isNavigationCancelingError","defaultUrlMatcher","segments","segmentGroup","route","parts","split","length","pathMatch","hasChildren","posParams","index","part","segment","startsWith","substring","path","consumed","slice","validateConfig","config","parentPath","i","validateNode","getFullPath","fullPath","Array","isArray","component","outlet","PRIMARY_OUTLET","redirectTo","children","loadChildren","matcher","charAt","currentRoute","copyConfig","r","map","__assign","shallowEqualArrays","a","shallowEqual","k1","keys","k2","key","flatten","arr","concat","apply","last$1","forEach","map$$1","callback","prop","hasOwnProperty","waitForMap","obj","fn","of","waitHead","waitTail","res","k","mapped","call","push","concat$","concatAll","last$","last","andObservables","observables","merged$","mergeAll","every","result","wrapIntoObservable","value","ɵisObservable","ɵisPromise","fromPromise","Promise","resolve","createEmptyUrlTree","UrlTree","UrlSegmentGroup","containsTree","container","containee","exact","equalQueryParams","queryParams","equalSegmentGroups","root","containsQueryParams","containsSegmentGroup","equalPath","numberOfChildren","c","containsSegmentGroupHelper","containeePaths","current","next","equalSegments","as","bs","parameters","mapChildrenIntoArray","child","childOutlet","serializePaths","p","serializePath","join","serializeSegment","primary","children_1","v","encode","s","encodeURIComponent","replace","decode","decodeURIComponent","serializeParams","serializeQueryParams","strParams","name","matchSegments","str","match","SEGMENT_RE","matchQueryParams","QUERY_PARAM_RE","matchUrlQueryParamValue","QUERY_PARAM_VALUE_RE","noMatch","obs","NoMatch","absoluteRedirect","newTree","AbsoluteRedirect","namedOutletsRedirect","canLoadFails","applyRedirects","moduleInjector","configLoader","urlSerializer","urlTree","ApplyRedirects","runCanLoadGuard","canLoad","from","injectionToken","guard","get","matched","consumedSegments","lastChild","positionalParamSegments","slicedSegments","containsEmptyPathRedirectsWithNamedOutlets","createChildrenForEmptySegments","mergeTrivialChildren","containsEmptyPathRedirects","addEmptySegmentsToChildrenIfNeeded","routes","_i","routes_1","isEmptyPathRedirect","getOutlet","primarySegmentGroup","routes_2","some","undefined","findNode","node","_a","node_1","findPath","unshift","nodeChildrenAsMap","createEmptyState","rootComponent","snapshot","createEmptyStateSnapshot","emptyUrl","BehaviorSubject","UrlSegment","emptyParams","emptyData","emptyQueryParams","fragment","activated","ActivatedRoute","RouterState","TreeNode","ActivatedRouteSnapshot","RouterStateSnapshot","inheritedParamsDataResolve","paramsInheritanceStrategy","pathFromRoot","inheritingStartingFrom","parent_1","routeConfig","flattenInherited","reduce","curr","data","_resolvedData","setRouterState","state","_routerState","serializeNode","advanceActivatedRoute","currentSnapshot","nextSnapshot","_futureSnapshot","url","equalParamsAndUrlSegments","equalUrlParams","parentsMismatch","parent","createRouterState","routeReuseStrategy","prevState","createNode","_root","shouldReuseRoute","createOrReuseChildren","retrieve","tree","setFutureSnapshotsOfActivatedRoutes","createActivatedRoute","createUrlTree","commands","nav","computeNavigation","toRoot","startingPosition","findStartingPosition","processChildren","updateSegmentGroupChildren","updateSegmentGroup","isMatrixParams","command","outlets","segmentPath","oldSegmentGroup","newSegmentGroup","qp","replaceSegment","oldSegment","newSegment","outletName","Navigation","numberOfDoubleDots","isAbsolute","cmd","cmdIdx","outlets_1","urlPart","partIndex","Position","_lastPathIndex","_urlSegment","modifier","createPositionApplyingDoubleDots","group","g","ci","dd","getPath","getOutlets","_b","startIndex","m","prefixedWith","slicedCommands","commandIndex","pathIndex","createNewSegmentGroup","outlets_2","currentCommandIndex","currentPathIndex","compare","paths","createNewSegmentChildren","stringify","closestLoadedConfig","_loadedConfig","recognize","rootComponentType","Recognizer","sortActivatedRouteSnapshots","nodes","sort","localeCompare","getChildConfig","match$1","NoMatch$1","checkOutletNameUniqueness","names","n","routeWithSameOutletName","toString","getSourceSegmentGroup","_sourceSegment","getPathIndexShift","_segmentIndexShift","split$1","containsEmptyPathMatchesWithNamedOutlets","s_1","createChildrenForEmptyPaths","containsEmptyPathMatches","s_2","addEmptyPathsToChildrenIfNeeded","emptyPathMatch","getOutlet$1","primarySegment","getData","getResolve","defaultErrorHandler","defaultRouterHook","advanceActivatedRouteNodeAndItsChildren","parentLoadedConfig","validateCommands","attrBoolValue","routerNgProbeToken","NgProbeToken","Router","provideLocationStrategy","platformLocationStrategy","baseHref","options","useHash","HashLocationStrategy","PathLocationStrategy","provideForRootGuard","provideRoutes","provide","ANALYZE_FOR_ENTRY_COMPONENTS","multi","useValue","ROUTES","setupRouter","ref","contexts","location","injector","loader","compiler","opts","urlHandlingStrategy","errorHandler","enableTracing","dom_1","ɵgetDOM","events","subscribe","e","logGroup","log","logGroupEnd","onSameUrlNavigation","rootRoute","routerState","getAppInitializer","appInitializer","bind","getBootstrapListener","bootstrapListener","provideRouterInitializer","RouterInitializer","APP_INITIALIZER","useFactory","deps","ROUTER_INITIALIZER","APP_BOOTSTRAP_LISTENER","useExisting","setPrototypeOf","__proto__","assign","t","arguments","RouterEvent","id","NavigationStart","_super","NavigationEnd","urlAfterRedirects","_this","NavigationCancel","reason","NavigationError","RoutesRecognized","GuardsCheckStart","GuardsCheckEnd","shouldActivate","ResolveStart","ResolveEnd","RouteConfigLoadStart","RouteConfigLoadEnd","ChildActivationStart","ChildActivationEnd","ActivationStart","ActivationEnd","has","getAll","defineProperty","enumerable","configurable","LoadedRouterConfig","_queryParamMap","DEFAULT_SERIALIZER","serialize","_parameterMap","UrlSerializer","DefaultUrlSerializer","parse","UrlParser","parseRootSegment","parseQueryParams","parseFragment","encodeURI","remaining","consumeOptional","peekStartsWith","parseChildren","parseQueryParam","decodeURI","parseSegment","capture","parseParens","parseMatrixParams","parseParam","valueMatch","decodedKey","decodedVal","currentVal","allowPrimary","indexOf","substr","allowRedirects","ngModule","NgModuleRef","expanded$","expandSegmentGroup","urlTrees$","rootSegmentGroup","_catch","noMatchError","mapped$","rootCandidate","expandChildren","expandSegment","routes$","processedRoutes$","expandSegmentAgainstRoute","concattedProcessedRoutes$","first$","first","_","EmptyError","noLeftoversInUrl","matchSegmentAgainstRoute","expandSegmentAgainstRouteUsingRedirect","expandWildCardWithParamsAgainstRouteUsingRedirect","expandRegularSegmentAgainstRouteUsingRedirect","applyRedirectCommands","mergeMap","lineralizeSegments","newSegments","rawSegmentGroup","load","cfg","rawSlicedSegments","childConfig$","routerConfig","childModule","childConfig","expanded$_1","cs","shouldLoad","applyRedirectCreatreUrlTree","newRoot","createSegmentGroup","createQueryParams","redirectToParams","actualParams","sourceName","updatedSegments","createSegments","redirectToSegments","actualSegments","findPosParam","findOrReturn","redirectToUrlSegment","pos","idx","actualSegments_1","splice","Tree","firstChild","siblings","filter","cc","futureSnapshot","_paramMap","urlSegment","lastPathIndex","_resolve","cmdWithOutlet","find","CanActivate","CanDeactivate","PreActivation","future","forwardEvent","canActivateChecks","canDeactivateChecks","initialize","parentContexts","futureRoot","currRoot","setupChildRouteGuards","checkGuards","isDeactivating","isActivating","canDeactivate$","runCanDeactivateChecks","canDeactivate","runCanActivateChecks","resolveData","checks$","runningChecks$","concatMap","check","runResolve","futureNode","currNode","futurePath","prevChildren","setupRouteGuards","deactivateRouteAndItsChildren","getContext","context","shouldRunGuardsAndResolvers","runGuardsAndResolvers","mode","childName","isActivated","runCanDeactivate","fireChildActivationStart","fireActivationStart","runCanActivateChild","runCanActivate","canActivate","observable","getToken","canActivateChildGuards","reverse","extractCanActivateChild","guards","canActivateChild","resolveNode","resolvedData","key_1","getResolver","runningResolvers$","resolver","token","processSegmentGroup","freeze","rootNode","routeState","inheritParamsAndData","routeNode","processSegment","config_1","processSegmentAgainstRoute","rawSegment","RouteReuseStrategy","DefaultRouteReuseStrategy","shouldDetach","store","detachedTree","shouldAttach","InjectionToken","RouterConfigLoader","onLoadStartListener","onLoadEndListener","parentInjector","moduleFactory$","loadModuleFactory","NgModuleFactory","compileModuleAsync","UrlHandlingStrategy","DefaultUrlHandlingStrategy","shouldProcessUrl","extract","merge","newUrlPart","wholeUrl","rootContexts","navigations","navigationId","Subject","navigated","hooks","beforePreactivation","afterPreactivation","onLoadStart","triggerEvent","onLoadEnd","resetConfig","currentUrlTree","rawUrlTree","processNavigations","resetRootComponentType","initialNavigation","setUpLocationChangeListener","navigateByUrl","replaceUrl","locationSubscription","change","source","setTimeout","scheduleNavigation","serializeUrl","ngOnDestroy","dispose","unsubscribe","navigationExtras","relativeTo","preserveQueryParams","queryParamsHandling","preserveFragment","isDevMode","console","warn","f","q","removeEmptyProps","extras","skipLocationChange","parseUrl","mergedTree","navigate","isActive","executeScheduledNavigation","promise","catch","rawUrl","lastNavigation","reject","rej","urlTransition","then","runNavigate","precreatedState","resolvePromise","rejectPromise","urlAndSnapshot$","appliedUrl","redirectsApplied$","preActivation","beforePreactivationDone$","preactivationSetup$","evt","preactivationCheckGuards$","preactivationResolveData$","preactivationDone$","routerState$","activateRoutes","storedState","storedUrl","navigationIsSuccessful","isCurrentPathEqualTo","replaceState","go","ActivateRoutes","activate","resetUrlToCurrentUrlTree","resetStateAndUrl","ee","futureState","currState","deactivateChildRoutes","activateChildRoutes","futureChild","childOutletName","deactivateRoutes","parentContext","detachAndStoreRouteSubtree","deactivateRouteAndOutlet","componentRef","detach","onOutletDeactivated","contexts_1","deactivate","getOrCreateContext","stored","onOutletReAttached","attachRef","attach","cmpFactoryResolver","componentFactoryResolver","activateWith","RouterLink","tabIndex","renderer","el","setAttribute","nativeElement","set","preserve","onClick","decorators","type","Directive","args","selector","ctorParameters","Attribute","Renderer2","ElementRef","propDecorators","Input","routerLink","HostListener","RouterLinkWithHref","locationStrategy","subscription","updateTargetUrlAndHref","ngOnChanges","changes","button","ctrlKey","metaKey","shiftKey","target","href","prepareExternalUrl","LocationStrategy","HostBinding","RouterLinkActive","element","cdr","classes","routerLinkActiveOptions","update","ngAfterContentInit","links","linksWithHrefs","hasActiveLinks","addClass","removeClass","isLinkActive","link","exportAs","ChangeDetectorRef","ContentChildren","descendants","routerLinkActive","OutletContext","ChildrenOutletContexts","Map","onChildOutletCreated","onChildOutletDestroyed","RouterOutlet","changeDetector","_activatedRoute","activateEvents","EventEmitter","deactivateEvents","ngOnInit","instance","cmp","activatedRoute","insert","hostView","destroy","emit","resolveComponentFactory","childContexts","OutletInjector","createComponent","markForCheck","ViewContainerRef","ComponentFactoryResolver","Output","notFoundValue","PreloadingStrategy","PreloadAllModules","preload","NoPreloading","RouterPreloader","moduleLoader","preloadingStrategy","onStartLoad","onEndLoad","setUpPreloading","navigations$","processRoutes","preloadConfig","loaded$","Injectable","NgModuleFactoryLoader","Compiler","Injector","ROUTER_DIRECTIVES","ROUTER_CONFIGURATION","ROUTER_FORROOT_GUARD","ROUTER_PROVIDERS","Location","useClass","ApplicationRef","Optional","SystemJsNgModuleLoader","RouterModule","forRoot","providers","SkipSelf","PlatformLocation","Inject","APP_BASE_HREF","forChild","NgModule","declarations","initNavigation","resultOfPreactivationDone","LOCATION_INITIALIZED","isLegacyDisabled","isLegacyEnabled","bootstrappedComponentRef","preloader","components","componentTypes","complete","VERSION","Version","ɵROUTER_PROVIDERS","ɵflatten","ɵa","ɵg","ɵh","ɵi","ɵd","ɵc","ɵj","ɵf","ɵb","ɵe","ɵk","ɵl"],"mappings":";;;;;CAKC,SAAUA,OAAQC,SACC,gBAAZC,UAA0C,mBAAXC,QAAyBF,QAAQC,QAASE,QAAQ,mBAAoBA,QAAQ,iBAAkBA,QAAQ,wBAAyBA,QAAQ,gBAAiBA,QAAQ,sBAAuBA,QAAQ,2BAA4BA,QAAQ,qBAAsBA,QAAQ,0BAA2BA,QAAQ,mBAAoBA,QAAQ,wBAAyBA,QAAQ,uBAAwBA,QAAQ,2BAA4BA,QAAQ,uBAAwBA,QAAQ,wBAAyBA,QAAQ,+BAAgCA,QAAQ,uBAAwBA,QAAQ,sBAAuBA,QAAQ,0BAA2BA,QAAQ,wBAAyBA,QAAQ,6BAA8BA,QAAQ,yBAC7sB,kBAAXC,SAAyBA,OAAOC,IAAMD,OAAO,mBAAoB,UAAW,kBAAmB,gBAAiB,uBAAwB,eAAgB,qBAAsB,0BAA2B,oBAAqB,yBAA0B,kBAAmB,uBAAwB,sBAAuB,0BAA2B,sBAAuB,uBAAwB,8BAA+B,sBAAuB,qBAAsB,yBAA0B,uBAAwB,4BAA6B,wBAAyBJ,SAC9jBA,SAASD,OAAOO,GAAKP,OAAOO,OAAUP,OAAOO,GAAGC,WAAaR,OAAOO,GAAGE,OAAOT,OAAOO,GAAGG,KAAKV,OAAOW,GAAGX,OAAOW,GAAGX,OAAOW,GAAGC,WAAWZ,OAAOW,GAAGC,WAAWC,UAAUb,OAAOW,GAAGC,WAAWC,UAAUb,OAAOW,GAAGC,WAAWC,UAAUb,OAAOW,GAAGX,OAAOW,GAAGC,WAAWZ,OAAOW,GAAGC,WAAWC,UAAUb,OAAOW,GAAGC,WAAWC,UAAUb,OAAOW,GAAGC,WAAWC,UAAUb,OAAOW,GAAGX,OAAOW,GAAGC,WAAWZ,OAAOW,GAAGC,WAAWC,UAAUb,OAAOW,GAAGC,WAAWC,UAAUb,OAAOW,GAAGC,WAAWC,UAAUb,OAAOW,GAAGC,WAAWC,UAAUb,OAAOO,GAAGO,gBAAgBd,OAAOW,GAAGC,WAAWC,YACziBE,KAAM,SAAWb,QAAQc,gBAAgBC,cAAcC,qBAAqBC,aAAaC,mBAAmBC,wBAAwBC,kBAAkBC,uBAAuBC,gBAAgBC,qBAAqBC,oBAAoBC,wBAAwBC,oBAAoBC,qBAAqBC,4BAA4BC,oBAAoBC,mBAAmBC,uBAAuBC,qBAAqBC,yBAAyBC,sBAAwB,YAsBzc,SAASC,WAAUC,EAAGC,GAElB,QAASC,MAAOzB,KAAK0B,YAAcH,EADnCI,cAAcJ,EAAGC,GAEjBD,EAAEzB,UAAkB,OAAN0B,EAAaI,OAAOC,OAAOL,IAAMC,GAAG3B,UAAY0B,EAAE1B,UAAW,GAAI2B,KA8gBnF,QAASK,mBAAkBC,QACvB,MAAO,IAAIC,aAAYD,QAO3B,QAASE,0BAAyBC,SAC9B,GAAqBC,OAAQC,MAAM,6BAA+BF,QAElE,OADA,OAA2BG,6BAA8B,EAClDF,MAMX,QAASG,4BAA2BH,OAChC,MAAOA,QAAS,MAA2BE,4BAQ/C,QAASE,mBAAkBC,SAAUC,aAAcC,OAC/C,GAAqBC,OAA2BD,MAAW,KAAEE,MAAM,IACnE,IAAID,MAAME,OAASL,SAASK,OAExB,MAAO,KAEX,IAAwB,SAApBH,MAAMI,YACLL,aAAaM,eAAiBJ,MAAME,OAASL,SAASK,QAEvD,MAAO,KAIX,KAAK,GAFgBG,cAEKC,MAAQ,EAAGA,MAAQN,MAAME,OAAQI,QAAS,CAChE,GAAqBC,MAAOP,MAAMM,OACbE,QAAUX,SAASS,MAExC,IADmCC,KAAKE,WAAW,KAE/CJ,UAAUE,KAAKG,UAAU,IAAMF,YAE9B,IAAID,OAASC,QAAQG,KAEtB,MAAO,MAGf,OAASC,SAAUf,SAASgB,MAAM,EAAGb,MAAME,QAASG,UAAWA,WAgCnE,QAASS,gBAAeC,OAAQC,gBACT,KAAfA,aAAyBA,WAAa,GAE1C,KAAK,GAAqBC,GAAI,EAAGA,EAAIF,OAAOb,OAAQe,IAAK,CACrD,GAAqBlB,OAAQgB,OAAOE,EAEpCC,cAAanB,MADmBoB,YAAYH,WAAYjB,SAShE,QAASmB,cAAanB,MAAOqB,UACzB,IAAKrB,MACD,KAAM,IAAIN,OAAM,2CAA6C2B,SAAW,kWAE5E,IAAIC,MAAMC,QAAQvB,OACd,KAAM,IAAIN,OAAM,mCAAqC2B,SAAW,+BAEpE,KAAKrB,MAAMwB,WAAcxB,MAAMyB,QAAUzB,MAAMyB,SAAWC,eACtD,KAAM,IAAIhC,OAAM,mCAAqC2B,SAAW,0DAEpE,IAAIrB,MAAM2B,YAAc3B,MAAM4B,SAC1B,KAAM,IAAIlC,OAAM,mCAAqC2B,SAAW,qDAEpE,IAAIrB,MAAM2B,YAAc3B,MAAM6B,aAC1B,KAAM,IAAInC,OAAM,mCAAqC2B,SAAW,yDAEpE,IAAIrB,MAAM4B,UAAY5B,MAAM6B,aACxB,KAAM,IAAInC,OAAM,mCAAqC2B,SAAW,uDAEpE,IAAIrB,MAAM2B,YAAc3B,MAAMwB,UAC1B,KAAM,IAAI9B,OAAM,mCAAqC2B,SAAW,sDAEpE,IAAIrB,MAAMY,MAAQZ,MAAM8B,QACpB,KAAM,IAAIpC,OAAM,mCAAqC2B,SAAW,8CAEpE,QAAyB,KAArBrB,MAAM2B,aAA0B3B,MAAMwB,YAAcxB,MAAM4B,WAAa5B,MAAM6B,aAC7E,KAAM,IAAInC,OAAM,mCAAqC2B,SAAW,4FAEpE,QAAmB,KAAfrB,MAAMY,UAAqC,KAAlBZ,MAAM8B,QAC/B,KAAM,IAAIpC,OAAM,mCAAqC2B,SAAW,2DAEpE,IAA0B,gBAAfrB,OAAMY,MAA8C,MAAzBZ,MAAMY,KAAKmB,OAAO,GACpD,KAAM,IAAIrC,OAAM,mCAAqC2B,SAAW,oCAEpE,IAAmB,KAAfrB,MAAMY,UAAoC,KAArBZ,MAAM2B,gBAA6C,KAApB3B,MAAMI,UAAsB,CAEhF,KAAM,IAAIV,OAAM,4CAA8C2B,SAAW,mBAAuBrB,MAAM2B,WAAa,0HAEvH,OAAwB,KAApB3B,MAAMI,WAA4C,SAApBJ,MAAMI,WAA4C,WAApBJ,MAAMI,UAClE,KAAM,IAAIV,OAAM,mCAAqC2B,SAAW,qDAEhErB,OAAM4B,UACNb,eAAef,MAAM4B,SAAUP,UAQvC,QAASD,aAAYH,WAAYe,cAC7B,MAAKA,cAGAf,YAAee,aAAapB,KAGxBK,aAAee,aAAapB,KAC1BK,WAAa,KAEdA,YAAce,aAAapB,KAC1BoB,aAAapB,KAGbK,WAAa,IAAMe,aAAapB,KAThC,GAHAK,WAmBf,QAASgB,YAAWC,GAChB,GAAqBN,UAAWM,EAAEN,UAAYM,EAAEN,SAASO,IAAIF,WAC7D,OAAOL,UAAWQ,YAAaF,GAAKN,SAAUA,WAAcQ,YAAaF;;;;;;;AAmB7E,QAASG,oBAAmBC,EAAGxD,GAC3B,GAAIwD,EAAEnC,SAAWrB,EAAEqB,OACf,OAAO,CACX,KAAK,GAAqBe,GAAI,EAAGA,EAAIoB,EAAEnC,SAAUe,EAC7C,IAAKqB,aAAaD,EAAEpB,GAAIpC,EAAEoC,IACtB,OAAO,CAEf,QAAO,EAOX,QAASqB,cAAaD,EAAGxD,GACrB,GAAqB0D,IAAKtD,OAAOuD,KAAKH,GACjBI,GAAKxD,OAAOuD,KAAK3D,EACtC,IAAI0D,GAAGrC,QAAUuC,GAAGvC,OAChB,OAAO,CAGX,KAAK,GADgBwC,KACKzB,EAAI,EAAGA,EAAIsB,GAAGrC,OAAQe,IAE5C,GADAyB,IAAMH,GAAGtB,GACLoB,EAAEK,OAAS7D,EAAE6D,KACb,OAAO,CAGf,QAAO,EAQX,QAASC,SAAQC,KACb,MAAOvB,OAAMlE,UAAU0F,OAAOC,SAAUF,KAQ5C,QAASG,QAAOV,GACZ,MAAOA,GAAEnC,OAAS,EAAImC,EAAEA,EAAEnC,OAAS,GAAK,KAc5C,QAAS8C,SAAQC,OAAQC,UACrB,IAAK,GAAqBC,QAAQF,QAC1BA,OAAOG,eAAeD,OACtBD,SAASD,OAAOE,MAAOA,MAUnC,QAASE,YAAWC,IAAKC,IACrB,GAAgC,IAA5BtE,OAAOuD,KAAKc,KAAKpD,OACjB,MAAOxC,oBAAmB8F,MAE9B,IAAqBC,aACAC,YACAC,MACrBX,SAAQM,IAAK,SAAUjB,EAAGuB,GACtB,GAAqBC,QAASjG,kBAAkBsE,IAAI4B,KAAKP,GAAGK,EAAGvB,GAAI,SAAUJ,GAAK,MAAO0B,KAAIC,GAAK3B,GAC9F2B,KAAMnC,eACNgC,SAASM,KAAKF,QAGdH,SAASK,KAAKF,SAGtB,IAAqBG,SAAU/F,wBAAwBgG,UAAUH,KAAKpG,mBAAmB8F,GAAGV,UAAM,GAAQW,SAASZ,OAAOa,YACrGQ,MAAQ5F,mBAAmB6F,KAAKL,KAAKE,QAC1D,OAAOpG,mBAAkBsE,IAAI4B,KAAKI,MAAO,WAAc,MAAOP,OAQlE,QAASS,gBAAeC,aACpB,GAAqBC,SAAU/F,uBAAuBgG,SAAST,KAAKO,YACpE,OAAOhG,qBAAoBmG,MAAMV,KAAKQ,QAAS,SAAUG,QAAU,OAAkB,IAAXA,SAO9E,QAASC,oBAAmBC,OACxB,MAAIpH,eAAcqH,cAAcD,OACrBA,MAEPpH,cAAcsH,WAAWF,OAIlBvG,4BAA4B0G,YAAYC,QAAQC,QAAQL,QAE5DjH,mBAAmB8F,GAAoB;;;;;;;AAiBlD,QAASyB,sBACL,MAAO,IAAIC,SAAQ,GAAIC,2BAA6B,MAQxD,QAASC,cAAaC,UAAWC,UAAWC,OACxC,MAAIA,OACOC,iBAAiBH,UAAUI,YAAaH,UAAUG,cACrDC,mBAAmBL,UAAUM,KAAML,UAAUK,MAE9CC,oBAAoBP,UAAUI,YAAaH,UAAUG,cACxDI,qBAAqBR,UAAUM,KAAML,UAAUK,MAOvD,QAASH,kBAAiBH,UAAWC,WACjC,MAAOhD,cAAa+C,UAAWC,WAOnC,QAASI,oBAAmBL,UAAWC,WACnC,IAAKQ,UAAUT,UAAUxF,SAAUyF,UAAUzF,UACzC,OAAO,CACX,IAAIwF,UAAUU,mBAAqBT,UAAUS,iBACzC,OAAO,CACX,KAAK,GAAqBC,KAAKV,WAAU3D,SAAU,CAC/C,IAAK0D,UAAU1D,SAASqE,GACpB,OAAO,CACX,KAAKN,mBAAmBL,UAAU1D,SAASqE,GAAIV,UAAU3D,SAASqE,IAC9D,OAAO,EAEf,OAAO,EAOX,QAASJ,qBAAoBP,UAAWC,WACpC,MAAOrG,QAAOuD,KAAK8C,WAAWpF,QAAUjB,OAAOuD,KAAK6C,WAAWnF,QAC3DjB,OAAOuD,KAAK8C,WAAWd,MAAM,SAAU9B,KAAO,MAAO4C,WAAU5C,OAAS2C,UAAU3C,OAO1F,QAASmD,sBAAqBR,UAAWC,WACrC,MAAOW,4BAA2BZ,UAAWC,UAAWA,UAAUzF,UAQtE,QAASoG,4BAA2BZ,UAAWC,UAAWY,gBACtD,GAAIb,UAAUxF,SAASK,OAASgG,eAAehG,OAAQ,CACnD,GAAqBiG,SAAUd,UAAUxF,SAASgB,MAAM,EAAGqF,eAAehG,OAC1E,SAAK4F,UAAUK,QAASD,kBAEpBZ,UAAUlF,cAIb,GAAIiF,UAAUxF,SAASK,SAAWgG,eAAehG,OAAQ,CAC1D,IAAK4F,UAAUT,UAAUxF,SAAUqG,gBAC/B,OAAO,CACX,KAAK,GAAqBF,KAAKV,WAAU3D,SAAU,CAC/C,IAAK0D,UAAU1D,SAASqE,GACpB,OAAO,CACX,KAAKH,qBAAqBR,UAAU1D,SAASqE,GAAIV,UAAU3D,SAASqE,IAChE,OAAO,EAEf,OAAO,EAGP,GAAqBG,SAAUD,eAAerF,MAAM,EAAGwE,UAAUxF,SAASK,QACrDkG,KAAOF,eAAerF,MAAMwE,UAAUxF,SAASK,OACpE,SAAK4F,UAAUT,UAAUxF,SAAUsG,aAE9Bd,UAAU1D,SAASF,iBAEjBwE,2BAA2BZ,UAAU1D,SAASF,gBAAiB6D,UAAWc,OA8KzF,QAASC,eAAcC,GAAIC,IACvB,MAAOT,WAAUQ,GAAIC,KAAOD,GAAG9B,MAAM,SAAUnC,EAAGpB,GAAK,MAAOqB,cAAaD,EAAEmE,WAAYD,GAAGtF,GAAGuF,cAOnG,QAASV,WAAUQ,GAAIC,IACnB,MAAID,IAAGpG,SAAWqG,GAAGrG,QAEdoG,GAAG9B,MAAM,SAAUnC,EAAGpB,GAAK,MAAOoB,GAAE1B,OAAS4F,GAAGtF,GAAGN,OAQ9D,QAAS8F,sBAAqBjG,QAAS+C,IACnC,GAAqBI,OAWrB,OAVAX,SAAQxC,QAAQmB,SAAU,SAAU+E,MAAOC,aACnCA,cAAgBlF,iBAChBkC,IAAMA,IAAId,OAAOU,GAAGmD,MAAOC,iBAGnC3D,QAAQxC,QAAQmB,SAAU,SAAU+E,MAAOC,aACnCA,cAAgBlF,iBAChBkC,IAAMA,IAAId,OAAOU,GAAGmD,MAAOC,iBAG5BhD,IA8EX,QAASiD,gBAAepG,SACpB,MAAOA,SAAQX,SAASqC,IAAI,SAAU2E,GAAK,MAAOC,eAAcD,KAAOE,KAAK,KAOhF,QAASC,kBAAiBxG,QAASmF,MAC/B,IAAKnF,QAAQJ,cACT,MAAOwG,gBAAepG,QAE1B,IAAImF,KAAM,CACN,GAAqBsB,SAAUzG,QAAQmB,SAASF,gBAC5CuF,iBAAiBxG,QAAQmB,SAASF,iBAAiB,GACnD,GACiByF,aAMrB,OALAlE,SAAQxC,QAAQmB,SAAU,SAAUwF,EAAGvD,GAC/BA,IAAMnC,gBACNyF,WAAWnD,KAAKH,EAAI,IAAMoD,iBAAiBG,GAAG,MAG/CD,WAAWhH,OAAS,EAAI+G,QAAU,IAAMC,WAAWH,KAAK,MAAQ,IAAME,QAG7E,GAAqBtF,UAAW8E,qBAAqBjG,QAAS,SAAU2G,EAAGvD,GACvE,MAAIA,KAAMnC,gBACEuF,iBAAiBxG,QAAQmB,SAASF,iBAAiB,KAEvDmC,EAAI,IAAMoD,iBAAiBG,GAAG,KAE1C,OAAOP,gBAAepG,SAAW,KAAOmB,SAASoF,KAAK,MAAQ,IAgBtE,QAASK,QAAOC,GACZ,MAAOC,oBAAmBD,GACrBE,QAAQ,OAAQ,KAChBA,QAAQ,QAAS,KACjBA,QAAQ,OAAQ,KAChBA,QAAQ,QAAS,KACjBA,QAAQ,QAAS,KAM1B,QAASC,QAAOH,GACZ,MAAOI,oBAAmBJ,GAM9B,QAASP,eAAcnG,MACnB,MAAO,GAAKyG,OAAOzG,KAAKA,MAAQ+G,gBAAgB/G,KAAK6F,YAMzD,QAASkB,iBAAgBtI,QACrB,MAAOH,QAAOuD,KAAKpD,QAAQ8C,IAAI,SAAUQ,KAAO,MAAO,IAAM0E,OAAO1E,KAAO,IAAM0E,OAAOhI,OAAOsD,QAAUqE,KAAK,IAMlH,QAASY,sBAAqBvI,QAC1B,GAAqBwI,WAAY3I,OAAOuD,KAAKpD,QAAQ8C,IAAI,SAAU2F,MAC/D,GAAqBlD,OAAQvF,OAAOyI,KACpC,OAAOxG,OAAMC,QAAQqD,OAASA,MAAMzC,IAAI,SAAUiF,GAAK,MAAOC,QAAOS,MAAQ,IAAMT,OAAOD,KAAOJ,KAAK,KAClGK,OAAOS,MAAQ,IAAMT,OAAOzC,QAEpC,OAAOiD,WAAU1H,OAAS,IAAM0H,UAAUb,KAAK,KAAO,GAO1D,QAASe,eAAcC,KACnB,GAAqBC,OAAQD,IAAIC,MAAMC,WACvC,OAAOD,OAAQA,MAAM,GAAK,GAO9B,QAASE,kBAAiBH,KACtB,GAAqBC,OAAQD,IAAIC,MAAMG,eACvC,OAAOH,OAAQA,MAAM,GAAK,GAO9B,QAASI,yBAAwBL,KAC7B,GAAqBC,OAAQD,IAAIC,MAAMK,qBACvC,OAAOL,OAAQA,MAAM,GAAK,GA6Q9B,QAASM,SAAQxI,cACb,MAAO,IAAIhC,iBAAgBZ,WAAW,SAAUqL,KAAO,MAAOA,KAAI/I,MAAM,GAAIgJ,SAAQ1I,iBAMxF,QAAS2I,kBAAiBC,SACtB,MAAO,IAAI5K,iBAAgBZ,WAAW,SAAUqL,KAAO,MAAOA,KAAI/I,MAAM,GAAImJ,kBAAiBD,YAMjG,QAASE,sBAAqBlH,YAC1B,MAAO,IAAI5D,iBAAgBZ,WAAW,SAAUqL,KAC5C,MAAOA,KAAI/I,MAAM,GAAIC,OAAM,gEAAkEiC,WAAa,QAOlH,QAASmH,cAAa9I,OAClB,MAAO,IAAIjC,iBAAgBZ,WAAW,SAAUqL,KAC5C,MAAOA,KAAI/I,MAAMF,yBAAyB,gEAAkES,MAAMY,KAAO,yBAcjI,QAASmI,gBAAeC,eAAgBC,aAAcC,cAAeC,QAASnI,QAC1E,MAAO,IAAIoI,gBAAeJ,eAAgBC,aAAcC,cAAeC,QAASnI,QAAQ+B,QAiiB5F,QAASsG,iBAAgBL,eAAgBhJ,OACrC,GAAqBsJ,SAAUtJ,MAAMsJ,OACrC,OAAKA,UAA8B,IAAnBA,QAAQnJ,OAMjBkE,eAJoBxG,kBAAkBsE,IAAI4B,KAAK/F,qBAAqBuL,KAAKD,SAAU,SAAUE,gBAChG,GAAqBC,OAAQT,eAAeU,IAAIF,eAChD,OAAO7E,oBAAmB8E,MAAMH,QAAUG,MAAMH,QAAQtJ,OAASyJ,MAAMzJ,WAHhErC,mBAAmB8F,IAAG,GAarC,QAASwE,OAAMlI,aAAcC,MAAOF,UAChC,GAAmB,KAAfE,MAAMY,KACN,MAAyB,SAApBZ,MAAMI,YAA0BL,aAAaM,eAAiBP,SAASK,OAAS,IACxEwJ,SAAS,EAAOC,oBAAsBC,UAAW,EAAGC,6BAExDH,SAAS,EAAMC,oBAAsBC,UAAW,EAAGC,2BAEhE,IAAqBhI,SAAU9B,MAAM8B,SAAWjC,kBAC3B+D,IAAM9B,QAAQhC,SAAUC,aAAcC,MAC3D,OAAK4D,MASD+F,SAAS,EACTC,iBAAqChG,IAAa,SAClDiG,UAA8BjG,IAAI/C,SAAgB,OAClDiJ,wBAA4ClG,IAAc,YAVtD+F,SAAS,EACTC,oBACAC,UAAW,EACXC,4BAiBZ,QAAS5J,OAAMH,aAAc6J,iBAAkBG,eAAgB/I,QAC3D,GAAI+I,eAAe5J,OAAS,GACxB6J,2CAA2CjK,aAAcgK,eAAgB/I,QAAS,CAClF,GAAqBsG,GAAI,GAAIlC,iBAAgBwE,iBAAkBK,+BAA+BjJ,OAAQ,GAAIoE,iBAAgB2E,eAAgBhK,aAAa6B,WACvJ,QAAS7B,aAAcmK,qBAAqB5C,GAAIyC,mBAEpD,GAA8B,IAA1BA,eAAe5J,QACfgK,2BAA2BpK,aAAcgK,eAAgB/I,QAAS,CAClE,GAAqBsG,GAAI,GAAIlC,iBAAgBrF,aAAaD,SAAUsK,mCAAmCrK,aAAcgK,eAAgB/I,OAAQjB,aAAa6B,UAC1J,QAAS7B,aAAcmK,qBAAqB5C,GAAIyC,eAAgBA,gBAEpE,OAAShK,aAAcA,aAAcgK,eAAgBA,gBAMzD,QAASG,sBAAqB5C,GAC1B,GAA2B,IAAvBA,EAAEtB,kBAA0BsB,EAAE1F,SAASF,gBAAiB,CACxD,GAAqBuE,GAAIqB,EAAE1F,SAASF,eACpC,OAAO,IAAI0D,iBAAgBkC,EAAExH,SAASgD,OAAOmD,EAAEnG,UAAWmG,EAAErE,UAEhE,MAAO0F,GASX,QAAS8C,oCAAmCrK,aAAcgK,eAAgBM,OAAQzI,UAE9E,IAAK,GADgBgC,QACZ0G,GAAK,EAAGC,SAAWF,OAAQC,GAAKC,SAASpK,OAAQmK,KAAM,CAC5D,GAAIpI,GAAIqI,SAASD,GACbE,qBAAoBzK,aAAcgK,eAAgB7H,KAAON,SAAS6I,UAAUvI,MAC5E0B,IAAI6G,UAAUvI,IAAM,GAAIkD,yBAGhC,MAAOhD,aAAaR,SAAUgC,KAOlC,QAASqG,gCAA+BI,OAAQK,qBAC5C,GAAqB9G,OACrBA,KAAIlC,gBAAkBgJ,mBACtB,KAAK,GAAIJ,IAAK,EAAGK,SAAWN,OAAQC,GAAKK,SAASxK,OAAQmK,KAAM,CAC5D,GAAIpI,GAAIyI,SAASL,GACF,MAAXpI,EAAEtB,MAAe6J,UAAUvI,KAAOR,iBAClCkC,IAAI6G,UAAUvI,IAAM,GAAIkD,yBAGhC,MAAOxB,KAQX,QAASoG,4CAA2CjK,aAAcD,SAAUuK,QACxE,MAAOA,QAAOO,KAAK,SAAU1I,GAAK,MAAOsI,qBAAoBzK,aAAcD,SAAUoC,IAAMuI,UAAUvI,KAAOR,iBAQhH,QAASyI,4BAA2BpK,aAAcD,SAAUuK,QACxD,MAAOA,QAAOO,KAAK,SAAU1I,GAAK,MAAOsI,qBAAoBzK,aAAcD,SAAUoC,KAQzF,QAASsI,qBAAoBzK,aAAcD,SAAUoC,GACjD,SAAKnC,aAAaM,eAAiBP,SAASK,OAAS,IAAsB,SAAhB+B,EAAE9B,aAG3C,KAAX8B,EAAEtB,UAAgCiK,KAAjB3I,EAAEP,YAM9B,QAAS8I,WAAUzK,OACf,MAAOA,OAAMyB,QAAUC,eAuH3B,QAASoJ,UAASlG,MAAOmG,MACrB,GAAInG,QAAUmG,KAAKnG,MACf,MAAOmG,KACX,KAAK,GAAIT,IAAK,EAAGU,GAAKD,KAAKnJ,SAAU0I,GAAKU,GAAG7K,OAAQmK,KAAM,CACvD,GAAI3D,OAAQqE,GAAGV,IACMW,OAASH,SAASlG,MAAO+B,MAC9C,IAAIsE,OACA,MAAOA,QAEf,MAAO,MAQX,QAASC,UAAStG,MAAOmG,MACrB,GAAInG,QAAUmG,KAAKnG,MACf,OAAQmG,KACZ,KAAK,GAAIT,IAAK,EAAGU,GAAKD,KAAKnJ,SAAU0I,GAAKU,GAAG7K,OAAQmK,KAAM,CACvD,GAAI3D,OAAQqE,GAAGV,IACM1J,KAAOsK,SAAStG,MAAO+B,MAC5C,IAAI/F,KAAKT,OAEL,MADAS,MAAKuK,QAAQJ,MACNnK,KAGf,SAqBJ,QAASwK,mBAAkBL,MACvB,GAAqB7H,UAIrB,OAHI6H,OACAA,KAAKnJ,SAASqB,QAAQ,SAAU0D,OAAS,MAAOzD,QAAOyD,MAAM/B,MAAMnD,QAAUkF,QAE1EzD,OA+DX,QAASmI,kBAAiBlC,QAASmC,eAC/B,GAAqBC,UAAWC,yBAAyBrC,QAASmC,eAC7CG,SAAW,GAAIhO,sBAAqBiO,iBAAiB,GAAIC,YAAW,SACpEC,YAAc,GAAInO,sBAAqBiO,oBACvCG,UAAY,GAAIpO,sBAAqBiO,oBACrCI,iBAAmB,GAAIrO,sBAAqBiO,oBAC5CK,SAAW,GAAItO,sBAAqBiO,gBAAgB,IACpDM,UAAY,GAAIC,gBAAeR,SAAUG,YAAaE,iBAAkBC,SAAUF,UAAWnK,eAAgB4J,cAAeC,SAAS3F,KAE1J,OADAoG,WAAUT,SAAWA,SAAS3F,KACvB,GAAIsG,aAAY,GAAIC,UAASH,cAAgBT,UAOxD,QAASC,0BAAyBrC,QAASmC,eACvC,GAAqBM,gBACAC,aACAC,oBAEAE,UAAY,GAAII,2BAA2BR,YAAaE,iBAD7C,GACyED,UAAWnK,eAAgB4J,cAAe,KAAMnC,QAAQvD,MAAO,KACxK,OAAO,IAAIyG,qBAAoB,GAAI,GAAIF,UAASH,eA6IpD,QAASM,4BAA2BtM,MAAOuM,+BACL,KAA9BA,4BAAwCA,0BAA4B,YACxE,IAAqBC,cAAexM,MAAMwM,aACrBC,uBAAyB,CAC9C,IAAkC,WAA9BF,0BAEA,IADAE,uBAAyBD,aAAarM,OAAS,EACxCsM,wBAA0B,GAAG,CAChC,GAAqBrG,SAAUoG,aAAaC,wBACvBC,SAAWF,aAAaC,uBAAyB,EAEtE,IAAIrG,QAAQuG,aAA4C,KAA7BvG,QAAQuG,YAAY/L,KAC3C6L,6BAGC,CAAA,GAAKC,SAASlL,UAIf,KAHAiL,2BAOZ,MAAOG,kBAAiBJ,aAAa1L,MAAM2L,yBAO/C,QAASG,kBAAiBJ,cACtB,MAAOA,cAAaK,OAAO,SAAUjJ,IAAKkJ,MAItC,OAASzN,OAHqB+C,YAAawB,IAAIvE,OAAQyN,KAAKzN,QAGnC0N,KAFG3K,YAAawB,IAAImJ,KAAMD,KAAKC,MAEnB9H,QADN7C,YAAawB,IAAIqB,QAAS6H,KAAKE,kBAE3C3N,UAAY0N,QAAU9H,aAgLjD,QAASgI,gBAAeC,MAAOnC,MAC3BA,KAAKnG,MAAMuI,aAAeD,MAC1BnC,KAAKnJ,SAASqB,QAAQ,SAAUgD,GAAK,MAAOgH,gBAAeC,MAAOjH,KAMtE,QAASmH,eAAcrC,MACnB,GAAqB9E,GAAI8E,KAAKnJ,SAASzB,OAAS,EAAI,MAAQ4K,KAAKnJ,SAASO,IAAIiL,eAAepG,KAAK,MAAQ,MAAQ,EAClH,OAAO,GAAK+D,KAAKnG,MAAQqB,EAS7B,QAASoH,uBAAsBrN,OAC3B,GAAIA,MAAMuL,SAAU,CAChB,GAAqB+B,iBAAkBtN,MAAMuL,SACxBgC,aAAevN,MAAMwN,eAC1CxN,OAAMuL,SAAWgC,aACZhL,aAAa+K,gBAAgB5H,YAAa6H,aAAa7H,cACrC1F,MAAkB,YAAEqG,KAAKkH,aAAa7H,aAEzD4H,gBAAgBvB,WAAawB,aAAaxB,UACvB/L,MAAe,SAAEqG,KAAKkH,aAAaxB,UAErDxJ,aAAa+K,gBAAgBjO,OAAQkO,aAAalO,SAChCW,MAAa,OAAEqG,KAAKkH,aAAalO,QAEnDgD,mBAAmBiL,gBAAgBG,IAAKF,aAAaE,MACnCzN,MAAU,IAAEqG,KAAKkH,aAAaE,KAEhDlL,aAAa+K,gBAAgBP,KAAMQ,aAAaR,OAC9B/M,MAAW,KAAEqG,KAAKkH,aAAaR,UAItD/M,OAAMuL,SAAWvL,MAAMwN,gBAEJxN,MAAW,KAAEqG,KAAKrG,MAAMwN,gBAAgBT,MAQnE,QAASW,2BAA0BpL,EAAGxD,GAClC,GAAqB6O,gBAAiBpL,aAAaD,EAAEjD,OAAQP,EAAEO,SAAWiH,cAAchE,EAAEmL,IAAK3O,EAAE2O,KAC5EG,iBAAmBtL,EAAEuL,SAAY/O,EAAE+O,MACxD,OAAOF,kBAAmBC,mBACpBtL,EAAEuL,QAAUH,0BAA0BpL,EAAEuL,OAA2B/O,EAAS;;;;;;;AAoBtF,QAASgP,mBAAkBC,mBAAoBjB,KAAMkB,WACjD,GAAqBpI,MAAOqI,WAAWF,mBAAoBjB,KAAKoB,MAAOF,UAAYA,UAAUE,UAAQrD,GACrG,OAAO,IAAIqB,aAAYtG,KAAMkH,MAQjC,QAASmB,YAAWF,mBAAoBjB,KAAMkB,WAE1C,GAAIA,WAAaD,mBAAmBI,iBAAiBrB,KAAKlI,MAAOoJ,UAAUpJ,MAAM2G,UAAW,CACxF,GAAqB3G,OAAQoJ,UAAUpJ,KACvCA,OAAM4I,gBAAkBV,KAAKlI,KAC7B,IAAqBhD,UAAWwM,sBAAsBL,mBAAoBjB,KAAMkB,UAChF,OAAO,IAAI7B,UAASvH,MAAOhD,UAG1B,GAAImM,mBAAmBM,SAASvB,KAAKlI,OAAQ,CAC9C,GAAqB0J,MAA0BP,mBAAmBM,SAASvB,KAAKlI,OAAS5E,KAEzF,OADAuO,qCAAoCzB,KAAMwB,MACnCA,KAGP,GAAqB1J,OAAQ4J,qBAAqB1B,KAAKlI,OAClChD,SAAWkL,KAAKlL,SAASO,IAAI,SAAU8D,GAAK,MAAOgI,YAAWF,mBAAoB9H,IACvG,OAAO,IAAIkG,UAASvH,MAAOhD,UAQnC,QAAS2M,qCAAoCzB,KAAMpI,QAC/C,GAAIoI,KAAKlI,MAAM+H,cAAgBjI,OAAOE,MAAM+H,YACxC,KAAM,IAAIjN,OAAM,wEAEpB,IAAIoN,KAAKlL,SAASzB,SAAWuE,OAAO9C,SAASzB,OACzC,KAAM,IAAIT,OAAM,6EAEpBgF,QAAOE,MAAM4I,gBAAkBV,KAAKlI,KACpC,KAAK,GAAqB1D,GAAI,EAAGA,EAAI4L,KAAKlL,SAASzB,SAAUe,EACzDqN,oCAAoCzB,KAAKlL,SAASV,GAAIwD,OAAO9C,SAASV,IAS9E,QAASkN,uBAAsBL,mBAAoBjB,KAAMkB,WACrD,MAAOlB,MAAKlL,SAASO,IAAI,SAAUwE,OAC/B,IAAK,GAAI2D,IAAK,EAAGU,GAAKgD,UAAUpM,SAAU0I,GAAKU,GAAG7K,OAAQmK,KAAM,CAC5D,GAAIxD,GAAIkE,GAAGV,GACX,IAAIyD,mBAAmBI,iBAAiBrH,EAAElC,MAAM2G,SAAU5E,MAAM/B,OAC5D,MAAOqJ,YAAWF,mBAAoBpH,MAAOG,GAGrD,MAAOmH,YAAWF,mBAAoBpH,SAO9C,QAAS6H,sBAAqBvI,GAC1B,MAAO,IAAIgG,gBAAe,GAAIxO,sBAAqBiO,gBAAgBzF,EAAEwH,KAAM,GAAIhQ,sBAAqBiO,gBAAgBzF,EAAE5G,QAAS,GAAI5B,sBAAqBiO,gBAAgBzF,EAAEP,aAAc,GAAIjI,sBAAqBiO,gBAAgBzF,EAAE8F,UAAW,GAAItO,sBAAqBiO,gBAAgBzF,EAAE8G,MAAO9G,EAAExE,OAAQwE,EAAEzE,UAAWyE;;;;;;;AAsB3T,QAASwI,eAAczO,MAAOmJ,QAASuF,SAAUhJ,YAAaqG,UAC1D,GAAwB,IAApB2C,SAASvO,OACT,MAAOmO,MAAKnF,QAAQvD,KAAMuD,QAAQvD,KAAMuD,QAASzD,YAAaqG,SAElE,IAAqB4C,KAAMC,kBAAkBF,SAC7C,IAAIC,IAAIE,SACJ,MAAOP,MAAKnF,QAAQvD,KAAM,GAAIR,wBAAyB+D,QAASzD,YAAaqG,SAEjF,IAAqB+C,kBAAmBC,qBAAqBJ,IAAKxF,QAASnJ,OACtDD,aAAe+O,iBAAiBE,gBACjDC,2BAA2BH,iBAAiB/O,aAAc+O,iBAAiBvO,MAAOoO,IAAID,UACtFQ,mBAAmBJ,iBAAiB/O,aAAc+O,iBAAiBvO,MAAOoO,IAAID,SAClF,OAAOJ,MAAKQ,iBAAiB/O,aAAcA,aAAcoJ,QAASzD,YAAaqG,UAMnF,QAASoD,gBAAeC,SACpB,MAA0B,gBAAZA,UAAmC,MAAXA,UAAoBA,QAAQC,UAAYD,QAAQE,YAU1F,QAAShB,MAAKiB,gBAAiBC,gBAAiBrG,QAASzD,YAAaqG,UAClE,GAAqB0D,MAMrB,OALI/J,cACAzC,QAAQyC,YAAa,SAAUd,MAAOkD,MAClC2H,GAAG3H,MAAQxG,MAAMC,QAAQqD,OAASA,MAAMzC,IAAI,SAAUiF,GAAK,MAAO,GAAKA,IAAQ,GAAKxC,QAGxFuE,QAAQvD,OAAS2J,gBACV,GAAIpK,SAAQqK,gBAAiBC,GAAI1D,UAErC,GAAI5G,SAAQuK,eAAevG,QAAQvD,KAAM2J,gBAAiBC,iBAAkBC,GAAI1D,UAQ3F,QAAS2D,gBAAetJ,QAASuJ,WAAYC,YACzC,GAAqBhO,YASrB,OARAqB,SAAQmD,QAAQxE,SAAU,SAAUqE,EAAG4J,YAE/BjO,SAASiO,YADT5J,IAAM0J,WACiBC,WAGAF,eAAezJ,EAAG0J,WAAYC,cAGtD,GAAIxK,iBAAgBgB,QAAQtG,SAAU8B,UA+BjD,QAASgN,mBAAkBF,UACvB,GAA4B,gBAAhBA,UAAS,IAAwC,IAApBA,SAASvO,QAAgC,MAAhBuO,SAAS,GACvE,MAAO,IAAIoB,aAAW,EAAM,EAAGpB,SAEnC,IAAqBqB,oBAAqB,EACrBC,YAAa,EACbpM,IAAM8K,SAAS7B,OAAO,SAAUjJ,IAAKqM,IAAKC,QAC3D,GAAmB,gBAARD,MAA2B,MAAPA,IAAa,CACxC,GAAIA,IAAIZ,QAAS,CACb,GAAqBc,aAIrB,OAHAlN,SAAQgN,IAAIZ,QAAS,SAAUX,SAAU5G,MACrCqI,UAAUrI,MAA4B,gBAAb4G,UAAwBA,SAASxO,MAAM,KAAOwO,WAEpE9K,IAAId,SAAUuM,QAASc,aAElC,GAAIF,IAAIX,YACJ,MAAO1L,KAAId,QAAQmN,IAAIX,cAG/B,MAAqB,gBAARW,KACFrM,IAAId,QAAQmN,MAER,IAAXC,QACAD,IAAI/P,MAAM,KAAK+C,QAAQ,SAAUmN,QAASC,WACrB,GAAbA,WAA8B,MAAZD,UAGA,GAAbC,WAA8B,KAAZD,QAEvBJ,YAAa,EAEI,OAAZI,QAELL,qBAEgB,IAAXK,SACLxM,IAAII,KAAKoM,YAGVxM,KAEJA,IAAId,QAAQmN,UAEvB,OAAO,IAAIH,YAAWE,WAAYD,mBAAoBnM,KAgB1D,QAASmL,sBAAqBJ,IAAKL,KAAMtO,OACrC,GAAI2O,IAAIqB,WACJ,MAAO,IAAIM,UAAShC,KAAK1I,MAAM,EAAM,EAEzC,KAAuC,IAAnC5F,MAAMuL,SAASgF,eACf,MAAO,IAAID,UAAStQ,MAAMuL,SAASiF,aAAa,EAAM,EAE1D,IAAqBC,UAAWtB,eAAeR,IAAID,SAAS,IAAM,EAAI,EACjDnO,MAAQP,MAAMuL,SAASgF,eAAiBE,QAC7D,OAAOC,kCAAiC1Q,MAAMuL,SAASiF,YAAajQ,MAAOoO,IAAIoB,oBAQnF,QAASW,kCAAiCC,MAAOpQ,MAAOwP,oBAIpD,IAHA,GAAqBa,GAAID,MACJE,GAAKtQ,MACLuQ,GAAKf,mBACnBe,GAAKD,IAAI,CAGZ,GAFAC,IAAMD,KACND,EAAuBA,EAAS,QAE5B,KAAM,IAAIlR,OAAM,0BAEpBmR,IAAKD,EAAE9Q,SAASK,OAEpB,MAAO,IAAImQ,UAASM,GAAG,EAAOC,GAAKC,IAMvC,QAASC,SAAQ3B,SACb,MAAuB,gBAAZA,UAAmC,MAAXA,SAAmBA,QAAQC,QACnDD,QAAQC,QAAQ3N,gBAEpB,GAAK0N,QAMhB,QAAS4B,YAAWtC,UAChB,MAA6B,gBAAhBA,UAAS,IACX1D,MAASA,GAAGtJ,gBAAkBgN,SAAU1D,QACvBH,KAAxB6D,SAAS,GAAGW,SACL4B,MAASA,GAAGvP,gBAAkBgN,SAAUuC,IAC5CvC,SAAS,GAAGW,OACnB,IAAIrE,IAAIiG,GAQZ,QAAS/B,oBAAmBnP,aAAcmR,WAAYxC,UAIlD,GAHK3O,eACDA,aAAe,GAAIqF,yBAEc,IAAjCrF,aAAaD,SAASK,QAAgBJ,aAAaM,cACnD,MAAO4O,4BAA2BlP,aAAcmR,WAAYxC,SAEhE,IAAqByC,GAAIC,aAAarR,aAAcmR,WAAYxC,UAC3C2C,eAAiB3C,SAAS5N,MAAMqQ,EAAEG,aACvD,IAAIH,EAAElJ,OAASkJ,EAAEI,UAAYxR,aAAaD,SAASK,OAAQ,CACvD,GAAqByQ,GAAI,GAAIxL,iBAAgBrF,aAAaD,SAASgB,MAAM,EAAGqQ,EAAEI,cAG9E,OAFAX,GAAEhP,SAASF,gBACP,GAAI0D,iBAAgBrF,aAAaD,SAASgB,MAAMqQ,EAAEI,WAAYxR,aAAa6B,UACxEqN,2BAA2B2B,EAAG,EAAGS,gBAEvC,MAAIF,GAAElJ,OAAmC,IAA1BoJ,eAAelR,OACxB,GAAIiF,iBAAgBrF,aAAaD,aAEnCqR,EAAElJ,QAAUlI,aAAaM,cACvBmR,sBAAsBzR,aAAcmR,WAAYxC,UAElDyC,EAAElJ,MACAgH,2BAA2BlP,aAAc,EAAGsR,gBAG5CG,sBAAsBzR,aAAcmR,WAAYxC,UAS/D,QAASO,4BAA2BlP,aAAcmR,WAAYxC,UAC1D,GAAwB,IAApBA,SAASvO,OACT,MAAO,IAAIiF,iBAAgBrF,aAAaD,YAGxC,IAAqB2R,WAAYT,WAAWtC,UACvBvH,aAWrB,OAVAlE,SAAQwO,UAAW,SAAU/C,SAAUjN,QAClB,OAAbiN,WACAvH,WAAW1F,QAAUyN,mBAAmBnP,aAAa6B,SAASH,QAASyP,WAAYxC,aAG3FzL,QAAQlD,aAAa6B,SAAU,SAAU+E,MAAOC,iBACbiE,KAA3B4G,UAAU7K,eACVO,WAAWP,aAAeD,SAG3B,GAAIvB,iBAAgBrF,aAAaD,SAAUqH,YAS1D,QAASiK,cAAarR,aAAcmR,WAAYxC,UAI5C,IAHA,GAAqBgD,qBAAsB,EACtBC,iBAAmBT,WACnB3I,SAAYN,OAAO,EAAOsJ,UAAW,EAAGD,aAAc,GACpEK,iBAAmB5R,aAAaD,SAASK,QAAQ,CACpD,GAAIuR,qBAAuBhD,SAASvO,OAChC,MAAOoI,QACX,IAAqB3H,MAAOb,aAAaD,SAAS6R,kBAC7B7E,KAAOiE,QAAQrC,SAASgD,sBACxBrL,KAAOqL,oBAAsBhD,SAASvO,OAAS,EAAIuO,SAASgD,oBAAsB,GAAK,IAC5G,IAAIC,iBAAmB,OAAc9G,KAATiC,KACxB,KACJ,IAAIA,MAAQzG,MAAyB,gBAATA,WAAuCwE,KAAjBxE,KAAKgJ,QAAuB,CAC1E,IAAKuC,QAAQ9E,KAAMzG,KAAMzF,MACrB,MAAO2H,QACXmJ,sBAAuB,MAEtB,CACD,IAAKE,QAAQ9E,QAAUlM,MACnB,MAAO2H,QACXmJ,uBAEJC,mBAEJ,OAAS1J,OAAO,EAAMsJ,UAAWI,iBAAkBL,aAAcI,qBAQrE,QAASF,uBAAsBzR,aAAcmR,WAAYxC,UAGrD,IAFA,GAAqBmD,OAAQ9R,aAAaD,SAASgB,MAAM,EAAGoQ,YACvChQ,EAAI,EAClBA,EAAIwN,SAASvO,QAAQ,CACxB,GAA2B,gBAAhBuO,UAASxN,QAA2C2J,KAAxB6D,SAASxN,GAAGmO,QAAuB,CACtE,GAAqBzN,UAAWkQ,yBAAyBpD,SAASxN,GAAGmO,QACrE,OAAO,IAAIjK,iBAAgByM,MAAOjQ,UAGtC,GAAU,IAANV,GAAWiO,eAAeT,SAAS,IAAvC,CACI,GAAqB5H,GAAI/G,aAAaD,SAASoR,WAC/CW,OAAM7N,KAAK,GAAI2H,YAAW7E,EAAElG,KAAM8N,SAAS,KAC3CxN,QAHJ,CAMA,GAAqB4L,MAAOiE,QAAQrC,SAASxN,IACxBmF,KAAQnF,EAAIwN,SAASvO,OAAS,EAAKuO,SAASxN,EAAI,GAAK,IACtE4L,OAAQzG,MAAQ8I,eAAe9I,OAC/BwL,MAAM7N,KAAK,GAAI2H,YAAWmB,KAAMiF,UAAU1L,QAC1CnF,GAAK,IAGL2Q,MAAM7N,KAAK,GAAI2H,YAAWmB,UAC1B5L,MAGR,MAAO,IAAIkE,iBAAgByM,UAM/B,QAASC,0BAAyBzC,SAC9B,GAAqBzN,YAMrB,OALAqB,SAAQoM,QAAS,SAAUX,SAAUjN,QAChB,OAAbiN,WACA9M,SAASH,QAAU+P,sBAAsB,GAAIpM,wBAAyB,EAAGsJ,aAG1E9M,SAMX,QAASmQ,WAAU1S,QACf,GAAqBuE,OAErB,OADAX,SAAQ5D,OAAQ,SAAU+H,EAAGvD,GAAK,MAAOD,KAAIC,GAAK,GAAKuD,IAChDxD,IAQX,QAASgO,SAAQhR,KAAMvB,OAAQoB,SAC3B,MAAOG,OAAQH,QAAQG,MAAQ2B,aAAalD,OAAQoB,QAAQgG,YAmgBhE,QAASuL,qBAAoBzG,UACzB,IAAKA,SACD,MAAO,KACX,KAAK,GAAqBjE,GAAIiE,SAASsC,OAAQvG,EAAGA,EAAIA,EAAEuG,OAAQ,CAC5D,GAAqB7N,OAAQsH,EAAEqF,WAC/B,IAAI3M,OAASA,MAAMiS,cACf,MAAOjS,OAAMiS,cAErB,MAAO,MA2BX,QAASC,WAAUC,kBAAmBnR,OAAQmI,QAASsE,IAAKlB,2BAExD,WADkC,KAA9BA,4BAAwCA,0BAA4B,aACjE,GAAI6F,YAAWD,kBAAmBnR,OAAQmI,QAASsE,IAAKlB,2BAC1D2F,YAgLT,QAASG,6BAA4BC,OACjCA,MAAMC,KAAK,SAAUjQ,EAAGxD,GACpB,MAAIwD,GAAEsC,MAAMnD,SAAWC,gBACX,EACR5C,EAAE8F,MAAMnD,SAAWC,eACZ,EACJY,EAAEsC,MAAMnD,OAAO+Q,cAAc1T,EAAE8F,MAAMnD,UAOpD,QAASgR,gBAAezS,OACpB,MAAIA,OAAM4B,SACC5B,MAAM4B,SAEb5B,MAAM6B,aACoB7B,MAAoB,cAAEqK,UAUxD,QAASqI,SAAQ3S,aAAcC,MAAOF,UAClC,GAAmB,KAAfE,MAAMY,KAAa,CACnB,GAAwB,SAApBZ,MAAMI,YAAyBL,aAAaM,eAAiBP,SAASK,OAAS,GAC/E,KAAM,IAAIwS,UAEd,QAAS/I,oBAAsBC,UAAW,EAAGpD,eAEjD,GAAqB3E,SAAU9B,MAAM8B,SAAWjC,kBAC3B+D,IAAM9B,QAAQhC,SAAUC,aAAcC,MAC3D,KAAK4D,IACD,KAAM,IAAI+O,UACd,IAAqBrS,aACrB2C,SAA2BW,IAAc,UAAG,SAAUwD,EAAGvD,GAAKvD,UAAUuD,GAAKuD,EAAExG,MAC/E,IAAqB6F,YAAa7C,IAAI/C,SAASV,OAAS,EAAIiC,YAAa9B,UAAWsD,IAAI/C,SAAS+C,IAAI/C,SAASV,OAAS,GAAGsG,YACtHnG,SACJ,QAASsJ,iBAAkBhG,IAAI/C,SAAUgJ,UAAWjG,IAAI/C,SAASV,OAAQsG,WAAYA,YAMzF,QAASmM,2BAA0BN,OAC/B,GAAqBO,SACrBP,OAAMrP,QAAQ,SAAU6P,GACpB,GAAqBC,yBAA0BF,MAAMC,EAAElO,MAAMnD,OAC7D,IAAIsR,wBAAyB,CACzB,GAAqBjM,GAAIiM,wBAAwBtF,IAAItL,IAAI,SAAUmF,GAAK,MAAOA,GAAE0L,aAAehM,KAAK,KAChFf,EAAI6M,EAAElO,MAAM6I,IAAItL,IAAI,SAAUmF,GAAK,MAAOA,GAAE0L,aAAehM,KAAK,IACrF,MAAM,IAAItH,OAAM,mDAAqDoH,EAAI,UAAYb,EAAI,MAE7F4M,MAAMC,EAAElO,MAAMnD,QAAUqR,EAAElO,QAOlC,QAASqO,uBAAsBlT,cAE3B,IADA,GAAqBuH,GAAIvH,aAClBuH,EAAE4L,gBACL5L,EAAIA,EAAE4L,cAEV,OAAO5L,GAMX,QAAS6L,mBAAkBpT,cAGvB,IAFA,GAAqBuH,GAAIvH,aACJ6D,IAAO0D,EAAE8L,mBAAqB9L,EAAE8L,mBAAqB,EACnE9L,EAAE4L,gBACL5L,EAAIA,EAAE4L,eACNtP,KAAQ0D,EAAE8L,mBAAqB9L,EAAE8L,mBAAqB,CAE1D,OAAOxP,KAAM,EASjB,QAASyP,SAAQtT,aAAc6J,iBAAkBG,eAAgB/I,QAC7D,GAAI+I,eAAe5J,OAAS,GACxBmT,yCAAyCvT,aAAcgK,eAAgB/I,QAAS,CAChF,GAAqBuS,KAAM,GAAInO,iBAAgBwE,iBAAkB4J,4BAA4BzT,aAAc6J,iBAAkB5I,OAAQ,GAAIoE,iBAAgB2E,eAAgBhK,aAAa6B,WAGtL,OAFA2R,KAAIL,eAAiBnT,aACrBwT,IAAIH,mBAAqBxJ,iBAAiBzJ,QACjCJ,aAAcwT,IAAKxJ,mBAEhC,GAA8B,IAA1BA,eAAe5J,QACfsT,yBAAyB1T,aAAcgK,eAAgB/I,QAAS,CAChE,GAAqB0S,KAAM,GAAItO,iBAAgBrF,aAAaD,SAAU6T,gCAAgC5T,aAAcgK,eAAgB/I,OAAQjB,aAAa6B,UAGzJ,OAFA8R,KAAIR,eAAiBnT,aACrB2T,IAAIN,mBAAqBxJ,iBAAiBzJ,QACjCJ,aAAc2T,IAAK3J,eAAgBA,gBAEhD,GAAqBzC,GAAI,GAAIlC,iBAAgBrF,aAAaD,SAAUC,aAAa6B,SAGjF,OAFA0F,GAAE4L,eAAiBnT,aACnBuH,EAAE8L,mBAAqBxJ,iBAAiBzJ,QAC/BJ,aAAcuH,EAAGyC,eAAgBA,gBAS9C,QAAS4J,iCAAgC5T,aAAcgK,eAAgBM,OAAQzI,UAE3E,IAAK,GADgBgC,QACZ0G,GAAK,EAAGC,SAAWF,OAAQC,GAAKC,SAASpK,OAAQmK,KAAM,CAC5D,GAAIpI,GAAIqI,SAASD,GACjB,IAAIsJ,eAAe7T,aAAcgK,eAAgB7H,KAAON,SAASiS,YAAY3R,IAAK,CAC9E,GAAqBoF,GAAI,GAAIlC,uBAC7BkC,GAAE4L,eAAiBnT,aACnBuH,EAAE8L,mBAAqBrT,aAAaD,SAASK,OAC7CyD,IAAIiQ,YAAY3R,IAAMoF,GAG9B,MAAOlF,aAAaR,SAAUgC,KASlC,QAAS4P,6BAA4BzT,aAAc6J,iBAAkBS,OAAQyJ,gBACzE,GAAqBlQ,OACrBA,KAAIlC,gBAAkBoS,eACtBA,eAAeZ,eAAiBnT,aAChC+T,eAAeV,mBAAqBxJ,iBAAiBzJ,MACrD,KAAK,GAAImK,IAAK,EAAGK,SAAWN,OAAQC,GAAKK,SAASxK,OAAQmK,KAAM,CAC5D,GAAIpI,GAAIyI,SAASL,GACjB,IAAe,KAAXpI,EAAEtB,MAAeiT,YAAY3R,KAAOR,eAAgB,CACpD,GAAqB4F,GAAI,GAAIlC,uBAC7BkC,GAAE4L,eAAiBnT,aACnBuH,EAAE8L,mBAAqBxJ,iBAAiBzJ,OACxCyD,IAAIiQ,YAAY3R,IAAMoF,GAG9B,MAAO1D,KAQX,QAAS0P,0CAAyCvT,aAAcgK,eAAgBM,QAC5E,MAAOA,QAAOO,KAAK,SAAU1I,GAAK,MAAO0R,gBAAe7T,aAAcgK,eAAgB7H,IAAM2R,YAAY3R,KAAOR,iBAQnH,QAAS+R,0BAAyB1T,aAAcgK,eAAgBM,QAC5D,MAAOA,QAAOO,KAAK,SAAU1I,GAAK,MAAO0R,gBAAe7T,aAAcgK,eAAgB7H,KAQ1F,QAAS0R,gBAAe7T,aAAcgK,eAAgB7H,GAClD,SAAKnC,aAAaM,eAAiB0J,eAAe5J,OAAS,IAAsB,SAAhB+B,EAAE9B,aAGjD,KAAX8B,EAAEtB,UAAgCiK,KAAjB3I,EAAEP,YAM9B,QAASkS,aAAY7T,OACjB,MAAOA,OAAMyB,QAAUC,eAM3B,QAASqS,SAAQ/T,OACb,MAAOA,OAAM+M,SAMjB,QAASiH,YAAWhU,OAChB,MAAOA,OAAMiF;;;;;;;AAiPjB,QAASgP,qBAAoBxU,OACzB,KAAMA,OAOV,QAASyU,mBAAkB3I,UACvB,MAAyB5N,oBAAmB8F,GAAG,MA6oCnD,QAAS0Q,yCAAwCpJ,MAC7CsC,sBAAsBtC,KAAKnG,OAC3BmG,KAAKnJ,SAASqB,QAAQkR,yCAM1B,QAASC,oBAAmB7I,UACxB,IAAK,GAAqBjE,GAAIiE,SAASsC,OAAQvG,EAAGA,EAAIA,EAAEuG,OAAQ,CAC5D,GAAqB7N,OAAQsH,EAAEqF,WAC/B,IAAI3M,OAASA,MAAMiS,cACf,MAAOjS,OAAMiS,aACjB,IAAIjS,OAASA,MAAMwB,UACf,MAAO,MAEf,MAAO,MAMX,QAAS6S,kBAAiB3F,UACtB,IAAK,GAAqBxN,GAAI,EAAGA,EAAIwN,SAASvO,OAAQe,IAAK,CACvD,GAAqB+O,KAAMvB,SAASxN,EACpC,IAAW,MAAP+O,IACA,KAAM,IAAIvQ,OAAM,+BAAiCuQ,IAAM,qBAAuB/O,IAoV1F,QAASoT,eAAchN,GACnB,MAAa,KAANA,KAAcA,EA2zBzB,QAASiN,sBACL,MAAO,IAAI/W,eAAcgX,aAAa,SAAUC,QAsKpD,QAASC,yBAAwBC,yBAA0BC,SAAUC,SAEjE,WADgB,KAAZA,UAAsBA,YACnBA,QAAQC,QAAU,GAAIvX,iBAAgBwX,qBAAqBJ,yBAA0BC,UACxF,GAAIrX,iBAAgByX,qBAAqBL,yBAA0BC,UAM3E,QAASK,qBAAoBlY,QACzB,GAAIA,OACA,KAAM,IAAI2C,OAAM,uGAEpB,OAAO,UAmBX,QAASwV,eAAc7K,QACnB,QACM8K,QAAS3X,cAAc4X,6BAA8BC,OAAO,EAAMC,SAAUjL,SAC5E8K,QAASI,OAAQF,OAAO,EAAMC,SAAUjL,SAwBlD,QAASmL,aAAYC,IAAKvM,cAAewM,SAAUC,SAAUC,SAAUC,OAAQC,SAAU9U,OAAQ+U,KAAMC,oBAAqBjI,wBAC3G,KAATgI,OAAmBA,QACvB,IAAqBhZ,QAAS,GAAI0X,QAAO,KAAMvL,cAAewM,SAAUC,SAAUC,SAAUC,OAAQC,SAAUlT,QAAQ5B,QAUtH,IATIgV,sBACAjZ,OAAOiZ,oBAAsBA,qBAE7BjI,qBACAhR,OAAOgR,mBAAqBA,oBAE5BgI,KAAKE,eACLlZ,OAAOkZ,aAAeF,KAAKE,cAE3BF,KAAKG,cAAe,CACpB,GAAqBC,OAAQzX,yBAAyB0X,SACtDrZ,QAAOsZ,OAAOC,UAAU,SAAUC,GAC9BJ,MAAMK,SAAS,iBAAuCD,EAAe,YAAEzO,MACvEqO,MAAMM,IAAIF,EAAEvD,YACZmD,MAAMM,IAAIF,GACVJ,MAAMO,gBASd,MANIX,MAAKY,sBACL5Z,OAAO4Z,oBAAsBZ,KAAKY,qBAElCZ,KAAKxJ,4BACLxP,OAAOwP,0BAA4BwJ,KAAKxJ,2BAErCxP,OAMX,QAAS6Z,WAAU7Z,QACf,MAAOA,QAAO8Z,YAAYjR,KA4H9B,QAASkR,mBAAkB5U,GACvB,MAAOA,GAAE6U,eAAeC,KAAK9U,GAMjC,QAAS+U,sBAAqB/U,GAC1B,MAAOA,GAAEgV,kBAAkBF,KAAK9U,GAWpC,QAASiV,4BACL,OACIC,mBAEIjC,QAAS3X,cAAc6Z,gBACvBhC,OAAO,EACPiC,WAAYR,kBACZS,MAAOH,qBAETjC,QAASqC,mBAAoBF,WAAYL,qBAAsBM,MAAOH,qBACtEjC,QAAS3X,cAAcia,uBAAwBpC,OAAO,EAAMqC,YAAaF,qBAhwOnF,GAAIvY,eAAgBC,OAAOyY,iBACpBC,uBAA2BtW,QAAS,SAAUzC,EAAGC,GAAKD,EAAE+Y,UAAY9Y,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAIgI,KAAKhI,GAAOA,EAAEuE,eAAeyD,KAAIjI,EAAEiI,GAAKhI,EAAEgI,KAQrE1E,SAAWlD,OAAO2Y,QAAU,SAAkBC,GAC9C,IAAK,GAAIxQ,GAAGpG,EAAI,EAAG4R,EAAIiF,UAAU5X,OAAQe,EAAI4R,EAAG5R,IAAK,CACjDoG,EAAIyQ,UAAU7W,EACd,KAAK,GAAI4F,KAAKQ,GAAOpI,OAAO9B,UAAUiG,eAAeU,KAAKuD,EAAGR,KAAIgR,EAAEhR,GAAKQ,EAAER,IAE9E,MAAOgR,IAqCPE,YAA6B,WAC7B,QAASA,aAAYC,GAAIxK,KACrBnQ,KAAK2a,GAAKA,GACV3a,KAAKmQ,IAAMA,IAEf,MAAOuK,gBAOPE,gBAAiC,SAAUC,QAE3C,QAASD,mBACL,MAAkB,QAAXC,QAAmBA,OAAOpV,MAAMzF,KAAMya,YAAcza,KAY/D,MAdAsB,WAAUsZ,gBAAiBC,QAS3BD,gBAAgB9a,UAAU4V,SAI1B,WAAc,MAAO,uBAAyB1V,KAAK2a,GAAK,WAAa3a,KAAKmQ,IAAM,MACzEyK,iBACTF,aAMEI,cAA+B,SAAUD,QAEzC,QAASC,eAELH,GAEAxK,IAAK4K,mBACL,GAAIC,OAAQH,OAAOpU,KAAKzG,KAAM2a,GAAIxK,MAAQnQ,IAE1C,OADAgb,OAAMD,kBAAoBA,kBACnBC,MAcX,MAtBA1Z,WAAUwZ,cAAeD,QAezBC,cAAchb,UAAU4V,SAIxB,WACI,MAAO,qBAAuB1V,KAAK2a,GAAK,WAAa3a,KAAKmQ,IAAM,0BAA4BnQ,KAAK+a,kBAAoB,MAElHD,eACTJ,aAMEO,iBAAkC,SAAUJ,QAE5C,QAASI,kBAELN,GAEAxK,IAAK+K,QACL,GAAIF,OAAQH,OAAOpU,KAAKzG,KAAM2a,GAAIxK,MAAQnQ,IAE1C,OADAgb,OAAME,OAASA,OACRF,MAYX,MApBA1Z,WAAU2Z,iBAAkBJ,QAe5BI,iBAAiBnb,UAAU4V,SAI3B,WAAc,MAAO,wBAA0B1V,KAAK2a,GAAK,WAAa3a,KAAKmQ,IAAM,MAC1E8K,kBACTP,aAMES,gBAAiC,SAAUN,QAE3C,QAASM,iBAELR,GAEAxK,IAAKhO,OACL,GAAI6Y,OAAQH,OAAOpU,KAAKzG,KAAM2a,GAAIxK,MAAQnQ,IAE1C,OADAgb,OAAM7Y,MAAQA,MACP6Y,MAcX,MAtBA1Z,WAAU6Z,gBAAiBN,QAe3BM,gBAAgBrb,UAAU4V,SAI1B,WACI,MAAO,uBAAyB1V,KAAK2a,GAAK,WAAa3a,KAAKmQ,IAAM,aAAenQ,KAAKmC,MAAQ,KAE3FgZ,iBACTT,aAMEU,iBAAkC,SAAUP,QAE5C,QAASO,kBAELT,GAEAxK,IAAK4K,kBAAmBnL,OACxB,GAAIoL,OAAQH,OAAOpU,KAAKzG,KAAM2a,GAAIxK,MAAQnQ,IAG1C,OAFAgb,OAAMD,kBAAoBA,kBAC1BC,MAAMpL,MAAQA,MACPoL,MAcX,MAvBA1Z,WAAU8Z,iBAAkBP,QAgB5BO,iBAAiBtb,UAAU4V,SAI3B,WACI,MAAO,wBAA0B1V,KAAK2a,GAAK,WAAa3a,KAAKmQ,IAAM,0BAA4BnQ,KAAK+a,kBAAoB,aAAe/a,KAAK4P,MAAQ,KAEjJwL,kBACTV,aAMEW,iBAAkC,SAAUR,QAE5C,QAASQ,kBAELV,GAEAxK,IAAK4K,kBAAmBnL,OACxB,GAAIoL,OAAQH,OAAOpU,KAAKzG,KAAM2a,GAAIxK,MAAQnQ,IAG1C,OAFAgb,OAAMD,kBAAoBA,kBAC1BC,MAAMpL,MAAQA,MACPoL,MAWX,MApBA1Z,WAAU+Z,iBAAkBR,QAc5BQ,iBAAiBvb,UAAU4V,SAG3B,WACI,MAAO,wBAA0B1V,KAAK2a,GAAK,WAAa3a,KAAKmQ,IAAM,0BAA4BnQ,KAAK+a,kBAAoB,aAAe/a,KAAK4P,MAAQ,KAEjJyL,kBACTX,aAMEY,eAAgC,SAAUT,QAE1C,QAASS,gBAELX,GAEAxK,IAAK4K,kBAAmBnL,MAAO2L,gBAC/B,GAAIP,OAAQH,OAAOpU,KAAKzG,KAAM2a,GAAIxK,MAAQnQ,IAI1C,OAHAgb,OAAMD,kBAAoBA,kBAC1BC,MAAMpL,MAAQA,MACdoL,MAAMO,eAAiBA,eAChBP,MAWX,MArBA1Z,WAAUga,eAAgBT,QAe1BS,eAAexb,UAAU4V,SAGzB,WACI,MAAO,sBAAwB1V,KAAK2a,GAAK,WAAa3a,KAAKmQ,IAAM,0BAA4BnQ,KAAK+a,kBAAoB,aAAe/a,KAAK4P,MAAQ,qBAAuB5P,KAAKub,eAAiB,KAE5LD,gBACTZ,aASEc,aAA8B,SAAUX,QAExC,QAASW,cAELb,GAEAxK,IAAK4K,kBAAmBnL,OACxB,GAAIoL,OAAQH,OAAOpU,KAAKzG,KAAM2a,GAAIxK,MAAQnQ,IAG1C,OAFAgb,OAAMD,kBAAoBA,kBAC1BC,MAAMpL,MAAQA,MACPoL,MAWX,MApBA1Z,WAAUka,aAAcX,QAcxBW,aAAa1b,UAAU4V,SAGvB,WACI,MAAO,oBAAsB1V,KAAK2a,GAAK,WAAa3a,KAAKmQ,IAAM,0BAA4BnQ,KAAK+a,kBAAoB,aAAe/a,KAAK4P,MAAQ,KAE7I4L,cACTd,aAOEe,WAA4B,SAAUZ,QAEtC,QAASY,YAELd,GAEAxK,IAAK4K,kBAAmBnL,OACxB,GAAIoL,OAAQH,OAAOpU,KAAKzG,KAAM2a,GAAIxK,MAAQnQ,IAG1C,OAFAgb,OAAMD,kBAAoBA,kBAC1BC,MAAMpL,MAAQA,MACPoL,MAWX,MApBA1Z,WAAUma,WAAYZ,QActBY,WAAW3b,UAAU4V,SAGrB,WACI,MAAO,kBAAoB1V,KAAK2a,GAAK,WAAa3a,KAAKmQ,IAAM,0BAA4BnQ,KAAK+a,kBAAoB,aAAe/a,KAAK4P,MAAQ,KAE3I6L,YACTf,aAMEgB,qBAAsC,WACtC,QAASA,sBAAqBhZ,OAC1B1C,KAAK0C,MAAQA,MASjB,MAJAgZ,sBAAqB5b,UAAU4V,SAG/B,WAAc,MAAO,8BAAgC1V,KAAK0C,MAAMY,KAAO,KAChEoY,wBAOPC,mBAAoC,WACpC,QAASA,oBAAmBjZ,OACxB1C,KAAK0C,MAAQA,MASjB,MAJAiZ,oBAAmB7b,UAAU4V,SAG7B,WAAc,MAAO,4BAA8B1V,KAAK0C,MAAMY,KAAO,KAC9DqY,sBAQPC,qBAAsC,WACtC,QAASA,sBAAqB3N,UAC1BjO,KAAKiO,SAAWA,SAYpB,MAPA2N,sBAAqB9b,UAAU4V,SAG/B,WAEI,MAAO,gCADqB1V,KAAKiO,SAASoB,aAAerP,KAAKiO,SAASoB,YAAY/L,MAAQ,IAC5C,MAE5CsY,wBAQPC,mBAAoC,WACpC,QAASA,oBAAmB5N,UACxBjO,KAAKiO,SAAWA,SAYpB,MAPA4N,oBAAmB/b,UAAU4V,SAG7B,WAEI,MAAO,8BADqB1V,KAAKiO,SAASoB,aAAerP,KAAKiO,SAASoB,YAAY/L,MAAQ,IAC9C,MAE1CuY,sBAQPC,gBAAiC,WACjC,QAASA,iBAAgB7N,UACrBjO,KAAKiO,SAAWA,SAYpB,MAPA6N,iBAAgBhc,UAAU4V,SAG1B,WAEI,MAAO,2BADqB1V,KAAKiO,SAASoB,aAAerP,KAAKiO,SAASoB,YAAY/L,MAAQ,IACjD,MAEvCwY,mBAQPC,cAA+B,WAC/B,QAASA,eAAc9N,UACnBjO,KAAKiO,SAAWA,SAYpB,MAPA8N,eAAcjc,UAAU4V,SAGxB,WAEI,MAAO,yBADqB1V,KAAKiO,SAASoB,aAAerP,KAAKiO,SAASoB,YAAY/L,MAAQ,IACnD,MAErCyY,iBAmBP3X,eAAiB,UAejBpC,YAA6B,WAC7B,QAASA,aAAYD,QACjB/B,KAAK+B,OAASA,WAiDlB,MA3CAC,aAAYlC,UAAUkc,IAItB,SAAUxR,MAAQ,MAAOxK,MAAK+B,OAAOgE,eAAeyE,OAKpDxI,YAAYlC,UAAUsM,IAItB,SAAU5B,MACN,GAAIxK,KAAKgc,IAAIxR,MAAO,CAChB,GAAqBV,GAAI9J,KAAK+B,OAAOyI,KACrC,OAAOxG,OAAMC,QAAQ6F,GAAKA,EAAE,GAAKA,EAErC,MAAO,OAMX9H,YAAYlC,UAAUmc,OAItB,SAAUzR,MACN,GAAIxK,KAAKgc,IAAIxR,MAAO,CAChB,GAAqBV,GAAI9J,KAAK+B,OAAOyI,KACrC,OAAOxG,OAAMC,QAAQ6F,GAAKA,GAAKA,GAEnC,UAEJlI,OAAOsa,eAAela,YAAYlC,UAAW,QACzCsM,IAGA,WAAc,MAAOxK,QAAOuD,KAAKnF,KAAK+B,SACtCoa,YAAY,EACZC,cAAc,IAEXpa,eAYPK,2BAA6B,6BAoE7Bga,mBAAoC,WACpC,QAASA,oBAAmBtP,OAAQ3N,QAChCY,KAAK+M,OAASA,OACd/M,KAAKZ,OAASA,OAElB,MAAOid,uBAoXPxU,QAAyB,WAEzB,QAASA,SAAQS,KAAMF,YAAaqG,UAChCzO,KAAKsI,KAAOA,KACZtI,KAAKoI,YAAcA,YACnBpI,KAAKyO,SAAWA,SAyBpB,MAvBA7M,QAAOsa,eAAerU,QAAQ/H,UAAW,iBACrCsM,IAGA,WAII,MAHKpM,MAAKsc,iBACNtc,KAAKsc,eAAiBxa,kBAAkB9B,KAAKoI,cAE1CpI,KAAKsc,gBAEhBH,YAAY,EACZC,cAAc,IAOlBvU,QAAQ/H,UAAU4V,SAIlB,WAAc,MAAO6G,oBAAmBC,UAAUxc,OAC3C6H,WASPC,gBAAiC,WACjC,QAASA,iBAAgBtF,SAAU8B,UAC/B,GAAI0W,OAAQhb,IACZA,MAAKwC,SAAWA,SAChBxC,KAAKsE,SAAWA,SAIhBtE,KAAKuQ,OAAS,KACd5K,QAAQrB,SAAU,SAAUwF,EAAGvD,GAAK,MAAOuD,GAAEyG,OAASyK,QAgC1D,MAzBAlT,iBAAgBhI,UAAUiD,YAI1B,WAAc,MAAO/C,MAAK0I,iBAAmB,GAC7C9G,OAAOsa,eAAepU,gBAAgBhI,UAAW,oBAE7CsM,IAIA,WAAc,MAAOxK,QAAOuD,KAAKnF,KAAKsE,UAAUzB,QAChDsZ,YAAY,EACZC,cAAc,IAOlBtU,gBAAgBhI,UAAU4V,SAI1B,WAAc,MAAOnM,gBAAevJ,OAC7B8H,mBA2BPuG,WAA4B,WAC5B,QAASA,YAAW/K,KAAM6F,YACtBnJ,KAAKsD,KAAOA,KACZtD,KAAKmJ,WAAaA,WAyBtB,MAvBAvH,QAAOsa,eAAe7N,WAAWvO,UAAW,gBACxCsM,IAGA,WAII,MAHKpM,MAAKyc,gBACNzc,KAAKyc,cAAgB3a,kBAAkB9B,KAAKmJ,aAEzCnJ,KAAKyc,eAEhBN,YAAY,EACZC,cAAc,IAOlB/N,WAAWvO,UAAU4V,SAIrB,WAAc,MAAOjM,eAAczJ,OAC5BqO,cAmDPqO,cAA+B,WAC/B,QAASA,kBAET,MAAOA,kBAoBPC,qBAAsC,WACtC,QAASA,yBAkCT,MA1BAA,sBAAqB7c,UAAU8c,MAK/B,SAAUzM,KACN,GAAqB3G,GAAI,GAAIqT,WAAU1M,IACvC,OAAO,IAAItI,SAAQ2B,EAAEsT,mBAAoBtT,EAAEuT,mBAAoBvT,EAAEwT,kBAQrEL,qBAAqB7c,UAAU0c,UAK/B,SAAUxL,MAIN,MAH+B,IAAMrH,iBAAiBqH,KAAK1I,MAAM,GACpCgC,qBAAqB0G,KAAK5I,cACE,gBAAlB4I,MAAKvC,SAAwB,IAAMwO,UAA8BjM,KAAe,UAAK,KAGzH2L,wBAEPJ,mBAAqB,GAAII,sBA6FzB/R,WAAa,iBASbE,eAAiB,YASjBE,qBAAuB,WASvB6R,UAA2B,WAC3B,QAASA,WAAU1M,KACfnQ,KAAKmQ,IAAMA,IACXnQ,KAAKkd,UAAY/M,IA0OrB,MArOA0M,WAAU/c,UAAUgd,iBAGpB,WAEI,MADA9c,MAAKmd,gBAAgB,KACE,KAAnBnd,KAAKkd,WAAoBld,KAAKod,eAAe,MAAQpd,KAAKod,eAAe,KAClE,GAAItV,wBAGR,GAAIA,oBAAoB9H,KAAKqd,kBAKxCR,UAAU/c,UAAUid,iBAGpB,WACI,GAAqBhb,UACrB,IAAI/B,KAAKmd,gBAAgB,KACrB,GACInd,KAAKsd,gBAAgBvb,cAChB/B,KAAKmd,gBAAgB,KAElC,OAAOpb,SAKX8a,UAAU/c,UAAUkd,cAGpB,WACI,MAAOhd,MAAKmd,gBAAgB,KAAOI,UAAUvd,KAAKkd,WAAa,MAKnEL,UAAU/c,UAAUud,cAGpB,WACI,GAAuB,KAAnBrd,KAAKkd,UACL,QAEJld,MAAKmd,gBAAgB,IACrB,IAAqB3a,YAIrB,KAHKxC,KAAKod,eAAe,MACrB5a,SAASkE,KAAK1G,KAAKwd,gBAEhBxd,KAAKod,eAAe,OAASpd,KAAKod,eAAe,QAAUpd,KAAKod,eAAe,OAClFpd,KAAKyd,QAAQ,KACbjb,SAASkE,KAAK1G,KAAKwd,eAEvB,IAAqBlZ,YACjBtE,MAAKod,eAAe,QACpBpd,KAAKyd,QAAQ,KACbnZ,SAAWtE,KAAK0d,aAAY,GAEhC,IAAqBpX,OAOrB,OANItG,MAAKod,eAAe,OACpB9W,IAAMtG,KAAK0d,aAAY,KAEvBlb,SAASK,OAAS,GAAKjB,OAAOuD,KAAKb,UAAUzB,OAAS,KACtDyD,IAAIlC,gBAAkB,GAAI0D,iBAAgBtF,SAAU8B,WAEjDgC,KAKXuW,UAAU/c,UAAU0d,aAGpB,WACI,GAAqBla,MAAOmH,cAAczK,KAAKkd,UAC/C,IAAa,KAAT5Z,MAAetD,KAAKod,eAAe,KACnC,KAAM,IAAIhb,OAAM,mDAAqDpC,KAAKkd,UAAY,KAG1F,OADAld,MAAKyd,QAAQna,MACN,GAAI+K,YAAWlE,OAAO7G,MAAOtD,KAAK2d,sBAK7Cd,UAAU/c,UAAU6d,kBAGpB,WAEI,IADA,GAAqB5b,WACd/B,KAAKmd,gBAAgB,MACxBnd,KAAK4d,WAAW7b,OAEpB,OAAOA,SAMX8a,UAAU/c,UAAU8d,WAIpB,SAAU7b,QACN,GAAqBsD,KAAMoF,cAAczK,KAAKkd,UAC9C,IAAK7X,IAAL,CAGArF,KAAKyd,QAAQpY,IACb,IAAqBiC,OAAQ,EAC7B,IAAItH,KAAKmd,gBAAgB,KAAM,CAC3B,GAAqBU,YAAapT,cAAczK,KAAKkd,UACjDW,cACAvW,MAAQuW,WACR7d,KAAKyd,QAAQnW,QAGrBvF,OAAOoI,OAAO9E,MAAQ8E,OAAO7C,SAMjCuV,UAAU/c,UAAUwd,gBAIpB,SAAUvb,QACN,GAAqBsD,KAAMwF,iBAAiB7K,KAAKkd,UACjD,IAAK7X,IAAL,CAGArF,KAAKyd,QAAQpY,IACb,IAAqBiC,OAAQ,EAC7B,IAAItH,KAAKmd,gBAAgB,KAAM,CAC3B,GAAqBU,YAAa9S,wBAAwB/K,KAAKkd,UAC3DW,cACAvW,MAAQuW,WACR7d,KAAKyd,QAAQnW,QAGrB,GAAqBwW,YAAa3T,OAAO9E,KACpB0Y,WAAa5T,OAAO7C,MACzC,IAAIvF,OAAOgE,eAAe+X,YAAa,CAEnC,GAAqBE,YAAajc,OAAO+b,WACpC9Z,OAAMC,QAAQ+Z,cACfA,YAAcA,YACdjc,OAAO+b,YAAcE,YAEzBA,WAAWtX,KAAKqX,gBAIhBhc,QAAO+b,YAAcC,aAO7BlB,UAAU/c,UAAU4d,YAIpB,SAAUO,cACN,GAAqBzb,YAErB,KADAxC,KAAKyd,QAAQ,MACLzd,KAAKmd,gBAAgB,MAAQnd,KAAKkd,UAAUra,OAAS,GAAG,CAC5D,GAAqBS,MAAOmH,cAAczK,KAAKkd,WAC1BnU,KAAO/I,KAAKkd,UAAU5Z,KAAKT,OAGhD,IAAa,MAATkG,MAAyB,MAATA,MAAyB,MAATA,KAChC,KAAM,IAAI3G,OAAM,qBAAuBpC,KAAKmQ,IAAM,IAEtD,IAAqBoC,gBAA8B,EAC/CjP,MAAK4a,QAAQ,MAAQ,GACrB3L,WAAajP,KAAK6a,OAAO,EAAG7a,KAAK4a,QAAQ,MACzCle,KAAKyd,QAAQlL,YACbvS,KAAKyd,QAAQ,MAERQ,eACL1L,WAAanO,eAEjB,IAAqBE,UAAWtE,KAAKqd,eACrC7a,UAAS+P,YAA+C,IAAjC3Q,OAAOuD,KAAKb,UAAUzB,OAAeyB,SAASF,gBACjE,GAAI0D,oBAAoBxD,UAC5BtE,KAAKmd,gBAAgB,MAEzB,MAAO3a,WAMXqa,UAAU/c,UAAUsd,eAIpB,SAAU1S,KAAO,MAAO1K,MAAKkd,UAAU9Z,WAAWsH,MAKlDmS,UAAU/c,UAAUqd,gBAIpB,SAAUzS,KACN,QAAI1K,KAAKod,eAAe1S,OACpB1K,KAAKkd,UAAYld,KAAKkd,UAAU7Z,UAAUqH,IAAI7H,SACvC,IAQfga,UAAU/c,UAAU2d,QAIpB,SAAU/S,KACN,IAAK1K,KAAKmd,gBAAgBzS,KACtB,KAAM,IAAItI,OAAM,aAAgBsI,IAAM,OAGvCmS,aAcP1R,QAAyB,WACzB,QAASA,SAAQ1I,cACbzC,KAAKyC,aAAeA,cAAgB,KAExC,MAAO0I,YAEPG,iBAAkC,WAClC,QAASA,kBAAiBO,SACtB7L,KAAK6L,QAAUA,QAEnB,MAAOP,qBAgDPQ,eAAgC,WAChC,QAASA,gBAAeJ,eAAgBC,aAAcC,cAAeC,QAASnI,QAC1E1D,KAAK2L,aAAeA,aACpB3L,KAAK4L,cAAgBA,cACrB5L,KAAK6L,QAAUA,QACf7L,KAAK0D,OAASA,OACd1D,KAAKoe,gBAAiB,EACtBpe,KAAKqe,SAAW3S,eAAeU,IAAIlM,cAAcoe,aAihBrD,MA5gBAxS,gBAAehM,UAAU2F,MAGzB,WACI,GAAIuV,OAAQhb,KACSue,UAAYve,KAAKwe,mBAAmBxe,KAAKqe,SAAUre,KAAK0D,OAAQ1D,KAAK6L,QAAQvD,KAAMlE,gBACnFqa,UAAYle,kBAAkBsE,IAAI4B,KAAK8X,UAAW,SAAUG,kBAC7E,MAAO1D,OAAM7J,cAAcuN,iBAAkB1D,MAAMnP,QAAQzD,YAAgC4S,MAAMnP,QAAiB,WAEtH,OAAOlL,qBAAoBge,OAAOlY,KAAKgY,UAAW,SAAUxF,GACxD,GAAIA,YAAa3N,kBAKb,MAFA0P,OAAMoD,gBAAiB,EAEhBpD,MAAMrQ,MAAMsO,EAAEpN,QAEzB,IAAIoN,YAAa9N,SACb,KAAM6P,OAAM4D,aAAa3F,EAE7B,MAAMA,MAOdnN,eAAehM,UAAU6K,MAIzB,SAAUqG,MACN,GAAIgK,OAAQhb,KACSue,UAAYve,KAAKwe,mBAAmBxe,KAAKqe,SAAUre,KAAK0D,OAAQsN,KAAK1I,KAAMlE,gBAC3Eya,QAAUte,kBAAkBsE,IAAI4B,KAAK8X,UAAW,SAAUG,kBAC3E,MAAO1D,OAAM7J,cAAcuN,iBAAkB1N,KAAK5I,YAAgC4I,KAAc,WAEpG,OAAOrQ,qBAAoBge,OAAOlY,KAAKoY,QAAS,SAAU5F,GACtD,GAAIA,YAAa9N,SACb,KAAM6P,OAAM4D,aAAa3F,EAE7B,MAAMA,MAOdnN,eAAehM,UAAU8e,aAIzB,SAAU3F,GACN,MAAO,IAAI7W,OAAM,0CAA4C6W,EAAExW,aAAe,MAQlFqJ,eAAehM,UAAUqR,cAMzB,SAAU2N,cAAe1W,YAAaqG,UAClC,GAAqBnG,MAAOwW,cAActc,SAASK,OAAS,EACxD,GAAIiF,qBAAqB4F,MAASA,GAAGtJ,gBAAkB0a,cAAepR,KACtEoR,aACJ,OAAO,IAAIjX,SAAQS,KAAMF,YAAaqG,SACtC,IAAIf,KASR5B,eAAehM,UAAU0e,mBAOzB,SAAUH,SAAUtR,OAAQtK,aAAc0B,QACtC,MAAqC,KAAjC1B,aAAaD,SAASK,QAAgBJ,aAAaM,cAC5CxC,kBAAkBsE,IAAI4B,KAAKzG,KAAK+e,eAAeV,SAAUtR,OAAQtK,cAAe,SAAU6B,UAAY,MAAO,IAAIwD,oBAAoBxD,YAEzItE,KAAKgf,cAAcX,SAAU5b,aAAcsK,OAAQtK,aAAaD,SAAU2B,QAAQ,IAQ7F2H,eAAehM,UAAUif,eAMzB,SAAUV,SAAUtR,OAAQtK,cACxB,GAAIuY,OAAQhb,IACZ,OAAOgG,YAAWvD,aAAa6B,SAAU,SAAUgF,YAAaD,OAAS,MAAO2R,OAAMwD,mBAAmBH,SAAUtR,OAAQ1D,MAAOC,gBAWtIwC,eAAehM,UAAUkf,cASzB,SAAUX,SAAU5b,aAAcsK,OAAQvK,SAAU2B,OAAQia,gBACxD,GAAIpD,OAAQhb,KACSif,QAAU5e,mBAAmB8F,GAAGV,UAAM,GAAQsH,QAC9CmS,iBAAmB3e,kBAAkBsE,IAAI4B,KAAKwY,QAAS,SAAUra,GAClF,GAAqB2Z,WAAYvD,MAAMmE,0BAA0Bd,SAAU5b,aAAcsK,OAAQnI,EAAGpC,SAAU2B,OAAQia,eACtH,OAAOzd,qBAAoBge,OAAOlY,KAAK8X,UAAW,SAAUtF,GACxD,GAAIA,YAAa9N,SACb,MAAO9K,oBAAmB8F,GAAG,KAEjC,MAAM8S,OAGOmG,0BAA4Bxe,wBAAwBgG,UAAUH,KAAKyY,kBACnEG,OAASxe,oBAAoBye,MAAM7Y,KAAK2Y,0BAA2B,SAAUpV,GAAK,QAASA,GAChH,OAAOrJ,qBAAoBge,OAAOlY,KAAK4Y,OAAQ,SAAUpG,EAAGsG,GACxD,GAAItG,YAAanY,sBAAqB0e,YAAyB,eAAXvG,EAAEzO,KAAuB,CACzE,GAAIwQ,MAAMyE,iBAAiBhd,aAAcD,SAAU2B,QAC/C,MAAO9D,oBAAmB8F,GAAG,GAAI2B,wBAErC,MAAM,IAAIqD,SAAQ1I,cAEtB,KAAMwW,MASdnN,eAAehM,UAAU2f,iBAMzB,SAAUhd,aAAcD,SAAU2B,QAC9B,MAA2B,KAApB3B,SAASK,SAAiBJ,aAAa6B,SAASH,SAY3D2H,eAAehM,UAAUqf,0BAUzB,SAAUd,SAAU5b,aAAcsK,OAAQrK,MAAO6R,MAAOpQ,OAAQia,gBAC5D,MAAIjR,WAAUzK,SAAWyB,OACd8G,QAAQxI,kBAEM8K,KAArB7K,MAAM2B,WACCrE,KAAK0f,yBAAyBrB,SAAU5b,aAAcC,MAAO6R,OAEpE6J,gBAAkBpe,KAAKoe,eAChBpe,KAAK2f,uCAAuCtB,SAAU5b,aAAcsK,OAAQrK,MAAO6R,MAAOpQ,QAE9F8G,QAAQxI,eAWnBqJ,eAAehM,UAAU6f,uCASzB,SAAUtB,SAAU5b,aAAcsK,OAAQrK,MAAOF,SAAU2B,QACvD,MAAmB,OAAfzB,MAAMY,KACCtD,KAAK4f,kDAAkDvB,SAAUtR,OAAQrK,MAAOyB,QAEpFnE,KAAK6f,8CAA8CxB,SAAU5b,aAAcsK,OAAQrK,MAAOF,SAAU2B,SAS/G2H,eAAehM,UAAU8f,kDAOzB,SAAUvB,SAAUtR,OAAQrK,MAAOyB,QAC/B,GAAI6W,OAAQhb,KACSqL,QAAUrL,KAAK8f,yBAA6Cpd,MAAiB,cAClG,OAAuBA,OAAiB,WAAEU,WAAW,KAC1CgI,iBAAiBC,SAErB7K,uBAAuBuf,SAAStZ,KAAKzG,KAAKggB,mBAAmBtd,MAAO2I,SAAU,SAAU4U,aAC3F,GAAqB5M,OAAQ,GAAIvL,iBAAgBmY,eACjD,OAAOjF,OAAMgE,cAAcX,SAAUhL,MAAOtG,OAAQkT,YAAa9b,QAAQ,MAYjF2H,eAAehM,UAAU+f,8CASzB,SAAUxB,SAAU5b,aAAcsK,OAAQrK,MAAOF,SAAU2B,QACvD,GAAI6W,OAAQhb,KACR0N,GAAK/C,MAAMlI,aAAcC,MAAOF,UAAW6J,QAAUqB,GAAGrB,QAASC,iBAAmBoB,GAAGpB,iBAAkBC,UAAYmB,GAAGnB,UAAWC,wBAA0BkB,GAAGlB,uBACpK,KAAKH,QACD,MAAOpB,SAAQxI,aACnB,IAAqB4I,SAAUrL,KAAK8f,sBAAsBxT,iBAAqC5J,MAAiB,WAAoB,wBACpI,OAAuBA,OAAiB,WAAEU,WAAW,KAC1CgI,iBAAiBC,SAErB7K,uBAAuBuf,SAAStZ,KAAKzG,KAAKggB,mBAAmBtd,MAAO2I,SAAU,SAAU4U,aAC3F,MAAOjF,OAAMgE,cAAcX,SAAU5b,aAAcsK,OAAQkT,YAAYza,OAAOhD,SAASgB,MAAM+I,YAAapI,QAAQ,MAU1H2H,eAAehM,UAAU4f,yBAOzB,SAAUrB,SAAU6B,gBAAiBxd,MAAOF,UACxC,GAAIwY,OAAQhb,IACZ,IAAmB,OAAf0C,MAAMY,KACN,MAAIZ,OAAM6B,aACChE,kBAAkBsE,IAAI4B,KAAKzG,KAAK2L,aAAawU,KAAK9B,SAAS/F,SAAU5V,OAAQ,SAAU0d,KAE1F,MADA1d,OAAMiS,cAAgByL,IACf,GAAItY,iBAAgBtF,eAG5BnC,mBAAmB8F,GAAG,GAAI2B,iBAAgBtF,aAErD,IAAIkL,IAAK/C,MAAMuV,gBAAiBxd,MAAOF,UAAW6J,QAAUqB,GAAGrB,QAASC,iBAAmBoB,GAAGpB,iBAAkBC,UAAYmB,GAAGnB,SAC/H,KAAKF,QACD,MAAOpB,SAAQiV,gBACnB,IAAqBG,mBAAoB7d,SAASgB,MAAM+I,WACnC+T,aAAetgB,KAAKmV,eAAekJ,SAAU3b,MAClE,OAAOlC,wBAAuBuf,SAAStZ,KAAK6Z,aAAc,SAAUC,cAChE,GAAqBC,aAAcD,aAAanhB,OAC3BqhB,YAAcF,aAAaxT,OAC5CW,GAAK9K,MAAMsd,gBAAiB5T,iBAAkB+T,kBAAmBI,aAAche,aAAeiL,GAAGjL,aAAcgK,eAAiBiB,GAAGjB,cACvI,IAA8B,IAA1BA,eAAe5J,QAAgBJ,aAAaM,cAAe,CAC3D,GAAqB2d,aAAc1F,MAAM+D,eAAeyB,YAAaC,YAAahe,aAClF,OAAOlC,mBAAkBsE,IAAI4B,KAAKia,YAAa,SAAUpc,UAAY,MAAO,IAAIwD,iBAAgBwE,iBAAkBhI,YAEtH,GAA2B,IAAvBmc,YAAY5d,QAA0C,IAA1B4J,eAAe5J,OAC3C,MAAOxC,oBAAmB8F,GAAG,GAAI2B,iBAAgBwE,qBAErD,IAAqBiS,WAAYvD,MAAMgE,cAAcwB,YAAa/d,aAAcge,YAAahU,eAAgBrI,gBAAgB,EAC7H,OAAO7D,mBAAkBsE,IAAI4B,KAAK8X,UAAW,SAAUoC,IACnD,MAAO,IAAI7Y,iBAAgBwE,iBAAiB9G,OAAOmb,GAAGne,UAAWme,GAAGrc,eAShFwH,eAAehM,UAAUqV,eAKzB,SAAUkJ,SAAU3b,OAChB,GAAIsY,OAAQhb,IACZ,OAAI0C,OAAM4B,SAECjE,mBAAmB8F,GAAG,GAAIkW,oBAAmB3Z,MAAM4B,SAAU+Z,WAEpE3b,MAAM6B,iBAEsBgJ,KAAxB7K,MAAMiS,cACCtU,mBAAmB8F,GAAGzD,MAAMiS,eAEhCnU,uBAAuBuf,SAAStZ,KAAKsF,gBAAgBsS,SAAS/F,SAAU5V,OAAQ,SAAUke,YAC7F,MAAIA,YACOrgB,kBAAkBsE,IAAI4B,KAAKuU,MAAMrP,aAAawU,KAAK9B,SAAS/F,SAAU5V,OAAQ,SAAU0d,KAE3F,MADA1d,OAAMiS,cAAgByL,IACfA,MAGR5U,aAAa9I,SAGrBrC,mBAAmB8F,GAAG,GAAIkW,uBAAuBgC,YAO5DvS,eAAehM,UAAUkgB,mBAKzB,SAAUtd,MAAOmJ,SAGb,IAFA,GAAqBvF,QACAqC,EAAIkD,QAAQvD,OACpB,CAET,GADAhC,IAAMA,IAAId,OAAOmD,EAAEnG,UACQ,IAAvBmG,EAAED,iBACF,MAAOrI,oBAAmB8F,GAAGG,IAEjC,IAAIqC,EAAED,iBAAmB,IAAMC,EAAErE,SAASF,gBACtC,MAAOmH,sBAAwC7I,MAAiB,WAEpEiG,GAAIA,EAAErE,SAASF,kBASvB0H,eAAehM,UAAUggB,sBAMzB,SAAUtd,SAAU6B,WAAYrB,WAC5B,MAAOhD,MAAK6gB,4BAA4Bxc,WAAYrE,KAAK4L,cAAcgR,MAAMvY,YAAa7B,SAAUQ,YASxG8I,eAAehM,UAAU+gB,4BAOzB,SAAUxc,WAAYwH,QAASrJ,SAAUQ,WACrC,GAAqB8d,SAAU9gB,KAAK+gB,mBAAmB1c,WAAYwH,QAAQvD,KAAM9F,SAAUQ,UAC3F,OAAO,IAAI6E,SAAQiZ,QAAS9gB,KAAKghB,kBAAkBnV,QAAQzD,YAAapI,KAAK6L,QAAQzD,aAAcyD,QAAQ4C,WAO/G3C,eAAehM,UAAUkhB,kBAKzB,SAAUC,iBAAkBC,cACxB,GAAqB5a,OAWrB,OAVAX,SAAQsb,iBAAkB,SAAUnX,EAAGvD,GAEnC,GADoD,gBAANuD,IAAkBA,EAAE1G,WAAW,KACxD,CACjB,GAAqB+d,YAAarX,EAAEzG,UAAU,EAC9CiD,KAAIC,GAAK2a,aAAaC,gBAGtB7a,KAAIC,GAAKuD,IAGVxD,KASXwF,eAAehM,UAAUihB,mBAOzB,SAAU1c,WAAYgP,MAAO7Q,SAAUQ,WACnC,GAAIgY,OAAQhb,KACSohB,gBAAkBphB,KAAKqhB,eAAehd,WAAYgP,MAAM7Q,SAAUA,SAAUQ,WAC5EsB,WAIrB,OAHAqB,SAAQ0N,MAAM/O,SAAU,SAAU+E,MAAOmB,MACrClG,SAASkG,MAAQwQ,MAAM+F,mBAAmB1c,WAAYgF,MAAO7G,SAAUQ,aAEpE,GAAI8E,iBAAgBsZ,gBAAiB9c,WAShDwH,eAAehM,UAAUuhB,eAOzB,SAAUhd,WAAYid,mBAAoBC,eAAgBve,WACtD,GAAIgY,OAAQhb,IACZ,OAAOshB,oBAAmBzc,IAAI,SAAUmF,GACpC,MAAOA,GAAE1G,KAAKF,WAAW,KAAO4X,MAAMwG,aAAand,WAAY2F,EAAGhH,WAC9DgY,MAAMyG,aAAazX,EAAGuX,mBASlCzV,eAAehM,UAAU0hB,aAMzB,SAAUnd,WAAYqd,qBAAsB1e,WACxC,GAAqB2e,KAAM3e,UAAU0e,qBAAqBpe,KAAKD,UAAU,GACzE,KAAKse,IACD,KAAM,IAAIvf,OAAM,uBAAyBiC,WAAa,mBAAqBqd,qBAAqBpe,KAAO,KAC3G,OAAOqe,MAOX7V,eAAehM,UAAU2hB,aAKzB,SAAUC,qBAAsBH,gBAE5B,IAAK,GADgBK,KAAM,EAClB5U,GAAK,EAAG6U,iBAAmBN,eAAgBvU,GAAK6U,iBAAiBhf,OAAQmK,KAAM,CACpF,GAAIhD,GAAI6X,iBAAiB7U,GACzB,IAAIhD,EAAE1G,OAASoe,qBAAqBpe,KAEhC,MADAie,gBAAeO,OAAOF,KACf5X,CAEX4X,OAEJ,MAAOF,uBAEJ5V,kBAgKPiW,KAAsB,WACtB,QAASA,MAAKzZ,MACVtI,KAAK4Q,MAAQtI,KA+FjB,MA7FA1G,QAAOsa,eAAe6F,KAAKjiB,UAAW,QAClCsM,IAGA,WAAc,MAAOpM,MAAK4Q,MAAMtJ,OAChC6U,YAAY,EACZC,cAAc,IAUlB2F,KAAKjiB,UAAUyQ,OAKf,SAAUiK,GACN,GAAqBhR,GAAIxJ,KAAKkP,aAAasL,EAC3C,OAAOhR,GAAE3G,OAAS,EAAI2G,EAAEA,EAAE3G,OAAS,GAAK,MAU5Ckf,KAAKjiB,UAAUwE,SAKf,SAAUkW,GACN,GAAqBhF,GAAIhI,SAASgN,EAAGxa,KAAK4Q,MAC1C,OAAO4E,GAAIA,EAAElR,SAASO,IAAI,SAAU2V,GAAK,MAAOA,GAAElT,YAUtDya,KAAKjiB,UAAUkiB,WAKf,SAAUxH,GACN,GAAqBhF,GAAIhI,SAASgN,EAAGxa,KAAK4Q,MAC1C,OAAO4E,IAAKA,EAAElR,SAASzB,OAAS,EAAI2S,EAAElR,SAAS,GAAGgD,MAAQ,MAU9Dya,KAAKjiB,UAAUmiB,SAKf,SAAUzH,GACN,GAAqBhR,GAAIoE,SAAS4M,EAAGxa,KAAK4Q,MAC1C,OAAIpH,GAAE3G,OAAS,KAEU2G,EAAEA,EAAE3G,OAAS,GAAGyB,SAASO,IAAI,SAAU8D,GAAK,MAAOA,GAAErB,QACrE4a,OAAO,SAAUC,IAAM,MAAOA,MAAO3H,KAUlDuH,KAAKjiB,UAAUoP,aAKf,SAAUsL,GAAK,MAAO5M,UAAS4M,EAAGxa,KAAK4Q,OAAO/L,IAAI,SAAUmF,GAAK,MAAOA,GAAE1C,SACnEya,QAsCPlT,SAA0B,WAC1B,QAASA,UAASvH,MAAOhD,UACrBtE,KAAKsH,MAAQA,MACbtH,KAAKsE,SAAWA,SASpB,MAJAuK,UAAS/O,UAAU4V,SAGnB,WAAc,MAAO,YAAc1V,KAAKsH,MAAQ,KACzCuH,YAoDPD,YAA6B,SAAUiM,QAGvC,QAASjM,aAAYtG,KAAM2F,UACvB,GAAI+M,OAAQH,OAAOpU,KAAKzG,KAAMsI,OAAStI,IAGvC,OAFAgb,OAAM/M,SAAWA,SACjB0B,eAAgC,MAASrH,MAClC0S,MASX,MAfA1Z,WAAUsN,YAAaiM,QAWvBjM,YAAY9O,UAAU4V,SAGtB,WAAc,MAAO1V,MAAKiO,SAASyH,YAC5B9G,aACTmT,MAmDEpT,eAAgC,WAEhC,QAASA,gBAAewB,IAAKpO,OAAQqG,YAAaqG,SAAUgB,KAAMtL,OAAQD,UAAWke,gBACjFpiB,KAAKmQ,IAAMA,IACXnQ,KAAK+B,OAASA,OACd/B,KAAKoI,YAAcA,YACnBpI,KAAKyO,SAAWA,SAChBzO,KAAKyP,KAAOA,KACZzP,KAAKmE,OAASA,OACdnE,KAAKkE,UAAYA,UACjBlE,KAAKkQ,gBAAkBkS,eAkG3B,MAhGAxgB,QAAOsa,eAAevN,eAAe7O,UAAW,eAE5CsM,IAIA,WAAc,MAAOpM,MAAKkQ,gBAAgBb,aAC1C8M,YAAY,EACZC,cAAc,IAElBxa,OAAOsa,eAAevN,eAAe7O,UAAW,QAE5CsM,IAIA,WAAc,MAAOpM,MAAK6P,aAAavH,MACvC6T,YAAY,EACZC,cAAc,IAElBxa,OAAOsa,eAAevN,eAAe7O,UAAW,UAE5CsM,IAIA,WAAc,MAAOpM,MAAK6P,aAAaU,OAAOvQ,OAC9Cmc,YAAY,EACZC,cAAc,IAElBxa,OAAOsa,eAAevN,eAAe7O,UAAW,cAE5CsM,IAIA,WAAc,MAAOpM,MAAK6P,aAAamS,WAAWhiB,OAClDmc,YAAY,EACZC,cAAc,IAElBxa,OAAOsa,eAAevN,eAAe7O,UAAW,YAE5CsM,IAIA,WAAc,MAAOpM,MAAK6P,aAAavL,SAAStE,OAChDmc,YAAY,EACZC,cAAc,IAElBxa,OAAOsa,eAAevN,eAAe7O,UAAW,gBAE5CsM,IAIA,WAAc,MAAOpM,MAAK6P,aAAaX,aAAalP,OACpDmc,YAAY,EACZC,cAAc,IAElBxa,OAAOsa,eAAevN,eAAe7O,UAAW,YAC5CsM,IAGA,WAII,MAHKpM,MAAKqiB,YACNriB,KAAKqiB,UAAY9hB,kBAAkBsE,IAAI4B,KAAKzG,KAAK+B,OAAQ,SAAUyH,GAAK,MAAO1H,mBAAkB0H,MAE9FxJ,KAAKqiB,WAEhBlG,YAAY,EACZC,cAAc,IAElBxa,OAAOsa,eAAevN,eAAe7O,UAAW,iBAC5CsM,IAGA,WAKI,MAJKpM,MAAKsc,iBACNtc,KAAKsc,eACD/b,kBAAkBsE,IAAI4B,KAAKzG,KAAKoI,YAAa,SAAUoB,GAAK,MAAO1H,mBAAkB0H,MAEtFxJ,KAAKsc,gBAEhBH,YAAY,EACZC,cAAc,IAKlBzN,eAAe7O,UAAU4V,SAGzB,WACI,MAAO1V,MAAKiO,SAAWjO,KAAKiO,SAASyH,WAAa,UAAY1V,KAAKkQ,gBAAkB,KAElFvB,kBAoEPG,uBAAwC,WAExC,QAASA,wBAAuBqB,IAAKpO,OAAQqG,YAAaqG,SAAUgB,KAAMtL,OAAQD,UAAWmL,YAAaiT,WAAYC,cAAe5a,SACjI3H,KAAKmQ,IAAMA,IACXnQ,KAAK+B,OAASA,OACd/B,KAAKoI,YAAcA,YACnBpI,KAAKyO,SAAWA,SAChBzO,KAAKyP,KAAOA,KACZzP,KAAKmE,OAASA,OACdnE,KAAKkE,UAAYA,UACjBlE,KAAKqP,YAAcA,YACnBrP,KAAKkT,YAAcoP,WACnBtiB,KAAKiT,eAAiBsP,cACtBviB,KAAKwiB,SAAW7a,QAyFpB,MAvFA/F,QAAOsa,eAAepN,uBAAuBhP,UAAW,QAEpDsM,IAIA,WAAc,MAAOpM,MAAK6P,aAAavH,MACvC6T,YAAY,EACZC,cAAc,IAElBxa,OAAOsa,eAAepN,uBAAuBhP,UAAW,UAEpDsM,IAIA,WAAc,MAAOpM,MAAK6P,aAAaU,OAAOvQ,OAC9Cmc,YAAY,EACZC,cAAc,IAElBxa,OAAOsa,eAAepN,uBAAuBhP,UAAW,cAEpDsM,IAIA,WAAc,MAAOpM,MAAK6P,aAAamS,WAAWhiB,OAClDmc,YAAY,EACZC,cAAc,IAElBxa,OAAOsa,eAAepN,uBAAuBhP,UAAW,YAEpDsM,IAIA,WAAc,MAAOpM,MAAK6P,aAAavL,SAAStE,OAChDmc,YAAY,EACZC,cAAc,IAElBxa,OAAOsa,eAAepN,uBAAuBhP,UAAW,gBAEpDsM,IAIA,WAAc,MAAOpM,MAAK6P,aAAaX,aAAalP,OACpDmc,YAAY,EACZC,cAAc,IAElBxa,OAAOsa,eAAepN,uBAAuBhP,UAAW,YACpDsM,IAGA,WAII,MAHKpM,MAAKqiB,YACNriB,KAAKqiB,UAAYvgB,kBAAkB9B,KAAK+B,SAErC/B,KAAKqiB,WAEhBlG,YAAY,EACZC,cAAc,IAElBxa,OAAOsa,eAAepN,uBAAuBhP,UAAW,iBACpDsM,IAGA,WAII,MAHKpM,MAAKsc,iBACNtc,KAAKsc,eAAiBxa,kBAAkB9B,KAAKoI,cAE1CpI,KAAKsc,gBAEhBH,YAAY,EACZC,cAAc,IAKlBtN,uBAAuBhP,UAAU4V,SAGjC,WAGI,MAAO,cAFoB1V,KAAKmQ,IAAItL,IAAI,SAAU1B,SAAW,MAAOA,SAAQuS,aAAehM,KAAK,KAEnE,aADE1J,KAAKqP,YAAcrP,KAAKqP,YAAY/L,KAAO,IACrB,MAElDwL,0BA2BPC,oBAAqC,SAAU8L,QAG/C,QAAS9L,qBAAoBoB,IAAK7H,MAC9B,GAAI0S,OAAQH,OAAOpU,KAAKzG,KAAMsI,OAAStI,IAGvC,OAFAgb,OAAM7K,IAAMA,IACZR,eAAgC,MAASrH,MAClC0S,MASX,MAfA1Z,WAAUyN,oBAAqB8L,QAW/B9L,oBAAoBjP,UAAU4V,SAG9B,WAAc,MAAO5F,eAAc9P,KAAK4Q,QACjC7B,qBACTgT,MAwOEvP,WAA4B,WAC5B,QAASA,YAAWE,WAAYD,mBAAoBrB,UAIhD,GAHApR,KAAK0S,WAAaA,WAClB1S,KAAKyS,mBAAqBA,mBAC1BzS,KAAKoR,SAAWA,SACZsB,YAActB,SAASvO,OAAS,GAAKgP,eAAeT,SAAS,IAC7D,KAAM,IAAIhP,OAAM,6CAEpB,IAAqBqgB,eAAgBrR,SAASsR,KAAK,SAAU/Z,GAAK,MAAoB,gBAANA,IAAuB,MAALA,GAAaA,EAAEoJ,SACjH,IAAI0Q,eAAiBA,gBAAkB/c,OAAO0L,UAC1C,KAAM,IAAIhP,OAAM,2CAYxB,MANAoQ,YAAW1S,UAAUyR,OAGrB,WACI,MAAOvR,MAAK0S,YAAuC,IAAzB1S,KAAKoR,SAASvO,QAAoC,KAApB7C,KAAKoR,SAAS,IAEnEoB,cAoDPQ,SAA0B,WAC1B,QAASA,UAASvQ,aAAciP,gBAAiBzO,OAC7CjD,KAAKyC,aAAeA,aACpBzC,KAAK0R,gBAAkBA,gBACvB1R,KAAKiD,MAAQA,MAEjB,MAAO+P,aAsOP2P,YAA6B,WAC7B,QAASA,aAAYrf,MACjBtD,KAAKsD,KAAOA,KACZtD,KAAK0C,MAAQ1C,KAAKsD,KAAKtD,KAAKsD,KAAKT,OAAS,GAE9C,MAAO8f,gBAEPC,cAA+B,WAC/B,QAASA,eAAc1e,UAAWxB,OAC9B1C,KAAKkE,UAAYA,UACjBlE,KAAK0C,MAAQA,MAEjB,MAAOkgB,kBAKPC,cAA+B,WAC/B,QAASA,eAAcC,OAAQtT,KAAM9D,eAAgBqX,cACjD/iB,KAAK8iB,OAASA,OACd9iB,KAAKwP,KAAOA,KACZxP,KAAK0L,eAAiBA,eACtB1L,KAAK+iB,aAAeA,aACpB/iB,KAAKgjB,qBACLhjB,KAAKijB,uBAudT,MAjdAJ,eAAc/iB,UAAUojB,WAIxB,SAAUC,gBACN,GAAqBC,YAAapjB,KAAK8iB,OAAOlS,MACzByS,SAAWrjB,KAAKwP,KAAOxP,KAAKwP,KAAKoB,MAAQ,IAC9D5Q,MAAKsjB,sBAAsBF,WAAYC,SAAUF,gBAAiBC,WAAW9b,SAKjFub,cAAc/iB,UAAUyjB,YAGxB,WACI,GAAIvI,OAAQhb,IACZ,KAAKA,KAAKwjB,mBAAqBxjB,KAAKyjB,eAChC,MAAOpjB,oBAAmB8F,IAAG,EAEjC,IAAqBud,gBAAiB1jB,KAAK2jB,wBAC3C,OAAOnjB,wBAAuBuf,SAAStZ,KAAKid,eAAgB,SAAUE,eAAiB,MAAOA,eAAgB5I,MAAM6I,uBAAyBxjB,mBAAmB8F,IAAG,MAMvK0c,cAAc/iB,UAAUgkB,YAIxB,SAAU7U,2BACN,GAAI+L,OAAQhb;cACZ,KAAKA,KAAKyjB,eACN,MAAOpjB,oBAAmB8F,GAAG,KACjC,IAAqB4d,SAAUrjB,qBAAqBuL,KAAKjM,KAAKgjB,mBACzCgB,eAAiB1jB,wBAAwB2jB,UAAUxd,KAAKsd,QAAS,SAAUG,OAAS,MAAOlJ,OAAMmJ,WAAWD,MAAMxhB,MAAOuM,4BAC9I,OAAO9N,sBAAqBoO,OAAO9I,KAAKud,eAAgB,SAAUzE,EAAG9d,IAAM,MAAO8d,MAKtFsD,cAAc/iB,UAAU0jB,eAGxB,WAAc,MAA2C,KAApCxjB,KAAKijB,oBAAoBpgB,QAI9CggB,cAAc/iB,UAAU2jB,aAGxB,WAAc,MAAyC,KAAlCzjB,KAAKgjB,kBAAkBngB,QAU5CggB,cAAc/iB,UAAUwjB,sBASxB,SAAUc,WAAYC,SAAUjM,SAAUkM,YACtC,GAAItJ,OAAQhb,KACSukB,aAAezW,kBAAkBuW,SAEtDD,YAAW9f,SAASqB,QAAQ,SAAUgD,GAClCqS,MAAMwJ,iBAAiB7b,EAAG4b,aAAa5b,EAAErB,MAAMnD,QAASiU,SAAUkM,WAAW9e,QAAQmD,EAAErB,eAChFid,cAAa5b,EAAErB,MAAMnD,UAGhCwB,QAAQ4e,aAAc,SAAUza,EAAGvD,GAC/B,MAAOyU,OAAMyJ,8BAA8B3a,EAAoB,SAAa4a,WAAWne,OAY/Fsc,cAAc/iB,UAAU0kB,iBASxB,SAAUJ,WAAYC,SAAUlB,eAAgBmB,YAC5C,GAAqBxB,QAASsB,WAAW9c,MACpBkI,KAAO6U,SAAWA,SAAS/c,MAAQ,KACnCqd,QAAUxB,eAAiBA,eAAeuB,WAAWN,WAAW9c,MAAMnD,QAAU,IAErG,IAAIqL,MAAQsT,OAAOzT,cAAgBG,KAAKH,YAAa,CACjD,GAAqBuV,6BAA8B5kB,KAAK4kB,4BAA4BpV,KAAMsT,OAA2BA,OAAmB,YAAE+B,sBAiB1I,IAhBID,4BACA5kB,KAAKgjB,kBAAkBtc,KAAK,GAAIic,aAAY2B,cAI5CxB,OAAOrT,KAAOD,KAAKC,KACnBqT,OAAOpT,cAAgBF,KAAKE,eAG5BoT,OAAO5e,UACPlE,KAAKsjB,sBAAsBc,WAAYC,SAAUM,QAAUA,QAAQrgB,SAAW,KAAMggB,YAIpFtkB,KAAKsjB,sBAAsBc,WAAYC,SAAUlB,eAAgBmB,YAEjEM,4BAA6B,CAC7B,GAAqBzgB,QAA6C,QAAmB,MACrFnE,MAAKijB,oBAAoBvc,KAAK,GAAIkc,eAAcze,OAAOD,UAAWsL,YAIlEA,OACAxP,KAAKykB,8BAA8BJ,SAAUM,SAEjD3kB,KAAKgjB,kBAAkBtc,KAAK,GAAIic,aAAY2B,aAExCxB,OAAO5e,UACPlE,KAAKsjB,sBAAsBc,WAAY,KAAMO,QAAUA,QAAQrgB,SAAW,KAAMggB,YAIhFtkB,KAAKsjB,sBAAsBc,WAAY,KAAMjB,eAAgBmB,aAUzEzB,cAAc/iB,UAAU8kB,4BAMxB,SAAUpV,KAAMsT,OAAQgC,MACpB,OAAQA,MACJ,IAAK,SACD,OAAO,CACX,KAAK,4BACD,OAAQ1U,0BAA0BZ,KAAMsT,UACnC7d,aAAauK,KAAKpH,YAAa0a,OAAO1a,YAC/C,KAAK,eACL,QACI,OAAQgI,0BAA0BZ,KAAMsT,UAQpDD,cAAc/iB,UAAU2kB,8BAKxB,SAAU/hB,MAAOiiB,SACb,GAAI3J,OAAQhb,KACSsE,SAAWwJ,kBAAkBpL,OAC7BkC,EAAIlC,MAAM4E,KAC/B3B,SAAQrB,SAAU,SAAUmJ,KAAMsX,WACzBngB,EAAEV,UAGEygB,QACL3J,MAAMyJ,8BAA8BhX,KAAMkX,QAAQrgB,SAASogB,WAAWK,YAGtE/J,MAAMyJ,8BAA8BhX,KAAM,MAN1CuN,MAAMyJ,8BAA8BhX,KAAMkX,WAS7C/f,EAAEV,WAGEygB,SAAWA,QAAQxgB,QAAUwgB,QAAQxgB,OAAO6gB,YACjDhlB,KAAKijB,oBAAoBvc,KAAK,GAAIkc,eAAc+B,QAAQxgB,OAAOD,UAAWU,IAH1E5E,KAAKijB,oBAAoBvc,KAAK,GAAIkc,eAAc,KAAMhe,KAY9Die,cAAc/iB,UAAU6jB,uBAGxB,WACI,GAAI3I,OAAQhb,KACS+jB,QAAUrjB,qBAAqBuL,KAAKjM,KAAKijB,qBACzCe,eAAiBxjB,uBAAuBuf,SAAStZ,KAAKsd,QAAS,SAAUG,OAAS,MAAOlJ,OAAMiK,iBAAiBf,MAAMhgB,UAAWggB,MAAMxhB,QAC5J,OAAO1B,qBAAoBmG,MAAMV,KAAKud,eAAgB,SAAU5c,QAAU,OAAkB,IAAXA,UAKrFyb,cAAc/iB,UAAU+jB,qBAGxB,WACI,GAAI7I,OAAQhb,KACS+jB,QAAUrjB,qBAAqBuL,KAAKjM,KAAKgjB,mBACzCgB,eAAiB1jB,wBAAwB2jB,UAAUxd,KAAKsd,QAAS,SAAUG,OAC5F,MAAOnd,gBAAerG,qBAAqBuL,MACvC+O,MAAMkK,yBAAyBhB,MAAMxhB,MAAM6N,QAASyK,MAAMmK,oBAAoBjB,MAAMxhB,OACpFsY,MAAMoK,oBAAoBlB,MAAM5gB,MAAO0X,MAAMqK,eAAenB,MAAMxhB,WAG1E,OAAO1B,qBAAoBmG,MAAMV,KAAKud,eAAgB,SAAU5c,QAAU,OAAkB,IAAXA,UAarFyb,cAAc/iB,UAAUqlB,oBAUxB,SAAUlX,UAIN,MAHiB,QAAbA,UAAqBjO,KAAK+iB,cAC1B/iB,KAAK+iB,aAAa,GAAIjH,iBAAgB7N,WAEnC5N,mBAAmB8F,IAAG,IAYjC0c,cAAc/iB,UAAUolB,yBAUxB,SAAUjX,UAIN,MAHiB,QAAbA,UAAqBjO,KAAK+iB,cAC1B/iB,KAAK+iB,aAAa,GAAInH,sBAAqB3N,WAExC5N,mBAAmB8F,IAAG,IAMjC0c,cAAc/iB,UAAUulB,eAIxB,SAAUvC,QACN,GAAI9H,OAAQhb,KACSslB,YAAcxC,OAAOzT,YAAcyT,OAAOzT,YAAYiW,YAAc,IACzF,OAAKA,cAAsC,IAAvBA,YAAYziB,OAazBkE,eAXoBxG,kBAAkBsE,IAAI4B,KAAK/F,qBAAqBuL,KAAKqZ,aAAc,SAAU3c,GACpG,GACqB4c,YADApZ,MAAQ6O,MAAMwK,SAAS7c,EAAGma,OAQ/C,OALIyC,YAAale,mBADb8E,MAAMmZ,YAC0BnZ,MAAMmZ,YAAYxC,OAAQ9H,MAAM8H,QAGhC3W,MAAM2W,OAAQ9H,MAAM8H,SAEjDjiB,oBAAoBye,MAAM7Y,KAAK8e,eAV/BllB,mBAAmB8F,IAAG,IAkBrC0c,cAAc/iB,UAAUslB,oBAIxB,SAAU9hB,MACN,GAAI0X,OAAQhb,KACS8iB,OAASxf,KAAKA,KAAKT,OAAS,GAC5B4iB,uBAAyBniB,KAAKE,MAAM,EAAGF,KAAKT,OAAS,GACrE6iB,UACA7gB,IAAI,SAAU2E,GAAK,MAAOwR,OAAM2K,wBAAwBnc,KACxD0Y,OAAO,SAAU3C,GAAK,MAAa,QAANA,GAClC,OAAOxY,gBAAexG,kBAAkBsE,IAAI4B,KAAK/F,qBAAqBuL,KAAKwZ,wBAAyB,SAAUlkB,GAY1G,MAAOwF,gBAXoBxG,kBAAkBsE,IAAI4B,KAAK/F,qBAAqBuL,KAAK1K,EAAEqkB,QAAS,SAAUjd,GACjG,GACqB4c,YADApZ,MAAQ6O,MAAMwK,SAAS7c,EAAGpH,EAAEkM,KAQjD,OALI8X,YAAale,mBADb8E,MAAM0Z,iBAC0B1Z,MAAM0Z,iBAAiB/C,OAAQ9H,MAAM8H,QAGrC3W,MAAM2W,OAAQ9H,MAAM8H,SAEjDjiB,oBAAoBye,MAAM7Y,KAAK8e,mBASlD1C,cAAc/iB,UAAU6lB,wBAIxB,SAAUnc,GACN,GAAqBqc,kBAAmBrc,EAAE6F,YAAc7F,EAAE6F,YAAYwW,iBAAmB,IACzF,OAAKA,mBAAgD,IAA5BA,iBAAiBhjB,QAEjC4K,KAAMjE,EAAGoc,OAAQC,kBADf,MAQfhD,cAAc/iB,UAAUmlB,iBAKxB,SAAU/gB,UAAWsL,MACjB,GAAIwL,OAAQhb,KACS4jB,cAAgBpU,MAAQA,KAAKH,YAAcG,KAAKH,YAAYuU,cAAgB,IACjG,KAAKA,eAA0C,IAAzBA,cAAc/gB,OAChC,MAAOxC,oBAAmB8F,IAAG,EACjC,IAAqBud,gBAAiBljB,uBAAuBuf,SAAStZ,KAAK/F,qBAAqBuL,KAAK2X,eAAgB,SAAUjb,GAC3H,GACqB4c,YADApZ,MAAQ6O,MAAMwK,SAAS7c,EAAG6G,KAS/C,OANI+V,YACIle,mBAFJ8E,MAAMyX,cAEiBzX,MAAMyX,cAAc1f,UAAWsL,KAAMwL,MAAMxL,KAAMwL,MAAM8H,QAG9C3W,MAAMjI,UAAWsL,KAAMwL,MAAMxL,KAAMwL,MAAM8H,SAEtEjiB,oBAAoBye,MAAM7Y,KAAK8e,aAE1C,OAAOvkB,qBAAoBmG,MAAMV,KAAKid,eAAgB,SAAUtc,QAAU,OAAkB,IAAXA,UAOrFyb,cAAc/iB,UAAUqkB,WAKxB,SAAUrB,OAAQ7T,2BACd,GAAqBtH,SAAUmb,OAAON,QACtC,OAAOjiB,mBAAkBsE,IAAI4B,KAAKzG,KAAK8lB,YAAYne,QAASmb,QAAS,SAAUiD,cAG3E,MAFAjD,QAAOpT,cAAgBqW,aACvBjD,OAAOrT,KAAO3K,YAAage,OAAOrT,KAAMT,2BAA2B8T,OAAQ7T,2BAA2BtH,SAC/F,QAQfkb,cAAc/iB,UAAUgmB,YAKxB,SAAUne,QAASmb,QACf,GAAI9H,OAAQhb,KACSmF,KAAOvD,OAAOuD,KAAKwC,QACxC,IAAoB,IAAhBxC,KAAKtC,OACL,MAAOxC,oBAAmB8F,MAE9B,IAAoB,IAAhBhB,KAAKtC,OAAc,CACnB,GAAqBmjB,OAAQ7gB,KAAK,EAClC,OAAO5E,mBAAkBsE,IAAI4B,KAAKzG,KAAKimB,YAAYte,QAAQqe,OAAQlD,QAAS,SAAUxb,OAClF,MAAOoG,OAASA,GAAGsY,OAAS1e,MAAOoG,EACnC,IAAIA,MAGZ,GAAqB+B,SACAyW,kBAAoB1lB,uBAAuBuf,SAAStZ,KAAK/F,qBAAqBuL,KAAK9G,MAAO,SAAUE,KACrH,MAAO9E,mBAAkBsE,IAAI4B,KAAKuU,MAAMiL,YAAYte,QAAQtC,KAAMyd,QAAS,SAAUxb,OAEjF,MADAmI,MAAKpK,KAAOiC,MACLA,SAGf,OAAO/G,mBAAkBsE,IAAI4B,KAAKxF,mBAAmB6F,KAAKL,KAAKyf,mBAAoB,WAAc,MAAOzW,SAO5GoT,cAAc/iB,UAAUmmB,YAKxB,SAAU/Z,eAAgB4W,QACtB,GAAqBqD,UAAWnmB,KAAKwlB,SAAStZ,eAAgB4W,OAC9D,OAA0Bzb,oBAAnB8e,SAASxe,QAA6Bwe,SAASxe,QAAQmb,OAAQ9iB,KAAK8iB,QACpDqD,SAASrD,OAAQ9iB,KAAK8iB,UAOjDD,cAAc/iB,UAAU0lB,SAKxB,SAAUY,MAAOnY,UACb,GAAqBvK,QAASgR,oBAAoBzG,SAElD,QADgCvK,OAASA,OAAOtE,OAAOkZ,SAAWtY,KAAK0L,gBACvDU,IAAIga,QAEjBvD,iBA4BPxN,UAA2B,WAC3B,QAASlK,YAET,MAAOA,YAeP2J,WAA4B,WAC5B,QAASA,YAAWD,kBAAmBnR,OAAQmI,QAASsE,IAAKlB,2BACzDjP,KAAK6U,kBAAoBA,kBACzB7U,KAAK0D,OAASA,OACd1D,KAAK6L,QAAUA,QACf7L,KAAKmQ,IAAMA,IACXnQ,KAAKiP,0BAA4BA,0BAkKrC,MA7JA6F,YAAWhV,UAAU8U,UAGrB,WACI,IACI,GAAqB8J,kBAAmB3I,QAAQ/V,KAAK6L,QAAQvD,WAActI,KAAK0D,QAAQjB,aACnE6B,SAAWtE,KAAKqmB,oBAAoBrmB,KAAK0D,OAAQgb,iBAAkBta,gBACnEkE,KAAO,GAAIwG,2BAA2BlN,OAAO0kB,WAAY1kB,OAAO0kB,OAAOtmB,KAAK6L,QAAQzD,aAAiCpI,KAAK6L,QAAiB,YAAOzH,eAAgBpE,KAAK6U,kBAAmB,KAAM7U,KAAK6L,QAAQvD,MAAO,MACpNie,SAAW,GAAI1X,UAASvG,KAAMhE,UAC9BkiB,WAAa,GAAIzX,qBAAoB/O,KAAKmQ,IAAKoW,SAEpE,OADAvmB,MAAKymB,qBAAqBD,WAAW5V,OAC9BvQ,mBAAmB8F,GAAGqgB,YAEjC,MAAwBvN,GACpB,MAAO,IAAIxY,iBAAgBZ,WAAW,SAAUqL,KAAO,MAAOA,KAAI/I,MAAM8W,OAOhFnE,WAAWhV,UAAU2mB,qBAIrB,SAAUC,WACN,GAAI1L,OAAQhb,KACS0C,MAAQgkB,UAAUpf,MAClB1D,EAAIoL,2BAA2BtM,MAAO1C,KAAKiP,0BAChEvM,OAAMX,OAASH,OAAO0kB,OAAO1iB,EAAE7B,QAC/BW,MAAM+M,KAAO7N,OAAO0kB,OAAO1iB,EAAE6L,MAC7BiX,UAAUpiB,SAASqB,QAAQ,SAAU6P,GAAK,MAAOwF,OAAMyL,qBAAqBjR,MAQhFV,WAAWhV,UAAUumB,oBAMrB,SAAU3iB,OAAQjB,aAAc0B,QAC5B,MAAqC,KAAjC1B,aAAaD,SAASK,QAAgBJ,aAAaM,cAC5C/C,KAAK0R,gBAAgBhO,OAAQjB,cAEjCzC,KAAK2mB,eAAejjB,OAAQjB,aAAcA,aAAaD,SAAU2B,SAO5E2Q,WAAWhV,UAAU4R,gBAKrB,SAAUhO,OAAQjB,cACd,GAAIuY,OAAQhb,KACSsE,SAAW8E,qBAAqB3G,aAAc,SAAU4G,MAAOC,aAAe,MAAO0R,OAAMqL,oBAAoB3iB,OAAQ2F,MAAOC,cAGnJ,OAFAgM,2BAA0BhR,UAC1ByQ,4BAA4BzQ,UACrBA,UASXwQ,WAAWhV,UAAU6mB,eAOrB,SAAUjjB,OAAQjB,aAAcD,SAAU2B,QACtC,IAAK,GAAI6I,IAAK,EAAG4Z,SAAWljB,OAAQsJ,GAAK4Z,SAAS/jB,OAAQmK,KAAM,CAC5D,GAAIpI,GAAIgiB,SAAS5Z,GACjB,KACI,MAAOhN,MAAK6mB,2BAA2BjiB,EAAGnC,aAAcD,SAAU2B,QAEtE,MAAwB8U,GACpB,KAAMA,YAAa5D,YACf,KAAM4D,IAGlB,GAAIjZ,KAAKyf,iBAAiBhd,aAAcD,SAAU2B,QAC9C,QAEJ,MAAM,IAAIkR,YAQdP,WAAWhV,UAAU2f,iBAMrB,SAAUhd,aAAcD,SAAU2B,QAC9B,MAA2B,KAApB3B,SAASK,SAAiBJ,aAAa6B,SAASH,SAS3D2Q,WAAWhV,UAAU+mB,2BAOrB,SAAUnkB,MAAOokB,WAAYtkB,SAAU2B,QACnC,GAAIzB,MAAM2B,WACN,KAAM,IAAIgR,UACd,KAAK3S,MAAMyB,QAAUC,kBAAoBD,OACrC,KAAM,IAAIkR,UACd,IAAqBpH,UACA3B,oBACA+T,oBACrB,IAAmB,OAAf3d,MAAMY,KAAe,CACrB,GAAqBvB,QAASS,SAASK,OAAS,EAAuB6C,OAAOlD,UAAY2G,aAC1F8E,UAAW,GAAIa,wBAAuBtM,SAAUT,OAAQH,OAAO0kB,OAAOtmB,KAAK6L,QAAQzD,aAAiCpI,KAAK6L,QAAiB,SAAG4K,QAAQ/T,OAAQyB,OAA2BzB,MAAgB,UAAGA,MAAOiT,sBAAsBmR,YAAajR,kBAAkBiR,YAActkB,SAASK,OAAQ6T,WAAWhU,YAEhT,CACD,GAAqB0E,QAASgO,QAAQ0R,WAAYpkB,MAAOF,SACzD8J,kBAAmBlF,OAAOkF,iBAC1B+T,kBAAoB7d,SAASgB,MAAM4D,OAAOmF,WAC1C0B,SAAW,GAAIa,wBAAuBxC,iBAAkBlF,OAAO+B,WAAYvH,OAAO0kB,OAAOtmB,KAAK6L,QAAQzD,aAAiCpI,KAAK6L,QAAiB,SAAG4K,QAAQ/T,OAAQyB,OAA2BzB,MAAgB,UAAGA,MAAOiT,sBAAsBmR,YAAajR,kBAAkBiR,YAAcxa,iBAAiBzJ,OAAQ6T,WAAWhU,QAEhV,GAAqB+d,aAActL,eAAezS,OAC9CgL,GAAKqI,QAAQ+Q,WAAYxa,iBAAkB+T,kBAAmBI,aAAche,aAAeiL,GAAGjL,aAAcgK,eAAiBiB,GAAGjB,cACpI,IAA8B,IAA1BA,eAAe5J,QAAgBJ,aAAaM,cAAe,CAC3D,GAAqB8G,YAAa7J,KAAK0R,gBAAgB+O,YAAahe,aACpE,QAAQ,GAAIoM,UAASZ,SAAUpE,aAEnC,GAA2B,IAAvB4W,YAAY5d,QAA0C,IAA1B4J,eAAe5J,OAC3C,OAAQ,GAAIgM,UAASZ,aAEzB,IAAqB3J,UAAWtE,KAAK2mB,eAAelG,YAAahe,aAAcgK,eAAgBrI,eAC/F,QAAQ,GAAIyK,UAASZ,SAAU3J,YAE5BwQ,cAsOPiS,mBAAoC,WACpC,QAASA,uBAET,MAAOA,uBAKPC,0BAA2C,WAC3C,QAASA,8BAqDT,MA/CAA,2BAA0BlnB,UAAUmnB,aAIpC,SAAUvkB,OAAS,OAAO,GAM1BskB,0BAA0BlnB,UAAUonB,MAKpC,SAAUxkB,MAAOykB,gBAKjBH,0BAA0BlnB,UAAUsnB,aAIpC,SAAU1kB,OAAS,OAAO,GAK1BskB,0BAA0BlnB,UAAUiR,SAIpC,SAAUrO,OAAS,MAAO,OAM1BskB,0BAA0BlnB,UAAU+Q,iBAKpC,SAAUiS,OAAQtT,MACd,MAAOsT,QAAOzT,cAAgBG,KAAKH,aAEhC2X,6BAkBP/O,OAAS,GAAI/X,eAAcmnB,eAAe,UAC1CC,mBAAoC,WACpC,QAASA,oBAAmB/O,OAAQC,SAAU+O,oBAAqBC,mBAC/DxnB,KAAKuY,OAASA,OACdvY,KAAKwY,SAAWA,SAChBxY,KAAKunB,oBAAsBA,oBAC3BvnB,KAAKwnB,kBAAoBA,kBAkD7B,MA3CAF,oBAAmBxnB,UAAUqgB,KAK7B,SAAUsH,eAAgB/kB,OACtB,GAAIsY,OAAQhb,IACRA,MAAKunB,qBACLvnB,KAAKunB,oBAAoB7kB,MAE7B,IAAqBglB,gBAAiB1nB,KAAK2nB,kBAAqCjlB,MAAmB,aACnG,OAAOnC,mBAAkBsE,IAAI4B,KAAKihB,eAAgB,SAAUxoB,SACpD8b,MAAMwM,mBACNxM,MAAMwM,kBAAkB9kB,MAE5B,IAAqBtD,QAASF,QAAQ2C,OAAO4lB,eAC7C,OAAO,IAAIpL,oBAAmB/W,QAAQlG,OAAOkZ,SAASlM,IAAI6L,SAASpT,IAAIF,YAAavF,WAO5FkoB,mBAAmBxnB,UAAU6nB,kBAI7B,SAAUpjB,cACN,GAAIyW,OAAQhb,IACZ,OAA4B,gBAAjBuE,cACAxD,4BAA4B0G,YAAYzH,KAAKuY,OAAO4H,KAAK5b,eAGzD/D,uBAAuBuf,SAAStZ,KAAKY,mBAAmB9C,gBAAiB,SAAUiW,GACtF,MAAIA,aAAata,eAAc0nB,gBACpBvnB,mBAAmB8F,GAAGqU,GAGtBzZ,4BAA4B0G,YAAYuT,MAAMxC,SAASqP,mBAAmBrN,OAK1F8M,sBAoBPQ,oBAAqC,WACrC,QAASA,wBAET,MAAOA,wBAKPC,2BAA4C,WAC5C,QAASA,+BA+BT,MAzBAA,4BAA2BjoB,UAAUkoB,iBAIrC,SAAU7X,KAAO,OAAO,GAKxB4X,2BAA2BjoB,UAAUmoB,QAIrC,SAAU9X,KAAO,MAAOA,MAMxB4X,2BAA2BjoB,UAAUooB,MAKrC,SAAUC,WAAYC,UAAY,MAAOD,aAClCJ,8BA6CP5Q,OAAwB,WAKxB,QAASA,QAAOtC,kBAAmBjJ,cAAeyc,aAAchQ,SAAUC,SAAUC,OAAQC,SAAU9U,QAClG,GAAIsX,OAAQhb,IACZA,MAAK6U,kBAAoBA,kBACzB7U,KAAK4L,cAAgBA,cACrB5L,KAAKqoB,aAAeA,aACpBroB,KAAKqY,SAAWA,SAChBrY,KAAK0D,OAASA,OACd1D,KAAKsoB,YAAc,GAAInoB,sBAAqBiO,gBAAiC,MAC7EpO,KAAKuoB,aAAe,EACpBvoB,KAAK+Y,OAAS,GAAI3Y,cAAaooB,QAM/BxoB,KAAK2Y,aAAehC,oBAIpB3W,KAAKyoB,WAAY,EAMjBzoB,KAAK0oB,OACDC,oBAAqB/R,kBACrBgS,mBAAoBhS,mBAKxB5W,KAAK0Y,oBAAsB,GAAIqP,4BAC/B/nB,KAAKyQ,mBAAqB,GAAIuW,2BAO9BhnB,KAAKqZ,oBAAsB,SAS3BrZ,KAAKiP,0BAA4B,WACjC,IAAqB4Z,aAAc,SAAUjkB,GAAK,MAAOoW,OAAM8N,aAAa,GAAIpN,sBAAqB9W,KAChFmkB,UAAY,SAAUnkB,GAAK,MAAOoW,OAAM8N,aAAa,GAAInN,oBAAmB/W,IACjG5E,MAAKqe,SAAW/F,SAASlM,IAAIlM,cAAcoe,aAC3Cte,KAAKgpB,YAAYtlB,QACjB1D,KAAKipB,eAAiBrhB,qBACtB5H,KAAKkpB,WAAalpB,KAAKipB,eACvBjpB,KAAK2L,aAAe,GAAI2b,oBAAmB/O,OAAQC,SAAUqQ,YAAaE,WAC1E/oB,KAAKuZ,YAAcxL,iBAAiB/N,KAAKipB,eAAgBjpB,KAAK6U,mBAC9D7U,KAAKmpB,qBAm1BT,MAv0BAhS,QAAOrX,UAAUspB,uBAMjB,SAAUvU,mBACN7U,KAAK6U,kBAAoBA,kBAGzB7U,KAAKuZ,YAAYjR,KAAKpE,UAAYlE,KAAK6U,mBAS3CsC,OAAOrX,UAAUupB,kBAIjB,WACIrpB,KAAKspB,8BACqB,IAAtBtpB,KAAKuoB,cACLvoB,KAAKupB,cAAcvpB,KAAKqY,SAAS/U,MAAK,IAASkmB,YAAY,KAUnErS,OAAOrX,UAAUwpB,4BAIjB,WACI,GAAItO,OAAQhb,IAIPA,MAAKypB,uBACNzpB,KAAKypB,qBAAyCzpB,KAAKqY,SAASW,UAAU,SAAU0Q,QAC5E,GAAqBR,YAAalO,MAAMpP,cAAcgR,MAAM8M,OAAY,KACnDC,OAA4B,aAAnBD,OAAa,KAAmB,WAAa,YAC3EE,YAAW,WAAc5O,MAAM6O,mBAAmBX,WAAYS,QAAUH,YAAY,KAAY,OAI5G5nB,OAAOsa,eAAe/E,OAAOrX,UAAW,OAEpCsM,IAIA,WAAc,MAAOpM,MAAK8pB,aAAa9pB,KAAKipB,iBAC5C9M,YAAY,EACZC,cAAc,IAQlBjF,OAAOrX,UAAUgpB,aAKjB,SAAU7P,GAAwBjZ,KAAY,OAAE+I,KAAKkQ,IA+BrD9B,OAAOrX,UAAUkpB,YAgBjB,SAAUtlB,QACND,eAAeC,QACf1D,KAAK0D,OAASA,OAAOmB,IAAIF,YACzB3E,KAAKyoB,WAAY,GAOrBtR,OAAOrX,UAAUiqB,YAIjB,WAAc/pB,KAAKgqB,WAMnB7S,OAAOrX,UAAUkqB,QAIjB,WACQhqB,KAAKypB,uBACLzpB,KAAKypB,qBAAqBQ,cAC1BjqB,KAAKypB,qBAAwC,OAwFrDtS,OAAOrX,UAAUqR,cA4CjB,SAAUC,SAAU8Y,sBACS,KAArBA,mBAA+BA,oBACnC,IAAIC,YAAaD,iBAAiBC,WAAY/hB,YAAc8hB,iBAAiB9hB,YAAaqG,SAAWyb,iBAAiBzb,SAAU2b,oBAAsBF,iBAAiBE,oBAAqBC,oBAAsBH,iBAAiBG,oBAAqBC,iBAAmBJ,iBAAiBI,gBACxRpqB,eAAcqqB,aAAeH,qBAAwC,SAA+BI,QAAY,MAChHA,QAAQC,KAAK,sEAEjB,IAAqBzlB,GAAImlB,YAAcnqB,KAAKuZ,YAAYjR,KACnCoiB,EAAIJ,iBAAmBtqB,KAAKipB,eAAexa,SAAWA,SACtDkc,EAAI,IACzB,IAAIN,oBACA,OAAQA,qBACJ,IAAK,QACDM,EAAI7lB,YAAa9E,KAAKipB,eAAe7gB,YAAaA,YAClD,MACJ,KAAK,WACDuiB,EAAI3qB,KAAKipB,eAAe7gB,WACxB,MACJ,SACIuiB,EAAIviB,aAAe,SAI3BuiB,GAAIP,oBAAsBpqB,KAAKipB,eAAe7gB,YAAcA,aAAe,IAK/E,OAHU,QAANuiB,IACAA,EAAI3qB,KAAK4qB,iBAAiBD,IAEvBxZ,cAAcnM,EAAGhF,KAAKipB,eAAgB7X,SAA2B,EAAwB,IA6CpG+F,OAAOrX,UAAUypB,cAuBjB,SAAUpZ,IAAK0a,YACI,KAAXA,SAAqBA,QAAWC,oBAAoB,GACxD,IAAqBjf,SAAUsE,cAAetI,SAAUsI,IAAMnQ,KAAK+qB,SAAS5a,KACvD6a,WAAahrB,KAAK0Y,oBAAoBwP,MAAMrc,QAAS7L,KAAKkpB,WAC/E,OAAOlpB,MAAK6pB,mBAAmBmB,WAAY,aAAcH,SA+C7D1T,OAAOrX,UAAUmrB,SAwBjB,SAAU7Z,SAAUyZ,QAGhB,WAFe,KAAXA,SAAqBA,QAAWC,oBAAoB,IACxD/T,iBAAiB3F,UACVpR,KAAKupB,cAAcvpB,KAAKmR,cAAcC,SAAUyZ,QAASA,SAQpE1T,OAAOrX,UAAUgqB,aAKjB,SAAU3Z,KAAO,MAAOnQ,MAAK4L,cAAc4Q,UAAUrM,MAOrDgH,OAAOrX,UAAUirB,SAKjB,SAAU5a,KAAO,MAAOnQ,MAAK4L,cAAcgR,MAAMzM,MAQjDgH,OAAOrX,UAAUorB,SAMjB,SAAU/a,IAAKjI,OACX,GAAIiI,cAAetI,SACf,MAAOE,cAAa/H,KAAKipB,eAAgB9Y,IAAKjI,MAElD,IAAqB2D,SAAU7L,KAAK4L,cAAcgR,MAAMzM,IACxD,OAAOpI,cAAa/H,KAAKipB,eAAgBpd,QAAS3D,QAMtDiP,OAAOrX,UAAU8qB,iBAIjB,SAAU7oB,QACN,MAAOH,QAAOuD,KAAKpD,QAAQwN,OAAO,SAAUnI,OAAQ/B,KAChD,GAAqBiC,OAAQvF,OAAOsD,IAIpC,OAHc,QAAViC,WAA4BiG,KAAVjG,QAClBF,OAAO/B,KAAOiC,OAEXF,aAMf+P,OAAOrX,UAAUqpB,mBAGjB,WACI,GAAInO,OAAQhb,IACZM,yBAAwB2jB,UACnBxd,KAAKzG,KAAKsoB,YAAa,SAAUjX,KAClC,MAAIA,MACA2J,MAAMmQ,2BAA2B9Z,KAG1BA,IAAI+Z,QAAQC,MAAM,eAGAhrB,mBAAmB8F,GAAG,QAGlD6S,UAAU,eAQnB7B,OAAOrX,UAAU+pB,mBAMjB,SAAUyB,OAAQ3B,OAAQkB,QACtB,GAAqBU,gBAAiBvrB,KAAKsoB,YAAYhhB,KAIvD,IAAIikB,gBAA6B,eAAX5B,QAAqD,eAA1B4B,eAAe5B,QAC5D4B,eAAeD,OAAO5V,aAAe4V,OAAO5V,WAC5C,MAAOhO,SAAQC,SAAQ,EAK3B,IAAI4jB,gBAA4B,cAAV5B,QAAoD,aAA1B4B,eAAe5B,QAC3D4B,eAAeD,OAAO5V,aAAe4V,OAAO5V,WAC5C,MAAOhO,SAAQC,SAAQ,EAK3B,IAAI4jB,gBAA4B,YAAV5B,QAAkD,eAA1B4B,eAAe5B,QACzD4B,eAAeD,OAAO5V,aAAe4V,OAAO5V,WAC5C,MAAOhO,SAAQC,SAAQ,EAE3B,IAAqBA,SAAU,KACV6jB,OAAS,KACTJ,QAAU,GAAI1jB,SAAQ,SAAUpB,IAAKmlB,KACtD9jB,QAAUrB,IACVklB,OAASC,MAEQ9Q,KAAO3a,KAAKuoB,YAIjC,OAHAvoB,MAAKsoB,YAAYvf,MAAO4R,GAAIA,GAAIgP,OAAQA,OAAQ2B,OAAQA,OAAQT,OAAQA,OAAQljB,QAASA,QAAS6jB,OAAQA,OAAQJ,QAASA,UAGpHA,QAAQC,MAAM,SAAUpS,GAAK,MAAOvR,SAAQ8jB,OAAOvS,MAM9D9B,OAAOrX,UAAUqrB,2BAIjB,SAAUzd,IACN,GAAIsN,OAAQhb,KACR2a,GAAKjN,GAAGiN,GAAI2Q,OAAS5d,GAAG4d,OAAQT,OAASnd,GAAGmd,OAAQljB,QAAU+F,GAAG/F,QAAS6jB,OAAS9d,GAAG8d,OACrErb,IAAMnQ,KAAK0Y,oBAAoBuP,QAAQqD,QACvCI,eAAiB1rB,KAAKyoB,WAAatY,IAAIuF,aAAe1V,KAAKipB,eAAevT,YAC7D,WAA7B1V,KAAKqZ,qBAA0CqS,gBAChD1rB,KAAK0Y,oBAAoBsP,iBAAiBsD,SACvBtrB,KAAY,OAAE+I,KAAK,GAAI6R,iBAAgBD,GAAI3a,KAAK8pB,aAAa3Z,OAChFzI,QAAQC,UACHgkB,KAAK,SAAUpM,GAChB,MAAOvE,OAAM4Q,YAAYzb,IAAKmb,SAAUT,OAAOC,qBAAsBD,OAAOrB,WAAY7O,GAAI,QAE3FgR,KAAKhkB,QAAS6jB,SAIdE,eAAiB1rB,KAAKkpB,YAC3BlpB,KAAK0Y,oBAAoBsP,iBAAiBhoB,KAAKkpB,aAC5BlpB,KAAY,OAAE+I,KAAK,GAAI6R,iBAAgBD,GAAI3a,KAAK8pB,aAAa3Z,OAChFzI,QAAQC,UACHgkB,KAAK,SAAUpM,GAChB,MAAOvE,OAAM4Q,YAAYzb,IAAKmb,QAAQ,GAAO,EAAO3Q,GAAI5M,iBAAiBoC,IAAK6K,MAAMnG,mBAAmB5G,YAEtG0d,KAAKhkB,QAAS6jB,UAGnBxrB,KAAKkpB,WAAaoC,OAClB3jB,QAAQ,QAYhBwP,OAAOrX,UAAU8rB,YASjB,SAAUzb,IAAKmb,OAAQR,mBAAoBtB,WAAY7O,GAAIkR,iBACvD,GAAI7Q,OAAQhb,IACZ,OAAI2a,MAAO3a,KAAKuoB,cACOvoB,KAAY,OAC1B+I,KAAK,GAAIkS,kBAAiBN,GAAI3a,KAAK8pB,aAAa3Z,KAAM,iBAAmBwK,GAAK,8CAAgD3a,KAAKuoB,eACjI7gB,QAAQC,SAAQ,IAEpB,GAAID,SAAQ,SAAUokB,eAAgBC,eAGzC,GAAqBC,gBACrB,IAAKH,gBAYDG,gBAAkB3rB,mBAAmB8F,IAAK8lB,WAAY9b,IAAKlC,SAAU4d,sBAZnD,CAClB,GAAqBngB,gBAAiBsP,MAAMqD,SAAS/F,SAChC4T,kBAAoBzgB,eAAeC,eAAgBsP,MAAMrP,aAAcqP,MAAMpP,cAAeuE,IAAK6K,MAAMtX,OAC5HsoB,iBAAkBxrB,uBAAuBuf,SAAStZ,KAAKylB,kBAAmB,SAAUD,YAChF,MAAO1rB,mBAAkBsE,IAAI4B,KAAKmO,UAAUoG,MAAMnG,kBAAmBmG,MAAMtX,OAAQuoB,WAAYjR,MAAM8O,aAAamC,YAAajR,MAAM/L,2BAA4B,SAAUhB,UAGvK,MAFmB+M,OAAa,OAC3BjS,KAAK,GAAIqS,kBAAiBT,GAAIK,MAAM8O,aAAa3Z,KAAM6K,MAAM8O,aAAamC,YAAahe,YACnFge,WAAYA,WAAYhe,SAAUA,cAOvD,GAIqBke,eAJAC,yBAA2B5rB,uBAAuBuf,SAAStZ,KAAKulB,gBAAiB,SAAUxiB,GAC5G,MAAOjJ,mBAAkBsE,IAAI4B,KAAKuU,MAAM0N,MAAMC,oBAAoBnf,EAAEyE,UAAW,WAAc,MAAOzE,OAInF6iB,oBAAsB9rB,kBAAkBsE,IAAI4B,KAAK2lB,yBAA0B,SAAU1e,IACtG,GAAIue,YAAave,GAAGue,WAAYhe,SAAWP,GAAGO,SACzBvC,eAAiBsP,MAAMqD,SAAS/F,QAGrD,OAFA6T,eAAgB,GAAItJ,eAAc5U,SAAU+M,MAAMzB,YAAYtL,SAAUvC,eAAgB,SAAU4gB,KAAO,MAAOtR,OAAM8N,aAAawD,OACnIH,cAAcjJ,WAAWlI,MAAMqN,eACtB4D,WAAYA,WAAYhe,SAAUA,YAE1Bse,0BAA4B/rB,uBAAuBuf,SAAStZ,KAAK4lB,oBAAqB,SAAU3e,IACjH,GAAIue,YAAave,GAAGue,WAAYhe,SAAWP,GAAGO,QAC9C,OAAI+M,OAAMuN,eAAiB5N,GAChBta,mBAAmB8F,IAAG,IACjC6U,MAAM8N,aAAa,GAAIzN,kBAAiBV,GAAIK,MAAM8O,aAAa3Z,KAAM8b,WAAYhe,WAC1E1N,kBAAkBsE,IAAI4B,KAAK0lB,cAAc5I,cAAe,SAAUhI,gBAErE,MADAP,OAAM8N,aAAa,GAAIxN,gBAAeX,GAAIK,MAAM8O,aAAa3Z,KAAM8b,WAAYhe,SAAUsN,kBAChF0Q,WAAYA,WAAYhe,SAAUA,SAAUsN,eAAgBA,qBAGxDiR,0BAA4BhsB,uBAAuBuf,SAAStZ,KAAK8lB,0BAA2B,SAAU/iB,GACvH,MAAIwR,OAAMuN,eAAiB5N,GAChBta,mBAAmB8F,IAAG,GAC7BqD,EAAE+R,gBAAkB4Q,cAAc1I,gBAClCzI,MAAM8N,aAAa,GAAItN,cAAab,GAAIK,MAAM8O,aAAa3Z,KAAM3G,EAAEyiB,WAAYziB,EAAEyE,WAC1E1N,kBAAkBsE,IAAI4B,KAAK0lB,cAAcrI,YAAY9I,MAAM/L,2BAA4B,WAE1F,MADA+L,OAAM8N,aAAa,GAAIrN,YAAWd,GAAIK,MAAM8O,aAAa3Z,KAAM3G,EAAEyiB,WAAYziB,EAAEyE,WACxEzE,KAIJnJ,mBAAmB8F,GAAGqD,KAGhBijB,mBAAqBjsB,uBAAuBuf,SAAStZ,KAAK+lB,0BAA2B,SAAUhjB,GAChH,MAAOjJ,mBAAkBsE,IAAI4B,KAAKuU,MAAM0N,MAAME,mBAAmBpf,EAAEyE,UAAW,WAAc,MAAOzE,OAIlFkjB,aAAensB,kBAAkBsE,IAAI4B,KAAKgmB,mBAAoB,SAAU/e,IACzF,GAAIue,YAAave,GAAGue,WAAYhe,SAAWP,GAAGO,SAAUsN,eAAiB7N,GAAG6N,cAC5E,IAAIA,eAAgB,CAEhB,OAAS0Q,WAAYA,WAAYrc,MADJY,kBAAkBwK,MAAMvK,mBAAoBxC,SAAU+M,MAAMzB,aAC1CgC,eAAgBA,gBAG/D,OAAS0Q,WAAYA,WAAYrc,MAAO,KAAM2L,eAAgBA,iBAGtEP,OAAM2R,eAAeD,aAAc1R,MAAMzB,YAAayB,MAAMiO,eAAgBtO,GAAIxK,IAAKmb,OAAQR,mBAAoBtB,WAAYsC,eAAgBC,kBAkBrJ5U,OAAOrX,UAAU6sB,eAejB,SAAU/c,MAAOgd,YAAaC,UAAWlS,GAAIxK,IAAKmb,OAAQR,mBAAoBtB,WAAYsC,eAAgBC,eACtG,GAGqBe,wBAHjB9R,MAAQhb,IAIZ4P,OACKjK,QAAQ,SAAU+H,IACnB,GAAIue,YAAave,GAAGue,WAAYrc,MAAQlC,GAAGkC,KAC3C,KADmElC,GAAG6N,gBAC/CZ,KAAOK,MAAMuN,aAEhC,YADAuE,wBAAyB,EAM7B,IAHA9R,MAAMiO,eAAiBgD,WACvBjR,MAAMkO,WAAalO,MAAMtC,oBAAoBwP,MAAMlN,MAAMiO,eAAgBqC,QACzE,MAA2B/R,YAAc3J,OACpCkb,mBAAoB,CACrB,GAAqBxnB,MAAO0X,MAAMpP,cAAc4Q,UAAUxB,MAAMkO,WAC5DlO,OAAM3C,SAAS0U,qBAAqBzpB,OAASkmB,WAC7CxO,MAAM3C,SAAS2U,aAAa1pB,MAG5B0X,MAAM3C,SAAS4U,GAAG3pB,MAG1B,GAAI4pB,gBAAelS,MAAMvK,mBAAoBb,MAAOgd,YAAa,SAAUN,KAAO,MAAOtR,OAAM8N,aAAawD,OACvGa,SAASnS,MAAMqN,cACpByE,wBAAyB,IAExBnB,KAAK,WACFmB,wBACA9R,MAAMyN,WAAY,EACCzN,MAAa,OAC3BjS,KAAK,GAAI+R,eAAcH,GAAIK,MAAM8O,aAAa3Z,KAAM6K,MAAM8O,aAAa9O,MAAMiO,kBAClF6C,gBAAe,KAGf9Q,MAAMoS,2BACapS,MAAa,OAC3BjS,KAAK,GAAIkS,kBAAiBN,GAAIK,MAAM8O,aAAa3Z,KAAM,KAC5D2b,gBAAe,KAEpB,SAAU7S,GACT,GAAI3W,2BAA2B2W,GAC3B+B,MAAMyN,WAAY,EAClBzN,MAAMqS,iBAAiBT,YAAaC,UAAWvB,QAC5BtQ,MAAa,OAC3BjS,KAAK,GAAIkS,kBAAiBN,GAAIK,MAAM8O,aAAa3Z,KAAM8I,EAAE/W,UAC9D4pB,gBAAe,OAEd,CACD9Q,MAAMqS,iBAAiBT,YAAaC,UAAWvB,QAC5BtQ,MAAa,OAC3BjS,KAAK,GAAIoS,iBAAgBR,GAAIK,MAAM8O,aAAa3Z,KAAM8I,GAC3D,KACI6S,eAAe9Q,MAAMrC,aAAaM,IAEtC,MAAwBqU,IACpBvB,cAAcuB,SAW9BnW,OAAOrX,UAAUutB,iBAMjB,SAAUT,YAAaC,UAAWvB,QAC9B,KAA0B/R,YAAcqT,YACxC5sB,KAAKipB,eAAiB4D,UACtB7sB,KAAKkpB,WAAalpB,KAAK0Y,oBAAoBwP,MAAMloB,KAAKipB,eAAgBqC,QACtEtrB,KAAKotB,4BAKTjW,OAAOrX,UAAUstB,yBAGjB,WACIptB,KAAKqY,SAAS2U,aAAahtB,KAAK4L,cAAc4Q,UAAUxc,KAAKkpB,cAE1D/R,UAEP+V,eAAgC,WAChC,QAASA,gBAAezc,mBAAoB8c,YAAaC,UAAWzK,cAChE/iB,KAAKyQ,mBAAqBA,mBAC1BzQ,KAAKutB,YAAcA,YACnBvtB,KAAKwtB,UAAYA,UACjBxtB,KAAK+iB,aAAeA,aAmOxB,MA7NAmK,gBAAeptB,UAAUqtB,SAIzB,SAAUhK,gBACN,GAAqBC,YAAapjB,KAAKutB,YAAY3c,MAC9ByS,SAAWrjB,KAAKwtB,UAAYxtB,KAAKwtB,UAAU5c,MAAQ,IACxE5Q,MAAKytB,sBAAsBrK,WAAYC,SAAUF,gBACjDpT,sBAAsB/P,KAAKutB,YAAYjlB,MACvCtI,KAAK0tB,oBAAoBtK,WAAYC,SAAUF,iBAQnD+J,eAAeptB,UAAU2tB,sBAMzB,SAAUrJ,WAAYC,SAAUjM,UAC5B,GAAI4C,OAAQhb,KACSsE,SAAWwJ,kBAAkBuW,SAElDD,YAAW9f,SAASqB,QAAQ,SAAUgoB,aAClC,GAAqBC,iBAAkBD,YAAYrmB,MAAMnD,MACzD6W,OAAM6S,iBAAiBF,YAAarpB,SAASspB,iBAAkBxV,gBACxD9T,UAASspB,mBAGpBjoB,QAAQrB,SAAU,SAAUwF,EAAGib,WAC3B/J,MAAMyJ,8BAA8B3a,EAAGsO,aAS/C8U,eAAeptB,UAAU+tB,iBAMzB,SAAUzJ,WAAYC,SAAUyJ,eAC5B,GAAqBhL,QAASsB,WAAW9c,MACpBkI,KAAO6U,SAAWA,SAAS/c,MAAQ,IACxD,IAAIwb,SAAWtT,KAEX,GAAIsT,OAAO5e,UAAW,CAElB,GAAqBygB,SAAUmJ,cAAcpJ,WAAW5B,OAAO3e,OAC3DwgB,UACA3kB,KAAKytB,sBAAsBrJ,WAAYC,SAAUM,QAAQrgB,cAK7DtE,MAAKytB,sBAAsBrJ,WAAYC,SAAUyJ,mBAIjDte,OAEAxP,KAAKykB,8BAA8BJ,SAAUyJ,gBASzDZ,eAAeptB,UAAU2kB,8BAKzB,SAAU/hB,MAAOygB,gBACTnjB,KAAKyQ,mBAAmBwW,aAAavkB,MAAM4E,MAAM2G,UACjDjO,KAAK+tB,2BAA2BrrB,MAAOygB,gBAGvCnjB,KAAKguB,yBAAyBtrB,MAAOygB,iBAQ7C+J,eAAeptB,UAAUiuB,2BAKzB,SAAUrrB,MAAOygB,gBACb,GAAqBwB,SAAUxB,eAAeuB,WAAWhiB,MAAM4E,MAAMnD,OACrE,IAAIwgB,SAAWA,QAAQxgB,OAAQ,CAC3B,GAAqB8pB,cAAetJ,QAAQxgB,OAAO+pB,SAC9B9V,SAAWuM,QAAQrgB,SAAS6pB,qBACjDnuB,MAAKyQ,mBAAmByW,MAAMxkB,MAAM4E,MAAM2G,UAAYggB,aAAcA,aAAcvrB,MAAOA,MAAO0V,SAAUA,aAQlH8U,eAAeptB,UAAUkuB,yBAKzB,SAAUtrB,MAAOygB,gBACb,GAAInI,OAAQhb,KACS2kB,QAAUxB,eAAeuB,WAAWhiB,MAAM4E,MAAMnD,OACrE,IAAIwgB,QAAS,CACT,GAAqBrgB,UAAWwJ,kBAAkBpL,OAC7B0rB,WAAa1rB,MAAM4E,MAAMpD,UAAYygB,QAAQrgB,SAAW6e,cAC7Exd,SAAQrB,SAAU,SAAUwF,EAAGvD,GAAK,MAAOyU,OAAMyJ,8BAA8B3a,EAAGskB,cAC9EzJ,QAAQxgB,SAERwgB,QAAQxgB,OAAOkqB,aAEf1J,QAAQrgB,SAAS6pB,yBAU7BjB,eAAeptB,UAAU4tB,oBAMzB,SAAUtJ,WAAYC,SAAUjM,UAC5B,GAAI4C,OAAQhb,KACSsE,SAAWwJ,kBAAkBuW,SAClDD,YAAW9f,SAASqB,QAAQ,SAAUgD,GAClCqS,MAAM2R,eAAehkB,EAAGrE,SAASqE,EAAErB,MAAMnD,QAASiU,UAClD4C,MAAM+H,aAAa,GAAIhH,eAAcpT,EAAErB,MAAM2G,aAE7CmW,WAAW9f,SAASzB,QACpB7C,KAAK+iB,aAAa,GAAIlH,oBAAmBuI,WAAW9c,MAAM2G,YASlEif,eAAeptB,UAAU6sB,eAMzB,SAAUvI,WAAYC,SAAUlB,gBAC5B,GAAqBL,QAASsB,WAAW9c,MACpBkI,KAAO6U,SAAWA,SAAS/c,MAAQ,IAGxD,IAFAyI,sBAAsB+S,QAElBA,SAAWtT,KACX,GAAIsT,OAAO5e,UAAW,CAElB,GAAqBygB,SAAUxB,eAAemL,mBAAmBxL,OAAO3e,OACxEnE,MAAK0tB,oBAAoBtJ,WAAYC,SAAUM,QAAQrgB,cAIvDtE,MAAK0tB,oBAAoBtJ,WAAYC,SAAUlB,oBAInD,IAAIL,OAAO5e,UAAW,CAElB,GAAqBygB,SAAUxB,eAAemL,mBAAmBxL,OAAO3e,OACxE,IAAInE,KAAKyQ,mBAAmB2W,aAAatE,OAAO7U,UAAW,CACvD,GAAqBsgB,QAA4BvuB,KAAKyQ,mBAAmBM,SAAS+R,OAAO7U,SACzFjO,MAAKyQ,mBAAmByW,MAAMpE,OAAO7U,SAAU,MAC/C0W,QAAQrgB,SAASkqB,mBAAmBD,OAAOnW,UAC3CuM,QAAQ8J,UAAYF,OAAON,aAC3BtJ,QAAQjiB,MAAQ6rB,OAAO7rB,MAAM4E,MACzBqd,QAAQxgB,QAGRwgB,QAAQxgB,OAAOuqB,OAAOH,OAAON,aAAcM,OAAO7rB,MAAM4E,OAE5DuP,wCAAwC0X,OAAO7rB,WAE9C,CACD,GAAqBgB,QAASoT,mBAAmBgM,OAAO7U,UACnC0gB,mBAAqBjrB,OAASA,OAAOtE,OAAOwvB,yBAA2B,IAC5FjK,SAAQjiB,MAAQogB,OAChB6B,QAAQwB,SAAWwI,mBACfhK,QAAQxgB,QAGRwgB,QAAQxgB,OAAO0qB,aAAa/L,OAAQ6L,oBAExC3uB,KAAK0tB,oBAAoBtJ,WAAY,KAAMO,QAAQrgB,eAKvDtE,MAAK0tB,oBAAoBtJ,WAAY,KAAMjB,iBAIhD+J,kBA+HP4B,WAA4B,WAC5B,QAASA,YAAWrvB,OAAQiD,MAAOqsB,SAAUC,SAAUC,IACnDjvB,KAAKP,OAASA,OACdO,KAAK0C,MAAQA,MACb1C,KAAKoR,YACW,MAAZ2d,UACAC,SAASE,aAAaD,GAAGE,cAAe,WAAY,KAuF5D,MApFAvtB,QAAOsa,eAAe4S,WAAWhvB,UAAW,cACxCsvB,IAIA,SAAUhe,UAEFpR,KAAKoR,SADO,MAAZA,SACgBpN,MAAMC,QAAQmN,UAAYA,UAAYA,cAM9D+K,YAAY,EACZC,cAAc,IAElBxa,OAAOsa,eAAe4S,WAAWhvB,UAAW,uBACxCsvB,IAKA,SAAU9nB,OACFpH,cAAcqqB,aAAgC,SAA+BC,QAAY,MACzFA,QAAQC,KAAK,wEAEjBzqB,KAAKqvB,SAAW/nB,OAEpB6U,YAAY,EACZC,cAAc,IAKlB0S,WAAWhvB,UAAUwvB,QAGrB,WACI,GAAqBzE,SACjBC,mBAAoB9T,cAAchX,KAAK8qB,oBACvCtB,WAAYxS,cAAchX,KAAKwpB,YAGnC,OADAxpB,MAAKP,OAAO8pB,cAAcvpB,KAAK6L,QAASgf,SACjC,GAEXjpB,OAAOsa,eAAe4S,WAAWhvB,UAAW,WACxCsM,IAGA,WACI,MAAOpM,MAAKP,OAAO0R,cAAcnR,KAAKoR,UAClC+Y,WAAYnqB,KAAK0C,MACjB0F,YAAapI,KAAKoI,YAClBqG,SAAUzO,KAAKyO,SACf2b,oBAAqBpT,cAAchX,KAAKqvB,UACxChF,oBAAqBrqB,KAAKqqB,oBAC1BC,iBAAkBtT,cAAchX,KAAKsqB,qBAG7CnO,YAAY,EACZC,cAAc,IAElB0S,WAAWS,aACLC,KAAMtvB,cAAcuvB,UAAWC,OAASC,SAAU,0BAGxDb,WAAWc,eAAiB,WAAc,QACpCJ,KAAMrY,SACNqY,KAAM7gB,iBACN6gB,SAAMjiB,GAAWgiB,aAAeC,KAAMtvB,cAAc2vB,UAAWH,MAAO,gBACtEF,KAAMtvB,cAAc4vB,YACpBN,KAAMtvB,cAAc6vB,cAE1BjB,WAAWkB,gBACP5nB,cAAkBonB,KAAMtvB,cAAc+vB,QACtCxhB,WAAe+gB,KAAMtvB,cAAc+vB;2BACnC5F,sBAA0BmF,KAAMtvB,cAAc+vB,QAC9C3F,mBAAuBkF,KAAMtvB,cAAc+vB,QAC3CnF,qBAAyB0E,KAAMtvB,cAAc+vB,QAC7CzG,aAAiBgG,KAAMtvB,cAAc+vB,QACrCC,aAAiBV,KAAMtvB,cAAc+vB,QACrC7F,sBAA0BoF,KAAMtvB,cAAc+vB,QAC9CX,UAAcE,KAAMtvB,cAAciwB,aAAcT,MAAO,YAEpDZ,cAWPsB,mBAAoC,WACpC,QAASA,oBAAmB3wB,OAAQiD,MAAO2tB,kBACvC,GAAIrV,OAAQhb,IACZA,MAAKP,OAASA,OACdO,KAAK0C,MAAQA,MACb1C,KAAKqwB,iBAAmBA,iBACxBrwB,KAAKoR,YACLpR,KAAKswB,aAAe7wB,OAAOsZ,OAAOC,UAAU,SAAUhP,GAC9CA,YAAa8Q,gBACbE,MAAMuV,2BA8HlB,MA1HA3uB,QAAOsa,eAAekU,mBAAmBtwB,UAAW,cAChDsvB,IAIA,SAAUhe,UAEFpR,KAAKoR,SADO,MAAZA,SACgBpN,MAAMC,QAAQmN,UAAYA,UAAYA,cAM9D+K,YAAY,EACZC,cAAc,IAElBxa,OAAOsa,eAAekU,mBAAmBtwB,UAAW,uBAChDsvB,IAIA,SAAU9nB,OACFpH,cAAcqqB,aAAgC,SAA+BC,QAAY,MACzFA,QAAQC,KAAK,uEAEjBzqB,KAAKqvB,SAAW/nB,OAEpB6U,YAAY,EACZC,cAAc,IAMlBgU,mBAAmBtwB,UAAU0wB,YAI7B,SAAUC,SAAWzwB,KAAKuwB,0BAI1BH,mBAAmBtwB,UAAUiqB,YAG7B,WAAc/pB,KAAKswB,aAAarG,eAQhCmG,mBAAmBtwB,UAAUwvB,QAO7B,SAAUoB,OAAQC,QAASC,QAASC,UAChC,GAAe,IAAXH,QAAgBC,SAAWC,SAAWC,SACtC,OAAO,CAEX,IAA2B,gBAAhB7wB,MAAK8wB,QAAsC,SAAf9wB,KAAK8wB,OACxC,OAAO,CAEX,IAAqBjG,SACjBC,mBAAoB9T,cAAchX,KAAK8qB,oBACvCtB,WAAYxS,cAAchX,KAAKwpB,YAGnC,OADAxpB,MAAKP,OAAO8pB,cAAcvpB,KAAK6L,QAASgf,SACjC,GAKXuF,mBAAmBtwB,UAAUywB,uBAG7B,WACIvwB,KAAK+wB,KAAO/wB,KAAKqwB,iBAAiBW,mBAAmBhxB,KAAKP,OAAOqqB,aAAa9pB,KAAK6L,WAEvFjK,OAAOsa,eAAekU,mBAAmBtwB,UAAW,WAChDsM,IAGA,WACI,MAAOpM,MAAKP,OAAO0R,cAAcnR,KAAKoR,UAClC+Y,WAAYnqB,KAAK0C,MACjB0F,YAAapI,KAAKoI,YAClBqG,SAAUzO,KAAKyO,SACf2b,oBAAqBpT,cAAchX,KAAKqvB,UACxChF,oBAAqBrqB,KAAKqqB,oBAC1BC,iBAAkBtT,cAAchX,KAAKsqB,qBAG7CnO,YAAY,EACZC,cAAc,IAElBgU,mBAAmBb,aACbC,KAAMtvB,cAAcuvB,UAAWC,OAASC,SAAU,oBAGxDS,mBAAmBR,eAAiB,WAAc,QAC5CJ,KAAMrY,SACNqY,KAAM7gB,iBACN6gB,KAAMvvB,gBAAgBgxB,oBAE5Bb,mBAAmBJ,gBACfc,SAAatB,KAAMtvB,cAAcgxB,YAAaxB,MAAO,iBAAqBF,KAAMtvB,cAAc+vB,QAC9F7nB,cAAkBonB,KAAMtvB,cAAc+vB,QACtCxhB,WAAe+gB,KAAMtvB,cAAc+vB,QACnC5F,sBAA0BmF,KAAMtvB,cAAc+vB,QAC9C3F,mBAAuBkF,KAAMtvB,cAAc+vB,QAC3CnF,qBAAyB0E,KAAMtvB,cAAc+vB,QAC7CzG,aAAiBgG,KAAMtvB,cAAc+vB,QACrCc,OAAWvB,KAAMtvB,cAAcgxB,cAC/BhB,aAAiBV,KAAMtvB,cAAc+vB,QACrC7F,sBAA0BoF,KAAMtvB,cAAc+vB,QAC9CX,UAAcE,KAAMtvB,cAAciwB,aAAcT,MAAO,SAAU,gBAAiB,iBAAkB,iBAAkB,uBAEnHU,sBAmFPe,iBAAkC,WAClC,QAASA,kBAAiB1xB,OAAQ2xB,QAASpC,SAAUqC,KACjD,GAAIrW,OAAQhb,IACZA,MAAKP,OAASA,OACdO,KAAKoxB,QAAUA,QACfpxB,KAAKgvB,SAAWA,SAChBhvB,KAAKqxB,IAAMA,IACXrxB,KAAKsxB,WACLtxB,KAAKkrB,UAAW,EAChBlrB,KAAKuxB,yBAA4BrpB,OAAO,GACxClI,KAAKswB,aAAe7wB,OAAOsZ,OAAOC,UAAU,SAAUhP,GAC9CA,YAAa8Q,gBACbE,MAAMwW,WAgHlB,MAzGAL,kBAAiBrxB,UAAU2xB,mBAG3B,WACI,GAAIzW,OAAQhb,IACZA,MAAK0xB,MAAMjB,QAAQzX,UAAU,SAAUuG,GAAK,MAAOvE,OAAMwW,WACzDxxB,KAAK2xB,eAAelB,QAAQzX,UAAU,SAAUuG,GAAK,MAAOvE,OAAMwW,WAClExxB,KAAKwxB,UAET5vB,OAAOsa,eAAeiV,iBAAiBrxB,UAAW,oBAC9CsvB,IAIA,SAAU3f,MACN,GAAqB6hB,SAAUttB,MAAMC,QAAQwL,MAAQA,KAAOA,KAAK7M,MAAM,IACvE5C,MAAKsxB,QAAUA,QAAQpP,OAAO,SAAUvZ,GAAK,QAASA,KAE1DwT,YAAY,EACZC,cAAc,IAMlB+U,iBAAiBrxB,UAAU0wB,YAI3B,SAAUC,SAAWzwB,KAAKwxB,UAI1BL,iBAAiBrxB,UAAUiqB,YAG3B,WAAc/pB,KAAKswB,aAAarG,eAIhCkH,iBAAiBrxB,UAAU0xB,OAG3B,WACI,GAAIxW,OAAQhb,IACPA,MAAK0xB,OAAU1xB,KAAK2xB,gBAAmB3xB,KAAKP,OAAOgpB,WAExD/gB,QAAQC,UAAUgkB,KAAK,WACnB,GAAqBiG,gBAAiB5W,MAAM4W,gBACxC5W,OAAMkQ,WAAa0G,iBACnB,MAA2B1G,SAAW0G,eACtC5W,MAAMsW,QAAQ3rB,QAAQ,SAAUgD,GACxBipB,eACA5W,MAAMgU,SAAS6C,SAAS7W,MAAMoW,QAAQjC,cAAexmB,GAGrDqS,MAAMgU,SAAS8C,YAAY9W,MAAMoW,QAAQjC,cAAexmB,SAU5EwoB,iBAAiBrxB,UAAUiyB,aAI3B,SAAUtyB,QACN,GAAIub,OAAQhb,IACZ,OAAO,UAAUgyB,MACb,MAAOvyB,QAAOyrB,SAAS8G,KAAKnmB,QAASmP,MAAMuW,wBAAwBrpB,SAM3EipB,iBAAiBrxB,UAAU8xB,eAG3B,WACI,MAAO5xB,MAAK0xB,MAAMpkB,KAAKtN,KAAK+xB,aAAa/xB,KAAKP,UAC1CO,KAAK2xB,eAAerkB,KAAKtN,KAAK+xB,aAAa/xB,KAAKP,UAExD0xB,iBAAiB5B,aACXC,KAAMtvB,cAAcuvB,UAAWC,OACrBC,SAAU,qBACVsC,SAAU,uBAI1Bd,iBAAiBvB,eAAiB,WAAc,QAC1CJ,KAAMrY,SACNqY,KAAMtvB,cAAc6vB,aACpBP,KAAMtvB,cAAc4vB,YACpBN,KAAMtvB,cAAcgyB,qBAE1Bf,iBAAiBnB,gBACb0B,QAAYlC,KAAMtvB,cAAciyB,gBAAiBzC,MAAOZ,YAAcsD,aAAa,MACnFT,iBAAqBnC,KAAMtvB,cAAciyB,gBAAiBzC,MAAOU,oBAAsBgC,aAAa,MACpGb,0BAA8B/B,KAAMtvB,cAAc+vB,QAClDoC,mBAAuB7C,KAAMtvB,cAAc+vB,SAExCkB,oBAmBPmB,cAA+B,WAC/B,QAASA,iBACLtyB,KAAKmE,OAAS,KACdnE,KAAK0C,MAAQ,KACb1C,KAAKmmB,SAAW,KAChBnmB,KAAKsE,SAAW,GAAIiuB,wBACpBvyB,KAAKyuB,UAAY,KAErB,MAAO6D,kBAOPC,uBAAwC,WACxC,QAASA,0BACLvyB,KAAKoY,SAAW,GAAIoa,KAkGxB,MAzFAD,wBAAuBzyB,UAAU2yB,qBAMjC,SAAU1N,UAAW5gB,QACjB,GAAqBwgB,SAAU3kB,KAAKsuB,mBAAmBvJ,UACvDJ,SAAQxgB,OAASA,OACjBnE,KAAKoY,SAASgX,IAAIrK,UAAWJ,UAcjC4N,uBAAuBzyB,UAAU4yB,uBAOjC,SAAU3N,WACN,GAAqBJ,SAAU3kB,KAAK0kB,WAAWK,UAC3CJ,WACAA,QAAQxgB,OAAS,OAYzBouB,uBAAuBzyB,UAAUquB,oBAKjC,WACI,GAAqB/V,UAAWpY,KAAKoY,QAErC,OADApY,MAAKoY,SAAW,GAAIoa,KACbpa,UAMXma,uBAAuBzyB,UAAU0uB,mBAIjC,SAAUpW,UAAYpY,KAAKoY,SAAWA,UAKtCma,uBAAuBzyB,UAAUwuB,mBAIjC,SAAUvJ,WACN,GAAqBJ,SAAU3kB,KAAK0kB,WAAWK,UAK/C,OAJKJ,WACDA,QAAU,GAAI2N,eACdtyB,KAAKoY,SAASgX,IAAIrK,UAAWJ,UAE1BA,SAMX4N,uBAAuBzyB,UAAU4kB,WAIjC,SAAUK,WAAa,MAAO/kB,MAAKoY,SAAShM,IAAI2Y,YAAc,MACvDwN,0BAsCPI,aAA8B,WAC9B,QAASA,cAAaxP,eAAgB9K,SAAU8N,SAAU3b,KAAMooB,gBAC5D5yB,KAAKmjB,eAAiBA,eACtBnjB,KAAKqY,SAAWA,SAChBrY,KAAKmmB,SAAWA,SAChBnmB,KAAK4yB,eAAiBA,eACtB5yB,KAAK0O,UAAY,KACjB1O,KAAK6yB,gBAAkB,KACvB7yB,KAAK8yB,eAAiB,GAAI5yB,eAAc6yB,aACxC/yB,KAAKgzB,iBAAmB,GAAI9yB,eAAc6yB,aAC1C/yB,KAAKwK,KAAOA,MAAQpG,eACpB+e,eAAesP,qBAAqBzyB,KAAKwK,KAAMxK,MA8KnD,MAzKA2yB,cAAa7yB,UAAUiqB,YAGvB,WAAc/pB,KAAKmjB,eAAeuP,uBAAuB1yB,KAAKwK,OAI9DmoB,aAAa7yB,UAAUmzB,SAGvB,WACI,IAAKjzB,KAAK0O,UAAW,CAGjB,GAAqBiW,SAAU3kB,KAAKmjB,eAAeuB,WAAW1kB,KAAKwK,KAC/Dma,UAAWA,QAAQjiB,QACfiiB,QAAQ8J,UAERzuB,KAAK0uB,OAAO/J,QAAQ8J,UAAW9J,QAAQjiB,OAIvC1C,KAAK6uB,aAAalK,QAAQjiB,MAAOiiB,QAAQwB,UAAY,SAKrEvkB,OAAOsa,eAAeyW,aAAa7yB,UAAW,eAC1CsM,IAGA,WAAc,QAASpM,KAAK0O,WAC5ByN,YAAY,EACZC,cAAc,IAElBxa,OAAOsa,eAAeyW,aAAa7yB,UAAW,aAC1CsM,IAGA,WACI,IAAKpM,KAAK0O,UACN,KAAM,IAAItM,OAAM,0BACpB,OAAOpC,MAAK0O,UAAUwkB,UAE1B/W,YAAY,EACZC,cAAc,IAElBxa,OAAOsa,eAAeyW,aAAa7yB,UAAW,kBAC1CsM,IAGA,WACI,IAAKpM,KAAK0O,UACN,KAAM,IAAItM,OAAM,0BACpB,OAAyBpC,MAAoB,iBAEjDmc,YAAY,EACZC,cAAc,IAElBxa,OAAOsa,eAAeyW,aAAa7yB,UAAW,sBAC1CsM,IAGA,WACI,MAAIpM,MAAK6yB,gBACE7yB,KAAK6yB,gBAAgB5kB,SAASwB,SAI7C0M,YAAY,EACZC,cAAc,IASlBuW,aAAa7yB,UAAUouB,OAIvB,WACI,IAAKluB,KAAK0O,UACN,KAAM,IAAItM,OAAM,0BACpBpC,MAAKqY,SAAS6V,QACd,IAAqBiF,KAAMnzB,KAAK0O,SAGhC,OAFA1O,MAAK0O,UAAY,KACjB1O,KAAK6yB,gBAAkB,KAChBM,KAWXR,aAAa7yB,UAAU4uB,OAMvB,SAAUvW,IAAKib,gBACXpzB,KAAK0O,UAAYyJ,IACjBnY,KAAK6yB,gBAAkBO,eACvBpzB,KAAKqY,SAASgb,OAAOlb,IAAImb,WAK7BX,aAAa7yB,UAAUuuB,WAGvB,WACI,GAAIruB,KAAK0O,UAAW,CAChB,GAAqB/F,GAAI3I,KAAKkE,SAC9BlE,MAAK0O,UAAU6kB,UACfvzB,KAAK0O,UAAY,KACjB1O,KAAK6yB,gBAAkB,KACvB7yB,KAAKgzB,iBAAiBQ,KAAK7qB,KAQnCgqB,aAAa7yB,UAAU+uB,aAKvB,SAAUuE,eAAgBjN,UACtB,GAAInmB,KAAKglB,YACL,KAAM,IAAI5iB,OAAM,8CAEpBpC,MAAK6yB,gBAAkBO,cACvB,IAAqBnlB,UAAWmlB,eAAeljB,gBAC1BhM,UAAiD+J,SAAqB,YAAW,SACtGkY,UAAWA,UAAYnmB,KAAKmmB,QAC5B,IAAqBjnB,SAAUinB,SAASsN,wBAAwBvvB,WAC3CwvB,cAAgB1zB,KAAKmjB,eAAemL,mBAAmBtuB,KAAKwK,MAAMlG,SAClEgU,SAAW,GAAIqb,gBAAeP,eAAgBM,cAAe1zB,KAAKqY,SAASC,SAChGtY,MAAK0O,UAAY1O,KAAKqY,SAASub,gBAAgB10B,QAASc,KAAKqY,SAASxV,OAAQyV,UAG9EtY,KAAK4yB,eAAeiB,eACpB7zB,KAAK8yB,eAAeU,KAAKxzB,KAAK0O,UAAUwkB,WAE5CP,aAAapD,aACPC,KAAMtvB,cAAcuvB,UAAWC,OAASC,SAAU,gBAAiBsC,SAAU,aAGnFU,aAAa/C,eAAiB,WAAc,QACtCJ,KAAM+C,yBACN/C,KAAMtvB,cAAc4zB,mBACpBtE,KAAMtvB,cAAc6zB,2BACpBvE,SAAMjiB,GAAWgiB,aAAeC,KAAMtvB,cAAc2vB,UAAWH,MAAO,YACtEF,KAAMtvB,cAAcgyB,qBAE1BS,aAAa3C,gBACT8C,iBAAqBtD,KAAMtvB,cAAc8zB,OAAQtE,MAAO,cACxDsD,mBAAuBxD,KAAMtvB,cAAc8zB,OAAQtE,MAAO,iBAEvDiD,gBAEPgB,eAAgC,WAChC,QAASA,gBAAejxB,MAAOgxB,cAAenjB,QAC1CvQ,KAAK0C,MAAQA,MACb1C,KAAK0zB,cAAgBA,cACrB1zB,KAAKuQ,OAASA,OAqBlB,MAdAojB,gBAAe7zB,UAAUsM,IAKzB,SAAUga,MAAO6N,eACb,MAAI7N,SAAUzX,eACH3O,KAAK0C,MAEZ0jB,QAAUmM,uBACHvyB,KAAK0zB,cAET1zB,KAAKuQ,OAAOnE,IAAIga,MAAO6N,gBAE3BN,kBAoBPO,mBAAoC,WACpC,QAASA,uBAET,MAAOA,uBAaPC,kBAAmC,WACnC,QAASA,sBAeT,MARAA,mBAAkBr0B,UAAUs0B,QAK5B,SAAU1xB,MAAOwD,IACb,MAAOvF,qBAAoBge,OAAOlY,KAAKP,KAAM,WAAc,MAAO7F,oBAAmB8F,GAAG,SAErFguB,qBAWPE,aAA8B,WAC9B,QAASA,iBAaT,MANAA,cAAav0B,UAAUs0B,QAKvB,SAAU1xB,MAAOwD,IAAM,MAAO7F,oBAAmB8F,GAAG,OAC7CkuB,gBAcPC,gBAAiC,WACjC,QAASA,iBAAgB70B,OAAQ80B,aAAc/b,SAAUF,SAAUkc,oBAC/Dx0B,KAAKP,OAASA,OACdO,KAAKsY,SAAWA,SAChBtY,KAAKw0B,mBAAqBA,kBAC1B,IAAqBC,aAAc,SAAU7vB,GAAK,MAAOnF,QAAOqpB,aAAa,GAAIpN,sBAAqB9W,KACjF8vB,UAAY,SAAU9vB,GAAK,MAAOnF,QAAOqpB,aAAa,GAAInN,oBAAmB/W,IAClG5E,MAAKuY,OAAS,GAAI+O,oBAAmBiN,aAAc/b,SAAUic,YAAaC,WA8F9E,MAzFAJ,iBAAgBx0B,UAAU60B,gBAG1B,WACI,GAAI3Z,OAAQhb,KACS40B,aAAevzB,qBAAqB6gB,OAAOzb,KAAKzG,KAAKP,OAAOsZ,OAAQ,SAAUE,GAAK,MAAOA,aAAa6B,gBAC5H9a,MAAKswB,aAAehwB,wBAAwB2jB,UAAUxd,KAAKmuB,aAAc,WAAc,MAAO5Z,OAAMoZ,YAAcpb,UAAU,eAKhIsb,gBAAgBx0B,UAAUs0B,QAG1B,WACI,GAAqB/V,UAAWre,KAAKsY,SAASlM,IAAIlM,cAAcoe,YAChE,OAAOte,MAAK60B,cAAcxW,SAAUre,KAAKP,OAAOiE,SAQpD4wB,gBAAgBx0B,UAAUiqB,YAG1B,WAAc/pB,KAAKswB,aAAarG,eAMhCqK,gBAAgBx0B,UAAU+0B,cAK1B,SAAUxW,SAAUtR,QAEhB,IAAK,GADgBzG,QACZ0G,GAAK,EAAGC,SAAWF,OAAQC,GAAKC,SAASpK,OAAQmK,KAAM,CAC5D,GAAItK,OAAQuK,SAASD,GAErB,IAAItK,MAAM6B,eAAiB7B,MAAMsJ,SAAWtJ,MAAMiS,cAAe,CAC7D,GAAqB8L,aAAc/d,MAAMiS,aACzCrO,KAAII,KAAK1G,KAAK60B,cAAcpU,YAAYrhB,OAAQqhB,YAAY1T,aAGvDrK,OAAM6B,eAAiB7B,MAAMsJ,QAClC1F,IAAII,KAAK1G,KAAK80B,cAAczW,SAAU3b,QAGjCA,MAAM4B,UACXgC,IAAII,KAAK1G,KAAK60B,cAAcxW,SAAU3b,MAAM4B,WAGpD,MAAOpD,wBAAuBgG,SAAST,KAAK/F,qBAAqBuL,KAAK3F,OAO1EguB,gBAAgBx0B,UAAUg1B,cAK1B,SAAUzW,SAAU3b,OAChB,GAAIsY,OAAQhb,IACZ,OAAOA,MAAKw0B,mBAAmBJ,QAAQ1xB,MAAO,WAC1C,GAAqBqyB,SAAU/Z,MAAMzC,OAAO4H,KAAK9B,SAAS/F,SAAU5V,MACpE,OAAOlC,wBAAuBuf,SAAStZ,KAAKsuB,QAAS,SAAUrxB,QAE3D,MADAhB,OAAMiS,cAAgBjR,OACfsX,MAAM6Z,cAAcnxB,OAAOtE,OAAQsE,OAAOqJ,aAI7DunB,gBAAgB/E,aACVC,KAAMtvB,cAAc80B,aAG1BV,gBAAgB1E,eAAiB,WAAc,QACzCJ,KAAMrY,SACNqY,KAAMtvB,cAAc+0B,wBACpBzF,KAAMtvB,cAAcg1B,WACpB1F,KAAMtvB,cAAci1B,WACpB3F,KAAM0E,sBAELI,mBAkBPc,mBAAqBzC,aAAc7D,WAAYsB,mBAAoBe,kBAKnEkE,qBAAuB,GAAIn1B,eAAcmnB,eAAe,wBAIxDiO,qBAAuB,GAAIp1B,eAAcmnB,eAAe,wBACxDkO,kBACAt1B,gBAAgBu1B,UACd3d,QAAS6E,cAAe+Y,SAAU9Y,uBAEhC9E,QAASV,OACT6C,WAAY9B,YACZ+B,MACI/Z,cAAcw1B,eAAgBhZ,cAAe6V,uBAAwBtyB,gBAAgBu1B,SAAUt1B,cAAci1B,SAC7Gj1B,cAAc+0B,sBAAuB/0B,cAAcg1B,SAAUjd,OAAQod,sBACpEvN,oBAAqB,GAAI5nB,eAAcy1B,WAAc5O,mBAAoB,GAAI7mB,eAAcy1B,YAGpGpD,wBACE1a,QAASlJ,eAAgBqL,WAAYV,UAAWW,MAAO9C,UACvDU,QAAS3X,cAAc+0B,sBAAuBQ,SAAUv1B,cAAc01B,wBACxEtB,gBACAD,aACAF,mBACEtc,QAASwd,qBAAsBrd,UAAYY,eAAe,KA2D5Did,aAA8B,WAE9B,QAASA,cAAa1pB,MAAO1M,SAuG7B,MAtEAo2B,cAAaC,QAiBb,SAAU/oB,OAAQrJ,QACd,OACI2a,SAAUwX,aACVE,WACIR,iBACA3d,cAAc7K,SAEV8K,QAASyd,qBACTtb,WAAYrC,oBACZsC,OAAQ9C,OAAQ,GAAIjX,eAAcy1B,SAAY,GAAIz1B,eAAc81B,aAElEne,QAASwd,qBAAsBrd,SAAUtU,aAEvCmU,QAAS5X,gBAAgBgxB,iBACzBjX,WAAY5C,wBACZ6C,MACIha,gBAAgBg2B,kBAAmB,GAAI/1B,eAAcg2B,OAAOj2B,gBAAgBk2B,eAAgB,GAAIj2B,eAAcy1B,UAAaN,wBAI/Hxd,QAASqc,mBACT9Z,YAAa1W,QAAUA,OAAO8wB,mBAAqB9wB,OAAO8wB,mBACtDH,eAENxc,QAAS3X,cAAcgX,aAAca,OAAO,EAAMiC,WAAY/C,oBAChE4C,8BAYZgc,aAAaO,SAKb,SAAUrpB,QACN,OAASsR,SAAUwX,aAAcE,WAAYne,cAAc7K,WAE/D8oB,aAAatG,aACPC,KAAMtvB,cAAcm2B,SAAU3G,OAAS4G,aAAclB,kBAAmBj2B,QAASi2B,sBAGvFS,aAAajG,eAAiB,WAAc,QACtCJ,SAAMjiB,GAAWgiB,aAAeC,KAAMtvB,cAAcy1B,WAAcnG,KAAMtvB,cAAcg2B,OAAQxG,MAAO4F,0BACrG9F,KAAMrY,OAAQoY,aAAeC,KAAMtvB,cAAcy1B,cAEhDE,gBAkHP/b,kBAAmC,WACnC,QAASA,mBAAkBxB,UACvBtY,KAAKsY,SAAWA,SAChBtY,KAAKu2B,gBAAiB,EACtBv2B,KAAKw2B,0BAA4B,GAAIp2B,cAAaooB,QAqGtD,MAhGA1O,mBAAkBha,UAAU2Z,eAG5B,WACI,GAAIuB,OAAQhb,IAEZ,OADyBA,MAAKsY,SAASlM,IAAInM,gBAAgBw2B,qBAAsB/uB,QAAQC,QAAQ,OACxFgkB,KAAK,WACV,GAAqBhkB,SAA2B,KAC3BrB,IAAM,GAAIoB,SAAQ,SAAU9C,GAAK,MAAO+C,SAAU/C,IAClDnF,OAASub,MAAM1C,SAASlM,IAAI+K,QAC5BsB,KAAOuC,MAAM1C,SAASlM,IAAIipB,qBAC/C,IAAIra,MAAM0b,iBAAiBje,OAASuC,MAAM2b,gBAAgBle,MACtD9Q,SAAQ,OAEP,IAA+B,aAA3B8Q,KAAK4Q,kBACV5pB,OAAO6pB,8BACP3hB,SAAQ,OAEP,CAAA,GAA+B,YAA3B8Q,KAAK4Q,kBAgBV,KAAM,IAAIjnB,OAAM,uCAAyCqW,KAAK4Q,kBAAoB,IAflF5pB,QAAOipB,MAAME,mBAAqB,WAE9B,MAAK5N,OAAMub,eAOkBl2B,mBAAmB8F,GAAG,OAN/C6U,MAAMub,gBAAiB,EACvB5uB,SAAQ,GACDqT,MAAMwb,4BAOrB/2B,OAAO4pB,oBAKX,MAAO/iB,QAOfwT,kBAAkBha,UAAU8Z,kBAI5B,SAAUgd,0BACN,GAAqBne,MAAOzY,KAAKsY,SAASlM,IAAIipB,sBACzBwB,UAAY72B,KAAKsY,SAASlM,IAAIkoB,iBAC9B70B,OAASO,KAAKsY,SAASlM,IAAI+K,QAC3BgB,IAAMnY,KAAKsY,SAASlM,IAAIlM,cAAcw1B,eACvDkB,4BAA6Bze,IAAI2e,WAAW,KAG5C92B,KAAK22B,gBAAgBle,MACrBhZ,OAAO4pB,oBAEFrpB,KAAK02B,iBAAiBje,OAC3BhZ,OAAO6pB,8BAEXuN,UAAUlC,kBACVl1B,OAAO2pB,uBAAuBjR,IAAI4e,eAAe,IACjD/2B,KAAKw2B,0BAA0BztB,KAAsB,MACrD/I,KAAKw2B,0BAA0BQ,aAMnCld,kBAAkBha,UAAU62B,gBAI5B,SAAUle,MACN,MAAkC,mBAA3BA,KAAK4Q,oBAAqE,IAA3B5Q,KAAK4Q,uBAC5B9b,KAA3BkL,KAAK4Q,mBAMbvP,kBAAkBha,UAAU42B,iBAI5B,SAAUje,MACN,MAAkC,oBAA3BA,KAAK4Q,oBAAsE,IAA3B5Q,KAAK4Q,mBAEhEvP,kBAAkByV,aACZC,KAAMtvB,cAAc80B,aAG1Blb,kBAAkB8V,eAAiB,WAAc,QAC3CJ,KAAMtvB,cAAci1B,YAEnBrb,qBAqBPI,mBAAqB,GAAIha,eAAcmnB,eAAe,sBAgCtD4P,QAAU,GAAI/2B,eAAcg3B,QAAQ,oBAExC/3B,SAAQ2vB,WAAaA,WACrB3vB,QAAQixB,mBAAqBA,mBAC7BjxB,QAAQgyB,iBAAmBA,iBAC3BhyB,QAAQwzB,aAAeA,aACvBxzB,QAAQ4c,cAAgBA,cACxB5c,QAAQ2c,gBAAkBA,gBAC1B3c,QAAQ0c,mBAAqBA,mBAC7B1c,QAAQyc,qBAAuBA,qBAC/Bzc,QAAQmc,eAAiBA,eACzBnc,QAAQkc,iBAAmBA,iBAC3Blc,QAAQ8b,iBAAmBA,iBAC3B9b,QAAQ2b,cAAgBA,cACxB3b,QAAQgc,gBAAkBA,gBAC1Bhc,QAAQyb,gBAAkBA,gBAC1Bzb,QAAQsc,WAAaA,WACrBtc,QAAQqc,aAAeA,aACvBrc,QAAQwc,mBAAqBA,mBAC7Bxc,QAAQuc,qBAAuBA,qBAC/Bvc,QAAQub,YAAcA,YACtBvb,QAAQic,iBAAmBA,iBAC3Bjc,QAAQ4nB,mBAAqBA,mBAC7B5nB,QAAQgY,OAASA,OACjBhY,QAAQ8Y,OAASA,OACjB9Y,QAAQk2B,qBAAuBA,qBAC/Bl2B,QAAQ+a,mBAAqBA,mBAC7B/a,QAAQ02B,aAAeA,aACvB12B,QAAQyY,cAAgBA,cACxBzY,QAAQozB,uBAAyBA,uBACjCpzB,QAAQmzB,cAAgBA,cACxBnzB,QAAQk1B,aAAeA,aACvBl1B,QAAQg1B,kBAAoBA,kBAC5Bh1B,QAAQ+0B,mBAAqBA,mBAC7B/0B,QAAQm1B,gBAAkBA,gBAC1Bn1B,QAAQwP,eAAiBA,eACzBxP,QAAQ2P,uBAAyBA,uBACjC3P,QAAQyP,YAAcA,YACtBzP,QAAQ4P,oBAAsBA,oBAC9B5P,QAAQiF,eAAiBA,eACzBjF,QAAQ2C,kBAAoBA,kBAC5B3C,QAAQ2oB,oBAAsBA,oBAC9B3oB,QAAQwd,qBAAuBA,qBAC/Bxd,QAAQkP,WAAaA,WACrBlP,QAAQ2I,gBAAkBA,gBAC1B3I,QAAQud,cAAgBA,cACxBvd,QAAQ0I,QAAUA,QAClB1I,QAAQ83B,QAAUA,QAClB93B,QAAQg4B,kBAAoB5B,iBAC5Bp2B,QAAQi4B,SAAW9xB,QACnBnG,QAAQk4B,GAAK/B,qBACbn2B,QAAQm4B,GAAKxd,kBACb3a,QAAQo4B,GAAK/d,kBACbra,QAAQq4B,GAAK7d,qBACbxa,QAAQs4B,GAAK9f,oBACbxY,QAAQu4B,GAAKtgB,wBACbjY,QAAQw4B,GAAK9d,yBACb1a,QAAQy4B,GAAKte,UACbna,QAAQ04B,GAAK5gB,mBACb9X,QAAQ24B,GAAK5f,YACb/Y,QAAQ44B,GAAKhW,KACb5iB,QAAQ64B,GAAKnpB,SAEbjN,OAAOsa,eAAe/c,QAAS,cAAgBmI,OAAO","file":"router.umd.min.js","sourcesContent":["/**\n * @license Angular v5.2.7-f8e70fb\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/core'), require('rxjs/BehaviorSubject'), require('rxjs/Subject'), require('rxjs/observable/of'), require('rxjs/operator/concatMap'), require('rxjs/operator/map'), require('rxjs/operator/mergeMap'), require('rxjs/Observable'), require('rxjs/observable/from'), require('rxjs/operator/catch'), require('rxjs/operator/concatAll'), require('rxjs/operator/first'), require('rxjs/util/EmptyError'), require('rxjs/observable/fromPromise'), require('rxjs/operator/every'), require('rxjs/operator/last'), require('rxjs/operator/mergeAll'), require('rxjs/operator/reduce'), require('@angular/platform-browser'), require('rxjs/operator/filter')) :\n\ttypeof define === 'function' && define.amd ? define('@angular/router', ['exports', '@angular/common', '@angular/core', 'rxjs/BehaviorSubject', 'rxjs/Subject', 'rxjs/observable/of', 'rxjs/operator/concatMap', 'rxjs/operator/map', 'rxjs/operator/mergeMap', 'rxjs/Observable', 'rxjs/observable/from', 'rxjs/operator/catch', 'rxjs/operator/concatAll', 'rxjs/operator/first', 'rxjs/util/EmptyError', 'rxjs/observable/fromPromise', 'rxjs/operator/every', 'rxjs/operator/last', 'rxjs/operator/mergeAll', 'rxjs/operator/reduce', '@angular/platform-browser', 'rxjs/operator/filter'], factory) :\n\t(factory((global.ng = global.ng || {}, global.ng.router = {}),global.ng.common,global.ng.core,global.Rx,global.Rx,global.Rx.Observable,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx,global.Rx.Observable,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx,global.Rx.Observable,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.ng.platformBrowser,global.Rx.Observable.prototype));\n}(this, (function (exports,_angular_common,_angular_core,rxjs_BehaviorSubject,rxjs_Subject,rxjs_observable_of,rxjs_operator_concatMap,rxjs_operator_map,rxjs_operator_mergeMap,rxjs_Observable,rxjs_observable_from,rxjs_operator_catch,rxjs_operator_concatAll,rxjs_operator_first,rxjs_util_EmptyError,rxjs_observable_fromPromise,rxjs_operator_every,rxjs_operator_last,rxjs_operator_mergeAll,rxjs_operator_reduce,_angular_platformBrowser,rxjs_operator_filter) { 'use strict';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n};\n\n/**\n * @license Angular v5.2.7-f8e70fb\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Base for events the Router goes through, as opposed to events tied to a specific\n * Route. `RouterEvent`s will only be fired one time for any given navigation.\n *\n * Example:\n *\n * ```\n * class MyService {\n *   constructor(public router: Router, logger: Logger) {\n *     router.events.filter(e => e instanceof RouterEvent).subscribe(e => {\n *       logger.log(e.id, e.url);\n *     });\n *   }\n * }\n * ```\n *\n * \\@experimental\n */\nvar RouterEvent = /** @class */ (function () {\n    function RouterEvent(id, url) {\n        this.id = id;\n        this.url = url;\n    }\n    return RouterEvent;\n}());\n/**\n * \\@whatItDoes Represents an event triggered when a navigation starts.\n *\n * \\@stable\n */\nvar NavigationStart = /** @class */ (function (_super) {\n    __extends(NavigationStart, _super);\n    function NavigationStart() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /** @docsNotRequired */\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    NavigationStart.prototype.toString = /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    function () { return \"NavigationStart(id: \" + this.id + \", url: '\" + this.url + \"')\"; };\n    return NavigationStart;\n}(RouterEvent));\n/**\n * \\@whatItDoes Represents an event triggered when a navigation ends successfully.\n *\n * \\@stable\n */\nvar NavigationEnd = /** @class */ (function (_super) {\n    __extends(NavigationEnd, _super);\n    function NavigationEnd(/** @docsNotRequired */\n        /** @docsNotRequired */\n        id, /** @docsNotRequired */\n        /** @docsNotRequired */\n        url, urlAfterRedirects) {\n        var _this = _super.call(this, id, url) || this;\n        _this.urlAfterRedirects = urlAfterRedirects;\n        return _this;\n    }\n    /** @docsNotRequired */\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    NavigationEnd.prototype.toString = /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    function () {\n        return \"NavigationEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"')\";\n    };\n    return NavigationEnd;\n}(RouterEvent));\n/**\n * \\@whatItDoes Represents an event triggered when a navigation is canceled.\n *\n * \\@stable\n */\nvar NavigationCancel = /** @class */ (function (_super) {\n    __extends(NavigationCancel, _super);\n    function NavigationCancel(/** @docsNotRequired */\n        /** @docsNotRequired */\n        id, /** @docsNotRequired */\n        /** @docsNotRequired */\n        url, reason) {\n        var _this = _super.call(this, id, url) || this;\n        _this.reason = reason;\n        return _this;\n    }\n    /** @docsNotRequired */\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    NavigationCancel.prototype.toString = /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    function () { return \"NavigationCancel(id: \" + this.id + \", url: '\" + this.url + \"')\"; };\n    return NavigationCancel;\n}(RouterEvent));\n/**\n * \\@whatItDoes Represents an event triggered when a navigation fails due to an unexpected error.\n *\n * \\@stable\n */\nvar NavigationError = /** @class */ (function (_super) {\n    __extends(NavigationError, _super);\n    function NavigationError(/** @docsNotRequired */\n        /** @docsNotRequired */\n        id, /** @docsNotRequired */\n        /** @docsNotRequired */\n        url, error) {\n        var _this = _super.call(this, id, url) || this;\n        _this.error = error;\n        return _this;\n    }\n    /** @docsNotRequired */\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    NavigationError.prototype.toString = /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    function () {\n        return \"NavigationError(id: \" + this.id + \", url: '\" + this.url + \"', error: \" + this.error + \")\";\n    };\n    return NavigationError;\n}(RouterEvent));\n/**\n * \\@whatItDoes Represents an event triggered when routes are recognized.\n *\n * \\@stable\n */\nvar RoutesRecognized = /** @class */ (function (_super) {\n    __extends(RoutesRecognized, _super);\n    function RoutesRecognized(/** @docsNotRequired */\n        /** @docsNotRequired */\n        id, /** @docsNotRequired */\n        /** @docsNotRequired */\n        url, urlAfterRedirects, state) {\n        var _this = _super.call(this, id, url) || this;\n        _this.urlAfterRedirects = urlAfterRedirects;\n        _this.state = state;\n        return _this;\n    }\n    /** @docsNotRequired */\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    RoutesRecognized.prototype.toString = /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    function () {\n        return \"RoutesRecognized(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return RoutesRecognized;\n}(RouterEvent));\n/**\n * \\@whatItDoes Represents the start of the Guard phase of routing.\n *\n * \\@experimental\n */\nvar GuardsCheckStart = /** @class */ (function (_super) {\n    __extends(GuardsCheckStart, _super);\n    function GuardsCheckStart(/** @docsNotRequired */\n        /** @docsNotRequired */\n        id, /** @docsNotRequired */\n        /** @docsNotRequired */\n        url, urlAfterRedirects, state) {\n        var _this = _super.call(this, id, url) || this;\n        _this.urlAfterRedirects = urlAfterRedirects;\n        _this.state = state;\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    GuardsCheckStart.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        return \"GuardsCheckStart(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return GuardsCheckStart;\n}(RouterEvent));\n/**\n * \\@whatItDoes Represents the end of the Guard phase of routing.\n *\n * \\@experimental\n */\nvar GuardsCheckEnd = /** @class */ (function (_super) {\n    __extends(GuardsCheckEnd, _super);\n    function GuardsCheckEnd(/** @docsNotRequired */\n        /** @docsNotRequired */\n        id, /** @docsNotRequired */\n        /** @docsNotRequired */\n        url, urlAfterRedirects, state, shouldActivate) {\n        var _this = _super.call(this, id, url) || this;\n        _this.urlAfterRedirects = urlAfterRedirects;\n        _this.state = state;\n        _this.shouldActivate = shouldActivate;\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    GuardsCheckEnd.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        return \"GuardsCheckEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \", shouldActivate: \" + this.shouldActivate + \")\";\n    };\n    return GuardsCheckEnd;\n}(RouterEvent));\n/**\n * \\@whatItDoes Represents the start of the Resolve phase of routing. The timing of this\n * event may change, thus it's experimental. In the current iteration it will run\n * in the \"resolve\" phase whether there's things to resolve or not. In the future this\n * behavior may change to only run when there are things to be resolved.\n *\n * \\@experimental\n */\nvar ResolveStart = /** @class */ (function (_super) {\n    __extends(ResolveStart, _super);\n    function ResolveStart(/** @docsNotRequired */\n        /** @docsNotRequired */\n        id, /** @docsNotRequired */\n        /** @docsNotRequired */\n        url, urlAfterRedirects, state) {\n        var _this = _super.call(this, id, url) || this;\n        _this.urlAfterRedirects = urlAfterRedirects;\n        _this.state = state;\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    ResolveStart.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        return \"ResolveStart(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return ResolveStart;\n}(RouterEvent));\n/**\n * \\@whatItDoes Represents the end of the Resolve phase of routing. See note on\n * {\\@link ResolveStart} for use of this experimental API.\n *\n * \\@experimental\n */\nvar ResolveEnd = /** @class */ (function (_super) {\n    __extends(ResolveEnd, _super);\n    function ResolveEnd(/** @docsNotRequired */\n        /** @docsNotRequired */\n        id, /** @docsNotRequired */\n        /** @docsNotRequired */\n        url, urlAfterRedirects, state) {\n        var _this = _super.call(this, id, url) || this;\n        _this.urlAfterRedirects = urlAfterRedirects;\n        _this.state = state;\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    ResolveEnd.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        return \"ResolveEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return ResolveEnd;\n}(RouterEvent));\n/**\n * \\@whatItDoes Represents an event triggered before lazy loading a route config.\n *\n * \\@experimental\n */\nvar RouteConfigLoadStart = /** @class */ (function () {\n    function RouteConfigLoadStart(route) {\n        this.route = route;\n    }\n    /**\n     * @return {?}\n     */\n    RouteConfigLoadStart.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return \"RouteConfigLoadStart(path: \" + this.route.path + \")\"; };\n    return RouteConfigLoadStart;\n}());\n/**\n * \\@whatItDoes Represents an event triggered when a route has been lazy loaded.\n *\n * \\@experimental\n */\nvar RouteConfigLoadEnd = /** @class */ (function () {\n    function RouteConfigLoadEnd(route) {\n        this.route = route;\n    }\n    /**\n     * @return {?}\n     */\n    RouteConfigLoadEnd.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return \"RouteConfigLoadEnd(path: \" + this.route.path + \")\"; };\n    return RouteConfigLoadEnd;\n}());\n/**\n * \\@whatItDoes Represents the start of end of the Resolve phase of routing. See note on\n * {\\@link ChildActivationEnd} for use of this experimental API.\n *\n * \\@experimental\n */\nvar ChildActivationStart = /** @class */ (function () {\n    function ChildActivationStart(snapshot) {\n        this.snapshot = snapshot;\n    }\n    /**\n     * @return {?}\n     */\n    ChildActivationStart.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n        return \"ChildActivationStart(path: '\" + path + \"')\";\n    };\n    return ChildActivationStart;\n}());\n/**\n * \\@whatItDoes Represents the start of end of the Resolve phase of routing. See note on\n * {\\@link ChildActivationStart} for use of this experimental API.\n *\n * \\@experimental\n */\nvar ChildActivationEnd = /** @class */ (function () {\n    function ChildActivationEnd(snapshot) {\n        this.snapshot = snapshot;\n    }\n    /**\n     * @return {?}\n     */\n    ChildActivationEnd.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n        return \"ChildActivationEnd(path: '\" + path + \"')\";\n    };\n    return ChildActivationEnd;\n}());\n/**\n * \\@whatItDoes Represents the start of end of the Resolve phase of routing. See note on\n * {\\@link ActivationEnd} for use of this experimental API.\n *\n * \\@experimental\n */\nvar ActivationStart = /** @class */ (function () {\n    function ActivationStart(snapshot) {\n        this.snapshot = snapshot;\n    }\n    /**\n     * @return {?}\n     */\n    ActivationStart.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n        return \"ActivationStart(path: '\" + path + \"')\";\n    };\n    return ActivationStart;\n}());\n/**\n * \\@whatItDoes Represents the start of end of the Resolve phase of routing. See note on\n * {\\@link ActivationStart} for use of this experimental API.\n *\n * \\@experimental\n */\nvar ActivationEnd = /** @class */ (function () {\n    function ActivationEnd(snapshot) {\n        this.snapshot = snapshot;\n    }\n    /**\n     * @return {?}\n     */\n    ActivationEnd.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n        return \"ActivationEnd(path: '\" + path + \"')\";\n    };\n    return ActivationEnd;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Name of the primary outlet.\n *\n * \\@stable\n */\nvar PRIMARY_OUTLET = 'primary';\n/**\n * Matrix and Query parameters.\n *\n * `ParamMap` makes it easier to work with parameters as they could have either a single value or\n * multiple value. Because this should be known by the user, calling `get` or `getAll` returns the\n * correct type (either `string` or `string[]`).\n *\n * The API is inspired by the URLSearchParams interface.\n * see https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams\n *\n * \\@stable\n * @record\n */\n\nvar ParamsAsMap = /** @class */ (function () {\n    function ParamsAsMap(params) {\n        this.params = params || {};\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ParamsAsMap.prototype.has = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this.params.hasOwnProperty(name); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ParamsAsMap.prototype.get = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (this.has(name)) {\n            var /** @type {?} */ v = this.params[name];\n            return Array.isArray(v) ? v[0] : v;\n        }\n        return null;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ParamsAsMap.prototype.getAll = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (this.has(name)) {\n            var /** @type {?} */ v = this.params[name];\n            return Array.isArray(v) ? v : [v];\n        }\n        return [];\n    };\n    Object.defineProperty(ParamsAsMap.prototype, \"keys\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return Object.keys(this.params); },\n        enumerable: true,\n        configurable: true\n    });\n    return ParamsAsMap;\n}());\n/**\n * Convert a {\\@link Params} instance to a {\\@link ParamMap}.\n *\n * \\@stable\n * @param {?} params\n * @return {?}\n */\nfunction convertToParamMap(params) {\n    return new ParamsAsMap(params);\n}\nvar NAVIGATION_CANCELING_ERROR = 'ngNavigationCancelingError';\n/**\n * @param {?} message\n * @return {?}\n */\nfunction navigationCancelingError(message) {\n    var /** @type {?} */ error = Error('NavigationCancelingError: ' + message);\n    (/** @type {?} */ (error))[NAVIGATION_CANCELING_ERROR] = true;\n    return error;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction isNavigationCancelingError(error) {\n    return error && (/** @type {?} */ (error))[NAVIGATION_CANCELING_ERROR];\n}\n/**\n * @param {?} segments\n * @param {?} segmentGroup\n * @param {?} route\n * @return {?}\n */\nfunction defaultUrlMatcher(segments, segmentGroup, route) {\n    var /** @type {?} */ parts = /** @type {?} */ ((route.path)).split('/');\n    if (parts.length > segments.length) {\n        // The actual URL is shorter than the config, no match\n        return null;\n    }\n    if (route.pathMatch === 'full' &&\n        (segmentGroup.hasChildren() || parts.length < segments.length)) {\n        // The config is longer than the actual URL but we are looking for a full match, return null\n        return null;\n    }\n    var /** @type {?} */ posParams = {};\n    // Check each config part against the actual URL\n    for (var /** @type {?} */ index = 0; index < parts.length; index++) {\n        var /** @type {?} */ part = parts[index];\n        var /** @type {?} */ segment = segments[index];\n        var /** @type {?} */ isParameter = part.startsWith(':');\n        if (isParameter) {\n            posParams[part.substring(1)] = segment;\n        }\n        else if (part !== segment.path) {\n            // The actual URL part does not match the config, no match\n            return null;\n        }\n    }\n    return { consumed: segments.slice(0, parts.length), posParams: posParams };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * See {\\@link Routes} for more details.\n * \\@stable\n * @record\n */\n\nvar LoadedRouterConfig = /** @class */ (function () {\n    function LoadedRouterConfig(routes, module) {\n        this.routes = routes;\n        this.module = module;\n    }\n    return LoadedRouterConfig;\n}());\n/**\n * @param {?} config\n * @param {?=} parentPath\n * @return {?}\n */\nfunction validateConfig(config, parentPath) {\n    if (parentPath === void 0) { parentPath = ''; }\n    // forEach doesn't iterate undefined values\n    for (var /** @type {?} */ i = 0; i < config.length; i++) {\n        var /** @type {?} */ route = config[i];\n        var /** @type {?} */ fullPath = getFullPath(parentPath, route);\n        validateNode(route, fullPath);\n    }\n}\n/**\n * @param {?} route\n * @param {?} fullPath\n * @return {?}\n */\nfunction validateNode(route, fullPath) {\n    if (!route) {\n        throw new Error(\"\\n      Invalid configuration of route '\" + fullPath + \"': Encountered undefined route.\\n      The reason might be an extra comma.\\n\\n      Example:\\n      const routes: Routes = [\\n        { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\\n        { path: 'dashboard',  component: DashboardComponent },, << two commas\\n        { path: 'detail/:id', component: HeroDetailComponent }\\n      ];\\n    \");\n    }\n    if (Array.isArray(route)) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': Array cannot be specified\");\n    }\n    if (!route.component && (route.outlet && route.outlet !== PRIMARY_OUTLET)) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': a componentless route cannot have a named outlet set\");\n    }\n    if (route.redirectTo && route.children) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and children cannot be used together\");\n    }\n    if (route.redirectTo && route.loadChildren) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and loadChildren cannot be used together\");\n    }\n    if (route.children && route.loadChildren) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': children and loadChildren cannot be used together\");\n    }\n    if (route.redirectTo && route.component) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and component cannot be used together\");\n    }\n    if (route.path && route.matcher) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': path and matcher cannot be used together\");\n    }\n    if (route.redirectTo === void 0 && !route.component && !route.children && !route.loadChildren) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"'. One of the following must be provided: component, redirectTo, children or loadChildren\");\n    }\n    if (route.path === void 0 && route.matcher === void 0) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': routes must have either a path or a matcher specified\");\n    }\n    if (typeof route.path === 'string' && route.path.charAt(0) === '/') {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': path cannot start with a slash\");\n    }\n    if (route.path === '' && route.redirectTo !== void 0 && route.pathMatch === void 0) {\n        var /** @type {?} */ exp = \"The default value of 'pathMatch' is 'prefix', but often the intent is to use 'full'.\";\n        throw new Error(\"Invalid configuration of route '{path: \\\"\" + fullPath + \"\\\", redirectTo: \\\"\" + route.redirectTo + \"\\\"}': please provide 'pathMatch'. \" + exp);\n    }\n    if (route.pathMatch !== void 0 && route.pathMatch !== 'full' && route.pathMatch !== 'prefix') {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': pathMatch can only be set to 'prefix' or 'full'\");\n    }\n    if (route.children) {\n        validateConfig(route.children, fullPath);\n    }\n}\n/**\n * @param {?} parentPath\n * @param {?} currentRoute\n * @return {?}\n */\nfunction getFullPath(parentPath, currentRoute) {\n    if (!currentRoute) {\n        return parentPath;\n    }\n    if (!parentPath && !currentRoute.path) {\n        return '';\n    }\n    else if (parentPath && !currentRoute.path) {\n        return parentPath + \"/\";\n    }\n    else if (!parentPath && currentRoute.path) {\n        return currentRoute.path;\n    }\n    else {\n        return parentPath + \"/\" + currentRoute.path;\n    }\n}\n/**\n * @param {?} r\n * @return {?}\n */\nfunction copyConfig(r) {\n    var /** @type {?} */ children = r.children && r.children.map(copyConfig);\n    return children ? __assign({}, r, { children: children }) : __assign({}, r);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction shallowEqualArrays(a, b) {\n    if (a.length !== b.length)\n        return false;\n    for (var /** @type {?} */ i = 0; i < a.length; ++i) {\n        if (!shallowEqual(a[i], b[i]))\n            return false;\n    }\n    return true;\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction shallowEqual(a, b) {\n    var /** @type {?} */ k1 = Object.keys(a);\n    var /** @type {?} */ k2 = Object.keys(b);\n    if (k1.length != k2.length) {\n        return false;\n    }\n    var /** @type {?} */ key;\n    for (var /** @type {?} */ i = 0; i < k1.length; i++) {\n        key = k1[i];\n        if (a[key] !== b[key]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Flattens single-level nested arrays.\n * @template T\n * @param {?} arr\n * @return {?}\n */\nfunction flatten(arr) {\n    return Array.prototype.concat.apply([], arr);\n}\n/**\n * Return the last element of an array.\n * @template T\n * @param {?} a\n * @return {?}\n */\nfunction last$1(a) {\n    return a.length > 0 ? a[a.length - 1] : null;\n}\n/**\n * Verifys all booleans in an array are `true`.\n * @param {?} bools\n * @return {?}\n */\n\n/**\n * @template K, V\n * @param {?} map\n * @param {?} callback\n * @return {?}\n */\nfunction forEach(map$$1, callback) {\n    for (var /** @type {?} */ prop in map$$1) {\n        if (map$$1.hasOwnProperty(prop)) {\n            callback(map$$1[prop], prop);\n        }\n    }\n}\n/**\n * @template A, B\n * @param {?} obj\n * @param {?} fn\n * @return {?}\n */\nfunction waitForMap(obj, fn) {\n    if (Object.keys(obj).length === 0) {\n        return rxjs_observable_of.of({});\n    }\n    var /** @type {?} */ waitHead = [];\n    var /** @type {?} */ waitTail = [];\n    var /** @type {?} */ res = {};\n    forEach(obj, function (a, k) {\n        var /** @type {?} */ mapped = rxjs_operator_map.map.call(fn(k, a), function (r) { return res[k] = r; });\n        if (k === PRIMARY_OUTLET) {\n            waitHead.push(mapped);\n        }\n        else {\n            waitTail.push(mapped);\n        }\n    });\n    var /** @type {?} */ concat$ = rxjs_operator_concatAll.concatAll.call(rxjs_observable_of.of.apply(void 0, waitHead.concat(waitTail)));\n    var /** @type {?} */ last$ = rxjs_operator_last.last.call(concat$);\n    return rxjs_operator_map.map.call(last$, function () { return res; });\n}\n/**\n * ANDs Observables by merging all input observables, reducing to an Observable verifying all\n * input Observables return `true`.\n * @param {?} observables\n * @return {?}\n */\nfunction andObservables(observables) {\n    var /** @type {?} */ merged$ = rxjs_operator_mergeAll.mergeAll.call(observables);\n    return rxjs_operator_every.every.call(merged$, function (result) { return result === true; });\n}\n/**\n * @template T\n * @param {?} value\n * @return {?}\n */\nfunction wrapIntoObservable(value) {\n    if (_angular_core.ɵisObservable(value)) {\n        return value;\n    }\n    if (_angular_core.ɵisPromise(value)) {\n        // Use `Promise.resolve()` to wrap promise-like instances.\n        // Required ie when a Resolver returns a AngularJS `$q` promise to correctly trigger the\n        // change detection.\n        return rxjs_observable_fromPromise.fromPromise(Promise.resolve(value));\n    }\n    return rxjs_observable_of.of(/** @type {?} */ (value));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @return {?}\n */\nfunction createEmptyUrlTree() {\n    return new UrlTree(new UrlSegmentGroup([], {}), {}, null);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @param {?} exact\n * @return {?}\n */\nfunction containsTree(container, containee, exact) {\n    if (exact) {\n        return equalQueryParams(container.queryParams, containee.queryParams) &&\n            equalSegmentGroups(container.root, containee.root);\n    }\n    return containsQueryParams(container.queryParams, containee.queryParams) &&\n        containsSegmentGroup(container.root, containee.root);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @return {?}\n */\nfunction equalQueryParams(container, containee) {\n    return shallowEqual(container, containee);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @return {?}\n */\nfunction equalSegmentGroups(container, containee) {\n    if (!equalPath(container.segments, containee.segments))\n        return false;\n    if (container.numberOfChildren !== containee.numberOfChildren)\n        return false;\n    for (var /** @type {?} */ c in containee.children) {\n        if (!container.children[c])\n            return false;\n        if (!equalSegmentGroups(container.children[c], containee.children[c]))\n            return false;\n    }\n    return true;\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @return {?}\n */\nfunction containsQueryParams(container, containee) {\n    return Object.keys(containee).length <= Object.keys(container).length &&\n        Object.keys(containee).every(function (key) { return containee[key] === container[key]; });\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @return {?}\n */\nfunction containsSegmentGroup(container, containee) {\n    return containsSegmentGroupHelper(container, containee, containee.segments);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @param {?} containeePaths\n * @return {?}\n */\nfunction containsSegmentGroupHelper(container, containee, containeePaths) {\n    if (container.segments.length > containeePaths.length) {\n        var /** @type {?} */ current = container.segments.slice(0, containeePaths.length);\n        if (!equalPath(current, containeePaths))\n            return false;\n        if (containee.hasChildren())\n            return false;\n        return true;\n    }\n    else if (container.segments.length === containeePaths.length) {\n        if (!equalPath(container.segments, containeePaths))\n            return false;\n        for (var /** @type {?} */ c in containee.children) {\n            if (!container.children[c])\n                return false;\n            if (!containsSegmentGroup(container.children[c], containee.children[c]))\n                return false;\n        }\n        return true;\n    }\n    else {\n        var /** @type {?} */ current = containeePaths.slice(0, container.segments.length);\n        var /** @type {?} */ next = containeePaths.slice(container.segments.length);\n        if (!equalPath(container.segments, current))\n            return false;\n        if (!container.children[PRIMARY_OUTLET])\n            return false;\n        return containsSegmentGroupHelper(container.children[PRIMARY_OUTLET], containee, next);\n    }\n}\n/**\n * \\@whatItDoes Represents the parsed URL.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const tree: UrlTree =\n *       router.parseUrl('/team/33/(user/victor//support:help)?debug=true#fragment');\n *     const f = tree.fragment; // return 'fragment'\n *     const q = tree.queryParams; // returns {debug: 'true'}\n *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n *     const s: UrlSegment[] = g.segments; // returns 2 segments 'team' and '33'\n *     g.children[PRIMARY_OUTLET].segments; // returns 2 segments 'user' and 'victor'\n *     g.children['support'].segments; // return 1 segment 'help'\n *   }\n * }\n * ```\n *\n * \\@description\n *\n * Since a router state is a tree, and the URL is nothing but a serialized state, the URL is a\n * serialized tree.\n * UrlTree is a data structure that provides a lot of affordances in dealing with URLs\n *\n * \\@stable\n */\nvar UrlTree = /** @class */ (function () {\n    /** @internal */\n    function UrlTree(root, queryParams, fragment) {\n        this.root = root;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n    }\n    Object.defineProperty(UrlTree.prototype, \"queryParamMap\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            if (!this._queryParamMap) {\n                this._queryParamMap = convertToParamMap(this.queryParams);\n            }\n            return this._queryParamMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @docsNotRequired */\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    UrlTree.prototype.toString = /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    function () { return DEFAULT_SERIALIZER.serialize(this); };\n    return UrlTree;\n}());\n/**\n * \\@whatItDoes Represents the parsed URL segment group.\n *\n * See {\\@link UrlTree} for more information.\n *\n * \\@stable\n */\nvar UrlSegmentGroup = /** @class */ (function () {\n    function UrlSegmentGroup(segments, children) {\n        var _this = this;\n        this.segments = segments;\n        this.children = children;\n        /**\n         * The parent node in the url tree\n         */\n        this.parent = null;\n        forEach(children, function (v, k) { return v.parent = _this; });\n    }\n    /** Whether the segment has child segments */\n    /**\n     * Whether the segment has child segments\n     * @return {?}\n     */\n    UrlSegmentGroup.prototype.hasChildren = /**\n     * Whether the segment has child segments\n     * @return {?}\n     */\n    function () { return this.numberOfChildren > 0; };\n    Object.defineProperty(UrlSegmentGroup.prototype, \"numberOfChildren\", {\n        /** Number of child segments */\n        get: /**\n         * Number of child segments\n         * @return {?}\n         */\n        function () { return Object.keys(this.children).length; },\n        enumerable: true,\n        configurable: true\n    });\n    /** @docsNotRequired */\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    UrlSegmentGroup.prototype.toString = /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    function () { return serializePaths(this); };\n    return UrlSegmentGroup;\n}());\n/**\n * \\@whatItDoes Represents a single URL segment.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const tree: UrlTree = router.parseUrl('/team;id=33');\n *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n *     const s: UrlSegment[] = g.segments;\n *     s[0].path; // returns 'team'\n *     s[0].parameters; // returns {id: 33}\n *   }\n * }\n * ```\n *\n * \\@description\n *\n * A UrlSegment is a part of a URL between the two slashes. It contains a path and the matrix\n * parameters associated with the segment.\n *\n * \\@stable\n */\nvar UrlSegment = /** @class */ (function () {\n    function UrlSegment(path, parameters) {\n        this.path = path;\n        this.parameters = parameters;\n    }\n    Object.defineProperty(UrlSegment.prototype, \"parameterMap\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            if (!this._parameterMap) {\n                this._parameterMap = convertToParamMap(this.parameters);\n            }\n            return this._parameterMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @docsNotRequired */\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    UrlSegment.prototype.toString = /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    function () { return serializePath(this); };\n    return UrlSegment;\n}());\n/**\n * @param {?} as\n * @param {?} bs\n * @return {?}\n */\nfunction equalSegments(as, bs) {\n    return equalPath(as, bs) && as.every(function (a, i) { return shallowEqual(a.parameters, bs[i].parameters); });\n}\n/**\n * @param {?} as\n * @param {?} bs\n * @return {?}\n */\nfunction equalPath(as, bs) {\n    if (as.length !== bs.length)\n        return false;\n    return as.every(function (a, i) { return a.path === bs[i].path; });\n}\n/**\n * @template T\n * @param {?} segment\n * @param {?} fn\n * @return {?}\n */\nfunction mapChildrenIntoArray(segment, fn) {\n    var /** @type {?} */ res = [];\n    forEach(segment.children, function (child, childOutlet) {\n        if (childOutlet === PRIMARY_OUTLET) {\n            res = res.concat(fn(child, childOutlet));\n        }\n    });\n    forEach(segment.children, function (child, childOutlet) {\n        if (childOutlet !== PRIMARY_OUTLET) {\n            res = res.concat(fn(child, childOutlet));\n        }\n    });\n    return res;\n}\n/**\n * \\@whatItDoes Serializes and deserializes a URL string into a URL tree.\n *\n * \\@description The url serialization strategy is customizable. You can\n * make all URLs case insensitive by providing a custom UrlSerializer.\n *\n * See {\\@link DefaultUrlSerializer} for an example of a URL serializer.\n *\n * \\@stable\n * @abstract\n */\nvar UrlSerializer = /** @class */ (function () {\n    function UrlSerializer() {\n    }\n    return UrlSerializer;\n}());\n/**\n * \\@whatItDoes A default implementation of the {\\@link UrlSerializer}.\n *\n * \\@description\n *\n * Example URLs:\n *\n * ```\n * /inbox/33(popup:compose)\n * /inbox/33;open=true/messages/44\n * ```\n *\n * DefaultUrlSerializer uses parentheses to serialize secondary segments (e.g., popup:compose), the\n * colon syntax to specify the outlet, and the ';parameter=value' syntax (e.g., open=true) to\n * specify route specific parameters.\n *\n * \\@stable\n */\nvar DefaultUrlSerializer = /** @class */ (function () {\n    function DefaultUrlSerializer() {\n    }\n    /** Parses a url into a {@link UrlTree} */\n    /**\n     * Parses a url into a {\\@link UrlTree}\n     * @param {?} url\n     * @return {?}\n     */\n    DefaultUrlSerializer.prototype.parse = /**\n     * Parses a url into a {\\@link UrlTree}\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) {\n        var /** @type {?} */ p = new UrlParser(url);\n        return new UrlTree(p.parseRootSegment(), p.parseQueryParams(), p.parseFragment());\n    };\n    /** Converts a {@link UrlTree} into a url */\n    /**\n     * Converts a {\\@link UrlTree} into a url\n     * @param {?} tree\n     * @return {?}\n     */\n    DefaultUrlSerializer.prototype.serialize = /**\n     * Converts a {\\@link UrlTree} into a url\n     * @param {?} tree\n     * @return {?}\n     */\n    function (tree) {\n        var /** @type {?} */ segment = \"/\" + serializeSegment(tree.root, true);\n        var /** @type {?} */ query = serializeQueryParams(tree.queryParams);\n        var /** @type {?} */ fragment = typeof tree.fragment === \"string\" ? \"#\" + encodeURI((/** @type {?} */ ((tree.fragment)))) : '';\n        return \"\" + segment + query + fragment;\n    };\n    return DefaultUrlSerializer;\n}());\nvar DEFAULT_SERIALIZER = new DefaultUrlSerializer();\n/**\n * @param {?} segment\n * @return {?}\n */\nfunction serializePaths(segment) {\n    return segment.segments.map(function (p) { return serializePath(p); }).join('/');\n}\n/**\n * @param {?} segment\n * @param {?} root\n * @return {?}\n */\nfunction serializeSegment(segment, root) {\n    if (!segment.hasChildren()) {\n        return serializePaths(segment);\n    }\n    if (root) {\n        var /** @type {?} */ primary = segment.children[PRIMARY_OUTLET] ?\n            serializeSegment(segment.children[PRIMARY_OUTLET], false) :\n            '';\n        var /** @type {?} */ children_1 = [];\n        forEach(segment.children, function (v, k) {\n            if (k !== PRIMARY_OUTLET) {\n                children_1.push(k + \":\" + serializeSegment(v, false));\n            }\n        });\n        return children_1.length > 0 ? primary + \"(\" + children_1.join('//') + \")\" : primary;\n    }\n    else {\n        var /** @type {?} */ children = mapChildrenIntoArray(segment, function (v, k) {\n            if (k === PRIMARY_OUTLET) {\n                return [serializeSegment(segment.children[PRIMARY_OUTLET], false)];\n            }\n            return [k + \":\" + serializeSegment(v, false)];\n        });\n        return serializePaths(segment) + \"/(\" + children.join('//') + \")\";\n    }\n}\n/**\n * This method is intended for encoding *key* or *value* parts of query component. We need a custom\n * method because encodeURIComponent is too aggressive and encodes stuff that doesn't have to be\n * encoded per http://tools.ietf.org/html/rfc3986:\n *    query         = *( pchar / \"/\" / \"?\" )\n *    pchar         = unreserved / pct-encoded / sub-delims / \":\" / \"\\@\"\n *    unreserved    = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n *    pct-encoded   = \"%\" HEXDIG HEXDIG\n *    sub-delims    = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\"\n *                     / \"*\" / \"+\" / \",\" / \";\" / \"=\"\n * @param {?} s\n * @return {?}\n */\nfunction encode(s) {\n    return encodeURIComponent(s)\n        .replace(/%40/g, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/g, '$')\n        .replace(/%2C/gi, ',')\n        .replace(/%3B/gi, ';');\n}\n/**\n * @param {?} s\n * @return {?}\n */\nfunction decode(s) {\n    return decodeURIComponent(s);\n}\n/**\n * @param {?} path\n * @return {?}\n */\nfunction serializePath(path) {\n    return \"\" + encode(path.path) + serializeParams(path.parameters);\n}\n/**\n * @param {?} params\n * @return {?}\n */\nfunction serializeParams(params) {\n    return Object.keys(params).map(function (key) { return \";\" + encode(key) + \"=\" + encode(params[key]); }).join('');\n}\n/**\n * @param {?} params\n * @return {?}\n */\nfunction serializeQueryParams(params) {\n    var /** @type {?} */ strParams = Object.keys(params).map(function (name) {\n        var /** @type {?} */ value = params[name];\n        return Array.isArray(value) ? value.map(function (v) { return encode(name) + \"=\" + encode(v); }).join('&') :\n            encode(name) + \"=\" + encode(value);\n    });\n    return strParams.length ? \"?\" + strParams.join(\"&\") : '';\n}\nvar SEGMENT_RE = /^[^\\/()?;=&#]+/;\n/**\n * @param {?} str\n * @return {?}\n */\nfunction matchSegments(str) {\n    var /** @type {?} */ match = str.match(SEGMENT_RE);\n    return match ? match[0] : '';\n}\nvar QUERY_PARAM_RE = /^[^=?&#]+/;\n/**\n * @param {?} str\n * @return {?}\n */\nfunction matchQueryParams(str) {\n    var /** @type {?} */ match = str.match(QUERY_PARAM_RE);\n    return match ? match[0] : '';\n}\nvar QUERY_PARAM_VALUE_RE = /^[^?&#]+/;\n/**\n * @param {?} str\n * @return {?}\n */\nfunction matchUrlQueryParamValue(str) {\n    var /** @type {?} */ match = str.match(QUERY_PARAM_VALUE_RE);\n    return match ? match[0] : '';\n}\nvar UrlParser = /** @class */ (function () {\n    function UrlParser(url) {\n        this.url = url;\n        this.remaining = url;\n    }\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseRootSegment = /**\n     * @return {?}\n     */\n    function () {\n        this.consumeOptional('/');\n        if (this.remaining === '' || this.peekStartsWith('?') || this.peekStartsWith('#')) {\n            return new UrlSegmentGroup([], {});\n        }\n        // The root segment group never has segments\n        return new UrlSegmentGroup([], this.parseChildren());\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseQueryParams = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ params = {};\n        if (this.consumeOptional('?')) {\n            do {\n                this.parseQueryParam(params);\n            } while (this.consumeOptional('&'));\n        }\n        return params;\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseFragment = /**\n     * @return {?}\n     */\n    function () {\n        return this.consumeOptional('#') ? decodeURI(this.remaining) : null;\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseChildren = /**\n     * @return {?}\n     */\n    function () {\n        if (this.remaining === '') {\n            return {};\n        }\n        this.consumeOptional('/');\n        var /** @type {?} */ segments = [];\n        if (!this.peekStartsWith('(')) {\n            segments.push(this.parseSegment());\n        }\n        while (this.peekStartsWith('/') && !this.peekStartsWith('//') && !this.peekStartsWith('/(')) {\n            this.capture('/');\n            segments.push(this.parseSegment());\n        }\n        var /** @type {?} */ children = {};\n        if (this.peekStartsWith('/(')) {\n            this.capture('/');\n            children = this.parseParens(true);\n        }\n        var /** @type {?} */ res = {};\n        if (this.peekStartsWith('(')) {\n            res = this.parseParens(false);\n        }\n        if (segments.length > 0 || Object.keys(children).length > 0) {\n            res[PRIMARY_OUTLET] = new UrlSegmentGroup(segments, children);\n        }\n        return res;\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseSegment = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ path = matchSegments(this.remaining);\n        if (path === '' && this.peekStartsWith(';')) {\n            throw new Error(\"Empty path url segment cannot have parameters: '\" + this.remaining + \"'.\");\n        }\n        this.capture(path);\n        return new UrlSegment(decode(path), this.parseMatrixParams());\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseMatrixParams = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ params = {};\n        while (this.consumeOptional(';')) {\n            this.parseParam(params);\n        }\n        return params;\n    };\n    /**\n     * @param {?} params\n     * @return {?}\n     */\n    UrlParser.prototype.parseParam = /**\n     * @param {?} params\n     * @return {?}\n     */\n    function (params) {\n        var /** @type {?} */ key = matchSegments(this.remaining);\n        if (!key) {\n            return;\n        }\n        this.capture(key);\n        var /** @type {?} */ value = '';\n        if (this.consumeOptional('=')) {\n            var /** @type {?} */ valueMatch = matchSegments(this.remaining);\n            if (valueMatch) {\n                value = valueMatch;\n                this.capture(value);\n            }\n        }\n        params[decode(key)] = decode(value);\n    };\n    /**\n     * @param {?} params\n     * @return {?}\n     */\n    UrlParser.prototype.parseQueryParam = /**\n     * @param {?} params\n     * @return {?}\n     */\n    function (params) {\n        var /** @type {?} */ key = matchQueryParams(this.remaining);\n        if (!key) {\n            return;\n        }\n        this.capture(key);\n        var /** @type {?} */ value = '';\n        if (this.consumeOptional('=')) {\n            var /** @type {?} */ valueMatch = matchUrlQueryParamValue(this.remaining);\n            if (valueMatch) {\n                value = valueMatch;\n                this.capture(value);\n            }\n        }\n        var /** @type {?} */ decodedKey = decode(key);\n        var /** @type {?} */ decodedVal = decode(value);\n        if (params.hasOwnProperty(decodedKey)) {\n            // Append to existing values\n            var /** @type {?} */ currentVal = params[decodedKey];\n            if (!Array.isArray(currentVal)) {\n                currentVal = [currentVal];\n                params[decodedKey] = currentVal;\n            }\n            currentVal.push(decodedVal);\n        }\n        else {\n            // Create a new value\n            params[decodedKey] = decodedVal;\n        }\n    };\n    /**\n     * @param {?} allowPrimary\n     * @return {?}\n     */\n    UrlParser.prototype.parseParens = /**\n     * @param {?} allowPrimary\n     * @return {?}\n     */\n    function (allowPrimary) {\n        var /** @type {?} */ segments = {};\n        this.capture('(');\n        while (!this.consumeOptional(')') && this.remaining.length > 0) {\n            var /** @type {?} */ path = matchSegments(this.remaining);\n            var /** @type {?} */ next = this.remaining[path.length];\n            // if is is not one of these characters, then the segment was unescaped\n            // or the group was not closed\n            if (next !== '/' && next !== ')' && next !== ';') {\n                throw new Error(\"Cannot parse url '\" + this.url + \"'\");\n            }\n            var /** @type {?} */ outletName = /** @type {?} */ ((undefined));\n            if (path.indexOf(':') > -1) {\n                outletName = path.substr(0, path.indexOf(':'));\n                this.capture(outletName);\n                this.capture(':');\n            }\n            else if (allowPrimary) {\n                outletName = PRIMARY_OUTLET;\n            }\n            var /** @type {?} */ children = this.parseChildren();\n            segments[outletName] = Object.keys(children).length === 1 ? children[PRIMARY_OUTLET] :\n                new UrlSegmentGroup([], children);\n            this.consumeOptional('//');\n        }\n        return segments;\n    };\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    UrlParser.prototype.peekStartsWith = /**\n     * @param {?} str\n     * @return {?}\n     */\n    function (str) { return this.remaining.startsWith(str); };\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    UrlParser.prototype.consumeOptional = /**\n     * @param {?} str\n     * @return {?}\n     */\n    function (str) {\n        if (this.peekStartsWith(str)) {\n            this.remaining = this.remaining.substring(str.length);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    UrlParser.prototype.capture = /**\n     * @param {?} str\n     * @return {?}\n     */\n    function (str) {\n        if (!this.consumeOptional(str)) {\n            throw new Error(\"Expected \\\"\" + str + \"\\\".\");\n        }\n    };\n    return UrlParser;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NoMatch = /** @class */ (function () {\n    function NoMatch(segmentGroup) {\n        this.segmentGroup = segmentGroup || null;\n    }\n    return NoMatch;\n}());\nvar AbsoluteRedirect = /** @class */ (function () {\n    function AbsoluteRedirect(urlTree) {\n        this.urlTree = urlTree;\n    }\n    return AbsoluteRedirect;\n}());\n/**\n * @param {?} segmentGroup\n * @return {?}\n */\nfunction noMatch(segmentGroup) {\n    return new rxjs_Observable.Observable(function (obs) { return obs.error(new NoMatch(segmentGroup)); });\n}\n/**\n * @param {?} newTree\n * @return {?}\n */\nfunction absoluteRedirect(newTree) {\n    return new rxjs_Observable.Observable(function (obs) { return obs.error(new AbsoluteRedirect(newTree)); });\n}\n/**\n * @param {?} redirectTo\n * @return {?}\n */\nfunction namedOutletsRedirect(redirectTo) {\n    return new rxjs_Observable.Observable(function (obs) {\n        return obs.error(new Error(\"Only absolute redirects can have named outlets. redirectTo: '\" + redirectTo + \"'\"));\n    });\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction canLoadFails(route) {\n    return new rxjs_Observable.Observable(function (obs) {\n        return obs.error(navigationCancelingError(\"Cannot load children because the guard of the route \\\"path: '\" + route.path + \"'\\\" returned false\"));\n    });\n}\n/**\n * Returns the `UrlTree` with the redirection applied.\n *\n * Lazy modules are loaded along the way.\n * @param {?} moduleInjector\n * @param {?} configLoader\n * @param {?} urlSerializer\n * @param {?} urlTree\n * @param {?} config\n * @return {?}\n */\nfunction applyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config) {\n    return new ApplyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config).apply();\n}\nvar ApplyRedirects = /** @class */ (function () {\n    function ApplyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config) {\n        this.configLoader = configLoader;\n        this.urlSerializer = urlSerializer;\n        this.urlTree = urlTree;\n        this.config = config;\n        this.allowRedirects = true;\n        this.ngModule = moduleInjector.get(_angular_core.NgModuleRef);\n    }\n    /**\n     * @return {?}\n     */\n    ApplyRedirects.prototype.apply = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ expanded$ = this.expandSegmentGroup(this.ngModule, this.config, this.urlTree.root, PRIMARY_OUTLET);\n        var /** @type {?} */ urlTrees$ = rxjs_operator_map.map.call(expanded$, function (rootSegmentGroup) {\n            return _this.createUrlTree(rootSegmentGroup, _this.urlTree.queryParams, /** @type {?} */ ((_this.urlTree.fragment)));\n        });\n        return rxjs_operator_catch._catch.call(urlTrees$, function (e) {\n            if (e instanceof AbsoluteRedirect) {\n                // after an absolute redirect we do not apply any more redirects!\n                // after an absolute redirect we do not apply any more redirects!\n                _this.allowRedirects = false;\n                // we need to run matching, so we can fetch all lazy-loaded modules\n                return _this.match(e.urlTree);\n            }\n            if (e instanceof NoMatch) {\n                throw _this.noMatchError(e);\n            }\n            throw e;\n        });\n    };\n    /**\n     * @param {?} tree\n     * @return {?}\n     */\n    ApplyRedirects.prototype.match = /**\n     * @param {?} tree\n     * @return {?}\n     */\n    function (tree) {\n        var _this = this;\n        var /** @type {?} */ expanded$ = this.expandSegmentGroup(this.ngModule, this.config, tree.root, PRIMARY_OUTLET);\n        var /** @type {?} */ mapped$ = rxjs_operator_map.map.call(expanded$, function (rootSegmentGroup) {\n            return _this.createUrlTree(rootSegmentGroup, tree.queryParams, /** @type {?} */ ((tree.fragment)));\n        });\n        return rxjs_operator_catch._catch.call(mapped$, function (e) {\n            if (e instanceof NoMatch) {\n                throw _this.noMatchError(e);\n            }\n            throw e;\n        });\n    };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ApplyRedirects.prototype.noMatchError = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return new Error(\"Cannot match any routes. URL Segment: '\" + e.segmentGroup + \"'\");\n    };\n    /**\n     * @param {?} rootCandidate\n     * @param {?} queryParams\n     * @param {?} fragment\n     * @return {?}\n     */\n    ApplyRedirects.prototype.createUrlTree = /**\n     * @param {?} rootCandidate\n     * @param {?} queryParams\n     * @param {?} fragment\n     * @return {?}\n     */\n    function (rootCandidate, queryParams, fragment) {\n        var /** @type {?} */ root = rootCandidate.segments.length > 0 ?\n            new UrlSegmentGroup([], (_a = {}, _a[PRIMARY_OUTLET] = rootCandidate, _a)) :\n            rootCandidate;\n        return new UrlTree(root, queryParams, fragment);\n        var _a;\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @param {?} segmentGroup\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandSegmentGroup = /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @param {?} segmentGroup\n     * @param {?} outlet\n     * @return {?}\n     */\n    function (ngModule, routes, segmentGroup, outlet) {\n        if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n            return rxjs_operator_map.map.call(this.expandChildren(ngModule, routes, segmentGroup), function (children) { return new UrlSegmentGroup([], children); });\n        }\n        return this.expandSegment(ngModule, segmentGroup, routes, segmentGroup.segments, outlet, true);\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @param {?} segmentGroup\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandChildren = /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @param {?} segmentGroup\n     * @return {?}\n     */\n    function (ngModule, routes, segmentGroup) {\n        var _this = this;\n        return waitForMap(segmentGroup.children, function (childOutlet, child) { return _this.expandSegmentGroup(ngModule, routes, child, childOutlet); });\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} segments\n     * @param {?} outlet\n     * @param {?} allowRedirects\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandSegment = /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} segments\n     * @param {?} outlet\n     * @param {?} allowRedirects\n     * @return {?}\n     */\n    function (ngModule, segmentGroup, routes, segments, outlet, allowRedirects) {\n        var _this = this;\n        var /** @type {?} */ routes$ = rxjs_observable_of.of.apply(void 0, routes);\n        var /** @type {?} */ processedRoutes$ = rxjs_operator_map.map.call(routes$, function (r) {\n            var /** @type {?} */ expanded$ = _this.expandSegmentAgainstRoute(ngModule, segmentGroup, routes, r, segments, outlet, allowRedirects);\n            return rxjs_operator_catch._catch.call(expanded$, function (e) {\n                if (e instanceof NoMatch) {\n                    return rxjs_observable_of.of(null);\n                }\n                throw e;\n            });\n        });\n        var /** @type {?} */ concattedProcessedRoutes$ = rxjs_operator_concatAll.concatAll.call(processedRoutes$);\n        var /** @type {?} */ first$ = rxjs_operator_first.first.call(concattedProcessedRoutes$, function (s) { return !!s; });\n        return rxjs_operator_catch._catch.call(first$, function (e, _) {\n            if (e instanceof rxjs_util_EmptyError.EmptyError || e.name === 'EmptyError') {\n                if (_this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n                    return rxjs_observable_of.of(new UrlSegmentGroup([], {}));\n                }\n                throw new NoMatch(segmentGroup);\n            }\n            throw e;\n        });\n    };\n    /**\n     * @param {?} segmentGroup\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.noLeftoversInUrl = /**\n     * @param {?} segmentGroup\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    function (segmentGroup, segments, outlet) {\n        return segments.length === 0 && !segmentGroup.children[outlet];\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} paths\n     * @param {?} outlet\n     * @param {?} allowRedirects\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandSegmentAgainstRoute = /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} paths\n     * @param {?} outlet\n     * @param {?} allowRedirects\n     * @return {?}\n     */\n    function (ngModule, segmentGroup, routes, route, paths, outlet, allowRedirects) {\n        if (getOutlet(route) !== outlet) {\n            return noMatch(segmentGroup);\n        }\n        if (route.redirectTo === undefined) {\n            return this.matchSegmentAgainstRoute(ngModule, segmentGroup, route, paths);\n        }\n        if (allowRedirects && this.allowRedirects) {\n            return this.expandSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, paths, outlet);\n        }\n        return noMatch(segmentGroup);\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandSegmentAgainstRouteUsingRedirect = /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    function (ngModule, segmentGroup, routes, route, segments, outlet) {\n        if (route.path === '**') {\n            return this.expandWildCardWithParamsAgainstRouteUsingRedirect(ngModule, routes, route, outlet);\n        }\n        return this.expandRegularSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, segments, outlet);\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandWildCardWithParamsAgainstRouteUsingRedirect = /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} outlet\n     * @return {?}\n     */\n    function (ngModule, routes, route, outlet) {\n        var _this = this;\n        var /** @type {?} */ newTree = this.applyRedirectCommands([], /** @type {?} */ ((route.redirectTo)), {});\n        if (/** @type {?} */ ((route.redirectTo)).startsWith('/')) {\n            return absoluteRedirect(newTree);\n        }\n        return rxjs_operator_mergeMap.mergeMap.call(this.lineralizeSegments(route, newTree), function (newSegments) {\n            var /** @type {?} */ group = new UrlSegmentGroup(newSegments, {});\n            return _this.expandSegment(ngModule, group, routes, newSegments, outlet, false);\n        });\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandRegularSegmentAgainstRouteUsingRedirect = /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    function (ngModule, segmentGroup, routes, route, segments, outlet) {\n        var _this = this;\n        var _a = match(segmentGroup, route, segments), matched = _a.matched, consumedSegments = _a.consumedSegments, lastChild = _a.lastChild, positionalParamSegments = _a.positionalParamSegments;\n        if (!matched)\n            return noMatch(segmentGroup);\n        var /** @type {?} */ newTree = this.applyRedirectCommands(consumedSegments, /** @type {?} */ ((route.redirectTo)), /** @type {?} */ (positionalParamSegments));\n        if (/** @type {?} */ ((route.redirectTo)).startsWith('/')) {\n            return absoluteRedirect(newTree);\n        }\n        return rxjs_operator_mergeMap.mergeMap.call(this.lineralizeSegments(route, newTree), function (newSegments) {\n            return _this.expandSegment(ngModule, segmentGroup, routes, newSegments.concat(segments.slice(lastChild)), outlet, false);\n        });\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} rawSegmentGroup\n     * @param {?} route\n     * @param {?} segments\n     * @return {?}\n     */\n    ApplyRedirects.prototype.matchSegmentAgainstRoute = /**\n     * @param {?} ngModule\n     * @param {?} rawSegmentGroup\n     * @param {?} route\n     * @param {?} segments\n     * @return {?}\n     */\n    function (ngModule, rawSegmentGroup, route, segments) {\n        var _this = this;\n        if (route.path === '**') {\n            if (route.loadChildren) {\n                return rxjs_operator_map.map.call(this.configLoader.load(ngModule.injector, route), function (cfg) {\n                    route._loadedConfig = cfg;\n                    return new UrlSegmentGroup(segments, {});\n                });\n            }\n            return rxjs_observable_of.of(new UrlSegmentGroup(segments, {}));\n        }\n        var _a = match(rawSegmentGroup, route, segments), matched = _a.matched, consumedSegments = _a.consumedSegments, lastChild = _a.lastChild;\n        if (!matched)\n            return noMatch(rawSegmentGroup);\n        var /** @type {?} */ rawSlicedSegments = segments.slice(lastChild);\n        var /** @type {?} */ childConfig$ = this.getChildConfig(ngModule, route);\n        return rxjs_operator_mergeMap.mergeMap.call(childConfig$, function (routerConfig) {\n            var /** @type {?} */ childModule = routerConfig.module;\n            var /** @type {?} */ childConfig = routerConfig.routes;\n            var _a = split(rawSegmentGroup, consumedSegments, rawSlicedSegments, childConfig), segmentGroup = _a.segmentGroup, slicedSegments = _a.slicedSegments;\n            if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n                var /** @type {?} */ expanded$_1 = _this.expandChildren(childModule, childConfig, segmentGroup);\n                return rxjs_operator_map.map.call(expanded$_1, function (children) { return new UrlSegmentGroup(consumedSegments, children); });\n            }\n            if (childConfig.length === 0 && slicedSegments.length === 0) {\n                return rxjs_observable_of.of(new UrlSegmentGroup(consumedSegments, {}));\n            }\n            var /** @type {?} */ expanded$ = _this.expandSegment(childModule, segmentGroup, childConfig, slicedSegments, PRIMARY_OUTLET, true);\n            return rxjs_operator_map.map.call(expanded$, function (cs) {\n                return new UrlSegmentGroup(consumedSegments.concat(cs.segments), cs.children);\n            });\n        });\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} route\n     * @return {?}\n     */\n    ApplyRedirects.prototype.getChildConfig = /**\n     * @param {?} ngModule\n     * @param {?} route\n     * @return {?}\n     */\n    function (ngModule, route) {\n        var _this = this;\n        if (route.children) {\n            // The children belong to the same module\n            return rxjs_observable_of.of(new LoadedRouterConfig(route.children, ngModule));\n        }\n        if (route.loadChildren) {\n            // lazy children belong to the loaded module\n            if (route._loadedConfig !== undefined) {\n                return rxjs_observable_of.of(route._loadedConfig);\n            }\n            return rxjs_operator_mergeMap.mergeMap.call(runCanLoadGuard(ngModule.injector, route), function (shouldLoad) {\n                if (shouldLoad) {\n                    return rxjs_operator_map.map.call(_this.configLoader.load(ngModule.injector, route), function (cfg) {\n                        route._loadedConfig = cfg;\n                        return cfg;\n                    });\n                }\n                return canLoadFails(route);\n            });\n        }\n        return rxjs_observable_of.of(new LoadedRouterConfig([], ngModule));\n    };\n    /**\n     * @param {?} route\n     * @param {?} urlTree\n     * @return {?}\n     */\n    ApplyRedirects.prototype.lineralizeSegments = /**\n     * @param {?} route\n     * @param {?} urlTree\n     * @return {?}\n     */\n    function (route, urlTree) {\n        var /** @type {?} */ res = [];\n        var /** @type {?} */ c = urlTree.root;\n        while (true) {\n            res = res.concat(c.segments);\n            if (c.numberOfChildren === 0) {\n                return rxjs_observable_of.of(res);\n            }\n            if (c.numberOfChildren > 1 || !c.children[PRIMARY_OUTLET]) {\n                return namedOutletsRedirect(/** @type {?} */ ((route.redirectTo)));\n            }\n            c = c.children[PRIMARY_OUTLET];\n        }\n    };\n    /**\n     * @param {?} segments\n     * @param {?} redirectTo\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.applyRedirectCommands = /**\n     * @param {?} segments\n     * @param {?} redirectTo\n     * @param {?} posParams\n     * @return {?}\n     */\n    function (segments, redirectTo, posParams) {\n        return this.applyRedirectCreatreUrlTree(redirectTo, this.urlSerializer.parse(redirectTo), segments, posParams);\n    };\n    /**\n     * @param {?} redirectTo\n     * @param {?} urlTree\n     * @param {?} segments\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.applyRedirectCreatreUrlTree = /**\n     * @param {?} redirectTo\n     * @param {?} urlTree\n     * @param {?} segments\n     * @param {?} posParams\n     * @return {?}\n     */\n    function (redirectTo, urlTree, segments, posParams) {\n        var /** @type {?} */ newRoot = this.createSegmentGroup(redirectTo, urlTree.root, segments, posParams);\n        return new UrlTree(newRoot, this.createQueryParams(urlTree.queryParams, this.urlTree.queryParams), urlTree.fragment);\n    };\n    /**\n     * @param {?} redirectToParams\n     * @param {?} actualParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.createQueryParams = /**\n     * @param {?} redirectToParams\n     * @param {?} actualParams\n     * @return {?}\n     */\n    function (redirectToParams, actualParams) {\n        var /** @type {?} */ res = {};\n        forEach(redirectToParams, function (v, k) {\n            var /** @type {?} */ copySourceValue = typeof v === 'string' && v.startsWith(':');\n            if (copySourceValue) {\n                var /** @type {?} */ sourceName = v.substring(1);\n                res[k] = actualParams[sourceName];\n            }\n            else {\n                res[k] = v;\n            }\n        });\n        return res;\n    };\n    /**\n     * @param {?} redirectTo\n     * @param {?} group\n     * @param {?} segments\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.createSegmentGroup = /**\n     * @param {?} redirectTo\n     * @param {?} group\n     * @param {?} segments\n     * @param {?} posParams\n     * @return {?}\n     */\n    function (redirectTo, group, segments, posParams) {\n        var _this = this;\n        var /** @type {?} */ updatedSegments = this.createSegments(redirectTo, group.segments, segments, posParams);\n        var /** @type {?} */ children = {};\n        forEach(group.children, function (child, name) {\n            children[name] = _this.createSegmentGroup(redirectTo, child, segments, posParams);\n        });\n        return new UrlSegmentGroup(updatedSegments, children);\n    };\n    /**\n     * @param {?} redirectTo\n     * @param {?} redirectToSegments\n     * @param {?} actualSegments\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.createSegments = /**\n     * @param {?} redirectTo\n     * @param {?} redirectToSegments\n     * @param {?} actualSegments\n     * @param {?} posParams\n     * @return {?}\n     */\n    function (redirectTo, redirectToSegments, actualSegments, posParams) {\n        var _this = this;\n        return redirectToSegments.map(function (s) {\n            return s.path.startsWith(':') ? _this.findPosParam(redirectTo, s, posParams) :\n                _this.findOrReturn(s, actualSegments);\n        });\n    };\n    /**\n     * @param {?} redirectTo\n     * @param {?} redirectToUrlSegment\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.findPosParam = /**\n     * @param {?} redirectTo\n     * @param {?} redirectToUrlSegment\n     * @param {?} posParams\n     * @return {?}\n     */\n    function (redirectTo, redirectToUrlSegment, posParams) {\n        var /** @type {?} */ pos = posParams[redirectToUrlSegment.path.substring(1)];\n        if (!pos)\n            throw new Error(\"Cannot redirect to '\" + redirectTo + \"'. Cannot find '\" + redirectToUrlSegment.path + \"'.\");\n        return pos;\n    };\n    /**\n     * @param {?} redirectToUrlSegment\n     * @param {?} actualSegments\n     * @return {?}\n     */\n    ApplyRedirects.prototype.findOrReturn = /**\n     * @param {?} redirectToUrlSegment\n     * @param {?} actualSegments\n     * @return {?}\n     */\n    function (redirectToUrlSegment, actualSegments) {\n        var /** @type {?} */ idx = 0;\n        for (var _i = 0, actualSegments_1 = actualSegments; _i < actualSegments_1.length; _i++) {\n            var s = actualSegments_1[_i];\n            if (s.path === redirectToUrlSegment.path) {\n                actualSegments.splice(idx);\n                return s;\n            }\n            idx++;\n        }\n        return redirectToUrlSegment;\n    };\n    return ApplyRedirects;\n}());\n/**\n * @param {?} moduleInjector\n * @param {?} route\n * @return {?}\n */\nfunction runCanLoadGuard(moduleInjector, route) {\n    var /** @type {?} */ canLoad = route.canLoad;\n    if (!canLoad || canLoad.length === 0)\n        return rxjs_observable_of.of(true);\n    var /** @type {?} */ obs = rxjs_operator_map.map.call(rxjs_observable_from.from(canLoad), function (injectionToken) {\n        var /** @type {?} */ guard = moduleInjector.get(injectionToken);\n        return wrapIntoObservable(guard.canLoad ? guard.canLoad(route) : guard(route));\n    });\n    return andObservables(obs);\n}\n/**\n * @param {?} segmentGroup\n * @param {?} route\n * @param {?} segments\n * @return {?}\n */\nfunction match(segmentGroup, route, segments) {\n    if (route.path === '') {\n        if ((route.pathMatch === 'full') && (segmentGroup.hasChildren() || segments.length > 0)) {\n            return { matched: false, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n        }\n        return { matched: true, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n    }\n    var /** @type {?} */ matcher = route.matcher || defaultUrlMatcher;\n    var /** @type {?} */ res = matcher(segments, segmentGroup, route);\n    if (!res) {\n        return {\n            matched: false,\n            consumedSegments: /** @type {?} */ ([]),\n            lastChild: 0,\n            positionalParamSegments: {},\n        };\n    }\n    return {\n        matched: true,\n        consumedSegments: /** @type {?} */ ((res.consumed)),\n        lastChild: /** @type {?} */ ((res.consumed.length)),\n        positionalParamSegments: /** @type {?} */ ((res.posParams)),\n    };\n}\n/**\n * @param {?} segmentGroup\n * @param {?} consumedSegments\n * @param {?} slicedSegments\n * @param {?} config\n * @return {?}\n */\nfunction split(segmentGroup, consumedSegments, slicedSegments, config) {\n    if (slicedSegments.length > 0 &&\n        containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n        var /** @type {?} */ s = new UrlSegmentGroup(consumedSegments, createChildrenForEmptySegments(config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n        return { segmentGroup: mergeTrivialChildren(s), slicedSegments: [] };\n    }\n    if (slicedSegments.length === 0 &&\n        containsEmptyPathRedirects(segmentGroup, slicedSegments, config)) {\n        var /** @type {?} */ s = new UrlSegmentGroup(segmentGroup.segments, addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, config, segmentGroup.children));\n        return { segmentGroup: mergeTrivialChildren(s), slicedSegments: slicedSegments };\n    }\n    return { segmentGroup: segmentGroup, slicedSegments: slicedSegments };\n}\n/**\n * @param {?} s\n * @return {?}\n */\nfunction mergeTrivialChildren(s) {\n    if (s.numberOfChildren === 1 && s.children[PRIMARY_OUTLET]) {\n        var /** @type {?} */ c = s.children[PRIMARY_OUTLET];\n        return new UrlSegmentGroup(s.segments.concat(c.segments), c.children);\n    }\n    return s;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} routes\n * @param {?} children\n * @return {?}\n */\nfunction addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, routes, children) {\n    var /** @type {?} */ res = {};\n    for (var _i = 0, routes_1 = routes; _i < routes_1.length; _i++) {\n        var r = routes_1[_i];\n        if (isEmptyPathRedirect(segmentGroup, slicedSegments, r) && !children[getOutlet(r)]) {\n            res[getOutlet(r)] = new UrlSegmentGroup([], {});\n        }\n    }\n    return __assign({}, children, res);\n}\n/**\n * @param {?} routes\n * @param {?} primarySegmentGroup\n * @return {?}\n */\nfunction createChildrenForEmptySegments(routes, primarySegmentGroup) {\n    var /** @type {?} */ res = {};\n    res[PRIMARY_OUTLET] = primarySegmentGroup;\n    for (var _i = 0, routes_2 = routes; _i < routes_2.length; _i++) {\n        var r = routes_2[_i];\n        if (r.path === '' && getOutlet(r) !== PRIMARY_OUTLET) {\n            res[getOutlet(r)] = new UrlSegmentGroup([], {});\n        }\n    }\n    return res;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} segments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, segments, routes) {\n    return routes.some(function (r) { return isEmptyPathRedirect(segmentGroup, segments, r) && getOutlet(r) !== PRIMARY_OUTLET; });\n}\n/**\n * @param {?} segmentGroup\n * @param {?} segments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathRedirects(segmentGroup, segments, routes) {\n    return routes.some(function (r) { return isEmptyPathRedirect(segmentGroup, segments, r); });\n}\n/**\n * @param {?} segmentGroup\n * @param {?} segments\n * @param {?} r\n * @return {?}\n */\nfunction isEmptyPathRedirect(segmentGroup, segments, r) {\n    if ((segmentGroup.hasChildren() || segments.length > 0) && r.pathMatch === 'full') {\n        return false;\n    }\n    return r.path === '' && r.redirectTo !== undefined;\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getOutlet(route) {\n    return route.outlet || PRIMARY_OUTLET;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Tree = /** @class */ (function () {\n    function Tree(root) {\n        this._root = root;\n    }\n    Object.defineProperty(Tree.prototype, \"root\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._root.value; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @internal\n     */\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.parent = /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    function (t) {\n        var /** @type {?} */ p = this.pathFromRoot(t);\n        return p.length > 1 ? p[p.length - 2] : null;\n    };\n    /**\n     * @internal\n     */\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.children = /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    function (t) {\n        var /** @type {?} */ n = findNode(t, this._root);\n        return n ? n.children.map(function (t) { return t.value; }) : [];\n    };\n    /**\n     * @internal\n     */\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.firstChild = /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    function (t) {\n        var /** @type {?} */ n = findNode(t, this._root);\n        return n && n.children.length > 0 ? n.children[0].value : null;\n    };\n    /**\n     * @internal\n     */\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.siblings = /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    function (t) {\n        var /** @type {?} */ p = findPath(t, this._root);\n        if (p.length < 2)\n            return [];\n        var /** @type {?} */ c = p[p.length - 2].children.map(function (c) { return c.value; });\n        return c.filter(function (cc) { return cc !== t; });\n    };\n    /**\n     * @internal\n     */\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.pathFromRoot = /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    function (t) { return findPath(t, this._root).map(function (s) { return s.value; }); };\n    return Tree;\n}());\n/**\n * @template T\n * @param {?} value\n * @param {?} node\n * @return {?}\n */\nfunction findNode(value, node) {\n    if (value === node.value)\n        return node;\n    for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n        var child = _a[_i];\n        var /** @type {?} */ node_1 = findNode(value, child);\n        if (node_1)\n            return node_1;\n    }\n    return null;\n}\n/**\n * @template T\n * @param {?} value\n * @param {?} node\n * @return {?}\n */\nfunction findPath(value, node) {\n    if (value === node.value)\n        return [node];\n    for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n        var child = _a[_i];\n        var /** @type {?} */ path = findPath(value, child);\n        if (path.length) {\n            path.unshift(node);\n            return path;\n        }\n    }\n    return [];\n}\nvar TreeNode = /** @class */ (function () {\n    function TreeNode(value, children) {\n        this.value = value;\n        this.children = children;\n    }\n    /**\n     * @return {?}\n     */\n    TreeNode.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return \"TreeNode(\" + this.value + \")\"; };\n    return TreeNode;\n}());\n/**\n * @template T\n * @param {?} node\n * @return {?}\n */\nfunction nodeChildrenAsMap(node) {\n    var /** @type {?} */ map$$1 = {};\n    if (node) {\n        node.children.forEach(function (child) { return map$$1[child.value.outlet] = child; });\n    }\n    return map$$1;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Represents the state of the router.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const state: RouterState = router.routerState;\n *     const root: ActivatedRoute = state.root;\n *     const child = root.firstChild;\n *     const id: Observable<string> = child.params.map(p => p.id);\n *     //...\n *   }\n * }\n * ```\n *\n * \\@description\n * RouterState is a tree of activated routes. Every node in this tree knows about the \"consumed\" URL\n * segments, the extracted parameters, and the resolved data.\n *\n * See {\\@link ActivatedRoute} for more information.\n *\n * \\@stable\n */\nvar RouterState = /** @class */ (function (_super) {\n    __extends(RouterState, _super);\n    /** @internal */\n    function RouterState(root, snapshot) {\n        var _this = _super.call(this, root) || this;\n        _this.snapshot = snapshot;\n        setRouterState(/** @type {?} */ (_this), root);\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    RouterState.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return this.snapshot.toString(); };\n    return RouterState;\n}(Tree));\n/**\n * @param {?} urlTree\n * @param {?} rootComponent\n * @return {?}\n */\nfunction createEmptyState(urlTree, rootComponent) {\n    var /** @type {?} */ snapshot = createEmptyStateSnapshot(urlTree, rootComponent);\n    var /** @type {?} */ emptyUrl = new rxjs_BehaviorSubject.BehaviorSubject([new UrlSegment('', {})]);\n    var /** @type {?} */ emptyParams = new rxjs_BehaviorSubject.BehaviorSubject({});\n    var /** @type {?} */ emptyData = new rxjs_BehaviorSubject.BehaviorSubject({});\n    var /** @type {?} */ emptyQueryParams = new rxjs_BehaviorSubject.BehaviorSubject({});\n    var /** @type {?} */ fragment = new rxjs_BehaviorSubject.BehaviorSubject('');\n    var /** @type {?} */ activated = new ActivatedRoute(emptyUrl, emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, snapshot.root);\n    activated.snapshot = snapshot.root;\n    return new RouterState(new TreeNode(activated, []), snapshot);\n}\n/**\n * @param {?} urlTree\n * @param {?} rootComponent\n * @return {?}\n */\nfunction createEmptyStateSnapshot(urlTree, rootComponent) {\n    var /** @type {?} */ emptyParams = {};\n    var /** @type {?} */ emptyData = {};\n    var /** @type {?} */ emptyQueryParams = {};\n    var /** @type {?} */ fragment = '';\n    var /** @type {?} */ activated = new ActivatedRouteSnapshot([], emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, null, urlTree.root, -1, {});\n    return new RouterStateSnapshot('', new TreeNode(activated, []));\n}\n/**\n * \\@whatItDoes Contains the information about a route associated with a component loaded in an\n * outlet.\n * An `ActivatedRoute` can also be used to traverse the router state tree.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({...})\n * class MyComponent {\n *   constructor(route: ActivatedRoute) {\n *     const id: Observable<string> = route.params.map(p => p.id);\n *     const url: Observable<string> = route.url.map(segments => segments.join(''));\n *     // route.data includes both `data` and `resolve`\n *     const user = route.data.map(d => d.user);\n *   }\n * }\n * ```\n *\n * \\@stable\n */\nvar ActivatedRoute = /** @class */ (function () {\n    /** @internal */\n    function ActivatedRoute(url, params, queryParams, fragment, data, outlet, component, futureSnapshot) {\n        this.url = url;\n        this.params = params;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n        this.data = data;\n        this.outlet = outlet;\n        this.component = component;\n        this._futureSnapshot = futureSnapshot;\n    }\n    Object.defineProperty(ActivatedRoute.prototype, \"routeConfig\", {\n        /** The configuration used to match this route */\n        get: /**\n         * The configuration used to match this route\n         * @return {?}\n         */\n        function () { return this._futureSnapshot.routeConfig; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"root\", {\n        /** The root of the router state */\n        get: /**\n         * The root of the router state\n         * @return {?}\n         */\n        function () { return this._routerState.root; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"parent\", {\n        /** The parent of this route in the router state tree */\n        get: /**\n         * The parent of this route in the router state tree\n         * @return {?}\n         */\n        function () { return this._routerState.parent(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"firstChild\", {\n        /** The first child of this route in the router state tree */\n        get: /**\n         * The first child of this route in the router state tree\n         * @return {?}\n         */\n        function () { return this._routerState.firstChild(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"children\", {\n        /** The children of this route in the router state tree */\n        get: /**\n         * The children of this route in the router state tree\n         * @return {?}\n         */\n        function () { return this._routerState.children(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"pathFromRoot\", {\n        /** The path from the root of the router state tree to this route */\n        get: /**\n         * The path from the root of the router state tree to this route\n         * @return {?}\n         */\n        function () { return this._routerState.pathFromRoot(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"paramMap\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            if (!this._paramMap) {\n                this._paramMap = rxjs_operator_map.map.call(this.params, function (p) { return convertToParamMap(p); });\n            }\n            return this._paramMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"queryParamMap\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            if (!this._queryParamMap) {\n                this._queryParamMap =\n                    rxjs_operator_map.map.call(this.queryParams, function (p) { return convertToParamMap(p); });\n            }\n            return this._queryParamMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ActivatedRoute.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        return this.snapshot ? this.snapshot.toString() : \"Future(\" + this._futureSnapshot + \")\";\n    };\n    return ActivatedRoute;\n}());\n/**\n * Returns the inherited params, data, and resolve for a given route.\n * By default, this only inherits values up to the nearest path-less or component-less route.\n * \\@internal\n * @param {?} route\n * @param {?=} paramsInheritanceStrategy\n * @return {?}\n */\nfunction inheritedParamsDataResolve(route, paramsInheritanceStrategy) {\n    if (paramsInheritanceStrategy === void 0) { paramsInheritanceStrategy = 'emptyOnly'; }\n    var /** @type {?} */ pathFromRoot = route.pathFromRoot;\n    var /** @type {?} */ inheritingStartingFrom = 0;\n    if (paramsInheritanceStrategy !== 'always') {\n        inheritingStartingFrom = pathFromRoot.length - 1;\n        while (inheritingStartingFrom >= 1) {\n            var /** @type {?} */ current = pathFromRoot[inheritingStartingFrom];\n            var /** @type {?} */ parent_1 = pathFromRoot[inheritingStartingFrom - 1];\n            // current route is an empty path => inherits its parent's params and data\n            if (current.routeConfig && current.routeConfig.path === '') {\n                inheritingStartingFrom--;\n                // parent is componentless => current route should inherit its params and data\n            }\n            else if (!parent_1.component) {\n                inheritingStartingFrom--;\n            }\n            else {\n                break;\n            }\n        }\n    }\n    return flattenInherited(pathFromRoot.slice(inheritingStartingFrom));\n}\n/**\n * \\@internal\n * @param {?} pathFromRoot\n * @return {?}\n */\nfunction flattenInherited(pathFromRoot) {\n    return pathFromRoot.reduce(function (res, curr) {\n        var /** @type {?} */ params = __assign({}, res.params, curr.params);\n        var /** @type {?} */ data = __assign({}, res.data, curr.data);\n        var /** @type {?} */ resolve = __assign({}, res.resolve, curr._resolvedData);\n        return { params: params, data: data, resolve: resolve };\n    }, /** @type {?} */ ({ params: {}, data: {}, resolve: {} }));\n}\n/**\n * \\@whatItDoes Contains the information about a route associated with a component loaded in an\n * outlet\n * at a particular moment in time. ActivatedRouteSnapshot can also be used to traverse the router\n * state tree.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'./my-component.html'})\n * class MyComponent {\n *   constructor(route: ActivatedRoute) {\n *     const id: string = route.snapshot.params.id;\n *     const url: string = route.snapshot.url.join('');\n *     const user = route.snapshot.data.user;\n *   }\n * }\n * ```\n *\n * \\@stable\n */\nvar ActivatedRouteSnapshot = /** @class */ (function () {\n    /** @internal */\n    function ActivatedRouteSnapshot(url, params, queryParams, fragment, data, outlet, component, routeConfig, urlSegment, lastPathIndex, resolve) {\n        this.url = url;\n        this.params = params;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n        this.data = data;\n        this.outlet = outlet;\n        this.component = component;\n        this.routeConfig = routeConfig;\n        this._urlSegment = urlSegment;\n        this._lastPathIndex = lastPathIndex;\n        this._resolve = resolve;\n    }\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"root\", {\n        /** The root of the router state */\n        get: /**\n         * The root of the router state\n         * @return {?}\n         */\n        function () { return this._routerState.root; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"parent\", {\n        /** The parent of this route in the router state tree */\n        get: /**\n         * The parent of this route in the router state tree\n         * @return {?}\n         */\n        function () { return this._routerState.parent(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"firstChild\", {\n        /** The first child of this route in the router state tree */\n        get: /**\n         * The first child of this route in the router state tree\n         * @return {?}\n         */\n        function () { return this._routerState.firstChild(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"children\", {\n        /** The children of this route in the router state tree */\n        get: /**\n         * The children of this route in the router state tree\n         * @return {?}\n         */\n        function () { return this._routerState.children(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"pathFromRoot\", {\n        /** The path from the root of the router state tree to this route */\n        get: /**\n         * The path from the root of the router state tree to this route\n         * @return {?}\n         */\n        function () { return this._routerState.pathFromRoot(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"paramMap\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            if (!this._paramMap) {\n                this._paramMap = convertToParamMap(this.params);\n            }\n            return this._paramMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"queryParamMap\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            if (!this._queryParamMap) {\n                this._queryParamMap = convertToParamMap(this.queryParams);\n            }\n            return this._queryParamMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ActivatedRouteSnapshot.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ url = this.url.map(function (segment) { return segment.toString(); }).join('/');\n        var /** @type {?} */ matched = this.routeConfig ? this.routeConfig.path : '';\n        return \"Route(url:'\" + url + \"', path:'\" + matched + \"')\";\n    };\n    return ActivatedRouteSnapshot;\n}());\n/**\n * \\@whatItDoes Represents the state of the router at a moment in time.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const state: RouterState = router.routerState;\n *     const snapshot: RouterStateSnapshot = state.snapshot;\n *     const root: ActivatedRouteSnapshot = snapshot.root;\n *     const child = root.firstChild;\n *     const id: Observable<string> = child.params.map(p => p.id);\n *     //...\n *   }\n * }\n * ```\n *\n * \\@description\n * RouterStateSnapshot is a tree of activated route snapshots. Every node in this tree knows about\n * the \"consumed\" URL segments, the extracted parameters, and the resolved data.\n *\n * \\@stable\n */\nvar RouterStateSnapshot = /** @class */ (function (_super) {\n    __extends(RouterStateSnapshot, _super);\n    /** @internal */\n    function RouterStateSnapshot(url, root) {\n        var _this = _super.call(this, root) || this;\n        _this.url = url;\n        setRouterState(/** @type {?} */ (_this), root);\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    RouterStateSnapshot.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return serializeNode(this._root); };\n    return RouterStateSnapshot;\n}(Tree));\n/**\n * @template U, T\n * @param {?} state\n * @param {?} node\n * @return {?}\n */\nfunction setRouterState(state, node) {\n    node.value._routerState = state;\n    node.children.forEach(function (c) { return setRouterState(state, c); });\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction serializeNode(node) {\n    var /** @type {?} */ c = node.children.length > 0 ? \" { \" + node.children.map(serializeNode).join(', ') + \" } \" : '';\n    return \"\" + node.value + c;\n}\n/**\n * The expectation is that the activate route is created with the right set of parameters.\n * So we push new values into the observables only when they are not the initial values.\n * And we detect that by checking if the snapshot field is set.\n * @param {?} route\n * @return {?}\n */\nfunction advanceActivatedRoute(route) {\n    if (route.snapshot) {\n        var /** @type {?} */ currentSnapshot = route.snapshot;\n        var /** @type {?} */ nextSnapshot = route._futureSnapshot;\n        route.snapshot = nextSnapshot;\n        if (!shallowEqual(currentSnapshot.queryParams, nextSnapshot.queryParams)) {\n            (/** @type {?} */ (route.queryParams)).next(nextSnapshot.queryParams);\n        }\n        if (currentSnapshot.fragment !== nextSnapshot.fragment) {\n            (/** @type {?} */ (route.fragment)).next(nextSnapshot.fragment);\n        }\n        if (!shallowEqual(currentSnapshot.params, nextSnapshot.params)) {\n            (/** @type {?} */ (route.params)).next(nextSnapshot.params);\n        }\n        if (!shallowEqualArrays(currentSnapshot.url, nextSnapshot.url)) {\n            (/** @type {?} */ (route.url)).next(nextSnapshot.url);\n        }\n        if (!shallowEqual(currentSnapshot.data, nextSnapshot.data)) {\n            (/** @type {?} */ (route.data)).next(nextSnapshot.data);\n        }\n    }\n    else {\n        route.snapshot = route._futureSnapshot;\n        // this is for resolved data\n        (/** @type {?} */ (route.data)).next(route._futureSnapshot.data);\n    }\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction equalParamsAndUrlSegments(a, b) {\n    var /** @type {?} */ equalUrlParams = shallowEqual(a.params, b.params) && equalSegments(a.url, b.url);\n    var /** @type {?} */ parentsMismatch = !a.parent !== !b.parent;\n    return equalUrlParams && !parentsMismatch &&\n        (!a.parent || equalParamsAndUrlSegments(a.parent, /** @type {?} */ ((b.parent))));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} routeReuseStrategy\n * @param {?} curr\n * @param {?} prevState\n * @return {?}\n */\nfunction createRouterState(routeReuseStrategy, curr, prevState) {\n    var /** @type {?} */ root = createNode(routeReuseStrategy, curr._root, prevState ? prevState._root : undefined);\n    return new RouterState(root, curr);\n}\n/**\n * @param {?} routeReuseStrategy\n * @param {?} curr\n * @param {?=} prevState\n * @return {?}\n */\nfunction createNode(routeReuseStrategy, curr, prevState) {\n    // reuse an activated route that is currently displayed on the screen\n    if (prevState && routeReuseStrategy.shouldReuseRoute(curr.value, prevState.value.snapshot)) {\n        var /** @type {?} */ value = prevState.value;\n        value._futureSnapshot = curr.value;\n        var /** @type {?} */ children = createOrReuseChildren(routeReuseStrategy, curr, prevState);\n        return new TreeNode(value, children);\n        // retrieve an activated route that is used to be displayed, but is not currently displayed\n    }\n    else if (routeReuseStrategy.retrieve(curr.value)) {\n        var /** @type {?} */ tree = (/** @type {?} */ (routeReuseStrategy.retrieve(curr.value))).route;\n        setFutureSnapshotsOfActivatedRoutes(curr, tree);\n        return tree;\n    }\n    else {\n        var /** @type {?} */ value = createActivatedRoute(curr.value);\n        var /** @type {?} */ children = curr.children.map(function (c) { return createNode(routeReuseStrategy, c); });\n        return new TreeNode(value, children);\n    }\n}\n/**\n * @param {?} curr\n * @param {?} result\n * @return {?}\n */\nfunction setFutureSnapshotsOfActivatedRoutes(curr, result) {\n    if (curr.value.routeConfig !== result.value.routeConfig) {\n        throw new Error('Cannot reattach ActivatedRouteSnapshot created from a different route');\n    }\n    if (curr.children.length !== result.children.length) {\n        throw new Error('Cannot reattach ActivatedRouteSnapshot with a different number of children');\n    }\n    result.value._futureSnapshot = curr.value;\n    for (var /** @type {?} */ i = 0; i < curr.children.length; ++i) {\n        setFutureSnapshotsOfActivatedRoutes(curr.children[i], result.children[i]);\n    }\n}\n/**\n * @param {?} routeReuseStrategy\n * @param {?} curr\n * @param {?} prevState\n * @return {?}\n */\nfunction createOrReuseChildren(routeReuseStrategy, curr, prevState) {\n    return curr.children.map(function (child) {\n        for (var _i = 0, _a = prevState.children; _i < _a.length; _i++) {\n            var p = _a[_i];\n            if (routeReuseStrategy.shouldReuseRoute(p.value.snapshot, child.value)) {\n                return createNode(routeReuseStrategy, child, p);\n            }\n        }\n        return createNode(routeReuseStrategy, child);\n    });\n}\n/**\n * @param {?} c\n * @return {?}\n */\nfunction createActivatedRoute(c) {\n    return new ActivatedRoute(new rxjs_BehaviorSubject.BehaviorSubject(c.url), new rxjs_BehaviorSubject.BehaviorSubject(c.params), new rxjs_BehaviorSubject.BehaviorSubject(c.queryParams), new rxjs_BehaviorSubject.BehaviorSubject(c.fragment), new rxjs_BehaviorSubject.BehaviorSubject(c.data), c.outlet, c.component, c);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} route\n * @param {?} urlTree\n * @param {?} commands\n * @param {?} queryParams\n * @param {?} fragment\n * @return {?}\n */\nfunction createUrlTree(route, urlTree, commands, queryParams, fragment) {\n    if (commands.length === 0) {\n        return tree(urlTree.root, urlTree.root, urlTree, queryParams, fragment);\n    }\n    var /** @type {?} */ nav = computeNavigation(commands);\n    if (nav.toRoot()) {\n        return tree(urlTree.root, new UrlSegmentGroup([], {}), urlTree, queryParams, fragment);\n    }\n    var /** @type {?} */ startingPosition = findStartingPosition(nav, urlTree, route);\n    var /** @type {?} */ segmentGroup = startingPosition.processChildren ?\n        updateSegmentGroupChildren(startingPosition.segmentGroup, startingPosition.index, nav.commands) :\n        updateSegmentGroup(startingPosition.segmentGroup, startingPosition.index, nav.commands);\n    return tree(startingPosition.segmentGroup, segmentGroup, urlTree, queryParams, fragment);\n}\n/**\n * @param {?} command\n * @return {?}\n */\nfunction isMatrixParams(command) {\n    return typeof command === 'object' && command != null && !command.outlets && !command.segmentPath;\n}\n/**\n * @param {?} oldSegmentGroup\n * @param {?} newSegmentGroup\n * @param {?} urlTree\n * @param {?} queryParams\n * @param {?} fragment\n * @return {?}\n */\nfunction tree(oldSegmentGroup, newSegmentGroup, urlTree, queryParams, fragment) {\n    var /** @type {?} */ qp = {};\n    if (queryParams) {\n        forEach(queryParams, function (value, name) {\n            qp[name] = Array.isArray(value) ? value.map(function (v) { return \"\" + v; }) : \"\" + value;\n        });\n    }\n    if (urlTree.root === oldSegmentGroup) {\n        return new UrlTree(newSegmentGroup, qp, fragment);\n    }\n    return new UrlTree(replaceSegment(urlTree.root, oldSegmentGroup, newSegmentGroup), qp, fragment);\n}\n/**\n * @param {?} current\n * @param {?} oldSegment\n * @param {?} newSegment\n * @return {?}\n */\nfunction replaceSegment(current, oldSegment, newSegment) {\n    var /** @type {?} */ children = {};\n    forEach(current.children, function (c, outletName) {\n        if (c === oldSegment) {\n            children[outletName] = newSegment;\n        }\n        else {\n            children[outletName] = replaceSegment(c, oldSegment, newSegment);\n        }\n    });\n    return new UrlSegmentGroup(current.segments, children);\n}\nvar Navigation = /** @class */ (function () {\n    function Navigation(isAbsolute, numberOfDoubleDots, commands) {\n        this.isAbsolute = isAbsolute;\n        this.numberOfDoubleDots = numberOfDoubleDots;\n        this.commands = commands;\n        if (isAbsolute && commands.length > 0 && isMatrixParams(commands[0])) {\n            throw new Error('Root segment cannot have matrix parameters');\n        }\n        var /** @type {?} */ cmdWithOutlet = commands.find(function (c) { return typeof c === 'object' && c != null && c.outlets; });\n        if (cmdWithOutlet && cmdWithOutlet !== last$1(commands)) {\n            throw new Error('{outlets:{}} has to be the last command');\n        }\n    }\n    /**\n     * @return {?}\n     */\n    Navigation.prototype.toRoot = /**\n     * @return {?}\n     */\n    function () {\n        return this.isAbsolute && this.commands.length === 1 && this.commands[0] == '/';\n    };\n    return Navigation;\n}());\n/**\n * Transforms commands to a normalized `Navigation`\n * @param {?} commands\n * @return {?}\n */\nfunction computeNavigation(commands) {\n    if ((typeof commands[0] === 'string') && commands.length === 1 && commands[0] === '/') {\n        return new Navigation(true, 0, commands);\n    }\n    var /** @type {?} */ numberOfDoubleDots = 0;\n    var /** @type {?} */ isAbsolute = false;\n    var /** @type {?} */ res = commands.reduce(function (res, cmd, cmdIdx) {\n        if (typeof cmd === 'object' && cmd != null) {\n            if (cmd.outlets) {\n                var /** @type {?} */ outlets_1 = {};\n                forEach(cmd.outlets, function (commands, name) {\n                    outlets_1[name] = typeof commands === 'string' ? commands.split('/') : commands;\n                });\n                return res.concat([{ outlets: outlets_1 }]);\n            }\n            if (cmd.segmentPath) {\n                return res.concat([cmd.segmentPath]);\n            }\n        }\n        if (!(typeof cmd === 'string')) {\n            return res.concat([cmd]);\n        }\n        if (cmdIdx === 0) {\n            cmd.split('/').forEach(function (urlPart, partIndex) {\n                if (partIndex == 0 && urlPart === '.') {\n                    // skip './a'\n                }\n                else if (partIndex == 0 && urlPart === '') {\n                    //  '/a'\n                    isAbsolute = true;\n                }\n                else if (urlPart === '..') {\n                    //  '../a'\n                    numberOfDoubleDots++;\n                }\n                else if (urlPart != '') {\n                    res.push(urlPart);\n                }\n            });\n            return res;\n        }\n        return res.concat([cmd]);\n    }, []);\n    return new Navigation(isAbsolute, numberOfDoubleDots, res);\n}\nvar Position = /** @class */ (function () {\n    function Position(segmentGroup, processChildren, index) {\n        this.segmentGroup = segmentGroup;\n        this.processChildren = processChildren;\n        this.index = index;\n    }\n    return Position;\n}());\n/**\n * @param {?} nav\n * @param {?} tree\n * @param {?} route\n * @return {?}\n */\nfunction findStartingPosition(nav, tree, route) {\n    if (nav.isAbsolute) {\n        return new Position(tree.root, true, 0);\n    }\n    if (route.snapshot._lastPathIndex === -1) {\n        return new Position(route.snapshot._urlSegment, true, 0);\n    }\n    var /** @type {?} */ modifier = isMatrixParams(nav.commands[0]) ? 0 : 1;\n    var /** @type {?} */ index = route.snapshot._lastPathIndex + modifier;\n    return createPositionApplyingDoubleDots(route.snapshot._urlSegment, index, nav.numberOfDoubleDots);\n}\n/**\n * @param {?} group\n * @param {?} index\n * @param {?} numberOfDoubleDots\n * @return {?}\n */\nfunction createPositionApplyingDoubleDots(group, index, numberOfDoubleDots) {\n    var /** @type {?} */ g = group;\n    var /** @type {?} */ ci = index;\n    var /** @type {?} */ dd = numberOfDoubleDots;\n    while (dd > ci) {\n        dd -= ci;\n        g = /** @type {?} */ ((g.parent));\n        if (!g) {\n            throw new Error('Invalid number of \\'../\\'');\n        }\n        ci = g.segments.length;\n    }\n    return new Position(g, false, ci - dd);\n}\n/**\n * @param {?} command\n * @return {?}\n */\nfunction getPath(command) {\n    if (typeof command === 'object' && command != null && command.outlets) {\n        return command.outlets[PRIMARY_OUTLET];\n    }\n    return \"\" + command;\n}\n/**\n * @param {?} commands\n * @return {?}\n */\nfunction getOutlets(commands) {\n    if (!(typeof commands[0] === 'object'))\n        return _a = {}, _a[PRIMARY_OUTLET] = commands, _a;\n    if (commands[0].outlets === undefined)\n        return _b = {}, _b[PRIMARY_OUTLET] = commands, _b;\n    return commands[0].outlets;\n    var _a, _b;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction updateSegmentGroup(segmentGroup, startIndex, commands) {\n    if (!segmentGroup) {\n        segmentGroup = new UrlSegmentGroup([], {});\n    }\n    if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n        return updateSegmentGroupChildren(segmentGroup, startIndex, commands);\n    }\n    var /** @type {?} */ m = prefixedWith(segmentGroup, startIndex, commands);\n    var /** @type {?} */ slicedCommands = commands.slice(m.commandIndex);\n    if (m.match && m.pathIndex < segmentGroup.segments.length) {\n        var /** @type {?} */ g = new UrlSegmentGroup(segmentGroup.segments.slice(0, m.pathIndex), {});\n        g.children[PRIMARY_OUTLET] =\n            new UrlSegmentGroup(segmentGroup.segments.slice(m.pathIndex), segmentGroup.children);\n        return updateSegmentGroupChildren(g, 0, slicedCommands);\n    }\n    else if (m.match && slicedCommands.length === 0) {\n        return new UrlSegmentGroup(segmentGroup.segments, {});\n    }\n    else if (m.match && !segmentGroup.hasChildren()) {\n        return createNewSegmentGroup(segmentGroup, startIndex, commands);\n    }\n    else if (m.match) {\n        return updateSegmentGroupChildren(segmentGroup, 0, slicedCommands);\n    }\n    else {\n        return createNewSegmentGroup(segmentGroup, startIndex, commands);\n    }\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction updateSegmentGroupChildren(segmentGroup, startIndex, commands) {\n    if (commands.length === 0) {\n        return new UrlSegmentGroup(segmentGroup.segments, {});\n    }\n    else {\n        var /** @type {?} */ outlets_2 = getOutlets(commands);\n        var /** @type {?} */ children_1 = {};\n        forEach(outlets_2, function (commands, outlet) {\n            if (commands !== null) {\n                children_1[outlet] = updateSegmentGroup(segmentGroup.children[outlet], startIndex, commands);\n            }\n        });\n        forEach(segmentGroup.children, function (child, childOutlet) {\n            if (outlets_2[childOutlet] === undefined) {\n                children_1[childOutlet] = child;\n            }\n        });\n        return new UrlSegmentGroup(segmentGroup.segments, children_1);\n    }\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction prefixedWith(segmentGroup, startIndex, commands) {\n    var /** @type {?} */ currentCommandIndex = 0;\n    var /** @type {?} */ currentPathIndex = startIndex;\n    var /** @type {?} */ noMatch = { match: false, pathIndex: 0, commandIndex: 0 };\n    while (currentPathIndex < segmentGroup.segments.length) {\n        if (currentCommandIndex >= commands.length)\n            return noMatch;\n        var /** @type {?} */ path = segmentGroup.segments[currentPathIndex];\n        var /** @type {?} */ curr = getPath(commands[currentCommandIndex]);\n        var /** @type {?} */ next = currentCommandIndex < commands.length - 1 ? commands[currentCommandIndex + 1] : null;\n        if (currentPathIndex > 0 && curr === undefined)\n            break;\n        if (curr && next && (typeof next === 'object') && next.outlets === undefined) {\n            if (!compare(curr, next, path))\n                return noMatch;\n            currentCommandIndex += 2;\n        }\n        else {\n            if (!compare(curr, {}, path))\n                return noMatch;\n            currentCommandIndex++;\n        }\n        currentPathIndex++;\n    }\n    return { match: true, pathIndex: currentPathIndex, commandIndex: currentCommandIndex };\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction createNewSegmentGroup(segmentGroup, startIndex, commands) {\n    var /** @type {?} */ paths = segmentGroup.segments.slice(0, startIndex);\n    var /** @type {?} */ i = 0;\n    while (i < commands.length) {\n        if (typeof commands[i] === 'object' && commands[i].outlets !== undefined) {\n            var /** @type {?} */ children = createNewSegmentChildren(commands[i].outlets);\n            return new UrlSegmentGroup(paths, children);\n        }\n        // if we start with an object literal, we need to reuse the path part from the segment\n        if (i === 0 && isMatrixParams(commands[0])) {\n            var /** @type {?} */ p = segmentGroup.segments[startIndex];\n            paths.push(new UrlSegment(p.path, commands[0]));\n            i++;\n            continue;\n        }\n        var /** @type {?} */ curr = getPath(commands[i]);\n        var /** @type {?} */ next = (i < commands.length - 1) ? commands[i + 1] : null;\n        if (curr && next && isMatrixParams(next)) {\n            paths.push(new UrlSegment(curr, stringify(next)));\n            i += 2;\n        }\n        else {\n            paths.push(new UrlSegment(curr, {}));\n            i++;\n        }\n    }\n    return new UrlSegmentGroup(paths, {});\n}\n/**\n * @param {?} outlets\n * @return {?}\n */\nfunction createNewSegmentChildren(outlets) {\n    var /** @type {?} */ children = {};\n    forEach(outlets, function (commands, outlet) {\n        if (commands !== null) {\n            children[outlet] = createNewSegmentGroup(new UrlSegmentGroup([], {}), 0, commands);\n        }\n    });\n    return children;\n}\n/**\n * @param {?} params\n * @return {?}\n */\nfunction stringify(params) {\n    var /** @type {?} */ res = {};\n    forEach(params, function (v, k) { return res[k] = \"\" + v; });\n    return res;\n}\n/**\n * @param {?} path\n * @param {?} params\n * @param {?} segment\n * @return {?}\n */\nfunction compare(path, params, segment) {\n    return path == segment.path && shallowEqual(params, segment.parameters);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CanActivate = /** @class */ (function () {\n    function CanActivate(path) {\n        this.path = path;\n        this.route = this.path[this.path.length - 1];\n    }\n    return CanActivate;\n}());\nvar CanDeactivate = /** @class */ (function () {\n    function CanDeactivate(component, route) {\n        this.component = component;\n        this.route = route;\n    }\n    return CanDeactivate;\n}());\n/**\n * This class bundles the actions involved in preactivation of a route.\n */\nvar PreActivation = /** @class */ (function () {\n    function PreActivation(future, curr, moduleInjector, forwardEvent) {\n        this.future = future;\n        this.curr = curr;\n        this.moduleInjector = moduleInjector;\n        this.forwardEvent = forwardEvent;\n        this.canActivateChecks = [];\n        this.canDeactivateChecks = [];\n    }\n    /**\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    PreActivation.prototype.initialize = /**\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    function (parentContexts) {\n        var /** @type {?} */ futureRoot = this.future._root;\n        var /** @type {?} */ currRoot = this.curr ? this.curr._root : null;\n        this.setupChildRouteGuards(futureRoot, currRoot, parentContexts, [futureRoot.value]);\n    };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.checkGuards = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!this.isDeactivating() && !this.isActivating()) {\n            return rxjs_observable_of.of(true);\n        }\n        var /** @type {?} */ canDeactivate$ = this.runCanDeactivateChecks();\n        return rxjs_operator_mergeMap.mergeMap.call(canDeactivate$, function (canDeactivate) { return canDeactivate ? _this.runCanActivateChecks() : rxjs_observable_of.of(false); });\n    };\n    /**\n     * @param {?} paramsInheritanceStrategy\n     * @return {?}\n     */\n    PreActivation.prototype.resolveData = /**\n     * @param {?} paramsInheritanceStrategy\n     * @return {?}\n     */\n    function (paramsInheritanceStrategy) {\n        var _this = this;\n        if (!this.isActivating())\n            return rxjs_observable_of.of(null);\n        var /** @type {?} */ checks$ = rxjs_observable_from.from(this.canActivateChecks);\n        var /** @type {?} */ runningChecks$ = rxjs_operator_concatMap.concatMap.call(checks$, function (check) { return _this.runResolve(check.route, paramsInheritanceStrategy); });\n        return rxjs_operator_reduce.reduce.call(runningChecks$, function (_, __) { return _; });\n    };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.isDeactivating = /**\n     * @return {?}\n     */\n    function () { return this.canDeactivateChecks.length !== 0; };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.isActivating = /**\n     * @return {?}\n     */\n    function () { return this.canActivateChecks.length !== 0; };\n    /**\n     * Iterates over child routes and calls recursive `setupRouteGuards` to get `this` instance in\n     * proper state to run `checkGuards()` method.\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} contexts\n     * @param {?} futurePath\n     * @return {?}\n     */\n    PreActivation.prototype.setupChildRouteGuards = /**\n     * Iterates over child routes and calls recursive `setupRouteGuards` to get `this` instance in\n     * proper state to run `checkGuards()` method.\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} contexts\n     * @param {?} futurePath\n     * @return {?}\n     */\n    function (futureNode, currNode, contexts, futurePath) {\n        var _this = this;\n        var /** @type {?} */ prevChildren = nodeChildrenAsMap(currNode);\n        // Process the children of the future route\n        futureNode.children.forEach(function (c) {\n            _this.setupRouteGuards(c, prevChildren[c.value.outlet], contexts, futurePath.concat([c.value]));\n            delete prevChildren[c.value.outlet];\n        });\n        // Process any children left from the current route (not active for the future route)\n        forEach(prevChildren, function (v, k) {\n            return _this.deactivateRouteAndItsChildren(v, /** @type {?} */ ((contexts)).getContext(k));\n        });\n    };\n    /**\n     * Iterates over child routes and calls recursive `setupRouteGuards` to get `this` instance in\n     * proper state to run `checkGuards()` method.\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} parentContexts\n     * @param {?} futurePath\n     * @return {?}\n     */\n    PreActivation.prototype.setupRouteGuards = /**\n     * Iterates over child routes and calls recursive `setupRouteGuards` to get `this` instance in\n     * proper state to run `checkGuards()` method.\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} parentContexts\n     * @param {?} futurePath\n     * @return {?}\n     */\n    function (futureNode, currNode, parentContexts, futurePath) {\n        var /** @type {?} */ future = futureNode.value;\n        var /** @type {?} */ curr = currNode ? currNode.value : null;\n        var /** @type {?} */ context = parentContexts ? parentContexts.getContext(futureNode.value.outlet) : null;\n        // reusing the node\n        if (curr && future.routeConfig === curr.routeConfig) {\n            var /** @type {?} */ shouldRunGuardsAndResolvers = this.shouldRunGuardsAndResolvers(curr, future, /** @type {?} */ ((future.routeConfig)).runGuardsAndResolvers);\n            if (shouldRunGuardsAndResolvers) {\n                this.canActivateChecks.push(new CanActivate(futurePath));\n            }\n            else {\n                // we need to set the data\n                future.data = curr.data;\n                future._resolvedData = curr._resolvedData;\n            }\n            // If we have a component, we need to go through an outlet.\n            if (future.component) {\n                this.setupChildRouteGuards(futureNode, currNode, context ? context.children : null, futurePath);\n                // if we have a componentless route, we recurse but keep the same outlet map.\n            }\n            else {\n                this.setupChildRouteGuards(futureNode, currNode, parentContexts, futurePath);\n            }\n            if (shouldRunGuardsAndResolvers) {\n                var /** @type {?} */ outlet = /** @type {?} */ ((/** @type {?} */ ((context)).outlet));\n                this.canDeactivateChecks.push(new CanDeactivate(outlet.component, curr));\n            }\n        }\n        else {\n            if (curr) {\n                this.deactivateRouteAndItsChildren(currNode, context);\n            }\n            this.canActivateChecks.push(new CanActivate(futurePath));\n            // If we have a component, we need to go through an outlet.\n            if (future.component) {\n                this.setupChildRouteGuards(futureNode, null, context ? context.children : null, futurePath);\n                // if we have a componentless route, we recurse but keep the same outlet map.\n            }\n            else {\n                this.setupChildRouteGuards(futureNode, null, parentContexts, futurePath);\n            }\n        }\n    };\n    /**\n     * @param {?} curr\n     * @param {?} future\n     * @param {?} mode\n     * @return {?}\n     */\n    PreActivation.prototype.shouldRunGuardsAndResolvers = /**\n     * @param {?} curr\n     * @param {?} future\n     * @param {?} mode\n     * @return {?}\n     */\n    function (curr, future, mode) {\n        switch (mode) {\n            case 'always':\n                return true;\n            case 'paramsOrQueryParamsChange':\n                return !equalParamsAndUrlSegments(curr, future) ||\n                    !shallowEqual(curr.queryParams, future.queryParams);\n            case 'paramsChange':\n            default:\n                return !equalParamsAndUrlSegments(curr, future);\n        }\n    };\n    /**\n     * @param {?} route\n     * @param {?} context\n     * @return {?}\n     */\n    PreActivation.prototype.deactivateRouteAndItsChildren = /**\n     * @param {?} route\n     * @param {?} context\n     * @return {?}\n     */\n    function (route, context) {\n        var _this = this;\n        var /** @type {?} */ children = nodeChildrenAsMap(route);\n        var /** @type {?} */ r = route.value;\n        forEach(children, function (node, childName) {\n            if (!r.component) {\n                _this.deactivateRouteAndItsChildren(node, context);\n            }\n            else if (context) {\n                _this.deactivateRouteAndItsChildren(node, context.children.getContext(childName));\n            }\n            else {\n                _this.deactivateRouteAndItsChildren(node, null);\n            }\n        });\n        if (!r.component) {\n            this.canDeactivateChecks.push(new CanDeactivate(null, r));\n        }\n        else if (context && context.outlet && context.outlet.isActivated) {\n            this.canDeactivateChecks.push(new CanDeactivate(context.outlet.component, r));\n        }\n        else {\n            this.canDeactivateChecks.push(new CanDeactivate(null, r));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.runCanDeactivateChecks = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ checks$ = rxjs_observable_from.from(this.canDeactivateChecks);\n        var /** @type {?} */ runningChecks$ = rxjs_operator_mergeMap.mergeMap.call(checks$, function (check) { return _this.runCanDeactivate(check.component, check.route); });\n        return rxjs_operator_every.every.call(runningChecks$, function (result) { return result === true; });\n    };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.runCanActivateChecks = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ checks$ = rxjs_observable_from.from(this.canActivateChecks);\n        var /** @type {?} */ runningChecks$ = rxjs_operator_concatMap.concatMap.call(checks$, function (check) {\n            return andObservables(rxjs_observable_from.from([\n                _this.fireChildActivationStart(check.route.parent), _this.fireActivationStart(check.route),\n                _this.runCanActivateChild(check.path), _this.runCanActivate(check.route)\n            ]));\n        });\n        return rxjs_operator_every.every.call(runningChecks$, function (result) { return result === true; });\n        // this.fireChildActivationStart(check.path),\n    };\n    /**\n     * This should fire off `ActivationStart` events for each route being activated at this\n     * level.\n     * In other words, if you're activating `a` and `b` below, `path` will contain the\n     * `ActivatedRouteSnapshot`s for both and we will fire `ActivationStart` for both. Always\n     * return\n     * `true` so checks continue to run.\n     * @param {?} snapshot\n     * @return {?}\n     */\n    PreActivation.prototype.fireActivationStart = /**\n     * This should fire off `ActivationStart` events for each route being activated at this\n     * level.\n     * In other words, if you're activating `a` and `b` below, `path` will contain the\n     * `ActivatedRouteSnapshot`s for both and we will fire `ActivationStart` for both. Always\n     * return\n     * `true` so checks continue to run.\n     * @param {?} snapshot\n     * @return {?}\n     */\n    function (snapshot) {\n        if (snapshot !== null && this.forwardEvent) {\n            this.forwardEvent(new ActivationStart(snapshot));\n        }\n        return rxjs_observable_of.of(true);\n    };\n    /**\n     * This should fire off `ChildActivationStart` events for each route being activated at this\n     * level.\n     * In other words, if you're activating `a` and `b` below, `path` will contain the\n     * `ActivatedRouteSnapshot`s for both and we will fire `ChildActivationStart` for both. Always\n     * return\n     * `true` so checks continue to run.\n     * @param {?} snapshot\n     * @return {?}\n     */\n    PreActivation.prototype.fireChildActivationStart = /**\n     * This should fire off `ChildActivationStart` events for each route being activated at this\n     * level.\n     * In other words, if you're activating `a` and `b` below, `path` will contain the\n     * `ActivatedRouteSnapshot`s for both and we will fire `ChildActivationStart` for both. Always\n     * return\n     * `true` so checks continue to run.\n     * @param {?} snapshot\n     * @return {?}\n     */\n    function (snapshot) {\n        if (snapshot !== null && this.forwardEvent) {\n            this.forwardEvent(new ChildActivationStart(snapshot));\n        }\n        return rxjs_observable_of.of(true);\n    };\n    /**\n     * @param {?} future\n     * @return {?}\n     */\n    PreActivation.prototype.runCanActivate = /**\n     * @param {?} future\n     * @return {?}\n     */\n    function (future) {\n        var _this = this;\n        var /** @type {?} */ canActivate = future.routeConfig ? future.routeConfig.canActivate : null;\n        if (!canActivate || canActivate.length === 0)\n            return rxjs_observable_of.of(true);\n        var /** @type {?} */ obs = rxjs_operator_map.map.call(rxjs_observable_from.from(canActivate), function (c) {\n            var /** @type {?} */ guard = _this.getToken(c, future);\n            var /** @type {?} */ observable;\n            if (guard.canActivate) {\n                observable = wrapIntoObservable(guard.canActivate(future, _this.future));\n            }\n            else {\n                observable = wrapIntoObservable(guard(future, _this.future));\n            }\n            return rxjs_operator_first.first.call(observable);\n        });\n        return andObservables(obs);\n    };\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    PreActivation.prototype.runCanActivateChild = /**\n     * @param {?} path\n     * @return {?}\n     */\n    function (path) {\n        var _this = this;\n        var /** @type {?} */ future = path[path.length - 1];\n        var /** @type {?} */ canActivateChildGuards = path.slice(0, path.length - 1)\n            .reverse()\n            .map(function (p) { return _this.extractCanActivateChild(p); })\n            .filter(function (_) { return _ !== null; });\n        return andObservables(rxjs_operator_map.map.call(rxjs_observable_from.from(canActivateChildGuards), function (d) {\n            var /** @type {?} */ obs = rxjs_operator_map.map.call(rxjs_observable_from.from(d.guards), function (c) {\n                var /** @type {?} */ guard = _this.getToken(c, d.node);\n                var /** @type {?} */ observable;\n                if (guard.canActivateChild) {\n                    observable = wrapIntoObservable(guard.canActivateChild(future, _this.future));\n                }\n                else {\n                    observable = wrapIntoObservable(guard(future, _this.future));\n                }\n                return rxjs_operator_first.first.call(observable);\n            });\n            return andObservables(obs);\n        }));\n    };\n    /**\n     * @param {?} p\n     * @return {?}\n     */\n    PreActivation.prototype.extractCanActivateChild = /**\n     * @param {?} p\n     * @return {?}\n     */\n    function (p) {\n        var /** @type {?} */ canActivateChild = p.routeConfig ? p.routeConfig.canActivateChild : null;\n        if (!canActivateChild || canActivateChild.length === 0)\n            return null;\n        return { node: p, guards: canActivateChild };\n    };\n    /**\n     * @param {?} component\n     * @param {?} curr\n     * @return {?}\n     */\n    PreActivation.prototype.runCanDeactivate = /**\n     * @param {?} component\n     * @param {?} curr\n     * @return {?}\n     */\n    function (component, curr) {\n        var _this = this;\n        var /** @type {?} */ canDeactivate = curr && curr.routeConfig ? curr.routeConfig.canDeactivate : null;\n        if (!canDeactivate || canDeactivate.length === 0)\n            return rxjs_observable_of.of(true);\n        var /** @type {?} */ canDeactivate$ = rxjs_operator_mergeMap.mergeMap.call(rxjs_observable_from.from(canDeactivate), function (c) {\n            var /** @type {?} */ guard = _this.getToken(c, curr);\n            var /** @type {?} */ observable;\n            if (guard.canDeactivate) {\n                observable =\n                    wrapIntoObservable(guard.canDeactivate(component, curr, _this.curr, _this.future));\n            }\n            else {\n                observable = wrapIntoObservable(guard(component, curr, _this.curr, _this.future));\n            }\n            return rxjs_operator_first.first.call(observable);\n        });\n        return rxjs_operator_every.every.call(canDeactivate$, function (result) { return result === true; });\n    };\n    /**\n     * @param {?} future\n     * @param {?} paramsInheritanceStrategy\n     * @return {?}\n     */\n    PreActivation.prototype.runResolve = /**\n     * @param {?} future\n     * @param {?} paramsInheritanceStrategy\n     * @return {?}\n     */\n    function (future, paramsInheritanceStrategy) {\n        var /** @type {?} */ resolve = future._resolve;\n        return rxjs_operator_map.map.call(this.resolveNode(resolve, future), function (resolvedData) {\n            future._resolvedData = resolvedData;\n            future.data = __assign({}, future.data, inheritedParamsDataResolve(future, paramsInheritanceStrategy).resolve);\n            return null;\n        });\n    };\n    /**\n     * @param {?} resolve\n     * @param {?} future\n     * @return {?}\n     */\n    PreActivation.prototype.resolveNode = /**\n     * @param {?} resolve\n     * @param {?} future\n     * @return {?}\n     */\n    function (resolve, future) {\n        var _this = this;\n        var /** @type {?} */ keys = Object.keys(resolve);\n        if (keys.length === 0) {\n            return rxjs_observable_of.of({});\n        }\n        if (keys.length === 1) {\n            var /** @type {?} */ key_1 = keys[0];\n            return rxjs_operator_map.map.call(this.getResolver(resolve[key_1], future), function (value) {\n                return _a = {}, _a[key_1] = value, _a;\n                var _a;\n            });\n        }\n        var /** @type {?} */ data = {};\n        var /** @type {?} */ runningResolvers$ = rxjs_operator_mergeMap.mergeMap.call(rxjs_observable_from.from(keys), function (key) {\n            return rxjs_operator_map.map.call(_this.getResolver(resolve[key], future), function (value) {\n                data[key] = value;\n                return value;\n            });\n        });\n        return rxjs_operator_map.map.call(rxjs_operator_last.last.call(runningResolvers$), function () { return data; });\n    };\n    /**\n     * @param {?} injectionToken\n     * @param {?} future\n     * @return {?}\n     */\n    PreActivation.prototype.getResolver = /**\n     * @param {?} injectionToken\n     * @param {?} future\n     * @return {?}\n     */\n    function (injectionToken, future) {\n        var /** @type {?} */ resolver = this.getToken(injectionToken, future);\n        return resolver.resolve ? wrapIntoObservable(resolver.resolve(future, this.future)) :\n            wrapIntoObservable(resolver(future, this.future));\n    };\n    /**\n     * @param {?} token\n     * @param {?} snapshot\n     * @return {?}\n     */\n    PreActivation.prototype.getToken = /**\n     * @param {?} token\n     * @param {?} snapshot\n     * @return {?}\n     */\n    function (token, snapshot) {\n        var /** @type {?} */ config = closestLoadedConfig(snapshot);\n        var /** @type {?} */ injector = config ? config.module.injector : this.moduleInjector;\n        return injector.get(token);\n    };\n    return PreActivation;\n}());\n/**\n * @param {?} snapshot\n * @return {?}\n */\nfunction closestLoadedConfig(snapshot) {\n    if (!snapshot)\n        return null;\n    for (var /** @type {?} */ s = snapshot.parent; s; s = s.parent) {\n        var /** @type {?} */ route = s.routeConfig;\n        if (route && route._loadedConfig)\n            return route._loadedConfig;\n    }\n    return null;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NoMatch$1 = /** @class */ (function () {\n    function NoMatch() {\n    }\n    return NoMatch;\n}());\n/**\n * @param {?} rootComponentType\n * @param {?} config\n * @param {?} urlTree\n * @param {?} url\n * @param {?=} paramsInheritanceStrategy\n * @return {?}\n */\nfunction recognize(rootComponentType, config, urlTree, url, paramsInheritanceStrategy) {\n    if (paramsInheritanceStrategy === void 0) { paramsInheritanceStrategy = 'emptyOnly'; }\n    return new Recognizer(rootComponentType, config, urlTree, url, paramsInheritanceStrategy)\n        .recognize();\n}\nvar Recognizer = /** @class */ (function () {\n    function Recognizer(rootComponentType, config, urlTree, url, paramsInheritanceStrategy) {\n        this.rootComponentType = rootComponentType;\n        this.config = config;\n        this.urlTree = urlTree;\n        this.url = url;\n        this.paramsInheritanceStrategy = paramsInheritanceStrategy;\n    }\n    /**\n     * @return {?}\n     */\n    Recognizer.prototype.recognize = /**\n     * @return {?}\n     */\n    function () {\n        try {\n            var /** @type {?} */ rootSegmentGroup = split$1(this.urlTree.root, [], [], this.config).segmentGroup;\n            var /** @type {?} */ children = this.processSegmentGroup(this.config, rootSegmentGroup, PRIMARY_OUTLET);\n            var /** @type {?} */ root = new ActivatedRouteSnapshot([], Object.freeze({}), Object.freeze(this.urlTree.queryParams), /** @type {?} */ ((this.urlTree.fragment)), {}, PRIMARY_OUTLET, this.rootComponentType, null, this.urlTree.root, -1, {});\n            var /** @type {?} */ rootNode = new TreeNode(root, children);\n            var /** @type {?} */ routeState = new RouterStateSnapshot(this.url, rootNode);\n            this.inheritParamsAndData(routeState._root);\n            return rxjs_observable_of.of(routeState);\n        }\n        catch (/** @type {?} */ e) {\n            return new rxjs_Observable.Observable(function (obs) { return obs.error(e); });\n        }\n    };\n    /**\n     * @param {?} routeNode\n     * @return {?}\n     */\n    Recognizer.prototype.inheritParamsAndData = /**\n     * @param {?} routeNode\n     * @return {?}\n     */\n    function (routeNode) {\n        var _this = this;\n        var /** @type {?} */ route = routeNode.value;\n        var /** @type {?} */ i = inheritedParamsDataResolve(route, this.paramsInheritanceStrategy);\n        route.params = Object.freeze(i.params);\n        route.data = Object.freeze(i.data);\n        routeNode.children.forEach(function (n) { return _this.inheritParamsAndData(n); });\n    };\n    /**\n     * @param {?} config\n     * @param {?} segmentGroup\n     * @param {?} outlet\n     * @return {?}\n     */\n    Recognizer.prototype.processSegmentGroup = /**\n     * @param {?} config\n     * @param {?} segmentGroup\n     * @param {?} outlet\n     * @return {?}\n     */\n    function (config, segmentGroup, outlet) {\n        if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n            return this.processChildren(config, segmentGroup);\n        }\n        return this.processSegment(config, segmentGroup, segmentGroup.segments, outlet);\n    };\n    /**\n     * @param {?} config\n     * @param {?} segmentGroup\n     * @return {?}\n     */\n    Recognizer.prototype.processChildren = /**\n     * @param {?} config\n     * @param {?} segmentGroup\n     * @return {?}\n     */\n    function (config, segmentGroup) {\n        var _this = this;\n        var /** @type {?} */ children = mapChildrenIntoArray(segmentGroup, function (child, childOutlet) { return _this.processSegmentGroup(config, child, childOutlet); });\n        checkOutletNameUniqueness(children);\n        sortActivatedRouteSnapshots(children);\n        return children;\n    };\n    /**\n     * @param {?} config\n     * @param {?} segmentGroup\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    Recognizer.prototype.processSegment = /**\n     * @param {?} config\n     * @param {?} segmentGroup\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    function (config, segmentGroup, segments, outlet) {\n        for (var _i = 0, config_1 = config; _i < config_1.length; _i++) {\n            var r = config_1[_i];\n            try {\n                return this.processSegmentAgainstRoute(r, segmentGroup, segments, outlet);\n            }\n            catch (/** @type {?} */ e) {\n                if (!(e instanceof NoMatch$1))\n                    throw e;\n            }\n        }\n        if (this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n            return [];\n        }\n        throw new NoMatch$1();\n    };\n    /**\n     * @param {?} segmentGroup\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    Recognizer.prototype.noLeftoversInUrl = /**\n     * @param {?} segmentGroup\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    function (segmentGroup, segments, outlet) {\n        return segments.length === 0 && !segmentGroup.children[outlet];\n    };\n    /**\n     * @param {?} route\n     * @param {?} rawSegment\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    Recognizer.prototype.processSegmentAgainstRoute = /**\n     * @param {?} route\n     * @param {?} rawSegment\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    function (route, rawSegment, segments, outlet) {\n        if (route.redirectTo)\n            throw new NoMatch$1();\n        if ((route.outlet || PRIMARY_OUTLET) !== outlet)\n            throw new NoMatch$1();\n        var /** @type {?} */ snapshot;\n        var /** @type {?} */ consumedSegments = [];\n        var /** @type {?} */ rawSlicedSegments = [];\n        if (route.path === '**') {\n            var /** @type {?} */ params = segments.length > 0 ? /** @type {?} */ ((last$1(segments))).parameters : {};\n            snapshot = new ActivatedRouteSnapshot(segments, params, Object.freeze(this.urlTree.queryParams), /** @type {?} */ ((this.urlTree.fragment)), getData(route), outlet, /** @type {?} */ ((route.component)), route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + segments.length, getResolve(route));\n        }\n        else {\n            var /** @type {?} */ result = match$1(rawSegment, route, segments);\n            consumedSegments = result.consumedSegments;\n            rawSlicedSegments = segments.slice(result.lastChild);\n            snapshot = new ActivatedRouteSnapshot(consumedSegments, result.parameters, Object.freeze(this.urlTree.queryParams), /** @type {?} */ ((this.urlTree.fragment)), getData(route), outlet, /** @type {?} */ ((route.component)), route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + consumedSegments.length, getResolve(route));\n        }\n        var /** @type {?} */ childConfig = getChildConfig(route);\n        var _a = split$1(rawSegment, consumedSegments, rawSlicedSegments, childConfig), segmentGroup = _a.segmentGroup, slicedSegments = _a.slicedSegments;\n        if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n            var /** @type {?} */ children_1 = this.processChildren(childConfig, segmentGroup);\n            return [new TreeNode(snapshot, children_1)];\n        }\n        if (childConfig.length === 0 && slicedSegments.length === 0) {\n            return [new TreeNode(snapshot, [])];\n        }\n        var /** @type {?} */ children = this.processSegment(childConfig, segmentGroup, slicedSegments, PRIMARY_OUTLET);\n        return [new TreeNode(snapshot, children)];\n    };\n    return Recognizer;\n}());\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction sortActivatedRouteSnapshots(nodes) {\n    nodes.sort(function (a, b) {\n        if (a.value.outlet === PRIMARY_OUTLET)\n            return -1;\n        if (b.value.outlet === PRIMARY_OUTLET)\n            return 1;\n        return a.value.outlet.localeCompare(b.value.outlet);\n    });\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getChildConfig(route) {\n    if (route.children) {\n        return route.children;\n    }\n    if (route.loadChildren) {\n        return /** @type {?} */ ((route._loadedConfig)).routes;\n    }\n    return [];\n}\n/**\n * @param {?} segmentGroup\n * @param {?} route\n * @param {?} segments\n * @return {?}\n */\nfunction match$1(segmentGroup, route, segments) {\n    if (route.path === '') {\n        if (route.pathMatch === 'full' && (segmentGroup.hasChildren() || segments.length > 0)) {\n            throw new NoMatch$1();\n        }\n        return { consumedSegments: [], lastChild: 0, parameters: {} };\n    }\n    var /** @type {?} */ matcher = route.matcher || defaultUrlMatcher;\n    var /** @type {?} */ res = matcher(segments, segmentGroup, route);\n    if (!res)\n        throw new NoMatch$1();\n    var /** @type {?} */ posParams = {};\n    forEach(/** @type {?} */ ((res.posParams)), function (v, k) { posParams[k] = v.path; });\n    var /** @type {?} */ parameters = res.consumed.length > 0 ? __assign({}, posParams, res.consumed[res.consumed.length - 1].parameters) :\n        posParams;\n    return { consumedSegments: res.consumed, lastChild: res.consumed.length, parameters: parameters };\n}\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction checkOutletNameUniqueness(nodes) {\n    var /** @type {?} */ names = {};\n    nodes.forEach(function (n) {\n        var /** @type {?} */ routeWithSameOutletName = names[n.value.outlet];\n        if (routeWithSameOutletName) {\n            var /** @type {?} */ p = routeWithSameOutletName.url.map(function (s) { return s.toString(); }).join('/');\n            var /** @type {?} */ c = n.value.url.map(function (s) { return s.toString(); }).join('/');\n            throw new Error(\"Two segments cannot have the same outlet name: '\" + p + \"' and '\" + c + \"'.\");\n        }\n        names[n.value.outlet] = n.value;\n    });\n}\n/**\n * @param {?} segmentGroup\n * @return {?}\n */\nfunction getSourceSegmentGroup(segmentGroup) {\n    var /** @type {?} */ s = segmentGroup;\n    while (s._sourceSegment) {\n        s = s._sourceSegment;\n    }\n    return s;\n}\n/**\n * @param {?} segmentGroup\n * @return {?}\n */\nfunction getPathIndexShift(segmentGroup) {\n    var /** @type {?} */ s = segmentGroup;\n    var /** @type {?} */ res = (s._segmentIndexShift ? s._segmentIndexShift : 0);\n    while (s._sourceSegment) {\n        s = s._sourceSegment;\n        res += (s._segmentIndexShift ? s._segmentIndexShift : 0);\n    }\n    return res - 1;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} consumedSegments\n * @param {?} slicedSegments\n * @param {?} config\n * @return {?}\n */\nfunction split$1(segmentGroup, consumedSegments, slicedSegments, config) {\n    if (slicedSegments.length > 0 &&\n        containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n        var /** @type {?} */ s_1 = new UrlSegmentGroup(consumedSegments, createChildrenForEmptyPaths(segmentGroup, consumedSegments, config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n        s_1._sourceSegment = segmentGroup;\n        s_1._segmentIndexShift = consumedSegments.length;\n        return { segmentGroup: s_1, slicedSegments: [] };\n    }\n    if (slicedSegments.length === 0 &&\n        containsEmptyPathMatches(segmentGroup, slicedSegments, config)) {\n        var /** @type {?} */ s_2 = new UrlSegmentGroup(segmentGroup.segments, addEmptyPathsToChildrenIfNeeded(segmentGroup, slicedSegments, config, segmentGroup.children));\n        s_2._sourceSegment = segmentGroup;\n        s_2._segmentIndexShift = consumedSegments.length;\n        return { segmentGroup: s_2, slicedSegments: slicedSegments };\n    }\n    var /** @type {?} */ s = new UrlSegmentGroup(segmentGroup.segments, segmentGroup.children);\n    s._sourceSegment = segmentGroup;\n    s._segmentIndexShift = consumedSegments.length;\n    return { segmentGroup: s, slicedSegments: slicedSegments };\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} routes\n * @param {?} children\n * @return {?}\n */\nfunction addEmptyPathsToChildrenIfNeeded(segmentGroup, slicedSegments, routes, children) {\n    var /** @type {?} */ res = {};\n    for (var _i = 0, routes_1 = routes; _i < routes_1.length; _i++) {\n        var r = routes_1[_i];\n        if (emptyPathMatch(segmentGroup, slicedSegments, r) && !children[getOutlet$1(r)]) {\n            var /** @type {?} */ s = new UrlSegmentGroup([], {});\n            s._sourceSegment = segmentGroup;\n            s._segmentIndexShift = segmentGroup.segments.length;\n            res[getOutlet$1(r)] = s;\n        }\n    }\n    return __assign({}, children, res);\n}\n/**\n * @param {?} segmentGroup\n * @param {?} consumedSegments\n * @param {?} routes\n * @param {?} primarySegment\n * @return {?}\n */\nfunction createChildrenForEmptyPaths(segmentGroup, consumedSegments, routes, primarySegment) {\n    var /** @type {?} */ res = {};\n    res[PRIMARY_OUTLET] = primarySegment;\n    primarySegment._sourceSegment = segmentGroup;\n    primarySegment._segmentIndexShift = consumedSegments.length;\n    for (var _i = 0, routes_2 = routes; _i < routes_2.length; _i++) {\n        var r = routes_2[_i];\n        if (r.path === '' && getOutlet$1(r) !== PRIMARY_OUTLET) {\n            var /** @type {?} */ s = new UrlSegmentGroup([], {});\n            s._sourceSegment = segmentGroup;\n            s._segmentIndexShift = consumedSegments.length;\n            res[getOutlet$1(r)] = s;\n        }\n    }\n    return res;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, routes) {\n    return routes.some(function (r) { return emptyPathMatch(segmentGroup, slicedSegments, r) && getOutlet$1(r) !== PRIMARY_OUTLET; });\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathMatches(segmentGroup, slicedSegments, routes) {\n    return routes.some(function (r) { return emptyPathMatch(segmentGroup, slicedSegments, r); });\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} r\n * @return {?}\n */\nfunction emptyPathMatch(segmentGroup, slicedSegments, r) {\n    if ((segmentGroup.hasChildren() || slicedSegments.length > 0) && r.pathMatch === 'full') {\n        return false;\n    }\n    return r.path === '' && r.redirectTo === undefined;\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getOutlet$1(route) {\n    return route.outlet || PRIMARY_OUTLET;\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getData(route) {\n    return route.data || {};\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getResolve(route) {\n    return route.resolve || {};\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Provides a way to customize when activated routes get reused.\n *\n * \\@experimental\n * @abstract\n */\nvar RouteReuseStrategy = /** @class */ (function () {\n    function RouteReuseStrategy() {\n    }\n    return RouteReuseStrategy;\n}());\n/**\n * Does not detach any subtrees. Reuses routes as long as their route config is the same.\n */\nvar DefaultRouteReuseStrategy = /** @class */ (function () {\n    function DefaultRouteReuseStrategy() {\n    }\n    /**\n     * @param {?} route\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.shouldDetach = /**\n     * @param {?} route\n     * @return {?}\n     */\n    function (route) { return false; };\n    /**\n     * @param {?} route\n     * @param {?} detachedTree\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.store = /**\n     * @param {?} route\n     * @param {?} detachedTree\n     * @return {?}\n     */\n    function (route, detachedTree) { };\n    /**\n     * @param {?} route\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.shouldAttach = /**\n     * @param {?} route\n     * @return {?}\n     */\n    function (route) { return false; };\n    /**\n     * @param {?} route\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.retrieve = /**\n     * @param {?} route\n     * @return {?}\n     */\n    function (route) { return null; };\n    /**\n     * @param {?} future\n     * @param {?} curr\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.shouldReuseRoute = /**\n     * @param {?} future\n     * @param {?} curr\n     * @return {?}\n     */\n    function (future, curr) {\n        return future.routeConfig === curr.routeConfig;\n    };\n    return DefaultRouteReuseStrategy;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docsNotRequired\n * \\@experimental\n */\nvar ROUTES = new _angular_core.InjectionToken('ROUTES');\nvar RouterConfigLoader = /** @class */ (function () {\n    function RouterConfigLoader(loader, compiler, onLoadStartListener, onLoadEndListener) {\n        this.loader = loader;\n        this.compiler = compiler;\n        this.onLoadStartListener = onLoadStartListener;\n        this.onLoadEndListener = onLoadEndListener;\n    }\n    /**\n     * @param {?} parentInjector\n     * @param {?} route\n     * @return {?}\n     */\n    RouterConfigLoader.prototype.load = /**\n     * @param {?} parentInjector\n     * @param {?} route\n     * @return {?}\n     */\n    function (parentInjector, route) {\n        var _this = this;\n        if (this.onLoadStartListener) {\n            this.onLoadStartListener(route);\n        }\n        var /** @type {?} */ moduleFactory$ = this.loadModuleFactory(/** @type {?} */ ((route.loadChildren)));\n        return rxjs_operator_map.map.call(moduleFactory$, function (factory) {\n            if (_this.onLoadEndListener) {\n                _this.onLoadEndListener(route);\n            }\n            var /** @type {?} */ module = factory.create(parentInjector);\n            return new LoadedRouterConfig(flatten(module.injector.get(ROUTES)).map(copyConfig), module);\n        });\n    };\n    /**\n     * @param {?} loadChildren\n     * @return {?}\n     */\n    RouterConfigLoader.prototype.loadModuleFactory = /**\n     * @param {?} loadChildren\n     * @return {?}\n     */\n    function (loadChildren) {\n        var _this = this;\n        if (typeof loadChildren === 'string') {\n            return rxjs_observable_fromPromise.fromPromise(this.loader.load(loadChildren));\n        }\n        else {\n            return rxjs_operator_mergeMap.mergeMap.call(wrapIntoObservable(loadChildren()), function (t) {\n                if (t instanceof _angular_core.NgModuleFactory) {\n                    return rxjs_observable_of.of(t);\n                }\n                else {\n                    return rxjs_observable_fromPromise.fromPromise(_this.compiler.compileModuleAsync(t));\n                }\n            });\n        }\n    };\n    return RouterConfigLoader;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Provides a way to migrate AngularJS applications to Angular.\n *\n * \\@experimental\n * @abstract\n */\nvar UrlHandlingStrategy = /** @class */ (function () {\n    function UrlHandlingStrategy() {\n    }\n    return UrlHandlingStrategy;\n}());\n/**\n * \\@experimental\n */\nvar DefaultUrlHandlingStrategy = /** @class */ (function () {\n    function DefaultUrlHandlingStrategy() {\n    }\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    DefaultUrlHandlingStrategy.prototype.shouldProcessUrl = /**\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) { return true; };\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    DefaultUrlHandlingStrategy.prototype.extract = /**\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) { return url; };\n    /**\n     * @param {?} newUrlPart\n     * @param {?} wholeUrl\n     * @return {?}\n     */\n    DefaultUrlHandlingStrategy.prototype.merge = /**\n     * @param {?} newUrlPart\n     * @param {?} wholeUrl\n     * @return {?}\n     */\n    function (newUrlPart, wholeUrl) { return newUrlPart; };\n    return DefaultUrlHandlingStrategy;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Represents the extra options used during navigation.\n *\n * \\@stable\n * @record\n */\n\n/**\n * @param {?} error\n * @return {?}\n */\nfunction defaultErrorHandler(error) {\n    throw error;\n}\n/**\n * \\@internal\n * @param {?} snapshot\n * @return {?}\n */\nfunction defaultRouterHook(snapshot) {\n    return /** @type {?} */ (rxjs_observable_of.of(null));\n}\n/**\n * \\@whatItDoes Provides the navigation and url manipulation capabilities.\n *\n * See {\\@link Routes} for more details and examples.\n *\n * \\@ngModule RouterModule\n *\n * \\@stable\n */\nvar Router = /** @class */ (function () {\n    /**\n     * Creates the router service.\n     */\n    // TODO: vsavkin make internal after the final is out.\n    function Router(rootComponentType, urlSerializer, rootContexts, location, injector, loader, compiler, config) {\n        var _this = this;\n        this.rootComponentType = rootComponentType;\n        this.urlSerializer = urlSerializer;\n        this.rootContexts = rootContexts;\n        this.location = location;\n        this.config = config;\n        this.navigations = new rxjs_BehaviorSubject.BehaviorSubject(/** @type {?} */ ((null)));\n        this.navigationId = 0;\n        this.events = new rxjs_Subject.Subject();\n        /**\n         * Error handler that is invoked when a navigation errors.\n         *\n         * See {\\@link ErrorHandler} for more information.\n         */\n        this.errorHandler = defaultErrorHandler;\n        /**\n         * Indicates if at least one navigation happened.\n         */\n        this.navigated = false;\n        /**\n         * Used by RouterModule. This allows us to\n         * pause the navigation either before preactivation or after it.\n         * \\@internal\n         */\n        this.hooks = {\n            beforePreactivation: defaultRouterHook,\n            afterPreactivation: defaultRouterHook\n        };\n        /**\n         * Extracts and merges URLs. Used for AngularJS to Angular migrations.\n         */\n        this.urlHandlingStrategy = new DefaultUrlHandlingStrategy();\n        this.routeReuseStrategy = new DefaultRouteReuseStrategy();\n        /**\n         * Define what the router should do if it receives a navigation request to the current URL.\n         * By default, the router will ignore this navigation. However, this prevents features such\n         * as a \"refresh\" button. Use this option to configure the behavior when navigating to the\n         * current URL. Default is 'ignore'.\n         */\n        this.onSameUrlNavigation = 'ignore';\n        /**\n         * Defines how the router merges params, data and resolved data from parent to child\n         * routes. Available options are:\n         *\n         * - `'emptyOnly'`, the default, only inherits parent params for path-less or component-less\n         *   routes.\n         * - `'always'`, enables unconditional inheritance of parent params.\n         */\n        this.paramsInheritanceStrategy = 'emptyOnly';\n        var /** @type {?} */ onLoadStart = function (r) { return _this.triggerEvent(new RouteConfigLoadStart(r)); };\n        var /** @type {?} */ onLoadEnd = function (r) { return _this.triggerEvent(new RouteConfigLoadEnd(r)); };\n        this.ngModule = injector.get(_angular_core.NgModuleRef);\n        this.resetConfig(config);\n        this.currentUrlTree = createEmptyUrlTree();\n        this.rawUrlTree = this.currentUrlTree;\n        this.configLoader = new RouterConfigLoader(loader, compiler, onLoadStart, onLoadEnd);\n        this.routerState = createEmptyState(this.currentUrlTree, this.rootComponentType);\n        this.processNavigations();\n    }\n    /**\n     * @internal\n     * TODO: this should be removed once the constructor of the router made internal\n     */\n    /**\n     * \\@internal\n     * TODO: this should be removed once the constructor of the router made internal\n     * @param {?} rootComponentType\n     * @return {?}\n     */\n    Router.prototype.resetRootComponentType = /**\n     * \\@internal\n     * TODO: this should be removed once the constructor of the router made internal\n     * @param {?} rootComponentType\n     * @return {?}\n     */\n    function (rootComponentType) {\n        this.rootComponentType = rootComponentType;\n        // TODO: vsavkin router 4.0 should make the root component set to null\n        // this will simplify the lifecycle of the router.\n        this.routerState.root.component = this.rootComponentType;\n    };\n    /**\n     * Sets up the location change listener and performs the initial navigation.\n     */\n    /**\n     * Sets up the location change listener and performs the initial navigation.\n     * @return {?}\n     */\n    Router.prototype.initialNavigation = /**\n     * Sets up the location change listener and performs the initial navigation.\n     * @return {?}\n     */\n    function () {\n        this.setUpLocationChangeListener();\n        if (this.navigationId === 0) {\n            this.navigateByUrl(this.location.path(true), { replaceUrl: true });\n        }\n    };\n    /**\n     * Sets up the location change listener.\n     */\n    /**\n     * Sets up the location change listener.\n     * @return {?}\n     */\n    Router.prototype.setUpLocationChangeListener = /**\n     * Sets up the location change listener.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // Don't need to use Zone.wrap any more, because zone.js\n        // already patch onPopState, so location change callback will\n        // run into ngZone\n        if (!this.locationSubscription) {\n            this.locationSubscription = /** @type {?} */ (this.location.subscribe(function (change) {\n                var /** @type {?} */ rawUrlTree = _this.urlSerializer.parse(change['url']);\n                var /** @type {?} */ source = change['type'] === 'popstate' ? 'popstate' : 'hashchange';\n                setTimeout(function () { _this.scheduleNavigation(rawUrlTree, source, { replaceUrl: true }); }, 0);\n            }));\n        }\n    };\n    Object.defineProperty(Router.prototype, \"url\", {\n        /** The current url */\n        get: /**\n         * The current url\n         * @return {?}\n         */\n        function () { return this.serializeUrl(this.currentUrlTree); },\n        enumerable: true,\n        configurable: true\n    });\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} e\n     * @return {?}\n     */\n    Router.prototype.triggerEvent = /**\n     * \\@internal\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) { (/** @type {?} */ (this.events)).next(e); };\n    /**\n     * Resets the configuration used for navigation and generating links.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.resetConfig([\n     *  { path: 'team/:id', component: TeamCmp, children: [\n     *    { path: 'simple', component: SimpleCmp },\n     *    { path: 'user/:name', component: UserCmp }\n     *  ]}\n     * ]);\n     * ```\n     */\n    /**\n     * Resets the configuration used for navigation and generating links.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.resetConfig([\n     *  { path: 'team/:id', component: TeamCmp, children: [\n     *    { path: 'simple', component: SimpleCmp },\n     *    { path: 'user/:name', component: UserCmp }\n     *  ]}\n     * ]);\n     * ```\n     * @param {?} config\n     * @return {?}\n     */\n    Router.prototype.resetConfig = /**\n     * Resets the configuration used for navigation and generating links.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.resetConfig([\n     *  { path: 'team/:id', component: TeamCmp, children: [\n     *    { path: 'simple', component: SimpleCmp },\n     *    { path: 'user/:name', component: UserCmp }\n     *  ]}\n     * ]);\n     * ```\n     * @param {?} config\n     * @return {?}\n     */\n    function (config) {\n        validateConfig(config);\n        this.config = config.map(copyConfig);\n        this.navigated = false;\n    };\n    /** @docsNotRequired */\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    Router.prototype.ngOnDestroy = /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    function () { this.dispose(); };\n    /** Disposes of the router */\n    /**\n     * Disposes of the router\n     * @return {?}\n     */\n    Router.prototype.dispose = /**\n     * Disposes of the router\n     * @return {?}\n     */\n    function () {\n        if (this.locationSubscription) {\n            this.locationSubscription.unsubscribe();\n            this.locationSubscription = /** @type {?} */ ((null));\n        }\n    };\n    /**\n     * Applies an array of commands to the current url tree and creates a new url tree.\n     *\n     * When given an activate route, applies the given commands starting from the route.\n     * When not given a route, applies the given command starting from the root.\n     *\n     * ### Usage\n     *\n     * ```\n     * // create /team/33/user/11\n     * router.createUrlTree(['/team', 33, 'user', 11]);\n     *\n     * // create /team/33;expand=true/user/11\n     * router.createUrlTree(['/team', 33, {expand: true}, 'user', 11]);\n     *\n     * // you can collapse static segments like this (this works only with the first passed-in value):\n     * router.createUrlTree(['/team/33/user', userId]);\n     *\n     * // If the first segment can contain slashes, and you do not want the router to split it, you\n     * // can do the following:\n     *\n     * router.createUrlTree([{segmentPath: '/one/two'}]);\n     *\n     * // create /team/33/(user/11//right:chat)\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: 'chat'}}]);\n     *\n     * // remove the right secondary node\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: null}}]);\n     *\n     * // assuming the current url is `/team/33/user/11` and the route points to `user/11`\n     *\n     * // navigate to /team/33/user/11/details\n     * router.createUrlTree(['details'], {relativeTo: route});\n     *\n     * // navigate to /team/33/user/22\n     * router.createUrlTree(['../22'], {relativeTo: route});\n     *\n     * // navigate to /team/44/user/22\n     * router.createUrlTree(['../../team/44/user/22'], {relativeTo: route});\n     * ```\n     */\n    /**\n     * Applies an array of commands to the current url tree and creates a new url tree.\n     *\n     * When given an activate route, applies the given commands starting from the route.\n     * When not given a route, applies the given command starting from the root.\n     *\n     * ### Usage\n     *\n     * ```\n     * // create /team/33/user/11\n     * router.createUrlTree(['/team', 33, 'user', 11]);\n     *\n     * // create /team/33;expand=true/user/11\n     * router.createUrlTree(['/team', 33, {expand: true}, 'user', 11]);\n     *\n     * // you can collapse static segments like this (this works only with the first passed-in value):\n     * router.createUrlTree(['/team/33/user', userId]);\n     *\n     * // If the first segment can contain slashes, and you do not want the router to split it, you\n     * // can do the following:\n     *\n     * router.createUrlTree([{segmentPath: '/one/two'}]);\n     *\n     * // create /team/33/(user/11//right:chat)\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: 'chat'}}]);\n     *\n     * // remove the right secondary node\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: null}}]);\n     *\n     * // assuming the current url is `/team/33/user/11` and the route points to `user/11`\n     *\n     * // navigate to /team/33/user/11/details\n     * router.createUrlTree(['details'], {relativeTo: route});\n     *\n     * // navigate to /team/33/user/22\n     * router.createUrlTree(['../22'], {relativeTo: route});\n     *\n     * // navigate to /team/44/user/22\n     * router.createUrlTree(['../../team/44/user/22'], {relativeTo: route});\n     * ```\n     * @param {?} commands\n     * @param {?=} navigationExtras\n     * @return {?}\n     */\n    Router.prototype.createUrlTree = /**\n     * Applies an array of commands to the current url tree and creates a new url tree.\n     *\n     * When given an activate route, applies the given commands starting from the route.\n     * When not given a route, applies the given command starting from the root.\n     *\n     * ### Usage\n     *\n     * ```\n     * // create /team/33/user/11\n     * router.createUrlTree(['/team', 33, 'user', 11]);\n     *\n     * // create /team/33;expand=true/user/11\n     * router.createUrlTree(['/team', 33, {expand: true}, 'user', 11]);\n     *\n     * // you can collapse static segments like this (this works only with the first passed-in value):\n     * router.createUrlTree(['/team/33/user', userId]);\n     *\n     * // If the first segment can contain slashes, and you do not want the router to split it, you\n     * // can do the following:\n     *\n     * router.createUrlTree([{segmentPath: '/one/two'}]);\n     *\n     * // create /team/33/(user/11//right:chat)\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: 'chat'}}]);\n     *\n     * // remove the right secondary node\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: null}}]);\n     *\n     * // assuming the current url is `/team/33/user/11` and the route points to `user/11`\n     *\n     * // navigate to /team/33/user/11/details\n     * router.createUrlTree(['details'], {relativeTo: route});\n     *\n     * // navigate to /team/33/user/22\n     * router.createUrlTree(['../22'], {relativeTo: route});\n     *\n     * // navigate to /team/44/user/22\n     * router.createUrlTree(['../../team/44/user/22'], {relativeTo: route});\n     * ```\n     * @param {?} commands\n     * @param {?=} navigationExtras\n     * @return {?}\n     */\n    function (commands, navigationExtras) {\n        if (navigationExtras === void 0) { navigationExtras = {}; }\n        var relativeTo = navigationExtras.relativeTo, queryParams = navigationExtras.queryParams, fragment = navigationExtras.fragment, preserveQueryParams = navigationExtras.preserveQueryParams, queryParamsHandling = navigationExtras.queryParamsHandling, preserveFragment = navigationExtras.preserveFragment;\n        if (_angular_core.isDevMode() && preserveQueryParams && /** @type {?} */ (console) && /** @type {?} */ (console.warn)) {\n            console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n        }\n        var /** @type {?} */ a = relativeTo || this.routerState.root;\n        var /** @type {?} */ f = preserveFragment ? this.currentUrlTree.fragment : fragment;\n        var /** @type {?} */ q = null;\n        if (queryParamsHandling) {\n            switch (queryParamsHandling) {\n                case 'merge':\n                    q = __assign({}, this.currentUrlTree.queryParams, queryParams);\n                    break;\n                case 'preserve':\n                    q = this.currentUrlTree.queryParams;\n                    break;\n                default:\n                    q = queryParams || null;\n            }\n        }\n        else {\n            q = preserveQueryParams ? this.currentUrlTree.queryParams : queryParams || null;\n        }\n        if (q !== null) {\n            q = this.removeEmptyProps(q);\n        }\n        return createUrlTree(a, this.currentUrlTree, commands, /** @type {?} */ ((q)), /** @type {?} */ ((f)));\n    };\n    /**\n     * Navigate based on the provided url. This navigation is always absolute.\n     *\n     * Returns a promise that:\n     * - resolves to 'true' when navigation succeeds,\n     * - resolves to 'false' when navigation fails,\n     * - is rejected when an error happens.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.navigateByUrl(\"/team/33/user/11\");\n     *\n     * // Navigate without updating the URL\n     * router.navigateByUrl(\"/team/33/user/11\", { skipLocationChange: true });\n     * ```\n     *\n     * In opposite to `navigate`, `navigateByUrl` takes a whole URL\n     * and does not apply any delta to the current one.\n     */\n    /**\n     * Navigate based on the provided url. This navigation is always absolute.\n     *\n     * Returns a promise that:\n     * - resolves to 'true' when navigation succeeds,\n     * - resolves to 'false' when navigation fails,\n     * - is rejected when an error happens.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.navigateByUrl(\"/team/33/user/11\");\n     *\n     * // Navigate without updating the URL\n     * router.navigateByUrl(\"/team/33/user/11\", { skipLocationChange: true });\n     * ```\n     *\n     * In opposite to `navigate`, `navigateByUrl` takes a whole URL\n     * and does not apply any delta to the current one.\n     * @param {?} url\n     * @param {?=} extras\n     * @return {?}\n     */\n    Router.prototype.navigateByUrl = /**\n     * Navigate based on the provided url. This navigation is always absolute.\n     *\n     * Returns a promise that:\n     * - resolves to 'true' when navigation succeeds,\n     * - resolves to 'false' when navigation fails,\n     * - is rejected when an error happens.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.navigateByUrl(\"/team/33/user/11\");\n     *\n     * // Navigate without updating the URL\n     * router.navigateByUrl(\"/team/33/user/11\", { skipLocationChange: true });\n     * ```\n     *\n     * In opposite to `navigate`, `navigateByUrl` takes a whole URL\n     * and does not apply any delta to the current one.\n     * @param {?} url\n     * @param {?=} extras\n     * @return {?}\n     */\n    function (url, extras) {\n        if (extras === void 0) { extras = { skipLocationChange: false }; }\n        var /** @type {?} */ urlTree = url instanceof UrlTree ? url : this.parseUrl(url);\n        var /** @type {?} */ mergedTree = this.urlHandlingStrategy.merge(urlTree, this.rawUrlTree);\n        return this.scheduleNavigation(mergedTree, 'imperative', extras);\n    };\n    /**\n     * Navigate based on the provided array of commands and a starting point.\n     * If no starting route is provided, the navigation is absolute.\n     *\n     * Returns a promise that:\n     * - resolves to 'true' when navigation succeeds,\n     * - resolves to 'false' when navigation fails,\n     * - is rejected when an error happens.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route});\n     *\n     * // Navigate without updating the URL\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route, skipLocationChange: true});\n     * ```\n     *\n     * In opposite to `navigateByUrl`, `navigate` always takes a delta that is applied to the current\n     * URL.\n     */\n    /**\n     * Navigate based on the provided array of commands and a starting point.\n     * If no starting route is provided, the navigation is absolute.\n     *\n     * Returns a promise that:\n     * - resolves to 'true' when navigation succeeds,\n     * - resolves to 'false' when navigation fails,\n     * - is rejected when an error happens.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route});\n     *\n     * // Navigate without updating the URL\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route, skipLocationChange: true});\n     * ```\n     *\n     * In opposite to `navigateByUrl`, `navigate` always takes a delta that is applied to the current\n     * URL.\n     * @param {?} commands\n     * @param {?=} extras\n     * @return {?}\n     */\n    Router.prototype.navigate = /**\n     * Navigate based on the provided array of commands and a starting point.\n     * If no starting route is provided, the navigation is absolute.\n     *\n     * Returns a promise that:\n     * - resolves to 'true' when navigation succeeds,\n     * - resolves to 'false' when navigation fails,\n     * - is rejected when an error happens.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route});\n     *\n     * // Navigate without updating the URL\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route, skipLocationChange: true});\n     * ```\n     *\n     * In opposite to `navigateByUrl`, `navigate` always takes a delta that is applied to the current\n     * URL.\n     * @param {?} commands\n     * @param {?=} extras\n     * @return {?}\n     */\n    function (commands, extras) {\n        if (extras === void 0) { extras = { skipLocationChange: false }; }\n        validateCommands(commands);\n        return this.navigateByUrl(this.createUrlTree(commands, extras), extras);\n    };\n    /** Serializes a {@link UrlTree} into a string */\n    /**\n     * Serializes a {\\@link UrlTree} into a string\n     * @param {?} url\n     * @return {?}\n     */\n    Router.prototype.serializeUrl = /**\n     * Serializes a {\\@link UrlTree} into a string\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) { return this.urlSerializer.serialize(url); };\n    /** Parses a string into a {@link UrlTree} */\n    /**\n     * Parses a string into a {\\@link UrlTree}\n     * @param {?} url\n     * @return {?}\n     */\n    Router.prototype.parseUrl = /**\n     * Parses a string into a {\\@link UrlTree}\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) { return this.urlSerializer.parse(url); };\n    /** Returns whether the url is activated */\n    /**\n     * Returns whether the url is activated\n     * @param {?} url\n     * @param {?} exact\n     * @return {?}\n     */\n    Router.prototype.isActive = /**\n     * Returns whether the url is activated\n     * @param {?} url\n     * @param {?} exact\n     * @return {?}\n     */\n    function (url, exact) {\n        if (url instanceof UrlTree) {\n            return containsTree(this.currentUrlTree, url, exact);\n        }\n        var /** @type {?} */ urlTree = this.urlSerializer.parse(url);\n        return containsTree(this.currentUrlTree, urlTree, exact);\n    };\n    /**\n     * @param {?} params\n     * @return {?}\n     */\n    Router.prototype.removeEmptyProps = /**\n     * @param {?} params\n     * @return {?}\n     */\n    function (params) {\n        return Object.keys(params).reduce(function (result, key) {\n            var /** @type {?} */ value = params[key];\n            if (value !== null && value !== undefined) {\n                result[key] = value;\n            }\n            return result;\n        }, {});\n    };\n    /**\n     * @return {?}\n     */\n    Router.prototype.processNavigations = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        rxjs_operator_concatMap.concatMap\n            .call(this.navigations, function (nav) {\n            if (nav) {\n                _this.executeScheduledNavigation(nav);\n                // a failed navigation should not stop the router from processing\n                // further navigations => the catch\n                return nav.promise.catch(function () { });\n            }\n            else {\n                return /** @type {?} */ (rxjs_observable_of.of(null));\n            }\n        })\n            .subscribe(function () { });\n    };\n    /**\n     * @param {?} rawUrl\n     * @param {?} source\n     * @param {?} extras\n     * @return {?}\n     */\n    Router.prototype.scheduleNavigation = /**\n     * @param {?} rawUrl\n     * @param {?} source\n     * @param {?} extras\n     * @return {?}\n     */\n    function (rawUrl, source, extras) {\n        var /** @type {?} */ lastNavigation = this.navigations.value;\n        // If the user triggers a navigation imperatively (e.g., by using navigateByUrl),\n        // and that navigation results in 'replaceState' that leads to the same URL,\n        // we should skip those.\n        if (lastNavigation && source !== 'imperative' && lastNavigation.source === 'imperative' &&\n            lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n            return Promise.resolve(true); // return value is not used\n        }\n        // Because of a bug in IE and Edge, the location class fires two events (popstate and\n        // hashchange) every single time. The second one should be ignored. Otherwise, the URL will\n        // flicker. Handles the case when a popstate was emitted first.\n        if (lastNavigation && source == 'hashchange' && lastNavigation.source === 'popstate' &&\n            lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n            return Promise.resolve(true); // return value is not used\n        }\n        // Because of a bug in IE and Edge, the location class fires two events (popstate and\n        // hashchange) every single time. The second one should be ignored. Otherwise, the URL will\n        // flicker. Handles the case when a hashchange was emitted first.\n        if (lastNavigation && source == 'popstate' && lastNavigation.source === 'hashchange' &&\n            lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n            return Promise.resolve(true); // return value is not used\n        }\n        var /** @type {?} */ resolve = null;\n        var /** @type {?} */ reject = null;\n        var /** @type {?} */ promise = new Promise(function (res, rej) {\n            resolve = res;\n            reject = rej;\n        });\n        var /** @type {?} */ id = ++this.navigationId;\n        this.navigations.next({ id: id, source: source, rawUrl: rawUrl, extras: extras, resolve: resolve, reject: reject, promise: promise });\n        // Make sure that the error is propagated even though `processNavigations` catch\n        // handler does not rethrow\n        return promise.catch(function (e) { return Promise.reject(e); });\n    };\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    Router.prototype.executeScheduledNavigation = /**\n     * @param {?} __0\n     * @return {?}\n     */\n    function (_a) {\n        var _this = this;\n        var id = _a.id, rawUrl = _a.rawUrl, extras = _a.extras, resolve = _a.resolve, reject = _a.reject;\n        var /** @type {?} */ url = this.urlHandlingStrategy.extract(rawUrl);\n        var /** @type {?} */ urlTransition = !this.navigated || url.toString() !== this.currentUrlTree.toString();\n        if ((this.onSameUrlNavigation === 'reload' ? true : urlTransition) &&\n            this.urlHandlingStrategy.shouldProcessUrl(rawUrl)) {\n            (/** @type {?} */ (this.events)).next(new NavigationStart(id, this.serializeUrl(url)));\n            Promise.resolve()\n                .then(function (_) {\n                return _this.runNavigate(url, rawUrl, !!extras.skipLocationChange, !!extras.replaceUrl, id, null);\n            })\n                .then(resolve, reject);\n            // we cannot process the current URL, but we could process the previous one =>\n            // we need to do some cleanup\n        }\n        else if (urlTransition && this.rawUrlTree &&\n            this.urlHandlingStrategy.shouldProcessUrl(this.rawUrlTree)) {\n            (/** @type {?} */ (this.events)).next(new NavigationStart(id, this.serializeUrl(url)));\n            Promise.resolve()\n                .then(function (_) {\n                return _this.runNavigate(url, rawUrl, false, false, id, createEmptyState(url, _this.rootComponentType).snapshot);\n            })\n                .then(resolve, reject);\n        }\n        else {\n            this.rawUrlTree = rawUrl;\n            resolve(null);\n        }\n    };\n    /**\n     * @param {?} url\n     * @param {?} rawUrl\n     * @param {?} skipLocationChange\n     * @param {?} replaceUrl\n     * @param {?} id\n     * @param {?} precreatedState\n     * @return {?}\n     */\n    Router.prototype.runNavigate = /**\n     * @param {?} url\n     * @param {?} rawUrl\n     * @param {?} skipLocationChange\n     * @param {?} replaceUrl\n     * @param {?} id\n     * @param {?} precreatedState\n     * @return {?}\n     */\n    function (url, rawUrl, skipLocationChange, replaceUrl, id, precreatedState) {\n        var _this = this;\n        if (id !== this.navigationId) {\n            (/** @type {?} */ (this.events))\n                .next(new NavigationCancel(id, this.serializeUrl(url), \"Navigation ID \" + id + \" is not equal to the current navigation id \" + this.navigationId));\n            return Promise.resolve(false);\n        }\n        return new Promise(function (resolvePromise, rejectPromise) {\n            // create an observable of the url and route state snapshot\n            // this operation do not result in any side effects\n            var /** @type {?} */ urlAndSnapshot$;\n            if (!precreatedState) {\n                var /** @type {?} */ moduleInjector = _this.ngModule.injector;\n                var /** @type {?} */ redirectsApplied$ = applyRedirects(moduleInjector, _this.configLoader, _this.urlSerializer, url, _this.config);\n                urlAndSnapshot$ = rxjs_operator_mergeMap.mergeMap.call(redirectsApplied$, function (appliedUrl) {\n                    return rxjs_operator_map.map.call(recognize(_this.rootComponentType, _this.config, appliedUrl, _this.serializeUrl(appliedUrl), _this.paramsInheritanceStrategy), function (snapshot) {\n                        (/** @type {?} */ (_this.events))\n                            .next(new RoutesRecognized(id, _this.serializeUrl(url), _this.serializeUrl(appliedUrl), snapshot));\n                        return { appliedUrl: appliedUrl, snapshot: snapshot };\n                    });\n                });\n            }\n            else {\n                urlAndSnapshot$ = rxjs_observable_of.of({ appliedUrl: url, snapshot: precreatedState });\n            }\n            var /** @type {?} */ beforePreactivationDone$ = rxjs_operator_mergeMap.mergeMap.call(urlAndSnapshot$, function (p) {\n                return rxjs_operator_map.map.call(_this.hooks.beforePreactivation(p.snapshot), function () { return p; });\n            });\n            // run preactivation: guards and data resolvers\n            var /** @type {?} */ preActivation;\n            var /** @type {?} */ preactivationSetup$ = rxjs_operator_map.map.call(beforePreactivationDone$, function (_a) {\n                var appliedUrl = _a.appliedUrl, snapshot = _a.snapshot;\n                var /** @type {?} */ moduleInjector = _this.ngModule.injector;\n                preActivation = new PreActivation(snapshot, _this.routerState.snapshot, moduleInjector, function (evt) { return _this.triggerEvent(evt); });\n                preActivation.initialize(_this.rootContexts);\n                return { appliedUrl: appliedUrl, snapshot: snapshot };\n            });\n            var /** @type {?} */ preactivationCheckGuards$ = rxjs_operator_mergeMap.mergeMap.call(preactivationSetup$, function (_a) {\n                var appliedUrl = _a.appliedUrl, snapshot = _a.snapshot;\n                if (_this.navigationId !== id)\n                    return rxjs_observable_of.of(false);\n                _this.triggerEvent(new GuardsCheckStart(id, _this.serializeUrl(url), appliedUrl, snapshot));\n                return rxjs_operator_map.map.call(preActivation.checkGuards(), function (shouldActivate) {\n                    _this.triggerEvent(new GuardsCheckEnd(id, _this.serializeUrl(url), appliedUrl, snapshot, shouldActivate));\n                    return { appliedUrl: appliedUrl, snapshot: snapshot, shouldActivate: shouldActivate };\n                });\n            });\n            var /** @type {?} */ preactivationResolveData$ = rxjs_operator_mergeMap.mergeMap.call(preactivationCheckGuards$, function (p) {\n                if (_this.navigationId !== id)\n                    return rxjs_observable_of.of(false);\n                if (p.shouldActivate && preActivation.isActivating()) {\n                    _this.triggerEvent(new ResolveStart(id, _this.serializeUrl(url), p.appliedUrl, p.snapshot));\n                    return rxjs_operator_map.map.call(preActivation.resolveData(_this.paramsInheritanceStrategy), function () {\n                        _this.triggerEvent(new ResolveEnd(id, _this.serializeUrl(url), p.appliedUrl, p.snapshot));\n                        return p;\n                    });\n                }\n                else {\n                    return rxjs_observable_of.of(p);\n                }\n            });\n            var /** @type {?} */ preactivationDone$ = rxjs_operator_mergeMap.mergeMap.call(preactivationResolveData$, function (p) {\n                return rxjs_operator_map.map.call(_this.hooks.afterPreactivation(p.snapshot), function () { return p; });\n            });\n            // create router state\n            // this operation has side effects => route state is being affected\n            var /** @type {?} */ routerState$ = rxjs_operator_map.map.call(preactivationDone$, function (_a) {\n                var appliedUrl = _a.appliedUrl, snapshot = _a.snapshot, shouldActivate = _a.shouldActivate;\n                if (shouldActivate) {\n                    var /** @type {?} */ state = createRouterState(_this.routeReuseStrategy, snapshot, _this.routerState);\n                    return { appliedUrl: appliedUrl, state: state, shouldActivate: shouldActivate };\n                }\n                else {\n                    return { appliedUrl: appliedUrl, state: null, shouldActivate: shouldActivate };\n                }\n            });\n            _this.activateRoutes(routerState$, _this.routerState, _this.currentUrlTree, id, url, rawUrl, skipLocationChange, replaceUrl, resolvePromise, rejectPromise);\n        });\n    };\n    /**\n     * Performs the logic of activating routes. This is a synchronous process by default. While this\n     * is a private method, it could be overridden to make activation asynchronous.\n     * @param {?} state\n     * @param {?} storedState\n     * @param {?} storedUrl\n     * @param {?} id\n     * @param {?} url\n     * @param {?} rawUrl\n     * @param {?} skipLocationChange\n     * @param {?} replaceUrl\n     * @param {?} resolvePromise\n     * @param {?} rejectPromise\n     * @return {?}\n     */\n    Router.prototype.activateRoutes = /**\n     * Performs the logic of activating routes. This is a synchronous process by default. While this\n     * is a private method, it could be overridden to make activation asynchronous.\n     * @param {?} state\n     * @param {?} storedState\n     * @param {?} storedUrl\n     * @param {?} id\n     * @param {?} url\n     * @param {?} rawUrl\n     * @param {?} skipLocationChange\n     * @param {?} replaceUrl\n     * @param {?} resolvePromise\n     * @param {?} rejectPromise\n     * @return {?}\n     */\n    function (state, storedState, storedUrl, id, url, rawUrl, skipLocationChange, replaceUrl, resolvePromise, rejectPromise) {\n        var _this = this;\n        // applied the new router state\n        // this operation has side effects\n        var /** @type {?} */ navigationIsSuccessful;\n        state\n            .forEach(function (_a) {\n            var appliedUrl = _a.appliedUrl, state = _a.state, shouldActivate = _a.shouldActivate;\n            if (!shouldActivate || id !== _this.navigationId) {\n                navigationIsSuccessful = false;\n                return;\n            }\n            _this.currentUrlTree = appliedUrl;\n            _this.rawUrlTree = _this.urlHandlingStrategy.merge(_this.currentUrlTree, rawUrl);\n            (/** @type {?} */ (_this)).routerState = state;\n            if (!skipLocationChange) {\n                var /** @type {?} */ path = _this.urlSerializer.serialize(_this.rawUrlTree);\n                if (_this.location.isCurrentPathEqualTo(path) || replaceUrl) {\n                    _this.location.replaceState(path);\n                }\n                else {\n                    _this.location.go(path);\n                }\n            }\n            new ActivateRoutes(_this.routeReuseStrategy, state, storedState, function (evt) { return _this.triggerEvent(evt); })\n                .activate(_this.rootContexts);\n            navigationIsSuccessful = true;\n        })\n            .then(function () {\n            if (navigationIsSuccessful) {\n                _this.navigated = true;\n                (/** @type {?} */ (_this.events))\n                    .next(new NavigationEnd(id, _this.serializeUrl(url), _this.serializeUrl(_this.currentUrlTree)));\n                resolvePromise(true);\n            }\n            else {\n                _this.resetUrlToCurrentUrlTree();\n                (/** @type {?} */ (_this.events))\n                    .next(new NavigationCancel(id, _this.serializeUrl(url), ''));\n                resolvePromise(false);\n            }\n        }, function (e) {\n            if (isNavigationCancelingError(e)) {\n                _this.navigated = true;\n                _this.resetStateAndUrl(storedState, storedUrl, rawUrl);\n                (/** @type {?} */ (_this.events))\n                    .next(new NavigationCancel(id, _this.serializeUrl(url), e.message));\n                resolvePromise(false);\n            }\n            else {\n                _this.resetStateAndUrl(storedState, storedUrl, rawUrl);\n                (/** @type {?} */ (_this.events))\n                    .next(new NavigationError(id, _this.serializeUrl(url), e));\n                try {\n                    resolvePromise(_this.errorHandler(e));\n                }\n                catch (/** @type {?} */ ee) {\n                    rejectPromise(ee);\n                }\n            }\n        });\n    };\n    /**\n     * @param {?} storedState\n     * @param {?} storedUrl\n     * @param {?} rawUrl\n     * @return {?}\n     */\n    Router.prototype.resetStateAndUrl = /**\n     * @param {?} storedState\n     * @param {?} storedUrl\n     * @param {?} rawUrl\n     * @return {?}\n     */\n    function (storedState, storedUrl, rawUrl) {\n        (/** @type {?} */ (this)).routerState = storedState;\n        this.currentUrlTree = storedUrl;\n        this.rawUrlTree = this.urlHandlingStrategy.merge(this.currentUrlTree, rawUrl);\n        this.resetUrlToCurrentUrlTree();\n    };\n    /**\n     * @return {?}\n     */\n    Router.prototype.resetUrlToCurrentUrlTree = /**\n     * @return {?}\n     */\n    function () {\n        this.location.replaceState(this.urlSerializer.serialize(this.rawUrlTree));\n    };\n    return Router;\n}());\nvar ActivateRoutes = /** @class */ (function () {\n    function ActivateRoutes(routeReuseStrategy, futureState, currState, forwardEvent) {\n        this.routeReuseStrategy = routeReuseStrategy;\n        this.futureState = futureState;\n        this.currState = currState;\n        this.forwardEvent = forwardEvent;\n    }\n    /**\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.activate = /**\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    function (parentContexts) {\n        var /** @type {?} */ futureRoot = this.futureState._root;\n        var /** @type {?} */ currRoot = this.currState ? this.currState._root : null;\n        this.deactivateChildRoutes(futureRoot, currRoot, parentContexts);\n        advanceActivatedRoute(this.futureState.root);\n        this.activateChildRoutes(futureRoot, currRoot, parentContexts);\n    };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} contexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.deactivateChildRoutes = /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} contexts\n     * @return {?}\n     */\n    function (futureNode, currNode, contexts) {\n        var _this = this;\n        var /** @type {?} */ children = nodeChildrenAsMap(currNode);\n        // Recurse on the routes active in the future state to de-activate deeper children\n        futureNode.children.forEach(function (futureChild) {\n            var /** @type {?} */ childOutletName = futureChild.value.outlet;\n            _this.deactivateRoutes(futureChild, children[childOutletName], contexts);\n            delete children[childOutletName];\n        });\n        // De-activate the routes that will not be re-used\n        forEach(children, function (v, childName) {\n            _this.deactivateRouteAndItsChildren(v, contexts);\n        });\n    };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} parentContext\n     * @return {?}\n     */\n    ActivateRoutes.prototype.deactivateRoutes = /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} parentContext\n     * @return {?}\n     */\n    function (futureNode, currNode, parentContext) {\n        var /** @type {?} */ future = futureNode.value;\n        var /** @type {?} */ curr = currNode ? currNode.value : null;\n        if (future === curr) {\n            // Reusing the node, check to see if the children need to be de-activated\n            if (future.component) {\n                // If we have a normal route, we need to go through an outlet.\n                var /** @type {?} */ context = parentContext.getContext(future.outlet);\n                if (context) {\n                    this.deactivateChildRoutes(futureNode, currNode, context.children);\n                }\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.deactivateChildRoutes(futureNode, currNode, parentContext);\n            }\n        }\n        else {\n            if (curr) {\n                // Deactivate the current route which will not be re-used\n                this.deactivateRouteAndItsChildren(currNode, parentContext);\n            }\n        }\n    };\n    /**\n     * @param {?} route\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.deactivateRouteAndItsChildren = /**\n     * @param {?} route\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    function (route, parentContexts) {\n        if (this.routeReuseStrategy.shouldDetach(route.value.snapshot)) {\n            this.detachAndStoreRouteSubtree(route, parentContexts);\n        }\n        else {\n            this.deactivateRouteAndOutlet(route, parentContexts);\n        }\n    };\n    /**\n     * @param {?} route\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.detachAndStoreRouteSubtree = /**\n     * @param {?} route\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    function (route, parentContexts) {\n        var /** @type {?} */ context = parentContexts.getContext(route.value.outlet);\n        if (context && context.outlet) {\n            var /** @type {?} */ componentRef = context.outlet.detach();\n            var /** @type {?} */ contexts = context.children.onOutletDeactivated();\n            this.routeReuseStrategy.store(route.value.snapshot, { componentRef: componentRef, route: route, contexts: contexts });\n        }\n    };\n    /**\n     * @param {?} route\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.deactivateRouteAndOutlet = /**\n     * @param {?} route\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    function (route, parentContexts) {\n        var _this = this;\n        var /** @type {?} */ context = parentContexts.getContext(route.value.outlet);\n        if (context) {\n            var /** @type {?} */ children = nodeChildrenAsMap(route);\n            var /** @type {?} */ contexts_1 = route.value.component ? context.children : parentContexts;\n            forEach(children, function (v, k) { return _this.deactivateRouteAndItsChildren(v, contexts_1); });\n            if (context.outlet) {\n                // Destroy the component\n                context.outlet.deactivate();\n                // Destroy the contexts for all the outlets that were in the component\n                context.children.onOutletDeactivated();\n            }\n        }\n    };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} contexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.activateChildRoutes = /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} contexts\n     * @return {?}\n     */\n    function (futureNode, currNode, contexts) {\n        var _this = this;\n        var /** @type {?} */ children = nodeChildrenAsMap(currNode);\n        futureNode.children.forEach(function (c) {\n            _this.activateRoutes(c, children[c.value.outlet], contexts);\n            _this.forwardEvent(new ActivationEnd(c.value.snapshot));\n        });\n        if (futureNode.children.length) {\n            this.forwardEvent(new ChildActivationEnd(futureNode.value.snapshot));\n        }\n    };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.activateRoutes = /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    function (futureNode, currNode, parentContexts) {\n        var /** @type {?} */ future = futureNode.value;\n        var /** @type {?} */ curr = currNode ? currNode.value : null;\n        advanceActivatedRoute(future);\n        // reusing the node\n        if (future === curr) {\n            if (future.component) {\n                // If we have a normal route, we need to go through an outlet.\n                var /** @type {?} */ context = parentContexts.getOrCreateContext(future.outlet);\n                this.activateChildRoutes(futureNode, currNode, context.children);\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.activateChildRoutes(futureNode, currNode, parentContexts);\n            }\n        }\n        else {\n            if (future.component) {\n                // if we have a normal route, we need to place the component into the outlet and recurse.\n                var /** @type {?} */ context = parentContexts.getOrCreateContext(future.outlet);\n                if (this.routeReuseStrategy.shouldAttach(future.snapshot)) {\n                    var /** @type {?} */ stored = (/** @type {?} */ (this.routeReuseStrategy.retrieve(future.snapshot)));\n                    this.routeReuseStrategy.store(future.snapshot, null);\n                    context.children.onOutletReAttached(stored.contexts);\n                    context.attachRef = stored.componentRef;\n                    context.route = stored.route.value;\n                    if (context.outlet) {\n                        // Attach right away when the outlet has already been instantiated\n                        // Otherwise attach from `RouterOutlet.ngOnInit` when it is instantiated\n                        context.outlet.attach(stored.componentRef, stored.route.value);\n                    }\n                    advanceActivatedRouteNodeAndItsChildren(stored.route);\n                }\n                else {\n                    var /** @type {?} */ config = parentLoadedConfig(future.snapshot);\n                    var /** @type {?} */ cmpFactoryResolver = config ? config.module.componentFactoryResolver : null;\n                    context.route = future;\n                    context.resolver = cmpFactoryResolver;\n                    if (context.outlet) {\n                        // Activate the outlet when it has already been instantiated\n                        // Otherwise it will get activated from its `ngOnInit` when instantiated\n                        context.outlet.activateWith(future, cmpFactoryResolver);\n                    }\n                    this.activateChildRoutes(futureNode, null, context.children);\n                }\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.activateChildRoutes(futureNode, null, parentContexts);\n            }\n        }\n    };\n    return ActivateRoutes;\n}());\n/**\n * @param {?} node\n * @return {?}\n */\nfunction advanceActivatedRouteNodeAndItsChildren(node) {\n    advanceActivatedRoute(node.value);\n    node.children.forEach(advanceActivatedRouteNodeAndItsChildren);\n}\n/**\n * @param {?} snapshot\n * @return {?}\n */\nfunction parentLoadedConfig(snapshot) {\n    for (var /** @type {?} */ s = snapshot.parent; s; s = s.parent) {\n        var /** @type {?} */ route = s.routeConfig;\n        if (route && route._loadedConfig)\n            return route._loadedConfig;\n        if (route && route.component)\n            return null;\n    }\n    return null;\n}\n/**\n * @param {?} commands\n * @return {?}\n */\nfunction validateCommands(commands) {\n    for (var /** @type {?} */ i = 0; i < commands.length; i++) {\n        var /** @type {?} */ cmd = commands[i];\n        if (cmd == null) {\n            throw new Error(\"The requested path contains \" + cmd + \" segment at index \" + i);\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Lets you link to specific parts of your app.\n *\n * \\@howToUse\n *\n * Consider the following route configuration:\n * `[{ path: 'user/:name', component: UserCmp }]`\n *\n * When linking to this `user/:name` route, you can write:\n * `<a routerLink='/user/bob'>link to user component</a>`\n *\n * \\@description\n *\n * The RouterLink directives let you link to specific parts of your app.\n *\n * When the link is static, you can use the directive as follows:\n * `<a routerLink=\"/user/bob\">link to user component</a>`\n *\n * If you use dynamic values to generate the link, you can pass an array of path\n * segments, followed by the params for each segment.\n *\n * For instance `['/team', teamId, 'user', userName, {details: true}]`\n * means that we want to generate a link to `/team/11/user/bob;details=true`.\n *\n * Multiple static segments can be merged into one\n * (e.g., `['/team/11/user', userName, {details: true}]`).\n *\n * The first segment name can be prepended with `/`, `./`, or `../`:\n * * If the first segment begins with `/`, the router will look up the route from the root of the\n *   app.\n * * If the first segment begins with `./`, or doesn't begin with a slash, the router will\n *   instead look in the children of the current activated route.\n * * And if the first segment begins with `../`, the router will go up one level.\n *\n * You can set query params and fragment as follows:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" fragment=\"education\">\n *   link to user component\n * </a>\n * ```\n * RouterLink will use these to generate this link: `/user/bob#education?debug=true`.\n *\n * (Deprecated in v4.0.0 use `queryParamsHandling` instead) You can also tell the\n * directive to preserve the current query params and fragment:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" preserveQueryParams preserveFragment>\n *   link to user component\n * </a>\n * ```\n *\n * You can tell the directive to how to handle queryParams, available options are:\n *  - `'merge'`: merge the queryParams into the current queryParams\n *  - `'preserve'`: preserve the current queryParams\n *  - default/`''`: use the queryParams only\n *\n * Same options for {\\@link NavigationExtras#queryParamsHandling\n * NavigationExtras#queryParamsHandling}.\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" queryParamsHandling=\"merge\">\n *   link to user component\n * </a>\n * ```\n *\n * The router link directive always treats the provided input as a delta to the current url.\n *\n * For instance, if the current url is `/user/(box//aux:team)`.\n *\n * Then the following link `<a [routerLink]=\"['/user/jim']\">Jim</a>` will generate the link\n * `/user/(jim//aux:team)`.\n *\n * See {\\@link Router#createUrlTree createUrlTree} for more information.\n *\n * \\@ngModule RouterModule\n *\n * \\@stable\n */\nvar RouterLink = /** @class */ (function () {\n    function RouterLink(router, route, tabIndex, renderer, el) {\n        this.router = router;\n        this.route = route;\n        this.commands = [];\n        if (tabIndex == null) {\n            renderer.setAttribute(el.nativeElement, 'tabindex', '0');\n        }\n    }\n    Object.defineProperty(RouterLink.prototype, \"routerLink\", {\n        set: /**\n         * @param {?} commands\n         * @return {?}\n         */\n        function (commands) {\n            if (commands != null) {\n                this.commands = Array.isArray(commands) ? commands : [commands];\n            }\n            else {\n                this.commands = [];\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterLink.prototype, \"preserveQueryParams\", {\n        set: /**\n         * @deprecated 4.0.0 use `queryParamsHandling` instead.\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            if (_angular_core.isDevMode() && /** @type {?} */ (console) && /** @type {?} */ (console.warn)) {\n                console.warn('preserveQueryParams is deprecated!, use queryParamsHandling instead.');\n            }\n            this.preserve = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    RouterLink.prototype.onClick = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ extras = {\n            skipLocationChange: attrBoolValue(this.skipLocationChange),\n            replaceUrl: attrBoolValue(this.replaceUrl),\n        };\n        this.router.navigateByUrl(this.urlTree, extras);\n        return true;\n    };\n    Object.defineProperty(RouterLink.prototype, \"urlTree\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.router.createUrlTree(this.commands, {\n                relativeTo: this.route,\n                queryParams: this.queryParams,\n                fragment: this.fragment,\n                preserveQueryParams: attrBoolValue(this.preserve),\n                queryParamsHandling: this.queryParamsHandling,\n                preserveFragment: attrBoolValue(this.preserveFragment),\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RouterLink.decorators = [\n        { type: _angular_core.Directive, args: [{ selector: ':not(a)[routerLink]' },] },\n    ];\n    /** @nocollapse */\n    RouterLink.ctorParameters = function () { return [\n        { type: Router, },\n        { type: ActivatedRoute, },\n        { type: undefined, decorators: [{ type: _angular_core.Attribute, args: ['tabindex',] },] },\n        { type: _angular_core.Renderer2, },\n        { type: _angular_core.ElementRef, },\n    ]; };\n    RouterLink.propDecorators = {\n        \"queryParams\": [{ type: _angular_core.Input },],\n        \"fragment\": [{ type: _angular_core.Input },],\n        \"queryParamsHandling\": [{ type: _angular_core.Input },],\n        \"preserveFragment\": [{ type: _angular_core.Input },],\n        \"skipLocationChange\": [{ type: _angular_core.Input },],\n        \"replaceUrl\": [{ type: _angular_core.Input },],\n        \"routerLink\": [{ type: _angular_core.Input },],\n        \"preserveQueryParams\": [{ type: _angular_core.Input },],\n        \"onClick\": [{ type: _angular_core.HostListener, args: ['click',] },],\n    };\n    return RouterLink;\n}());\n/**\n * \\@whatItDoes Lets you link to specific parts of your app.\n *\n * See {\\@link RouterLink} for more information.\n *\n * \\@ngModule RouterModule\n *\n * \\@stable\n */\nvar RouterLinkWithHref = /** @class */ (function () {\n    function RouterLinkWithHref(router, route, locationStrategy) {\n        var _this = this;\n        this.router = router;\n        this.route = route;\n        this.locationStrategy = locationStrategy;\n        this.commands = [];\n        this.subscription = router.events.subscribe(function (s) {\n            if (s instanceof NavigationEnd) {\n                _this.updateTargetUrlAndHref();\n            }\n        });\n    }\n    Object.defineProperty(RouterLinkWithHref.prototype, \"routerLink\", {\n        set: /**\n         * @param {?} commands\n         * @return {?}\n         */\n        function (commands) {\n            if (commands != null) {\n                this.commands = Array.isArray(commands) ? commands : [commands];\n            }\n            else {\n                this.commands = [];\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterLinkWithHref.prototype, \"preserveQueryParams\", {\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            if (_angular_core.isDevMode() && /** @type {?} */ (console) && /** @type {?} */ (console.warn)) {\n                console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n            }\n            this.preserve = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    RouterLinkWithHref.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) { this.updateTargetUrlAndHref(); };\n    /**\n     * @return {?}\n     */\n    RouterLinkWithHref.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () { this.subscription.unsubscribe(); };\n    /**\n     * @param {?} button\n     * @param {?} ctrlKey\n     * @param {?} metaKey\n     * @param {?} shiftKey\n     * @return {?}\n     */\n    RouterLinkWithHref.prototype.onClick = /**\n     * @param {?} button\n     * @param {?} ctrlKey\n     * @param {?} metaKey\n     * @param {?} shiftKey\n     * @return {?}\n     */\n    function (button, ctrlKey, metaKey, shiftKey) {\n        if (button !== 0 || ctrlKey || metaKey || shiftKey) {\n            return true;\n        }\n        if (typeof this.target === 'string' && this.target != '_self') {\n            return true;\n        }\n        var /** @type {?} */ extras = {\n            skipLocationChange: attrBoolValue(this.skipLocationChange),\n            replaceUrl: attrBoolValue(this.replaceUrl),\n        };\n        this.router.navigateByUrl(this.urlTree, extras);\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    RouterLinkWithHref.prototype.updateTargetUrlAndHref = /**\n     * @return {?}\n     */\n    function () {\n        this.href = this.locationStrategy.prepareExternalUrl(this.router.serializeUrl(this.urlTree));\n    };\n    Object.defineProperty(RouterLinkWithHref.prototype, \"urlTree\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.router.createUrlTree(this.commands, {\n                relativeTo: this.route,\n                queryParams: this.queryParams,\n                fragment: this.fragment,\n                preserveQueryParams: attrBoolValue(this.preserve),\n                queryParamsHandling: this.queryParamsHandling,\n                preserveFragment: attrBoolValue(this.preserveFragment),\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RouterLinkWithHref.decorators = [\n        { type: _angular_core.Directive, args: [{ selector: 'a[routerLink]' },] },\n    ];\n    /** @nocollapse */\n    RouterLinkWithHref.ctorParameters = function () { return [\n        { type: Router, },\n        { type: ActivatedRoute, },\n        { type: _angular_common.LocationStrategy, },\n    ]; };\n    RouterLinkWithHref.propDecorators = {\n        \"target\": [{ type: _angular_core.HostBinding, args: ['attr.target',] }, { type: _angular_core.Input },],\n        \"queryParams\": [{ type: _angular_core.Input },],\n        \"fragment\": [{ type: _angular_core.Input },],\n        \"queryParamsHandling\": [{ type: _angular_core.Input },],\n        \"preserveFragment\": [{ type: _angular_core.Input },],\n        \"skipLocationChange\": [{ type: _angular_core.Input },],\n        \"replaceUrl\": [{ type: _angular_core.Input },],\n        \"href\": [{ type: _angular_core.HostBinding },],\n        \"routerLink\": [{ type: _angular_core.Input },],\n        \"preserveQueryParams\": [{ type: _angular_core.Input },],\n        \"onClick\": [{ type: _angular_core.HostListener, args: ['click', ['$event.button', '$event.ctrlKey', '$event.metaKey', '$event.shiftKey'],] },],\n    };\n    return RouterLinkWithHref;\n}());\n/**\n * @param {?} s\n * @return {?}\n */\nfunction attrBoolValue(s) {\n    return s === '' || !!s;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Lets you add a CSS class to an element when the link's route becomes active.\n *\n * \\@howToUse\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\">Bob</a>\n * ```\n *\n * \\@description\n *\n * The RouterLinkActive directive lets you add a CSS class to an element when the link's route\n * becomes active.\n *\n * Consider the following example:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\">Bob</a>\n * ```\n *\n * When the url is either '/user' or '/user/bob', the active-link class will\n * be added to the `a` tag. If the url changes, the class will be removed.\n *\n * You can set more than one class, as follows:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"class1 class2\">Bob</a>\n * <a routerLink=\"/user/bob\" [routerLinkActive]=\"['class1', 'class2']\">Bob</a>\n * ```\n *\n * You can configure RouterLinkActive by passing `exact: true`. This will add the classes\n * only when the url matches the link exactly.\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact:\n * true}\">Bob</a>\n * ```\n *\n * You can assign the RouterLinkActive instance to a template variable and directly check\n * the `isActive` status.\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive #rla=\"routerLinkActive\">\n *   Bob {{ rla.isActive ? '(already open)' : ''}}\n * </a>\n * ```\n *\n * Finally, you can apply the RouterLinkActive directive to an ancestor of a RouterLink.\n *\n * ```\n * <div routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact: true}\">\n *   <a routerLink=\"/user/jim\">Jim</a>\n *   <a routerLink=\"/user/bob\">Bob</a>\n * </div>\n * ```\n *\n * This will set the active-link class on the div tag if the url is either '/user/jim' or\n * '/user/bob'.\n *\n * \\@ngModule RouterModule\n *\n * \\@stable\n */\nvar RouterLinkActive = /** @class */ (function () {\n    function RouterLinkActive(router, element, renderer, cdr) {\n        var _this = this;\n        this.router = router;\n        this.element = element;\n        this.renderer = renderer;\n        this.cdr = cdr;\n        this.classes = [];\n        this.isActive = false;\n        this.routerLinkActiveOptions = { exact: false };\n        this.subscription = router.events.subscribe(function (s) {\n            if (s instanceof NavigationEnd) {\n                _this.update();\n            }\n        });\n    }\n    /**\n     * @return {?}\n     */\n    RouterLinkActive.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this.links.changes.subscribe(function (_) { return _this.update(); });\n        this.linksWithHrefs.changes.subscribe(function (_) { return _this.update(); });\n        this.update();\n    };\n    Object.defineProperty(RouterLinkActive.prototype, \"routerLinkActive\", {\n        set: /**\n         * @param {?} data\n         * @return {?}\n         */\n        function (data) {\n            var /** @type {?} */ classes = Array.isArray(data) ? data : data.split(' ');\n            this.classes = classes.filter(function (c) { return !!c; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    RouterLinkActive.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) { this.update(); };\n    /**\n     * @return {?}\n     */\n    RouterLinkActive.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () { this.subscription.unsubscribe(); };\n    /**\n     * @return {?}\n     */\n    RouterLinkActive.prototype.update = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!this.links || !this.linksWithHrefs || !this.router.navigated)\n            return;\n        Promise.resolve().then(function () {\n            var /** @type {?} */ hasActiveLinks = _this.hasActiveLinks();\n            if (_this.isActive !== hasActiveLinks) {\n                (/** @type {?} */ (_this)).isActive = hasActiveLinks;\n                _this.classes.forEach(function (c) {\n                    if (hasActiveLinks) {\n                        _this.renderer.addClass(_this.element.nativeElement, c);\n                    }\n                    else {\n                        _this.renderer.removeClass(_this.element.nativeElement, c);\n                    }\n                });\n            }\n        });\n    };\n    /**\n     * @param {?} router\n     * @return {?}\n     */\n    RouterLinkActive.prototype.isLinkActive = /**\n     * @param {?} router\n     * @return {?}\n     */\n    function (router) {\n        var _this = this;\n        return function (link) {\n            return router.isActive(link.urlTree, _this.routerLinkActiveOptions.exact);\n        };\n    };\n    /**\n     * @return {?}\n     */\n    RouterLinkActive.prototype.hasActiveLinks = /**\n     * @return {?}\n     */\n    function () {\n        return this.links.some(this.isLinkActive(this.router)) ||\n            this.linksWithHrefs.some(this.isLinkActive(this.router));\n    };\n    RouterLinkActive.decorators = [\n        { type: _angular_core.Directive, args: [{\n                    selector: '[routerLinkActive]',\n                    exportAs: 'routerLinkActive',\n                },] },\n    ];\n    /** @nocollapse */\n    RouterLinkActive.ctorParameters = function () { return [\n        { type: Router, },\n        { type: _angular_core.ElementRef, },\n        { type: _angular_core.Renderer2, },\n        { type: _angular_core.ChangeDetectorRef, },\n    ]; };\n    RouterLinkActive.propDecorators = {\n        \"links\": [{ type: _angular_core.ContentChildren, args: [RouterLink, { descendants: true },] },],\n        \"linksWithHrefs\": [{ type: _angular_core.ContentChildren, args: [RouterLinkWithHref, { descendants: true },] },],\n        \"routerLinkActiveOptions\": [{ type: _angular_core.Input },],\n        \"routerLinkActive\": [{ type: _angular_core.Input },],\n    };\n    return RouterLinkActive;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Store contextual information about a {\\@link RouterOutlet}\n *\n * \\@stable\n */\nvar OutletContext = /** @class */ (function () {\n    function OutletContext() {\n        this.outlet = null;\n        this.route = null;\n        this.resolver = null;\n        this.children = new ChildrenOutletContexts();\n        this.attachRef = null;\n    }\n    return OutletContext;\n}());\n/**\n * Store contextual information about the children (= nested) {\\@link RouterOutlet}\n *\n * \\@stable\n */\nvar ChildrenOutletContexts = /** @class */ (function () {\n    function ChildrenOutletContexts() {\n        this.contexts = new Map();\n    }\n    /** Called when a `RouterOutlet` directive is instantiated */\n    /**\n     * Called when a `RouterOutlet` directive is instantiated\n     * @param {?} childName\n     * @param {?} outlet\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.onChildOutletCreated = /**\n     * Called when a `RouterOutlet` directive is instantiated\n     * @param {?} childName\n     * @param {?} outlet\n     * @return {?}\n     */\n    function (childName, outlet) {\n        var /** @type {?} */ context = this.getOrCreateContext(childName);\n        context.outlet = outlet;\n        this.contexts.set(childName, context);\n    };\n    /**\n     * Called when a `RouterOutlet` directive is destroyed.\n     * We need to keep the context as the outlet could be destroyed inside a NgIf and might be\n     * re-created later.\n     */\n    /**\n     * Called when a `RouterOutlet` directive is destroyed.\n     * We need to keep the context as the outlet could be destroyed inside a NgIf and might be\n     * re-created later.\n     * @param {?} childName\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.onChildOutletDestroyed = /**\n     * Called when a `RouterOutlet` directive is destroyed.\n     * We need to keep the context as the outlet could be destroyed inside a NgIf and might be\n     * re-created later.\n     * @param {?} childName\n     * @return {?}\n     */\n    function (childName) {\n        var /** @type {?} */ context = this.getContext(childName);\n        if (context) {\n            context.outlet = null;\n        }\n    };\n    /**\n     * Called when the corresponding route is deactivated during navigation.\n     * Because the component get destroyed, all children outlet are destroyed.\n     */\n    /**\n     * Called when the corresponding route is deactivated during navigation.\n     * Because the component get destroyed, all children outlet are destroyed.\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.onOutletDeactivated = /**\n     * Called when the corresponding route is deactivated during navigation.\n     * Because the component get destroyed, all children outlet are destroyed.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ contexts = this.contexts;\n        this.contexts = new Map();\n        return contexts;\n    };\n    /**\n     * @param {?} contexts\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.onOutletReAttached = /**\n     * @param {?} contexts\n     * @return {?}\n     */\n    function (contexts) { this.contexts = contexts; };\n    /**\n     * @param {?} childName\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.getOrCreateContext = /**\n     * @param {?} childName\n     * @return {?}\n     */\n    function (childName) {\n        var /** @type {?} */ context = this.getContext(childName);\n        if (!context) {\n            context = new OutletContext();\n            this.contexts.set(childName, context);\n        }\n        return context;\n    };\n    /**\n     * @param {?} childName\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.getContext = /**\n     * @param {?} childName\n     * @return {?}\n     */\n    function (childName) { return this.contexts.get(childName) || null; };\n    return ChildrenOutletContexts;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Acts as a placeholder that Angular dynamically fills based on the current router\n * state.\n *\n * \\@howToUse\n *\n * ```\n * <router-outlet></router-outlet>\n * <router-outlet name='left'></router-outlet>\n * <router-outlet name='right'></router-outlet>\n * ```\n *\n * A router outlet will emit an activate event any time a new component is being instantiated,\n * and a deactivate event when it is being destroyed.\n *\n * ```\n * <router-outlet\n *   (activate)='onActivate($event)'\n *   (deactivate)='onDeactivate($event)'></router-outlet>\n * ```\n * \\@ngModule RouterModule\n *\n * \\@stable\n */\nvar RouterOutlet = /** @class */ (function () {\n    function RouterOutlet(parentContexts, location, resolver, name, changeDetector) {\n        this.parentContexts = parentContexts;\n        this.location = location;\n        this.resolver = resolver;\n        this.changeDetector = changeDetector;\n        this.activated = null;\n        this._activatedRoute = null;\n        this.activateEvents = new _angular_core.EventEmitter();\n        this.deactivateEvents = new _angular_core.EventEmitter();\n        this.name = name || PRIMARY_OUTLET;\n        parentContexts.onChildOutletCreated(this.name, this);\n    }\n    /**\n     * @return {?}\n     */\n    RouterOutlet.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () { this.parentContexts.onChildOutletDestroyed(this.name); };\n    /**\n     * @return {?}\n     */\n    RouterOutlet.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        if (!this.activated) {\n            // If the outlet was not instantiated at the time the route got activated we need to populate\n            // the outlet when it is initialized (ie inside a NgIf)\n            var /** @type {?} */ context = this.parentContexts.getContext(this.name);\n            if (context && context.route) {\n                if (context.attachRef) {\n                    // `attachRef` is populated when there is an existing component to mount\n                    this.attach(context.attachRef, context.route);\n                }\n                else {\n                    // otherwise the component defined in the configuration is created\n                    this.activateWith(context.route, context.resolver || null);\n                }\n            }\n        }\n    };\n    Object.defineProperty(RouterOutlet.prototype, \"isActivated\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return !!this.activated; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"component\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            if (!this.activated)\n                throw new Error('Outlet is not activated');\n            return this.activated.instance;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"activatedRoute\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            if (!this.activated)\n                throw new Error('Outlet is not activated');\n            return /** @type {?} */ (this._activatedRoute);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"activatedRouteData\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            if (this._activatedRoute) {\n                return this._activatedRoute.snapshot.data;\n            }\n            return {};\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Called when the `RouteReuseStrategy` instructs to detach the subtree\n     */\n    /**\n     * Called when the `RouteReuseStrategy` instructs to detach the subtree\n     * @return {?}\n     */\n    RouterOutlet.prototype.detach = /**\n     * Called when the `RouteReuseStrategy` instructs to detach the subtree\n     * @return {?}\n     */\n    function () {\n        if (!this.activated)\n            throw new Error('Outlet is not activated');\n        this.location.detach();\n        var /** @type {?} */ cmp = this.activated;\n        this.activated = null;\n        this._activatedRoute = null;\n        return cmp;\n    };\n    /**\n     * Called when the `RouteReuseStrategy` instructs to re-attach a previously detached subtree\n     */\n    /**\n     * Called when the `RouteReuseStrategy` instructs to re-attach a previously detached subtree\n     * @param {?} ref\n     * @param {?} activatedRoute\n     * @return {?}\n     */\n    RouterOutlet.prototype.attach = /**\n     * Called when the `RouteReuseStrategy` instructs to re-attach a previously detached subtree\n     * @param {?} ref\n     * @param {?} activatedRoute\n     * @return {?}\n     */\n    function (ref, activatedRoute) {\n        this.activated = ref;\n        this._activatedRoute = activatedRoute;\n        this.location.insert(ref.hostView);\n    };\n    /**\n     * @return {?}\n     */\n    RouterOutlet.prototype.deactivate = /**\n     * @return {?}\n     */\n    function () {\n        if (this.activated) {\n            var /** @type {?} */ c = this.component;\n            this.activated.destroy();\n            this.activated = null;\n            this._activatedRoute = null;\n            this.deactivateEvents.emit(c);\n        }\n    };\n    /**\n     * @param {?} activatedRoute\n     * @param {?} resolver\n     * @return {?}\n     */\n    RouterOutlet.prototype.activateWith = /**\n     * @param {?} activatedRoute\n     * @param {?} resolver\n     * @return {?}\n     */\n    function (activatedRoute, resolver) {\n        if (this.isActivated) {\n            throw new Error('Cannot activate an already activated outlet');\n        }\n        this._activatedRoute = activatedRoute;\n        var /** @type {?} */ snapshot = activatedRoute._futureSnapshot;\n        var /** @type {?} */ component = /** @type {?} */ (/** @type {?} */ ((snapshot.routeConfig)).component);\n        resolver = resolver || this.resolver;\n        var /** @type {?} */ factory = resolver.resolveComponentFactory(component);\n        var /** @type {?} */ childContexts = this.parentContexts.getOrCreateContext(this.name).children;\n        var /** @type {?} */ injector = new OutletInjector(activatedRoute, childContexts, this.location.injector);\n        this.activated = this.location.createComponent(factory, this.location.length, injector);\n        // Calling `markForCheck` to make sure we will run the change detection when the\n        // `RouterOutlet` is inside a `ChangeDetectionStrategy.OnPush` component.\n        this.changeDetector.markForCheck();\n        this.activateEvents.emit(this.activated.instance);\n    };\n    RouterOutlet.decorators = [\n        { type: _angular_core.Directive, args: [{ selector: 'router-outlet', exportAs: 'outlet' },] },\n    ];\n    /** @nocollapse */\n    RouterOutlet.ctorParameters = function () { return [\n        { type: ChildrenOutletContexts, },\n        { type: _angular_core.ViewContainerRef, },\n        { type: _angular_core.ComponentFactoryResolver, },\n        { type: undefined, decorators: [{ type: _angular_core.Attribute, args: ['name',] },] },\n        { type: _angular_core.ChangeDetectorRef, },\n    ]; };\n    RouterOutlet.propDecorators = {\n        \"activateEvents\": [{ type: _angular_core.Output, args: ['activate',] },],\n        \"deactivateEvents\": [{ type: _angular_core.Output, args: ['deactivate',] },],\n    };\n    return RouterOutlet;\n}());\nvar OutletInjector = /** @class */ (function () {\n    function OutletInjector(route, childContexts, parent) {\n        this.route = route;\n        this.childContexts = childContexts;\n        this.parent = parent;\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    OutletInjector.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (token === ActivatedRoute) {\n            return this.route;\n        }\n        if (token === ChildrenOutletContexts) {\n            return this.childContexts;\n        }\n        return this.parent.get(token, notFoundValue);\n    };\n    return OutletInjector;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n*@license\n*Copyright Google Inc. All Rights Reserved.\n*\n*Use of this source code is governed by an MIT-style license that can be\n*found in the LICENSE file at https://angular.io/license\n*/\n/**\n * \\@whatItDoes Provides a preloading strategy.\n *\n * \\@experimental\n * @abstract\n */\nvar PreloadingStrategy = /** @class */ (function () {\n    function PreloadingStrategy() {\n    }\n    return PreloadingStrategy;\n}());\n/**\n * \\@whatItDoes Provides a preloading strategy that preloads all modules as quickly as possible.\n *\n * \\@howToUse\n *\n * ```\n * RouteModule.forRoot(ROUTES, {preloadingStrategy: PreloadAllModules})\n * ```\n *\n * \\@experimental\n */\nvar PreloadAllModules = /** @class */ (function () {\n    function PreloadAllModules() {\n    }\n    /**\n     * @param {?} route\n     * @param {?} fn\n     * @return {?}\n     */\n    PreloadAllModules.prototype.preload = /**\n     * @param {?} route\n     * @param {?} fn\n     * @return {?}\n     */\n    function (route, fn) {\n        return rxjs_operator_catch._catch.call(fn(), function () { return rxjs_observable_of.of(null); });\n    };\n    return PreloadAllModules;\n}());\n/**\n * \\@whatItDoes Provides a preloading strategy that does not preload any modules.\n *\n * \\@description\n *\n * This strategy is enabled by default.\n *\n * \\@experimental\n */\nvar NoPreloading = /** @class */ (function () {\n    function NoPreloading() {\n    }\n    /**\n     * @param {?} route\n     * @param {?} fn\n     * @return {?}\n     */\n    NoPreloading.prototype.preload = /**\n     * @param {?} route\n     * @param {?} fn\n     * @return {?}\n     */\n    function (route, fn) { return rxjs_observable_of.of(null); };\n    return NoPreloading;\n}());\n/**\n * The preloader optimistically loads all router configurations to\n * make navigations into lazily-loaded sections of the application faster.\n *\n * The preloader runs in the background. When the router bootstraps, the preloader\n * starts listening to all navigation events. After every such event, the preloader\n * will check if any configurations can be loaded lazily.\n *\n * If a route is protected by `canLoad` guards, the preloaded will not load it.\n *\n * \\@stable\n */\nvar RouterPreloader = /** @class */ (function () {\n    function RouterPreloader(router, moduleLoader, compiler, injector, preloadingStrategy) {\n        this.router = router;\n        this.injector = injector;\n        this.preloadingStrategy = preloadingStrategy;\n        var /** @type {?} */ onStartLoad = function (r) { return router.triggerEvent(new RouteConfigLoadStart(r)); };\n        var /** @type {?} */ onEndLoad = function (r) { return router.triggerEvent(new RouteConfigLoadEnd(r)); };\n        this.loader = new RouterConfigLoader(moduleLoader, compiler, onStartLoad, onEndLoad);\n    }\n    /**\n     * @return {?}\n     */\n    RouterPreloader.prototype.setUpPreloading = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ navigations$ = rxjs_operator_filter.filter.call(this.router.events, function (e) { return e instanceof NavigationEnd; });\n        this.subscription = rxjs_operator_concatMap.concatMap.call(navigations$, function () { return _this.preload(); }).subscribe(function () { });\n    };\n    /**\n     * @return {?}\n     */\n    RouterPreloader.prototype.preload = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ ngModule = this.injector.get(_angular_core.NgModuleRef);\n        return this.processRoutes(ngModule, this.router.config);\n    };\n    // TODO(jasonaden): This class relies on code external to the class to call setUpPreloading. If\n    // this hasn't been done, ngOnDestroy will fail as this.subscription will be undefined. This\n    // should be refactored.\n    /**\n     * @return {?}\n     */\n    RouterPreloader.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () { this.subscription.unsubscribe(); };\n    /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @return {?}\n     */\n    RouterPreloader.prototype.processRoutes = /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @return {?}\n     */\n    function (ngModule, routes) {\n        var /** @type {?} */ res = [];\n        for (var _i = 0, routes_1 = routes; _i < routes_1.length; _i++) {\n            var route = routes_1[_i];\n            // we already have the config loaded, just recurse\n            if (route.loadChildren && !route.canLoad && route._loadedConfig) {\n                var /** @type {?} */ childConfig = route._loadedConfig;\n                res.push(this.processRoutes(childConfig.module, childConfig.routes));\n                // no config loaded, fetch the config\n            }\n            else if (route.loadChildren && !route.canLoad) {\n                res.push(this.preloadConfig(ngModule, route));\n                // recurse into children\n            }\n            else if (route.children) {\n                res.push(this.processRoutes(ngModule, route.children));\n            }\n        }\n        return rxjs_operator_mergeAll.mergeAll.call(rxjs_observable_from.from(res));\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} route\n     * @return {?}\n     */\n    RouterPreloader.prototype.preloadConfig = /**\n     * @param {?} ngModule\n     * @param {?} route\n     * @return {?}\n     */\n    function (ngModule, route) {\n        var _this = this;\n        return this.preloadingStrategy.preload(route, function () {\n            var /** @type {?} */ loaded$ = _this.loader.load(ngModule.injector, route);\n            return rxjs_operator_mergeMap.mergeMap.call(loaded$, function (config) {\n                route._loadedConfig = config;\n                return _this.processRoutes(config.module, config.routes);\n            });\n        });\n    };\n    RouterPreloader.decorators = [\n        { type: _angular_core.Injectable },\n    ];\n    /** @nocollapse */\n    RouterPreloader.ctorParameters = function () { return [\n        { type: Router, },\n        { type: _angular_core.NgModuleFactoryLoader, },\n        { type: _angular_core.Compiler, },\n        { type: _angular_core.Injector, },\n        { type: PreloadingStrategy, },\n    ]; };\n    return RouterPreloader;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Contains a list of directives\n * \\@stable\n */\nvar ROUTER_DIRECTIVES = [RouterOutlet, RouterLink, RouterLinkWithHref, RouterLinkActive];\n/**\n * \\@whatItDoes Is used in DI to configure the router.\n * \\@stable\n */\nvar ROUTER_CONFIGURATION = new _angular_core.InjectionToken('ROUTER_CONFIGURATION');\n/**\n * \\@docsNotRequired\n */\nvar ROUTER_FORROOT_GUARD = new _angular_core.InjectionToken('ROUTER_FORROOT_GUARD');\nvar ROUTER_PROVIDERS = [\n    _angular_common.Location,\n    { provide: UrlSerializer, useClass: DefaultUrlSerializer },\n    {\n        provide: Router,\n        useFactory: setupRouter,\n        deps: [\n            _angular_core.ApplicationRef, UrlSerializer, ChildrenOutletContexts, _angular_common.Location, _angular_core.Injector,\n            _angular_core.NgModuleFactoryLoader, _angular_core.Compiler, ROUTES, ROUTER_CONFIGURATION,\n            [UrlHandlingStrategy, new _angular_core.Optional()], [RouteReuseStrategy, new _angular_core.Optional()]\n        ]\n    },\n    ChildrenOutletContexts,\n    { provide: ActivatedRoute, useFactory: rootRoute, deps: [Router] },\n    { provide: _angular_core.NgModuleFactoryLoader, useClass: _angular_core.SystemJsNgModuleLoader },\n    RouterPreloader,\n    NoPreloading,\n    PreloadAllModules,\n    { provide: ROUTER_CONFIGURATION, useValue: { enableTracing: false } },\n];\n/**\n * @return {?}\n */\nfunction routerNgProbeToken() {\n    return new _angular_core.NgProbeToken('Router', Router);\n}\n/**\n * \\@whatItDoes Adds router directives and providers.\n *\n * \\@howToUse\n *\n * RouterModule can be imported multiple times: once per lazily-loaded bundle.\n * Since the router deals with a global shared resource--location, we cannot have\n * more than one router service active.\n *\n * That is why there are two ways to create the module: `RouterModule.forRoot` and\n * `RouterModule.forChild`.\n *\n * * `forRoot` creates a module that contains all the directives, the given routes, and the router\n *   service itself.\n * * `forChild` creates a module that contains all the directives and the given routes, but does not\n *   include the router service.\n *\n * When registered at the root, the module should be used as follows\n *\n * ```\n * \\@NgModule({\n *   imports: [RouterModule.forRoot(ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n * For submodules and lazy loaded submodules the module should be used as follows:\n *\n * ```\n * \\@NgModule({\n *   imports: [RouterModule.forChild(ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n * \\@description\n *\n * Managing state transitions is one of the hardest parts of building applications. This is\n * especially true on the web, where you also need to ensure that the state is reflected in the URL.\n * In addition, we often want to split applications into multiple bundles and load them on demand.\n * Doing this transparently is not trivial.\n *\n * The Angular router solves these problems. Using the router, you can declaratively specify\n * application states, manage state transitions while taking care of the URL, and load bundles on\n * demand.\n *\n * [Read this developer guide](https://angular.io/docs/ts/latest/guide/router.html) to get an\n * overview of how the router should be used.\n *\n * \\@stable\n */\nvar RouterModule = /** @class */ (function () {\n    // Note: We are injecting the Router so it gets created eagerly...\n    function RouterModule(guard, router) {\n    }\n    /**\n     * Creates a module with all the router providers and directives. It also optionally sets up an\n     * application listener to perform an initial navigation.\n     *\n     * Options (see {@link ExtraOptions}):\n     * * `enableTracing` makes the router log all its internal events to the console.\n     * * `useHash` enables the location strategy that uses the URL fragment instead of the history\n     * API.\n     * * `initialNavigation` disables the initial navigation.\n     * * `errorHandler` provides a custom error handler.\n     * * `preloadingStrategy` configures a preloading strategy (see {@link PreloadAllModules}).\n     * * `onSameUrlNavigation` configures how the router handles navigation to the current URL. See\n     * {@link ExtraOptions} for more details.\n     */\n    /**\n     * Creates a module with all the router providers and directives. It also optionally sets up an\n     * application listener to perform an initial navigation.\n     *\n     * Options (see {\\@link ExtraOptions}):\n     * * `enableTracing` makes the router log all its internal events to the console.\n     * * `useHash` enables the location strategy that uses the URL fragment instead of the history\n     * API.\n     * * `initialNavigation` disables the initial navigation.\n     * * `errorHandler` provides a custom error handler.\n     * * `preloadingStrategy` configures a preloading strategy (see {\\@link PreloadAllModules}).\n     * * `onSameUrlNavigation` configures how the router handles navigation to the current URL. See\n     * {\\@link ExtraOptions} for more details.\n     * @param {?} routes\n     * @param {?=} config\n     * @return {?}\n     */\n    RouterModule.forRoot = /**\n     * Creates a module with all the router providers and directives. It also optionally sets up an\n     * application listener to perform an initial navigation.\n     *\n     * Options (see {\\@link ExtraOptions}):\n     * * `enableTracing` makes the router log all its internal events to the console.\n     * * `useHash` enables the location strategy that uses the URL fragment instead of the history\n     * API.\n     * * `initialNavigation` disables the initial navigation.\n     * * `errorHandler` provides a custom error handler.\n     * * `preloadingStrategy` configures a preloading strategy (see {\\@link PreloadAllModules}).\n     * * `onSameUrlNavigation` configures how the router handles navigation to the current URL. See\n     * {\\@link ExtraOptions} for more details.\n     * @param {?} routes\n     * @param {?=} config\n     * @return {?}\n     */\n    function (routes, config) {\n        return {\n            ngModule: RouterModule,\n            providers: [\n                ROUTER_PROVIDERS,\n                provideRoutes(routes),\n                {\n                    provide: ROUTER_FORROOT_GUARD,\n                    useFactory: provideForRootGuard,\n                    deps: [[Router, new _angular_core.Optional(), new _angular_core.SkipSelf()]]\n                },\n                { provide: ROUTER_CONFIGURATION, useValue: config ? config : {} },\n                {\n                    provide: _angular_common.LocationStrategy,\n                    useFactory: provideLocationStrategy,\n                    deps: [\n                        _angular_common.PlatformLocation, [new _angular_core.Inject(_angular_common.APP_BASE_HREF), new _angular_core.Optional()], ROUTER_CONFIGURATION\n                    ]\n                },\n                {\n                    provide: PreloadingStrategy,\n                    useExisting: config && config.preloadingStrategy ? config.preloadingStrategy :\n                        NoPreloading\n                },\n                { provide: _angular_core.NgProbeToken, multi: true, useFactory: routerNgProbeToken },\n                provideRouterInitializer(),\n            ],\n        };\n    };\n    /**\n     * Creates a module with all the router directives and a provider registering routes.\n     */\n    /**\n     * Creates a module with all the router directives and a provider registering routes.\n     * @param {?} routes\n     * @return {?}\n     */\n    RouterModule.forChild = /**\n     * Creates a module with all the router directives and a provider registering routes.\n     * @param {?} routes\n     * @return {?}\n     */\n    function (routes) {\n        return { ngModule: RouterModule, providers: [provideRoutes(routes)] };\n    };\n    RouterModule.decorators = [\n        { type: _angular_core.NgModule, args: [{ declarations: ROUTER_DIRECTIVES, exports: ROUTER_DIRECTIVES },] },\n    ];\n    /** @nocollapse */\n    RouterModule.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Inject, args: [ROUTER_FORROOT_GUARD,] },] },\n        { type: Router, decorators: [{ type: _angular_core.Optional },] },\n    ]; };\n    return RouterModule;\n}());\n/**\n * @param {?} platformLocationStrategy\n * @param {?} baseHref\n * @param {?=} options\n * @return {?}\n */\nfunction provideLocationStrategy(platformLocationStrategy, baseHref, options) {\n    if (options === void 0) { options = {}; }\n    return options.useHash ? new _angular_common.HashLocationStrategy(platformLocationStrategy, baseHref) :\n        new _angular_common.PathLocationStrategy(platformLocationStrategy, baseHref);\n}\n/**\n * @param {?} router\n * @return {?}\n */\nfunction provideForRootGuard(router) {\n    if (router) {\n        throw new Error(\"RouterModule.forRoot() called twice. Lazy loaded modules should use RouterModule.forChild() instead.\");\n    }\n    return 'guarded';\n}\n/**\n * \\@whatItDoes Registers routes.\n *\n * \\@howToUse\n *\n * ```\n * \\@NgModule({\n *   imports: [RouterModule.forChild(ROUTES)],\n *   providers: [provideRoutes(EXTRA_ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n * \\@stable\n * @param {?} routes\n * @return {?}\n */\nfunction provideRoutes(routes) {\n    return [\n        { provide: _angular_core.ANALYZE_FOR_ENTRY_COMPONENTS, multi: true, useValue: routes },\n        { provide: ROUTES, multi: true, useValue: routes },\n    ];\n}\n/**\n * \\@whatItDoes Represents options to configure the router.\n *\n * \\@stable\n * @record\n */\n\n/**\n * @param {?} ref\n * @param {?} urlSerializer\n * @param {?} contexts\n * @param {?} location\n * @param {?} injector\n * @param {?} loader\n * @param {?} compiler\n * @param {?} config\n * @param {?=} opts\n * @param {?=} urlHandlingStrategy\n * @param {?=} routeReuseStrategy\n * @return {?}\n */\nfunction setupRouter(ref, urlSerializer, contexts, location, injector, loader, compiler, config, opts, urlHandlingStrategy, routeReuseStrategy) {\n    if (opts === void 0) { opts = {}; }\n    var /** @type {?} */ router = new Router(null, urlSerializer, contexts, location, injector, loader, compiler, flatten(config));\n    if (urlHandlingStrategy) {\n        router.urlHandlingStrategy = urlHandlingStrategy;\n    }\n    if (routeReuseStrategy) {\n        router.routeReuseStrategy = routeReuseStrategy;\n    }\n    if (opts.errorHandler) {\n        router.errorHandler = opts.errorHandler;\n    }\n    if (opts.enableTracing) {\n        var /** @type {?} */ dom_1 = _angular_platformBrowser.ɵgetDOM();\n        router.events.subscribe(function (e) {\n            dom_1.logGroup(\"Router Event: \" + ((/** @type {?} */ (e.constructor))).name);\n            dom_1.log(e.toString());\n            dom_1.log(e);\n            dom_1.logGroupEnd();\n        });\n    }\n    if (opts.onSameUrlNavigation) {\n        router.onSameUrlNavigation = opts.onSameUrlNavigation;\n    }\n    if (opts.paramsInheritanceStrategy) {\n        router.paramsInheritanceStrategy = opts.paramsInheritanceStrategy;\n    }\n    return router;\n}\n/**\n * @param {?} router\n * @return {?}\n */\nfunction rootRoute(router) {\n    return router.routerState.root;\n}\n/**\n * To initialize the router properly we need to do in two steps:\n *\n * We need to start the navigation in a APP_INITIALIZER to block the bootstrap if\n * a resolver or a guards executes asynchronously. Second, we need to actually run\n * activation in a BOOTSTRAP_LISTENER. We utilize the afterPreactivation\n * hook provided by the router to do that.\n *\n * The router navigation starts, reaches the point when preactivation is done, and then\n * pauses. It waits for the hook to be resolved. We then resolve it only in a bootstrap listener.\n */\nvar RouterInitializer = /** @class */ (function () {\n    function RouterInitializer(injector) {\n        this.injector = injector;\n        this.initNavigation = false;\n        this.resultOfPreactivationDone = new rxjs_Subject.Subject();\n    }\n    /**\n     * @return {?}\n     */\n    RouterInitializer.prototype.appInitializer = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ p = this.injector.get(_angular_common.LOCATION_INITIALIZED, Promise.resolve(null));\n        return p.then(function () {\n            var /** @type {?} */ resolve = /** @type {?} */ ((null));\n            var /** @type {?} */ res = new Promise(function (r) { return resolve = r; });\n            var /** @type {?} */ router = _this.injector.get(Router);\n            var /** @type {?} */ opts = _this.injector.get(ROUTER_CONFIGURATION);\n            if (_this.isLegacyDisabled(opts) || _this.isLegacyEnabled(opts)) {\n                resolve(true);\n            }\n            else if (opts.initialNavigation === 'disabled') {\n                router.setUpLocationChangeListener();\n                resolve(true);\n            }\n            else if (opts.initialNavigation === 'enabled') {\n                router.hooks.afterPreactivation = function () {\n                    // only the initial navigation should be delayed\n                    if (!_this.initNavigation) {\n                        _this.initNavigation = true;\n                        resolve(true);\n                        return _this.resultOfPreactivationDone;\n                        // subsequent navigations should not be delayed\n                    }\n                    else {\n                        return /** @type {?} */ (rxjs_observable_of.of(null));\n                    }\n                };\n                router.initialNavigation();\n            }\n            else {\n                throw new Error(\"Invalid initialNavigation options: '\" + opts.initialNavigation + \"'\");\n            }\n            return res;\n        });\n    };\n    /**\n     * @param {?} bootstrappedComponentRef\n     * @return {?}\n     */\n    RouterInitializer.prototype.bootstrapListener = /**\n     * @param {?} bootstrappedComponentRef\n     * @return {?}\n     */\n    function (bootstrappedComponentRef) {\n        var /** @type {?} */ opts = this.injector.get(ROUTER_CONFIGURATION);\n        var /** @type {?} */ preloader = this.injector.get(RouterPreloader);\n        var /** @type {?} */ router = this.injector.get(Router);\n        var /** @type {?} */ ref = this.injector.get(_angular_core.ApplicationRef);\n        if (bootstrappedComponentRef !== ref.components[0]) {\n            return;\n        }\n        if (this.isLegacyEnabled(opts)) {\n            router.initialNavigation();\n        }\n        else if (this.isLegacyDisabled(opts)) {\n            router.setUpLocationChangeListener();\n        }\n        preloader.setUpPreloading();\n        router.resetRootComponentType(ref.componentTypes[0]);\n        this.resultOfPreactivationDone.next(/** @type {?} */ ((null)));\n        this.resultOfPreactivationDone.complete();\n    };\n    /**\n     * @param {?} opts\n     * @return {?}\n     */\n    RouterInitializer.prototype.isLegacyEnabled = /**\n     * @param {?} opts\n     * @return {?}\n     */\n    function (opts) {\n        return opts.initialNavigation === 'legacy_enabled' || opts.initialNavigation === true ||\n            opts.initialNavigation === undefined;\n    };\n    /**\n     * @param {?} opts\n     * @return {?}\n     */\n    RouterInitializer.prototype.isLegacyDisabled = /**\n     * @param {?} opts\n     * @return {?}\n     */\n    function (opts) {\n        return opts.initialNavigation === 'legacy_disabled' || opts.initialNavigation === false;\n    };\n    RouterInitializer.decorators = [\n        { type: _angular_core.Injectable },\n    ];\n    /** @nocollapse */\n    RouterInitializer.ctorParameters = function () { return [\n        { type: _angular_core.Injector, },\n    ]; };\n    return RouterInitializer;\n}());\n/**\n * @param {?} r\n * @return {?}\n */\nfunction getAppInitializer(r) {\n    return r.appInitializer.bind(r);\n}\n/**\n * @param {?} r\n * @return {?}\n */\nfunction getBootstrapListener(r) {\n    return r.bootstrapListener.bind(r);\n}\n/**\n * A token for the router initializer that will be called after the app is bootstrapped.\n *\n * \\@experimental\n */\nvar ROUTER_INITIALIZER = new _angular_core.InjectionToken('Router Initializer');\n/**\n * @return {?}\n */\nfunction provideRouterInitializer() {\n    return [\n        RouterInitializer,\n        {\n            provide: _angular_core.APP_INITIALIZER,\n            multi: true,\n            useFactory: getAppInitializer,\n            deps: [RouterInitializer]\n        },\n        { provide: ROUTER_INITIALIZER, useFactory: getBootstrapListener, deps: [RouterInitializer] },\n        { provide: _angular_core.APP_BOOTSTRAP_LISTENER, multi: true, useExisting: ROUTER_INITIALIZER },\n    ];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@stable\n */\nvar VERSION = new _angular_core.Version('5.2.7-f8e70fb');\n\nexports.RouterLink = RouterLink;\nexports.RouterLinkWithHref = RouterLinkWithHref;\nexports.RouterLinkActive = RouterLinkActive;\nexports.RouterOutlet = RouterOutlet;\nexports.ActivationEnd = ActivationEnd;\nexports.ActivationStart = ActivationStart;\nexports.ChildActivationEnd = ChildActivationEnd;\nexports.ChildActivationStart = ChildActivationStart;\nexports.GuardsCheckEnd = GuardsCheckEnd;\nexports.GuardsCheckStart = GuardsCheckStart;\nexports.NavigationCancel = NavigationCancel;\nexports.NavigationEnd = NavigationEnd;\nexports.NavigationError = NavigationError;\nexports.NavigationStart = NavigationStart;\nexports.ResolveEnd = ResolveEnd;\nexports.ResolveStart = ResolveStart;\nexports.RouteConfigLoadEnd = RouteConfigLoadEnd;\nexports.RouteConfigLoadStart = RouteConfigLoadStart;\nexports.RouterEvent = RouterEvent;\nexports.RoutesRecognized = RoutesRecognized;\nexports.RouteReuseStrategy = RouteReuseStrategy;\nexports.Router = Router;\nexports.ROUTES = ROUTES;\nexports.ROUTER_CONFIGURATION = ROUTER_CONFIGURATION;\nexports.ROUTER_INITIALIZER = ROUTER_INITIALIZER;\nexports.RouterModule = RouterModule;\nexports.provideRoutes = provideRoutes;\nexports.ChildrenOutletContexts = ChildrenOutletContexts;\nexports.OutletContext = OutletContext;\nexports.NoPreloading = NoPreloading;\nexports.PreloadAllModules = PreloadAllModules;\nexports.PreloadingStrategy = PreloadingStrategy;\nexports.RouterPreloader = RouterPreloader;\nexports.ActivatedRoute = ActivatedRoute;\nexports.ActivatedRouteSnapshot = ActivatedRouteSnapshot;\nexports.RouterState = RouterState;\nexports.RouterStateSnapshot = RouterStateSnapshot;\nexports.PRIMARY_OUTLET = PRIMARY_OUTLET;\nexports.convertToParamMap = convertToParamMap;\nexports.UrlHandlingStrategy = UrlHandlingStrategy;\nexports.DefaultUrlSerializer = DefaultUrlSerializer;\nexports.UrlSegment = UrlSegment;\nexports.UrlSegmentGroup = UrlSegmentGroup;\nexports.UrlSerializer = UrlSerializer;\nexports.UrlTree = UrlTree;\nexports.VERSION = VERSION;\nexports.ɵROUTER_PROVIDERS = ROUTER_PROVIDERS;\nexports.ɵflatten = flatten;\nexports.ɵa = ROUTER_FORROOT_GUARD;\nexports.ɵg = RouterInitializer;\nexports.ɵh = getAppInitializer;\nexports.ɵi = getBootstrapListener;\nexports.ɵd = provideForRootGuard;\nexports.ɵc = provideLocationStrategy;\nexports.ɵj = provideRouterInitializer;\nexports.ɵf = rootRoute;\nexports.ɵb = routerNgProbeToken;\nexports.ɵe = setupRouter;\nexports.ɵk = Tree;\nexports.ɵl = TreeNode;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=router.umd.js.map\n"]}