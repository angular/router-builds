{"version":3,"sources":["packages/router/router.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","router","common","core","rxjs","operators","platformBrowser","this","extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","RouterEvent","NavigationStart","_super","id","url","navigationTrigger","restoredState","_this","toString","NavigationEnd","urlAfterRedirects","NavigationCancel","reason","NavigationError","RoutesRecognized","state","GuardsCheckStart","GuardsCheckEnd","shouldActivate","ResolveStart","ResolveEnd","RouteConfigLoadStart","route","path","RouteConfigLoadEnd","ChildActivationStart","snapshot","routeConfig","ChildActivationEnd","ActivationStart","ActivationEnd","PRIMARY_OUTLET","ParamsAsMap","params","has","name","get","v","isArray","getAll","keys","enumerable","configurable","convertToParamMap","defaultUrlMatcher","segments","segmentGroup","parts","split","pathMatch","hasChildren","posParams","index","part","segment","startsWith","substring","consumed","slice","LoadedRouterConfig","routes","validateConfig","config","parentPath","validateNode","getFullPath","fullPath","Error","component","outlet","redirectTo","children","loadChildren","matcher","charAt","currentRoute","copyConfig","map","shallowEqual","a","k1","k2","flatten","arr","apply","last$1","forEach","map$$1","callback","prop","andObservables","observables","pipe","mergeAll","every","result","wrapIntoObservable","ɵisObservable","ɵisPromise","from","Promise","resolve","of","containsTree","container","containee","exact","equalQueryParams","queryParams","equalSegmentGroups","equalPath","numberOfChildren","root","containsQueryParams","containsSegmentGroup","containsSegmentGroupHelper","containeePaths","current","UrlTree","fragment","_queryParamMap","DEFAULT_SERIALIZER","serialize","UrlSegmentGroup","parent","k","serializePaths","UrlSegment","parameters","_parameterMap","serializePath","as","bs","mapChildrenIntoArray","fn","res","child","childOutlet","UrlSerializer","DefaultUrlSerializer","parse","UrlParser","parseRootSegment","parseQueryParams","parseFragment","tree","serializeSegment","primary","children_1","join","serializeQueryParams","strParams","encodeUriQuery","encodeUriFragment","encodeURI","encodeUriString","encodeURIComponent","replace","encodeUriSegment","decode","decodeURIComponent","decodeQuery","serializeMatrixParams","SEGMENT_RE","matchSegments","str","match","QUERY_PARAM_RE","QUERY_PARAM_VALUE_RE","remaining","consumeOptional","peekStartsWith","parseChildren","parseQueryParam","parseSegment","capture","parseParens","parseMatrixParams","parseParam","valueMatch","matchQueryParams","matchUrlQueryParamValue","decodedKey","decodedVal","currentVal","allowPrimary","outletName","undefined","indexOf","substr","NoMatch","AbsoluteRedirect","urlTree","noMatch","Observable","obs","absoluteRedirect","newTree","namedOutletsRedirect","ApplyRedirects","moduleInjector","configLoader","urlSerializer","allowRedirects","ngModule","NgModuleRef","expandSegmentGroup","rootSegmentGroup","createUrlTree","catchError","noMatchError","rootCandidate","_a","expandChildren","expandSegment","waitForMap","obj","waitHead","waitTail","mapped","concatAll","last","expandSegmentAgainstRoute","first","_","EmptyError","noLeftoversInUrl","paths","getOutlet","matchSegmentAgainstRoute","expandSegmentAgainstRouteUsingRedirect","expandWildCardWithParamsAgainstRouteUsingRedirect","expandRegularSegmentAgainstRouteUsingRedirect","applyRedirectCommands","lineralizeSegments","mergeMap","newSegments","group","consumedSegments","lastChild","positionalParamSegments","matched","rawSegmentGroup","load","injector","cfg","_loadedConfig","rawSlicedSegments","getChildConfig","routerConfig","childModule","childConfig","slicedSegments","containsEmptyPathRedirectsWithNamedOutlets","some","isEmptyPathRedirect","mergeTrivialChildren","createChildrenForEmptySegments","primarySegmentGroup","e_3","routes_2","routes_2_1","e_3_1","return","containsEmptyPathRedirects","addEmptySegmentsToChildrenIfNeeded","e_2","routes_1","routes_1_1","e_2_1","cs","runCanLoadGuard","canLoad","injectionToken","guard","shouldLoad","canLoadFails","navigationCancelingError","message","applyRedirectCreatreUrlTree","newRoot","createSegmentGroup","createQueryParams","redirectToParams","actualParams","sourceName","updatedSegments","createSegments","redirectToSegments","actualSegments","findPosParam","findOrReturn","redirectToUrlSegment","pos","e_1","idx","actualSegments_1","actualSegments_1_1","splice","e_1_1","Tree","_root","pathFromRoot","findNode","firstChild","siblings","findPath","filter","cc","node","_b","node_1","_c","unshift","TreeNode","nodeChildrenAsMap","RouterState","setRouterState","createEmptyState","rootComponent","createEmptyStateSnapshot","activated","ActivatedRouteSnapshot","RouterStateSnapshot","emptyUrl","BehaviorSubject","emptyParams","emptyData","emptyQueryParams","ActivatedRoute","data","futureSnapshot","_futureSnapshot","_routerState","_paramMap","inheritedParamsDataResolve","paramsInheritanceStrategy","inheritingStartingFrom","parent_1","flattenInherited","reduce","curr","_resolvedData","urlSegment","lastPathIndex","_urlSegment","_lastPathIndex","_resolve","serializeNode","advanceActivatedRoute","currentSnapshot","nextSnapshot","shallowEqualArrays","equalParamsAndUrlSegments","equalSegments","isMatrixParams","command","outlets","segmentPath","oldSegmentGroup","newSegmentGroup","qp","replaceSegment","oldSegment","newSegment","Navigation","isAbsolute","numberOfDoubleDots","commands","cmdWithOutlet","find","toRoot","Position","processChildren","getPath","updateSegmentGroup","startIndex","updateSegmentGroupChildren","prefixedWith","currentCommandIndex","currentPathIndex","pathIndex","commandIndex","compare","slicedCommands","g","createNewSegmentGroup","outlets_2","getOutlets","createNewSegmentChildren","stringify","CanActivate","CanDeactivate","PreActivation","future","forwardEvent","canActivateChecks","canDeactivateChecks","initialize","parentContexts","futureRoot","setupChildRouteGuards","checkGuards","isDeactivating","isActivating","runCanDeactivateChecks","canDeactivate","runCanActivateChecks","resolveData","concatMap","check","runResolve","futureNode","currNode","contexts","futurePath","prevChildren","setupRouteGuards","deactivateRouteAndItsChildren","getContext","context","shouldRunGuardsAndResolvers","runGuardsAndResolvers","mode","childName","isActivated","runCanDeactivate","fireChildActivationStart","fireActivationStart","runCanActivateChild","runCanActivate","canActivate","getToken","canActivateChildGuards","reverse","extractCanActivateChild","guards","canActivateChild","resolveNode","resolvedData","key_1","getResolver","resolver","token","closestLoadedConfig","NoMatch$1","Recognizer","rootComponentType","recognize","split$1","processSegmentGroup","freeze","rootNode","routeState","inheritParamsAndData","routeNode","processSegment","checkOutletNameUniqueness","nodes","names","routeWithSameOutletName","sortActivatedRouteSnapshots","sort","localeCompare","config_1","config_1_1","processSegmentAgainstRoute","rawSegment","getData","getSourceSegmentGroup","getPathIndexShift","getResolve","match$1","_sourceSegment","_segmentIndexShift","containsEmptyPathMatchesWithNamedOutlets","emptyPathMatch","getOutlet$1","s_1","createChildrenForEmptyPaths","primarySegment","containsEmptyPathMatches","s_2","addEmptyPathsToChildrenIfNeeded","RouteReuseStrategy","DefaultRouteReuseStrategy","shouldDetach","store","detachedTree","shouldAttach","retrieve","shouldReuseRoute","ROUTES","InjectionToken","RouterConfigLoader","loader","compiler","onLoadStartListener","onLoadEndListener","parentInjector","loadModuleFactory","NgModuleFactory","compileModuleAsync","UrlHandlingStrategy","DefaultUrlHandlingStrategy","shouldProcessUrl","extract","merge","newUrlPart","wholeUrl","defaultErrorHandler","defaultRouterHook","runExtras","Router","rootContexts","location","navigations","navigationId","events","Subject","errorHandler","navigated","lastSuccessfulId","hooks","beforePreactivation","afterPreactivation","urlHandlingStrategy","routeReuseStrategy","onSameUrlNavigation","resetConfig","currentUrlTree","createEmptyUrlTree","rawUrlTree","triggerEvent","routerState","processNavigations","resetRootComponentType","initialNavigation","setUpLocationChangeListener","navigateByUrl","replaceUrl","locationSubscription","subscribe","change","source","setTimeout","scheduleNavigation","serializeUrl","ngOnDestroy","dispose","unsubscribe","navigationExtras","relativeTo","preserveQueryParams","queryParamsHandling","preserveFragment","isDevMode","console","warn","f","q","removeEmptyProps","nav","computeNavigation","cmd","cmdIdx","outlets_1","urlPart","partIndex","startingPosition","findStartingPosition","modifier","createPositionApplyingDoubleDots","ci","dd","extras","skipLocationChange","parseUrl","mergedTree","navigate","validateCommands","isActive","executeScheduledNavigation","promise","catch","rawUrl","lastNavigation","reject","rej","urlTransition","then","runNavigate","precreatedState","resolvePromise","rejectPromise","preActivation","routerState$","appliedUrl","applyRedirects","appliedUrlTree","evt","createRouterState","prevState","createNode","createOrReuseChildren","detachedRouteHandle","setFutureSnapshotsOfActivatedRoutes","createActivatedRoute","activateRoutes","storedState","storedUrl","navigationIsSuccessful","isCurrentPathEqualTo","replaceState","go","ActivateRoutes","activate","resetUrlToCurrentUrlTree","isNavigationCancelingError","resetStateAndUrl","ee","futureState","currState","currRoot","deactivateChildRoutes","activateChildRoutes","futureChild","childOutletName","deactivateRoutes","parentContext","detachAndStoreRouteSubtree","deactivateRouteAndOutlet","componentRef","detach","onOutletDeactivated","contexts_1","deactivate","getOrCreateContext","stored","onOutletReAttached","attachRef","attach","advanceActivatedRouteNodeAndItsChildren","parentLoadedConfig","cmpFactoryResolver","componentFactoryResolver","activateWith","RouterLink","tabIndex","renderer","el","setAttribute","nativeElement","set","preserve","onClick","attrBoolValue","Input","String","Boolean","HostListener","Function","Directive","selector","Attribute","Renderer2","ElementRef","RouterLinkWithHref","locationStrategy","subscription","updateTargetUrlAndHref","ngOnChanges","changes","button","ctrlKey","metaKey","shiftKey","href","prepareExternalUrl","HostBinding","Number","LocationStrategy","RouterLinkActive","element","cdr","classes","routerLinkActiveOptions","update","ngAfterContentInit","links","linksWithHrefs","hasActiveLinks","addClass","removeClass","isLinkActive","link","ContentChildren","descendants","QueryList","exportAs","ChangeDetectorRef","OutletContext","ChildrenOutletContexts","Map","onChildOutletCreated","onChildOutletDestroyed","RouterOutlet","changeDetector","_activatedRoute","activateEvents","EventEmitter","deactivateEvents","ngOnInit","instance","cmp","ref","activatedRoute","insert","hostView","destroy","emit","resolveComponentFactory","childContexts","OutletInjector","createComponent","markForCheck","Output","ViewContainerRef","ComponentFactoryResolver","notFoundValue","PreloadingStrategy","PreloadAllModules","preload","NoPreloading","RouterPreloader","moduleLoader","preloadingStrategy","setUpPreloading","processRoutes","preloadConfig","Injectable","NgModuleFactoryLoader","Compiler","Injector","ROUTER_DIRECTIVES","ROUTER_CONFIGURATION","ROUTER_FORROOT_GUARD","ROUTER_PROVIDERS","Location","provide","useClass","useFactory","setupRouter","opts","enableTracing","dom_1","ɵgetDOM","logGroup","log","logGroupEnd","deps","ApplicationRef","Optional","rootRoute","SystemJsNgModuleLoader","useValue","routerNgProbeToken","NgProbeToken","RouterModule","RouterModule_1","forRoot","providers","provideRoutes","provideForRootGuard","SkipSelf","provideLocationStrategy","PlatformLocation","Inject","APP_BASE_HREF","useExisting","multi","provideRouterInitializer","RouterInitializer","APP_INITIALIZER","getAppInitializer","ROUTER_INITIALIZER","getBootstrapListener","APP_BOOTSTRAP_LISTENER","forChild","NgModule","declarations","platformLocationStrategy","baseHref","options","useHash","HashLocationStrategy","PathLocationStrategy","ANALYZE_FOR_ENTRY_COMPONENTS","initNavigation","resultOfPreactivationDone","appInitializer","LOCATION_INITIALIZED","isLegacyDisabled","isLegacyEnabled","bootstrapListener","bootstrappedComponentRef","preloader","components","componentTypes","complete","bind","VERSION","Version","ɵROUTER_PROVIDERS","ɵflatten"],"mappings":"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","sourcesContent":["/**\n * @license Angular v6.1.0-beta.0+24.sha-5ef7a07\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/core'), require('rxjs'), require('rxjs/operators'), require('@angular/platform-browser')) :\n\ttypeof define === 'function' && define.amd ? define('@angular/router', ['exports', '@angular/common', '@angular/core', 'rxjs', 'rxjs/operators', '@angular/platform-browser'], factory) :\n\t(factory((global.ng = global.ng || {}, global.ng.router = {}),global.ng.common,global.ng.core,global.rxjs,global.rxjs.operators,global.ng.platformBrowser));\n}(this, (function (exports,common,core,rxjs,operators,platformBrowser) { 'use strict';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n};\r\n\r\n\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Base for events the Router goes through, as opposed to events tied to a specific\n * Route. `RouterEvent`s will only be fired one time for any given navigation.\n *\n * Example:\n *\n * ```\n * class MyService {\n *   constructor(public router: Router, logger: Logger) {\n *     router.events.filter(e => e instanceof RouterEvent).subscribe(e => {\n *       logger.log(e.id, e.url);\n *     });\n *   }\n * }\n * ```\n *\n * @experimental\n */\nvar RouterEvent = /** @class */ (function () {\n    function RouterEvent(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url) {\n        this.id = id;\n        this.url = url;\n    }\n    return RouterEvent;\n}());\n/**\n * @description\n *\n * Represents an event triggered when a navigation starts.\n *\n *\n */\nvar NavigationStart = /** @class */ (function (_super) {\n    __extends(NavigationStart, _super);\n    function NavigationStart(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    navigationTrigger, \n    /** @docsNotRequired */\n    restoredState) {\n        if (navigationTrigger === void 0) { \n        /** @docsNotRequired */\n        navigationTrigger = 'imperative'; }\n        if (restoredState === void 0) { \n        /** @docsNotRequired */\n        restoredState = null; }\n        var _this = _super.call(this, id, url) || this;\n        _this.navigationTrigger = navigationTrigger;\n        _this.restoredState = restoredState;\n        return _this;\n    }\n    /** @docsNotRequired */\n    NavigationStart.prototype.toString = function () { return \"NavigationStart(id: \" + this.id + \", url: '\" + this.url + \"')\"; };\n    return NavigationStart;\n}(RouterEvent));\n/**\n * @description\n *\n * Represents an event triggered when a navigation ends successfully.\n *\n *\n */\nvar NavigationEnd = /** @class */ (function (_super) {\n    __extends(NavigationEnd, _super);\n    function NavigationEnd(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    urlAfterRedirects) {\n        var _this = _super.call(this, id, url) || this;\n        _this.urlAfterRedirects = urlAfterRedirects;\n        return _this;\n    }\n    /** @docsNotRequired */\n    NavigationEnd.prototype.toString = function () {\n        return \"NavigationEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"')\";\n    };\n    return NavigationEnd;\n}(RouterEvent));\n/**\n * @description\n *\n * Represents an event triggered when a navigation is canceled.\n *\n *\n */\nvar NavigationCancel = /** @class */ (function (_super) {\n    __extends(NavigationCancel, _super);\n    function NavigationCancel(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    reason) {\n        var _this = _super.call(this, id, url) || this;\n        _this.reason = reason;\n        return _this;\n    }\n    /** @docsNotRequired */\n    NavigationCancel.prototype.toString = function () { return \"NavigationCancel(id: \" + this.id + \", url: '\" + this.url + \"')\"; };\n    return NavigationCancel;\n}(RouterEvent));\n/**\n * @description\n *\n * Represents an event triggered when a navigation fails due to an unexpected error.\n *\n *\n */\nvar NavigationError = /** @class */ (function (_super) {\n    __extends(NavigationError, _super);\n    function NavigationError(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    error) {\n        var _this = _super.call(this, id, url) || this;\n        _this.error = error;\n        return _this;\n    }\n    /** @docsNotRequired */\n    NavigationError.prototype.toString = function () {\n        return \"NavigationError(id: \" + this.id + \", url: '\" + this.url + \"', error: \" + this.error + \")\";\n    };\n    return NavigationError;\n}(RouterEvent));\n/**\n * @description\n *\n * Represents an event triggered when routes are recognized.\n *\n *\n */\nvar RoutesRecognized = /** @class */ (function (_super) {\n    __extends(RoutesRecognized, _super);\n    function RoutesRecognized(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    urlAfterRedirects, \n    /** @docsNotRequired */\n    state) {\n        var _this = _super.call(this, id, url) || this;\n        _this.urlAfterRedirects = urlAfterRedirects;\n        _this.state = state;\n        return _this;\n    }\n    /** @docsNotRequired */\n    RoutesRecognized.prototype.toString = function () {\n        return \"RoutesRecognized(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return RoutesRecognized;\n}(RouterEvent));\n/**\n * @description\n *\n * Represents the start of the Guard phase of routing.\n *\n * @experimental\n */\nvar GuardsCheckStart = /** @class */ (function (_super) {\n    __extends(GuardsCheckStart, _super);\n    function GuardsCheckStart(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    urlAfterRedirects, \n    /** @docsNotRequired */\n    state) {\n        var _this = _super.call(this, id, url) || this;\n        _this.urlAfterRedirects = urlAfterRedirects;\n        _this.state = state;\n        return _this;\n    }\n    GuardsCheckStart.prototype.toString = function () {\n        return \"GuardsCheckStart(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return GuardsCheckStart;\n}(RouterEvent));\n/**\n * @description\n *\n * Represents the end of the Guard phase of routing.\n *\n * @experimental\n */\nvar GuardsCheckEnd = /** @class */ (function (_super) {\n    __extends(GuardsCheckEnd, _super);\n    function GuardsCheckEnd(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    urlAfterRedirects, \n    /** @docsNotRequired */\n    state, \n    /** @docsNotRequired */\n    shouldActivate) {\n        var _this = _super.call(this, id, url) || this;\n        _this.urlAfterRedirects = urlAfterRedirects;\n        _this.state = state;\n        _this.shouldActivate = shouldActivate;\n        return _this;\n    }\n    GuardsCheckEnd.prototype.toString = function () {\n        return \"GuardsCheckEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \", shouldActivate: \" + this.shouldActivate + \")\";\n    };\n    return GuardsCheckEnd;\n}(RouterEvent));\n/**\n * @description\n *\n * Represents the start of the Resolve phase of routing. The timing of this\n * event may change, thus it's experimental. In the current iteration it will run\n * in the \"resolve\" phase whether there's things to resolve or not. In the future this\n * behavior may change to only run when there are things to be resolved.\n *\n * @experimental\n */\nvar ResolveStart = /** @class */ (function (_super) {\n    __extends(ResolveStart, _super);\n    function ResolveStart(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    urlAfterRedirects, \n    /** @docsNotRequired */\n    state) {\n        var _this = _super.call(this, id, url) || this;\n        _this.urlAfterRedirects = urlAfterRedirects;\n        _this.state = state;\n        return _this;\n    }\n    ResolveStart.prototype.toString = function () {\n        return \"ResolveStart(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return ResolveStart;\n}(RouterEvent));\n/**\n * @description\n *\n * Represents the end of the Resolve phase of routing. See note on\n * `ResolveStart` for use of this experimental API.\n *\n * @experimental\n */\nvar ResolveEnd = /** @class */ (function (_super) {\n    __extends(ResolveEnd, _super);\n    function ResolveEnd(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    urlAfterRedirects, \n    /** @docsNotRequired */\n    state) {\n        var _this = _super.call(this, id, url) || this;\n        _this.urlAfterRedirects = urlAfterRedirects;\n        _this.state = state;\n        return _this;\n    }\n    ResolveEnd.prototype.toString = function () {\n        return \"ResolveEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return ResolveEnd;\n}(RouterEvent));\n/**\n * @description\n *\n * Represents an event triggered before lazy loading a route config.\n *\n * @experimental\n */\nvar RouteConfigLoadStart = /** @class */ (function () {\n    function RouteConfigLoadStart(\n    /** @docsNotRequired */\n    route) {\n        this.route = route;\n    }\n    RouteConfigLoadStart.prototype.toString = function () { return \"RouteConfigLoadStart(path: \" + this.route.path + \")\"; };\n    return RouteConfigLoadStart;\n}());\n/**\n * @description\n *\n * Represents an event triggered when a route has been lazy loaded.\n *\n * @experimental\n */\nvar RouteConfigLoadEnd = /** @class */ (function () {\n    function RouteConfigLoadEnd(\n    /** @docsNotRequired */\n    route) {\n        this.route = route;\n    }\n    RouteConfigLoadEnd.prototype.toString = function () { return \"RouteConfigLoadEnd(path: \" + this.route.path + \")\"; };\n    return RouteConfigLoadEnd;\n}());\n/**\n * @description\n *\n * Represents the start of end of the Resolve phase of routing. See note on\n * `ChildActivationEnd` for use of this experimental API.\n *\n * @experimental\n */\nvar ChildActivationStart = /** @class */ (function () {\n    function ChildActivationStart(\n    /** @docsNotRequired */\n    snapshot) {\n        this.snapshot = snapshot;\n    }\n    ChildActivationStart.prototype.toString = function () {\n        var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n        return \"ChildActivationStart(path: '\" + path + \"')\";\n    };\n    return ChildActivationStart;\n}());\n/**\n * @description\n *\n * Represents the start of end of the Resolve phase of routing. See note on\n * `ChildActivationStart` for use of this experimental API.\n *\n * @experimental\n */\nvar ChildActivationEnd = /** @class */ (function () {\n    function ChildActivationEnd(\n    /** @docsNotRequired */\n    snapshot) {\n        this.snapshot = snapshot;\n    }\n    ChildActivationEnd.prototype.toString = function () {\n        var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n        return \"ChildActivationEnd(path: '\" + path + \"')\";\n    };\n    return ChildActivationEnd;\n}());\n/**\n * @description\n *\n * Represents the start of end of the Resolve phase of routing. See note on\n * `ActivationEnd` for use of this experimental API.\n *\n * @experimental\n */\nvar ActivationStart = /** @class */ (function () {\n    function ActivationStart(\n    /** @docsNotRequired */\n    snapshot) {\n        this.snapshot = snapshot;\n    }\n    ActivationStart.prototype.toString = function () {\n        var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n        return \"ActivationStart(path: '\" + path + \"')\";\n    };\n    return ActivationStart;\n}());\n/**\n * @description\n *\n * Represents the start of end of the Resolve phase of routing. See note on\n * `ActivationStart` for use of this experimental API.\n *\n * @experimental\n */\nvar ActivationEnd = /** @class */ (function () {\n    function ActivationEnd(\n    /** @docsNotRequired */\n    snapshot) {\n        this.snapshot = snapshot;\n    }\n    ActivationEnd.prototype.toString = function () {\n        var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n        return \"ActivationEnd(path: '\" + path + \"')\";\n    };\n    return ActivationEnd;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Name of the primary outlet.\n *\n *\n */\nvar PRIMARY_OUTLET = 'primary';\nvar ParamsAsMap = /** @class */ (function () {\n    function ParamsAsMap(params) {\n        this.params = params || {};\n    }\n    ParamsAsMap.prototype.has = function (name) { return this.params.hasOwnProperty(name); };\n    ParamsAsMap.prototype.get = function (name) {\n        if (this.has(name)) {\n            var v = this.params[name];\n            return Array.isArray(v) ? v[0] : v;\n        }\n        return null;\n    };\n    ParamsAsMap.prototype.getAll = function (name) {\n        if (this.has(name)) {\n            var v = this.params[name];\n            return Array.isArray(v) ? v : [v];\n        }\n        return [];\n    };\n    Object.defineProperty(ParamsAsMap.prototype, \"keys\", {\n        get: function () { return Object.keys(this.params); },\n        enumerable: true,\n        configurable: true\n    });\n    return ParamsAsMap;\n}());\n/**\n * Convert a `Params` instance to a `ParamMap`.\n *\n *\n */\nfunction convertToParamMap(params) {\n    return new ParamsAsMap(params);\n}\nvar NAVIGATION_CANCELING_ERROR = 'ngNavigationCancelingError';\nfunction navigationCancelingError(message) {\n    var error = Error('NavigationCancelingError: ' + message);\n    error[NAVIGATION_CANCELING_ERROR] = true;\n    return error;\n}\nfunction isNavigationCancelingError(error) {\n    return error && error[NAVIGATION_CANCELING_ERROR];\n}\n// Matches the route configuration (`route`) against the actual URL (`segments`).\nfunction defaultUrlMatcher(segments, segmentGroup, route) {\n    var parts = route.path.split('/');\n    if (parts.length > segments.length) {\n        // The actual URL is shorter than the config, no match\n        return null;\n    }\n    if (route.pathMatch === 'full' &&\n        (segmentGroup.hasChildren() || parts.length < segments.length)) {\n        // The config is longer than the actual URL but we are looking for a full match, return null\n        return null;\n    }\n    var posParams = {};\n    // Check each config part against the actual URL\n    for (var index = 0; index < parts.length; index++) {\n        var part = parts[index];\n        var segment = segments[index];\n        var isParameter = part.startsWith(':');\n        if (isParameter) {\n            posParams[part.substring(1)] = segment;\n        }\n        else if (part !== segment.path) {\n            // The actual URL part does not match the config, no match\n            return null;\n        }\n    }\n    return { consumed: segments.slice(0, parts.length), posParams: posParams };\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar LoadedRouterConfig = /** @class */ (function () {\n    function LoadedRouterConfig(routes, module) {\n        this.routes = routes;\n        this.module = module;\n    }\n    return LoadedRouterConfig;\n}());\nfunction validateConfig(config, parentPath) {\n    if (parentPath === void 0) { parentPath = ''; }\n    // forEach doesn't iterate undefined values\n    for (var i = 0; i < config.length; i++) {\n        var route = config[i];\n        var fullPath = getFullPath(parentPath, route);\n        validateNode(route, fullPath);\n    }\n}\nfunction validateNode(route, fullPath) {\n    if (!route) {\n        throw new Error(\"\\n      Invalid configuration of route '\" + fullPath + \"': Encountered undefined route.\\n      The reason might be an extra comma.\\n\\n      Example:\\n      const routes: Routes = [\\n        { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\\n        { path: 'dashboard',  component: DashboardComponent },, << two commas\\n        { path: 'detail/:id', component: HeroDetailComponent }\\n      ];\\n    \");\n    }\n    if (Array.isArray(route)) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': Array cannot be specified\");\n    }\n    if (!route.component && (route.outlet && route.outlet !== PRIMARY_OUTLET)) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': a componentless route cannot have a named outlet set\");\n    }\n    if (route.redirectTo && route.children) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and children cannot be used together\");\n    }\n    if (route.redirectTo && route.loadChildren) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and loadChildren cannot be used together\");\n    }\n    if (route.children && route.loadChildren) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': children and loadChildren cannot be used together\");\n    }\n    if (route.redirectTo && route.component) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and component cannot be used together\");\n    }\n    if (route.path && route.matcher) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': path and matcher cannot be used together\");\n    }\n    if (route.redirectTo === void 0 && !route.component && !route.children && !route.loadChildren) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"'. One of the following must be provided: component, redirectTo, children or loadChildren\");\n    }\n    if (route.path === void 0 && route.matcher === void 0) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': routes must have either a path or a matcher specified\");\n    }\n    if (typeof route.path === 'string' && route.path.charAt(0) === '/') {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': path cannot start with a slash\");\n    }\n    if (route.path === '' && route.redirectTo !== void 0 && route.pathMatch === void 0) {\n        var exp = \"The default value of 'pathMatch' is 'prefix', but often the intent is to use 'full'.\";\n        throw new Error(\"Invalid configuration of route '{path: \\\"\" + fullPath + \"\\\", redirectTo: \\\"\" + route.redirectTo + \"\\\"}': please provide 'pathMatch'. \" + exp);\n    }\n    if (route.pathMatch !== void 0 && route.pathMatch !== 'full' && route.pathMatch !== 'prefix') {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': pathMatch can only be set to 'prefix' or 'full'\");\n    }\n    if (route.children) {\n        validateConfig(route.children, fullPath);\n    }\n}\nfunction getFullPath(parentPath, currentRoute) {\n    if (!currentRoute) {\n        return parentPath;\n    }\n    if (!parentPath && !currentRoute.path) {\n        return '';\n    }\n    else if (parentPath && !currentRoute.path) {\n        return parentPath + \"/\";\n    }\n    else if (!parentPath && currentRoute.path) {\n        return currentRoute.path;\n    }\n    else {\n        return parentPath + \"/\" + currentRoute.path;\n    }\n}\nfunction copyConfig(r) {\n    var children = r.children && r.children.map(copyConfig);\n    return children ? __assign({}, r, { children: children }) : __assign({}, r);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction shallowEqualArrays(a, b) {\n    if (a.length !== b.length)\n        return false;\n    for (var i = 0; i < a.length; ++i) {\n        if (!shallowEqual(a[i], b[i]))\n            return false;\n    }\n    return true;\n}\nfunction shallowEqual(a, b) {\n    var k1 = Object.keys(a);\n    var k2 = Object.keys(b);\n    if (k1.length != k2.length) {\n        return false;\n    }\n    var key;\n    for (var i = 0; i < k1.length; i++) {\n        key = k1[i];\n        if (a[key] !== b[key]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Flattens single-level nested arrays.\n */\nfunction flatten(arr) {\n    return Array.prototype.concat.apply([], arr);\n}\n/**\n * Return the last element of an array.\n */\nfunction last$1(a) {\n    return a.length > 0 ? a[a.length - 1] : null;\n}\n/**\n * Verifys all booleans in an array are `true`.\n */\n\nfunction forEach(map$$1, callback) {\n    for (var prop in map$$1) {\n        if (map$$1.hasOwnProperty(prop)) {\n            callback(map$$1[prop], prop);\n        }\n    }\n}\nfunction waitForMap(obj, fn) {\n    if (Object.keys(obj).length === 0) {\n        return rxjs.of({});\n    }\n    var waitHead = [];\n    var waitTail = [];\n    var res = {};\n    forEach(obj, function (a, k) {\n        var mapped = fn(k, a).pipe(operators.map(function (r) { return res[k] = r; }));\n        if (k === PRIMARY_OUTLET) {\n            waitHead.push(mapped);\n        }\n        else {\n            waitTail.push(mapped);\n        }\n    });\n    // Closure compiler has problem with using spread operator here. So just using Array.concat.\n    return rxjs.of.apply(null, waitHead.concat(waitTail)).pipe(operators.concatAll(), operators.last(), operators.map(function () { return res; }));\n}\n/**\n * ANDs Observables by merging all input observables, reducing to an Observable verifying all\n * input Observables return `true`.\n */\nfunction andObservables(observables) {\n    return observables.pipe(operators.mergeAll(), operators.every(function (result) { return result === true; }));\n}\nfunction wrapIntoObservable(value) {\n    if (core.ɵisObservable(value)) {\n        return value;\n    }\n    if (core.ɵisPromise(value)) {\n        // Use `Promise.resolve()` to wrap promise-like instances.\n        // Required ie when a Resolver returns a AngularJS `$q` promise to correctly trigger the\n        // change detection.\n        return rxjs.from(Promise.resolve(value));\n    }\n    return rxjs.of(value);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction createEmptyUrlTree() {\n    return new UrlTree(new UrlSegmentGroup([], {}), {}, null);\n}\nfunction containsTree(container, containee, exact) {\n    if (exact) {\n        return equalQueryParams(container.queryParams, containee.queryParams) &&\n            equalSegmentGroups(container.root, containee.root);\n    }\n    return containsQueryParams(container.queryParams, containee.queryParams) &&\n        containsSegmentGroup(container.root, containee.root);\n}\nfunction equalQueryParams(container, containee) {\n    return shallowEqual(container, containee);\n}\nfunction equalSegmentGroups(container, containee) {\n    if (!equalPath(container.segments, containee.segments))\n        return false;\n    if (container.numberOfChildren !== containee.numberOfChildren)\n        return false;\n    for (var c in containee.children) {\n        if (!container.children[c])\n            return false;\n        if (!equalSegmentGroups(container.children[c], containee.children[c]))\n            return false;\n    }\n    return true;\n}\nfunction containsQueryParams(container, containee) {\n    return Object.keys(containee).length <= Object.keys(container).length &&\n        Object.keys(containee).every(function (key) { return containee[key] === container[key]; });\n}\nfunction containsSegmentGroup(container, containee) {\n    return containsSegmentGroupHelper(container, containee, containee.segments);\n}\nfunction containsSegmentGroupHelper(container, containee, containeePaths) {\n    if (container.segments.length > containeePaths.length) {\n        var current = container.segments.slice(0, containeePaths.length);\n        if (!equalPath(current, containeePaths))\n            return false;\n        if (containee.hasChildren())\n            return false;\n        return true;\n    }\n    else if (container.segments.length === containeePaths.length) {\n        if (!equalPath(container.segments, containeePaths))\n            return false;\n        for (var c in containee.children) {\n            if (!container.children[c])\n                return false;\n            if (!containsSegmentGroup(container.children[c], containee.children[c]))\n                return false;\n        }\n        return true;\n    }\n    else {\n        var current = containeePaths.slice(0, container.segments.length);\n        var next = containeePaths.slice(container.segments.length);\n        if (!equalPath(container.segments, current))\n            return false;\n        if (!container.children[PRIMARY_OUTLET])\n            return false;\n        return containsSegmentGroupHelper(container.children[PRIMARY_OUTLET], containee, next);\n    }\n}\n/**\n * @description\n *\n * Represents the parsed URL.\n *\n * Since a router state is a tree, and the URL is nothing but a serialized state, the URL is a\n * serialized tree.\n * UrlTree is a data structure that provides a lot of affordances in dealing with URLs\n *\n * ### Example\n *\n * ```\n * @Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const tree: UrlTree =\n *       router.parseUrl('/team/33/(user/victor//support:help)?debug=true#fragment');\n *     const f = tree.fragment; // return 'fragment'\n *     const q = tree.queryParams; // returns {debug: 'true'}\n *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n *     const s: UrlSegment[] = g.segments; // returns 2 segments 'team' and '33'\n *     g.children[PRIMARY_OUTLET].segments; // returns 2 segments 'user' and 'victor'\n *     g.children['support'].segments; // return 1 segment 'help'\n *   }\n * }\n * ```\n *\n *\n */\nvar UrlTree = /** @class */ (function () {\n    /** @internal */\n    function UrlTree(\n    /** The root segment group of the URL tree */\n    root, \n    /** The query params of the URL */\n    queryParams, \n    /** The fragment of the URL */\n    fragment) {\n        this.root = root;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n    }\n    Object.defineProperty(UrlTree.prototype, \"queryParamMap\", {\n        get: function () {\n            if (!this._queryParamMap) {\n                this._queryParamMap = convertToParamMap(this.queryParams);\n            }\n            return this._queryParamMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @docsNotRequired */\n    UrlTree.prototype.toString = function () { return DEFAULT_SERIALIZER.serialize(this); };\n    return UrlTree;\n}());\n/**\n * @description\n *\n * Represents the parsed URL segment group.\n *\n * See `UrlTree` for more information.\n *\n *\n */\nvar UrlSegmentGroup = /** @class */ (function () {\n    function UrlSegmentGroup(\n    /** The URL segments of this group. See `UrlSegment` for more information */\n    segments, \n    /** The list of children of this group */\n    children) {\n        var _this = this;\n        this.segments = segments;\n        this.children = children;\n        /** The parent node in the url tree */\n        this.parent = null;\n        forEach(children, function (v, k) { return v.parent = _this; });\n    }\n    /** Whether the segment has child segments */\n    UrlSegmentGroup.prototype.hasChildren = function () { return this.numberOfChildren > 0; };\n    Object.defineProperty(UrlSegmentGroup.prototype, \"numberOfChildren\", {\n        /** Number of child segments */\n        get: function () { return Object.keys(this.children).length; },\n        enumerable: true,\n        configurable: true\n    });\n    /** @docsNotRequired */\n    UrlSegmentGroup.prototype.toString = function () { return serializePaths(this); };\n    return UrlSegmentGroup;\n}());\n/**\n * @description\n *\n * Represents a single URL segment.\n *\n * A UrlSegment is a part of a URL between the two slashes. It contains a path and the matrix\n * parameters associated with the segment.\n *\n * ## Example\n *\n * ```\n * @Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const tree: UrlTree = router.parseUrl('/team;id=33');\n *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n *     const s: UrlSegment[] = g.segments;\n *     s[0].path; // returns 'team'\n *     s[0].parameters; // returns {id: 33}\n *   }\n * }\n * ```\n *\n *\n */\nvar UrlSegment = /** @class */ (function () {\n    function UrlSegment(\n    /** The path part of a URL segment */\n    path, \n    /** The matrix parameters associated with a segment */\n    parameters) {\n        this.path = path;\n        this.parameters = parameters;\n    }\n    Object.defineProperty(UrlSegment.prototype, \"parameterMap\", {\n        get: function () {\n            if (!this._parameterMap) {\n                this._parameterMap = convertToParamMap(this.parameters);\n            }\n            return this._parameterMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @docsNotRequired */\n    UrlSegment.prototype.toString = function () { return serializePath(this); };\n    return UrlSegment;\n}());\nfunction equalSegments(as, bs) {\n    return equalPath(as, bs) && as.every(function (a, i) { return shallowEqual(a.parameters, bs[i].parameters); });\n}\nfunction equalPath(as, bs) {\n    if (as.length !== bs.length)\n        return false;\n    return as.every(function (a, i) { return a.path === bs[i].path; });\n}\nfunction mapChildrenIntoArray(segment, fn) {\n    var res = [];\n    forEach(segment.children, function (child, childOutlet) {\n        if (childOutlet === PRIMARY_OUTLET) {\n            res = res.concat(fn(child, childOutlet));\n        }\n    });\n    forEach(segment.children, function (child, childOutlet) {\n        if (childOutlet !== PRIMARY_OUTLET) {\n            res = res.concat(fn(child, childOutlet));\n        }\n    });\n    return res;\n}\n/**\n * @description\n *\n * Serializes and deserializes a URL string into a URL tree.\n *\n * The url serialization strategy is customizable. You can\n * make all URLs case insensitive by providing a custom UrlSerializer.\n *\n * See `DefaultUrlSerializer` for an example of a URL serializer.\n *\n *\n */\nvar UrlSerializer = /** @class */ (function () {\n    function UrlSerializer() {\n    }\n    return UrlSerializer;\n}());\n/**\n * @description\n *\n * A default implementation of the `UrlSerializer`.\n *\n * Example URLs:\n *\n * ```\n * /inbox/33(popup:compose)\n * /inbox/33;open=true/messages/44\n * ```\n *\n * DefaultUrlSerializer uses parentheses to serialize secondary segments (e.g., popup:compose), the\n * colon syntax to specify the outlet, and the ';parameter=value' syntax (e.g., open=true) to\n * specify route specific parameters.\n *\n *\n */\nvar DefaultUrlSerializer = /** @class */ (function () {\n    function DefaultUrlSerializer() {\n    }\n    /** Parses a url into a `UrlTree` */\n    DefaultUrlSerializer.prototype.parse = function (url) {\n        var p = new UrlParser(url);\n        return new UrlTree(p.parseRootSegment(), p.parseQueryParams(), p.parseFragment());\n    };\n    /** Converts a `UrlTree` into a url */\n    DefaultUrlSerializer.prototype.serialize = function (tree) {\n        var segment = \"/\" + serializeSegment(tree.root, true);\n        var query = serializeQueryParams(tree.queryParams);\n        var fragment = typeof tree.fragment === \"string\" ? \"#\" + encodeUriFragment(tree.fragment) : '';\n        return \"\" + segment + query + fragment;\n    };\n    return DefaultUrlSerializer;\n}());\nvar DEFAULT_SERIALIZER = new DefaultUrlSerializer();\nfunction serializePaths(segment) {\n    return segment.segments.map(function (p) { return serializePath(p); }).join('/');\n}\nfunction serializeSegment(segment, root) {\n    if (!segment.hasChildren()) {\n        return serializePaths(segment);\n    }\n    if (root) {\n        var primary = segment.children[PRIMARY_OUTLET] ?\n            serializeSegment(segment.children[PRIMARY_OUTLET], false) :\n            '';\n        var children_1 = [];\n        forEach(segment.children, function (v, k) {\n            if (k !== PRIMARY_OUTLET) {\n                children_1.push(k + \":\" + serializeSegment(v, false));\n            }\n        });\n        return children_1.length > 0 ? primary + \"(\" + children_1.join('//') + \")\" : primary;\n    }\n    else {\n        var children = mapChildrenIntoArray(segment, function (v, k) {\n            if (k === PRIMARY_OUTLET) {\n                return [serializeSegment(segment.children[PRIMARY_OUTLET], false)];\n            }\n            return [k + \":\" + serializeSegment(v, false)];\n        });\n        return serializePaths(segment) + \"/(\" + children.join('//') + \")\";\n    }\n}\n/**\n * Encodes a URI string with the default encoding. This function will only ever be called from\n * `encodeUriQuery` or `encodeUriSegment` as it's the base set of encodings to be used. We need\n * a custom encoding because encodeURIComponent is too aggressive and encodes stuff that doesn't\n * have to be encoded per https://url.spec.whatwg.org.\n */\nfunction encodeUriString(s) {\n    return encodeURIComponent(s)\n        .replace(/%40/g, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/g, '$')\n        .replace(/%2C/gi, ',');\n}\n/**\n * This function should be used to encode both keys and values in a query string key/value. In\n * the following URL, you need to call encodeUriQuery on \"k\" and \"v\":\n *\n * http://www.site.org/html;mk=mv?k=v#f\n */\nfunction encodeUriQuery(s) {\n    return encodeUriString(s).replace(/%3B/gi, ';');\n}\n/**\n * This function should be used to encode a URL fragment. In the following URL, you need to call\n * encodeUriFragment on \"f\":\n *\n * http://www.site.org/html;mk=mv?k=v#f\n */\nfunction encodeUriFragment(s) {\n    return encodeURI(s);\n}\n/**\n * This function should be run on any URI segment as well as the key and value in a key/value\n * pair for matrix params. In the following URL, you need to call encodeUriSegment on \"html\",\n * \"mk\", and \"mv\":\n *\n * http://www.site.org/html;mk=mv?k=v#f\n */\nfunction encodeUriSegment(s) {\n    return encodeUriString(s).replace(/\\(/g, '%28').replace(/\\)/g, '%29').replace(/%26/gi, '&');\n}\nfunction decode(s) {\n    return decodeURIComponent(s);\n}\n// Query keys/values should have the \"+\" replaced first, as \"+\" in a query string is \" \".\n// decodeURIComponent function will not decode \"+\" as a space.\nfunction decodeQuery(s) {\n    return decode(s.replace(/\\+/g, '%20'));\n}\nfunction serializePath(path) {\n    return \"\" + encodeUriSegment(path.path) + serializeMatrixParams(path.parameters);\n}\nfunction serializeMatrixParams(params) {\n    return Object.keys(params)\n        .map(function (key) { return \";\" + encodeUriSegment(key) + \"=\" + encodeUriSegment(params[key]); })\n        .join('');\n}\nfunction serializeQueryParams(params) {\n    var strParams = Object.keys(params).map(function (name) {\n        var value = params[name];\n        return Array.isArray(value) ?\n            value.map(function (v) { return encodeUriQuery(name) + \"=\" + encodeUriQuery(v); }).join('&') :\n            encodeUriQuery(name) + \"=\" + encodeUriQuery(value);\n    });\n    return strParams.length ? \"?\" + strParams.join(\"&\") : '';\n}\nvar SEGMENT_RE = /^[^\\/()?;=#]+/;\nfunction matchSegments(str) {\n    var match = str.match(SEGMENT_RE);\n    return match ? match[0] : '';\n}\nvar QUERY_PARAM_RE = /^[^=?&#]+/;\n// Return the name of the query param at the start of the string or an empty string\nfunction matchQueryParams(str) {\n    var match = str.match(QUERY_PARAM_RE);\n    return match ? match[0] : '';\n}\nvar QUERY_PARAM_VALUE_RE = /^[^?&#]+/;\n// Return the value of the query param at the start of the string or an empty string\nfunction matchUrlQueryParamValue(str) {\n    var match = str.match(QUERY_PARAM_VALUE_RE);\n    return match ? match[0] : '';\n}\nvar UrlParser = /** @class */ (function () {\n    function UrlParser(url) {\n        this.url = url;\n        this.remaining = url;\n    }\n    UrlParser.prototype.parseRootSegment = function () {\n        this.consumeOptional('/');\n        if (this.remaining === '' || this.peekStartsWith('?') || this.peekStartsWith('#')) {\n            return new UrlSegmentGroup([], {});\n        }\n        // The root segment group never has segments\n        return new UrlSegmentGroup([], this.parseChildren());\n    };\n    UrlParser.prototype.parseQueryParams = function () {\n        var params = {};\n        if (this.consumeOptional('?')) {\n            do {\n                this.parseQueryParam(params);\n            } while (this.consumeOptional('&'));\n        }\n        return params;\n    };\n    UrlParser.prototype.parseFragment = function () {\n        return this.consumeOptional('#') ? decodeURIComponent(this.remaining) : null;\n    };\n    UrlParser.prototype.parseChildren = function () {\n        if (this.remaining === '') {\n            return {};\n        }\n        this.consumeOptional('/');\n        var segments = [];\n        if (!this.peekStartsWith('(')) {\n            segments.push(this.parseSegment());\n        }\n        while (this.peekStartsWith('/') && !this.peekStartsWith('//') && !this.peekStartsWith('/(')) {\n            this.capture('/');\n            segments.push(this.parseSegment());\n        }\n        var children = {};\n        if (this.peekStartsWith('/(')) {\n            this.capture('/');\n            children = this.parseParens(true);\n        }\n        var res = {};\n        if (this.peekStartsWith('(')) {\n            res = this.parseParens(false);\n        }\n        if (segments.length > 0 || Object.keys(children).length > 0) {\n            res[PRIMARY_OUTLET] = new UrlSegmentGroup(segments, children);\n        }\n        return res;\n    };\n    // parse a segment with its matrix parameters\n    // ie `name;k1=v1;k2`\n    UrlParser.prototype.parseSegment = function () {\n        var path = matchSegments(this.remaining);\n        if (path === '' && this.peekStartsWith(';')) {\n            throw new Error(\"Empty path url segment cannot have parameters: '\" + this.remaining + \"'.\");\n        }\n        this.capture(path);\n        return new UrlSegment(decode(path), this.parseMatrixParams());\n    };\n    UrlParser.prototype.parseMatrixParams = function () {\n        var params = {};\n        while (this.consumeOptional(';')) {\n            this.parseParam(params);\n        }\n        return params;\n    };\n    UrlParser.prototype.parseParam = function (params) {\n        var key = matchSegments(this.remaining);\n        if (!key) {\n            return;\n        }\n        this.capture(key);\n        var value = '';\n        if (this.consumeOptional('=')) {\n            var valueMatch = matchSegments(this.remaining);\n            if (valueMatch) {\n                value = valueMatch;\n                this.capture(value);\n            }\n        }\n        params[decode(key)] = decode(value);\n    };\n    // Parse a single query parameter `name[=value]`\n    UrlParser.prototype.parseQueryParam = function (params) {\n        var key = matchQueryParams(this.remaining);\n        if (!key) {\n            return;\n        }\n        this.capture(key);\n        var value = '';\n        if (this.consumeOptional('=')) {\n            var valueMatch = matchUrlQueryParamValue(this.remaining);\n            if (valueMatch) {\n                value = valueMatch;\n                this.capture(value);\n            }\n        }\n        var decodedKey = decodeQuery(key);\n        var decodedVal = decodeQuery(value);\n        if (params.hasOwnProperty(decodedKey)) {\n            // Append to existing values\n            var currentVal = params[decodedKey];\n            if (!Array.isArray(currentVal)) {\n                currentVal = [currentVal];\n                params[decodedKey] = currentVal;\n            }\n            currentVal.push(decodedVal);\n        }\n        else {\n            // Create a new value\n            params[decodedKey] = decodedVal;\n        }\n    };\n    // parse `(a/b//outlet_name:c/d)`\n    UrlParser.prototype.parseParens = function (allowPrimary) {\n        var segments = {};\n        this.capture('(');\n        while (!this.consumeOptional(')') && this.remaining.length > 0) {\n            var path = matchSegments(this.remaining);\n            var next = this.remaining[path.length];\n            // if is is not one of these characters, then the segment was unescaped\n            // or the group was not closed\n            if (next !== '/' && next !== ')' && next !== ';') {\n                throw new Error(\"Cannot parse url '\" + this.url + \"'\");\n            }\n            var outletName = undefined;\n            if (path.indexOf(':') > -1) {\n                outletName = path.substr(0, path.indexOf(':'));\n                this.capture(outletName);\n                this.capture(':');\n            }\n            else if (allowPrimary) {\n                outletName = PRIMARY_OUTLET;\n            }\n            var children = this.parseChildren();\n            segments[outletName] = Object.keys(children).length === 1 ? children[PRIMARY_OUTLET] :\n                new UrlSegmentGroup([], children);\n            this.consumeOptional('//');\n        }\n        return segments;\n    };\n    UrlParser.prototype.peekStartsWith = function (str) { return this.remaining.startsWith(str); };\n    // Consumes the prefix when it is present and returns whether it has been consumed\n    UrlParser.prototype.consumeOptional = function (str) {\n        if (this.peekStartsWith(str)) {\n            this.remaining = this.remaining.substring(str.length);\n            return true;\n        }\n        return false;\n    };\n    UrlParser.prototype.capture = function (str) {\n        if (!this.consumeOptional(str)) {\n            throw new Error(\"Expected \\\"\" + str + \"\\\".\");\n        }\n    };\n    return UrlParser;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NoMatch = /** @class */ (function () {\n    function NoMatch(segmentGroup) {\n        this.segmentGroup = segmentGroup || null;\n    }\n    return NoMatch;\n}());\nvar AbsoluteRedirect = /** @class */ (function () {\n    function AbsoluteRedirect(urlTree) {\n        this.urlTree = urlTree;\n    }\n    return AbsoluteRedirect;\n}());\nfunction noMatch(segmentGroup) {\n    return new rxjs.Observable(function (obs) { return obs.error(new NoMatch(segmentGroup)); });\n}\nfunction absoluteRedirect(newTree) {\n    return new rxjs.Observable(function (obs) { return obs.error(new AbsoluteRedirect(newTree)); });\n}\nfunction namedOutletsRedirect(redirectTo) {\n    return new rxjs.Observable(function (obs) { return obs.error(new Error(\"Only absolute redirects can have named outlets. redirectTo: '\" + redirectTo + \"'\")); });\n}\nfunction canLoadFails(route) {\n    return new rxjs.Observable(function (obs) { return obs.error(navigationCancelingError(\"Cannot load children because the guard of the route \\\"path: '\" + route.path + \"'\\\" returned false\")); });\n}\n/**\n * Returns the `UrlTree` with the redirection applied.\n *\n * Lazy modules are loaded along the way.\n */\nfunction applyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config) {\n    return new ApplyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config).apply();\n}\nvar ApplyRedirects = /** @class */ (function () {\n    function ApplyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config) {\n        this.configLoader = configLoader;\n        this.urlSerializer = urlSerializer;\n        this.urlTree = urlTree;\n        this.config = config;\n        this.allowRedirects = true;\n        this.ngModule = moduleInjector.get(core.NgModuleRef);\n    }\n    ApplyRedirects.prototype.apply = function () {\n        var _this = this;\n        var expanded$ = this.expandSegmentGroup(this.ngModule, this.config, this.urlTree.root, PRIMARY_OUTLET);\n        var urlTrees$ = expanded$.pipe(operators.map(function (rootSegmentGroup) { return _this.createUrlTree(rootSegmentGroup, _this.urlTree.queryParams, _this.urlTree.fragment); }));\n        return urlTrees$.pipe(operators.catchError(function (e) {\n            if (e instanceof AbsoluteRedirect) {\n                // after an absolute redirect we do not apply any more redirects!\n                _this.allowRedirects = false;\n                // we need to run matching, so we can fetch all lazy-loaded modules\n                return _this.match(e.urlTree);\n            }\n            if (e instanceof NoMatch) {\n                throw _this.noMatchError(e);\n            }\n            throw e;\n        }));\n    };\n    ApplyRedirects.prototype.match = function (tree) {\n        var _this = this;\n        var expanded$ = this.expandSegmentGroup(this.ngModule, this.config, tree.root, PRIMARY_OUTLET);\n        var mapped$ = expanded$.pipe(operators.map(function (rootSegmentGroup) {\n            return _this.createUrlTree(rootSegmentGroup, tree.queryParams, tree.fragment);\n        }));\n        return mapped$.pipe(operators.catchError(function (e) {\n            if (e instanceof NoMatch) {\n                throw _this.noMatchError(e);\n            }\n            throw e;\n        }));\n    };\n    ApplyRedirects.prototype.noMatchError = function (e) {\n        return new Error(\"Cannot match any routes. URL Segment: '\" + e.segmentGroup + \"'\");\n    };\n    ApplyRedirects.prototype.createUrlTree = function (rootCandidate, queryParams, fragment) {\n        var root = rootCandidate.segments.length > 0 ?\n            new UrlSegmentGroup([], (_a = {}, _a[PRIMARY_OUTLET] = rootCandidate, _a)) :\n            rootCandidate;\n        return new UrlTree(root, queryParams, fragment);\n        var _a;\n    };\n    ApplyRedirects.prototype.expandSegmentGroup = function (ngModule, routes, segmentGroup, outlet) {\n        if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n            return this.expandChildren(ngModule, routes, segmentGroup)\n                .pipe(operators.map(function (children) { return new UrlSegmentGroup([], children); }));\n        }\n        return this.expandSegment(ngModule, segmentGroup, routes, segmentGroup.segments, outlet, true);\n    };\n    // Recursively expand segment groups for all the child outlets\n    ApplyRedirects.prototype.expandChildren = function (ngModule, routes, segmentGroup) {\n        var _this = this;\n        return waitForMap(segmentGroup.children, function (childOutlet, child) { return _this.expandSegmentGroup(ngModule, routes, child, childOutlet); });\n    };\n    ApplyRedirects.prototype.expandSegment = function (ngModule, segmentGroup, routes, segments, outlet, allowRedirects) {\n        var _this = this;\n        return rxjs.of.apply(void 0, __spread(routes)).pipe(operators.map(function (r) {\n            var expanded$ = _this.expandSegmentAgainstRoute(ngModule, segmentGroup, routes, r, segments, outlet, allowRedirects);\n            return expanded$.pipe(operators.catchError(function (e) {\n                if (e instanceof NoMatch) {\n                    // TODO(i): this return type doesn't match the declared Observable<UrlSegmentGroup> -\n                    // talk to Jason\n                    return rxjs.of(null);\n                }\n                throw e;\n            }));\n        }), operators.concatAll(), operators.first(function (s) { return !!s; }), operators.catchError(function (e, _) {\n            if (e instanceof rxjs.EmptyError || e.name === 'EmptyError') {\n                if (_this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n                    return rxjs.of(new UrlSegmentGroup([], {}));\n                }\n                throw new NoMatch(segmentGroup);\n            }\n            throw e;\n        }));\n    };\n    ApplyRedirects.prototype.noLeftoversInUrl = function (segmentGroup, segments, outlet) {\n        return segments.length === 0 && !segmentGroup.children[outlet];\n    };\n    ApplyRedirects.prototype.expandSegmentAgainstRoute = function (ngModule, segmentGroup, routes, route, paths, outlet, allowRedirects) {\n        if (getOutlet(route) !== outlet) {\n            return noMatch(segmentGroup);\n        }\n        if (route.redirectTo === undefined) {\n            return this.matchSegmentAgainstRoute(ngModule, segmentGroup, route, paths);\n        }\n        if (allowRedirects && this.allowRedirects) {\n            return this.expandSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, paths, outlet);\n        }\n        return noMatch(segmentGroup);\n    };\n    ApplyRedirects.prototype.expandSegmentAgainstRouteUsingRedirect = function (ngModule, segmentGroup, routes, route, segments, outlet) {\n        if (route.path === '**') {\n            return this.expandWildCardWithParamsAgainstRouteUsingRedirect(ngModule, routes, route, outlet);\n        }\n        return this.expandRegularSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, segments, outlet);\n    };\n    ApplyRedirects.prototype.expandWildCardWithParamsAgainstRouteUsingRedirect = function (ngModule, routes, route, outlet) {\n        var _this = this;\n        var newTree = this.applyRedirectCommands([], route.redirectTo, {});\n        if (route.redirectTo.startsWith('/')) {\n            return absoluteRedirect(newTree);\n        }\n        return this.lineralizeSegments(route, newTree).pipe(operators.mergeMap(function (newSegments) {\n            var group = new UrlSegmentGroup(newSegments, {});\n            return _this.expandSegment(ngModule, group, routes, newSegments, outlet, false);\n        }));\n    };\n    ApplyRedirects.prototype.expandRegularSegmentAgainstRouteUsingRedirect = function (ngModule, segmentGroup, routes, route, segments, outlet) {\n        var _this = this;\n        var _a = match(segmentGroup, route, segments), matched = _a.matched, consumedSegments = _a.consumedSegments, lastChild = _a.lastChild, positionalParamSegments = _a.positionalParamSegments;\n        if (!matched)\n            return noMatch(segmentGroup);\n        var newTree = this.applyRedirectCommands(consumedSegments, route.redirectTo, positionalParamSegments);\n        if (route.redirectTo.startsWith('/')) {\n            return absoluteRedirect(newTree);\n        }\n        return this.lineralizeSegments(route, newTree).pipe(operators.mergeMap(function (newSegments) {\n            return _this.expandSegment(ngModule, segmentGroup, routes, newSegments.concat(segments.slice(lastChild)), outlet, false);\n        }));\n    };\n    ApplyRedirects.prototype.matchSegmentAgainstRoute = function (ngModule, rawSegmentGroup, route, segments) {\n        var _this = this;\n        if (route.path === '**') {\n            if (route.loadChildren) {\n                return this.configLoader.load(ngModule.injector, route)\n                    .pipe(operators.map(function (cfg) {\n                    route._loadedConfig = cfg;\n                    return new UrlSegmentGroup(segments, {});\n                }));\n            }\n            return rxjs.of(new UrlSegmentGroup(segments, {}));\n        }\n        var _a = match(rawSegmentGroup, route, segments), matched = _a.matched, consumedSegments = _a.consumedSegments, lastChild = _a.lastChild;\n        if (!matched)\n            return noMatch(rawSegmentGroup);\n        var rawSlicedSegments = segments.slice(lastChild);\n        var childConfig$ = this.getChildConfig(ngModule, route);\n        return childConfig$.pipe(operators.mergeMap(function (routerConfig) {\n            var childModule = routerConfig.module;\n            var childConfig = routerConfig.routes;\n            var _a = split(rawSegmentGroup, consumedSegments, rawSlicedSegments, childConfig), segmentGroup = _a.segmentGroup, slicedSegments = _a.slicedSegments;\n            if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n                var expanded$_1 = _this.expandChildren(childModule, childConfig, segmentGroup);\n                return expanded$_1.pipe(operators.map(function (children) { return new UrlSegmentGroup(consumedSegments, children); }));\n            }\n            if (childConfig.length === 0 && slicedSegments.length === 0) {\n                return rxjs.of(new UrlSegmentGroup(consumedSegments, {}));\n            }\n            var expanded$ = _this.expandSegment(childModule, segmentGroup, childConfig, slicedSegments, PRIMARY_OUTLET, true);\n            return expanded$.pipe(operators.map(function (cs) {\n                return new UrlSegmentGroup(consumedSegments.concat(cs.segments), cs.children);\n            }));\n        }));\n    };\n    ApplyRedirects.prototype.getChildConfig = function (ngModule, route) {\n        var _this = this;\n        if (route.children) {\n            // The children belong to the same module\n            return rxjs.of(new LoadedRouterConfig(route.children, ngModule));\n        }\n        if (route.loadChildren) {\n            // lazy children belong to the loaded module\n            if (route._loadedConfig !== undefined) {\n                return rxjs.of(route._loadedConfig);\n            }\n            return runCanLoadGuard(ngModule.injector, route).pipe(operators.mergeMap(function (shouldLoad) {\n                if (shouldLoad) {\n                    return _this.configLoader.load(ngModule.injector, route)\n                        .pipe(operators.map(function (cfg) {\n                        route._loadedConfig = cfg;\n                        return cfg;\n                    }));\n                }\n                return canLoadFails(route);\n            }));\n        }\n        return rxjs.of(new LoadedRouterConfig([], ngModule));\n    };\n    ApplyRedirects.prototype.lineralizeSegments = function (route, urlTree) {\n        var res = [];\n        var c = urlTree.root;\n        while (true) {\n            res = res.concat(c.segments);\n            if (c.numberOfChildren === 0) {\n                return rxjs.of(res);\n            }\n            if (c.numberOfChildren > 1 || !c.children[PRIMARY_OUTLET]) {\n                return namedOutletsRedirect(route.redirectTo);\n            }\n            c = c.children[PRIMARY_OUTLET];\n        }\n    };\n    ApplyRedirects.prototype.applyRedirectCommands = function (segments, redirectTo, posParams) {\n        return this.applyRedirectCreatreUrlTree(redirectTo, this.urlSerializer.parse(redirectTo), segments, posParams);\n    };\n    ApplyRedirects.prototype.applyRedirectCreatreUrlTree = function (redirectTo, urlTree, segments, posParams) {\n        var newRoot = this.createSegmentGroup(redirectTo, urlTree.root, segments, posParams);\n        return new UrlTree(newRoot, this.createQueryParams(urlTree.queryParams, this.urlTree.queryParams), urlTree.fragment);\n    };\n    ApplyRedirects.prototype.createQueryParams = function (redirectToParams, actualParams) {\n        var res = {};\n        forEach(redirectToParams, function (v, k) {\n            var copySourceValue = typeof v === 'string' && v.startsWith(':');\n            if (copySourceValue) {\n                var sourceName = v.substring(1);\n                res[k] = actualParams[sourceName];\n            }\n            else {\n                res[k] = v;\n            }\n        });\n        return res;\n    };\n    ApplyRedirects.prototype.createSegmentGroup = function (redirectTo, group, segments, posParams) {\n        var _this = this;\n        var updatedSegments = this.createSegments(redirectTo, group.segments, segments, posParams);\n        var children = {};\n        forEach(group.children, function (child, name) {\n            children[name] = _this.createSegmentGroup(redirectTo, child, segments, posParams);\n        });\n        return new UrlSegmentGroup(updatedSegments, children);\n    };\n    ApplyRedirects.prototype.createSegments = function (redirectTo, redirectToSegments, actualSegments, posParams) {\n        var _this = this;\n        return redirectToSegments.map(function (s) { return s.path.startsWith(':') ? _this.findPosParam(redirectTo, s, posParams) :\n            _this.findOrReturn(s, actualSegments); });\n    };\n    ApplyRedirects.prototype.findPosParam = function (redirectTo, redirectToUrlSegment, posParams) {\n        var pos = posParams[redirectToUrlSegment.path.substring(1)];\n        if (!pos)\n            throw new Error(\"Cannot redirect to '\" + redirectTo + \"'. Cannot find '\" + redirectToUrlSegment.path + \"'.\");\n        return pos;\n    };\n    ApplyRedirects.prototype.findOrReturn = function (redirectToUrlSegment, actualSegments) {\n        var idx = 0;\n        try {\n            for (var actualSegments_1 = __values(actualSegments), actualSegments_1_1 = actualSegments_1.next(); !actualSegments_1_1.done; actualSegments_1_1 = actualSegments_1.next()) {\n                var s = actualSegments_1_1.value;\n                if (s.path === redirectToUrlSegment.path) {\n                    actualSegments.splice(idx);\n                    return s;\n                }\n                idx++;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (actualSegments_1_1 && !actualSegments_1_1.done && (_a = actualSegments_1.return)) _a.call(actualSegments_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return redirectToUrlSegment;\n        var e_1, _a;\n    };\n    return ApplyRedirects;\n}());\nfunction runCanLoadGuard(moduleInjector, route) {\n    var canLoad = route.canLoad;\n    if (!canLoad || canLoad.length === 0)\n        return rxjs.of(true);\n    var obs = rxjs.from(canLoad).pipe(operators.map(function (injectionToken) {\n        var guard = moduleInjector.get(injectionToken);\n        return wrapIntoObservable(guard.canLoad ? guard.canLoad(route) : guard(route));\n    }));\n    return andObservables(obs);\n}\nfunction match(segmentGroup, route, segments) {\n    if (route.path === '') {\n        if ((route.pathMatch === 'full') && (segmentGroup.hasChildren() || segments.length > 0)) {\n            return { matched: false, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n        }\n        return { matched: true, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n    }\n    var matcher = route.matcher || defaultUrlMatcher;\n    var res = matcher(segments, segmentGroup, route);\n    if (!res) {\n        return {\n            matched: false,\n            consumedSegments: [],\n            lastChild: 0,\n            positionalParamSegments: {},\n        };\n    }\n    return {\n        matched: true,\n        consumedSegments: res.consumed,\n        lastChild: res.consumed.length,\n        positionalParamSegments: res.posParams,\n    };\n}\nfunction split(segmentGroup, consumedSegments, slicedSegments, config) {\n    if (slicedSegments.length > 0 &&\n        containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n        var s = new UrlSegmentGroup(consumedSegments, createChildrenForEmptySegments(config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n        return { segmentGroup: mergeTrivialChildren(s), slicedSegments: [] };\n    }\n    if (slicedSegments.length === 0 &&\n        containsEmptyPathRedirects(segmentGroup, slicedSegments, config)) {\n        var s = new UrlSegmentGroup(segmentGroup.segments, addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, config, segmentGroup.children));\n        return { segmentGroup: mergeTrivialChildren(s), slicedSegments: slicedSegments };\n    }\n    return { segmentGroup: segmentGroup, slicedSegments: slicedSegments };\n}\nfunction mergeTrivialChildren(s) {\n    if (s.numberOfChildren === 1 && s.children[PRIMARY_OUTLET]) {\n        var c = s.children[PRIMARY_OUTLET];\n        return new UrlSegmentGroup(s.segments.concat(c.segments), c.children);\n    }\n    return s;\n}\nfunction addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, routes, children) {\n    var res = {};\n    try {\n        for (var routes_1 = __values(routes), routes_1_1 = routes_1.next(); !routes_1_1.done; routes_1_1 = routes_1.next()) {\n            var r = routes_1_1.value;\n            if (isEmptyPathRedirect(segmentGroup, slicedSegments, r) && !children[getOutlet(r)]) {\n                res[getOutlet(r)] = new UrlSegmentGroup([], {});\n            }\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (routes_1_1 && !routes_1_1.done && (_a = routes_1.return)) _a.call(routes_1);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    return __assign({}, children, res);\n    var e_2, _a;\n}\nfunction createChildrenForEmptySegments(routes, primarySegmentGroup) {\n    var res = {};\n    res[PRIMARY_OUTLET] = primarySegmentGroup;\n    try {\n        for (var routes_2 = __values(routes), routes_2_1 = routes_2.next(); !routes_2_1.done; routes_2_1 = routes_2.next()) {\n            var r = routes_2_1.value;\n            if (r.path === '' && getOutlet(r) !== PRIMARY_OUTLET) {\n                res[getOutlet(r)] = new UrlSegmentGroup([], {});\n            }\n        }\n    }\n    catch (e_3_1) { e_3 = { error: e_3_1 }; }\n    finally {\n        try {\n            if (routes_2_1 && !routes_2_1.done && (_a = routes_2.return)) _a.call(routes_2);\n        }\n        finally { if (e_3) throw e_3.error; }\n    }\n    return res;\n    var e_3, _a;\n}\nfunction containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, segments, routes) {\n    return routes.some(function (r) { return isEmptyPathRedirect(segmentGroup, segments, r) && getOutlet(r) !== PRIMARY_OUTLET; });\n}\nfunction containsEmptyPathRedirects(segmentGroup, segments, routes) {\n    return routes.some(function (r) { return isEmptyPathRedirect(segmentGroup, segments, r); });\n}\nfunction isEmptyPathRedirect(segmentGroup, segments, r) {\n    if ((segmentGroup.hasChildren() || segments.length > 0) && r.pathMatch === 'full') {\n        return false;\n    }\n    return r.path === '' && r.redirectTo !== undefined;\n}\nfunction getOutlet(route) {\n    return route.outlet || PRIMARY_OUTLET;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Tree = /** @class */ (function () {\n    function Tree(root) {\n        this._root = root;\n    }\n    Object.defineProperty(Tree.prototype, \"root\", {\n        get: function () { return this._root.value; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @internal\n     */\n    Tree.prototype.parent = function (t) {\n        var p = this.pathFromRoot(t);\n        return p.length > 1 ? p[p.length - 2] : null;\n    };\n    /**\n     * @internal\n     */\n    Tree.prototype.children = function (t) {\n        var n = findNode(t, this._root);\n        return n ? n.children.map(function (t) { return t.value; }) : [];\n    };\n    /**\n     * @internal\n     */\n    Tree.prototype.firstChild = function (t) {\n        var n = findNode(t, this._root);\n        return n && n.children.length > 0 ? n.children[0].value : null;\n    };\n    /**\n     * @internal\n     */\n    Tree.prototype.siblings = function (t) {\n        var p = findPath(t, this._root);\n        if (p.length < 2)\n            return [];\n        var c = p[p.length - 2].children.map(function (c) { return c.value; });\n        return c.filter(function (cc) { return cc !== t; });\n    };\n    /**\n     * @internal\n     */\n    Tree.prototype.pathFromRoot = function (t) { return findPath(t, this._root).map(function (s) { return s.value; }); };\n    return Tree;\n}());\n// DFS for the node matching the value\nfunction findNode(value, node) {\n    if (value === node.value)\n        return node;\n    try {\n        for (var _a = __values(node.children), _b = _a.next(); !_b.done; _b = _a.next()) {\n            var child = _b.value;\n            var node_1 = findNode(value, child);\n            if (node_1)\n                return node_1;\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return null;\n    var e_1, _c;\n}\n// Return the path to the node with the given value using DFS\nfunction findPath(value, node) {\n    if (value === node.value)\n        return [node];\n    try {\n        for (var _a = __values(node.children), _b = _a.next(); !_b.done; _b = _a.next()) {\n            var child = _b.value;\n            var path = findPath(value, child);\n            if (path.length) {\n                path.unshift(node);\n                return path;\n            }\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    return [];\n    var e_2, _c;\n}\nvar TreeNode = /** @class */ (function () {\n    function TreeNode(value, children) {\n        this.value = value;\n        this.children = children;\n    }\n    TreeNode.prototype.toString = function () { return \"TreeNode(\" + this.value + \")\"; };\n    return TreeNode;\n}());\n// Return the list of T indexed by outlet name\nfunction nodeChildrenAsMap(node) {\n    var map$$1 = {};\n    if (node) {\n        node.children.forEach(function (child) { return map$$1[child.value.outlet] = child; });\n    }\n    return map$$1;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Represents the state of the router.\n *\n * RouterState is a tree of activated routes. Every node in this tree knows about the \"consumed\" URL\n * segments, the extracted parameters, and the resolved data.\n *\n * ### Example\n *\n * ```\n * @Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const state: RouterState = router.routerState;\n *     const root: ActivatedRoute = state.root;\n *     const child = root.firstChild;\n *     const id: Observable<string> = child.params.map(p => p.id);\n *     //...\n *   }\n * }\n * ```\n *\n * See `ActivatedRoute` for more information.\n *\n *\n */\nvar RouterState = /** @class */ (function (_super) {\n    __extends(RouterState, _super);\n    /** @internal */\n    function RouterState(root, \n    /** The current snapshot of the router state */\n    snapshot) {\n        var _this = _super.call(this, root) || this;\n        _this.snapshot = snapshot;\n        setRouterState(_this, root);\n        return _this;\n    }\n    RouterState.prototype.toString = function () { return this.snapshot.toString(); };\n    return RouterState;\n}(Tree));\nfunction createEmptyState(urlTree, rootComponent) {\n    var snapshot = createEmptyStateSnapshot(urlTree, rootComponent);\n    var emptyUrl = new rxjs.BehaviorSubject([new UrlSegment('', {})]);\n    var emptyParams = new rxjs.BehaviorSubject({});\n    var emptyData = new rxjs.BehaviorSubject({});\n    var emptyQueryParams = new rxjs.BehaviorSubject({});\n    var fragment = new rxjs.BehaviorSubject('');\n    var activated = new ActivatedRoute(emptyUrl, emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, snapshot.root);\n    activated.snapshot = snapshot.root;\n    return new RouterState(new TreeNode(activated, []), snapshot);\n}\nfunction createEmptyStateSnapshot(urlTree, rootComponent) {\n    var emptyParams = {};\n    var emptyData = {};\n    var emptyQueryParams = {};\n    var fragment = '';\n    var activated = new ActivatedRouteSnapshot([], emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, null, urlTree.root, -1, {});\n    return new RouterStateSnapshot('', new TreeNode(activated, []));\n}\n/**\n * @description\n *\n * Contains the information about a route associated with a component loaded in an\n * outlet.  An `ActivatedRoute` can also be used to traverse the router state tree.\n *\n * ```\n * @Component({...})\n * class MyComponent {\n *   constructor(route: ActivatedRoute) {\n *     const id: Observable<string> = route.params.map(p => p.id);\n *     const url: Observable<string> = route.url.map(segments => segments.join(''));\n *     // route.data includes both `data` and `resolve`\n *     const user = route.data.map(d => d.user);\n *   }\n * }\n * ```\n *\n *\n */\nvar ActivatedRoute = /** @class */ (function () {\n    /** @internal */\n    function ActivatedRoute(\n    /** An observable of the URL segments matched by this route */\n    url, \n    /** An observable of the matrix parameters scoped to this route */\n    params, \n    /** An observable of the query parameters shared by all the routes */\n    queryParams, \n    /** An observable of the URL fragment shared by all the routes */\n    fragment, \n    /** An observable of the static and resolved data of this route. */\n    data, \n    /** The outlet name of the route. It's a constant */\n    outlet, \n    /** The component of the route. It's a constant */\n    // TODO(vsavkin): remove |string\n    component, futureSnapshot) {\n        this.url = url;\n        this.params = params;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n        this.data = data;\n        this.outlet = outlet;\n        this.component = component;\n        this._futureSnapshot = futureSnapshot;\n    }\n    Object.defineProperty(ActivatedRoute.prototype, \"routeConfig\", {\n        /** The configuration used to match this route */\n        get: function () { return this._futureSnapshot.routeConfig; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"root\", {\n        /** The root of the router state */\n        get: function () { return this._routerState.root; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"parent\", {\n        /** The parent of this route in the router state tree */\n        get: function () { return this._routerState.parent(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"firstChild\", {\n        /** The first child of this route in the router state tree */\n        get: function () { return this._routerState.firstChild(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"children\", {\n        /** The children of this route in the router state tree */\n        get: function () { return this._routerState.children(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"pathFromRoot\", {\n        /** The path from the root of the router state tree to this route */\n        get: function () { return this._routerState.pathFromRoot(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"paramMap\", {\n        get: function () {\n            if (!this._paramMap) {\n                this._paramMap = this.params.pipe(operators.map(function (p) { return convertToParamMap(p); }));\n            }\n            return this._paramMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"queryParamMap\", {\n        get: function () {\n            if (!this._queryParamMap) {\n                this._queryParamMap =\n                    this.queryParams.pipe(operators.map(function (p) { return convertToParamMap(p); }));\n            }\n            return this._queryParamMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ActivatedRoute.prototype.toString = function () {\n        return this.snapshot ? this.snapshot.toString() : \"Future(\" + this._futureSnapshot + \")\";\n    };\n    return ActivatedRoute;\n}());\n/**\n * Returns the inherited params, data, and resolve for a given route.\n * By default, this only inherits values up to the nearest path-less or component-less route.\n * @internal\n */\nfunction inheritedParamsDataResolve(route, paramsInheritanceStrategy) {\n    if (paramsInheritanceStrategy === void 0) { paramsInheritanceStrategy = 'emptyOnly'; }\n    var pathFromRoot = route.pathFromRoot;\n    var inheritingStartingFrom = 0;\n    if (paramsInheritanceStrategy !== 'always') {\n        inheritingStartingFrom = pathFromRoot.length - 1;\n        while (inheritingStartingFrom >= 1) {\n            var current = pathFromRoot[inheritingStartingFrom];\n            var parent_1 = pathFromRoot[inheritingStartingFrom - 1];\n            // current route is an empty path => inherits its parent's params and data\n            if (current.routeConfig && current.routeConfig.path === '') {\n                inheritingStartingFrom--;\n                // parent is componentless => current route should inherit its params and data\n            }\n            else if (!parent_1.component) {\n                inheritingStartingFrom--;\n            }\n            else {\n                break;\n            }\n        }\n    }\n    return flattenInherited(pathFromRoot.slice(inheritingStartingFrom));\n}\n/** @internal */\nfunction flattenInherited(pathFromRoot) {\n    return pathFromRoot.reduce(function (res, curr) {\n        var params = __assign({}, res.params, curr.params);\n        var data = __assign({}, res.data, curr.data);\n        var resolve = __assign({}, res.resolve, curr._resolvedData);\n        return { params: params, data: data, resolve: resolve };\n    }, { params: {}, data: {}, resolve: {} });\n}\n/**\n * @description\n *\n * Contains the information about a route associated with a component loaded in an\n * outlet at a particular moment in time. ActivatedRouteSnapshot can also be used to\n * traverse the router state tree.\n *\n * ```\n * @Component({templateUrl:'./my-component.html'})\n * class MyComponent {\n *   constructor(route: ActivatedRoute) {\n *     const id: string = route.snapshot.params.id;\n *     const url: string = route.snapshot.url.join('');\n *     const user = route.snapshot.data.user;\n *   }\n * }\n * ```\n *\n *\n */\nvar ActivatedRouteSnapshot = /** @class */ (function () {\n    /** @internal */\n    function ActivatedRouteSnapshot(\n    /** The URL segments matched by this route */\n    url, \n    /** The matrix parameters scoped to this route */\n    params, \n    /** The query parameters shared by all the routes */\n    queryParams, \n    /** The URL fragment shared by all the routes */\n    fragment, \n    /** The static and resolved data of this route */\n    data, \n    /** The outlet name of the route */\n    outlet, \n    /** The component of the route */\n    component, routeConfig, urlSegment, lastPathIndex, resolve) {\n        this.url = url;\n        this.params = params;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n        this.data = data;\n        this.outlet = outlet;\n        this.component = component;\n        this.routeConfig = routeConfig;\n        this._urlSegment = urlSegment;\n        this._lastPathIndex = lastPathIndex;\n        this._resolve = resolve;\n    }\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"root\", {\n        /** The root of the router state */\n        get: function () { return this._routerState.root; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"parent\", {\n        /** The parent of this route in the router state tree */\n        get: function () { return this._routerState.parent(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"firstChild\", {\n        /** The first child of this route in the router state tree */\n        get: function () { return this._routerState.firstChild(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"children\", {\n        /** The children of this route in the router state tree */\n        get: function () { return this._routerState.children(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"pathFromRoot\", {\n        /** The path from the root of the router state tree to this route */\n        get: function () { return this._routerState.pathFromRoot(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"paramMap\", {\n        get: function () {\n            if (!this._paramMap) {\n                this._paramMap = convertToParamMap(this.params);\n            }\n            return this._paramMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"queryParamMap\", {\n        get: function () {\n            if (!this._queryParamMap) {\n                this._queryParamMap = convertToParamMap(this.queryParams);\n            }\n            return this._queryParamMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ActivatedRouteSnapshot.prototype.toString = function () {\n        var url = this.url.map(function (segment) { return segment.toString(); }).join('/');\n        var matched = this.routeConfig ? this.routeConfig.path : '';\n        return \"Route(url:'\" + url + \"', path:'\" + matched + \"')\";\n    };\n    return ActivatedRouteSnapshot;\n}());\n/**\n * @description\n *\n * Represents the state of the router at a moment in time.\n *\n * This is a tree of activated route snapshots. Every node in this tree knows about\n * the \"consumed\" URL segments, the extracted parameters, and the resolved data.\n *\n * ### Example\n *\n * ```\n * @Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const state: RouterState = router.routerState;\n *     const snapshot: RouterStateSnapshot = state.snapshot;\n *     const root: ActivatedRouteSnapshot = snapshot.root;\n *     const child = root.firstChild;\n *     const id: Observable<string> = child.params.map(p => p.id);\n *     //...\n *   }\n * }\n * ```\n *\n *\n */\nvar RouterStateSnapshot = /** @class */ (function (_super) {\n    __extends(RouterStateSnapshot, _super);\n    /** @internal */\n    function RouterStateSnapshot(\n    /** The url from which this snapshot was created */\n    url, root) {\n        var _this = _super.call(this, root) || this;\n        _this.url = url;\n        setRouterState(_this, root);\n        return _this;\n    }\n    RouterStateSnapshot.prototype.toString = function () { return serializeNode(this._root); };\n    return RouterStateSnapshot;\n}(Tree));\nfunction setRouterState(state, node) {\n    node.value._routerState = state;\n    node.children.forEach(function (c) { return setRouterState(state, c); });\n}\nfunction serializeNode(node) {\n    var c = node.children.length > 0 ? \" { \" + node.children.map(serializeNode).join(', ') + \" } \" : '';\n    return \"\" + node.value + c;\n}\n/**\n * The expectation is that the activate route is created with the right set of parameters.\n * So we push new values into the observables only when they are not the initial values.\n * And we detect that by checking if the snapshot field is set.\n */\nfunction advanceActivatedRoute(route) {\n    if (route.snapshot) {\n        var currentSnapshot = route.snapshot;\n        var nextSnapshot = route._futureSnapshot;\n        route.snapshot = nextSnapshot;\n        if (!shallowEqual(currentSnapshot.queryParams, nextSnapshot.queryParams)) {\n            route.queryParams.next(nextSnapshot.queryParams);\n        }\n        if (currentSnapshot.fragment !== nextSnapshot.fragment) {\n            route.fragment.next(nextSnapshot.fragment);\n        }\n        if (!shallowEqual(currentSnapshot.params, nextSnapshot.params)) {\n            route.params.next(nextSnapshot.params);\n        }\n        if (!shallowEqualArrays(currentSnapshot.url, nextSnapshot.url)) {\n            route.url.next(nextSnapshot.url);\n        }\n        if (!shallowEqual(currentSnapshot.data, nextSnapshot.data)) {\n            route.data.next(nextSnapshot.data);\n        }\n    }\n    else {\n        route.snapshot = route._futureSnapshot;\n        // this is for resolved data\n        route.data.next(route._futureSnapshot.data);\n    }\n}\nfunction equalParamsAndUrlSegments(a, b) {\n    var equalUrlParams = shallowEqual(a.params, b.params) && equalSegments(a.url, b.url);\n    var parentsMismatch = !a.parent !== !b.parent;\n    return equalUrlParams && !parentsMismatch &&\n        (!a.parent || equalParamsAndUrlSegments(a.parent, b.parent));\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction createRouterState(routeReuseStrategy, curr, prevState) {\n    var root = createNode(routeReuseStrategy, curr._root, prevState ? prevState._root : undefined);\n    return new RouterState(root, curr);\n}\nfunction createNode(routeReuseStrategy, curr, prevState) {\n    // reuse an activated route that is currently displayed on the screen\n    if (prevState && routeReuseStrategy.shouldReuseRoute(curr.value, prevState.value.snapshot)) {\n        var value = prevState.value;\n        value._futureSnapshot = curr.value;\n        var children = createOrReuseChildren(routeReuseStrategy, curr, prevState);\n        return new TreeNode(value, children);\n        // retrieve an activated route that is used to be displayed, but is not currently displayed\n    }\n    else {\n        var detachedRouteHandle = routeReuseStrategy.retrieve(curr.value);\n        if (detachedRouteHandle) {\n            var tree = detachedRouteHandle.route;\n            setFutureSnapshotsOfActivatedRoutes(curr, tree);\n            return tree;\n        }\n        else {\n            var value = createActivatedRoute(curr.value);\n            var children = curr.children.map(function (c) { return createNode(routeReuseStrategy, c); });\n            return new TreeNode(value, children);\n        }\n    }\n}\nfunction setFutureSnapshotsOfActivatedRoutes(curr, result) {\n    if (curr.value.routeConfig !== result.value.routeConfig) {\n        throw new Error('Cannot reattach ActivatedRouteSnapshot created from a different route');\n    }\n    if (curr.children.length !== result.children.length) {\n        throw new Error('Cannot reattach ActivatedRouteSnapshot with a different number of children');\n    }\n    result.value._futureSnapshot = curr.value;\n    for (var i = 0; i < curr.children.length; ++i) {\n        setFutureSnapshotsOfActivatedRoutes(curr.children[i], result.children[i]);\n    }\n}\nfunction createOrReuseChildren(routeReuseStrategy, curr, prevState) {\n    return curr.children.map(function (child) {\n        try {\n            for (var _a = __values(prevState.children), _b = _a.next(); !_b.done; _b = _a.next()) {\n                var p = _b.value;\n                if (routeReuseStrategy.shouldReuseRoute(p.value.snapshot, child.value)) {\n                    return createNode(routeReuseStrategy, child, p);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return createNode(routeReuseStrategy, child);\n        var e_1, _c;\n    });\n}\nfunction createActivatedRoute(c) {\n    return new ActivatedRoute(new rxjs.BehaviorSubject(c.url), new rxjs.BehaviorSubject(c.params), new rxjs.BehaviorSubject(c.queryParams), new rxjs.BehaviorSubject(c.fragment), new rxjs.BehaviorSubject(c.data), c.outlet, c.component, c);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction createUrlTree(route, urlTree, commands, queryParams, fragment) {\n    if (commands.length === 0) {\n        return tree(urlTree.root, urlTree.root, urlTree, queryParams, fragment);\n    }\n    var nav = computeNavigation(commands);\n    if (nav.toRoot()) {\n        return tree(urlTree.root, new UrlSegmentGroup([], {}), urlTree, queryParams, fragment);\n    }\n    var startingPosition = findStartingPosition(nav, urlTree, route);\n    var segmentGroup = startingPosition.processChildren ?\n        updateSegmentGroupChildren(startingPosition.segmentGroup, startingPosition.index, nav.commands) :\n        updateSegmentGroup(startingPosition.segmentGroup, startingPosition.index, nav.commands);\n    return tree(startingPosition.segmentGroup, segmentGroup, urlTree, queryParams, fragment);\n}\nfunction isMatrixParams(command) {\n    return typeof command === 'object' && command != null && !command.outlets && !command.segmentPath;\n}\nfunction tree(oldSegmentGroup, newSegmentGroup, urlTree, queryParams, fragment) {\n    var qp = {};\n    if (queryParams) {\n        forEach(queryParams, function (value, name) {\n            qp[name] = Array.isArray(value) ? value.map(function (v) { return \"\" + v; }) : \"\" + value;\n        });\n    }\n    if (urlTree.root === oldSegmentGroup) {\n        return new UrlTree(newSegmentGroup, qp, fragment);\n    }\n    return new UrlTree(replaceSegment(urlTree.root, oldSegmentGroup, newSegmentGroup), qp, fragment);\n}\nfunction replaceSegment(current, oldSegment, newSegment) {\n    var children = {};\n    forEach(current.children, function (c, outletName) {\n        if (c === oldSegment) {\n            children[outletName] = newSegment;\n        }\n        else {\n            children[outletName] = replaceSegment(c, oldSegment, newSegment);\n        }\n    });\n    return new UrlSegmentGroup(current.segments, children);\n}\nvar Navigation = /** @class */ (function () {\n    function Navigation(isAbsolute, numberOfDoubleDots, commands) {\n        this.isAbsolute = isAbsolute;\n        this.numberOfDoubleDots = numberOfDoubleDots;\n        this.commands = commands;\n        if (isAbsolute && commands.length > 0 && isMatrixParams(commands[0])) {\n            throw new Error('Root segment cannot have matrix parameters');\n        }\n        var cmdWithOutlet = commands.find(function (c) { return typeof c === 'object' && c != null && c.outlets; });\n        if (cmdWithOutlet && cmdWithOutlet !== last$1(commands)) {\n            throw new Error('{outlets:{}} has to be the last command');\n        }\n    }\n    Navigation.prototype.toRoot = function () {\n        return this.isAbsolute && this.commands.length === 1 && this.commands[0] == '/';\n    };\n    return Navigation;\n}());\n/** Transforms commands to a normalized `Navigation` */\nfunction computeNavigation(commands) {\n    if ((typeof commands[0] === 'string') && commands.length === 1 && commands[0] === '/') {\n        return new Navigation(true, 0, commands);\n    }\n    var numberOfDoubleDots = 0;\n    var isAbsolute = false;\n    var res = commands.reduce(function (res, cmd, cmdIdx) {\n        if (typeof cmd === 'object' && cmd != null) {\n            if (cmd.outlets) {\n                var outlets_1 = {};\n                forEach(cmd.outlets, function (commands, name) {\n                    outlets_1[name] = typeof commands === 'string' ? commands.split('/') : commands;\n                });\n                return __spread(res, [{ outlets: outlets_1 }]);\n            }\n            if (cmd.segmentPath) {\n                return __spread(res, [cmd.segmentPath]);\n            }\n        }\n        if (!(typeof cmd === 'string')) {\n            return __spread(res, [cmd]);\n        }\n        if (cmdIdx === 0) {\n            cmd.split('/').forEach(function (urlPart, partIndex) {\n                if (partIndex == 0 && urlPart === '.') {\n                    // skip './a'\n                }\n                else if (partIndex == 0 && urlPart === '') { //  '/a'\n                    isAbsolute = true;\n                }\n                else if (urlPart === '..') { //  '../a'\n                    numberOfDoubleDots++;\n                }\n                else if (urlPart != '') {\n                    res.push(urlPart);\n                }\n            });\n            return res;\n        }\n        return __spread(res, [cmd]);\n    }, []);\n    return new Navigation(isAbsolute, numberOfDoubleDots, res);\n}\nvar Position = /** @class */ (function () {\n    function Position(segmentGroup, processChildren, index) {\n        this.segmentGroup = segmentGroup;\n        this.processChildren = processChildren;\n        this.index = index;\n    }\n    return Position;\n}());\nfunction findStartingPosition(nav, tree, route) {\n    if (nav.isAbsolute) {\n        return new Position(tree.root, true, 0);\n    }\n    if (route.snapshot._lastPathIndex === -1) {\n        return new Position(route.snapshot._urlSegment, true, 0);\n    }\n    var modifier = isMatrixParams(nav.commands[0]) ? 0 : 1;\n    var index = route.snapshot._lastPathIndex + modifier;\n    return createPositionApplyingDoubleDots(route.snapshot._urlSegment, index, nav.numberOfDoubleDots);\n}\nfunction createPositionApplyingDoubleDots(group, index, numberOfDoubleDots) {\n    var g = group;\n    var ci = index;\n    var dd = numberOfDoubleDots;\n    while (dd > ci) {\n        dd -= ci;\n        g = g.parent;\n        if (!g) {\n            throw new Error('Invalid number of \\'../\\'');\n        }\n        ci = g.segments.length;\n    }\n    return new Position(g, false, ci - dd);\n}\nfunction getPath(command) {\n    if (typeof command === 'object' && command != null && command.outlets) {\n        return command.outlets[PRIMARY_OUTLET];\n    }\n    return \"\" + command;\n}\nfunction getOutlets(commands) {\n    if (!(typeof commands[0] === 'object'))\n        return _a = {}, _a[PRIMARY_OUTLET] = commands, _a;\n    if (commands[0].outlets === undefined)\n        return _b = {}, _b[PRIMARY_OUTLET] = commands, _b;\n    return commands[0].outlets;\n    var _a, _b;\n}\nfunction updateSegmentGroup(segmentGroup, startIndex, commands) {\n    if (!segmentGroup) {\n        segmentGroup = new UrlSegmentGroup([], {});\n    }\n    if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n        return updateSegmentGroupChildren(segmentGroup, startIndex, commands);\n    }\n    var m = prefixedWith(segmentGroup, startIndex, commands);\n    var slicedCommands = commands.slice(m.commandIndex);\n    if (m.match && m.pathIndex < segmentGroup.segments.length) {\n        var g = new UrlSegmentGroup(segmentGroup.segments.slice(0, m.pathIndex), {});\n        g.children[PRIMARY_OUTLET] =\n            new UrlSegmentGroup(segmentGroup.segments.slice(m.pathIndex), segmentGroup.children);\n        return updateSegmentGroupChildren(g, 0, slicedCommands);\n    }\n    else if (m.match && slicedCommands.length === 0) {\n        return new UrlSegmentGroup(segmentGroup.segments, {});\n    }\n    else if (m.match && !segmentGroup.hasChildren()) {\n        return createNewSegmentGroup(segmentGroup, startIndex, commands);\n    }\n    else if (m.match) {\n        return updateSegmentGroupChildren(segmentGroup, 0, slicedCommands);\n    }\n    else {\n        return createNewSegmentGroup(segmentGroup, startIndex, commands);\n    }\n}\nfunction updateSegmentGroupChildren(segmentGroup, startIndex, commands) {\n    if (commands.length === 0) {\n        return new UrlSegmentGroup(segmentGroup.segments, {});\n    }\n    else {\n        var outlets_2 = getOutlets(commands);\n        var children_1 = {};\n        forEach(outlets_2, function (commands, outlet) {\n            if (commands !== null) {\n                children_1[outlet] = updateSegmentGroup(segmentGroup.children[outlet], startIndex, commands);\n            }\n        });\n        forEach(segmentGroup.children, function (child, childOutlet) {\n            if (outlets_2[childOutlet] === undefined) {\n                children_1[childOutlet] = child;\n            }\n        });\n        return new UrlSegmentGroup(segmentGroup.segments, children_1);\n    }\n}\nfunction prefixedWith(segmentGroup, startIndex, commands) {\n    var currentCommandIndex = 0;\n    var currentPathIndex = startIndex;\n    var noMatch = { match: false, pathIndex: 0, commandIndex: 0 };\n    while (currentPathIndex < segmentGroup.segments.length) {\n        if (currentCommandIndex >= commands.length)\n            return noMatch;\n        var path = segmentGroup.segments[currentPathIndex];\n        var curr = getPath(commands[currentCommandIndex]);\n        var next = currentCommandIndex < commands.length - 1 ? commands[currentCommandIndex + 1] : null;\n        if (currentPathIndex > 0 && curr === undefined)\n            break;\n        if (curr && next && (typeof next === 'object') && next.outlets === undefined) {\n            if (!compare(curr, next, path))\n                return noMatch;\n            currentCommandIndex += 2;\n        }\n        else {\n            if (!compare(curr, {}, path))\n                return noMatch;\n            currentCommandIndex++;\n        }\n        currentPathIndex++;\n    }\n    return { match: true, pathIndex: currentPathIndex, commandIndex: currentCommandIndex };\n}\nfunction createNewSegmentGroup(segmentGroup, startIndex, commands) {\n    var paths = segmentGroup.segments.slice(0, startIndex);\n    var i = 0;\n    while (i < commands.length) {\n        if (typeof commands[i] === 'object' && commands[i].outlets !== undefined) {\n            var children = createNewSegmentChildren(commands[i].outlets);\n            return new UrlSegmentGroup(paths, children);\n        }\n        // if we start with an object literal, we need to reuse the path part from the segment\n        if (i === 0 && isMatrixParams(commands[0])) {\n            var p = segmentGroup.segments[startIndex];\n            paths.push(new UrlSegment(p.path, commands[0]));\n            i++;\n            continue;\n        }\n        var curr = getPath(commands[i]);\n        var next = (i < commands.length - 1) ? commands[i + 1] : null;\n        if (curr && next && isMatrixParams(next)) {\n            paths.push(new UrlSegment(curr, stringify(next)));\n            i += 2;\n        }\n        else {\n            paths.push(new UrlSegment(curr, {}));\n            i++;\n        }\n    }\n    return new UrlSegmentGroup(paths, {});\n}\nfunction createNewSegmentChildren(outlets) {\n    var children = {};\n    forEach(outlets, function (commands, outlet) {\n        if (commands !== null) {\n            children[outlet] = createNewSegmentGroup(new UrlSegmentGroup([], {}), 0, commands);\n        }\n    });\n    return children;\n}\nfunction stringify(params) {\n    var res = {};\n    forEach(params, function (v, k) { return res[k] = \"\" + v; });\n    return res;\n}\nfunction compare(path, params, segment) {\n    return path == segment.path && shallowEqual(params, segment.parameters);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CanActivate = /** @class */ (function () {\n    function CanActivate(path) {\n        this.path = path;\n        this.route = this.path[this.path.length - 1];\n    }\n    return CanActivate;\n}());\nvar CanDeactivate = /** @class */ (function () {\n    function CanDeactivate(component, route) {\n        this.component = component;\n        this.route = route;\n    }\n    return CanDeactivate;\n}());\n/**\n * This class bundles the actions involved in preactivation of a route.\n */\nvar PreActivation = /** @class */ (function () {\n    function PreActivation(future, curr, moduleInjector, forwardEvent) {\n        this.future = future;\n        this.curr = curr;\n        this.moduleInjector = moduleInjector;\n        this.forwardEvent = forwardEvent;\n        this.canActivateChecks = [];\n        this.canDeactivateChecks = [];\n    }\n    PreActivation.prototype.initialize = function (parentContexts) {\n        var futureRoot = this.future._root;\n        var currRoot = this.curr ? this.curr._root : null;\n        this.setupChildRouteGuards(futureRoot, currRoot, parentContexts, [futureRoot.value]);\n    };\n    PreActivation.prototype.checkGuards = function () {\n        var _this = this;\n        if (!this.isDeactivating() && !this.isActivating()) {\n            return rxjs.of(true);\n        }\n        var canDeactivate$ = this.runCanDeactivateChecks();\n        return canDeactivate$.pipe(operators.mergeMap(function (canDeactivate) { return canDeactivate ? _this.runCanActivateChecks() : rxjs.of(false); }));\n    };\n    PreActivation.prototype.resolveData = function (paramsInheritanceStrategy) {\n        var _this = this;\n        if (!this.isActivating())\n            return rxjs.of(null);\n        return rxjs.from(this.canActivateChecks)\n            .pipe(operators.concatMap(function (check) { return _this.runResolve(check.route, paramsInheritanceStrategy); }), operators.reduce(function (_, __) { return _; }));\n    };\n    PreActivation.prototype.isDeactivating = function () { return this.canDeactivateChecks.length !== 0; };\n    PreActivation.prototype.isActivating = function () { return this.canActivateChecks.length !== 0; };\n    /**\n     * Iterates over child routes and calls recursive `setupRouteGuards` to get `this` instance in\n     * proper state to run `checkGuards()` method.\n     */\n    PreActivation.prototype.setupChildRouteGuards = function (futureNode, currNode, contexts, futurePath) {\n        var _this = this;\n        var prevChildren = nodeChildrenAsMap(currNode);\n        // Process the children of the future route\n        futureNode.children.forEach(function (c) {\n            _this.setupRouteGuards(c, prevChildren[c.value.outlet], contexts, futurePath.concat([c.value]));\n            delete prevChildren[c.value.outlet];\n        });\n        // Process any children left from the current route (not active for the future route)\n        forEach(prevChildren, function (v, k) {\n            return _this.deactivateRouteAndItsChildren(v, contexts.getContext(k));\n        });\n    };\n    /**\n     * Iterates over child routes and calls recursive `setupRouteGuards` to get `this` instance in\n     * proper state to run `checkGuards()` method.\n     */\n    PreActivation.prototype.setupRouteGuards = function (futureNode, currNode, parentContexts, futurePath) {\n        var future = futureNode.value;\n        var curr = currNode ? currNode.value : null;\n        var context = parentContexts ? parentContexts.getContext(futureNode.value.outlet) : null;\n        // reusing the node\n        if (curr && future.routeConfig === curr.routeConfig) {\n            var shouldRunGuardsAndResolvers = this.shouldRunGuardsAndResolvers(curr, future, future.routeConfig.runGuardsAndResolvers);\n            if (shouldRunGuardsAndResolvers) {\n                this.canActivateChecks.push(new CanActivate(futurePath));\n            }\n            else {\n                // we need to set the data\n                future.data = curr.data;\n                future._resolvedData = curr._resolvedData;\n            }\n            // If we have a component, we need to go through an outlet.\n            if (future.component) {\n                this.setupChildRouteGuards(futureNode, currNode, context ? context.children : null, futurePath);\n                // if we have a componentless route, we recurse but keep the same outlet map.\n            }\n            else {\n                this.setupChildRouteGuards(futureNode, currNode, parentContexts, futurePath);\n            }\n            if (shouldRunGuardsAndResolvers) {\n                var outlet = context.outlet;\n                this.canDeactivateChecks.push(new CanDeactivate(outlet.component, curr));\n            }\n        }\n        else {\n            if (curr) {\n                this.deactivateRouteAndItsChildren(currNode, context);\n            }\n            this.canActivateChecks.push(new CanActivate(futurePath));\n            // If we have a component, we need to go through an outlet.\n            if (future.component) {\n                this.setupChildRouteGuards(futureNode, null, context ? context.children : null, futurePath);\n                // if we have a componentless route, we recurse but keep the same outlet map.\n            }\n            else {\n                this.setupChildRouteGuards(futureNode, null, parentContexts, futurePath);\n            }\n        }\n    };\n    PreActivation.prototype.shouldRunGuardsAndResolvers = function (curr, future, mode) {\n        switch (mode) {\n            case 'always':\n                return true;\n            case 'paramsOrQueryParamsChange':\n                return !equalParamsAndUrlSegments(curr, future) ||\n                    !shallowEqual(curr.queryParams, future.queryParams);\n            case 'paramsChange':\n            default:\n                return !equalParamsAndUrlSegments(curr, future);\n        }\n    };\n    PreActivation.prototype.deactivateRouteAndItsChildren = function (route, context) {\n        var _this = this;\n        var children = nodeChildrenAsMap(route);\n        var r = route.value;\n        forEach(children, function (node, childName) {\n            if (!r.component) {\n                _this.deactivateRouteAndItsChildren(node, context);\n            }\n            else if (context) {\n                _this.deactivateRouteAndItsChildren(node, context.children.getContext(childName));\n            }\n            else {\n                _this.deactivateRouteAndItsChildren(node, null);\n            }\n        });\n        if (!r.component) {\n            this.canDeactivateChecks.push(new CanDeactivate(null, r));\n        }\n        else if (context && context.outlet && context.outlet.isActivated) {\n            this.canDeactivateChecks.push(new CanDeactivate(context.outlet.component, r));\n        }\n        else {\n            this.canDeactivateChecks.push(new CanDeactivate(null, r));\n        }\n    };\n    PreActivation.prototype.runCanDeactivateChecks = function () {\n        var _this = this;\n        return rxjs.from(this.canDeactivateChecks)\n            .pipe(operators.mergeMap(function (check) { return _this.runCanDeactivate(check.component, check.route); }), operators.every(function (result) { return result === true; }));\n    };\n    PreActivation.prototype.runCanActivateChecks = function () {\n        var _this = this;\n        return rxjs.from(this.canActivateChecks)\n            .pipe(operators.concatMap(function (check) { return andObservables(rxjs.from([\n            _this.fireChildActivationStart(check.route.parent),\n            _this.fireActivationStart(check.route), _this.runCanActivateChild(check.path),\n            _this.runCanActivate(check.route)\n        ])); }), operators.every(function (result) { return result === true; }));\n        // this.fireChildActivationStart(check.path),\n    };\n    /**\n     * This should fire off `ActivationStart` events for each route being activated at this\n     * level.\n     * In other words, if you're activating `a` and `b` below, `path` will contain the\n     * `ActivatedRouteSnapshot`s for both and we will fire `ActivationStart` for both. Always\n     * return\n     * `true` so checks continue to run.\n     */\n    PreActivation.prototype.fireActivationStart = function (snapshot) {\n        if (snapshot !== null && this.forwardEvent) {\n            this.forwardEvent(new ActivationStart(snapshot));\n        }\n        return rxjs.of(true);\n    };\n    /**\n     * This should fire off `ChildActivationStart` events for each route being activated at this\n     * level.\n     * In other words, if you're activating `a` and `b` below, `path` will contain the\n     * `ActivatedRouteSnapshot`s for both and we will fire `ChildActivationStart` for both. Always\n     * return\n     * `true` so checks continue to run.\n     */\n    PreActivation.prototype.fireChildActivationStart = function (snapshot) {\n        if (snapshot !== null && this.forwardEvent) {\n            this.forwardEvent(new ChildActivationStart(snapshot));\n        }\n        return rxjs.of(true);\n    };\n    PreActivation.prototype.runCanActivate = function (future) {\n        var _this = this;\n        var canActivate = future.routeConfig ? future.routeConfig.canActivate : null;\n        if (!canActivate || canActivate.length === 0)\n            return rxjs.of(true);\n        var obs = rxjs.from(canActivate).pipe(operators.map(function (c) {\n            var guard = _this.getToken(c, future);\n            var observable;\n            if (guard.canActivate) {\n                observable = wrapIntoObservable(guard.canActivate(future, _this.future));\n            }\n            else {\n                observable = wrapIntoObservable(guard(future, _this.future));\n            }\n            return observable.pipe(operators.first());\n        }));\n        return andObservables(obs);\n    };\n    PreActivation.prototype.runCanActivateChild = function (path) {\n        var _this = this;\n        var future = path[path.length - 1];\n        var canActivateChildGuards = path.slice(0, path.length - 1)\n            .reverse()\n            .map(function (p) { return _this.extractCanActivateChild(p); })\n            .filter(function (_) { return _ !== null; });\n        return andObservables(rxjs.from(canActivateChildGuards).pipe(operators.map(function (d) {\n            var obs = rxjs.from(d.guards).pipe(operators.map(function (c) {\n                var guard = _this.getToken(c, d.node);\n                var observable;\n                if (guard.canActivateChild) {\n                    observable = wrapIntoObservable(guard.canActivateChild(future, _this.future));\n                }\n                else {\n                    observable = wrapIntoObservable(guard(future, _this.future));\n                }\n                return observable.pipe(operators.first());\n            }));\n            return andObservables(obs);\n        })));\n    };\n    PreActivation.prototype.extractCanActivateChild = function (p) {\n        var canActivateChild = p.routeConfig ? p.routeConfig.canActivateChild : null;\n        if (!canActivateChild || canActivateChild.length === 0)\n            return null;\n        return { node: p, guards: canActivateChild };\n    };\n    PreActivation.prototype.runCanDeactivate = function (component, curr) {\n        var _this = this;\n        var canDeactivate = curr && curr.routeConfig ? curr.routeConfig.canDeactivate : null;\n        if (!canDeactivate || canDeactivate.length === 0)\n            return rxjs.of(true);\n        var canDeactivate$ = rxjs.from(canDeactivate).pipe(operators.mergeMap(function (c) {\n            var guard = _this.getToken(c, curr);\n            var observable;\n            if (guard.canDeactivate) {\n                observable =\n                    wrapIntoObservable(guard.canDeactivate(component, curr, _this.curr, _this.future));\n            }\n            else {\n                observable = wrapIntoObservable(guard(component, curr, _this.curr, _this.future));\n            }\n            return observable.pipe(operators.first());\n        }));\n        return canDeactivate$.pipe(operators.every(function (result) { return result === true; }));\n    };\n    PreActivation.prototype.runResolve = function (future, paramsInheritanceStrategy) {\n        var resolve = future._resolve;\n        return this.resolveNode(resolve, future).pipe(operators.map(function (resolvedData) {\n            future._resolvedData = resolvedData;\n            future.data = __assign({}, future.data, inheritedParamsDataResolve(future, paramsInheritanceStrategy).resolve);\n            return null;\n        }));\n    };\n    PreActivation.prototype.resolveNode = function (resolve, future) {\n        var _this = this;\n        var keys = Object.keys(resolve);\n        if (keys.length === 0) {\n            return rxjs.of({});\n        }\n        if (keys.length === 1) {\n            var key_1 = keys[0];\n            return this.getResolver(resolve[key_1], future).pipe(operators.map(function (value) {\n                return _a = {}, _a[key_1] = value, _a;\n                var _a;\n            }));\n        }\n        var data = {};\n        var runningResolvers$ = rxjs.from(keys).pipe(operators.mergeMap(function (key) {\n            return _this.getResolver(resolve[key], future).pipe(operators.map(function (value) {\n                data[key] = value;\n                return value;\n            }));\n        }));\n        return runningResolvers$.pipe(operators.last(), operators.map(function () { return data; }));\n    };\n    PreActivation.prototype.getResolver = function (injectionToken, future) {\n        var resolver = this.getToken(injectionToken, future);\n        return resolver.resolve ? wrapIntoObservable(resolver.resolve(future, this.future)) :\n            wrapIntoObservable(resolver(future, this.future));\n    };\n    PreActivation.prototype.getToken = function (token, snapshot) {\n        var config = closestLoadedConfig(snapshot);\n        var injector = config ? config.module.injector : this.moduleInjector;\n        return injector.get(token);\n    };\n    return PreActivation;\n}());\nfunction closestLoadedConfig(snapshot) {\n    if (!snapshot)\n        return null;\n    for (var s = snapshot.parent; s; s = s.parent) {\n        var route = s.routeConfig;\n        if (route && route._loadedConfig)\n            return route._loadedConfig;\n    }\n    return null;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NoMatch$1 = /** @class */ (function () {\n    function NoMatch() {\n    }\n    return NoMatch;\n}());\nfunction recognize(rootComponentType, config, urlTree, url, paramsInheritanceStrategy) {\n    if (paramsInheritanceStrategy === void 0) { paramsInheritanceStrategy = 'emptyOnly'; }\n    return new Recognizer(rootComponentType, config, urlTree, url, paramsInheritanceStrategy)\n        .recognize();\n}\nvar Recognizer = /** @class */ (function () {\n    function Recognizer(rootComponentType, config, urlTree, url, paramsInheritanceStrategy) {\n        this.rootComponentType = rootComponentType;\n        this.config = config;\n        this.urlTree = urlTree;\n        this.url = url;\n        this.paramsInheritanceStrategy = paramsInheritanceStrategy;\n    }\n    Recognizer.prototype.recognize = function () {\n        try {\n            var rootSegmentGroup = split$1(this.urlTree.root, [], [], this.config).segmentGroup;\n            var children = this.processSegmentGroup(this.config, rootSegmentGroup, PRIMARY_OUTLET);\n            var root = new ActivatedRouteSnapshot([], Object.freeze({}), Object.freeze(__assign({}, this.urlTree.queryParams)), this.urlTree.fragment, {}, PRIMARY_OUTLET, this.rootComponentType, null, this.urlTree.root, -1, {});\n            var rootNode = new TreeNode(root, children);\n            var routeState = new RouterStateSnapshot(this.url, rootNode);\n            this.inheritParamsAndData(routeState._root);\n            return rxjs.of(routeState);\n        }\n        catch (e) {\n            return new rxjs.Observable(function (obs) { return obs.error(e); });\n        }\n    };\n    Recognizer.prototype.inheritParamsAndData = function (routeNode) {\n        var _this = this;\n        var route = routeNode.value;\n        var i = inheritedParamsDataResolve(route, this.paramsInheritanceStrategy);\n        route.params = Object.freeze(i.params);\n        route.data = Object.freeze(i.data);\n        routeNode.children.forEach(function (n) { return _this.inheritParamsAndData(n); });\n    };\n    Recognizer.prototype.processSegmentGroup = function (config, segmentGroup, outlet) {\n        if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n            return this.processChildren(config, segmentGroup);\n        }\n        return this.processSegment(config, segmentGroup, segmentGroup.segments, outlet);\n    };\n    Recognizer.prototype.processChildren = function (config, segmentGroup) {\n        var _this = this;\n        var children = mapChildrenIntoArray(segmentGroup, function (child, childOutlet) { return _this.processSegmentGroup(config, child, childOutlet); });\n        checkOutletNameUniqueness(children);\n        sortActivatedRouteSnapshots(children);\n        return children;\n    };\n    Recognizer.prototype.processSegment = function (config, segmentGroup, segments, outlet) {\n        try {\n            for (var config_1 = __values(config), config_1_1 = config_1.next(); !config_1_1.done; config_1_1 = config_1.next()) {\n                var r = config_1_1.value;\n                try {\n                    return this.processSegmentAgainstRoute(r, segmentGroup, segments, outlet);\n                }\n                catch (e) {\n                    if (!(e instanceof NoMatch$1))\n                        throw e;\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (config_1_1 && !config_1_1.done && (_a = config_1.return)) _a.call(config_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        if (this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n            return [];\n        }\n        throw new NoMatch$1();\n        var e_1, _a;\n    };\n    Recognizer.prototype.noLeftoversInUrl = function (segmentGroup, segments, outlet) {\n        return segments.length === 0 && !segmentGroup.children[outlet];\n    };\n    Recognizer.prototype.processSegmentAgainstRoute = function (route, rawSegment, segments, outlet) {\n        if (route.redirectTo)\n            throw new NoMatch$1();\n        if ((route.outlet || PRIMARY_OUTLET) !== outlet)\n            throw new NoMatch$1();\n        var snapshot;\n        var consumedSegments = [];\n        var rawSlicedSegments = [];\n        if (route.path === '**') {\n            var params = segments.length > 0 ? last$1(segments).parameters : {};\n            snapshot = new ActivatedRouteSnapshot(segments, params, Object.freeze(__assign({}, this.urlTree.queryParams)), this.urlTree.fragment, getData(route), outlet, route.component, route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + segments.length, getResolve(route));\n        }\n        else {\n            var result = match$1(rawSegment, route, segments);\n            consumedSegments = result.consumedSegments;\n            rawSlicedSegments = segments.slice(result.lastChild);\n            snapshot = new ActivatedRouteSnapshot(consumedSegments, result.parameters, Object.freeze(__assign({}, this.urlTree.queryParams)), this.urlTree.fragment, getData(route), outlet, route.component, route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + consumedSegments.length, getResolve(route));\n        }\n        var childConfig = getChildConfig(route);\n        var _a = split$1(rawSegment, consumedSegments, rawSlicedSegments, childConfig), segmentGroup = _a.segmentGroup, slicedSegments = _a.slicedSegments;\n        if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n            var children_1 = this.processChildren(childConfig, segmentGroup);\n            return [new TreeNode(snapshot, children_1)];\n        }\n        if (childConfig.length === 0 && slicedSegments.length === 0) {\n            return [new TreeNode(snapshot, [])];\n        }\n        var children = this.processSegment(childConfig, segmentGroup, slicedSegments, PRIMARY_OUTLET);\n        return [new TreeNode(snapshot, children)];\n    };\n    return Recognizer;\n}());\nfunction sortActivatedRouteSnapshots(nodes) {\n    nodes.sort(function (a, b) {\n        if (a.value.outlet === PRIMARY_OUTLET)\n            return -1;\n        if (b.value.outlet === PRIMARY_OUTLET)\n            return 1;\n        return a.value.outlet.localeCompare(b.value.outlet);\n    });\n}\nfunction getChildConfig(route) {\n    if (route.children) {\n        return route.children;\n    }\n    if (route.loadChildren) {\n        return route._loadedConfig.routes;\n    }\n    return [];\n}\nfunction match$1(segmentGroup, route, segments) {\n    if (route.path === '') {\n        if (route.pathMatch === 'full' && (segmentGroup.hasChildren() || segments.length > 0)) {\n            throw new NoMatch$1();\n        }\n        return { consumedSegments: [], lastChild: 0, parameters: {} };\n    }\n    var matcher = route.matcher || defaultUrlMatcher;\n    var res = matcher(segments, segmentGroup, route);\n    if (!res)\n        throw new NoMatch$1();\n    var posParams = {};\n    forEach(res.posParams, function (v, k) { posParams[k] = v.path; });\n    var parameters = res.consumed.length > 0 ? __assign({}, posParams, res.consumed[res.consumed.length - 1].parameters) :\n        posParams;\n    return { consumedSegments: res.consumed, lastChild: res.consumed.length, parameters: parameters };\n}\nfunction checkOutletNameUniqueness(nodes) {\n    var names = {};\n    nodes.forEach(function (n) {\n        var routeWithSameOutletName = names[n.value.outlet];\n        if (routeWithSameOutletName) {\n            var p = routeWithSameOutletName.url.map(function (s) { return s.toString(); }).join('/');\n            var c = n.value.url.map(function (s) { return s.toString(); }).join('/');\n            throw new Error(\"Two segments cannot have the same outlet name: '\" + p + \"' and '\" + c + \"'.\");\n        }\n        names[n.value.outlet] = n.value;\n    });\n}\nfunction getSourceSegmentGroup(segmentGroup) {\n    var s = segmentGroup;\n    while (s._sourceSegment) {\n        s = s._sourceSegment;\n    }\n    return s;\n}\nfunction getPathIndexShift(segmentGroup) {\n    var s = segmentGroup;\n    var res = (s._segmentIndexShift ? s._segmentIndexShift : 0);\n    while (s._sourceSegment) {\n        s = s._sourceSegment;\n        res += (s._segmentIndexShift ? s._segmentIndexShift : 0);\n    }\n    return res - 1;\n}\nfunction split$1(segmentGroup, consumedSegments, slicedSegments, config) {\n    if (slicedSegments.length > 0 &&\n        containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n        var s_1 = new UrlSegmentGroup(consumedSegments, createChildrenForEmptyPaths(segmentGroup, consumedSegments, config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n        s_1._sourceSegment = segmentGroup;\n        s_1._segmentIndexShift = consumedSegments.length;\n        return { segmentGroup: s_1, slicedSegments: [] };\n    }\n    if (slicedSegments.length === 0 &&\n        containsEmptyPathMatches(segmentGroup, slicedSegments, config)) {\n        var s_2 = new UrlSegmentGroup(segmentGroup.segments, addEmptyPathsToChildrenIfNeeded(segmentGroup, slicedSegments, config, segmentGroup.children));\n        s_2._sourceSegment = segmentGroup;\n        s_2._segmentIndexShift = consumedSegments.length;\n        return { segmentGroup: s_2, slicedSegments: slicedSegments };\n    }\n    var s = new UrlSegmentGroup(segmentGroup.segments, segmentGroup.children);\n    s._sourceSegment = segmentGroup;\n    s._segmentIndexShift = consumedSegments.length;\n    return { segmentGroup: s, slicedSegments: slicedSegments };\n}\nfunction addEmptyPathsToChildrenIfNeeded(segmentGroup, slicedSegments, routes, children) {\n    var res = {};\n    try {\n        for (var routes_1 = __values(routes), routes_1_1 = routes_1.next(); !routes_1_1.done; routes_1_1 = routes_1.next()) {\n            var r = routes_1_1.value;\n            if (emptyPathMatch(segmentGroup, slicedSegments, r) && !children[getOutlet$1(r)]) {\n                var s = new UrlSegmentGroup([], {});\n                s._sourceSegment = segmentGroup;\n                s._segmentIndexShift = segmentGroup.segments.length;\n                res[getOutlet$1(r)] = s;\n            }\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (routes_1_1 && !routes_1_1.done && (_a = routes_1.return)) _a.call(routes_1);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    return __assign({}, children, res);\n    var e_2, _a;\n}\nfunction createChildrenForEmptyPaths(segmentGroup, consumedSegments, routes, primarySegment) {\n    var res = {};\n    res[PRIMARY_OUTLET] = primarySegment;\n    primarySegment._sourceSegment = segmentGroup;\n    primarySegment._segmentIndexShift = consumedSegments.length;\n    try {\n        for (var routes_2 = __values(routes), routes_2_1 = routes_2.next(); !routes_2_1.done; routes_2_1 = routes_2.next()) {\n            var r = routes_2_1.value;\n            if (r.path === '' && getOutlet$1(r) !== PRIMARY_OUTLET) {\n                var s = new UrlSegmentGroup([], {});\n                s._sourceSegment = segmentGroup;\n                s._segmentIndexShift = consumedSegments.length;\n                res[getOutlet$1(r)] = s;\n            }\n        }\n    }\n    catch (e_3_1) { e_3 = { error: e_3_1 }; }\n    finally {\n        try {\n            if (routes_2_1 && !routes_2_1.done && (_a = routes_2.return)) _a.call(routes_2);\n        }\n        finally { if (e_3) throw e_3.error; }\n    }\n    return res;\n    var e_3, _a;\n}\nfunction containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, routes) {\n    return routes.some(function (r) { return emptyPathMatch(segmentGroup, slicedSegments, r) && getOutlet$1(r) !== PRIMARY_OUTLET; });\n}\nfunction containsEmptyPathMatches(segmentGroup, slicedSegments, routes) {\n    return routes.some(function (r) { return emptyPathMatch(segmentGroup, slicedSegments, r); });\n}\nfunction emptyPathMatch(segmentGroup, slicedSegments, r) {\n    if ((segmentGroup.hasChildren() || slicedSegments.length > 0) && r.pathMatch === 'full') {\n        return false;\n    }\n    return r.path === '' && r.redirectTo === undefined;\n}\nfunction getOutlet$1(route) {\n    return route.outlet || PRIMARY_OUTLET;\n}\nfunction getData(route) {\n    return route.data || {};\n}\nfunction getResolve(route) {\n    return route.resolve || {};\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Provides a way to customize when activated routes get reused.\n *\n * @experimental\n */\nvar RouteReuseStrategy = /** @class */ (function () {\n    function RouteReuseStrategy() {\n    }\n    return RouteReuseStrategy;\n}());\n/**\n * Does not detach any subtrees. Reuses routes as long as their route config is the same.\n */\nvar DefaultRouteReuseStrategy = /** @class */ (function () {\n    function DefaultRouteReuseStrategy() {\n    }\n    DefaultRouteReuseStrategy.prototype.shouldDetach = function (route) { return false; };\n    DefaultRouteReuseStrategy.prototype.store = function (route, detachedTree) { };\n    DefaultRouteReuseStrategy.prototype.shouldAttach = function (route) { return false; };\n    DefaultRouteReuseStrategy.prototype.retrieve = function (route) { return null; };\n    DefaultRouteReuseStrategy.prototype.shouldReuseRoute = function (future, curr) {\n        return future.routeConfig === curr.routeConfig;\n    };\n    return DefaultRouteReuseStrategy;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(i): switch to fromPromise once it's expored in rxjs\n/**\n * @docsNotRequired\n * @experimental\n */\nvar ROUTES = new core.InjectionToken('ROUTES');\nvar RouterConfigLoader = /** @class */ (function () {\n    function RouterConfigLoader(loader, compiler, onLoadStartListener, onLoadEndListener) {\n        this.loader = loader;\n        this.compiler = compiler;\n        this.onLoadStartListener = onLoadStartListener;\n        this.onLoadEndListener = onLoadEndListener;\n    }\n    RouterConfigLoader.prototype.load = function (parentInjector, route) {\n        var _this = this;\n        if (this.onLoadStartListener) {\n            this.onLoadStartListener(route);\n        }\n        var moduleFactory$ = this.loadModuleFactory(route.loadChildren);\n        return moduleFactory$.pipe(operators.map(function (factory) {\n            if (_this.onLoadEndListener) {\n                _this.onLoadEndListener(route);\n            }\n            var module = factory.create(parentInjector);\n            return new LoadedRouterConfig(flatten(module.injector.get(ROUTES)).map(copyConfig), module);\n        }));\n    };\n    RouterConfigLoader.prototype.loadModuleFactory = function (loadChildren) {\n        var _this = this;\n        if (typeof loadChildren === 'string') {\n            return rxjs.from(this.loader.load(loadChildren));\n        }\n        else {\n            return wrapIntoObservable(loadChildren()).pipe(operators.mergeMap(function (t) {\n                if (t instanceof core.NgModuleFactory) {\n                    return rxjs.of(t);\n                }\n                else {\n                    return rxjs.from(_this.compiler.compileModuleAsync(t));\n                }\n            }));\n        }\n    };\n    return RouterConfigLoader;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Provides a way to migrate AngularJS applications to Angular.\n *\n * @experimental\n */\nvar UrlHandlingStrategy = /** @class */ (function () {\n    function UrlHandlingStrategy() {\n    }\n    return UrlHandlingStrategy;\n}());\n/**\n * @experimental\n */\nvar DefaultUrlHandlingStrategy = /** @class */ (function () {\n    function DefaultUrlHandlingStrategy() {\n    }\n    DefaultUrlHandlingStrategy.prototype.shouldProcessUrl = function (url) { return true; };\n    DefaultUrlHandlingStrategy.prototype.extract = function (url) { return url; };\n    DefaultUrlHandlingStrategy.prototype.merge = function (newUrlPart, wholeUrl) { return newUrlPart; };\n    return DefaultUrlHandlingStrategy;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction defaultErrorHandler(error) {\n    throw error;\n}\n/**\n * @internal\n */\nfunction defaultRouterHook(snapshot, runExtras) {\n    return rxjs.of(null);\n}\n/**\n * @description\n *\n * Provides the navigation and url manipulation capabilities.\n *\n * See `Routes` for more details and examples.\n *\n * @ngModule RouterModule\n *\n *\n */\nvar Router = /** @class */ (function () {\n    /**\n     * Creates the router service.\n     */\n    // TODO: vsavkin make internal after the final is out.\n    function Router(rootComponentType, urlSerializer, rootContexts, location, injector, loader, compiler, config) {\n        var _this = this;\n        this.rootComponentType = rootComponentType;\n        this.urlSerializer = urlSerializer;\n        this.rootContexts = rootContexts;\n        this.location = location;\n        this.config = config;\n        this.navigations = new rxjs.BehaviorSubject(null);\n        this.navigationId = 0;\n        this.events = new rxjs.Subject();\n        /**\n         * Error handler that is invoked when a navigation errors.\n         *\n         * See `ErrorHandler` for more information.\n         */\n        this.errorHandler = defaultErrorHandler;\n        /**\n         * Indicates if at least one navigation happened.\n         */\n        this.navigated = false;\n        this.lastSuccessfulId = -1;\n        /**\n         * Used by RouterModule. This allows us to\n         * pause the navigation either before preactivation or after it.\n         * @internal\n         */\n        this.hooks = {\n            beforePreactivation: defaultRouterHook,\n            afterPreactivation: defaultRouterHook\n        };\n        /**\n         * Extracts and merges URLs. Used for AngularJS to Angular migrations.\n         */\n        this.urlHandlingStrategy = new DefaultUrlHandlingStrategy();\n        this.routeReuseStrategy = new DefaultRouteReuseStrategy();\n        /**\n         * Define what the router should do if it receives a navigation request to the current URL.\n         * By default, the router will ignore this navigation. However, this prevents features such\n         * as a \"refresh\" button. Use this option to configure the behavior when navigating to the\n         * current URL. Default is 'ignore'.\n         */\n        this.onSameUrlNavigation = 'ignore';\n        /**\n         * Defines how the router merges params, data and resolved data from parent to child\n         * routes. Available options are:\n         *\n         * - `'emptyOnly'`, the default, only inherits parent params for path-less or component-less\n         *   routes.\n         * - `'always'`, enables unconditional inheritance of parent params.\n         */\n        this.paramsInheritanceStrategy = 'emptyOnly';\n        var onLoadStart = function (r) { return _this.triggerEvent(new RouteConfigLoadStart(r)); };\n        var onLoadEnd = function (r) { return _this.triggerEvent(new RouteConfigLoadEnd(r)); };\n        this.ngModule = injector.get(core.NgModuleRef);\n        this.resetConfig(config);\n        this.currentUrlTree = createEmptyUrlTree();\n        this.rawUrlTree = this.currentUrlTree;\n        this.configLoader = new RouterConfigLoader(loader, compiler, onLoadStart, onLoadEnd);\n        this.routerState = createEmptyState(this.currentUrlTree, this.rootComponentType);\n        this.processNavigations();\n    }\n    /**\n     * @internal\n     * TODO: this should be removed once the constructor of the router made internal\n     */\n    Router.prototype.resetRootComponentType = function (rootComponentType) {\n        this.rootComponentType = rootComponentType;\n        // TODO: vsavkin router 4.0 should make the root component set to null\n        // this will simplify the lifecycle of the router.\n        this.routerState.root.component = this.rootComponentType;\n    };\n    /**\n     * Sets up the location change listener and performs the initial navigation.\n     */\n    Router.prototype.initialNavigation = function () {\n        this.setUpLocationChangeListener();\n        if (this.navigationId === 0) {\n            this.navigateByUrl(this.location.path(true), { replaceUrl: true });\n        }\n    };\n    /**\n     * Sets up the location change listener.\n     */\n    Router.prototype.setUpLocationChangeListener = function () {\n        var _this = this;\n        // Don't need to use Zone.wrap any more, because zone.js\n        // already patch onPopState, so location change callback will\n        // run into ngZone\n        if (!this.locationSubscription) {\n            this.locationSubscription = this.location.subscribe(function (change) {\n                var rawUrlTree = _this.urlSerializer.parse(change['url']);\n                var source = change['type'] === 'popstate' ? 'popstate' : 'hashchange';\n                var state = change.state && change.state.navigationId ?\n                    { navigationId: change.state.navigationId } :\n                    null;\n                setTimeout(function () { _this.scheduleNavigation(rawUrlTree, source, state, { replaceUrl: true }); }, 0);\n            });\n        }\n    };\n    Object.defineProperty(Router.prototype, \"url\", {\n        /** The current url */\n        get: function () { return this.serializeUrl(this.currentUrlTree); },\n        enumerable: true,\n        configurable: true\n    });\n    /** @internal */\n    Router.prototype.triggerEvent = function (e) { this.events.next(e); };\n    /**\n     * Resets the configuration used for navigation and generating links.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.resetConfig([\n     *  { path: 'team/:id', component: TeamCmp, children: [\n     *    { path: 'simple', component: SimpleCmp },\n     *    { path: 'user/:name', component: UserCmp }\n     *  ]}\n     * ]);\n     * ```\n     */\n    Router.prototype.resetConfig = function (config) {\n        validateConfig(config);\n        this.config = config.map(copyConfig);\n        this.navigated = false;\n        this.lastSuccessfulId = -1;\n    };\n    /** @docsNotRequired */\n    Router.prototype.ngOnDestroy = function () { this.dispose(); };\n    /** Disposes of the router */\n    Router.prototype.dispose = function () {\n        if (this.locationSubscription) {\n            this.locationSubscription.unsubscribe();\n            this.locationSubscription = null;\n        }\n    };\n    /**\n     * Applies an array of commands to the current url tree and creates a new url tree.\n     *\n     * When given an activate route, applies the given commands starting from the route.\n     * When not given a route, applies the given command starting from the root.\n     *\n     * ### Usage\n     *\n     * ```\n     * // create /team/33/user/11\n     * router.createUrlTree(['/team', 33, 'user', 11]);\n     *\n     * // create /team/33;expand=true/user/11\n     * router.createUrlTree(['/team', 33, {expand: true}, 'user', 11]);\n     *\n     * // you can collapse static segments like this (this works only with the first passed-in value):\n     * router.createUrlTree(['/team/33/user', userId]);\n     *\n     * // If the first segment can contain slashes, and you do not want the router to split it, you\n     * // can do the following:\n     *\n     * router.createUrlTree([{segmentPath: '/one/two'}]);\n     *\n     * // create /team/33/(user/11//right:chat)\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: 'chat'}}]);\n     *\n     * // remove the right secondary node\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: null}}]);\n     *\n     * // assuming the current url is `/team/33/user/11` and the route points to `user/11`\n     *\n     * // navigate to /team/33/user/11/details\n     * router.createUrlTree(['details'], {relativeTo: route});\n     *\n     * // navigate to /team/33/user/22\n     * router.createUrlTree(['../22'], {relativeTo: route});\n     *\n     * // navigate to /team/44/user/22\n     * router.createUrlTree(['../../team/44/user/22'], {relativeTo: route});\n     * ```\n     */\n    Router.prototype.createUrlTree = function (commands, navigationExtras) {\n        if (navigationExtras === void 0) { navigationExtras = {}; }\n        var relativeTo = navigationExtras.relativeTo, queryParams = navigationExtras.queryParams, fragment = navigationExtras.fragment, preserveQueryParams = navigationExtras.preserveQueryParams, queryParamsHandling = navigationExtras.queryParamsHandling, preserveFragment = navigationExtras.preserveFragment;\n        if (core.isDevMode() && preserveQueryParams && console && console.warn) {\n            console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n        }\n        var a = relativeTo || this.routerState.root;\n        var f = preserveFragment ? this.currentUrlTree.fragment : fragment;\n        var q = null;\n        if (queryParamsHandling) {\n            switch (queryParamsHandling) {\n                case 'merge':\n                    q = __assign({}, this.currentUrlTree.queryParams, queryParams);\n                    break;\n                case 'preserve':\n                    q = this.currentUrlTree.queryParams;\n                    break;\n                default:\n                    q = queryParams || null;\n            }\n        }\n        else {\n            q = preserveQueryParams ? this.currentUrlTree.queryParams : queryParams || null;\n        }\n        if (q !== null) {\n            q = this.removeEmptyProps(q);\n        }\n        return createUrlTree(a, this.currentUrlTree, commands, q, f);\n    };\n    /**\n     * Navigate based on the provided url. This navigation is always absolute.\n     *\n     * Returns a promise that:\n     * - resolves to 'true' when navigation succeeds,\n     * - resolves to 'false' when navigation fails,\n     * - is rejected when an error happens.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.navigateByUrl(\"/team/33/user/11\");\n     *\n     * // Navigate without updating the URL\n     * router.navigateByUrl(\"/team/33/user/11\", { skipLocationChange: true });\n     * ```\n     *\n     * In opposite to `navigate`, `navigateByUrl` takes a whole URL\n     * and does not apply any delta to the current one.\n     */\n    Router.prototype.navigateByUrl = function (url, extras) {\n        if (extras === void 0) { extras = { skipLocationChange: false }; }\n        var urlTree = url instanceof UrlTree ? url : this.parseUrl(url);\n        var mergedTree = this.urlHandlingStrategy.merge(urlTree, this.rawUrlTree);\n        return this.scheduleNavigation(mergedTree, 'imperative', null, extras);\n    };\n    /**\n     * Navigate based on the provided array of commands and a starting point.\n     * If no starting route is provided, the navigation is absolute.\n     *\n     * Returns a promise that:\n     * - resolves to 'true' when navigation succeeds,\n     * - resolves to 'false' when navigation fails,\n     * - is rejected when an error happens.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route});\n     *\n     * // Navigate without updating the URL\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route, skipLocationChange: true});\n     * ```\n     *\n     * In opposite to `navigateByUrl`, `navigate` always takes a delta that is applied to the current\n     * URL.\n     */\n    Router.prototype.navigate = function (commands, extras) {\n        if (extras === void 0) { extras = { skipLocationChange: false }; }\n        validateCommands(commands);\n        return this.navigateByUrl(this.createUrlTree(commands, extras), extras);\n    };\n    /** Serializes a `UrlTree` into a string */\n    Router.prototype.serializeUrl = function (url) { return this.urlSerializer.serialize(url); };\n    /** Parses a string into a `UrlTree` */\n    Router.prototype.parseUrl = function (url) { return this.urlSerializer.parse(url); };\n    /** Returns whether the url is activated */\n    Router.prototype.isActive = function (url, exact) {\n        if (url instanceof UrlTree) {\n            return containsTree(this.currentUrlTree, url, exact);\n        }\n        var urlTree = this.urlSerializer.parse(url);\n        return containsTree(this.currentUrlTree, urlTree, exact);\n    };\n    Router.prototype.removeEmptyProps = function (params) {\n        return Object.keys(params).reduce(function (result, key) {\n            var value = params[key];\n            if (value !== null && value !== undefined) {\n                result[key] = value;\n            }\n            return result;\n        }, {});\n    };\n    Router.prototype.processNavigations = function () {\n        var _this = this;\n        this.navigations\n            .pipe(operators.concatMap(function (nav) {\n            if (nav) {\n                _this.executeScheduledNavigation(nav);\n                // a failed navigation should not stop the router from processing\n                // further navigations => the catch\n                return nav.promise.catch(function () { });\n            }\n            else {\n                return rxjs.of(null);\n            }\n        }))\n            .subscribe(function () { });\n    };\n    Router.prototype.scheduleNavigation = function (rawUrl, source, state, extras) {\n        var lastNavigation = this.navigations.value;\n        // If the user triggers a navigation imperatively (e.g., by using navigateByUrl),\n        // and that navigation results in 'replaceState' that leads to the same URL,\n        // we should skip those.\n        if (lastNavigation && source !== 'imperative' && lastNavigation.source === 'imperative' &&\n            lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n            return Promise.resolve(true); // return value is not used\n        }\n        // Because of a bug in IE and Edge, the location class fires two events (popstate and\n        // hashchange) every single time. The second one should be ignored. Otherwise, the URL will\n        // flicker. Handles the case when a popstate was emitted first.\n        if (lastNavigation && source == 'hashchange' && lastNavigation.source === 'popstate' &&\n            lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n            return Promise.resolve(true); // return value is not used\n        }\n        // Because of a bug in IE and Edge, the location class fires two events (popstate and\n        // hashchange) every single time. The second one should be ignored. Otherwise, the URL will\n        // flicker. Handles the case when a hashchange was emitted first.\n        if (lastNavigation && source == 'popstate' && lastNavigation.source === 'hashchange' &&\n            lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n            return Promise.resolve(true); // return value is not used\n        }\n        var resolve = null;\n        var reject = null;\n        var promise = new Promise(function (res, rej) {\n            resolve = res;\n            reject = rej;\n        });\n        var id = ++this.navigationId;\n        this.navigations.next({ id: id, source: source, state: state, rawUrl: rawUrl, extras: extras, resolve: resolve, reject: reject, promise: promise });\n        // Make sure that the error is propagated even though `processNavigations` catch\n        // handler does not rethrow\n        return promise.catch(function (e) { return Promise.reject(e); });\n    };\n    Router.prototype.executeScheduledNavigation = function (_a) {\n        var _this = this;\n        var id = _a.id, rawUrl = _a.rawUrl, extras = _a.extras, resolve = _a.resolve, reject = _a.reject, source = _a.source, state = _a.state;\n        var url = this.urlHandlingStrategy.extract(rawUrl);\n        var urlTransition = !this.navigated || url.toString() !== this.currentUrlTree.toString();\n        if ((this.onSameUrlNavigation === 'reload' ? true : urlTransition) &&\n            this.urlHandlingStrategy.shouldProcessUrl(rawUrl)) {\n            this.events\n                .next(new NavigationStart(id, this.serializeUrl(url), source, state));\n            Promise.resolve()\n                .then(function (_) { return _this.runNavigate(url, rawUrl, !!extras.skipLocationChange, !!extras.replaceUrl, id, null); })\n                .then(resolve, reject);\n            // we cannot process the current URL, but we could process the previous one =>\n            // we need to do some cleanup\n        }\n        else if (urlTransition && this.rawUrlTree &&\n            this.urlHandlingStrategy.shouldProcessUrl(this.rawUrlTree)) {\n            this.events\n                .next(new NavigationStart(id, this.serializeUrl(url), source, state));\n            Promise.resolve()\n                .then(function (_) { return _this.runNavigate(url, rawUrl, false, false, id, createEmptyState(url, _this.rootComponentType).snapshot); })\n                .then(resolve, reject);\n        }\n        else {\n            this.rawUrlTree = rawUrl;\n            resolve(null);\n        }\n    };\n    Router.prototype.runNavigate = function (url, rawUrl, skipLocationChange, replaceUrl, id, precreatedState) {\n        var _this = this;\n        if (id !== this.navigationId) {\n            this.events\n                .next(new NavigationCancel(id, this.serializeUrl(url), \"Navigation ID \" + id + \" is not equal to the current navigation id \" + this.navigationId));\n            return Promise.resolve(false);\n        }\n        return new Promise(function (resolvePromise, rejectPromise) {\n            // create an observable of the url and route state snapshot\n            // this operation do not result in any side effects\n            var urlAndSnapshot$;\n            if (!precreatedState) {\n                var moduleInjector = _this.ngModule.injector;\n                var redirectsApplied$ = applyRedirects(moduleInjector, _this.configLoader, _this.urlSerializer, url, _this.config);\n                urlAndSnapshot$ = redirectsApplied$.pipe(operators.mergeMap(function (appliedUrl) {\n                    return recognize(_this.rootComponentType, _this.config, appliedUrl, _this.serializeUrl(appliedUrl), _this.paramsInheritanceStrategy)\n                        .pipe(operators.map(function (snapshot) {\n                        _this.events\n                            .next(new RoutesRecognized(id, _this.serializeUrl(url), _this.serializeUrl(appliedUrl), snapshot));\n                        return { appliedUrl: appliedUrl, snapshot: snapshot };\n                    }));\n                }));\n            }\n            else {\n                urlAndSnapshot$ = rxjs.of({ appliedUrl: url, snapshot: precreatedState });\n            }\n            var beforePreactivationDone$ = urlAndSnapshot$.pipe(operators.mergeMap(function (p) {\n                if (typeof p === 'boolean')\n                    return rxjs.of(p);\n                return _this.hooks\n                    .beforePreactivation(p.snapshot, {\n                    navigationId: id,\n                    appliedUrlTree: url,\n                    rawUrlTree: rawUrl, skipLocationChange: skipLocationChange, replaceUrl: replaceUrl,\n                })\n                    .pipe(operators.map(function () { return p; }));\n            }));\n            // run preactivation: guards and data resolvers\n            var preActivation;\n            var preactivationSetup$ = beforePreactivationDone$.pipe(operators.map(function (p) {\n                if (typeof p === 'boolean')\n                    return p;\n                var appliedUrl = p.appliedUrl, snapshot = p.snapshot;\n                var moduleInjector = _this.ngModule.injector;\n                preActivation = new PreActivation(snapshot, _this.routerState.snapshot, moduleInjector, function (evt) { return _this.triggerEvent(evt); });\n                preActivation.initialize(_this.rootContexts);\n                return { appliedUrl: appliedUrl, snapshot: snapshot };\n            }));\n            var preactivationCheckGuards$ = preactivationSetup$.pipe(operators.mergeMap(function (p) {\n                if (typeof p === 'boolean' || _this.navigationId !== id)\n                    return rxjs.of(false);\n                var appliedUrl = p.appliedUrl, snapshot = p.snapshot;\n                _this.triggerEvent(new GuardsCheckStart(id, _this.serializeUrl(url), _this.serializeUrl(appliedUrl), snapshot));\n                return preActivation.checkGuards().pipe(operators.map(function (shouldActivate) {\n                    _this.triggerEvent(new GuardsCheckEnd(id, _this.serializeUrl(url), _this.serializeUrl(appliedUrl), snapshot, shouldActivate));\n                    return { appliedUrl: appliedUrl, snapshot: snapshot, shouldActivate: shouldActivate };\n                }));\n            }));\n            var preactivationResolveData$ = preactivationCheckGuards$.pipe(operators.mergeMap(function (p) {\n                if (typeof p === 'boolean' || _this.navigationId !== id)\n                    return rxjs.of(false);\n                if (p.shouldActivate && preActivation.isActivating()) {\n                    _this.triggerEvent(new ResolveStart(id, _this.serializeUrl(url), _this.serializeUrl(p.appliedUrl), p.snapshot));\n                    return preActivation.resolveData(_this.paramsInheritanceStrategy).pipe(operators.map(function () {\n                        _this.triggerEvent(new ResolveEnd(id, _this.serializeUrl(url), _this.serializeUrl(p.appliedUrl), p.snapshot));\n                        return p;\n                    }));\n                }\n                else {\n                    return rxjs.of(p);\n                }\n            }));\n            var preactivationDone$ = preactivationResolveData$.pipe(operators.mergeMap(function (p) {\n                if (typeof p === 'boolean' || _this.navigationId !== id)\n                    return rxjs.of(false);\n                return _this.hooks\n                    .afterPreactivation(p.snapshot, {\n                    navigationId: id,\n                    appliedUrlTree: url,\n                    rawUrlTree: rawUrl, skipLocationChange: skipLocationChange, replaceUrl: replaceUrl,\n                })\n                    .pipe(operators.map(function () { return p; }));\n            }));\n            // create router state\n            // this operation has side effects => route state is being affected\n            var routerState$ = preactivationDone$.pipe(operators.map(function (p) {\n                if (typeof p === 'boolean' || _this.navigationId !== id)\n                    return false;\n                var appliedUrl = p.appliedUrl, snapshot = p.snapshot, shouldActivate = p.shouldActivate;\n                if (shouldActivate) {\n                    var state = createRouterState(_this.routeReuseStrategy, snapshot, _this.routerState);\n                    return { appliedUrl: appliedUrl, state: state, shouldActivate: shouldActivate };\n                }\n                else {\n                    return { appliedUrl: appliedUrl, state: null, shouldActivate: shouldActivate };\n                }\n            }));\n            _this.activateRoutes(routerState$, _this.routerState, _this.currentUrlTree, id, url, rawUrl, skipLocationChange, replaceUrl, resolvePromise, rejectPromise);\n        });\n    };\n    /**\n     * Performs the logic of activating routes. This is a synchronous process by default. While this\n     * is a private method, it could be overridden to make activation asynchronous.\n     */\n    Router.prototype.activateRoutes = function (state, storedState, storedUrl, id, url, rawUrl, skipLocationChange, replaceUrl, resolvePromise, rejectPromise) {\n        var _this = this;\n        // applied the new router state\n        // this operation has side effects\n        var navigationIsSuccessful;\n        state\n            .forEach(function (p) {\n            if (typeof p === 'boolean' || !p.shouldActivate || id !== _this.navigationId || !p.state) {\n                navigationIsSuccessful = false;\n                return;\n            }\n            var appliedUrl = p.appliedUrl, state = p.state;\n            _this.currentUrlTree = appliedUrl;\n            _this.rawUrlTree = _this.urlHandlingStrategy.merge(_this.currentUrlTree, rawUrl);\n            _this.routerState = state;\n            if (!skipLocationChange) {\n                var path = _this.urlSerializer.serialize(_this.rawUrlTree);\n                if (_this.location.isCurrentPathEqualTo(path) || replaceUrl) {\n                    _this.location.replaceState(path, '', { navigationId: id });\n                }\n                else {\n                    _this.location.go(path, '', { navigationId: id });\n                }\n            }\n            new ActivateRoutes(_this.routeReuseStrategy, state, storedState, function (evt) { return _this.triggerEvent(evt); })\n                .activate(_this.rootContexts);\n            navigationIsSuccessful = true;\n        })\n            .then(function () {\n            if (navigationIsSuccessful) {\n                _this.navigated = true;\n                _this.lastSuccessfulId = id;\n                _this.events\n                    .next(new NavigationEnd(id, _this.serializeUrl(url), _this.serializeUrl(_this.currentUrlTree)));\n                resolvePromise(true);\n            }\n            else {\n                _this.resetUrlToCurrentUrlTree();\n                _this.events\n                    .next(new NavigationCancel(id, _this.serializeUrl(url), ''));\n                resolvePromise(false);\n            }\n        }, function (e) {\n            if (isNavigationCancelingError(e)) {\n                _this.navigated = true;\n                _this.resetStateAndUrl(storedState, storedUrl, rawUrl);\n                _this.events\n                    .next(new NavigationCancel(id, _this.serializeUrl(url), e.message));\n                resolvePromise(false);\n            }\n            else {\n                _this.resetStateAndUrl(storedState, storedUrl, rawUrl);\n                _this.events\n                    .next(new NavigationError(id, _this.serializeUrl(url), e));\n                try {\n                    resolvePromise(_this.errorHandler(e));\n                }\n                catch (ee) {\n                    rejectPromise(ee);\n                }\n            }\n        });\n    };\n    Router.prototype.resetStateAndUrl = function (storedState, storedUrl, rawUrl) {\n        this.routerState = storedState;\n        this.currentUrlTree = storedUrl;\n        this.rawUrlTree = this.urlHandlingStrategy.merge(this.currentUrlTree, rawUrl);\n        this.resetUrlToCurrentUrlTree();\n    };\n    Router.prototype.resetUrlToCurrentUrlTree = function () {\n        this.location.replaceState(this.urlSerializer.serialize(this.rawUrlTree), '', { navigationId: this.lastSuccessfulId });\n    };\n    return Router;\n}());\nvar ActivateRoutes = /** @class */ (function () {\n    function ActivateRoutes(routeReuseStrategy, futureState, currState, forwardEvent) {\n        this.routeReuseStrategy = routeReuseStrategy;\n        this.futureState = futureState;\n        this.currState = currState;\n        this.forwardEvent = forwardEvent;\n    }\n    ActivateRoutes.prototype.activate = function (parentContexts) {\n        var futureRoot = this.futureState._root;\n        var currRoot = this.currState ? this.currState._root : null;\n        this.deactivateChildRoutes(futureRoot, currRoot, parentContexts);\n        advanceActivatedRoute(this.futureState.root);\n        this.activateChildRoutes(futureRoot, currRoot, parentContexts);\n    };\n    // De-activate the child route that are not re-used for the future state\n    ActivateRoutes.prototype.deactivateChildRoutes = function (futureNode, currNode, contexts) {\n        var _this = this;\n        var children = nodeChildrenAsMap(currNode);\n        // Recurse on the routes active in the future state to de-activate deeper children\n        futureNode.children.forEach(function (futureChild) {\n            var childOutletName = futureChild.value.outlet;\n            _this.deactivateRoutes(futureChild, children[childOutletName], contexts);\n            delete children[childOutletName];\n        });\n        // De-activate the routes that will not be re-used\n        forEach(children, function (v, childName) {\n            _this.deactivateRouteAndItsChildren(v, contexts);\n        });\n    };\n    ActivateRoutes.prototype.deactivateRoutes = function (futureNode, currNode, parentContext) {\n        var future = futureNode.value;\n        var curr = currNode ? currNode.value : null;\n        if (future === curr) {\n            // Reusing the node, check to see if the children need to be de-activated\n            if (future.component) {\n                // If we have a normal route, we need to go through an outlet.\n                var context = parentContext.getContext(future.outlet);\n                if (context) {\n                    this.deactivateChildRoutes(futureNode, currNode, context.children);\n                }\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.deactivateChildRoutes(futureNode, currNode, parentContext);\n            }\n        }\n        else {\n            if (curr) {\n                // Deactivate the current route which will not be re-used\n                this.deactivateRouteAndItsChildren(currNode, parentContext);\n            }\n        }\n    };\n    ActivateRoutes.prototype.deactivateRouteAndItsChildren = function (route, parentContexts) {\n        if (this.routeReuseStrategy.shouldDetach(route.value.snapshot)) {\n            this.detachAndStoreRouteSubtree(route, parentContexts);\n        }\n        else {\n            this.deactivateRouteAndOutlet(route, parentContexts);\n        }\n    };\n    ActivateRoutes.prototype.detachAndStoreRouteSubtree = function (route, parentContexts) {\n        var context = parentContexts.getContext(route.value.outlet);\n        if (context && context.outlet) {\n            var componentRef = context.outlet.detach();\n            var contexts = context.children.onOutletDeactivated();\n            this.routeReuseStrategy.store(route.value.snapshot, { componentRef: componentRef, route: route, contexts: contexts });\n        }\n    };\n    ActivateRoutes.prototype.deactivateRouteAndOutlet = function (route, parentContexts) {\n        var _this = this;\n        var context = parentContexts.getContext(route.value.outlet);\n        if (context) {\n            var children = nodeChildrenAsMap(route);\n            var contexts_1 = route.value.component ? context.children : parentContexts;\n            forEach(children, function (v, k) { return _this.deactivateRouteAndItsChildren(v, contexts_1); });\n            if (context.outlet) {\n                // Destroy the component\n                context.outlet.deactivate();\n                // Destroy the contexts for all the outlets that were in the component\n                context.children.onOutletDeactivated();\n            }\n        }\n    };\n    ActivateRoutes.prototype.activateChildRoutes = function (futureNode, currNode, contexts) {\n        var _this = this;\n        var children = nodeChildrenAsMap(currNode);\n        futureNode.children.forEach(function (c) {\n            _this.activateRoutes(c, children[c.value.outlet], contexts);\n            _this.forwardEvent(new ActivationEnd(c.value.snapshot));\n        });\n        if (futureNode.children.length) {\n            this.forwardEvent(new ChildActivationEnd(futureNode.value.snapshot));\n        }\n    };\n    ActivateRoutes.prototype.activateRoutes = function (futureNode, currNode, parentContexts) {\n        var future = futureNode.value;\n        var curr = currNode ? currNode.value : null;\n        advanceActivatedRoute(future);\n        // reusing the node\n        if (future === curr) {\n            if (future.component) {\n                // If we have a normal route, we need to go through an outlet.\n                var context = parentContexts.getOrCreateContext(future.outlet);\n                this.activateChildRoutes(futureNode, currNode, context.children);\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.activateChildRoutes(futureNode, currNode, parentContexts);\n            }\n        }\n        else {\n            if (future.component) {\n                // if we have a normal route, we need to place the component into the outlet and recurse.\n                var context = parentContexts.getOrCreateContext(future.outlet);\n                if (this.routeReuseStrategy.shouldAttach(future.snapshot)) {\n                    var stored = this.routeReuseStrategy.retrieve(future.snapshot);\n                    this.routeReuseStrategy.store(future.snapshot, null);\n                    context.children.onOutletReAttached(stored.contexts);\n                    context.attachRef = stored.componentRef;\n                    context.route = stored.route.value;\n                    if (context.outlet) {\n                        // Attach right away when the outlet has already been instantiated\n                        // Otherwise attach from `RouterOutlet.ngOnInit` when it is instantiated\n                        context.outlet.attach(stored.componentRef, stored.route.value);\n                    }\n                    advanceActivatedRouteNodeAndItsChildren(stored.route);\n                }\n                else {\n                    var config = parentLoadedConfig(future.snapshot);\n                    var cmpFactoryResolver = config ? config.module.componentFactoryResolver : null;\n                    context.route = future;\n                    context.resolver = cmpFactoryResolver;\n                    if (context.outlet) {\n                        // Activate the outlet when it has already been instantiated\n                        // Otherwise it will get activated from its `ngOnInit` when instantiated\n                        context.outlet.activateWith(future, cmpFactoryResolver);\n                    }\n                    this.activateChildRoutes(futureNode, null, context.children);\n                }\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.activateChildRoutes(futureNode, null, parentContexts);\n            }\n        }\n    };\n    return ActivateRoutes;\n}());\nfunction advanceActivatedRouteNodeAndItsChildren(node) {\n    advanceActivatedRoute(node.value);\n    node.children.forEach(advanceActivatedRouteNodeAndItsChildren);\n}\nfunction parentLoadedConfig(snapshot) {\n    for (var s = snapshot.parent; s; s = s.parent) {\n        var route = s.routeConfig;\n        if (route && route._loadedConfig)\n            return route._loadedConfig;\n        if (route && route.component)\n            return null;\n    }\n    return null;\n}\nfunction validateCommands(commands) {\n    for (var i = 0; i < commands.length; i++) {\n        var cmd = commands[i];\n        if (cmd == null) {\n            throw new Error(\"The requested path contains \" + cmd + \" segment at index \" + i);\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Lets you link to specific routes in your app.\n *\n * Consider the following route configuration:\n * `[{ path: 'user/:name', component: UserCmp }]`.\n * When linking to this `user/:name` route, you use the `RouterLink` directive.\n *\n * If the link is static, you can use the directive as follows:\n * `<a routerLink=\"/user/bob\">link to user component</a>`\n *\n * If you use dynamic values to generate the link, you can pass an array of path\n * segments, followed by the params for each segment.\n *\n * For instance `['/team', teamId, 'user', userName, {details: true}]`\n * means that we want to generate a link to `/team/11/user/bob;details=true`.\n *\n * Multiple static segments can be merged into one\n * (e.g., `['/team/11/user', userName, {details: true}]`).\n *\n * The first segment name can be prepended with `/`, `./`, or `../`:\n * * If the first segment begins with `/`, the router will look up the route from the root of the\n *   app.\n * * If the first segment begins with `./`, or doesn't begin with a slash, the router will\n *   instead look in the children of the current activated route.\n * * And if the first segment begins with `../`, the router will go up one level.\n *\n * You can set query params and fragment as follows:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" fragment=\"education\">\n *   link to user component\n * </a>\n * ```\n * RouterLink will use these to generate this link: `/user/bob#education?debug=true`.\n *\n * (Deprecated in v4.0.0 use `queryParamsHandling` instead) You can also tell the\n * directive to preserve the current query params and fragment:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" preserveQueryParams preserveFragment>\n *   link to user component\n * </a>\n * ```\n *\n * You can tell the directive to how to handle queryParams, available options are:\n *  - `'merge'`: merge the queryParams into the current queryParams\n *  - `'preserve'`: preserve the current queryParams\n *  - default/`''`: use the queryParams only\n *\n * Same options for {@link NavigationExtras#queryParamsHandling\n * NavigationExtras#queryParamsHandling}.\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" queryParamsHandling=\"merge\">\n *   link to user component\n * </a>\n * ```\n *\n * The router link directive always treats the provided input as a delta to the current url.\n *\n * For instance, if the current url is `/user/(box//aux:team)`.\n *\n * Then the following link `<a [routerLink]=\"['/user/jim']\">Jim</a>` will generate the link\n * `/user/(jim//aux:team)`.\n *\n * See {@link Router#createUrlTree createUrlTree} for more information.\n *\n * @ngModule RouterModule\n *\n *\n */\nvar RouterLink = /** @class */ (function () {\n    function RouterLink(router, route, tabIndex, renderer, el) {\n        this.router = router;\n        this.route = route;\n        this.commands = [];\n        if (tabIndex == null) {\n            renderer.setAttribute(el.nativeElement, 'tabindex', '0');\n        }\n    }\n    Object.defineProperty(RouterLink.prototype, \"routerLink\", {\n        set: function (commands) {\n            if (commands != null) {\n                this.commands = Array.isArray(commands) ? commands : [commands];\n            }\n            else {\n                this.commands = [];\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterLink.prototype, \"preserveQueryParams\", {\n        /**\n         * @deprecated 4.0.0 use `queryParamsHandling` instead.\n         */\n        set: function (value) {\n            if (core.isDevMode() && console && console.warn) {\n                console.warn('preserveQueryParams is deprecated!, use queryParamsHandling instead.');\n            }\n            this.preserve = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RouterLink.prototype.onClick = function () {\n        var extras = {\n            skipLocationChange: attrBoolValue(this.skipLocationChange),\n            replaceUrl: attrBoolValue(this.replaceUrl),\n        };\n        this.router.navigateByUrl(this.urlTree, extras);\n        return true;\n    };\n    Object.defineProperty(RouterLink.prototype, \"urlTree\", {\n        get: function () {\n            return this.router.createUrlTree(this.commands, {\n                relativeTo: this.route,\n                queryParams: this.queryParams,\n                fragment: this.fragment,\n                preserveQueryParams: attrBoolValue(this.preserve),\n                queryParamsHandling: this.queryParamsHandling,\n                preserveFragment: attrBoolValue(this.preserveFragment),\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    __decorate([\n        core.Input(),\n        __metadata(\"design:type\", Object)\n    ], RouterLink.prototype, \"queryParams\", void 0);\n    __decorate([\n        core.Input(),\n        __metadata(\"design:type\", String)\n    ], RouterLink.prototype, \"fragment\", void 0);\n    __decorate([\n        core.Input(),\n        __metadata(\"design:type\", String)\n    ], RouterLink.prototype, \"queryParamsHandling\", void 0);\n    __decorate([\n        core.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], RouterLink.prototype, \"preserveFragment\", void 0);\n    __decorate([\n        core.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], RouterLink.prototype, \"skipLocationChange\", void 0);\n    __decorate([\n        core.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], RouterLink.prototype, \"replaceUrl\", void 0);\n    __decorate([\n        core.Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], RouterLink.prototype, \"routerLink\", null);\n    __decorate([\n        core.Input(),\n        __metadata(\"design:type\", Boolean),\n        __metadata(\"design:paramtypes\", [Boolean])\n    ], RouterLink.prototype, \"preserveQueryParams\", null);\n    __decorate([\n        core.HostListener('click'),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Boolean)\n    ], RouterLink.prototype, \"onClick\", null);\n    RouterLink = __decorate([\n        core.Directive({ selector: ':not(a)[routerLink]' }),\n        __param(2, core.Attribute('tabindex')),\n        __metadata(\"design:paramtypes\", [Router, ActivatedRoute, String, core.Renderer2, core.ElementRef])\n    ], RouterLink);\n    return RouterLink;\n}());\n/**\n * @description\n *\n * Lets you link to specific routes in your app.\n *\n * See `RouterLink` for more information.\n *\n * @ngModule RouterModule\n *\n *\n */\nvar RouterLinkWithHref = /** @class */ (function () {\n    function RouterLinkWithHref(router, route, locationStrategy) {\n        var _this = this;\n        this.router = router;\n        this.route = route;\n        this.locationStrategy = locationStrategy;\n        this.commands = [];\n        this.subscription = router.events.subscribe(function (s) {\n            if (s instanceof NavigationEnd) {\n                _this.updateTargetUrlAndHref();\n            }\n        });\n    }\n    Object.defineProperty(RouterLinkWithHref.prototype, \"routerLink\", {\n        set: function (commands) {\n            if (commands != null) {\n                this.commands = Array.isArray(commands) ? commands : [commands];\n            }\n            else {\n                this.commands = [];\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterLinkWithHref.prototype, \"preserveQueryParams\", {\n        set: function (value) {\n            if (core.isDevMode() && console && console.warn) {\n                console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n            }\n            this.preserve = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RouterLinkWithHref.prototype.ngOnChanges = function (changes) { this.updateTargetUrlAndHref(); };\n    RouterLinkWithHref.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n    RouterLinkWithHref.prototype.onClick = function (button, ctrlKey, metaKey, shiftKey) {\n        if (button !== 0 || ctrlKey || metaKey || shiftKey) {\n            return true;\n        }\n        if (typeof this.target === 'string' && this.target != '_self') {\n            return true;\n        }\n        var extras = {\n            skipLocationChange: attrBoolValue(this.skipLocationChange),\n            replaceUrl: attrBoolValue(this.replaceUrl),\n        };\n        this.router.navigateByUrl(this.urlTree, extras);\n        return false;\n    };\n    RouterLinkWithHref.prototype.updateTargetUrlAndHref = function () {\n        this.href = this.locationStrategy.prepareExternalUrl(this.router.serializeUrl(this.urlTree));\n    };\n    Object.defineProperty(RouterLinkWithHref.prototype, \"urlTree\", {\n        get: function () {\n            return this.router.createUrlTree(this.commands, {\n                relativeTo: this.route,\n                queryParams: this.queryParams,\n                fragment: this.fragment,\n                preserveQueryParams: attrBoolValue(this.preserve),\n                queryParamsHandling: this.queryParamsHandling,\n                preserveFragment: attrBoolValue(this.preserveFragment),\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    __decorate([\n        core.HostBinding('attr.target'), core.Input(),\n        __metadata(\"design:type\", String)\n    ], RouterLinkWithHref.prototype, \"target\", void 0);\n    __decorate([\n        core.Input(),\n        __metadata(\"design:type\", Object)\n    ], RouterLinkWithHref.prototype, \"queryParams\", void 0);\n    __decorate([\n        core.Input(),\n        __metadata(\"design:type\", String)\n    ], RouterLinkWithHref.prototype, \"fragment\", void 0);\n    __decorate([\n        core.Input(),\n        __metadata(\"design:type\", String)\n    ], RouterLinkWithHref.prototype, \"queryParamsHandling\", void 0);\n    __decorate([\n        core.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], RouterLinkWithHref.prototype, \"preserveFragment\", void 0);\n    __decorate([\n        core.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], RouterLinkWithHref.prototype, \"skipLocationChange\", void 0);\n    __decorate([\n        core.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], RouterLinkWithHref.prototype, \"replaceUrl\", void 0);\n    __decorate([\n        core.HostBinding(),\n        __metadata(\"design:type\", String)\n    ], RouterLinkWithHref.prototype, \"href\", void 0);\n    __decorate([\n        core.Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], RouterLinkWithHref.prototype, \"routerLink\", null);\n    __decorate([\n        core.Input(),\n        __metadata(\"design:type\", Boolean),\n        __metadata(\"design:paramtypes\", [Boolean])\n    ], RouterLinkWithHref.prototype, \"preserveQueryParams\", null);\n    __decorate([\n        core.HostListener('click', ['$event.button', '$event.ctrlKey', '$event.metaKey', '$event.shiftKey']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number, Boolean, Boolean, Boolean]),\n        __metadata(\"design:returntype\", Boolean)\n    ], RouterLinkWithHref.prototype, \"onClick\", null);\n    RouterLinkWithHref = __decorate([\n        core.Directive({ selector: 'a[routerLink]' }),\n        __metadata(\"design:paramtypes\", [Router, ActivatedRoute,\n            common.LocationStrategy])\n    ], RouterLinkWithHref);\n    return RouterLinkWithHref;\n}());\nfunction attrBoolValue(s) {\n    return s === '' || !!s;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n *\n * @description\n *\n * Lets you add a CSS class to an element when the link's route becomes active.\n *\n * This directive lets you add a CSS class to an element when the link's route\n * becomes active.\n *\n * Consider the following example:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\">Bob</a>\n * ```\n *\n * When the url is either '/user' or '/user/bob', the active-link class will\n * be added to the `a` tag. If the url changes, the class will be removed.\n *\n * You can set more than one class, as follows:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"class1 class2\">Bob</a>\n * <a routerLink=\"/user/bob\" [routerLinkActive]=\"['class1', 'class2']\">Bob</a>\n * ```\n *\n * You can configure RouterLinkActive by passing `exact: true`. This will add the classes\n * only when the url matches the link exactly.\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact:\n * true}\">Bob</a>\n * ```\n *\n * You can assign the RouterLinkActive instance to a template variable and directly check\n * the `isActive` status.\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive #rla=\"routerLinkActive\">\n *   Bob {{ rla.isActive ? '(already open)' : ''}}\n * </a>\n * ```\n *\n * Finally, you can apply the RouterLinkActive directive to an ancestor of a RouterLink.\n *\n * ```\n * <div routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact: true}\">\n *   <a routerLink=\"/user/jim\">Jim</a>\n *   <a routerLink=\"/user/bob\">Bob</a>\n * </div>\n * ```\n *\n * This will set the active-link class on the div tag if the url is either '/user/jim' or\n * '/user/bob'.\n *\n * @ngModule RouterModule\n *\n *\n */\nvar RouterLinkActive = /** @class */ (function () {\n    function RouterLinkActive(router, element, renderer, cdr) {\n        var _this = this;\n        this.router = router;\n        this.element = element;\n        this.renderer = renderer;\n        this.cdr = cdr;\n        this.classes = [];\n        this.isActive = false;\n        this.routerLinkActiveOptions = { exact: false };\n        this.subscription = router.events.subscribe(function (s) {\n            if (s instanceof NavigationEnd) {\n                _this.update();\n            }\n        });\n    }\n    RouterLinkActive.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        this.links.changes.subscribe(function (_) { return _this.update(); });\n        this.linksWithHrefs.changes.subscribe(function (_) { return _this.update(); });\n        this.update();\n    };\n    Object.defineProperty(RouterLinkActive.prototype, \"routerLinkActive\", {\n        set: function (data) {\n            var classes = Array.isArray(data) ? data : data.split(' ');\n            this.classes = classes.filter(function (c) { return !!c; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RouterLinkActive.prototype.ngOnChanges = function (changes) { this.update(); };\n    RouterLinkActive.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n    RouterLinkActive.prototype.update = function () {\n        var _this = this;\n        if (!this.links || !this.linksWithHrefs || !this.router.navigated)\n            return;\n        Promise.resolve().then(function () {\n            var hasActiveLinks = _this.hasActiveLinks();\n            if (_this.isActive !== hasActiveLinks) {\n                _this.isActive = hasActiveLinks;\n                _this.classes.forEach(function (c) {\n                    if (hasActiveLinks) {\n                        _this.renderer.addClass(_this.element.nativeElement, c);\n                    }\n                    else {\n                        _this.renderer.removeClass(_this.element.nativeElement, c);\n                    }\n                });\n            }\n        });\n    };\n    RouterLinkActive.prototype.isLinkActive = function (router) {\n        var _this = this;\n        return function (link) {\n            return router.isActive(link.urlTree, _this.routerLinkActiveOptions.exact);\n        };\n    };\n    RouterLinkActive.prototype.hasActiveLinks = function () {\n        return this.links.some(this.isLinkActive(this.router)) ||\n            this.linksWithHrefs.some(this.isLinkActive(this.router));\n    };\n    __decorate([\n        core.ContentChildren(RouterLink, { descendants: true }),\n        __metadata(\"design:type\", core.QueryList)\n    ], RouterLinkActive.prototype, \"links\", void 0);\n    __decorate([\n        core.ContentChildren(RouterLinkWithHref, { descendants: true }),\n        __metadata(\"design:type\", core.QueryList)\n    ], RouterLinkActive.prototype, \"linksWithHrefs\", void 0);\n    __decorate([\n        core.Input(),\n        __metadata(\"design:type\", Object)\n    ], RouterLinkActive.prototype, \"routerLinkActiveOptions\", void 0);\n    __decorate([\n        core.Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], RouterLinkActive.prototype, \"routerLinkActive\", null);\n    RouterLinkActive = __decorate([\n        core.Directive({\n            selector: '[routerLinkActive]',\n            exportAs: 'routerLinkActive',\n        }),\n        __metadata(\"design:paramtypes\", [Router, core.ElementRef, core.Renderer2,\n            core.ChangeDetectorRef])\n    ], RouterLinkActive);\n    return RouterLinkActive;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Store contextual information about a `RouterOutlet`\n *\n *\n */\nvar OutletContext = /** @class */ (function () {\n    function OutletContext() {\n        this.outlet = null;\n        this.route = null;\n        this.resolver = null;\n        this.children = new ChildrenOutletContexts();\n        this.attachRef = null;\n    }\n    return OutletContext;\n}());\n/**\n * Store contextual information about the children (= nested) `RouterOutlet`\n *\n *\n */\nvar ChildrenOutletContexts = /** @class */ (function () {\n    function ChildrenOutletContexts() {\n        // contexts for child outlets, by name.\n        this.contexts = new Map();\n    }\n    /** Called when a `RouterOutlet` directive is instantiated */\n    ChildrenOutletContexts.prototype.onChildOutletCreated = function (childName, outlet) {\n        var context = this.getOrCreateContext(childName);\n        context.outlet = outlet;\n        this.contexts.set(childName, context);\n    };\n    /**\n     * Called when a `RouterOutlet` directive is destroyed.\n     * We need to keep the context as the outlet could be destroyed inside a NgIf and might be\n     * re-created later.\n     */\n    ChildrenOutletContexts.prototype.onChildOutletDestroyed = function (childName) {\n        var context = this.getContext(childName);\n        if (context) {\n            context.outlet = null;\n        }\n    };\n    /**\n     * Called when the corresponding route is deactivated during navigation.\n     * Because the component get destroyed, all children outlet are destroyed.\n     */\n    ChildrenOutletContexts.prototype.onOutletDeactivated = function () {\n        var contexts = this.contexts;\n        this.contexts = new Map();\n        return contexts;\n    };\n    ChildrenOutletContexts.prototype.onOutletReAttached = function (contexts) { this.contexts = contexts; };\n    ChildrenOutletContexts.prototype.getOrCreateContext = function (childName) {\n        var context = this.getContext(childName);\n        if (!context) {\n            context = new OutletContext();\n            this.contexts.set(childName, context);\n        }\n        return context;\n    };\n    ChildrenOutletContexts.prototype.getContext = function (childName) { return this.contexts.get(childName) || null; };\n    return ChildrenOutletContexts;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Acts as a placeholder that Angular dynamically fills based on the current router state.\n *\n * ```\n * <router-outlet></router-outlet>\n * <router-outlet name='left'></router-outlet>\n * <router-outlet name='right'></router-outlet>\n * ```\n *\n * A router outlet will emit an activate event any time a new component is being instantiated,\n * and a deactivate event when it is being destroyed.\n *\n * ```\n * <router-outlet\n *   (activate)='onActivate($event)'\n *   (deactivate)='onDeactivate($event)'></router-outlet>\n * ```\n * @ngModule RouterModule\n *\n *\n */\nvar RouterOutlet = /** @class */ (function () {\n    function RouterOutlet(parentContexts, location, resolver, name, changeDetector) {\n        this.parentContexts = parentContexts;\n        this.location = location;\n        this.resolver = resolver;\n        this.changeDetector = changeDetector;\n        this.activated = null;\n        this._activatedRoute = null;\n        this.activateEvents = new core.EventEmitter();\n        this.deactivateEvents = new core.EventEmitter();\n        this.name = name || PRIMARY_OUTLET;\n        parentContexts.onChildOutletCreated(this.name, this);\n    }\n    RouterOutlet.prototype.ngOnDestroy = function () { this.parentContexts.onChildOutletDestroyed(this.name); };\n    RouterOutlet.prototype.ngOnInit = function () {\n        if (!this.activated) {\n            // If the outlet was not instantiated at the time the route got activated we need to populate\n            // the outlet when it is initialized (ie inside a NgIf)\n            var context = this.parentContexts.getContext(this.name);\n            if (context && context.route) {\n                if (context.attachRef) {\n                    // `attachRef` is populated when there is an existing component to mount\n                    this.attach(context.attachRef, context.route);\n                }\n                else {\n                    // otherwise the component defined in the configuration is created\n                    this.activateWith(context.route, context.resolver || null);\n                }\n            }\n        }\n    };\n    Object.defineProperty(RouterOutlet.prototype, \"isActivated\", {\n        get: function () { return !!this.activated; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"component\", {\n        get: function () {\n            if (!this.activated)\n                throw new Error('Outlet is not activated');\n            return this.activated.instance;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"activatedRoute\", {\n        get: function () {\n            if (!this.activated)\n                throw new Error('Outlet is not activated');\n            return this._activatedRoute;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"activatedRouteData\", {\n        get: function () {\n            if (this._activatedRoute) {\n                return this._activatedRoute.snapshot.data;\n            }\n            return {};\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Called when the `RouteReuseStrategy` instructs to detach the subtree\n     */\n    RouterOutlet.prototype.detach = function () {\n        if (!this.activated)\n            throw new Error('Outlet is not activated');\n        this.location.detach();\n        var cmp = this.activated;\n        this.activated = null;\n        this._activatedRoute = null;\n        return cmp;\n    };\n    /**\n     * Called when the `RouteReuseStrategy` instructs to re-attach a previously detached subtree\n     */\n    RouterOutlet.prototype.attach = function (ref, activatedRoute) {\n        this.activated = ref;\n        this._activatedRoute = activatedRoute;\n        this.location.insert(ref.hostView);\n    };\n    RouterOutlet.prototype.deactivate = function () {\n        if (this.activated) {\n            var c = this.component;\n            this.activated.destroy();\n            this.activated = null;\n            this._activatedRoute = null;\n            this.deactivateEvents.emit(c);\n        }\n    };\n    RouterOutlet.prototype.activateWith = function (activatedRoute, resolver) {\n        if (this.isActivated) {\n            throw new Error('Cannot activate an already activated outlet');\n        }\n        this._activatedRoute = activatedRoute;\n        var snapshot = activatedRoute._futureSnapshot;\n        var component = snapshot.routeConfig.component;\n        resolver = resolver || this.resolver;\n        var factory = resolver.resolveComponentFactory(component);\n        var childContexts = this.parentContexts.getOrCreateContext(this.name).children;\n        var injector = new OutletInjector(activatedRoute, childContexts, this.location.injector);\n        this.activated = this.location.createComponent(factory, this.location.length, injector);\n        // Calling `markForCheck` to make sure we will run the change detection when the\n        // `RouterOutlet` is inside a `ChangeDetectionStrategy.OnPush` component.\n        this.changeDetector.markForCheck();\n        this.activateEvents.emit(this.activated.instance);\n    };\n    __decorate([\n        core.Output('activate'),\n        __metadata(\"design:type\", Object)\n    ], RouterOutlet.prototype, \"activateEvents\", void 0);\n    __decorate([\n        core.Output('deactivate'),\n        __metadata(\"design:type\", Object)\n    ], RouterOutlet.prototype, \"deactivateEvents\", void 0);\n    RouterOutlet = __decorate([\n        core.Directive({ selector: 'router-outlet', exportAs: 'outlet' }),\n        __param(3, core.Attribute('name')),\n        __metadata(\"design:paramtypes\", [ChildrenOutletContexts, core.ViewContainerRef,\n            core.ComponentFactoryResolver, String, core.ChangeDetectorRef])\n    ], RouterOutlet);\n    return RouterOutlet;\n}());\nvar OutletInjector = /** @class */ (function () {\n    function OutletInjector(route, childContexts, parent) {\n        this.route = route;\n        this.childContexts = childContexts;\n        this.parent = parent;\n    }\n    OutletInjector.prototype.get = function (token, notFoundValue) {\n        if (token === ActivatedRoute) {\n            return this.route;\n        }\n        if (token === ChildrenOutletContexts) {\n            return this.childContexts;\n        }\n        return this.parent.get(token, notFoundValue);\n    };\n    return OutletInjector;\n}());\n\n/**\n*@license\n*Copyright Google Inc. All Rights Reserved.\n*\n*Use of this source code is governed by an MIT-style license that can be\n*found in the LICENSE file at https://angular.io/license\n*/\n/**\n * @description\n *\n * Provides a preloading strategy.\n *\n * @experimental\n */\nvar PreloadingStrategy = /** @class */ (function () {\n    function PreloadingStrategy() {\n    }\n    return PreloadingStrategy;\n}());\n/**\n * @description\n *\n * Provides a preloading strategy that preloads all modules as quickly as possible.\n *\n * ```\n * RouteModule.forRoot(ROUTES, {preloadingStrategy: PreloadAllModules})\n * ```\n *\n * @experimental\n */\nvar PreloadAllModules = /** @class */ (function () {\n    function PreloadAllModules() {\n    }\n    PreloadAllModules.prototype.preload = function (route, fn) {\n        return fn().pipe(operators.catchError(function () { return rxjs.of(null); }));\n    };\n    return PreloadAllModules;\n}());\n/**\n * @description\n *\n * Provides a preloading strategy that does not preload any modules.\n *\n * This strategy is enabled by default.\n *\n * @experimental\n */\nvar NoPreloading = /** @class */ (function () {\n    function NoPreloading() {\n    }\n    NoPreloading.prototype.preload = function (route, fn) { return rxjs.of(null); };\n    return NoPreloading;\n}());\n/**\n * The preloader optimistically loads all router configurations to\n * make navigations into lazily-loaded sections of the application faster.\n *\n * The preloader runs in the background. When the router bootstraps, the preloader\n * starts listening to all navigation events. After every such event, the preloader\n * will check if any configurations can be loaded lazily.\n *\n * If a route is protected by `canLoad` guards, the preloaded will not load it.\n *\n *\n */\nvar RouterPreloader = /** @class */ (function () {\n    function RouterPreloader(router, moduleLoader, compiler, injector, preloadingStrategy) {\n        this.router = router;\n        this.injector = injector;\n        this.preloadingStrategy = preloadingStrategy;\n        var onStartLoad = function (r) { return router.triggerEvent(new RouteConfigLoadStart(r)); };\n        var onEndLoad = function (r) { return router.triggerEvent(new RouteConfigLoadEnd(r)); };\n        this.loader = new RouterConfigLoader(moduleLoader, compiler, onStartLoad, onEndLoad);\n    }\n    RouterPreloader.prototype.setUpPreloading = function () {\n        var _this = this;\n        this.subscription =\n            this.router.events\n                .pipe(operators.filter(function (e) { return e instanceof NavigationEnd; }), operators.concatMap(function () { return _this.preload(); }))\n                .subscribe(function () { });\n    };\n    RouterPreloader.prototype.preload = function () {\n        var ngModule = this.injector.get(core.NgModuleRef);\n        return this.processRoutes(ngModule, this.router.config);\n    };\n    // TODO(jasonaden): This class relies on code external to the class to call setUpPreloading. If\n    // this hasn't been done, ngOnDestroy will fail as this.subscription will be undefined. This\n    // should be refactored.\n    RouterPreloader.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n    RouterPreloader.prototype.processRoutes = function (ngModule, routes) {\n        var res = [];\n        try {\n            for (var routes_1 = __values(routes), routes_1_1 = routes_1.next(); !routes_1_1.done; routes_1_1 = routes_1.next()) {\n                var route = routes_1_1.value;\n                // we already have the config loaded, just recurse\n                if (route.loadChildren && !route.canLoad && route._loadedConfig) {\n                    var childConfig = route._loadedConfig;\n                    res.push(this.processRoutes(childConfig.module, childConfig.routes));\n                    // no config loaded, fetch the config\n                }\n                else if (route.loadChildren && !route.canLoad) {\n                    res.push(this.preloadConfig(ngModule, route));\n                    // recurse into children\n                }\n                else if (route.children) {\n                    res.push(this.processRoutes(ngModule, route.children));\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (routes_1_1 && !routes_1_1.done && (_a = routes_1.return)) _a.call(routes_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return rxjs.from(res).pipe(operators.mergeAll(), operators.map(function (_) { return void 0; }));\n        var e_1, _a;\n    };\n    RouterPreloader.prototype.preloadConfig = function (ngModule, route) {\n        var _this = this;\n        return this.preloadingStrategy.preload(route, function () {\n            var loaded$ = _this.loader.load(ngModule.injector, route);\n            return loaded$.pipe(operators.mergeMap(function (config) {\n                route._loadedConfig = config;\n                return _this.processRoutes(config.module, config.routes);\n            }));\n        });\n    };\n    RouterPreloader = __decorate([\n        core.Injectable(),\n        __metadata(\"design:paramtypes\", [Router, core.NgModuleFactoryLoader, core.Compiler,\n            core.Injector, PreloadingStrategy])\n    ], RouterPreloader);\n    return RouterPreloader;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Contains a list of directives\n *\n *\n */\nvar ROUTER_DIRECTIVES = [RouterOutlet, RouterLink, RouterLinkWithHref, RouterLinkActive];\n/**\n * @description\n *\n * Is used in DI to configure the router.\n *\n *\n */\nvar ROUTER_CONFIGURATION = new core.InjectionToken('ROUTER_CONFIGURATION');\n/**\n * @docsNotRequired\n */\nvar ROUTER_FORROOT_GUARD = new core.InjectionToken('ROUTER_FORROOT_GUARD');\nvar ROUTER_PROVIDERS = [\n    common.Location,\n    { provide: UrlSerializer, useClass: DefaultUrlSerializer },\n    {\n        provide: Router,\n        useFactory: setupRouter,\n        deps: [\n            core.ApplicationRef, UrlSerializer, ChildrenOutletContexts, common.Location, core.Injector,\n            core.NgModuleFactoryLoader, core.Compiler, ROUTES, ROUTER_CONFIGURATION,\n            [UrlHandlingStrategy, new core.Optional()], [RouteReuseStrategy, new core.Optional()]\n        ]\n    },\n    ChildrenOutletContexts,\n    { provide: ActivatedRoute, useFactory: rootRoute, deps: [Router] },\n    { provide: core.NgModuleFactoryLoader, useClass: core.SystemJsNgModuleLoader },\n    RouterPreloader,\n    NoPreloading,\n    PreloadAllModules,\n    { provide: ROUTER_CONFIGURATION, useValue: { enableTracing: false } },\n];\nfunction routerNgProbeToken() {\n    return new core.NgProbeToken('Router', Router);\n}\n/**\n * @usageNotes\n *\n * RouterModule can be imported multiple times: once per lazily-loaded bundle.\n * Since the router deals with a global shared resource--location, we cannot have\n * more than one router service active.\n *\n * That is why there are two ways to create the module: `RouterModule.forRoot` and\n * `RouterModule.forChild`.\n *\n * * `forRoot` creates a module that contains all the directives, the given routes, and the router\n *   service itself.\n * * `forChild` creates a module that contains all the directives and the given routes, but does not\n *   include the router service.\n *\n * When registered at the root, the module should be used as follows\n *\n * ```\n * @NgModule({\n *   imports: [RouterModule.forRoot(ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n * For submodules and lazy loaded submodules the module should be used as follows:\n *\n * ```\n * @NgModule({\n *   imports: [RouterModule.forChild(ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n * @description\n *\n * Adds router directives and providers.\n *\n * Managing state transitions is one of the hardest parts of building applications. This is\n * especially true on the web, where you also need to ensure that the state is reflected in the URL.\n * In addition, we often want to split applications into multiple bundles and load them on demand.\n * Doing this transparently is not trivial.\n *\n * The Angular router solves these problems. Using the router, you can declaratively specify\n * application states, manage state transitions while taking care of the URL, and load bundles on\n * demand.\n *\n * [Read this developer guide](https://angular.io/docs/ts/latest/guide/router.html) to get an\n * overview of how the router should be used.\n *\n *\n */\nvar RouterModule = /** @class */ (function () {\n    // Note: We are injecting the Router so it gets created eagerly...\n    function RouterModule(guard, router) {\n    }\n    RouterModule_1 = RouterModule;\n    /**\n     * Creates a module with all the router providers and directives. It also optionally sets up an\n     * application listener to perform an initial navigation.\n     *\n     * Options (see `ExtraOptions`):\n     * * `enableTracing` makes the router log all its internal events to the console.\n     * * `useHash` enables the location strategy that uses the URL fragment instead of the history\n     * API.\n     * * `initialNavigation` disables the initial navigation.\n     * * `errorHandler` provides a custom error handler.\n     * * `preloadingStrategy` configures a preloading strategy (see `PreloadAllModules`).\n     * * `onSameUrlNavigation` configures how the router handles navigation to the current URL. See\n     * `ExtraOptions` for more details.\n     */\n    RouterModule.forRoot = function (routes, config) {\n        return {\n            ngModule: RouterModule_1,\n            providers: [\n                ROUTER_PROVIDERS,\n                provideRoutes(routes),\n                {\n                    provide: ROUTER_FORROOT_GUARD,\n                    useFactory: provideForRootGuard,\n                    deps: [[Router, new core.Optional(), new core.SkipSelf()]]\n                },\n                { provide: ROUTER_CONFIGURATION, useValue: config ? config : {} },\n                {\n                    provide: common.LocationStrategy,\n                    useFactory: provideLocationStrategy,\n                    deps: [\n                        common.PlatformLocation, [new core.Inject(common.APP_BASE_HREF), new core.Optional()], ROUTER_CONFIGURATION\n                    ]\n                },\n                {\n                    provide: PreloadingStrategy,\n                    useExisting: config && config.preloadingStrategy ? config.preloadingStrategy :\n                        NoPreloading\n                },\n                { provide: core.NgProbeToken, multi: true, useFactory: routerNgProbeToken },\n                provideRouterInitializer(),\n            ],\n        };\n    };\n    /**\n     * Creates a module with all the router directives and a provider registering routes.\n     */\n    RouterModule.forChild = function (routes) {\n        return { ngModule: RouterModule_1, providers: [provideRoutes(routes)] };\n    };\n    RouterModule = RouterModule_1 = __decorate([\n        core.NgModule({ declarations: ROUTER_DIRECTIVES, exports: ROUTER_DIRECTIVES }),\n        __param(0, core.Optional()), __param(0, core.Inject(ROUTER_FORROOT_GUARD)), __param(1, core.Optional()),\n        __metadata(\"design:paramtypes\", [Object, Router])\n    ], RouterModule);\n    return RouterModule;\n    var RouterModule_1;\n}());\nfunction provideLocationStrategy(platformLocationStrategy, baseHref, options) {\n    if (options === void 0) { options = {}; }\n    return options.useHash ? new common.HashLocationStrategy(platformLocationStrategy, baseHref) :\n        new common.PathLocationStrategy(platformLocationStrategy, baseHref);\n}\nfunction provideForRootGuard(router) {\n    if (router) {\n        throw new Error(\"RouterModule.forRoot() called twice. Lazy loaded modules should use RouterModule.forChild() instead.\");\n    }\n    return 'guarded';\n}\n/**\n * @description\n *\n * Registers routes.\n *\n * ### Example\n *\n * ```\n * @NgModule({\n *   imports: [RouterModule.forChild(ROUTES)],\n *   providers: [provideRoutes(EXTRA_ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n *\n */\nfunction provideRoutes(routes) {\n    return [\n        { provide: core.ANALYZE_FOR_ENTRY_COMPONENTS, multi: true, useValue: routes },\n        { provide: ROUTES, multi: true, useValue: routes },\n    ];\n}\nfunction setupRouter(ref, urlSerializer, contexts, location, injector, loader, compiler, config, opts, urlHandlingStrategy, routeReuseStrategy) {\n    if (opts === void 0) { opts = {}; }\n    var router = new Router(null, urlSerializer, contexts, location, injector, loader, compiler, flatten(config));\n    if (urlHandlingStrategy) {\n        router.urlHandlingStrategy = urlHandlingStrategy;\n    }\n    if (routeReuseStrategy) {\n        router.routeReuseStrategy = routeReuseStrategy;\n    }\n    if (opts.errorHandler) {\n        router.errorHandler = opts.errorHandler;\n    }\n    if (opts.enableTracing) {\n        var dom_1 = platformBrowser.ɵgetDOM();\n        router.events.subscribe(function (e) {\n            dom_1.logGroup(\"Router Event: \" + e.constructor.name);\n            dom_1.log(e.toString());\n            dom_1.log(e);\n            dom_1.logGroupEnd();\n        });\n    }\n    if (opts.onSameUrlNavigation) {\n        router.onSameUrlNavigation = opts.onSameUrlNavigation;\n    }\n    if (opts.paramsInheritanceStrategy) {\n        router.paramsInheritanceStrategy = opts.paramsInheritanceStrategy;\n    }\n    return router;\n}\nfunction rootRoute(router) {\n    return router.routerState.root;\n}\n/**\n * To initialize the router properly we need to do in two steps:\n *\n * We need to start the navigation in a APP_INITIALIZER to block the bootstrap if\n * a resolver or a guards executes asynchronously. Second, we need to actually run\n * activation in a BOOTSTRAP_LISTENER. We utilize the afterPreactivation\n * hook provided by the router to do that.\n *\n * The router navigation starts, reaches the point when preactivation is done, and then\n * pauses. It waits for the hook to be resolved. We then resolve it only in a bootstrap listener.\n */\nvar RouterInitializer = /** @class */ (function () {\n    function RouterInitializer(injector) {\n        this.injector = injector;\n        this.initNavigation = false;\n        this.resultOfPreactivationDone = new rxjs.Subject();\n    }\n    RouterInitializer.prototype.appInitializer = function () {\n        var _this = this;\n        var p = this.injector.get(common.LOCATION_INITIALIZED, Promise.resolve(null));\n        return p.then(function () {\n            var resolve = null;\n            var res = new Promise(function (r) { return resolve = r; });\n            var router = _this.injector.get(Router);\n            var opts = _this.injector.get(ROUTER_CONFIGURATION);\n            if (_this.isLegacyDisabled(opts) || _this.isLegacyEnabled(opts)) {\n                resolve(true);\n            }\n            else if (opts.initialNavigation === 'disabled') {\n                router.setUpLocationChangeListener();\n                resolve(true);\n            }\n            else if (opts.initialNavigation === 'enabled') {\n                router.hooks.afterPreactivation = function () {\n                    // only the initial navigation should be delayed\n                    if (!_this.initNavigation) {\n                        _this.initNavigation = true;\n                        resolve(true);\n                        return _this.resultOfPreactivationDone;\n                        // subsequent navigations should not be delayed\n                    }\n                    else {\n                        return rxjs.of(null);\n                    }\n                };\n                router.initialNavigation();\n            }\n            else {\n                throw new Error(\"Invalid initialNavigation options: '\" + opts.initialNavigation + \"'\");\n            }\n            return res;\n        });\n    };\n    RouterInitializer.prototype.bootstrapListener = function (bootstrappedComponentRef) {\n        var opts = this.injector.get(ROUTER_CONFIGURATION);\n        var preloader = this.injector.get(RouterPreloader);\n        var router = this.injector.get(Router);\n        var ref = this.injector.get(core.ApplicationRef);\n        if (bootstrappedComponentRef !== ref.components[0]) {\n            return;\n        }\n        if (this.isLegacyEnabled(opts)) {\n            router.initialNavigation();\n        }\n        else if (this.isLegacyDisabled(opts)) {\n            router.setUpLocationChangeListener();\n        }\n        preloader.setUpPreloading();\n        router.resetRootComponentType(ref.componentTypes[0]);\n        this.resultOfPreactivationDone.next(null);\n        this.resultOfPreactivationDone.complete();\n    };\n    RouterInitializer.prototype.isLegacyEnabled = function (opts) {\n        return opts.initialNavigation === 'legacy_enabled' || opts.initialNavigation === true ||\n            opts.initialNavigation === undefined;\n    };\n    RouterInitializer.prototype.isLegacyDisabled = function (opts) {\n        return opts.initialNavigation === 'legacy_disabled' || opts.initialNavigation === false;\n    };\n    RouterInitializer = __decorate([\n        core.Injectable(),\n        __metadata(\"design:paramtypes\", [core.Injector])\n    ], RouterInitializer);\n    return RouterInitializer;\n}());\nfunction getAppInitializer(r) {\n    return r.appInitializer.bind(r);\n}\nfunction getBootstrapListener(r) {\n    return r.bootstrapListener.bind(r);\n}\n/**\n * A token for the router initializer that will be called after the app is bootstrapped.\n *\n * @experimental\n */\nvar ROUTER_INITIALIZER = new core.InjectionToken('Router Initializer');\nfunction provideRouterInitializer() {\n    return [\n        RouterInitializer,\n        {\n            provide: core.APP_INITIALIZER,\n            multi: true,\n            useFactory: getAppInitializer,\n            deps: [RouterInitializer]\n        },\n        { provide: ROUTER_INITIALIZER, useFactory: getBootstrapListener, deps: [RouterInitializer] },\n        { provide: core.APP_BOOTSTRAP_LISTENER, multi: true, useExisting: ROUTER_INITIALIZER },\n    ];\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\nvar VERSION = new core.Version('6.1.0-beta.0+24.sha-5ef7a07');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\n\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file is not used to build this module. It is only used during editing\n// by the TypeScript language service and during build for verification. `ngc`\n// replaces this file with production index.ts when it rewrites private symbol\n// names.\n\nexports.RouterLink = RouterLink;\nexports.RouterLinkWithHref = RouterLinkWithHref;\nexports.RouterLinkActive = RouterLinkActive;\nexports.RouterOutlet = RouterOutlet;\nexports.ActivationEnd = ActivationEnd;\nexports.ActivationStart = ActivationStart;\nexports.ChildActivationEnd = ChildActivationEnd;\nexports.ChildActivationStart = ChildActivationStart;\nexports.GuardsCheckEnd = GuardsCheckEnd;\nexports.GuardsCheckStart = GuardsCheckStart;\nexports.NavigationCancel = NavigationCancel;\nexports.NavigationEnd = NavigationEnd;\nexports.NavigationError = NavigationError;\nexports.NavigationStart = NavigationStart;\nexports.ResolveEnd = ResolveEnd;\nexports.ResolveStart = ResolveStart;\nexports.RouteConfigLoadEnd = RouteConfigLoadEnd;\nexports.RouteConfigLoadStart = RouteConfigLoadStart;\nexports.RouterEvent = RouterEvent;\nexports.RoutesRecognized = RoutesRecognized;\nexports.RouteReuseStrategy = RouteReuseStrategy;\nexports.Router = Router;\nexports.ROUTES = ROUTES;\nexports.ROUTER_CONFIGURATION = ROUTER_CONFIGURATION;\nexports.ROUTER_INITIALIZER = ROUTER_INITIALIZER;\nexports.RouterModule = RouterModule;\nexports.provideRoutes = provideRoutes;\nexports.ChildrenOutletContexts = ChildrenOutletContexts;\nexports.OutletContext = OutletContext;\nexports.NoPreloading = NoPreloading;\nexports.PreloadAllModules = PreloadAllModules;\nexports.PreloadingStrategy = PreloadingStrategy;\nexports.RouterPreloader = RouterPreloader;\nexports.ActivatedRoute = ActivatedRoute;\nexports.ActivatedRouteSnapshot = ActivatedRouteSnapshot;\nexports.RouterState = RouterState;\nexports.RouterStateSnapshot = RouterStateSnapshot;\nexports.PRIMARY_OUTLET = PRIMARY_OUTLET;\nexports.convertToParamMap = convertToParamMap;\nexports.UrlHandlingStrategy = UrlHandlingStrategy;\nexports.DefaultUrlSerializer = DefaultUrlSerializer;\nexports.UrlSegment = UrlSegment;\nexports.UrlSegmentGroup = UrlSegmentGroup;\nexports.UrlSerializer = UrlSerializer;\nexports.UrlTree = UrlTree;\nexports.VERSION = VERSION;\nexports.ɵROUTER_PROVIDERS = ROUTER_PROVIDERS;\nexports.ɵflatten = flatten;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=router.umd.js.map\n"]}