{"version":3,"sources":["packages/router/router.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","router","core","rxjs","operators","common","platformBrowser","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__values","o","m","Symbol","iterator","next","value","done","__read","r","e","ar","push","error","__spread","concat","RouterEvent","NavigationStart","_super","id","url","navigationTrigger","restoredState","_this","toString","NavigationEnd","urlAfterRedirects","NavigationCancel","reason","NavigationError","RoutesRecognized","state","GuardsCheckStart","GuardsCheckEnd","shouldActivate","ResolveStart","ResolveEnd","RouteConfigLoadStart","route","path","RouteConfigLoadEnd","ChildActivationStart","snapshot","routeConfig","ChildActivationEnd","ActivationStart","ActivationEnd","Scroll","routerEvent","position","anchor","EmptyOutletComponent","decorators","type","Component","args","template","PRIMARY_OUTLET","ParamsAsMap","params","has","name","get","v","isArray","getAll","defineProperty","keys","enumerable","configurable","convertToParamMap","defaultUrlMatcher","segments","segmentGroup","parts","split","pathMatch","hasChildren","posParams","index","part","segment","startsWith","substring","consumed","slice","LoadedRouterConfig","routes","validateConfig","config","parentPath","validateNode","getFullPath","fullPath","Error","component","children","loadChildren","outlet","redirectTo","matcher","charAt","currentRoute","standardizeConfig","map","c","shallowEqual","a","key","k1","k2","flatten","arr","last","forEach","callback","prop","andObservables","observables","pipe","mergeAll","every","result","wrapIntoObservable","ɵisObservable","ɵisPromise","from","Promise","resolve","of","containsTree","container","containee","exact","equalQueryParams","queryParams","equalSegmentGroups","equalPath","numberOfChildren","root","containsQueryParams","containsSegmentGroup","containsSegmentGroupHelper","containeePaths","current","UrlTree","fragment","_queryParamMap","DEFAULT_SERIALIZER","serialize","UrlSegmentGroup","parent","k","serializePaths","UrlSegment","parameters","_parameterMap","serializePath","as","bs","mapChildrenIntoArray","fn","res","child","childOutlet","UrlSerializer","DefaultUrlSerializer","parse","UrlParser","parseRootSegment","parseQueryParams","parseFragment","tree","serializeSegment","primary","children_1","join","serializeQueryParams","strParams","encodeUriQuery","encodeUriFragment","encodeURI","encodeUriString","encodeURIComponent","replace","encodeUriSegment","decode","decodeURIComponent","decodeQuery","serializeMatrixParams","SEGMENT_RE","matchSegments","str","match","QUERY_PARAM_RE","QUERY_PARAM_VALUE_RE","remaining","consumeOptional","peekStartsWith","parseChildren","parseQueryParam","parseSegment","capture","parseParens","parseMatrixParams","parseParam","valueMatch","matchQueryParams","matchUrlQueryParamValue","decodedKey","decodedVal","currentVal","allowPrimary","outletName","undefined","indexOf","substr","NoMatch","AbsoluteRedirect","urlTree","noMatch","Observable","obs","absoluteRedirect","newTree","namedOutletsRedirect","ApplyRedirects","moduleInjector","configLoader","urlSerializer","allowRedirects","ngModule","NgModuleRef","expandSegmentGroup","rootSegmentGroup","createUrlTree","catchError","noMatchError","rootCandidate","_a","expandChildren","expandSegment","waitForMap","obj","waitHead","waitTail","mapped","concatAll","expandSegmentAgainstRoute","first","_","EmptyError","noLeftoversInUrl","paths","getOutlet","matchSegmentAgainstRoute","expandSegmentAgainstRouteUsingRedirect","expandWildCardWithParamsAgainstRouteUsingRedirect","expandRegularSegmentAgainstRouteUsingRedirect","applyRedirectCommands","lineralizeSegments","mergeMap","newSegments","group","consumedSegments","lastChild","positionalParamSegments","matched","rawSegmentGroup","load","injector","cfg","_loadedConfig","rawSlicedSegments","getChildConfig","routerConfig","childModule","childConfig","slicedSegments","containsEmptyPathRedirectsWithNamedOutlets","some","isEmptyPathRedirect","mergeTrivialChildren","createChildrenForEmptySegments","primarySegmentGroup","e_3","routes_2","routes_2_1","e_3_1","return","containsEmptyPathRedirects","addEmptySegmentsToChildrenIfNeeded","e_2","routes_1","routes_1_1","e_2_1","cs","runCanLoadGuard","canLoad","injectionToken","guard","shouldLoad","canLoadFails","navigationCancelingError","message","applyRedirectCreatreUrlTree","newRoot","createSegmentGroup","createQueryParams","redirectToParams","actualParams","sourceName","updatedSegments","createSegments","redirectToSegments","actualSegments","findPosParam","findOrReturn","redirectToUrlSegment","pos","e_1","idx","actualSegments_1","actualSegments_1_1","splice","e_1_1","Tree","_root","pathFromRoot","findNode","firstChild","siblings","findPath","filter","cc","node","_b","_c","node_1","unshift","TreeNode","nodeChildrenAsMap","RouterState","setRouterState","createEmptyState","rootComponent","createEmptyStateSnapshot","activated","ActivatedRouteSnapshot","RouterStateSnapshot","emptyUrl","BehaviorSubject","emptyParams","emptyData","emptyQueryParams","ActivatedRoute","data","futureSnapshot","_futureSnapshot","_routerState","_paramMap","inheritedParamsDataResolve","paramsInheritanceStrategy","inheritingStartingFrom","parent_1","flattenInherited","reduce","curr","_resolvedData","urlSegment","lastPathIndex","_urlSegment","_lastPathIndex","_resolve","serializeNode","advanceActivatedRoute","currentSnapshot","nextSnapshot","shallowEqualArrays","equalParamsAndUrlSegments","equalSegments","isMatrixParams","command","outlets","segmentPath","oldSegmentGroup","newSegmentGroup","qp","replaceSegment","oldSegment","newSegment","Navigation","isAbsolute","numberOfDoubleDots","commands","cmdWithOutlet","find","toRoot","Position","processChildren","getPath","updateSegmentGroup","startIndex","updateSegmentGroupChildren","prefixedWith","currentCommandIndex","currentPathIndex","pathIndex","commandIndex","compare","slicedCommands","g","createNewSegmentGroup","outlets_2","getOutlets","createNewSegmentChildren","stringify","CanActivate","CanDeactivate","PreActivation","future","forwardEvent","canActivateChecks","canDeactivateChecks","initialize","parentContexts","futureRoot","setupChildRouteGuards","checkGuards","isDeactivating","isActivating","runCanDeactivateChecks","canDeactivate","runCanActivateChecks","resolveData","concatMap","check","runResolve","futureNode","currNode","contexts","futurePath","prevChildren","setupRouteGuards","deactivateRouteAndItsChildren","getContext","context","shouldRunGuardsAndResolvers","runGuardsAndResolvers","mode","childName","isActivated","runCanDeactivate","fireChildActivationStart","fireActivationStart","runCanActivateChild","runCanActivate","canActivate","getToken","canActivateChildGuards","reverse","extractCanActivateChild","guards","canActivateChild","resolveNode","resolvedData","key_1","getResolver","resolver","token","closestLoadedConfig","NoMatch$1","Recognizer","rootComponentType","relativeLinkResolution","recognize","split$1","processSegmentGroup","freeze","rootNode","routeState","inheritParamsAndData","routeNode","processSegment","checkOutletNameUniqueness","nodes","names","routeWithSameOutletName","sortActivatedRouteSnapshots","sort","localeCompare","config_1","config_1_1","processSegmentAgainstRoute","rawSegment","getData","getSourceSegmentGroup","getPathIndexShift","getResolve","match$1","_sourceSegment","_segmentIndexShift","containsEmptyPathMatchesWithNamedOutlets","emptyPathMatch","getOutlet$1","s_1","createChildrenForEmptyPaths","primarySegment","containsEmptyPathMatches","s_2","addEmptyPathsToChildrenIfNeeded","RouteReuseStrategy","DefaultRouteReuseStrategy","shouldDetach","store","detachedTree","shouldAttach","retrieve","shouldReuseRoute","ROUTES","InjectionToken","RouterConfigLoader","loader","compiler","onLoadStartListener","onLoadEndListener","parentInjector","loadModuleFactory","NgModuleFactory","compileModuleAsync","UrlHandlingStrategy","DefaultUrlHandlingStrategy","shouldProcessUrl","extract","merge","newUrlPart","wholeUrl","defaultErrorHandler","defaultMalformedUriErrorHandler","defaultRouterHook","runExtras","Router","rootContexts","location","navigations","navigationId","events","Subject","errorHandler","malformedUriErrorHandler","navigated","lastSuccessfulId","hooks","beforePreactivation","afterPreactivation","urlHandlingStrategy","routeReuseStrategy","onSameUrlNavigation","urlUpdateStrategy","resetConfig","currentUrlTree","createEmptyUrlTree","rawUrlTree","triggerEvent","routerState","processNavigations","resetRootComponentType","initialNavigation","setUpLocationChangeListener","navigateByUrl","replaceUrl","locationSubscription","subscribe","change","parseUrl","source","setTimeout","scheduleNavigation","serializeUrl","ngOnDestroy","dispose","unsubscribe","navigationExtras","relativeTo","preserveQueryParams","queryParamsHandling","preserveFragment","isDevMode","console","warn","f","q","removeEmptyProps","nav","computeNavigation","cmd","cmdIdx","outlets_1","urlPart","partIndex","startingPosition","findStartingPosition","modifier","createPositionApplyingDoubleDots","ci","dd","extras","skipLocationChange","mergedTree","navigate","validateCommands","isActive","executeScheduledNavigation","promise","catch","rawUrl","lastNavigation","reject","rej","urlTransition","setBrowserUrl","then","runNavigate","precreatedState","resolvePromise","rejectPromise","preActivation","routerState$","appliedUrl","applyRedirects","appliedUrlTree","evt","createRouterState","prevState","createNode","createOrReuseChildren","detachedRouteHandle","setFutureSnapshotsOfActivatedRoutes","createActivatedRoute","activateRoutes","storedState","storedUrl","navigationIsSuccessful","ActivateRoutes","activate","resetUrlToCurrentUrlTree","isNavigationCancelingError","resetStateAndUrl","ee","isCurrentPathEqualTo","replaceState","go","futureState","currState","currRoot","deactivateChildRoutes","activateChildRoutes","futureChild","childOutletName","deactivateRoutes","parentContext","detachAndStoreRouteSubtree","deactivateRouteAndOutlet","componentRef","detach","onOutletDeactivated","contexts_1","deactivate","getOrCreateContext","stored","onOutletReAttached","attachRef","attach","advanceActivatedRouteNodeAndItsChildren","parentLoadedConfig","cmpFactoryResolver","componentFactoryResolver","activateWith","RouterLink","tabIndex","renderer","el","setAttribute","nativeElement","set","preserve","onClick","attrBoolValue","Directive","selector","ctorParameters","String","Attribute","Renderer2","ElementRef","propDecorators","Input","routerLink","HostListener","RouterLinkWithHref","locationStrategy","subscription","updateTargetUrlAndHref","ngOnChanges","changes","button","ctrlKey","metaKey","shiftKey","target","href","prepareExternalUrl","LocationStrategy","HostBinding","RouterLinkActive","element","cdr","classes","routerLinkActiveOptions","update","ngAfterContentInit","links","linksWithHrefs","hasActiveLinks","addClass","removeClass","isLinkActive","link","exportAs","ChangeDetectorRef","ContentChildren","descendants","routerLinkActive","OutletContext","ChildrenOutletContexts","Map","onChildOutletCreated","onChildOutletDestroyed","RouterOutlet","changeDetector","_activatedRoute","activateEvents","EventEmitter","deactivateEvents","ngOnInit","instance","cmp","ref","activatedRoute","insert","hostView","destroy","emit","resolveComponentFactory","childContexts","OutletInjector","createComponent","markForCheck","ViewContainerRef","ComponentFactoryResolver","Output","notFoundValue","PreloadingStrategy","PreloadAllModules","preload","NoPreloading","RouterPreloader","moduleLoader","preloadingStrategy","setUpPreloading","processRoutes","preloadConfig","Injectable","NgModuleFactoryLoader","Compiler","Injector","RouterScroller","viewportScroller","options","lastId","lastSource","restoredId","init","scrollPositionRestoration","setHistoryScrollRestoration","routerEventsSubscription","createScrollEvents","scrollEventsSubscription","consumeScrollEvents","getScrollPosition","scheduleScrollEvent","scrollToPosition","anchorScrolling","scrollToAnchor","ROUTER_DIRECTIVES","ROUTER_CONFIGURATION","ROUTER_FORROOT_GUARD","ROUTER_PROVIDERS","Location","provide","useClass","useFactory","setupRouter","deps","ApplicationRef","Optional","rootRoute","SystemJsNgModuleLoader","useValue","enableTracing","routerNgProbeToken","NgProbeToken","RouterModule","forRoot","providers","provideRoutes","provideForRootGuard","SkipSelf","provideLocationStrategy","PlatformLocation","Inject","APP_BASE_HREF","createRouterScroller","ViewportScroller","useExisting","multi","provideRouterInitializer","forChild","NgModule","declarations","entryComponents","scrollOffset","setOffset","platformLocationStrategy","baseHref","useHash","HashLocationStrategy","PathLocationStrategy","ANALYZE_FOR_ENTRY_COMPONENTS","opts","dom_1","ɵgetDOM","logGroup","log","logGroupEnd","RouterInitializer","initNavigation","resultOfPreactivationDone","appInitializer","LOCATION_INITIALIZED","isLegacyDisabled","isLegacyEnabled","bootstrapListener","bootstrappedComponentRef","preloader","routerScroller","components","componentTypes","complete","getAppInitializer","bind","getBootstrapListener","ROUTER_INITIALIZER","APP_INITIALIZER","APP_BOOTSTRAP_LISTENER","VERSION","Version","ɵangular_packages_router_router_a","ɵangular_packages_router_router_h","ɵangular_packages_router_router_c","ɵangular_packages_router_router_i","ɵangular_packages_router_router_j","ɵangular_packages_router_router_e","ɵangular_packages_router_router_d","ɵangular_packages_router_router_k","ɵangular_packages_router_router_g","ɵangular_packages_router_router_b","ɵangular_packages_router_router_f","ɵangular_packages_router_router_n","ɵangular_packages_router_router_l","ɵangular_packages_router_router_m","ɵEmptyOutletComponent","ɵROUTER_PROVIDERS","ɵflatten"],"mappings":"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","sourcesContent":["/**\n * @license Angular v6.1.2\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('rxjs'), require('rxjs/operators'), require('@angular/common'), require('@angular/platform-browser')) :\n    typeof define === 'function' && define.amd ? define('@angular/router', ['exports', '@angular/core', 'rxjs', 'rxjs/operators', '@angular/common', '@angular/platform-browser'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.router = {}),global.ng.core,global.rxjs,global.rxjs.operators,global.ng.common,global.ng.platformBrowser));\n}(this, (function (exports,core,rxjs,operators,common,platformBrowser) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Base for events the Router goes through, as opposed to events tied to a specific\n     * Route. `RouterEvent`s will only be fired one time for any given navigation.\n     *\n     * Example:\n     *\n     * ```\n     * class MyService {\n     *   constructor(public router: Router, logger: Logger) {\n     *     router.events.filter(e => e instanceof RouterEvent).subscribe(e => {\n     *       logger.log(e.id, e.url);\n     *     });\n     *   }\n     * }\n     * ```\n     *\n     * @experimental\n     */\n    var RouterEvent = /** @class */ (function () {\n        function RouterEvent(\n        /** @docsNotRequired */\n        id, \n        /** @docsNotRequired */\n        url) {\n            this.id = id;\n            this.url = url;\n        }\n        return RouterEvent;\n    }());\n    /**\n     * @description\n     *\n     * Represents an event triggered when a navigation starts.\n     *\n     *\n     */\n    var NavigationStart = /** @class */ (function (_super) {\n        __extends(NavigationStart, _super);\n        function NavigationStart(\n        /** @docsNotRequired */\n        id, \n        /** @docsNotRequired */\n        url, \n        /** @docsNotRequired */\n        navigationTrigger, \n        /** @docsNotRequired */\n        restoredState) {\n            if (navigationTrigger === void 0) { \n            /** @docsNotRequired */\n            navigationTrigger = 'imperative'; }\n            if (restoredState === void 0) { \n            /** @docsNotRequired */\n            restoredState = null; }\n            var _this = _super.call(this, id, url) || this;\n            _this.navigationTrigger = navigationTrigger;\n            _this.restoredState = restoredState;\n            return _this;\n        }\n        /** @docsNotRequired */\n        NavigationStart.prototype.toString = function () { return \"NavigationStart(id: \" + this.id + \", url: '\" + this.url + \"')\"; };\n        return NavigationStart;\n    }(RouterEvent));\n    /**\n     * @description\n     *\n     * Represents an event triggered when a navigation ends successfully.\n     *\n     *\n     */\n    var NavigationEnd = /** @class */ (function (_super) {\n        __extends(NavigationEnd, _super);\n        function NavigationEnd(\n        /** @docsNotRequired */\n        id, \n        /** @docsNotRequired */\n        url, \n        /** @docsNotRequired */\n        urlAfterRedirects) {\n            var _this = _super.call(this, id, url) || this;\n            _this.urlAfterRedirects = urlAfterRedirects;\n            return _this;\n        }\n        /** @docsNotRequired */\n        NavigationEnd.prototype.toString = function () {\n            return \"NavigationEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"')\";\n        };\n        return NavigationEnd;\n    }(RouterEvent));\n    /**\n     * @description\n     *\n     * Represents an event triggered when a navigation is canceled.\n     *\n     *\n     */\n    var NavigationCancel = /** @class */ (function (_super) {\n        __extends(NavigationCancel, _super);\n        function NavigationCancel(\n        /** @docsNotRequired */\n        id, \n        /** @docsNotRequired */\n        url, \n        /** @docsNotRequired */\n        reason) {\n            var _this = _super.call(this, id, url) || this;\n            _this.reason = reason;\n            return _this;\n        }\n        /** @docsNotRequired */\n        NavigationCancel.prototype.toString = function () { return \"NavigationCancel(id: \" + this.id + \", url: '\" + this.url + \"')\"; };\n        return NavigationCancel;\n    }(RouterEvent));\n    /**\n     * @description\n     *\n     * Represents an event triggered when a navigation fails due to an unexpected error.\n     *\n     *\n     */\n    var NavigationError = /** @class */ (function (_super) {\n        __extends(NavigationError, _super);\n        function NavigationError(\n        /** @docsNotRequired */\n        id, \n        /** @docsNotRequired */\n        url, \n        /** @docsNotRequired */\n        error) {\n            var _this = _super.call(this, id, url) || this;\n            _this.error = error;\n            return _this;\n        }\n        /** @docsNotRequired */\n        NavigationError.prototype.toString = function () {\n            return \"NavigationError(id: \" + this.id + \", url: '\" + this.url + \"', error: \" + this.error + \")\";\n        };\n        return NavigationError;\n    }(RouterEvent));\n    /**\n     * @description\n     *\n     * Represents an event triggered when routes are recognized.\n     *\n     *\n     */\n    var RoutesRecognized = /** @class */ (function (_super) {\n        __extends(RoutesRecognized, _super);\n        function RoutesRecognized(\n        /** @docsNotRequired */\n        id, \n        /** @docsNotRequired */\n        url, \n        /** @docsNotRequired */\n        urlAfterRedirects, \n        /** @docsNotRequired */\n        state) {\n            var _this = _super.call(this, id, url) || this;\n            _this.urlAfterRedirects = urlAfterRedirects;\n            _this.state = state;\n            return _this;\n        }\n        /** @docsNotRequired */\n        RoutesRecognized.prototype.toString = function () {\n            return \"RoutesRecognized(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n        };\n        return RoutesRecognized;\n    }(RouterEvent));\n    /**\n     * @description\n     *\n     * Represents the start of the Guard phase of routing.\n     *\n     * @experimental\n     */\n    var GuardsCheckStart = /** @class */ (function (_super) {\n        __extends(GuardsCheckStart, _super);\n        function GuardsCheckStart(\n        /** @docsNotRequired */\n        id, \n        /** @docsNotRequired */\n        url, \n        /** @docsNotRequired */\n        urlAfterRedirects, \n        /** @docsNotRequired */\n        state) {\n            var _this = _super.call(this, id, url) || this;\n            _this.urlAfterRedirects = urlAfterRedirects;\n            _this.state = state;\n            return _this;\n        }\n        GuardsCheckStart.prototype.toString = function () {\n            return \"GuardsCheckStart(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n        };\n        return GuardsCheckStart;\n    }(RouterEvent));\n    /**\n     * @description\n     *\n     * Represents the end of the Guard phase of routing.\n     *\n     * @experimental\n     */\n    var GuardsCheckEnd = /** @class */ (function (_super) {\n        __extends(GuardsCheckEnd, _super);\n        function GuardsCheckEnd(\n        /** @docsNotRequired */\n        id, \n        /** @docsNotRequired */\n        url, \n        /** @docsNotRequired */\n        urlAfterRedirects, \n        /** @docsNotRequired */\n        state, \n        /** @docsNotRequired */\n        shouldActivate) {\n            var _this = _super.call(this, id, url) || this;\n            _this.urlAfterRedirects = urlAfterRedirects;\n            _this.state = state;\n            _this.shouldActivate = shouldActivate;\n            return _this;\n        }\n        GuardsCheckEnd.prototype.toString = function () {\n            return \"GuardsCheckEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \", shouldActivate: \" + this.shouldActivate + \")\";\n        };\n        return GuardsCheckEnd;\n    }(RouterEvent));\n    /**\n     * @description\n     *\n     * Represents the start of the Resolve phase of routing. The timing of this\n     * event may change, thus it's experimental. In the current iteration it will run\n     * in the \"resolve\" phase whether there's things to resolve or not. In the future this\n     * behavior may change to only run when there are things to be resolved.\n     *\n     * @experimental\n     */\n    var ResolveStart = /** @class */ (function (_super) {\n        __extends(ResolveStart, _super);\n        function ResolveStart(\n        /** @docsNotRequired */\n        id, \n        /** @docsNotRequired */\n        url, \n        /** @docsNotRequired */\n        urlAfterRedirects, \n        /** @docsNotRequired */\n        state) {\n            var _this = _super.call(this, id, url) || this;\n            _this.urlAfterRedirects = urlAfterRedirects;\n            _this.state = state;\n            return _this;\n        }\n        ResolveStart.prototype.toString = function () {\n            return \"ResolveStart(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n        };\n        return ResolveStart;\n    }(RouterEvent));\n    /**\n     * @description\n     *\n     * Represents the end of the Resolve phase of routing. See note on\n     * `ResolveStart` for use of this experimental API.\n     *\n     * @experimental\n     */\n    var ResolveEnd = /** @class */ (function (_super) {\n        __extends(ResolveEnd, _super);\n        function ResolveEnd(\n        /** @docsNotRequired */\n        id, \n        /** @docsNotRequired */\n        url, \n        /** @docsNotRequired */\n        urlAfterRedirects, \n        /** @docsNotRequired */\n        state) {\n            var _this = _super.call(this, id, url) || this;\n            _this.urlAfterRedirects = urlAfterRedirects;\n            _this.state = state;\n            return _this;\n        }\n        ResolveEnd.prototype.toString = function () {\n            return \"ResolveEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n        };\n        return ResolveEnd;\n    }(RouterEvent));\n    /**\n     * @description\n     *\n     * Represents an event triggered before lazy loading a route config.\n     *\n     * @experimental\n     */\n    var RouteConfigLoadStart = /** @class */ (function () {\n        function RouteConfigLoadStart(\n        /** @docsNotRequired */\n        route) {\n            this.route = route;\n        }\n        RouteConfigLoadStart.prototype.toString = function () { return \"RouteConfigLoadStart(path: \" + this.route.path + \")\"; };\n        return RouteConfigLoadStart;\n    }());\n    /**\n     * @description\n     *\n     * Represents an event triggered when a route has been lazy loaded.\n     *\n     * @experimental\n     */\n    var RouteConfigLoadEnd = /** @class */ (function () {\n        function RouteConfigLoadEnd(\n        /** @docsNotRequired */\n        route) {\n            this.route = route;\n        }\n        RouteConfigLoadEnd.prototype.toString = function () { return \"RouteConfigLoadEnd(path: \" + this.route.path + \")\"; };\n        return RouteConfigLoadEnd;\n    }());\n    /**\n     * @description\n     *\n     * Represents the start of end of the Resolve phase of routing. See note on\n     * `ChildActivationEnd` for use of this experimental API.\n     *\n     * @experimental\n     */\n    var ChildActivationStart = /** @class */ (function () {\n        function ChildActivationStart(\n        /** @docsNotRequired */\n        snapshot) {\n            this.snapshot = snapshot;\n        }\n        ChildActivationStart.prototype.toString = function () {\n            var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n            return \"ChildActivationStart(path: '\" + path + \"')\";\n        };\n        return ChildActivationStart;\n    }());\n    /**\n     * @description\n     *\n     * Represents the start of end of the Resolve phase of routing. See note on\n     * `ChildActivationStart` for use of this experimental API.\n     *\n     * @experimental\n     */\n    var ChildActivationEnd = /** @class */ (function () {\n        function ChildActivationEnd(\n        /** @docsNotRequired */\n        snapshot) {\n            this.snapshot = snapshot;\n        }\n        ChildActivationEnd.prototype.toString = function () {\n            var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n            return \"ChildActivationEnd(path: '\" + path + \"')\";\n        };\n        return ChildActivationEnd;\n    }());\n    /**\n     * @description\n     *\n     * Represents the start of end of the Resolve phase of routing. See note on\n     * `ActivationEnd` for use of this experimental API.\n     *\n     * @experimental\n     */\n    var ActivationStart = /** @class */ (function () {\n        function ActivationStart(\n        /** @docsNotRequired */\n        snapshot) {\n            this.snapshot = snapshot;\n        }\n        ActivationStart.prototype.toString = function () {\n            var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n            return \"ActivationStart(path: '\" + path + \"')\";\n        };\n        return ActivationStart;\n    }());\n    /**\n     * @description\n     *\n     * Represents the start of end of the Resolve phase of routing. See note on\n     * `ActivationStart` for use of this experimental API.\n     *\n     * @experimental\n     */\n    var ActivationEnd = /** @class */ (function () {\n        function ActivationEnd(\n        /** @docsNotRequired */\n        snapshot) {\n            this.snapshot = snapshot;\n        }\n        ActivationEnd.prototype.toString = function () {\n            var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n            return \"ActivationEnd(path: '\" + path + \"')\";\n        };\n        return ActivationEnd;\n    }());\n    /**\n     * @description\n     *\n     * Represents a scrolling event.\n     */\n    var Scroll = /** @class */ (function () {\n        function Scroll(\n        /** @docsNotRequired */\n        routerEvent, \n        /** @docsNotRequired */\n        position, \n        /** @docsNotRequired */\n        anchor) {\n            this.routerEvent = routerEvent;\n            this.position = position;\n            this.anchor = anchor;\n        }\n        Scroll.prototype.toString = function () {\n            var pos = this.position ? this.position[0] + \", \" + this.position[1] : null;\n            return \"Scroll(anchor: '\" + this.anchor + \"', position: '\" + pos + \"')\";\n        };\n        return Scroll;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This component is used internally within the router to be a placeholder when an empty\n     * router-outlet is needed. For example, with a config such as:\n     *\n     * `{path: 'parent', outlet: 'nav', children: [...]}`\n     *\n     * In order to render, there needs to be a component on this config, which will default\n     * to this `EmptyOutletComponent`.\n     */\n    var EmptyOutletComponent = /** @class */ (function () {\n        function EmptyOutletComponent() {\n        }\n        EmptyOutletComponent.decorators = [\n            { type: core.Component, args: [{ template: \"<router-outlet></router-outlet>\" }] }\n        ];\n        return EmptyOutletComponent;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Name of the primary outlet.\n     *\n     *\n     */\n    var PRIMARY_OUTLET = 'primary';\n    var ParamsAsMap = /** @class */ (function () {\n        function ParamsAsMap(params) {\n            this.params = params || {};\n        }\n        ParamsAsMap.prototype.has = function (name) { return this.params.hasOwnProperty(name); };\n        ParamsAsMap.prototype.get = function (name) {\n            if (this.has(name)) {\n                var v = this.params[name];\n                return Array.isArray(v) ? v[0] : v;\n            }\n            return null;\n        };\n        ParamsAsMap.prototype.getAll = function (name) {\n            if (this.has(name)) {\n                var v = this.params[name];\n                return Array.isArray(v) ? v : [v];\n            }\n            return [];\n        };\n        Object.defineProperty(ParamsAsMap.prototype, \"keys\", {\n            get: function () { return Object.keys(this.params); },\n            enumerable: true,\n            configurable: true\n        });\n        return ParamsAsMap;\n    }());\n    /**\n     * Convert a `Params` instance to a `ParamMap`.\n     *\n     *\n     */\n    function convertToParamMap(params) {\n        return new ParamsAsMap(params);\n    }\n    var NAVIGATION_CANCELING_ERROR = 'ngNavigationCancelingError';\n    function navigationCancelingError(message) {\n        var error = Error('NavigationCancelingError: ' + message);\n        error[NAVIGATION_CANCELING_ERROR] = true;\n        return error;\n    }\n    function isNavigationCancelingError(error) {\n        return error && error[NAVIGATION_CANCELING_ERROR];\n    }\n    // Matches the route configuration (`route`) against the actual URL (`segments`).\n    function defaultUrlMatcher(segments, segmentGroup, route) {\n        var parts = route.path.split('/');\n        if (parts.length > segments.length) {\n            // The actual URL is shorter than the config, no match\n            return null;\n        }\n        if (route.pathMatch === 'full' &&\n            (segmentGroup.hasChildren() || parts.length < segments.length)) {\n            // The config is longer than the actual URL but we are looking for a full match, return null\n            return null;\n        }\n        var posParams = {};\n        // Check each config part against the actual URL\n        for (var index = 0; index < parts.length; index++) {\n            var part = parts[index];\n            var segment = segments[index];\n            var isParameter = part.startsWith(':');\n            if (isParameter) {\n                posParams[part.substring(1)] = segment;\n            }\n            else if (part !== segment.path) {\n                // The actual URL part does not match the config, no match\n                return null;\n            }\n        }\n        return { consumed: segments.slice(0, parts.length), posParams: posParams };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LoadedRouterConfig = /** @class */ (function () {\n        function LoadedRouterConfig(routes, module) {\n            this.routes = routes;\n            this.module = module;\n        }\n        return LoadedRouterConfig;\n    }());\n    function validateConfig(config, parentPath) {\n        if (parentPath === void 0) { parentPath = ''; }\n        // forEach doesn't iterate undefined values\n        for (var i = 0; i < config.length; i++) {\n            var route = config[i];\n            var fullPath = getFullPath(parentPath, route);\n            validateNode(route, fullPath);\n        }\n    }\n    function validateNode(route, fullPath) {\n        if (!route) {\n            throw new Error(\"\\n      Invalid configuration of route '\" + fullPath + \"': Encountered undefined route.\\n      The reason might be an extra comma.\\n\\n      Example:\\n      const routes: Routes = [\\n        { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\\n        { path: 'dashboard',  component: DashboardComponent },, << two commas\\n        { path: 'detail/:id', component: HeroDetailComponent }\\n      ];\\n    \");\n        }\n        if (Array.isArray(route)) {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': Array cannot be specified\");\n        }\n        if (!route.component && !route.children && !route.loadChildren &&\n            (route.outlet && route.outlet !== PRIMARY_OUTLET)) {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': a componentless route without children or loadChildren cannot have a named outlet set\");\n        }\n        if (route.redirectTo && route.children) {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and children cannot be used together\");\n        }\n        if (route.redirectTo && route.loadChildren) {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and loadChildren cannot be used together\");\n        }\n        if (route.children && route.loadChildren) {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': children and loadChildren cannot be used together\");\n        }\n        if (route.redirectTo && route.component) {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and component cannot be used together\");\n        }\n        if (route.path && route.matcher) {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': path and matcher cannot be used together\");\n        }\n        if (route.redirectTo === void 0 && !route.component && !route.children && !route.loadChildren) {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"'. One of the following must be provided: component, redirectTo, children or loadChildren\");\n        }\n        if (route.path === void 0 && route.matcher === void 0) {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': routes must have either a path or a matcher specified\");\n        }\n        if (typeof route.path === 'string' && route.path.charAt(0) === '/') {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': path cannot start with a slash\");\n        }\n        if (route.path === '' && route.redirectTo !== void 0 && route.pathMatch === void 0) {\n            var exp = \"The default value of 'pathMatch' is 'prefix', but often the intent is to use 'full'.\";\n            throw new Error(\"Invalid configuration of route '{path: \\\"\" + fullPath + \"\\\", redirectTo: \\\"\" + route.redirectTo + \"\\\"}': please provide 'pathMatch'. \" + exp);\n        }\n        if (route.pathMatch !== void 0 && route.pathMatch !== 'full' && route.pathMatch !== 'prefix') {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': pathMatch can only be set to 'prefix' or 'full'\");\n        }\n        if (route.children) {\n            validateConfig(route.children, fullPath);\n        }\n    }\n    function getFullPath(parentPath, currentRoute) {\n        if (!currentRoute) {\n            return parentPath;\n        }\n        if (!parentPath && !currentRoute.path) {\n            return '';\n        }\n        else if (parentPath && !currentRoute.path) {\n            return parentPath + \"/\";\n        }\n        else if (!parentPath && currentRoute.path) {\n            return currentRoute.path;\n        }\n        else {\n            return parentPath + \"/\" + currentRoute.path;\n        }\n    }\n    /**\n     * Makes a copy of the config and adds any default required properties.\n     */\n    function standardizeConfig(r) {\n        var children = r.children && r.children.map(standardizeConfig);\n        var c = children ? __assign({}, r, { children: children }) : __assign({}, r);\n        if (!c.component && (children || c.loadChildren) && (c.outlet && c.outlet !== PRIMARY_OUTLET)) {\n            c.component = EmptyOutletComponent;\n        }\n        return c;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function shallowEqualArrays(a, b) {\n        if (a.length !== b.length)\n            return false;\n        for (var i = 0; i < a.length; ++i) {\n            if (!shallowEqual(a[i], b[i]))\n                return false;\n        }\n        return true;\n    }\n    function shallowEqual(a, b) {\n        var k1 = Object.keys(a);\n        var k2 = Object.keys(b);\n        if (k1.length != k2.length) {\n            return false;\n        }\n        var key;\n        for (var i = 0; i < k1.length; i++) {\n            key = k1[i];\n            if (a[key] !== b[key]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * Flattens single-level nested arrays.\n     */\n    function flatten(arr) {\n        return Array.prototype.concat.apply([], arr);\n    }\n    /**\n     * Return the last element of an array.\n     */\n    function last(a) {\n        return a.length > 0 ? a[a.length - 1] : null;\n    }\n    function forEach(map, callback) {\n        for (var prop in map) {\n            if (map.hasOwnProperty(prop)) {\n                callback(map[prop], prop);\n            }\n        }\n    }\n    function waitForMap(obj, fn) {\n        if (Object.keys(obj).length === 0) {\n            return rxjs.of({});\n        }\n        var waitHead = [];\n        var waitTail = [];\n        var res = {};\n        forEach(obj, function (a, k) {\n            var mapped = fn(k, a).pipe(operators.map(function (r) { return res[k] = r; }));\n            if (k === PRIMARY_OUTLET) {\n                waitHead.push(mapped);\n            }\n            else {\n                waitTail.push(mapped);\n            }\n        });\n        // Closure compiler has problem with using spread operator here. So just using Array.concat.\n        return rxjs.of.apply(null, waitHead.concat(waitTail)).pipe(operators.concatAll(), operators.last(), operators.map(function () { return res; }));\n    }\n    /**\n     * ANDs Observables by merging all input observables, reducing to an Observable verifying all\n     * input Observables return `true`.\n     */\n    function andObservables(observables) {\n        return observables.pipe(operators.mergeAll(), operators.every(function (result) { return result === true; }));\n    }\n    function wrapIntoObservable(value) {\n        if (core.ɵisObservable(value)) {\n            return value;\n        }\n        if (core.ɵisPromise(value)) {\n            // Use `Promise.resolve()` to wrap promise-like instances.\n            // Required ie when a Resolver returns a AngularJS `$q` promise to correctly trigger the\n            // change detection.\n            return rxjs.from(Promise.resolve(value));\n        }\n        return rxjs.of(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function createEmptyUrlTree() {\n        return new UrlTree(new UrlSegmentGroup([], {}), {}, null);\n    }\n    function containsTree(container, containee, exact) {\n        if (exact) {\n            return equalQueryParams(container.queryParams, containee.queryParams) &&\n                equalSegmentGroups(container.root, containee.root);\n        }\n        return containsQueryParams(container.queryParams, containee.queryParams) &&\n            containsSegmentGroup(container.root, containee.root);\n    }\n    function equalQueryParams(container, containee) {\n        // TODO: This does not handle array params correctly.\n        return shallowEqual(container, containee);\n    }\n    function equalSegmentGroups(container, containee) {\n        if (!equalPath(container.segments, containee.segments))\n            return false;\n        if (container.numberOfChildren !== containee.numberOfChildren)\n            return false;\n        for (var c in containee.children) {\n            if (!container.children[c])\n                return false;\n            if (!equalSegmentGroups(container.children[c], containee.children[c]))\n                return false;\n        }\n        return true;\n    }\n    function containsQueryParams(container, containee) {\n        // TODO: This does not handle array params correctly.\n        return Object.keys(containee).length <= Object.keys(container).length &&\n            Object.keys(containee).every(function (key) { return containee[key] === container[key]; });\n    }\n    function containsSegmentGroup(container, containee) {\n        return containsSegmentGroupHelper(container, containee, containee.segments);\n    }\n    function containsSegmentGroupHelper(container, containee, containeePaths) {\n        if (container.segments.length > containeePaths.length) {\n            var current = container.segments.slice(0, containeePaths.length);\n            if (!equalPath(current, containeePaths))\n                return false;\n            if (containee.hasChildren())\n                return false;\n            return true;\n        }\n        else if (container.segments.length === containeePaths.length) {\n            if (!equalPath(container.segments, containeePaths))\n                return false;\n            for (var c in containee.children) {\n                if (!container.children[c])\n                    return false;\n                if (!containsSegmentGroup(container.children[c], containee.children[c]))\n                    return false;\n            }\n            return true;\n        }\n        else {\n            var current = containeePaths.slice(0, container.segments.length);\n            var next = containeePaths.slice(container.segments.length);\n            if (!equalPath(container.segments, current))\n                return false;\n            if (!container.children[PRIMARY_OUTLET])\n                return false;\n            return containsSegmentGroupHelper(container.children[PRIMARY_OUTLET], containee, next);\n        }\n    }\n    /**\n     * @description\n     *\n     * Represents the parsed URL.\n     *\n     * Since a router state is a tree, and the URL is nothing but a serialized state, the URL is a\n     * serialized tree.\n     * UrlTree is a data structure that provides a lot of affordances in dealing with URLs\n     *\n     * ### Example\n     *\n     * ```\n     * @Component({templateUrl:'template.html'})\n     * class MyComponent {\n     *   constructor(router: Router) {\n     *     const tree: UrlTree =\n     *       router.parseUrl('/team/33/(user/victor//support:help)?debug=true#fragment');\n     *     const f = tree.fragment; // return 'fragment'\n     *     const q = tree.queryParams; // returns {debug: 'true'}\n     *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n     *     const s: UrlSegment[] = g.segments; // returns 2 segments 'team' and '33'\n     *     g.children[PRIMARY_OUTLET].segments; // returns 2 segments 'user' and 'victor'\n     *     g.children['support'].segments; // return 1 segment 'help'\n     *   }\n     * }\n     * ```\n     *\n     *\n     */\n    var UrlTree = /** @class */ (function () {\n        /** @internal */\n        function UrlTree(\n        /** The root segment group of the URL tree */\n        root, \n        /** The query params of the URL */\n        queryParams, \n        /** The fragment of the URL */\n        fragment) {\n            this.root = root;\n            this.queryParams = queryParams;\n            this.fragment = fragment;\n        }\n        Object.defineProperty(UrlTree.prototype, \"queryParamMap\", {\n            get: function () {\n                if (!this._queryParamMap) {\n                    this._queryParamMap = convertToParamMap(this.queryParams);\n                }\n                return this._queryParamMap;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /** @docsNotRequired */\n        UrlTree.prototype.toString = function () { return DEFAULT_SERIALIZER.serialize(this); };\n        return UrlTree;\n    }());\n    /**\n     * @description\n     *\n     * Represents the parsed URL segment group.\n     *\n     * See `UrlTree` for more information.\n     *\n     *\n     */\n    var UrlSegmentGroup = /** @class */ (function () {\n        function UrlSegmentGroup(\n        /** The URL segments of this group. See `UrlSegment` for more information */\n        segments, \n        /** The list of children of this group */\n        children) {\n            var _this = this;\n            this.segments = segments;\n            this.children = children;\n            /** The parent node in the url tree */\n            this.parent = null;\n            forEach(children, function (v, k) { return v.parent = _this; });\n        }\n        /** Whether the segment has child segments */\n        UrlSegmentGroup.prototype.hasChildren = function () { return this.numberOfChildren > 0; };\n        Object.defineProperty(UrlSegmentGroup.prototype, \"numberOfChildren\", {\n            /** Number of child segments */\n            get: function () { return Object.keys(this.children).length; },\n            enumerable: true,\n            configurable: true\n        });\n        /** @docsNotRequired */\n        UrlSegmentGroup.prototype.toString = function () { return serializePaths(this); };\n        return UrlSegmentGroup;\n    }());\n    /**\n     * @description\n     *\n     * Represents a single URL segment.\n     *\n     * A UrlSegment is a part of a URL between the two slashes. It contains a path and the matrix\n     * parameters associated with the segment.\n     *\n     * ## Example\n     *\n     * ```\n     * @Component({templateUrl:'template.html'})\n     * class MyComponent {\n     *   constructor(router: Router) {\n     *     const tree: UrlTree = router.parseUrl('/team;id=33');\n     *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n     *     const s: UrlSegment[] = g.segments;\n     *     s[0].path; // returns 'team'\n     *     s[0].parameters; // returns {id: 33}\n     *   }\n     * }\n     * ```\n     *\n     *\n     */\n    var UrlSegment = /** @class */ (function () {\n        function UrlSegment(\n        /** The path part of a URL segment */\n        path, \n        /** The matrix parameters associated with a segment */\n        parameters) {\n            this.path = path;\n            this.parameters = parameters;\n        }\n        Object.defineProperty(UrlSegment.prototype, \"parameterMap\", {\n            get: function () {\n                if (!this._parameterMap) {\n                    this._parameterMap = convertToParamMap(this.parameters);\n                }\n                return this._parameterMap;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /** @docsNotRequired */\n        UrlSegment.prototype.toString = function () { return serializePath(this); };\n        return UrlSegment;\n    }());\n    function equalSegments(as, bs) {\n        return equalPath(as, bs) && as.every(function (a, i) { return shallowEqual(a.parameters, bs[i].parameters); });\n    }\n    function equalPath(as, bs) {\n        if (as.length !== bs.length)\n            return false;\n        return as.every(function (a, i) { return a.path === bs[i].path; });\n    }\n    function mapChildrenIntoArray(segment, fn) {\n        var res = [];\n        forEach(segment.children, function (child, childOutlet) {\n            if (childOutlet === PRIMARY_OUTLET) {\n                res = res.concat(fn(child, childOutlet));\n            }\n        });\n        forEach(segment.children, function (child, childOutlet) {\n            if (childOutlet !== PRIMARY_OUTLET) {\n                res = res.concat(fn(child, childOutlet));\n            }\n        });\n        return res;\n    }\n    /**\n     * @description\n     *\n     * Serializes and deserializes a URL string into a URL tree.\n     *\n     * The url serialization strategy is customizable. You can\n     * make all URLs case insensitive by providing a custom UrlSerializer.\n     *\n     * See `DefaultUrlSerializer` for an example of a URL serializer.\n     *\n     *\n     */\n    var UrlSerializer = /** @class */ (function () {\n        function UrlSerializer() {\n        }\n        return UrlSerializer;\n    }());\n    /**\n     * @description\n     *\n     * A default implementation of the `UrlSerializer`.\n     *\n     * Example URLs:\n     *\n     * ```\n     * /inbox/33(popup:compose)\n     * /inbox/33;open=true/messages/44\n     * ```\n     *\n     * DefaultUrlSerializer uses parentheses to serialize secondary segments (e.g., popup:compose), the\n     * colon syntax to specify the outlet, and the ';parameter=value' syntax (e.g., open=true) to\n     * specify route specific parameters.\n     *\n     *\n     */\n    var DefaultUrlSerializer = /** @class */ (function () {\n        function DefaultUrlSerializer() {\n        }\n        /** Parses a url into a `UrlTree` */\n        DefaultUrlSerializer.prototype.parse = function (url) {\n            var p = new UrlParser(url);\n            return new UrlTree(p.parseRootSegment(), p.parseQueryParams(), p.parseFragment());\n        };\n        /** Converts a `UrlTree` into a url */\n        DefaultUrlSerializer.prototype.serialize = function (tree) {\n            var segment = \"/\" + serializeSegment(tree.root, true);\n            var query = serializeQueryParams(tree.queryParams);\n            var fragment = typeof tree.fragment === \"string\" ? \"#\" + encodeUriFragment(tree.fragment) : '';\n            return \"\" + segment + query + fragment;\n        };\n        return DefaultUrlSerializer;\n    }());\n    var DEFAULT_SERIALIZER = new DefaultUrlSerializer();\n    function serializePaths(segment) {\n        return segment.segments.map(function (p) { return serializePath(p); }).join('/');\n    }\n    function serializeSegment(segment, root) {\n        if (!segment.hasChildren()) {\n            return serializePaths(segment);\n        }\n        if (root) {\n            var primary = segment.children[PRIMARY_OUTLET] ?\n                serializeSegment(segment.children[PRIMARY_OUTLET], false) :\n                '';\n            var children_1 = [];\n            forEach(segment.children, function (v, k) {\n                if (k !== PRIMARY_OUTLET) {\n                    children_1.push(k + \":\" + serializeSegment(v, false));\n                }\n            });\n            return children_1.length > 0 ? primary + \"(\" + children_1.join('//') + \")\" : primary;\n        }\n        else {\n            var children = mapChildrenIntoArray(segment, function (v, k) {\n                if (k === PRIMARY_OUTLET) {\n                    return [serializeSegment(segment.children[PRIMARY_OUTLET], false)];\n                }\n                return [k + \":\" + serializeSegment(v, false)];\n            });\n            return serializePaths(segment) + \"/(\" + children.join('//') + \")\";\n        }\n    }\n    /**\n     * Encodes a URI string with the default encoding. This function will only ever be called from\n     * `encodeUriQuery` or `encodeUriSegment` as it's the base set of encodings to be used. We need\n     * a custom encoding because encodeURIComponent is too aggressive and encodes stuff that doesn't\n     * have to be encoded per https://url.spec.whatwg.org.\n     */\n    function encodeUriString(s) {\n        return encodeURIComponent(s)\n            .replace(/%40/g, '@')\n            .replace(/%3A/gi, ':')\n            .replace(/%24/g, '$')\n            .replace(/%2C/gi, ',');\n    }\n    /**\n     * This function should be used to encode both keys and values in a query string key/value. In\n     * the following URL, you need to call encodeUriQuery on \"k\" and \"v\":\n     *\n     * http://www.site.org/html;mk=mv?k=v#f\n     */\n    function encodeUriQuery(s) {\n        return encodeUriString(s).replace(/%3B/gi, ';');\n    }\n    /**\n     * This function should be used to encode a URL fragment. In the following URL, you need to call\n     * encodeUriFragment on \"f\":\n     *\n     * http://www.site.org/html;mk=mv?k=v#f\n     */\n    function encodeUriFragment(s) {\n        return encodeURI(s);\n    }\n    /**\n     * This function should be run on any URI segment as well as the key and value in a key/value\n     * pair for matrix params. In the following URL, you need to call encodeUriSegment on \"html\",\n     * \"mk\", and \"mv\":\n     *\n     * http://www.site.org/html;mk=mv?k=v#f\n     */\n    function encodeUriSegment(s) {\n        return encodeUriString(s).replace(/\\(/g, '%28').replace(/\\)/g, '%29').replace(/%26/gi, '&');\n    }\n    function decode(s) {\n        return decodeURIComponent(s);\n    }\n    // Query keys/values should have the \"+\" replaced first, as \"+\" in a query string is \" \".\n    // decodeURIComponent function will not decode \"+\" as a space.\n    function decodeQuery(s) {\n        return decode(s.replace(/\\+/g, '%20'));\n    }\n    function serializePath(path) {\n        return \"\" + encodeUriSegment(path.path) + serializeMatrixParams(path.parameters);\n    }\n    function serializeMatrixParams(params) {\n        return Object.keys(params)\n            .map(function (key) { return \";\" + encodeUriSegment(key) + \"=\" + encodeUriSegment(params[key]); })\n            .join('');\n    }\n    function serializeQueryParams(params) {\n        var strParams = Object.keys(params).map(function (name) {\n            var value = params[name];\n            return Array.isArray(value) ?\n                value.map(function (v) { return encodeUriQuery(name) + \"=\" + encodeUriQuery(v); }).join('&') :\n                encodeUriQuery(name) + \"=\" + encodeUriQuery(value);\n        });\n        return strParams.length ? \"?\" + strParams.join(\"&\") : '';\n    }\n    var SEGMENT_RE = /^[^\\/()?;=#]+/;\n    function matchSegments(str) {\n        var match = str.match(SEGMENT_RE);\n        return match ? match[0] : '';\n    }\n    var QUERY_PARAM_RE = /^[^=?&#]+/;\n    // Return the name of the query param at the start of the string or an empty string\n    function matchQueryParams(str) {\n        var match = str.match(QUERY_PARAM_RE);\n        return match ? match[0] : '';\n    }\n    var QUERY_PARAM_VALUE_RE = /^[^?&#]+/;\n    // Return the value of the query param at the start of the string or an empty string\n    function matchUrlQueryParamValue(str) {\n        var match = str.match(QUERY_PARAM_VALUE_RE);\n        return match ? match[0] : '';\n    }\n    var UrlParser = /** @class */ (function () {\n        function UrlParser(url) {\n            this.url = url;\n            this.remaining = url;\n        }\n        UrlParser.prototype.parseRootSegment = function () {\n            this.consumeOptional('/');\n            if (this.remaining === '' || this.peekStartsWith('?') || this.peekStartsWith('#')) {\n                return new UrlSegmentGroup([], {});\n            }\n            // The root segment group never has segments\n            return new UrlSegmentGroup([], this.parseChildren());\n        };\n        UrlParser.prototype.parseQueryParams = function () {\n            var params = {};\n            if (this.consumeOptional('?')) {\n                do {\n                    this.parseQueryParam(params);\n                } while (this.consumeOptional('&'));\n            }\n            return params;\n        };\n        UrlParser.prototype.parseFragment = function () {\n            return this.consumeOptional('#') ? decodeURIComponent(this.remaining) : null;\n        };\n        UrlParser.prototype.parseChildren = function () {\n            if (this.remaining === '') {\n                return {};\n            }\n            this.consumeOptional('/');\n            var segments = [];\n            if (!this.peekStartsWith('(')) {\n                segments.push(this.parseSegment());\n            }\n            while (this.peekStartsWith('/') && !this.peekStartsWith('//') && !this.peekStartsWith('/(')) {\n                this.capture('/');\n                segments.push(this.parseSegment());\n            }\n            var children = {};\n            if (this.peekStartsWith('/(')) {\n                this.capture('/');\n                children = this.parseParens(true);\n            }\n            var res = {};\n            if (this.peekStartsWith('(')) {\n                res = this.parseParens(false);\n            }\n            if (segments.length > 0 || Object.keys(children).length > 0) {\n                res[PRIMARY_OUTLET] = new UrlSegmentGroup(segments, children);\n            }\n            return res;\n        };\n        // parse a segment with its matrix parameters\n        // ie `name;k1=v1;k2`\n        UrlParser.prototype.parseSegment = function () {\n            var path = matchSegments(this.remaining);\n            if (path === '' && this.peekStartsWith(';')) {\n                throw new Error(\"Empty path url segment cannot have parameters: '\" + this.remaining + \"'.\");\n            }\n            this.capture(path);\n            return new UrlSegment(decode(path), this.parseMatrixParams());\n        };\n        UrlParser.prototype.parseMatrixParams = function () {\n            var params = {};\n            while (this.consumeOptional(';')) {\n                this.parseParam(params);\n            }\n            return params;\n        };\n        UrlParser.prototype.parseParam = function (params) {\n            var key = matchSegments(this.remaining);\n            if (!key) {\n                return;\n            }\n            this.capture(key);\n            var value = '';\n            if (this.consumeOptional('=')) {\n                var valueMatch = matchSegments(this.remaining);\n                if (valueMatch) {\n                    value = valueMatch;\n                    this.capture(value);\n                }\n            }\n            params[decode(key)] = decode(value);\n        };\n        // Parse a single query parameter `name[=value]`\n        UrlParser.prototype.parseQueryParam = function (params) {\n            var key = matchQueryParams(this.remaining);\n            if (!key) {\n                return;\n            }\n            this.capture(key);\n            var value = '';\n            if (this.consumeOptional('=')) {\n                var valueMatch = matchUrlQueryParamValue(this.remaining);\n                if (valueMatch) {\n                    value = valueMatch;\n                    this.capture(value);\n                }\n            }\n            var decodedKey = decodeQuery(key);\n            var decodedVal = decodeQuery(value);\n            if (params.hasOwnProperty(decodedKey)) {\n                // Append to existing values\n                var currentVal = params[decodedKey];\n                if (!Array.isArray(currentVal)) {\n                    currentVal = [currentVal];\n                    params[decodedKey] = currentVal;\n                }\n                currentVal.push(decodedVal);\n            }\n            else {\n                // Create a new value\n                params[decodedKey] = decodedVal;\n            }\n        };\n        // parse `(a/b//outlet_name:c/d)`\n        UrlParser.prototype.parseParens = function (allowPrimary) {\n            var segments = {};\n            this.capture('(');\n            while (!this.consumeOptional(')') && this.remaining.length > 0) {\n                var path = matchSegments(this.remaining);\n                var next = this.remaining[path.length];\n                // if is is not one of these characters, then the segment was unescaped\n                // or the group was not closed\n                if (next !== '/' && next !== ')' && next !== ';') {\n                    throw new Error(\"Cannot parse url '\" + this.url + \"'\");\n                }\n                var outletName = undefined;\n                if (path.indexOf(':') > -1) {\n                    outletName = path.substr(0, path.indexOf(':'));\n                    this.capture(outletName);\n                    this.capture(':');\n                }\n                else if (allowPrimary) {\n                    outletName = PRIMARY_OUTLET;\n                }\n                var children = this.parseChildren();\n                segments[outletName] = Object.keys(children).length === 1 ? children[PRIMARY_OUTLET] :\n                    new UrlSegmentGroup([], children);\n                this.consumeOptional('//');\n            }\n            return segments;\n        };\n        UrlParser.prototype.peekStartsWith = function (str) { return this.remaining.startsWith(str); };\n        // Consumes the prefix when it is present and returns whether it has been consumed\n        UrlParser.prototype.consumeOptional = function (str) {\n            if (this.peekStartsWith(str)) {\n                this.remaining = this.remaining.substring(str.length);\n                return true;\n            }\n            return false;\n        };\n        UrlParser.prototype.capture = function (str) {\n            if (!this.consumeOptional(str)) {\n                throw new Error(\"Expected \\\"\" + str + \"\\\".\");\n            }\n        };\n        return UrlParser;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NoMatch = /** @class */ (function () {\n        function NoMatch(segmentGroup) {\n            this.segmentGroup = segmentGroup || null;\n        }\n        return NoMatch;\n    }());\n    var AbsoluteRedirect = /** @class */ (function () {\n        function AbsoluteRedirect(urlTree) {\n            this.urlTree = urlTree;\n        }\n        return AbsoluteRedirect;\n    }());\n    function noMatch(segmentGroup) {\n        return new rxjs.Observable(function (obs) { return obs.error(new NoMatch(segmentGroup)); });\n    }\n    function absoluteRedirect(newTree) {\n        return new rxjs.Observable(function (obs) { return obs.error(new AbsoluteRedirect(newTree)); });\n    }\n    function namedOutletsRedirect(redirectTo) {\n        return new rxjs.Observable(function (obs) { return obs.error(new Error(\"Only absolute redirects can have named outlets. redirectTo: '\" + redirectTo + \"'\")); });\n    }\n    function canLoadFails(route) {\n        return new rxjs.Observable(function (obs) { return obs.error(navigationCancelingError(\"Cannot load children because the guard of the route \\\"path: '\" + route.path + \"'\\\" returned false\")); });\n    }\n    /**\n     * Returns the `UrlTree` with the redirection applied.\n     *\n     * Lazy modules are loaded along the way.\n     */\n    function applyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config) {\n        return new ApplyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config).apply();\n    }\n    var ApplyRedirects = /** @class */ (function () {\n        function ApplyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config) {\n            this.configLoader = configLoader;\n            this.urlSerializer = urlSerializer;\n            this.urlTree = urlTree;\n            this.config = config;\n            this.allowRedirects = true;\n            this.ngModule = moduleInjector.get(core.NgModuleRef);\n        }\n        ApplyRedirects.prototype.apply = function () {\n            var _this = this;\n            var expanded$ = this.expandSegmentGroup(this.ngModule, this.config, this.urlTree.root, PRIMARY_OUTLET);\n            var urlTrees$ = expanded$.pipe(operators.map(function (rootSegmentGroup) { return _this.createUrlTree(rootSegmentGroup, _this.urlTree.queryParams, _this.urlTree.fragment); }));\n            return urlTrees$.pipe(operators.catchError(function (e) {\n                if (e instanceof AbsoluteRedirect) {\n                    // after an absolute redirect we do not apply any more redirects!\n                    _this.allowRedirects = false;\n                    // we need to run matching, so we can fetch all lazy-loaded modules\n                    return _this.match(e.urlTree);\n                }\n                if (e instanceof NoMatch) {\n                    throw _this.noMatchError(e);\n                }\n                throw e;\n            }));\n        };\n        ApplyRedirects.prototype.match = function (tree) {\n            var _this = this;\n            var expanded$ = this.expandSegmentGroup(this.ngModule, this.config, tree.root, PRIMARY_OUTLET);\n            var mapped$ = expanded$.pipe(operators.map(function (rootSegmentGroup) {\n                return _this.createUrlTree(rootSegmentGroup, tree.queryParams, tree.fragment);\n            }));\n            return mapped$.pipe(operators.catchError(function (e) {\n                if (e instanceof NoMatch) {\n                    throw _this.noMatchError(e);\n                }\n                throw e;\n            }));\n        };\n        ApplyRedirects.prototype.noMatchError = function (e) {\n            return new Error(\"Cannot match any routes. URL Segment: '\" + e.segmentGroup + \"'\");\n        };\n        ApplyRedirects.prototype.createUrlTree = function (rootCandidate, queryParams, fragment) {\n            var _a;\n            var root = rootCandidate.segments.length > 0 ?\n                new UrlSegmentGroup([], (_a = {}, _a[PRIMARY_OUTLET] = rootCandidate, _a)) :\n                rootCandidate;\n            return new UrlTree(root, queryParams, fragment);\n        };\n        ApplyRedirects.prototype.expandSegmentGroup = function (ngModule, routes, segmentGroup, outlet) {\n            if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n                return this.expandChildren(ngModule, routes, segmentGroup)\n                    .pipe(operators.map(function (children) { return new UrlSegmentGroup([], children); }));\n            }\n            return this.expandSegment(ngModule, segmentGroup, routes, segmentGroup.segments, outlet, true);\n        };\n        // Recursively expand segment groups for all the child outlets\n        ApplyRedirects.prototype.expandChildren = function (ngModule, routes, segmentGroup) {\n            var _this = this;\n            return waitForMap(segmentGroup.children, function (childOutlet, child) { return _this.expandSegmentGroup(ngModule, routes, child, childOutlet); });\n        };\n        ApplyRedirects.prototype.expandSegment = function (ngModule, segmentGroup, routes, segments, outlet, allowRedirects) {\n            var _this = this;\n            return rxjs.of.apply(void 0, __spread(routes)).pipe(operators.map(function (r) {\n                var expanded$ = _this.expandSegmentAgainstRoute(ngModule, segmentGroup, routes, r, segments, outlet, allowRedirects);\n                return expanded$.pipe(operators.catchError(function (e) {\n                    if (e instanceof NoMatch) {\n                        // TODO(i): this return type doesn't match the declared Observable<UrlSegmentGroup> -\n                        // talk to Jason\n                        return rxjs.of(null);\n                    }\n                    throw e;\n                }));\n            }), operators.concatAll(), operators.first(function (s) { return !!s; }), operators.catchError(function (e, _) {\n                if (e instanceof rxjs.EmptyError || e.name === 'EmptyError') {\n                    if (_this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n                        return rxjs.of(new UrlSegmentGroup([], {}));\n                    }\n                    throw new NoMatch(segmentGroup);\n                }\n                throw e;\n            }));\n        };\n        ApplyRedirects.prototype.noLeftoversInUrl = function (segmentGroup, segments, outlet) {\n            return segments.length === 0 && !segmentGroup.children[outlet];\n        };\n        ApplyRedirects.prototype.expandSegmentAgainstRoute = function (ngModule, segmentGroup, routes, route, paths, outlet, allowRedirects) {\n            if (getOutlet(route) !== outlet) {\n                return noMatch(segmentGroup);\n            }\n            if (route.redirectTo === undefined) {\n                return this.matchSegmentAgainstRoute(ngModule, segmentGroup, route, paths);\n            }\n            if (allowRedirects && this.allowRedirects) {\n                return this.expandSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, paths, outlet);\n            }\n            return noMatch(segmentGroup);\n        };\n        ApplyRedirects.prototype.expandSegmentAgainstRouteUsingRedirect = function (ngModule, segmentGroup, routes, route, segments, outlet) {\n            if (route.path === '**') {\n                return this.expandWildCardWithParamsAgainstRouteUsingRedirect(ngModule, routes, route, outlet);\n            }\n            return this.expandRegularSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, segments, outlet);\n        };\n        ApplyRedirects.prototype.expandWildCardWithParamsAgainstRouteUsingRedirect = function (ngModule, routes, route, outlet) {\n            var _this = this;\n            var newTree = this.applyRedirectCommands([], route.redirectTo, {});\n            if (route.redirectTo.startsWith('/')) {\n                return absoluteRedirect(newTree);\n            }\n            return this.lineralizeSegments(route, newTree).pipe(operators.mergeMap(function (newSegments) {\n                var group = new UrlSegmentGroup(newSegments, {});\n                return _this.expandSegment(ngModule, group, routes, newSegments, outlet, false);\n            }));\n        };\n        ApplyRedirects.prototype.expandRegularSegmentAgainstRouteUsingRedirect = function (ngModule, segmentGroup, routes, route, segments, outlet) {\n            var _this = this;\n            var _a = match(segmentGroup, route, segments), matched = _a.matched, consumedSegments = _a.consumedSegments, lastChild = _a.lastChild, positionalParamSegments = _a.positionalParamSegments;\n            if (!matched)\n                return noMatch(segmentGroup);\n            var newTree = this.applyRedirectCommands(consumedSegments, route.redirectTo, positionalParamSegments);\n            if (route.redirectTo.startsWith('/')) {\n                return absoluteRedirect(newTree);\n            }\n            return this.lineralizeSegments(route, newTree).pipe(operators.mergeMap(function (newSegments) {\n                return _this.expandSegment(ngModule, segmentGroup, routes, newSegments.concat(segments.slice(lastChild)), outlet, false);\n            }));\n        };\n        ApplyRedirects.prototype.matchSegmentAgainstRoute = function (ngModule, rawSegmentGroup, route, segments) {\n            var _this = this;\n            if (route.path === '**') {\n                if (route.loadChildren) {\n                    return this.configLoader.load(ngModule.injector, route)\n                        .pipe(operators.map(function (cfg) {\n                        route._loadedConfig = cfg;\n                        return new UrlSegmentGroup(segments, {});\n                    }));\n                }\n                return rxjs.of(new UrlSegmentGroup(segments, {}));\n            }\n            var _a = match(rawSegmentGroup, route, segments), matched = _a.matched, consumedSegments = _a.consumedSegments, lastChild = _a.lastChild;\n            if (!matched)\n                return noMatch(rawSegmentGroup);\n            var rawSlicedSegments = segments.slice(lastChild);\n            var childConfig$ = this.getChildConfig(ngModule, route);\n            return childConfig$.pipe(operators.mergeMap(function (routerConfig) {\n                var childModule = routerConfig.module;\n                var childConfig = routerConfig.routes;\n                var _a = split(rawSegmentGroup, consumedSegments, rawSlicedSegments, childConfig), segmentGroup = _a.segmentGroup, slicedSegments = _a.slicedSegments;\n                if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n                    var expanded$_1 = _this.expandChildren(childModule, childConfig, segmentGroup);\n                    return expanded$_1.pipe(operators.map(function (children) { return new UrlSegmentGroup(consumedSegments, children); }));\n                }\n                if (childConfig.length === 0 && slicedSegments.length === 0) {\n                    return rxjs.of(new UrlSegmentGroup(consumedSegments, {}));\n                }\n                var expanded$ = _this.expandSegment(childModule, segmentGroup, childConfig, slicedSegments, PRIMARY_OUTLET, true);\n                return expanded$.pipe(operators.map(function (cs) {\n                    return new UrlSegmentGroup(consumedSegments.concat(cs.segments), cs.children);\n                }));\n            }));\n        };\n        ApplyRedirects.prototype.getChildConfig = function (ngModule, route) {\n            var _this = this;\n            if (route.children) {\n                // The children belong to the same module\n                return rxjs.of(new LoadedRouterConfig(route.children, ngModule));\n            }\n            if (route.loadChildren) {\n                // lazy children belong to the loaded module\n                if (route._loadedConfig !== undefined) {\n                    return rxjs.of(route._loadedConfig);\n                }\n                return runCanLoadGuard(ngModule.injector, route).pipe(operators.mergeMap(function (shouldLoad) {\n                    if (shouldLoad) {\n                        return _this.configLoader.load(ngModule.injector, route)\n                            .pipe(operators.map(function (cfg) {\n                            route._loadedConfig = cfg;\n                            return cfg;\n                        }));\n                    }\n                    return canLoadFails(route);\n                }));\n            }\n            return rxjs.of(new LoadedRouterConfig([], ngModule));\n        };\n        ApplyRedirects.prototype.lineralizeSegments = function (route, urlTree) {\n            var res = [];\n            var c = urlTree.root;\n            while (true) {\n                res = res.concat(c.segments);\n                if (c.numberOfChildren === 0) {\n                    return rxjs.of(res);\n                }\n                if (c.numberOfChildren > 1 || !c.children[PRIMARY_OUTLET]) {\n                    return namedOutletsRedirect(route.redirectTo);\n                }\n                c = c.children[PRIMARY_OUTLET];\n            }\n        };\n        ApplyRedirects.prototype.applyRedirectCommands = function (segments, redirectTo, posParams) {\n            return this.applyRedirectCreatreUrlTree(redirectTo, this.urlSerializer.parse(redirectTo), segments, posParams);\n        };\n        ApplyRedirects.prototype.applyRedirectCreatreUrlTree = function (redirectTo, urlTree, segments, posParams) {\n            var newRoot = this.createSegmentGroup(redirectTo, urlTree.root, segments, posParams);\n            return new UrlTree(newRoot, this.createQueryParams(urlTree.queryParams, this.urlTree.queryParams), urlTree.fragment);\n        };\n        ApplyRedirects.prototype.createQueryParams = function (redirectToParams, actualParams) {\n            var res = {};\n            forEach(redirectToParams, function (v, k) {\n                var copySourceValue = typeof v === 'string' && v.startsWith(':');\n                if (copySourceValue) {\n                    var sourceName = v.substring(1);\n                    res[k] = actualParams[sourceName];\n                }\n                else {\n                    res[k] = v;\n                }\n            });\n            return res;\n        };\n        ApplyRedirects.prototype.createSegmentGroup = function (redirectTo, group, segments, posParams) {\n            var _this = this;\n            var updatedSegments = this.createSegments(redirectTo, group.segments, segments, posParams);\n            var children = {};\n            forEach(group.children, function (child, name) {\n                children[name] = _this.createSegmentGroup(redirectTo, child, segments, posParams);\n            });\n            return new UrlSegmentGroup(updatedSegments, children);\n        };\n        ApplyRedirects.prototype.createSegments = function (redirectTo, redirectToSegments, actualSegments, posParams) {\n            var _this = this;\n            return redirectToSegments.map(function (s) { return s.path.startsWith(':') ? _this.findPosParam(redirectTo, s, posParams) :\n                _this.findOrReturn(s, actualSegments); });\n        };\n        ApplyRedirects.prototype.findPosParam = function (redirectTo, redirectToUrlSegment, posParams) {\n            var pos = posParams[redirectToUrlSegment.path.substring(1)];\n            if (!pos)\n                throw new Error(\"Cannot redirect to '\" + redirectTo + \"'. Cannot find '\" + redirectToUrlSegment.path + \"'.\");\n            return pos;\n        };\n        ApplyRedirects.prototype.findOrReturn = function (redirectToUrlSegment, actualSegments) {\n            var e_1, _a;\n            var idx = 0;\n            try {\n                for (var actualSegments_1 = __values(actualSegments), actualSegments_1_1 = actualSegments_1.next(); !actualSegments_1_1.done; actualSegments_1_1 = actualSegments_1.next()) {\n                    var s = actualSegments_1_1.value;\n                    if (s.path === redirectToUrlSegment.path) {\n                        actualSegments.splice(idx);\n                        return s;\n                    }\n                    idx++;\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (actualSegments_1_1 && !actualSegments_1_1.done && (_a = actualSegments_1.return)) _a.call(actualSegments_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            return redirectToUrlSegment;\n        };\n        return ApplyRedirects;\n    }());\n    function runCanLoadGuard(moduleInjector, route) {\n        var canLoad = route.canLoad;\n        if (!canLoad || canLoad.length === 0)\n            return rxjs.of(true);\n        var obs = rxjs.from(canLoad).pipe(operators.map(function (injectionToken) {\n            var guard = moduleInjector.get(injectionToken);\n            return wrapIntoObservable(guard.canLoad ? guard.canLoad(route) : guard(route));\n        }));\n        return andObservables(obs);\n    }\n    function match(segmentGroup, route, segments) {\n        if (route.path === '') {\n            if ((route.pathMatch === 'full') && (segmentGroup.hasChildren() || segments.length > 0)) {\n                return { matched: false, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n            }\n            return { matched: true, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n        }\n        var matcher = route.matcher || defaultUrlMatcher;\n        var res = matcher(segments, segmentGroup, route);\n        if (!res) {\n            return {\n                matched: false,\n                consumedSegments: [],\n                lastChild: 0,\n                positionalParamSegments: {},\n            };\n        }\n        return {\n            matched: true,\n            consumedSegments: res.consumed,\n            lastChild: res.consumed.length,\n            positionalParamSegments: res.posParams,\n        };\n    }\n    function split(segmentGroup, consumedSegments, slicedSegments, config) {\n        if (slicedSegments.length > 0 &&\n            containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n            var s = new UrlSegmentGroup(consumedSegments, createChildrenForEmptySegments(config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n            return { segmentGroup: mergeTrivialChildren(s), slicedSegments: [] };\n        }\n        if (slicedSegments.length === 0 &&\n            containsEmptyPathRedirects(segmentGroup, slicedSegments, config)) {\n            var s = new UrlSegmentGroup(segmentGroup.segments, addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, config, segmentGroup.children));\n            return { segmentGroup: mergeTrivialChildren(s), slicedSegments: slicedSegments };\n        }\n        return { segmentGroup: segmentGroup, slicedSegments: slicedSegments };\n    }\n    function mergeTrivialChildren(s) {\n        if (s.numberOfChildren === 1 && s.children[PRIMARY_OUTLET]) {\n            var c = s.children[PRIMARY_OUTLET];\n            return new UrlSegmentGroup(s.segments.concat(c.segments), c.children);\n        }\n        return s;\n    }\n    function addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, routes, children) {\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var routes_1 = __values(routes), routes_1_1 = routes_1.next(); !routes_1_1.done; routes_1_1 = routes_1.next()) {\n                var r = routes_1_1.value;\n                if (isEmptyPathRedirect(segmentGroup, slicedSegments, r) && !children[getOutlet(r)]) {\n                    res[getOutlet(r)] = new UrlSegmentGroup([], {});\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (routes_1_1 && !routes_1_1.done && (_a = routes_1.return)) _a.call(routes_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return __assign({}, children, res);\n    }\n    function createChildrenForEmptySegments(routes, primarySegmentGroup) {\n        var e_3, _a;\n        var res = {};\n        res[PRIMARY_OUTLET] = primarySegmentGroup;\n        try {\n            for (var routes_2 = __values(routes), routes_2_1 = routes_2.next(); !routes_2_1.done; routes_2_1 = routes_2.next()) {\n                var r = routes_2_1.value;\n                if (r.path === '' && getOutlet(r) !== PRIMARY_OUTLET) {\n                    res[getOutlet(r)] = new UrlSegmentGroup([], {});\n                }\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (routes_2_1 && !routes_2_1.done && (_a = routes_2.return)) _a.call(routes_2);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n        return res;\n    }\n    function containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, segments, routes) {\n        return routes.some(function (r) { return isEmptyPathRedirect(segmentGroup, segments, r) && getOutlet(r) !== PRIMARY_OUTLET; });\n    }\n    function containsEmptyPathRedirects(segmentGroup, segments, routes) {\n        return routes.some(function (r) { return isEmptyPathRedirect(segmentGroup, segments, r); });\n    }\n    function isEmptyPathRedirect(segmentGroup, segments, r) {\n        if ((segmentGroup.hasChildren() || segments.length > 0) && r.pathMatch === 'full') {\n            return false;\n        }\n        return r.path === '' && r.redirectTo !== undefined;\n    }\n    function getOutlet(route) {\n        return route.outlet || PRIMARY_OUTLET;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Tree = /** @class */ (function () {\n        function Tree(root) {\n            this._root = root;\n        }\n        Object.defineProperty(Tree.prototype, \"root\", {\n            get: function () { return this._root.value; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @internal\n         */\n        Tree.prototype.parent = function (t) {\n            var p = this.pathFromRoot(t);\n            return p.length > 1 ? p[p.length - 2] : null;\n        };\n        /**\n         * @internal\n         */\n        Tree.prototype.children = function (t) {\n            var n = findNode(t, this._root);\n            return n ? n.children.map(function (t) { return t.value; }) : [];\n        };\n        /**\n         * @internal\n         */\n        Tree.prototype.firstChild = function (t) {\n            var n = findNode(t, this._root);\n            return n && n.children.length > 0 ? n.children[0].value : null;\n        };\n        /**\n         * @internal\n         */\n        Tree.prototype.siblings = function (t) {\n            var p = findPath(t, this._root);\n            if (p.length < 2)\n                return [];\n            var c = p[p.length - 2].children.map(function (c) { return c.value; });\n            return c.filter(function (cc) { return cc !== t; });\n        };\n        /**\n         * @internal\n         */\n        Tree.prototype.pathFromRoot = function (t) { return findPath(t, this._root).map(function (s) { return s.value; }); };\n        return Tree;\n    }());\n    // DFS for the node matching the value\n    function findNode(value, node) {\n        var e_1, _a;\n        if (value === node.value)\n            return node;\n        try {\n            for (var _b = __values(node.children), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var child = _c.value;\n                var node_1 = findNode(value, child);\n                if (node_1)\n                    return node_1;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return null;\n    }\n    // Return the path to the node with the given value using DFS\n    function findPath(value, node) {\n        var e_2, _a;\n        if (value === node.value)\n            return [node];\n        try {\n            for (var _b = __values(node.children), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var child = _c.value;\n                var path = findPath(value, child);\n                if (path.length) {\n                    path.unshift(node);\n                    return path;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return [];\n    }\n    var TreeNode = /** @class */ (function () {\n        function TreeNode(value, children) {\n            this.value = value;\n            this.children = children;\n        }\n        TreeNode.prototype.toString = function () { return \"TreeNode(\" + this.value + \")\"; };\n        return TreeNode;\n    }());\n    // Return the list of T indexed by outlet name\n    function nodeChildrenAsMap(node) {\n        var map = {};\n        if (node) {\n            node.children.forEach(function (child) { return map[child.value.outlet] = child; });\n        }\n        return map;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents the state of the router.\n     *\n     * RouterState is a tree of activated routes. Every node in this tree knows about the \"consumed\" URL\n     * segments, the extracted parameters, and the resolved data.\n     *\n     * ### Example\n     *\n     * ```\n     * @Component({templateUrl:'template.html'})\n     * class MyComponent {\n     *   constructor(router: Router) {\n     *     const state: RouterState = router.routerState;\n     *     const root: ActivatedRoute = state.root;\n     *     const child = root.firstChild;\n     *     const id: Observable<string> = child.params.map(p => p.id);\n     *     //...\n     *   }\n     * }\n     * ```\n     *\n     * See `ActivatedRoute` for more information.\n     *\n     *\n     */\n    var RouterState = /** @class */ (function (_super) {\n        __extends(RouterState, _super);\n        /** @internal */\n        function RouterState(root, \n        /** The current snapshot of the router state */\n        snapshot) {\n            var _this = _super.call(this, root) || this;\n            _this.snapshot = snapshot;\n            setRouterState(_this, root);\n            return _this;\n        }\n        RouterState.prototype.toString = function () { return this.snapshot.toString(); };\n        return RouterState;\n    }(Tree));\n    function createEmptyState(urlTree, rootComponent) {\n        var snapshot = createEmptyStateSnapshot(urlTree, rootComponent);\n        var emptyUrl = new rxjs.BehaviorSubject([new UrlSegment('', {})]);\n        var emptyParams = new rxjs.BehaviorSubject({});\n        var emptyData = new rxjs.BehaviorSubject({});\n        var emptyQueryParams = new rxjs.BehaviorSubject({});\n        var fragment = new rxjs.BehaviorSubject('');\n        var activated = new ActivatedRoute(emptyUrl, emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, snapshot.root);\n        activated.snapshot = snapshot.root;\n        return new RouterState(new TreeNode(activated, []), snapshot);\n    }\n    function createEmptyStateSnapshot(urlTree, rootComponent) {\n        var emptyParams = {};\n        var emptyData = {};\n        var emptyQueryParams = {};\n        var fragment = '';\n        var activated = new ActivatedRouteSnapshot([], emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, null, urlTree.root, -1, {});\n        return new RouterStateSnapshot('', new TreeNode(activated, []));\n    }\n    /**\n     * @description\n     *\n     * Contains the information about a route associated with a component loaded in an\n     * outlet.  An `ActivatedRoute` can also be used to traverse the router state tree.\n     *\n     * ```\n     * @Component({...})\n     * class MyComponent {\n     *   constructor(route: ActivatedRoute) {\n     *     const id: Observable<string> = route.params.map(p => p.id);\n     *     const url: Observable<string> = route.url.map(segments => segments.join(''));\n     *     // route.data includes both `data` and `resolve`\n     *     const user = route.data.map(d => d.user);\n     *   }\n     * }\n     * ```\n     *\n     *\n     */\n    var ActivatedRoute = /** @class */ (function () {\n        /** @internal */\n        function ActivatedRoute(\n        /** An observable of the URL segments matched by this route */\n        url, \n        /** An observable of the matrix parameters scoped to this route */\n        params, \n        /** An observable of the query parameters shared by all the routes */\n        queryParams, \n        /** An observable of the URL fragment shared by all the routes */\n        fragment, \n        /** An observable of the static and resolved data of this route. */\n        data, \n        /** The outlet name of the route. It's a constant */\n        outlet, \n        /** The component of the route. It's a constant */\n        // TODO(vsavkin): remove |string\n        component, futureSnapshot) {\n            this.url = url;\n            this.params = params;\n            this.queryParams = queryParams;\n            this.fragment = fragment;\n            this.data = data;\n            this.outlet = outlet;\n            this.component = component;\n            this._futureSnapshot = futureSnapshot;\n        }\n        Object.defineProperty(ActivatedRoute.prototype, \"routeConfig\", {\n            /** The configuration used to match this route */\n            get: function () { return this._futureSnapshot.routeConfig; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRoute.prototype, \"root\", {\n            /** The root of the router state */\n            get: function () { return this._routerState.root; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRoute.prototype, \"parent\", {\n            /** The parent of this route in the router state tree */\n            get: function () { return this._routerState.parent(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRoute.prototype, \"firstChild\", {\n            /** The first child of this route in the router state tree */\n            get: function () { return this._routerState.firstChild(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRoute.prototype, \"children\", {\n            /** The children of this route in the router state tree */\n            get: function () { return this._routerState.children(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRoute.prototype, \"pathFromRoot\", {\n            /** The path from the root of the router state tree to this route */\n            get: function () { return this._routerState.pathFromRoot(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRoute.prototype, \"paramMap\", {\n            get: function () {\n                if (!this._paramMap) {\n                    this._paramMap = this.params.pipe(operators.map(function (p) { return convertToParamMap(p); }));\n                }\n                return this._paramMap;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRoute.prototype, \"queryParamMap\", {\n            get: function () {\n                if (!this._queryParamMap) {\n                    this._queryParamMap =\n                        this.queryParams.pipe(operators.map(function (p) { return convertToParamMap(p); }));\n                }\n                return this._queryParamMap;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ActivatedRoute.prototype.toString = function () {\n            return this.snapshot ? this.snapshot.toString() : \"Future(\" + this._futureSnapshot + \")\";\n        };\n        return ActivatedRoute;\n    }());\n    /**\n     * Returns the inherited params, data, and resolve for a given route.\n     * By default, this only inherits values up to the nearest path-less or component-less route.\n     * @internal\n     */\n    function inheritedParamsDataResolve(route, paramsInheritanceStrategy) {\n        if (paramsInheritanceStrategy === void 0) { paramsInheritanceStrategy = 'emptyOnly'; }\n        var pathFromRoot = route.pathFromRoot;\n        var inheritingStartingFrom = 0;\n        if (paramsInheritanceStrategy !== 'always') {\n            inheritingStartingFrom = pathFromRoot.length - 1;\n            while (inheritingStartingFrom >= 1) {\n                var current = pathFromRoot[inheritingStartingFrom];\n                var parent_1 = pathFromRoot[inheritingStartingFrom - 1];\n                // current route is an empty path => inherits its parent's params and data\n                if (current.routeConfig && current.routeConfig.path === '') {\n                    inheritingStartingFrom--;\n                    // parent is componentless => current route should inherit its params and data\n                }\n                else if (!parent_1.component) {\n                    inheritingStartingFrom--;\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return flattenInherited(pathFromRoot.slice(inheritingStartingFrom));\n    }\n    /** @internal */\n    function flattenInherited(pathFromRoot) {\n        return pathFromRoot.reduce(function (res, curr) {\n            var params = __assign({}, res.params, curr.params);\n            var data = __assign({}, res.data, curr.data);\n            var resolve = __assign({}, res.resolve, curr._resolvedData);\n            return { params: params, data: data, resolve: resolve };\n        }, { params: {}, data: {}, resolve: {} });\n    }\n    /**\n     * @description\n     *\n     * Contains the information about a route associated with a component loaded in an\n     * outlet at a particular moment in time. ActivatedRouteSnapshot can also be used to\n     * traverse the router state tree.\n     *\n     * ```\n     * @Component({templateUrl:'./my-component.html'})\n     * class MyComponent {\n     *   constructor(route: ActivatedRoute) {\n     *     const id: string = route.snapshot.params.id;\n     *     const url: string = route.snapshot.url.join('');\n     *     const user = route.snapshot.data.user;\n     *   }\n     * }\n     * ```\n     *\n     *\n     */\n    var ActivatedRouteSnapshot = /** @class */ (function () {\n        /** @internal */\n        function ActivatedRouteSnapshot(\n        /** The URL segments matched by this route */\n        url, \n        /** The matrix parameters scoped to this route */\n        params, \n        /** The query parameters shared by all the routes */\n        queryParams, \n        /** The URL fragment shared by all the routes */\n        fragment, \n        /** The static and resolved data of this route */\n        data, \n        /** The outlet name of the route */\n        outlet, \n        /** The component of the route */\n        component, routeConfig, urlSegment, lastPathIndex, resolve) {\n            this.url = url;\n            this.params = params;\n            this.queryParams = queryParams;\n            this.fragment = fragment;\n            this.data = data;\n            this.outlet = outlet;\n            this.component = component;\n            this.routeConfig = routeConfig;\n            this._urlSegment = urlSegment;\n            this._lastPathIndex = lastPathIndex;\n            this._resolve = resolve;\n        }\n        Object.defineProperty(ActivatedRouteSnapshot.prototype, \"root\", {\n            /** The root of the router state */\n            get: function () { return this._routerState.root; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRouteSnapshot.prototype, \"parent\", {\n            /** The parent of this route in the router state tree */\n            get: function () { return this._routerState.parent(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRouteSnapshot.prototype, \"firstChild\", {\n            /** The first child of this route in the router state tree */\n            get: function () { return this._routerState.firstChild(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRouteSnapshot.prototype, \"children\", {\n            /** The children of this route in the router state tree */\n            get: function () { return this._routerState.children(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRouteSnapshot.prototype, \"pathFromRoot\", {\n            /** The path from the root of the router state tree to this route */\n            get: function () { return this._routerState.pathFromRoot(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRouteSnapshot.prototype, \"paramMap\", {\n            get: function () {\n                if (!this._paramMap) {\n                    this._paramMap = convertToParamMap(this.params);\n                }\n                return this._paramMap;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRouteSnapshot.prototype, \"queryParamMap\", {\n            get: function () {\n                if (!this._queryParamMap) {\n                    this._queryParamMap = convertToParamMap(this.queryParams);\n                }\n                return this._queryParamMap;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ActivatedRouteSnapshot.prototype.toString = function () {\n            var url = this.url.map(function (segment) { return segment.toString(); }).join('/');\n            var matched = this.routeConfig ? this.routeConfig.path : '';\n            return \"Route(url:'\" + url + \"', path:'\" + matched + \"')\";\n        };\n        return ActivatedRouteSnapshot;\n    }());\n    /**\n     * @description\n     *\n     * Represents the state of the router at a moment in time.\n     *\n     * This is a tree of activated route snapshots. Every node in this tree knows about\n     * the \"consumed\" URL segments, the extracted parameters, and the resolved data.\n     *\n     * ### Example\n     *\n     * ```\n     * @Component({templateUrl:'template.html'})\n     * class MyComponent {\n     *   constructor(router: Router) {\n     *     const state: RouterState = router.routerState;\n     *     const snapshot: RouterStateSnapshot = state.snapshot;\n     *     const root: ActivatedRouteSnapshot = snapshot.root;\n     *     const child = root.firstChild;\n     *     const id: Observable<string> = child.params.map(p => p.id);\n     *     //...\n     *   }\n     * }\n     * ```\n     *\n     *\n     */\n    var RouterStateSnapshot = /** @class */ (function (_super) {\n        __extends(RouterStateSnapshot, _super);\n        /** @internal */\n        function RouterStateSnapshot(\n        /** The url from which this snapshot was created */\n        url, root) {\n            var _this = _super.call(this, root) || this;\n            _this.url = url;\n            setRouterState(_this, root);\n            return _this;\n        }\n        RouterStateSnapshot.prototype.toString = function () { return serializeNode(this._root); };\n        return RouterStateSnapshot;\n    }(Tree));\n    function setRouterState(state, node) {\n        node.value._routerState = state;\n        node.children.forEach(function (c) { return setRouterState(state, c); });\n    }\n    function serializeNode(node) {\n        var c = node.children.length > 0 ? \" { \" + node.children.map(serializeNode).join(', ') + \" } \" : '';\n        return \"\" + node.value + c;\n    }\n    /**\n     * The expectation is that the activate route is created with the right set of parameters.\n     * So we push new values into the observables only when they are not the initial values.\n     * And we detect that by checking if the snapshot field is set.\n     */\n    function advanceActivatedRoute(route) {\n        if (route.snapshot) {\n            var currentSnapshot = route.snapshot;\n            var nextSnapshot = route._futureSnapshot;\n            route.snapshot = nextSnapshot;\n            if (!shallowEqual(currentSnapshot.queryParams, nextSnapshot.queryParams)) {\n                route.queryParams.next(nextSnapshot.queryParams);\n            }\n            if (currentSnapshot.fragment !== nextSnapshot.fragment) {\n                route.fragment.next(nextSnapshot.fragment);\n            }\n            if (!shallowEqual(currentSnapshot.params, nextSnapshot.params)) {\n                route.params.next(nextSnapshot.params);\n            }\n            if (!shallowEqualArrays(currentSnapshot.url, nextSnapshot.url)) {\n                route.url.next(nextSnapshot.url);\n            }\n            if (!shallowEqual(currentSnapshot.data, nextSnapshot.data)) {\n                route.data.next(nextSnapshot.data);\n            }\n        }\n        else {\n            route.snapshot = route._futureSnapshot;\n            // this is for resolved data\n            route.data.next(route._futureSnapshot.data);\n        }\n    }\n    function equalParamsAndUrlSegments(a, b) {\n        var equalUrlParams = shallowEqual(a.params, b.params) && equalSegments(a.url, b.url);\n        var parentsMismatch = !a.parent !== !b.parent;\n        return equalUrlParams && !parentsMismatch &&\n            (!a.parent || equalParamsAndUrlSegments(a.parent, b.parent));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function createRouterState(routeReuseStrategy, curr, prevState) {\n        var root = createNode(routeReuseStrategy, curr._root, prevState ? prevState._root : undefined);\n        return new RouterState(root, curr);\n    }\n    function createNode(routeReuseStrategy, curr, prevState) {\n        // reuse an activated route that is currently displayed on the screen\n        if (prevState && routeReuseStrategy.shouldReuseRoute(curr.value, prevState.value.snapshot)) {\n            var value = prevState.value;\n            value._futureSnapshot = curr.value;\n            var children = createOrReuseChildren(routeReuseStrategy, curr, prevState);\n            return new TreeNode(value, children);\n            // retrieve an activated route that is used to be displayed, but is not currently displayed\n        }\n        else {\n            var detachedRouteHandle = routeReuseStrategy.retrieve(curr.value);\n            if (detachedRouteHandle) {\n                var tree = detachedRouteHandle.route;\n                setFutureSnapshotsOfActivatedRoutes(curr, tree);\n                return tree;\n            }\n            else {\n                var value = createActivatedRoute(curr.value);\n                var children = curr.children.map(function (c) { return createNode(routeReuseStrategy, c); });\n                return new TreeNode(value, children);\n            }\n        }\n    }\n    function setFutureSnapshotsOfActivatedRoutes(curr, result) {\n        if (curr.value.routeConfig !== result.value.routeConfig) {\n            throw new Error('Cannot reattach ActivatedRouteSnapshot created from a different route');\n        }\n        if (curr.children.length !== result.children.length) {\n            throw new Error('Cannot reattach ActivatedRouteSnapshot with a different number of children');\n        }\n        result.value._futureSnapshot = curr.value;\n        for (var i = 0; i < curr.children.length; ++i) {\n            setFutureSnapshotsOfActivatedRoutes(curr.children[i], result.children[i]);\n        }\n    }\n    function createOrReuseChildren(routeReuseStrategy, curr, prevState) {\n        return curr.children.map(function (child) {\n            var e_1, _a;\n            try {\n                for (var _b = __values(prevState.children), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var p = _c.value;\n                    if (routeReuseStrategy.shouldReuseRoute(p.value.snapshot, child.value)) {\n                        return createNode(routeReuseStrategy, child, p);\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            return createNode(routeReuseStrategy, child);\n        });\n    }\n    function createActivatedRoute(c) {\n        return new ActivatedRoute(new rxjs.BehaviorSubject(c.url), new rxjs.BehaviorSubject(c.params), new rxjs.BehaviorSubject(c.queryParams), new rxjs.BehaviorSubject(c.fragment), new rxjs.BehaviorSubject(c.data), c.outlet, c.component, c);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function createUrlTree(route, urlTree, commands, queryParams, fragment) {\n        if (commands.length === 0) {\n            return tree(urlTree.root, urlTree.root, urlTree, queryParams, fragment);\n        }\n        var nav = computeNavigation(commands);\n        if (nav.toRoot()) {\n            return tree(urlTree.root, new UrlSegmentGroup([], {}), urlTree, queryParams, fragment);\n        }\n        var startingPosition = findStartingPosition(nav, urlTree, route);\n        var segmentGroup = startingPosition.processChildren ?\n            updateSegmentGroupChildren(startingPosition.segmentGroup, startingPosition.index, nav.commands) :\n            updateSegmentGroup(startingPosition.segmentGroup, startingPosition.index, nav.commands);\n        return tree(startingPosition.segmentGroup, segmentGroup, urlTree, queryParams, fragment);\n    }\n    function isMatrixParams(command) {\n        return typeof command === 'object' && command != null && !command.outlets && !command.segmentPath;\n    }\n    function tree(oldSegmentGroup, newSegmentGroup, urlTree, queryParams, fragment) {\n        var qp = {};\n        if (queryParams) {\n            forEach(queryParams, function (value, name) {\n                qp[name] = Array.isArray(value) ? value.map(function (v) { return \"\" + v; }) : \"\" + value;\n            });\n        }\n        if (urlTree.root === oldSegmentGroup) {\n            return new UrlTree(newSegmentGroup, qp, fragment);\n        }\n        return new UrlTree(replaceSegment(urlTree.root, oldSegmentGroup, newSegmentGroup), qp, fragment);\n    }\n    function replaceSegment(current, oldSegment, newSegment) {\n        var children = {};\n        forEach(current.children, function (c, outletName) {\n            if (c === oldSegment) {\n                children[outletName] = newSegment;\n            }\n            else {\n                children[outletName] = replaceSegment(c, oldSegment, newSegment);\n            }\n        });\n        return new UrlSegmentGroup(current.segments, children);\n    }\n    var Navigation = /** @class */ (function () {\n        function Navigation(isAbsolute, numberOfDoubleDots, commands) {\n            this.isAbsolute = isAbsolute;\n            this.numberOfDoubleDots = numberOfDoubleDots;\n            this.commands = commands;\n            if (isAbsolute && commands.length > 0 && isMatrixParams(commands[0])) {\n                throw new Error('Root segment cannot have matrix parameters');\n            }\n            var cmdWithOutlet = commands.find(function (c) { return typeof c === 'object' && c != null && c.outlets; });\n            if (cmdWithOutlet && cmdWithOutlet !== last(commands)) {\n                throw new Error('{outlets:{}} has to be the last command');\n            }\n        }\n        Navigation.prototype.toRoot = function () {\n            return this.isAbsolute && this.commands.length === 1 && this.commands[0] == '/';\n        };\n        return Navigation;\n    }());\n    /** Transforms commands to a normalized `Navigation` */\n    function computeNavigation(commands) {\n        if ((typeof commands[0] === 'string') && commands.length === 1 && commands[0] === '/') {\n            return new Navigation(true, 0, commands);\n        }\n        var numberOfDoubleDots = 0;\n        var isAbsolute = false;\n        var res = commands.reduce(function (res, cmd, cmdIdx) {\n            if (typeof cmd === 'object' && cmd != null) {\n                if (cmd.outlets) {\n                    var outlets_1 = {};\n                    forEach(cmd.outlets, function (commands, name) {\n                        outlets_1[name] = typeof commands === 'string' ? commands.split('/') : commands;\n                    });\n                    return __spread(res, [{ outlets: outlets_1 }]);\n                }\n                if (cmd.segmentPath) {\n                    return __spread(res, [cmd.segmentPath]);\n                }\n            }\n            if (!(typeof cmd === 'string')) {\n                return __spread(res, [cmd]);\n            }\n            if (cmdIdx === 0) {\n                cmd.split('/').forEach(function (urlPart, partIndex) {\n                    if (partIndex == 0 && urlPart === '.') ;\n                    else if (partIndex == 0 && urlPart === '') { //  '/a'\n                        isAbsolute = true;\n                    }\n                    else if (urlPart === '..') { //  '../a'\n                        numberOfDoubleDots++;\n                    }\n                    else if (urlPart != '') {\n                        res.push(urlPart);\n                    }\n                });\n                return res;\n            }\n            return __spread(res, [cmd]);\n        }, []);\n        return new Navigation(isAbsolute, numberOfDoubleDots, res);\n    }\n    var Position = /** @class */ (function () {\n        function Position(segmentGroup, processChildren, index) {\n            this.segmentGroup = segmentGroup;\n            this.processChildren = processChildren;\n            this.index = index;\n        }\n        return Position;\n    }());\n    function findStartingPosition(nav, tree, route) {\n        if (nav.isAbsolute) {\n            return new Position(tree.root, true, 0);\n        }\n        if (route.snapshot._lastPathIndex === -1) {\n            return new Position(route.snapshot._urlSegment, true, 0);\n        }\n        var modifier = isMatrixParams(nav.commands[0]) ? 0 : 1;\n        var index = route.snapshot._lastPathIndex + modifier;\n        return createPositionApplyingDoubleDots(route.snapshot._urlSegment, index, nav.numberOfDoubleDots);\n    }\n    function createPositionApplyingDoubleDots(group, index, numberOfDoubleDots) {\n        var g = group;\n        var ci = index;\n        var dd = numberOfDoubleDots;\n        while (dd > ci) {\n            dd -= ci;\n            g = g.parent;\n            if (!g) {\n                throw new Error('Invalid number of \\'../\\'');\n            }\n            ci = g.segments.length;\n        }\n        return new Position(g, false, ci - dd);\n    }\n    function getPath(command) {\n        if (typeof command === 'object' && command != null && command.outlets) {\n            return command.outlets[PRIMARY_OUTLET];\n        }\n        return \"\" + command;\n    }\n    function getOutlets(commands) {\n        var _a, _b;\n        if (!(typeof commands[0] === 'object'))\n            return _a = {}, _a[PRIMARY_OUTLET] = commands, _a;\n        if (commands[0].outlets === undefined)\n            return _b = {}, _b[PRIMARY_OUTLET] = commands, _b;\n        return commands[0].outlets;\n    }\n    function updateSegmentGroup(segmentGroup, startIndex, commands) {\n        if (!segmentGroup) {\n            segmentGroup = new UrlSegmentGroup([], {});\n        }\n        if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n            return updateSegmentGroupChildren(segmentGroup, startIndex, commands);\n        }\n        var m = prefixedWith(segmentGroup, startIndex, commands);\n        var slicedCommands = commands.slice(m.commandIndex);\n        if (m.match && m.pathIndex < segmentGroup.segments.length) {\n            var g = new UrlSegmentGroup(segmentGroup.segments.slice(0, m.pathIndex), {});\n            g.children[PRIMARY_OUTLET] =\n                new UrlSegmentGroup(segmentGroup.segments.slice(m.pathIndex), segmentGroup.children);\n            return updateSegmentGroupChildren(g, 0, slicedCommands);\n        }\n        else if (m.match && slicedCommands.length === 0) {\n            return new UrlSegmentGroup(segmentGroup.segments, {});\n        }\n        else if (m.match && !segmentGroup.hasChildren()) {\n            return createNewSegmentGroup(segmentGroup, startIndex, commands);\n        }\n        else if (m.match) {\n            return updateSegmentGroupChildren(segmentGroup, 0, slicedCommands);\n        }\n        else {\n            return createNewSegmentGroup(segmentGroup, startIndex, commands);\n        }\n    }\n    function updateSegmentGroupChildren(segmentGroup, startIndex, commands) {\n        if (commands.length === 0) {\n            return new UrlSegmentGroup(segmentGroup.segments, {});\n        }\n        else {\n            var outlets_2 = getOutlets(commands);\n            var children_1 = {};\n            forEach(outlets_2, function (commands, outlet) {\n                if (commands !== null) {\n                    children_1[outlet] = updateSegmentGroup(segmentGroup.children[outlet], startIndex, commands);\n                }\n            });\n            forEach(segmentGroup.children, function (child, childOutlet) {\n                if (outlets_2[childOutlet] === undefined) {\n                    children_1[childOutlet] = child;\n                }\n            });\n            return new UrlSegmentGroup(segmentGroup.segments, children_1);\n        }\n    }\n    function prefixedWith(segmentGroup, startIndex, commands) {\n        var currentCommandIndex = 0;\n        var currentPathIndex = startIndex;\n        var noMatch = { match: false, pathIndex: 0, commandIndex: 0 };\n        while (currentPathIndex < segmentGroup.segments.length) {\n            if (currentCommandIndex >= commands.length)\n                return noMatch;\n            var path = segmentGroup.segments[currentPathIndex];\n            var curr = getPath(commands[currentCommandIndex]);\n            var next = currentCommandIndex < commands.length - 1 ? commands[currentCommandIndex + 1] : null;\n            if (currentPathIndex > 0 && curr === undefined)\n                break;\n            if (curr && next && (typeof next === 'object') && next.outlets === undefined) {\n                if (!compare(curr, next, path))\n                    return noMatch;\n                currentCommandIndex += 2;\n            }\n            else {\n                if (!compare(curr, {}, path))\n                    return noMatch;\n                currentCommandIndex++;\n            }\n            currentPathIndex++;\n        }\n        return { match: true, pathIndex: currentPathIndex, commandIndex: currentCommandIndex };\n    }\n    function createNewSegmentGroup(segmentGroup, startIndex, commands) {\n        var paths = segmentGroup.segments.slice(0, startIndex);\n        var i = 0;\n        while (i < commands.length) {\n            if (typeof commands[i] === 'object' && commands[i].outlets !== undefined) {\n                var children = createNewSegmentChildren(commands[i].outlets);\n                return new UrlSegmentGroup(paths, children);\n            }\n            // if we start with an object literal, we need to reuse the path part from the segment\n            if (i === 0 && isMatrixParams(commands[0])) {\n                var p = segmentGroup.segments[startIndex];\n                paths.push(new UrlSegment(p.path, commands[0]));\n                i++;\n                continue;\n            }\n            var curr = getPath(commands[i]);\n            var next = (i < commands.length - 1) ? commands[i + 1] : null;\n            if (curr && next && isMatrixParams(next)) {\n                paths.push(new UrlSegment(curr, stringify(next)));\n                i += 2;\n            }\n            else {\n                paths.push(new UrlSegment(curr, {}));\n                i++;\n            }\n        }\n        return new UrlSegmentGroup(paths, {});\n    }\n    function createNewSegmentChildren(outlets) {\n        var children = {};\n        forEach(outlets, function (commands, outlet) {\n            if (commands !== null) {\n                children[outlet] = createNewSegmentGroup(new UrlSegmentGroup([], {}), 0, commands);\n            }\n        });\n        return children;\n    }\n    function stringify(params) {\n        var res = {};\n        forEach(params, function (v, k) { return res[k] = \"\" + v; });\n        return res;\n    }\n    function compare(path, params, segment) {\n        return path == segment.path && shallowEqual(params, segment.parameters);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var CanActivate = /** @class */ (function () {\n        function CanActivate(path) {\n            this.path = path;\n            this.route = this.path[this.path.length - 1];\n        }\n        return CanActivate;\n    }());\n    var CanDeactivate = /** @class */ (function () {\n        function CanDeactivate(component, route) {\n            this.component = component;\n            this.route = route;\n        }\n        return CanDeactivate;\n    }());\n    /**\n     * This class bundles the actions involved in preactivation of a route.\n     */\n    var PreActivation = /** @class */ (function () {\n        function PreActivation(future, curr, moduleInjector, forwardEvent) {\n            this.future = future;\n            this.curr = curr;\n            this.moduleInjector = moduleInjector;\n            this.forwardEvent = forwardEvent;\n            this.canActivateChecks = [];\n            this.canDeactivateChecks = [];\n        }\n        PreActivation.prototype.initialize = function (parentContexts) {\n            var futureRoot = this.future._root;\n            var currRoot = this.curr ? this.curr._root : null;\n            this.setupChildRouteGuards(futureRoot, currRoot, parentContexts, [futureRoot.value]);\n        };\n        PreActivation.prototype.checkGuards = function () {\n            var _this = this;\n            if (!this.isDeactivating() && !this.isActivating()) {\n                return rxjs.of(true);\n            }\n            var canDeactivate$ = this.runCanDeactivateChecks();\n            return canDeactivate$.pipe(operators.mergeMap(function (canDeactivate) { return canDeactivate ? _this.runCanActivateChecks() : rxjs.of(false); }));\n        };\n        PreActivation.prototype.resolveData = function (paramsInheritanceStrategy) {\n            var _this = this;\n            if (!this.isActivating())\n                return rxjs.of(null);\n            return rxjs.from(this.canActivateChecks)\n                .pipe(operators.concatMap(function (check) { return _this.runResolve(check.route, paramsInheritanceStrategy); }), operators.reduce(function (_, __) { return _; }));\n        };\n        PreActivation.prototype.isDeactivating = function () { return this.canDeactivateChecks.length !== 0; };\n        PreActivation.prototype.isActivating = function () { return this.canActivateChecks.length !== 0; };\n        /**\n         * Iterates over child routes and calls recursive `setupRouteGuards` to get `this` instance in\n         * proper state to run `checkGuards()` method.\n         */\n        PreActivation.prototype.setupChildRouteGuards = function (futureNode, currNode, contexts, futurePath) {\n            var _this = this;\n            var prevChildren = nodeChildrenAsMap(currNode);\n            // Process the children of the future route\n            futureNode.children.forEach(function (c) {\n                _this.setupRouteGuards(c, prevChildren[c.value.outlet], contexts, futurePath.concat([c.value]));\n                delete prevChildren[c.value.outlet];\n            });\n            // Process any children left from the current route (not active for the future route)\n            forEach(prevChildren, function (v, k) {\n                return _this.deactivateRouteAndItsChildren(v, contexts.getContext(k));\n            });\n        };\n        /**\n         * Iterates over child routes and calls recursive `setupRouteGuards` to get `this` instance in\n         * proper state to run `checkGuards()` method.\n         */\n        PreActivation.prototype.setupRouteGuards = function (futureNode, currNode, parentContexts, futurePath) {\n            var future = futureNode.value;\n            var curr = currNode ? currNode.value : null;\n            var context = parentContexts ? parentContexts.getContext(futureNode.value.outlet) : null;\n            // reusing the node\n            if (curr && future.routeConfig === curr.routeConfig) {\n                var shouldRunGuardsAndResolvers = this.shouldRunGuardsAndResolvers(curr, future, future.routeConfig.runGuardsAndResolvers);\n                if (shouldRunGuardsAndResolvers) {\n                    this.canActivateChecks.push(new CanActivate(futurePath));\n                }\n                else {\n                    // we need to set the data\n                    future.data = curr.data;\n                    future._resolvedData = curr._resolvedData;\n                }\n                // If we have a component, we need to go through an outlet.\n                if (future.component) {\n                    this.setupChildRouteGuards(futureNode, currNode, context ? context.children : null, futurePath);\n                    // if we have a componentless route, we recurse but keep the same outlet map.\n                }\n                else {\n                    this.setupChildRouteGuards(futureNode, currNode, parentContexts, futurePath);\n                }\n                if (shouldRunGuardsAndResolvers) {\n                    var outlet = context.outlet;\n                    this.canDeactivateChecks.push(new CanDeactivate(outlet.component, curr));\n                }\n            }\n            else {\n                if (curr) {\n                    this.deactivateRouteAndItsChildren(currNode, context);\n                }\n                this.canActivateChecks.push(new CanActivate(futurePath));\n                // If we have a component, we need to go through an outlet.\n                if (future.component) {\n                    this.setupChildRouteGuards(futureNode, null, context ? context.children : null, futurePath);\n                    // if we have a componentless route, we recurse but keep the same outlet map.\n                }\n                else {\n                    this.setupChildRouteGuards(futureNode, null, parentContexts, futurePath);\n                }\n            }\n        };\n        PreActivation.prototype.shouldRunGuardsAndResolvers = function (curr, future, mode) {\n            switch (mode) {\n                case 'always':\n                    return true;\n                case 'paramsOrQueryParamsChange':\n                    return !equalParamsAndUrlSegments(curr, future) ||\n                        !shallowEqual(curr.queryParams, future.queryParams);\n                case 'paramsChange':\n                default:\n                    return !equalParamsAndUrlSegments(curr, future);\n            }\n        };\n        PreActivation.prototype.deactivateRouteAndItsChildren = function (route, context) {\n            var _this = this;\n            var children = nodeChildrenAsMap(route);\n            var r = route.value;\n            forEach(children, function (node, childName) {\n                if (!r.component) {\n                    _this.deactivateRouteAndItsChildren(node, context);\n                }\n                else if (context) {\n                    _this.deactivateRouteAndItsChildren(node, context.children.getContext(childName));\n                }\n                else {\n                    _this.deactivateRouteAndItsChildren(node, null);\n                }\n            });\n            if (!r.component) {\n                this.canDeactivateChecks.push(new CanDeactivate(null, r));\n            }\n            else if (context && context.outlet && context.outlet.isActivated) {\n                this.canDeactivateChecks.push(new CanDeactivate(context.outlet.component, r));\n            }\n            else {\n                this.canDeactivateChecks.push(new CanDeactivate(null, r));\n            }\n        };\n        PreActivation.prototype.runCanDeactivateChecks = function () {\n            var _this = this;\n            return rxjs.from(this.canDeactivateChecks)\n                .pipe(operators.mergeMap(function (check) { return _this.runCanDeactivate(check.component, check.route); }), operators.every(function (result) { return result === true; }));\n        };\n        PreActivation.prototype.runCanActivateChecks = function () {\n            var _this = this;\n            return rxjs.from(this.canActivateChecks)\n                .pipe(operators.concatMap(function (check) { return andObservables(rxjs.from([\n                _this.fireChildActivationStart(check.route.parent),\n                _this.fireActivationStart(check.route), _this.runCanActivateChild(check.path),\n                _this.runCanActivate(check.route)\n            ])); }), operators.every(function (result) { return result === true; }));\n            // this.fireChildActivationStart(check.path),\n        };\n        /**\n         * This should fire off `ActivationStart` events for each route being activated at this\n         * level.\n         * In other words, if you're activating `a` and `b` below, `path` will contain the\n         * `ActivatedRouteSnapshot`s for both and we will fire `ActivationStart` for both. Always\n         * return\n         * `true` so checks continue to run.\n         */\n        PreActivation.prototype.fireActivationStart = function (snapshot) {\n            if (snapshot !== null && this.forwardEvent) {\n                this.forwardEvent(new ActivationStart(snapshot));\n            }\n            return rxjs.of(true);\n        };\n        /**\n         * This should fire off `ChildActivationStart` events for each route being activated at this\n         * level.\n         * In other words, if you're activating `a` and `b` below, `path` will contain the\n         * `ActivatedRouteSnapshot`s for both and we will fire `ChildActivationStart` for both. Always\n         * return\n         * `true` so checks continue to run.\n         */\n        PreActivation.prototype.fireChildActivationStart = function (snapshot) {\n            if (snapshot !== null && this.forwardEvent) {\n                this.forwardEvent(new ChildActivationStart(snapshot));\n            }\n            return rxjs.of(true);\n        };\n        PreActivation.prototype.runCanActivate = function (future) {\n            var _this = this;\n            var canActivate = future.routeConfig ? future.routeConfig.canActivate : null;\n            if (!canActivate || canActivate.length === 0)\n                return rxjs.of(true);\n            var obs = rxjs.from(canActivate).pipe(operators.map(function (c) {\n                var guard = _this.getToken(c, future);\n                var observable;\n                if (guard.canActivate) {\n                    observable = wrapIntoObservable(guard.canActivate(future, _this.future));\n                }\n                else {\n                    observable = wrapIntoObservable(guard(future, _this.future));\n                }\n                return observable.pipe(operators.first());\n            }));\n            return andObservables(obs);\n        };\n        PreActivation.prototype.runCanActivateChild = function (path) {\n            var _this = this;\n            var future = path[path.length - 1];\n            var canActivateChildGuards = path.slice(0, path.length - 1)\n                .reverse()\n                .map(function (p) { return _this.extractCanActivateChild(p); })\n                .filter(function (_) { return _ !== null; });\n            return andObservables(rxjs.from(canActivateChildGuards).pipe(operators.map(function (d) {\n                var obs = rxjs.from(d.guards).pipe(operators.map(function (c) {\n                    var guard = _this.getToken(c, d.node);\n                    var observable;\n                    if (guard.canActivateChild) {\n                        observable = wrapIntoObservable(guard.canActivateChild(future, _this.future));\n                    }\n                    else {\n                        observable = wrapIntoObservable(guard(future, _this.future));\n                    }\n                    return observable.pipe(operators.first());\n                }));\n                return andObservables(obs);\n            })));\n        };\n        PreActivation.prototype.extractCanActivateChild = function (p) {\n            var canActivateChild = p.routeConfig ? p.routeConfig.canActivateChild : null;\n            if (!canActivateChild || canActivateChild.length === 0)\n                return null;\n            return { node: p, guards: canActivateChild };\n        };\n        PreActivation.prototype.runCanDeactivate = function (component, curr) {\n            var _this = this;\n            var canDeactivate = curr && curr.routeConfig ? curr.routeConfig.canDeactivate : null;\n            if (!canDeactivate || canDeactivate.length === 0)\n                return rxjs.of(true);\n            var canDeactivate$ = rxjs.from(canDeactivate).pipe(operators.mergeMap(function (c) {\n                var guard = _this.getToken(c, curr);\n                var observable;\n                if (guard.canDeactivate) {\n                    observable =\n                        wrapIntoObservable(guard.canDeactivate(component, curr, _this.curr, _this.future));\n                }\n                else {\n                    observable = wrapIntoObservable(guard(component, curr, _this.curr, _this.future));\n                }\n                return observable.pipe(operators.first());\n            }));\n            return canDeactivate$.pipe(operators.every(function (result) { return result === true; }));\n        };\n        PreActivation.prototype.runResolve = function (future, paramsInheritanceStrategy) {\n            var resolve = future._resolve;\n            return this.resolveNode(resolve, future).pipe(operators.map(function (resolvedData) {\n                future._resolvedData = resolvedData;\n                future.data = __assign({}, future.data, inheritedParamsDataResolve(future, paramsInheritanceStrategy).resolve);\n                return null;\n            }));\n        };\n        PreActivation.prototype.resolveNode = function (resolve, future) {\n            var _this = this;\n            var keys = Object.keys(resolve);\n            if (keys.length === 0) {\n                return rxjs.of({});\n            }\n            if (keys.length === 1) {\n                var key_1 = keys[0];\n                return this.getResolver(resolve[key_1], future).pipe(operators.map(function (value) {\n                    var _a;\n                    return _a = {}, _a[key_1] = value, _a;\n                }));\n            }\n            var data = {};\n            var runningResolvers$ = rxjs.from(keys).pipe(operators.mergeMap(function (key) {\n                return _this.getResolver(resolve[key], future).pipe(operators.map(function (value) {\n                    data[key] = value;\n                    return value;\n                }));\n            }));\n            return runningResolvers$.pipe(operators.last(), operators.map(function () { return data; }));\n        };\n        PreActivation.prototype.getResolver = function (injectionToken, future) {\n            var resolver = this.getToken(injectionToken, future);\n            return resolver.resolve ? wrapIntoObservable(resolver.resolve(future, this.future)) :\n                wrapIntoObservable(resolver(future, this.future));\n        };\n        PreActivation.prototype.getToken = function (token, snapshot) {\n            var config = closestLoadedConfig(snapshot);\n            var injector = config ? config.module.injector : this.moduleInjector;\n            return injector.get(token);\n        };\n        return PreActivation;\n    }());\n    function closestLoadedConfig(snapshot) {\n        if (!snapshot)\n            return null;\n        for (var s = snapshot.parent; s; s = s.parent) {\n            var route = s.routeConfig;\n            if (route && route._loadedConfig)\n                return route._loadedConfig;\n        }\n        return null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NoMatch$1 = /** @class */ (function () {\n        function NoMatch() {\n        }\n        return NoMatch;\n    }());\n    function recognize(rootComponentType, config, urlTree, url, paramsInheritanceStrategy, relativeLinkResolution) {\n        if (paramsInheritanceStrategy === void 0) { paramsInheritanceStrategy = 'emptyOnly'; }\n        if (relativeLinkResolution === void 0) { relativeLinkResolution = 'legacy'; }\n        return new Recognizer(rootComponentType, config, urlTree, url, paramsInheritanceStrategy, relativeLinkResolution)\n            .recognize();\n    }\n    var Recognizer = /** @class */ (function () {\n        function Recognizer(rootComponentType, config, urlTree, url, paramsInheritanceStrategy, relativeLinkResolution) {\n            this.rootComponentType = rootComponentType;\n            this.config = config;\n            this.urlTree = urlTree;\n            this.url = url;\n            this.paramsInheritanceStrategy = paramsInheritanceStrategy;\n            this.relativeLinkResolution = relativeLinkResolution;\n        }\n        Recognizer.prototype.recognize = function () {\n            try {\n                var rootSegmentGroup = split$1(this.urlTree.root, [], [], this.config, this.relativeLinkResolution).segmentGroup;\n                var children = this.processSegmentGroup(this.config, rootSegmentGroup, PRIMARY_OUTLET);\n                var root = new ActivatedRouteSnapshot([], Object.freeze({}), Object.freeze(__assign({}, this.urlTree.queryParams)), this.urlTree.fragment, {}, PRIMARY_OUTLET, this.rootComponentType, null, this.urlTree.root, -1, {});\n                var rootNode = new TreeNode(root, children);\n                var routeState = new RouterStateSnapshot(this.url, rootNode);\n                this.inheritParamsAndData(routeState._root);\n                return rxjs.of(routeState);\n            }\n            catch (e) {\n                return new rxjs.Observable(function (obs) { return obs.error(e); });\n            }\n        };\n        Recognizer.prototype.inheritParamsAndData = function (routeNode) {\n            var _this = this;\n            var route = routeNode.value;\n            var i = inheritedParamsDataResolve(route, this.paramsInheritanceStrategy);\n            route.params = Object.freeze(i.params);\n            route.data = Object.freeze(i.data);\n            routeNode.children.forEach(function (n) { return _this.inheritParamsAndData(n); });\n        };\n        Recognizer.prototype.processSegmentGroup = function (config, segmentGroup, outlet) {\n            if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n                return this.processChildren(config, segmentGroup);\n            }\n            return this.processSegment(config, segmentGroup, segmentGroup.segments, outlet);\n        };\n        Recognizer.prototype.processChildren = function (config, segmentGroup) {\n            var _this = this;\n            var children = mapChildrenIntoArray(segmentGroup, function (child, childOutlet) { return _this.processSegmentGroup(config, child, childOutlet); });\n            checkOutletNameUniqueness(children);\n            sortActivatedRouteSnapshots(children);\n            return children;\n        };\n        Recognizer.prototype.processSegment = function (config, segmentGroup, segments, outlet) {\n            var e_1, _a;\n            try {\n                for (var config_1 = __values(config), config_1_1 = config_1.next(); !config_1_1.done; config_1_1 = config_1.next()) {\n                    var r = config_1_1.value;\n                    try {\n                        return this.processSegmentAgainstRoute(r, segmentGroup, segments, outlet);\n                    }\n                    catch (e) {\n                        if (!(e instanceof NoMatch$1))\n                            throw e;\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (config_1_1 && !config_1_1.done && (_a = config_1.return)) _a.call(config_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            if (this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n                return [];\n            }\n            throw new NoMatch$1();\n        };\n        Recognizer.prototype.noLeftoversInUrl = function (segmentGroup, segments, outlet) {\n            return segments.length === 0 && !segmentGroup.children[outlet];\n        };\n        Recognizer.prototype.processSegmentAgainstRoute = function (route, rawSegment, segments, outlet) {\n            if (route.redirectTo)\n                throw new NoMatch$1();\n            if ((route.outlet || PRIMARY_OUTLET) !== outlet)\n                throw new NoMatch$1();\n            var snapshot;\n            var consumedSegments = [];\n            var rawSlicedSegments = [];\n            if (route.path === '**') {\n                var params = segments.length > 0 ? last(segments).parameters : {};\n                snapshot = new ActivatedRouteSnapshot(segments, params, Object.freeze(__assign({}, this.urlTree.queryParams)), this.urlTree.fragment, getData(route), outlet, route.component, route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + segments.length, getResolve(route));\n            }\n            else {\n                var result = match$1(rawSegment, route, segments);\n                consumedSegments = result.consumedSegments;\n                rawSlicedSegments = segments.slice(result.lastChild);\n                snapshot = new ActivatedRouteSnapshot(consumedSegments, result.parameters, Object.freeze(__assign({}, this.urlTree.queryParams)), this.urlTree.fragment, getData(route), outlet, route.component, route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + consumedSegments.length, getResolve(route));\n            }\n            var childConfig = getChildConfig(route);\n            var _a = split$1(rawSegment, consumedSegments, rawSlicedSegments, childConfig, this.relativeLinkResolution), segmentGroup = _a.segmentGroup, slicedSegments = _a.slicedSegments;\n            if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n                var children_1 = this.processChildren(childConfig, segmentGroup);\n                return [new TreeNode(snapshot, children_1)];\n            }\n            if (childConfig.length === 0 && slicedSegments.length === 0) {\n                return [new TreeNode(snapshot, [])];\n            }\n            var children = this.processSegment(childConfig, segmentGroup, slicedSegments, PRIMARY_OUTLET);\n            return [new TreeNode(snapshot, children)];\n        };\n        return Recognizer;\n    }());\n    function sortActivatedRouteSnapshots(nodes) {\n        nodes.sort(function (a, b) {\n            if (a.value.outlet === PRIMARY_OUTLET)\n                return -1;\n            if (b.value.outlet === PRIMARY_OUTLET)\n                return 1;\n            return a.value.outlet.localeCompare(b.value.outlet);\n        });\n    }\n    function getChildConfig(route) {\n        if (route.children) {\n            return route.children;\n        }\n        if (route.loadChildren) {\n            return route._loadedConfig.routes;\n        }\n        return [];\n    }\n    function match$1(segmentGroup, route, segments) {\n        if (route.path === '') {\n            if (route.pathMatch === 'full' && (segmentGroup.hasChildren() || segments.length > 0)) {\n                throw new NoMatch$1();\n            }\n            return { consumedSegments: [], lastChild: 0, parameters: {} };\n        }\n        var matcher = route.matcher || defaultUrlMatcher;\n        var res = matcher(segments, segmentGroup, route);\n        if (!res)\n            throw new NoMatch$1();\n        var posParams = {};\n        forEach(res.posParams, function (v, k) { posParams[k] = v.path; });\n        var parameters = res.consumed.length > 0 ? __assign({}, posParams, res.consumed[res.consumed.length - 1].parameters) :\n            posParams;\n        return { consumedSegments: res.consumed, lastChild: res.consumed.length, parameters: parameters };\n    }\n    function checkOutletNameUniqueness(nodes) {\n        var names = {};\n        nodes.forEach(function (n) {\n            var routeWithSameOutletName = names[n.value.outlet];\n            if (routeWithSameOutletName) {\n                var p = routeWithSameOutletName.url.map(function (s) { return s.toString(); }).join('/');\n                var c = n.value.url.map(function (s) { return s.toString(); }).join('/');\n                throw new Error(\"Two segments cannot have the same outlet name: '\" + p + \"' and '\" + c + \"'.\");\n            }\n            names[n.value.outlet] = n.value;\n        });\n    }\n    function getSourceSegmentGroup(segmentGroup) {\n        var s = segmentGroup;\n        while (s._sourceSegment) {\n            s = s._sourceSegment;\n        }\n        return s;\n    }\n    function getPathIndexShift(segmentGroup) {\n        var s = segmentGroup;\n        var res = (s._segmentIndexShift ? s._segmentIndexShift : 0);\n        while (s._sourceSegment) {\n            s = s._sourceSegment;\n            res += (s._segmentIndexShift ? s._segmentIndexShift : 0);\n        }\n        return res - 1;\n    }\n    function split$1(segmentGroup, consumedSegments, slicedSegments, config, relativeLinkResolution) {\n        if (slicedSegments.length > 0 &&\n            containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n            var s_1 = new UrlSegmentGroup(consumedSegments, createChildrenForEmptyPaths(segmentGroup, consumedSegments, config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n            s_1._sourceSegment = segmentGroup;\n            s_1._segmentIndexShift = consumedSegments.length;\n            return { segmentGroup: s_1, slicedSegments: [] };\n        }\n        if (slicedSegments.length === 0 &&\n            containsEmptyPathMatches(segmentGroup, slicedSegments, config)) {\n            var s_2 = new UrlSegmentGroup(segmentGroup.segments, addEmptyPathsToChildrenIfNeeded(segmentGroup, consumedSegments, slicedSegments, config, segmentGroup.children, relativeLinkResolution));\n            s_2._sourceSegment = segmentGroup;\n            s_2._segmentIndexShift = consumedSegments.length;\n            return { segmentGroup: s_2, slicedSegments: slicedSegments };\n        }\n        var s = new UrlSegmentGroup(segmentGroup.segments, segmentGroup.children);\n        s._sourceSegment = segmentGroup;\n        s._segmentIndexShift = consumedSegments.length;\n        return { segmentGroup: s, slicedSegments: slicedSegments };\n    }\n    function addEmptyPathsToChildrenIfNeeded(segmentGroup, consumedSegments, slicedSegments, routes, children, relativeLinkResolution) {\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var routes_1 = __values(routes), routes_1_1 = routes_1.next(); !routes_1_1.done; routes_1_1 = routes_1.next()) {\n                var r = routes_1_1.value;\n                if (emptyPathMatch(segmentGroup, slicedSegments, r) && !children[getOutlet$1(r)]) {\n                    var s = new UrlSegmentGroup([], {});\n                    s._sourceSegment = segmentGroup;\n                    if (relativeLinkResolution === 'legacy') {\n                        s._segmentIndexShift = segmentGroup.segments.length;\n                    }\n                    else {\n                        s._segmentIndexShift = consumedSegments.length;\n                    }\n                    res[getOutlet$1(r)] = s;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (routes_1_1 && !routes_1_1.done && (_a = routes_1.return)) _a.call(routes_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return __assign({}, children, res);\n    }\n    function createChildrenForEmptyPaths(segmentGroup, consumedSegments, routes, primarySegment) {\n        var e_3, _a;\n        var res = {};\n        res[PRIMARY_OUTLET] = primarySegment;\n        primarySegment._sourceSegment = segmentGroup;\n        primarySegment._segmentIndexShift = consumedSegments.length;\n        try {\n            for (var routes_2 = __values(routes), routes_2_1 = routes_2.next(); !routes_2_1.done; routes_2_1 = routes_2.next()) {\n                var r = routes_2_1.value;\n                if (r.path === '' && getOutlet$1(r) !== PRIMARY_OUTLET) {\n                    var s = new UrlSegmentGroup([], {});\n                    s._sourceSegment = segmentGroup;\n                    s._segmentIndexShift = consumedSegments.length;\n                    res[getOutlet$1(r)] = s;\n                }\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (routes_2_1 && !routes_2_1.done && (_a = routes_2.return)) _a.call(routes_2);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n        return res;\n    }\n    function containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, routes) {\n        return routes.some(function (r) { return emptyPathMatch(segmentGroup, slicedSegments, r) && getOutlet$1(r) !== PRIMARY_OUTLET; });\n    }\n    function containsEmptyPathMatches(segmentGroup, slicedSegments, routes) {\n        return routes.some(function (r) { return emptyPathMatch(segmentGroup, slicedSegments, r); });\n    }\n    function emptyPathMatch(segmentGroup, slicedSegments, r) {\n        if ((segmentGroup.hasChildren() || slicedSegments.length > 0) && r.pathMatch === 'full') {\n            return false;\n        }\n        return r.path === '' && r.redirectTo === undefined;\n    }\n    function getOutlet$1(route) {\n        return route.outlet || PRIMARY_OUTLET;\n    }\n    function getData(route) {\n        return route.data || {};\n    }\n    function getResolve(route) {\n        return route.resolve || {};\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Provides a way to customize when activated routes get reused.\n     *\n     * @experimental\n     */\n    var RouteReuseStrategy = /** @class */ (function () {\n        function RouteReuseStrategy() {\n        }\n        return RouteReuseStrategy;\n    }());\n    /**\n     * Does not detach any subtrees. Reuses routes as long as their route config is the same.\n     */\n    var DefaultRouteReuseStrategy = /** @class */ (function () {\n        function DefaultRouteReuseStrategy() {\n        }\n        DefaultRouteReuseStrategy.prototype.shouldDetach = function (route) { return false; };\n        DefaultRouteReuseStrategy.prototype.store = function (route, detachedTree) { };\n        DefaultRouteReuseStrategy.prototype.shouldAttach = function (route) { return false; };\n        DefaultRouteReuseStrategy.prototype.retrieve = function (route) { return null; };\n        DefaultRouteReuseStrategy.prototype.shouldReuseRoute = function (future, curr) {\n            return future.routeConfig === curr.routeConfig;\n        };\n        return DefaultRouteReuseStrategy;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @docsNotRequired\n     * @experimental\n     */\n    var ROUTES = new core.InjectionToken('ROUTES');\n    var RouterConfigLoader = /** @class */ (function () {\n        function RouterConfigLoader(loader, compiler, onLoadStartListener, onLoadEndListener) {\n            this.loader = loader;\n            this.compiler = compiler;\n            this.onLoadStartListener = onLoadStartListener;\n            this.onLoadEndListener = onLoadEndListener;\n        }\n        RouterConfigLoader.prototype.load = function (parentInjector, route) {\n            var _this = this;\n            if (this.onLoadStartListener) {\n                this.onLoadStartListener(route);\n            }\n            var moduleFactory$ = this.loadModuleFactory(route.loadChildren);\n            return moduleFactory$.pipe(operators.map(function (factory) {\n                if (_this.onLoadEndListener) {\n                    _this.onLoadEndListener(route);\n                }\n                var module = factory.create(parentInjector);\n                return new LoadedRouterConfig(flatten(module.injector.get(ROUTES)).map(standardizeConfig), module);\n            }));\n        };\n        RouterConfigLoader.prototype.loadModuleFactory = function (loadChildren) {\n            var _this = this;\n            if (typeof loadChildren === 'string') {\n                return rxjs.from(this.loader.load(loadChildren));\n            }\n            else {\n                return wrapIntoObservable(loadChildren()).pipe(operators.mergeMap(function (t) {\n                    if (t instanceof core.NgModuleFactory) {\n                        return rxjs.of(t);\n                    }\n                    else {\n                        return rxjs.from(_this.compiler.compileModuleAsync(t));\n                    }\n                }));\n            }\n        };\n        return RouterConfigLoader;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Provides a way to migrate AngularJS applications to Angular.\n     *\n     * @experimental\n     */\n    var UrlHandlingStrategy = /** @class */ (function () {\n        function UrlHandlingStrategy() {\n        }\n        return UrlHandlingStrategy;\n    }());\n    /**\n     * @experimental\n     */\n    var DefaultUrlHandlingStrategy = /** @class */ (function () {\n        function DefaultUrlHandlingStrategy() {\n        }\n        DefaultUrlHandlingStrategy.prototype.shouldProcessUrl = function (url) { return true; };\n        DefaultUrlHandlingStrategy.prototype.extract = function (url) { return url; };\n        DefaultUrlHandlingStrategy.prototype.merge = function (newUrlPart, wholeUrl) { return newUrlPart; };\n        return DefaultUrlHandlingStrategy;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function defaultErrorHandler(error) {\n        throw error;\n    }\n    function defaultMalformedUriErrorHandler(error, urlSerializer, url) {\n        return urlSerializer.parse('/');\n    }\n    /**\n     * @internal\n     */\n    function defaultRouterHook(snapshot, runExtras) {\n        return rxjs.of(null);\n    }\n    /**\n     * @description\n     *\n     * Provides the navigation and url manipulation capabilities.\n     *\n     * See `Routes` for more details and examples.\n     *\n     * @ngModule RouterModule\n     *\n     *\n     */\n    var Router = /** @class */ (function () {\n        /**\n         * Creates the router service.\n         */\n        // TODO: vsavkin make internal after the final is out.\n        function Router(rootComponentType, urlSerializer, rootContexts, location, injector, loader, compiler, config) {\n            var _this = this;\n            this.rootComponentType = rootComponentType;\n            this.urlSerializer = urlSerializer;\n            this.rootContexts = rootContexts;\n            this.location = location;\n            this.config = config;\n            this.navigations = new rxjs.BehaviorSubject(null);\n            this.navigationId = 0;\n            this.events = new rxjs.Subject();\n            /**\n             * Error handler that is invoked when a navigation errors.\n             *\n             * See `ErrorHandler` for more information.\n             */\n            this.errorHandler = defaultErrorHandler;\n            /**\n             * Malformed uri error handler is invoked when `Router.parseUrl(url)` throws an\n             * error due to containing an invalid character. The most common case would be a `%` sign\n             * that's not encoded and is not part of a percent encoded sequence.\n             */\n            this.malformedUriErrorHandler = defaultMalformedUriErrorHandler;\n            /**\n             * Indicates if at least one navigation happened.\n             */\n            this.navigated = false;\n            this.lastSuccessfulId = -1;\n            /**\n             * Used by RouterModule. This allows us to\n             * pause the navigation either before preactivation or after it.\n             * @internal\n             */\n            this.hooks = {\n                beforePreactivation: defaultRouterHook,\n                afterPreactivation: defaultRouterHook\n            };\n            /**\n             * Extracts and merges URLs. Used for AngularJS to Angular migrations.\n             */\n            this.urlHandlingStrategy = new DefaultUrlHandlingStrategy();\n            this.routeReuseStrategy = new DefaultRouteReuseStrategy();\n            /**\n             * Define what the router should do if it receives a navigation request to the current URL.\n             * By default, the router will ignore this navigation. However, this prevents features such\n             * as a \"refresh\" button. Use this option to configure the behavior when navigating to the\n             * current URL. Default is 'ignore'.\n             */\n            this.onSameUrlNavigation = 'ignore';\n            /**\n             * Defines how the router merges params, data and resolved data from parent to child\n             * routes. Available options are:\n             *\n             * - `'emptyOnly'`, the default, only inherits parent params for path-less or component-less\n             *   routes.\n             * - `'always'`, enables unconditional inheritance of parent params.\n             */\n            this.paramsInheritanceStrategy = 'emptyOnly';\n            /**\n             * Defines when the router updates the browser URL. The default behavior is to update after\n             * successful navigation. However, some applications may prefer a mode where the URL gets\n             * updated at the beginning of navigation. The most common use case would be updating the\n             * URL early so if navigation fails, you can show an error message with the URL that failed.\n             * Available options are:\n             *\n             * - `'deferred'`, the default, updates the browser URL after navigation has finished.\n             * - `'eager'`, updates browser URL at the beginning of navigation.\n             */\n            this.urlUpdateStrategy = 'deferred';\n            /**\n             * See {@link RouterModule} for more information.\n             */\n            this.relativeLinkResolution = 'legacy';\n            var onLoadStart = function (r) { return _this.triggerEvent(new RouteConfigLoadStart(r)); };\n            var onLoadEnd = function (r) { return _this.triggerEvent(new RouteConfigLoadEnd(r)); };\n            this.ngModule = injector.get(core.NgModuleRef);\n            this.resetConfig(config);\n            this.currentUrlTree = createEmptyUrlTree();\n            this.rawUrlTree = this.currentUrlTree;\n            this.configLoader = new RouterConfigLoader(loader, compiler, onLoadStart, onLoadEnd);\n            this.routerState = createEmptyState(this.currentUrlTree, this.rootComponentType);\n            this.processNavigations();\n        }\n        /**\n         * @internal\n         * TODO: this should be removed once the constructor of the router made internal\n         */\n        Router.prototype.resetRootComponentType = function (rootComponentType) {\n            this.rootComponentType = rootComponentType;\n            // TODO: vsavkin router 4.0 should make the root component set to null\n            // this will simplify the lifecycle of the router.\n            this.routerState.root.component = this.rootComponentType;\n        };\n        /**\n         * Sets up the location change listener and performs the initial navigation.\n         */\n        Router.prototype.initialNavigation = function () {\n            this.setUpLocationChangeListener();\n            if (this.navigationId === 0) {\n                this.navigateByUrl(this.location.path(true), { replaceUrl: true });\n            }\n        };\n        /**\n         * Sets up the location change listener.\n         */\n        Router.prototype.setUpLocationChangeListener = function () {\n            var _this = this;\n            // Don't need to use Zone.wrap any more, because zone.js\n            // already patch onPopState, so location change callback will\n            // run into ngZone\n            if (!this.locationSubscription) {\n                this.locationSubscription = this.location.subscribe(function (change) {\n                    var rawUrlTree = _this.parseUrl(change['url']);\n                    var source = change['type'] === 'popstate' ? 'popstate' : 'hashchange';\n                    var state = change.state && change.state.navigationId ?\n                        { navigationId: change.state.navigationId } :\n                        null;\n                    setTimeout(function () { _this.scheduleNavigation(rawUrlTree, source, state, { replaceUrl: true }); }, 0);\n                });\n            }\n        };\n        Object.defineProperty(Router.prototype, \"url\", {\n            /** The current url */\n            get: function () { return this.serializeUrl(this.currentUrlTree); },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        Router.prototype.triggerEvent = function (e) { this.events.next(e); };\n        /**\n         * Resets the configuration used for navigation and generating links.\n         *\n         * ### Usage\n         *\n         * ```\n         * router.resetConfig([\n         *  { path: 'team/:id', component: TeamCmp, children: [\n         *    { path: 'simple', component: SimpleCmp },\n         *    { path: 'user/:name', component: UserCmp }\n         *  ]}\n         * ]);\n         * ```\n         */\n        Router.prototype.resetConfig = function (config) {\n            validateConfig(config);\n            this.config = config.map(standardizeConfig);\n            this.navigated = false;\n            this.lastSuccessfulId = -1;\n        };\n        /** @docsNotRequired */\n        Router.prototype.ngOnDestroy = function () { this.dispose(); };\n        /** Disposes of the router */\n        Router.prototype.dispose = function () {\n            if (this.locationSubscription) {\n                this.locationSubscription.unsubscribe();\n                this.locationSubscription = null;\n            }\n        };\n        /**\n         * Applies an array of commands to the current url tree and creates a new url tree.\n         *\n         * When given an activate route, applies the given commands starting from the route.\n         * When not given a route, applies the given command starting from the root.\n         *\n         * ### Usage\n         *\n         * ```\n         * // create /team/33/user/11\n         * router.createUrlTree(['/team', 33, 'user', 11]);\n         *\n         * // create /team/33;expand=true/user/11\n         * router.createUrlTree(['/team', 33, {expand: true}, 'user', 11]);\n         *\n         * // you can collapse static segments like this (this works only with the first passed-in value):\n         * router.createUrlTree(['/team/33/user', userId]);\n         *\n         * // If the first segment can contain slashes, and you do not want the router to split it, you\n         * // can do the following:\n         *\n         * router.createUrlTree([{segmentPath: '/one/two'}]);\n         *\n         * // create /team/33/(user/11//right:chat)\n         * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: 'chat'}}]);\n         *\n         * // remove the right secondary node\n         * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: null}}]);\n         *\n         * // assuming the current url is `/team/33/user/11` and the route points to `user/11`\n         *\n         * // navigate to /team/33/user/11/details\n         * router.createUrlTree(['details'], {relativeTo: route});\n         *\n         * // navigate to /team/33/user/22\n         * router.createUrlTree(['../22'], {relativeTo: route});\n         *\n         * // navigate to /team/44/user/22\n         * router.createUrlTree(['../../team/44/user/22'], {relativeTo: route});\n         * ```\n         */\n        Router.prototype.createUrlTree = function (commands, navigationExtras) {\n            if (navigationExtras === void 0) { navigationExtras = {}; }\n            var relativeTo = navigationExtras.relativeTo, queryParams = navigationExtras.queryParams, fragment = navigationExtras.fragment, preserveQueryParams = navigationExtras.preserveQueryParams, queryParamsHandling = navigationExtras.queryParamsHandling, preserveFragment = navigationExtras.preserveFragment;\n            if (core.isDevMode() && preserveQueryParams && console && console.warn) {\n                console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n            }\n            var a = relativeTo || this.routerState.root;\n            var f = preserveFragment ? this.currentUrlTree.fragment : fragment;\n            var q = null;\n            if (queryParamsHandling) {\n                switch (queryParamsHandling) {\n                    case 'merge':\n                        q = __assign({}, this.currentUrlTree.queryParams, queryParams);\n                        break;\n                    case 'preserve':\n                        q = this.currentUrlTree.queryParams;\n                        break;\n                    default:\n                        q = queryParams || null;\n                }\n            }\n            else {\n                q = preserveQueryParams ? this.currentUrlTree.queryParams : queryParams || null;\n            }\n            if (q !== null) {\n                q = this.removeEmptyProps(q);\n            }\n            return createUrlTree(a, this.currentUrlTree, commands, q, f);\n        };\n        /**\n         * Navigate based on the provided url. This navigation is always absolute.\n         *\n         * Returns a promise that:\n         * - resolves to 'true' when navigation succeeds,\n         * - resolves to 'false' when navigation fails,\n         * - is rejected when an error happens.\n         *\n         * ### Usage\n         *\n         * ```\n         * router.navigateByUrl(\"/team/33/user/11\");\n         *\n         * // Navigate without updating the URL\n         * router.navigateByUrl(\"/team/33/user/11\", { skipLocationChange: true });\n         * ```\n         *\n         * In opposite to `navigate`, `navigateByUrl` takes a whole URL\n         * and does not apply any delta to the current one.\n         */\n        Router.prototype.navigateByUrl = function (url, extras) {\n            if (extras === void 0) { extras = { skipLocationChange: false }; }\n            var urlTree = url instanceof UrlTree ? url : this.parseUrl(url);\n            var mergedTree = this.urlHandlingStrategy.merge(urlTree, this.rawUrlTree);\n            return this.scheduleNavigation(mergedTree, 'imperative', null, extras);\n        };\n        /**\n         * Navigate based on the provided array of commands and a starting point.\n         * If no starting route is provided, the navigation is absolute.\n         *\n         * Returns a promise that:\n         * - resolves to 'true' when navigation succeeds,\n         * - resolves to 'false' when navigation fails,\n         * - is rejected when an error happens.\n         *\n         * ### Usage\n         *\n         * ```\n         * router.navigate(['team', 33, 'user', 11], {relativeTo: route});\n         *\n         * // Navigate without updating the URL\n         * router.navigate(['team', 33, 'user', 11], {relativeTo: route, skipLocationChange: true});\n         * ```\n         *\n         * In opposite to `navigateByUrl`, `navigate` always takes a delta that is applied to the current\n         * URL.\n         */\n        Router.prototype.navigate = function (commands, extras) {\n            if (extras === void 0) { extras = { skipLocationChange: false }; }\n            validateCommands(commands);\n            return this.navigateByUrl(this.createUrlTree(commands, extras), extras);\n        };\n        /** Serializes a `UrlTree` into a string */\n        Router.prototype.serializeUrl = function (url) { return this.urlSerializer.serialize(url); };\n        /** Parses a string into a `UrlTree` */\n        Router.prototype.parseUrl = function (url) {\n            var urlTree;\n            try {\n                urlTree = this.urlSerializer.parse(url);\n            }\n            catch (e) {\n                urlTree = this.malformedUriErrorHandler(e, this.urlSerializer, url);\n            }\n            return urlTree;\n        };\n        /** Returns whether the url is activated */\n        Router.prototype.isActive = function (url, exact) {\n            if (url instanceof UrlTree) {\n                return containsTree(this.currentUrlTree, url, exact);\n            }\n            var urlTree = this.parseUrl(url);\n            return containsTree(this.currentUrlTree, urlTree, exact);\n        };\n        Router.prototype.removeEmptyProps = function (params) {\n            return Object.keys(params).reduce(function (result, key) {\n                var value = params[key];\n                if (value !== null && value !== undefined) {\n                    result[key] = value;\n                }\n                return result;\n            }, {});\n        };\n        Router.prototype.processNavigations = function () {\n            var _this = this;\n            this.navigations\n                .pipe(operators.concatMap(function (nav) {\n                if (nav) {\n                    _this.executeScheduledNavigation(nav);\n                    // a failed navigation should not stop the router from processing\n                    // further navigations => the catch\n                    return nav.promise.catch(function () { });\n                }\n                else {\n                    return rxjs.of(null);\n                }\n            }))\n                .subscribe(function () { });\n        };\n        Router.prototype.scheduleNavigation = function (rawUrl, source, state, extras) {\n            var lastNavigation = this.navigations.value;\n            // If the user triggers a navigation imperatively (e.g., by using navigateByUrl),\n            // and that navigation results in 'replaceState' that leads to the same URL,\n            // we should skip those.\n            if (lastNavigation && source !== 'imperative' && lastNavigation.source === 'imperative' &&\n                lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n                return Promise.resolve(true); // return value is not used\n            }\n            // Because of a bug in IE and Edge, the location class fires two events (popstate and\n            // hashchange) every single time. The second one should be ignored. Otherwise, the URL will\n            // flicker. Handles the case when a popstate was emitted first.\n            if (lastNavigation && source == 'hashchange' && lastNavigation.source === 'popstate' &&\n                lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n                return Promise.resolve(true); // return value is not used\n            }\n            // Because of a bug in IE and Edge, the location class fires two events (popstate and\n            // hashchange) every single time. The second one should be ignored. Otherwise, the URL will\n            // flicker. Handles the case when a hashchange was emitted first.\n            if (lastNavigation && source == 'popstate' && lastNavigation.source === 'hashchange' &&\n                lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n                return Promise.resolve(true); // return value is not used\n            }\n            var resolve = null;\n            var reject = null;\n            var promise = new Promise(function (res, rej) {\n                resolve = res;\n                reject = rej;\n            });\n            var id = ++this.navigationId;\n            this.navigations.next({ id: id, source: source, state: state, rawUrl: rawUrl, extras: extras, resolve: resolve, reject: reject, promise: promise });\n            // Make sure that the error is propagated even though `processNavigations` catch\n            // handler does not rethrow\n            return promise.catch(function (e) { return Promise.reject(e); });\n        };\n        Router.prototype.executeScheduledNavigation = function (_a) {\n            var _this = this;\n            var id = _a.id, rawUrl = _a.rawUrl, extras = _a.extras, resolve = _a.resolve, reject = _a.reject, source = _a.source, state = _a.state;\n            var url = this.urlHandlingStrategy.extract(rawUrl);\n            var urlTransition = !this.navigated || url.toString() !== this.currentUrlTree.toString();\n            if ((this.onSameUrlNavigation === 'reload' ? true : urlTransition) &&\n                this.urlHandlingStrategy.shouldProcessUrl(rawUrl)) {\n                if (this.urlUpdateStrategy === 'eager' && !extras.skipLocationChange) {\n                    this.setBrowserUrl(rawUrl, !!extras.replaceUrl, id);\n                }\n                this.events\n                    .next(new NavigationStart(id, this.serializeUrl(url), source, state));\n                Promise.resolve()\n                    .then(function (_) { return _this.runNavigate(url, rawUrl, !!extras.skipLocationChange, !!extras.replaceUrl, id, null); })\n                    .then(resolve, reject);\n                // we cannot process the current URL, but we could process the previous one =>\n                // we need to do some cleanup\n            }\n            else if (urlTransition && this.rawUrlTree &&\n                this.urlHandlingStrategy.shouldProcessUrl(this.rawUrlTree)) {\n                this.events\n                    .next(new NavigationStart(id, this.serializeUrl(url), source, state));\n                Promise.resolve()\n                    .then(function (_) { return _this.runNavigate(url, rawUrl, false, false, id, createEmptyState(url, _this.rootComponentType).snapshot); })\n                    .then(resolve, reject);\n            }\n            else {\n                this.rawUrlTree = rawUrl;\n                resolve(null);\n            }\n        };\n        Router.prototype.runNavigate = function (url, rawUrl, skipLocationChange, replaceUrl, id, precreatedState) {\n            var _this = this;\n            if (id !== this.navigationId) {\n                this.events\n                    .next(new NavigationCancel(id, this.serializeUrl(url), \"Navigation ID \" + id + \" is not equal to the current navigation id \" + this.navigationId));\n                return Promise.resolve(false);\n            }\n            return new Promise(function (resolvePromise, rejectPromise) {\n                // create an observable of the url and route state snapshot\n                // this operation do not result in any side effects\n                var urlAndSnapshot$;\n                if (!precreatedState) {\n                    var moduleInjector = _this.ngModule.injector;\n                    var redirectsApplied$ = applyRedirects(moduleInjector, _this.configLoader, _this.urlSerializer, url, _this.config);\n                    urlAndSnapshot$ = redirectsApplied$.pipe(operators.mergeMap(function (appliedUrl) {\n                        return recognize(_this.rootComponentType, _this.config, appliedUrl, _this.serializeUrl(appliedUrl), _this.paramsInheritanceStrategy, _this.relativeLinkResolution)\n                            .pipe(operators.map(function (snapshot) {\n                            _this.events\n                                .next(new RoutesRecognized(id, _this.serializeUrl(url), _this.serializeUrl(appliedUrl), snapshot));\n                            return { appliedUrl: appliedUrl, snapshot: snapshot };\n                        }));\n                    }));\n                }\n                else {\n                    urlAndSnapshot$ = rxjs.of({ appliedUrl: url, snapshot: precreatedState });\n                }\n                var beforePreactivationDone$ = urlAndSnapshot$.pipe(operators.mergeMap(function (p) {\n                    if (typeof p === 'boolean')\n                        return rxjs.of(p);\n                    return _this.hooks\n                        .beforePreactivation(p.snapshot, {\n                        navigationId: id,\n                        appliedUrlTree: url,\n                        rawUrlTree: rawUrl, skipLocationChange: skipLocationChange, replaceUrl: replaceUrl,\n                    })\n                        .pipe(operators.map(function () { return p; }));\n                }));\n                // run preactivation: guards and data resolvers\n                var preActivation;\n                var preactivationSetup$ = beforePreactivationDone$.pipe(operators.map(function (p) {\n                    if (typeof p === 'boolean')\n                        return p;\n                    var appliedUrl = p.appliedUrl, snapshot = p.snapshot;\n                    var moduleInjector = _this.ngModule.injector;\n                    preActivation = new PreActivation(snapshot, _this.routerState.snapshot, moduleInjector, function (evt) { return _this.triggerEvent(evt); });\n                    preActivation.initialize(_this.rootContexts);\n                    return { appliedUrl: appliedUrl, snapshot: snapshot };\n                }));\n                var preactivationCheckGuards$ = preactivationSetup$.pipe(operators.mergeMap(function (p) {\n                    if (typeof p === 'boolean' || _this.navigationId !== id)\n                        return rxjs.of(false);\n                    var appliedUrl = p.appliedUrl, snapshot = p.snapshot;\n                    _this.triggerEvent(new GuardsCheckStart(id, _this.serializeUrl(url), _this.serializeUrl(appliedUrl), snapshot));\n                    return preActivation.checkGuards().pipe(operators.map(function (shouldActivate) {\n                        _this.triggerEvent(new GuardsCheckEnd(id, _this.serializeUrl(url), _this.serializeUrl(appliedUrl), snapshot, shouldActivate));\n                        return { appliedUrl: appliedUrl, snapshot: snapshot, shouldActivate: shouldActivate };\n                    }));\n                }));\n                var preactivationResolveData$ = preactivationCheckGuards$.pipe(operators.mergeMap(function (p) {\n                    if (typeof p === 'boolean' || _this.navigationId !== id)\n                        return rxjs.of(false);\n                    if (p.shouldActivate && preActivation.isActivating()) {\n                        _this.triggerEvent(new ResolveStart(id, _this.serializeUrl(url), _this.serializeUrl(p.appliedUrl), p.snapshot));\n                        return preActivation.resolveData(_this.paramsInheritanceStrategy).pipe(operators.map(function () {\n                            _this.triggerEvent(new ResolveEnd(id, _this.serializeUrl(url), _this.serializeUrl(p.appliedUrl), p.snapshot));\n                            return p;\n                        }));\n                    }\n                    else {\n                        return rxjs.of(p);\n                    }\n                }));\n                var preactivationDone$ = preactivationResolveData$.pipe(operators.mergeMap(function (p) {\n                    if (typeof p === 'boolean' || _this.navigationId !== id)\n                        return rxjs.of(false);\n                    return _this.hooks\n                        .afterPreactivation(p.snapshot, {\n                        navigationId: id,\n                        appliedUrlTree: url,\n                        rawUrlTree: rawUrl, skipLocationChange: skipLocationChange, replaceUrl: replaceUrl,\n                    })\n                        .pipe(operators.map(function () { return p; }));\n                }));\n                // create router state\n                // this operation has side effects => route state is being affected\n                var routerState$ = preactivationDone$.pipe(operators.map(function (p) {\n                    if (typeof p === 'boolean' || _this.navigationId !== id)\n                        return false;\n                    var appliedUrl = p.appliedUrl, snapshot = p.snapshot, shouldActivate = p.shouldActivate;\n                    if (shouldActivate) {\n                        var state = createRouterState(_this.routeReuseStrategy, snapshot, _this.routerState);\n                        return { appliedUrl: appliedUrl, state: state, shouldActivate: shouldActivate };\n                    }\n                    else {\n                        return { appliedUrl: appliedUrl, state: null, shouldActivate: shouldActivate };\n                    }\n                }));\n                _this.activateRoutes(routerState$, _this.routerState, _this.currentUrlTree, id, url, rawUrl, skipLocationChange, replaceUrl, resolvePromise, rejectPromise);\n            });\n        };\n        /**\n         * Performs the logic of activating routes. This is a synchronous process by default. While this\n         * is a private method, it could be overridden to make activation asynchronous.\n         */\n        Router.prototype.activateRoutes = function (state, storedState, storedUrl, id, url, rawUrl, skipLocationChange, replaceUrl, resolvePromise, rejectPromise) {\n            var _this = this;\n            // applied the new router state\n            // this operation has side effects\n            var navigationIsSuccessful;\n            state\n                .forEach(function (p) {\n                if (typeof p === 'boolean' || !p.shouldActivate || id !== _this.navigationId || !p.state) {\n                    navigationIsSuccessful = false;\n                    return;\n                }\n                var appliedUrl = p.appliedUrl, state = p.state;\n                _this.currentUrlTree = appliedUrl;\n                _this.rawUrlTree = _this.urlHandlingStrategy.merge(_this.currentUrlTree, rawUrl);\n                _this.routerState = state;\n                if (_this.urlUpdateStrategy === 'deferred' && !skipLocationChange) {\n                    _this.setBrowserUrl(_this.rawUrlTree, replaceUrl, id);\n                }\n                new ActivateRoutes(_this.routeReuseStrategy, state, storedState, function (evt) { return _this.triggerEvent(evt); })\n                    .activate(_this.rootContexts);\n                navigationIsSuccessful = true;\n            })\n                .then(function () {\n                if (navigationIsSuccessful) {\n                    _this.navigated = true;\n                    _this.lastSuccessfulId = id;\n                    _this.events\n                        .next(new NavigationEnd(id, _this.serializeUrl(url), _this.serializeUrl(_this.currentUrlTree)));\n                    resolvePromise(true);\n                }\n                else {\n                    _this.resetUrlToCurrentUrlTree();\n                    _this.events\n                        .next(new NavigationCancel(id, _this.serializeUrl(url), ''));\n                    resolvePromise(false);\n                }\n            }, function (e) {\n                if (isNavigationCancelingError(e)) {\n                    _this.navigated = true;\n                    _this.resetStateAndUrl(storedState, storedUrl, rawUrl);\n                    _this.events\n                        .next(new NavigationCancel(id, _this.serializeUrl(url), e.message));\n                    resolvePromise(false);\n                }\n                else {\n                    _this.resetStateAndUrl(storedState, storedUrl, rawUrl);\n                    _this.events\n                        .next(new NavigationError(id, _this.serializeUrl(url), e));\n                    try {\n                        resolvePromise(_this.errorHandler(e));\n                    }\n                    catch (ee) {\n                        rejectPromise(ee);\n                    }\n                }\n            });\n        };\n        Router.prototype.setBrowserUrl = function (url, replaceUrl, id) {\n            var path = this.urlSerializer.serialize(url);\n            if (this.location.isCurrentPathEqualTo(path) || replaceUrl) {\n                this.location.replaceState(path, '', { navigationId: id });\n            }\n            else {\n                this.location.go(path, '', { navigationId: id });\n            }\n        };\n        Router.prototype.resetStateAndUrl = function (storedState, storedUrl, rawUrl) {\n            this.routerState = storedState;\n            this.currentUrlTree = storedUrl;\n            this.rawUrlTree = this.urlHandlingStrategy.merge(this.currentUrlTree, rawUrl);\n            this.resetUrlToCurrentUrlTree();\n        };\n        Router.prototype.resetUrlToCurrentUrlTree = function () {\n            this.location.replaceState(this.urlSerializer.serialize(this.rawUrlTree), '', { navigationId: this.lastSuccessfulId });\n        };\n        return Router;\n    }());\n    var ActivateRoutes = /** @class */ (function () {\n        function ActivateRoutes(routeReuseStrategy, futureState, currState, forwardEvent) {\n            this.routeReuseStrategy = routeReuseStrategy;\n            this.futureState = futureState;\n            this.currState = currState;\n            this.forwardEvent = forwardEvent;\n        }\n        ActivateRoutes.prototype.activate = function (parentContexts) {\n            var futureRoot = this.futureState._root;\n            var currRoot = this.currState ? this.currState._root : null;\n            this.deactivateChildRoutes(futureRoot, currRoot, parentContexts);\n            advanceActivatedRoute(this.futureState.root);\n            this.activateChildRoutes(futureRoot, currRoot, parentContexts);\n        };\n        // De-activate the child route that are not re-used for the future state\n        ActivateRoutes.prototype.deactivateChildRoutes = function (futureNode, currNode, contexts) {\n            var _this = this;\n            var children = nodeChildrenAsMap(currNode);\n            // Recurse on the routes active in the future state to de-activate deeper children\n            futureNode.children.forEach(function (futureChild) {\n                var childOutletName = futureChild.value.outlet;\n                _this.deactivateRoutes(futureChild, children[childOutletName], contexts);\n                delete children[childOutletName];\n            });\n            // De-activate the routes that will not be re-used\n            forEach(children, function (v, childName) {\n                _this.deactivateRouteAndItsChildren(v, contexts);\n            });\n        };\n        ActivateRoutes.prototype.deactivateRoutes = function (futureNode, currNode, parentContext) {\n            var future = futureNode.value;\n            var curr = currNode ? currNode.value : null;\n            if (future === curr) {\n                // Reusing the node, check to see if the children need to be de-activated\n                if (future.component) {\n                    // If we have a normal route, we need to go through an outlet.\n                    var context = parentContext.getContext(future.outlet);\n                    if (context) {\n                        this.deactivateChildRoutes(futureNode, currNode, context.children);\n                    }\n                }\n                else {\n                    // if we have a componentless route, we recurse but keep the same outlet map.\n                    this.deactivateChildRoutes(futureNode, currNode, parentContext);\n                }\n            }\n            else {\n                if (curr) {\n                    // Deactivate the current route which will not be re-used\n                    this.deactivateRouteAndItsChildren(currNode, parentContext);\n                }\n            }\n        };\n        ActivateRoutes.prototype.deactivateRouteAndItsChildren = function (route, parentContexts) {\n            if (this.routeReuseStrategy.shouldDetach(route.value.snapshot)) {\n                this.detachAndStoreRouteSubtree(route, parentContexts);\n            }\n            else {\n                this.deactivateRouteAndOutlet(route, parentContexts);\n            }\n        };\n        ActivateRoutes.prototype.detachAndStoreRouteSubtree = function (route, parentContexts) {\n            var context = parentContexts.getContext(route.value.outlet);\n            if (context && context.outlet) {\n                var componentRef = context.outlet.detach();\n                var contexts = context.children.onOutletDeactivated();\n                this.routeReuseStrategy.store(route.value.snapshot, { componentRef: componentRef, route: route, contexts: contexts });\n            }\n        };\n        ActivateRoutes.prototype.deactivateRouteAndOutlet = function (route, parentContexts) {\n            var _this = this;\n            var context = parentContexts.getContext(route.value.outlet);\n            if (context) {\n                var children = nodeChildrenAsMap(route);\n                var contexts_1 = route.value.component ? context.children : parentContexts;\n                forEach(children, function (v, k) { return _this.deactivateRouteAndItsChildren(v, contexts_1); });\n                if (context.outlet) {\n                    // Destroy the component\n                    context.outlet.deactivate();\n                    // Destroy the contexts for all the outlets that were in the component\n                    context.children.onOutletDeactivated();\n                }\n            }\n        };\n        ActivateRoutes.prototype.activateChildRoutes = function (futureNode, currNode, contexts) {\n            var _this = this;\n            var children = nodeChildrenAsMap(currNode);\n            futureNode.children.forEach(function (c) {\n                _this.activateRoutes(c, children[c.value.outlet], contexts);\n                _this.forwardEvent(new ActivationEnd(c.value.snapshot));\n            });\n            if (futureNode.children.length) {\n                this.forwardEvent(new ChildActivationEnd(futureNode.value.snapshot));\n            }\n        };\n        ActivateRoutes.prototype.activateRoutes = function (futureNode, currNode, parentContexts) {\n            var future = futureNode.value;\n            var curr = currNode ? currNode.value : null;\n            advanceActivatedRoute(future);\n            // reusing the node\n            if (future === curr) {\n                if (future.component) {\n                    // If we have a normal route, we need to go through an outlet.\n                    var context = parentContexts.getOrCreateContext(future.outlet);\n                    this.activateChildRoutes(futureNode, currNode, context.children);\n                }\n                else {\n                    // if we have a componentless route, we recurse but keep the same outlet map.\n                    this.activateChildRoutes(futureNode, currNode, parentContexts);\n                }\n            }\n            else {\n                if (future.component) {\n                    // if we have a normal route, we need to place the component into the outlet and recurse.\n                    var context = parentContexts.getOrCreateContext(future.outlet);\n                    if (this.routeReuseStrategy.shouldAttach(future.snapshot)) {\n                        var stored = this.routeReuseStrategy.retrieve(future.snapshot);\n                        this.routeReuseStrategy.store(future.snapshot, null);\n                        context.children.onOutletReAttached(stored.contexts);\n                        context.attachRef = stored.componentRef;\n                        context.route = stored.route.value;\n                        if (context.outlet) {\n                            // Attach right away when the outlet has already been instantiated\n                            // Otherwise attach from `RouterOutlet.ngOnInit` when it is instantiated\n                            context.outlet.attach(stored.componentRef, stored.route.value);\n                        }\n                        advanceActivatedRouteNodeAndItsChildren(stored.route);\n                    }\n                    else {\n                        var config = parentLoadedConfig(future.snapshot);\n                        var cmpFactoryResolver = config ? config.module.componentFactoryResolver : null;\n                        context.route = future;\n                        context.resolver = cmpFactoryResolver;\n                        if (context.outlet) {\n                            // Activate the outlet when it has already been instantiated\n                            // Otherwise it will get activated from its `ngOnInit` when instantiated\n                            context.outlet.activateWith(future, cmpFactoryResolver);\n                        }\n                        this.activateChildRoutes(futureNode, null, context.children);\n                    }\n                }\n                else {\n                    // if we have a componentless route, we recurse but keep the same outlet map.\n                    this.activateChildRoutes(futureNode, null, parentContexts);\n                }\n            }\n        };\n        return ActivateRoutes;\n    }());\n    function advanceActivatedRouteNodeAndItsChildren(node) {\n        advanceActivatedRoute(node.value);\n        node.children.forEach(advanceActivatedRouteNodeAndItsChildren);\n    }\n    function parentLoadedConfig(snapshot) {\n        for (var s = snapshot.parent; s; s = s.parent) {\n            var route = s.routeConfig;\n            if (route && route._loadedConfig)\n                return route._loadedConfig;\n            if (route && route.component)\n                return null;\n        }\n        return null;\n    }\n    function validateCommands(commands) {\n        for (var i = 0; i < commands.length; i++) {\n            var cmd = commands[i];\n            if (cmd == null) {\n                throw new Error(\"The requested path contains \" + cmd + \" segment at index \" + i);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Lets you link to specific routes in your app.\n     *\n     * Consider the following route configuration:\n     * `[{ path: 'user/:name', component: UserCmp }]`.\n     * When linking to this `user/:name` route, you use the `RouterLink` directive.\n     *\n     * If the link is static, you can use the directive as follows:\n     * `<a routerLink=\"/user/bob\">link to user component</a>`\n     *\n     * If you use dynamic values to generate the link, you can pass an array of path\n     * segments, followed by the params for each segment.\n     *\n     * For instance `['/team', teamId, 'user', userName, {details: true}]`\n     * means that we want to generate a link to `/team/11/user/bob;details=true`.\n     *\n     * Multiple static segments can be merged into one\n     * (e.g., `['/team/11/user', userName, {details: true}]`).\n     *\n     * The first segment name can be prepended with `/`, `./`, or `../`:\n     * * If the first segment begins with `/`, the router will look up the route from the root of the\n     *   app.\n     * * If the first segment begins with `./`, or doesn't begin with a slash, the router will\n     *   instead look in the children of the current activated route.\n     * * And if the first segment begins with `../`, the router will go up one level.\n     *\n     * You can set query params and fragment as follows:\n     *\n     * ```\n     * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" fragment=\"education\">\n     *   link to user component\n     * </a>\n     * ```\n     * RouterLink will use these to generate this link: `/user/bob#education?debug=true`.\n     *\n     * (Deprecated in v4.0.0 use `queryParamsHandling` instead) You can also tell the\n     * directive to preserve the current query params and fragment:\n     *\n     * ```\n     * <a [routerLink]=\"['/user/bob']\" preserveQueryParams preserveFragment>\n     *   link to user component\n     * </a>\n     * ```\n     *\n     * You can tell the directive to how to handle queryParams, available options are:\n     *  - `'merge'`: merge the queryParams into the current queryParams\n     *  - `'preserve'`: preserve the current queryParams\n     *  - default/`''`: use the queryParams only\n     *\n     * Same options for {@link NavigationExtras#queryParamsHandling\n     * NavigationExtras#queryParamsHandling}.\n     *\n     * ```\n     * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" queryParamsHandling=\"merge\">\n     *   link to user component\n     * </a>\n     * ```\n     *\n     * The router link directive always treats the provided input as a delta to the current url.\n     *\n     * For instance, if the current url is `/user/(box//aux:team)`.\n     *\n     * Then the following link `<a [routerLink]=\"['/user/jim']\">Jim</a>` will generate the link\n     * `/user/(jim//aux:team)`.\n     *\n     * See {@link Router#createUrlTree createUrlTree} for more information.\n     *\n     * @ngModule RouterModule\n     *\n     *\n     */\n    var RouterLink = /** @class */ (function () {\n        function RouterLink(router, route, tabIndex, renderer, el) {\n            this.router = router;\n            this.route = route;\n            this.commands = [];\n            if (tabIndex == null) {\n                renderer.setAttribute(el.nativeElement, 'tabindex', '0');\n            }\n        }\n        Object.defineProperty(RouterLink.prototype, \"routerLink\", {\n            set: function (commands) {\n                if (commands != null) {\n                    this.commands = Array.isArray(commands) ? commands : [commands];\n                }\n                else {\n                    this.commands = [];\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(RouterLink.prototype, \"preserveQueryParams\", {\n            /**\n             * @deprecated 4.0.0 use `queryParamsHandling` instead.\n             */\n            set: function (value) {\n                if (core.isDevMode() && console && console.warn) {\n                    console.warn('preserveQueryParams is deprecated!, use queryParamsHandling instead.');\n                }\n                this.preserve = value;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        RouterLink.prototype.onClick = function () {\n            var extras = {\n                skipLocationChange: attrBoolValue(this.skipLocationChange),\n                replaceUrl: attrBoolValue(this.replaceUrl),\n            };\n            this.router.navigateByUrl(this.urlTree, extras);\n            return true;\n        };\n        Object.defineProperty(RouterLink.prototype, \"urlTree\", {\n            get: function () {\n                return this.router.createUrlTree(this.commands, {\n                    relativeTo: this.route,\n                    queryParams: this.queryParams,\n                    fragment: this.fragment,\n                    preserveQueryParams: attrBoolValue(this.preserve),\n                    queryParamsHandling: this.queryParamsHandling,\n                    preserveFragment: attrBoolValue(this.preserveFragment),\n                });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        RouterLink.decorators = [\n            { type: core.Directive, args: [{ selector: ':not(a)[routerLink]' },] }\n        ];\n        /** @nocollapse */\n        RouterLink.ctorParameters = function () { return [\n            { type: Router },\n            { type: ActivatedRoute },\n            { type: String, decorators: [{ type: core.Attribute, args: ['tabindex',] }] },\n            { type: core.Renderer2 },\n            { type: core.ElementRef }\n        ]; };\n        RouterLink.propDecorators = {\n            queryParams: [{ type: core.Input }],\n            fragment: [{ type: core.Input }],\n            queryParamsHandling: [{ type: core.Input }],\n            preserveFragment: [{ type: core.Input }],\n            skipLocationChange: [{ type: core.Input }],\n            replaceUrl: [{ type: core.Input }],\n            routerLink: [{ type: core.Input }],\n            preserveQueryParams: [{ type: core.Input }],\n            onClick: [{ type: core.HostListener, args: ['click',] }]\n        };\n        return RouterLink;\n    }());\n    /**\n     * @description\n     *\n     * Lets you link to specific routes in your app.\n     *\n     * See `RouterLink` for more information.\n     *\n     * @ngModule RouterModule\n     *\n     *\n     */\n    var RouterLinkWithHref = /** @class */ (function () {\n        function RouterLinkWithHref(router, route, locationStrategy) {\n            var _this = this;\n            this.router = router;\n            this.route = route;\n            this.locationStrategy = locationStrategy;\n            this.commands = [];\n            this.subscription = router.events.subscribe(function (s) {\n                if (s instanceof NavigationEnd) {\n                    _this.updateTargetUrlAndHref();\n                }\n            });\n        }\n        Object.defineProperty(RouterLinkWithHref.prototype, \"routerLink\", {\n            set: function (commands) {\n                if (commands != null) {\n                    this.commands = Array.isArray(commands) ? commands : [commands];\n                }\n                else {\n                    this.commands = [];\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(RouterLinkWithHref.prototype, \"preserveQueryParams\", {\n            set: function (value) {\n                if (core.isDevMode() && console && console.warn) {\n                    console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n                }\n                this.preserve = value;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        RouterLinkWithHref.prototype.ngOnChanges = function (changes) { this.updateTargetUrlAndHref(); };\n        RouterLinkWithHref.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n        RouterLinkWithHref.prototype.onClick = function (button, ctrlKey, metaKey, shiftKey) {\n            if (button !== 0 || ctrlKey || metaKey || shiftKey) {\n                return true;\n            }\n            if (typeof this.target === 'string' && this.target != '_self') {\n                return true;\n            }\n            var extras = {\n                skipLocationChange: attrBoolValue(this.skipLocationChange),\n                replaceUrl: attrBoolValue(this.replaceUrl),\n            };\n            this.router.navigateByUrl(this.urlTree, extras);\n            return false;\n        };\n        RouterLinkWithHref.prototype.updateTargetUrlAndHref = function () {\n            this.href = this.locationStrategy.prepareExternalUrl(this.router.serializeUrl(this.urlTree));\n        };\n        Object.defineProperty(RouterLinkWithHref.prototype, \"urlTree\", {\n            get: function () {\n                return this.router.createUrlTree(this.commands, {\n                    relativeTo: this.route,\n                    queryParams: this.queryParams,\n                    fragment: this.fragment,\n                    preserveQueryParams: attrBoolValue(this.preserve),\n                    queryParamsHandling: this.queryParamsHandling,\n                    preserveFragment: attrBoolValue(this.preserveFragment),\n                });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        RouterLinkWithHref.decorators = [\n            { type: core.Directive, args: [{ selector: 'a[routerLink]' },] }\n        ];\n        /** @nocollapse */\n        RouterLinkWithHref.ctorParameters = function () { return [\n            { type: Router },\n            { type: ActivatedRoute },\n            { type: common.LocationStrategy }\n        ]; };\n        RouterLinkWithHref.propDecorators = {\n            target: [{ type: core.HostBinding, args: ['attr.target',] }, { type: core.Input }],\n            queryParams: [{ type: core.Input }],\n            fragment: [{ type: core.Input }],\n            queryParamsHandling: [{ type: core.Input }],\n            preserveFragment: [{ type: core.Input }],\n            skipLocationChange: [{ type: core.Input }],\n            replaceUrl: [{ type: core.Input }],\n            href: [{ type: core.HostBinding }],\n            routerLink: [{ type: core.Input }],\n            preserveQueryParams: [{ type: core.Input }],\n            onClick: [{ type: core.HostListener, args: ['click', ['$event.button', '$event.ctrlKey', '$event.metaKey', '$event.shiftKey'],] }]\n        };\n        return RouterLinkWithHref;\n    }());\n    function attrBoolValue(s) {\n        return s === '' || !!s;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * @description\n     *\n     * Lets you add a CSS class to an element when the link's route becomes active.\n     *\n     * This directive lets you add a CSS class to an element when the link's route\n     * becomes active.\n     *\n     * Consider the following example:\n     *\n     * ```\n     * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\">Bob</a>\n     * ```\n     *\n     * When the url is either '/user' or '/user/bob', the active-link class will\n     * be added to the `a` tag. If the url changes, the class will be removed.\n     *\n     * You can set more than one class, as follows:\n     *\n     * ```\n     * <a routerLink=\"/user/bob\" routerLinkActive=\"class1 class2\">Bob</a>\n     * <a routerLink=\"/user/bob\" [routerLinkActive]=\"['class1', 'class2']\">Bob</a>\n     * ```\n     *\n     * You can configure RouterLinkActive by passing `exact: true`. This will add the classes\n     * only when the url matches the link exactly.\n     *\n     * ```\n     * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact:\n     * true}\">Bob</a>\n     * ```\n     *\n     * You can assign the RouterLinkActive instance to a template variable and directly check\n     * the `isActive` status.\n     * ```\n     * <a routerLink=\"/user/bob\" routerLinkActive #rla=\"routerLinkActive\">\n     *   Bob {{ rla.isActive ? '(already open)' : ''}}\n     * </a>\n     * ```\n     *\n     * Finally, you can apply the RouterLinkActive directive to an ancestor of a RouterLink.\n     *\n     * ```\n     * <div routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact: true}\">\n     *   <a routerLink=\"/user/jim\">Jim</a>\n     *   <a routerLink=\"/user/bob\">Bob</a>\n     * </div>\n     * ```\n     *\n     * This will set the active-link class on the div tag if the url is either '/user/jim' or\n     * '/user/bob'.\n     *\n     * @ngModule RouterModule\n     *\n     *\n     */\n    var RouterLinkActive = /** @class */ (function () {\n        function RouterLinkActive(router, element, renderer, cdr) {\n            var _this = this;\n            this.router = router;\n            this.element = element;\n            this.renderer = renderer;\n            this.cdr = cdr;\n            this.classes = [];\n            this.isActive = false;\n            this.routerLinkActiveOptions = { exact: false };\n            this.subscription = router.events.subscribe(function (s) {\n                if (s instanceof NavigationEnd) {\n                    _this.update();\n                }\n            });\n        }\n        RouterLinkActive.prototype.ngAfterContentInit = function () {\n            var _this = this;\n            this.links.changes.subscribe(function (_) { return _this.update(); });\n            this.linksWithHrefs.changes.subscribe(function (_) { return _this.update(); });\n            this.update();\n        };\n        Object.defineProperty(RouterLinkActive.prototype, \"routerLinkActive\", {\n            set: function (data) {\n                var classes = Array.isArray(data) ? data : data.split(' ');\n                this.classes = classes.filter(function (c) { return !!c; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        RouterLinkActive.prototype.ngOnChanges = function (changes) { this.update(); };\n        RouterLinkActive.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n        RouterLinkActive.prototype.update = function () {\n            var _this = this;\n            if (!this.links || !this.linksWithHrefs || !this.router.navigated)\n                return;\n            Promise.resolve().then(function () {\n                var hasActiveLinks = _this.hasActiveLinks();\n                if (_this.isActive !== hasActiveLinks) {\n                    _this.isActive = hasActiveLinks;\n                    _this.classes.forEach(function (c) {\n                        if (hasActiveLinks) {\n                            _this.renderer.addClass(_this.element.nativeElement, c);\n                        }\n                        else {\n                            _this.renderer.removeClass(_this.element.nativeElement, c);\n                        }\n                    });\n                }\n            });\n        };\n        RouterLinkActive.prototype.isLinkActive = function (router) {\n            var _this = this;\n            return function (link) {\n                return router.isActive(link.urlTree, _this.routerLinkActiveOptions.exact);\n            };\n        };\n        RouterLinkActive.prototype.hasActiveLinks = function () {\n            return this.links.some(this.isLinkActive(this.router)) ||\n                this.linksWithHrefs.some(this.isLinkActive(this.router));\n        };\n        RouterLinkActive.decorators = [\n            { type: core.Directive, args: [{\n                        selector: '[routerLinkActive]',\n                        exportAs: 'routerLinkActive',\n                    },] }\n        ];\n        /** @nocollapse */\n        RouterLinkActive.ctorParameters = function () { return [\n            { type: Router },\n            { type: core.ElementRef },\n            { type: core.Renderer2 },\n            { type: core.ChangeDetectorRef }\n        ]; };\n        RouterLinkActive.propDecorators = {\n            links: [{ type: core.ContentChildren, args: [RouterLink, { descendants: true },] }],\n            linksWithHrefs: [{ type: core.ContentChildren, args: [RouterLinkWithHref, { descendants: true },] }],\n            routerLinkActiveOptions: [{ type: core.Input }],\n            routerLinkActive: [{ type: core.Input }]\n        };\n        return RouterLinkActive;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Store contextual information about a `RouterOutlet`\n     *\n     *\n     */\n    var OutletContext = /** @class */ (function () {\n        function OutletContext() {\n            this.outlet = null;\n            this.route = null;\n            this.resolver = null;\n            this.children = new ChildrenOutletContexts();\n            this.attachRef = null;\n        }\n        return OutletContext;\n    }());\n    /**\n     * Store contextual information about the children (= nested) `RouterOutlet`\n     *\n     *\n     */\n    var ChildrenOutletContexts = /** @class */ (function () {\n        function ChildrenOutletContexts() {\n            // contexts for child outlets, by name.\n            this.contexts = new Map();\n        }\n        /** Called when a `RouterOutlet` directive is instantiated */\n        ChildrenOutletContexts.prototype.onChildOutletCreated = function (childName, outlet) {\n            var context = this.getOrCreateContext(childName);\n            context.outlet = outlet;\n            this.contexts.set(childName, context);\n        };\n        /**\n         * Called when a `RouterOutlet` directive is destroyed.\n         * We need to keep the context as the outlet could be destroyed inside a NgIf and might be\n         * re-created later.\n         */\n        ChildrenOutletContexts.prototype.onChildOutletDestroyed = function (childName) {\n            var context = this.getContext(childName);\n            if (context) {\n                context.outlet = null;\n            }\n        };\n        /**\n         * Called when the corresponding route is deactivated during navigation.\n         * Because the component get destroyed, all children outlet are destroyed.\n         */\n        ChildrenOutletContexts.prototype.onOutletDeactivated = function () {\n            var contexts = this.contexts;\n            this.contexts = new Map();\n            return contexts;\n        };\n        ChildrenOutletContexts.prototype.onOutletReAttached = function (contexts) { this.contexts = contexts; };\n        ChildrenOutletContexts.prototype.getOrCreateContext = function (childName) {\n            var context = this.getContext(childName);\n            if (!context) {\n                context = new OutletContext();\n                this.contexts.set(childName, context);\n            }\n            return context;\n        };\n        ChildrenOutletContexts.prototype.getContext = function (childName) { return this.contexts.get(childName) || null; };\n        return ChildrenOutletContexts;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Acts as a placeholder that Angular dynamically fills based on the current router state.\n     *\n     * ```\n     * <router-outlet></router-outlet>\n     * <router-outlet name='left'></router-outlet>\n     * <router-outlet name='right'></router-outlet>\n     * ```\n     *\n     * A router outlet will emit an activate event any time a new component is being instantiated,\n     * and a deactivate event when it is being destroyed.\n     *\n     * ```\n     * <router-outlet\n     *   (activate)='onActivate($event)'\n     *   (deactivate)='onDeactivate($event)'></router-outlet>\n     * ```\n     * @ngModule RouterModule\n     *\n     *\n     */\n    var RouterOutlet = /** @class */ (function () {\n        function RouterOutlet(parentContexts, location, resolver, name, changeDetector) {\n            this.parentContexts = parentContexts;\n            this.location = location;\n            this.resolver = resolver;\n            this.changeDetector = changeDetector;\n            this.activated = null;\n            this._activatedRoute = null;\n            this.activateEvents = new core.EventEmitter();\n            this.deactivateEvents = new core.EventEmitter();\n            this.name = name || PRIMARY_OUTLET;\n            parentContexts.onChildOutletCreated(this.name, this);\n        }\n        RouterOutlet.prototype.ngOnDestroy = function () { this.parentContexts.onChildOutletDestroyed(this.name); };\n        RouterOutlet.prototype.ngOnInit = function () {\n            if (!this.activated) {\n                // If the outlet was not instantiated at the time the route got activated we need to populate\n                // the outlet when it is initialized (ie inside a NgIf)\n                var context = this.parentContexts.getContext(this.name);\n                if (context && context.route) {\n                    if (context.attachRef) {\n                        // `attachRef` is populated when there is an existing component to mount\n                        this.attach(context.attachRef, context.route);\n                    }\n                    else {\n                        // otherwise the component defined in the configuration is created\n                        this.activateWith(context.route, context.resolver || null);\n                    }\n                }\n            }\n        };\n        Object.defineProperty(RouterOutlet.prototype, \"isActivated\", {\n            get: function () { return !!this.activated; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(RouterOutlet.prototype, \"component\", {\n            get: function () {\n                if (!this.activated)\n                    throw new Error('Outlet is not activated');\n                return this.activated.instance;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(RouterOutlet.prototype, \"activatedRoute\", {\n            get: function () {\n                if (!this.activated)\n                    throw new Error('Outlet is not activated');\n                return this._activatedRoute;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(RouterOutlet.prototype, \"activatedRouteData\", {\n            get: function () {\n                if (this._activatedRoute) {\n                    return this._activatedRoute.snapshot.data;\n                }\n                return {};\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Called when the `RouteReuseStrategy` instructs to detach the subtree\n         */\n        RouterOutlet.prototype.detach = function () {\n            if (!this.activated)\n                throw new Error('Outlet is not activated');\n            this.location.detach();\n            var cmp = this.activated;\n            this.activated = null;\n            this._activatedRoute = null;\n            return cmp;\n        };\n        /**\n         * Called when the `RouteReuseStrategy` instructs to re-attach a previously detached subtree\n         */\n        RouterOutlet.prototype.attach = function (ref, activatedRoute) {\n            this.activated = ref;\n            this._activatedRoute = activatedRoute;\n            this.location.insert(ref.hostView);\n        };\n        RouterOutlet.prototype.deactivate = function () {\n            if (this.activated) {\n                var c = this.component;\n                this.activated.destroy();\n                this.activated = null;\n                this._activatedRoute = null;\n                this.deactivateEvents.emit(c);\n            }\n        };\n        RouterOutlet.prototype.activateWith = function (activatedRoute, resolver) {\n            if (this.isActivated) {\n                throw new Error('Cannot activate an already activated outlet');\n            }\n            this._activatedRoute = activatedRoute;\n            var snapshot = activatedRoute._futureSnapshot;\n            var component = snapshot.routeConfig.component;\n            resolver = resolver || this.resolver;\n            var factory = resolver.resolveComponentFactory(component);\n            var childContexts = this.parentContexts.getOrCreateContext(this.name).children;\n            var injector = new OutletInjector(activatedRoute, childContexts, this.location.injector);\n            this.activated = this.location.createComponent(factory, this.location.length, injector);\n            // Calling `markForCheck` to make sure we will run the change detection when the\n            // `RouterOutlet` is inside a `ChangeDetectionStrategy.OnPush` component.\n            this.changeDetector.markForCheck();\n            this.activateEvents.emit(this.activated.instance);\n        };\n        RouterOutlet.decorators = [\n            { type: core.Directive, args: [{ selector: 'router-outlet', exportAs: 'outlet' },] }\n        ];\n        /** @nocollapse */\n        RouterOutlet.ctorParameters = function () { return [\n            { type: ChildrenOutletContexts },\n            { type: core.ViewContainerRef },\n            { type: core.ComponentFactoryResolver },\n            { type: String, decorators: [{ type: core.Attribute, args: ['name',] }] },\n            { type: core.ChangeDetectorRef }\n        ]; };\n        RouterOutlet.propDecorators = {\n            activateEvents: [{ type: core.Output, args: ['activate',] }],\n            deactivateEvents: [{ type: core.Output, args: ['deactivate',] }]\n        };\n        return RouterOutlet;\n    }());\n    var OutletInjector = /** @class */ (function () {\n        function OutletInjector(route, childContexts, parent) {\n            this.route = route;\n            this.childContexts = childContexts;\n            this.parent = parent;\n        }\n        OutletInjector.prototype.get = function (token, notFoundValue) {\n            if (token === ActivatedRoute) {\n                return this.route;\n            }\n            if (token === ChildrenOutletContexts) {\n                return this.childContexts;\n            }\n            return this.parent.get(token, notFoundValue);\n        };\n        return OutletInjector;\n    }());\n\n    /**\n    *@license\n    *Copyright Google Inc. All Rights Reserved.\n    *\n    *Use of this source code is governed by an MIT-style license that can be\n    *found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * @description\n     *\n     * Provides a preloading strategy.\n     *\n     * @experimental\n     */\n    var PreloadingStrategy = /** @class */ (function () {\n        function PreloadingStrategy() {\n        }\n        return PreloadingStrategy;\n    }());\n    /**\n     * @description\n     *\n     * Provides a preloading strategy that preloads all modules as quickly as possible.\n     *\n     * ```\n     * RouteModule.forRoot(ROUTES, {preloadingStrategy: PreloadAllModules})\n     * ```\n     *\n     * @experimental\n     */\n    var PreloadAllModules = /** @class */ (function () {\n        function PreloadAllModules() {\n        }\n        PreloadAllModules.prototype.preload = function (route, fn) {\n            return fn().pipe(operators.catchError(function () { return rxjs.of(null); }));\n        };\n        return PreloadAllModules;\n    }());\n    /**\n     * @description\n     *\n     * Provides a preloading strategy that does not preload any modules.\n     *\n     * This strategy is enabled by default.\n     *\n     * @experimental\n     */\n    var NoPreloading = /** @class */ (function () {\n        function NoPreloading() {\n        }\n        NoPreloading.prototype.preload = function (route, fn) { return rxjs.of(null); };\n        return NoPreloading;\n    }());\n    /**\n     * The preloader optimistically loads all router configurations to\n     * make navigations into lazily-loaded sections of the application faster.\n     *\n     * The preloader runs in the background. When the router bootstraps, the preloader\n     * starts listening to all navigation events. After every such event, the preloader\n     * will check if any configurations can be loaded lazily.\n     *\n     * If a route is protected by `canLoad` guards, the preloaded will not load it.\n     *\n     *\n     */\n    var RouterPreloader = /** @class */ (function () {\n        function RouterPreloader(router, moduleLoader, compiler, injector, preloadingStrategy) {\n            this.router = router;\n            this.injector = injector;\n            this.preloadingStrategy = preloadingStrategy;\n            var onStartLoad = function (r) { return router.triggerEvent(new RouteConfigLoadStart(r)); };\n            var onEndLoad = function (r) { return router.triggerEvent(new RouteConfigLoadEnd(r)); };\n            this.loader = new RouterConfigLoader(moduleLoader, compiler, onStartLoad, onEndLoad);\n        }\n        RouterPreloader.prototype.setUpPreloading = function () {\n            var _this = this;\n            this.subscription =\n                this.router.events\n                    .pipe(operators.filter(function (e) { return e instanceof NavigationEnd; }), operators.concatMap(function () { return _this.preload(); }))\n                    .subscribe(function () { });\n        };\n        RouterPreloader.prototype.preload = function () {\n            var ngModule = this.injector.get(core.NgModuleRef);\n            return this.processRoutes(ngModule, this.router.config);\n        };\n        // TODO(jasonaden): This class relies on code external to the class to call setUpPreloading. If\n        // this hasn't been done, ngOnDestroy will fail as this.subscription will be undefined. This\n        // should be refactored.\n        RouterPreloader.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n        RouterPreloader.prototype.processRoutes = function (ngModule, routes) {\n            var e_1, _a;\n            var res = [];\n            try {\n                for (var routes_1 = __values(routes), routes_1_1 = routes_1.next(); !routes_1_1.done; routes_1_1 = routes_1.next()) {\n                    var route = routes_1_1.value;\n                    // we already have the config loaded, just recurse\n                    if (route.loadChildren && !route.canLoad && route._loadedConfig) {\n                        var childConfig = route._loadedConfig;\n                        res.push(this.processRoutes(childConfig.module, childConfig.routes));\n                        // no config loaded, fetch the config\n                    }\n                    else if (route.loadChildren && !route.canLoad) {\n                        res.push(this.preloadConfig(ngModule, route));\n                        // recurse into children\n                    }\n                    else if (route.children) {\n                        res.push(this.processRoutes(ngModule, route.children));\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (routes_1_1 && !routes_1_1.done && (_a = routes_1.return)) _a.call(routes_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            return rxjs.from(res).pipe(operators.mergeAll(), operators.map(function (_) { return void 0; }));\n        };\n        RouterPreloader.prototype.preloadConfig = function (ngModule, route) {\n            var _this = this;\n            return this.preloadingStrategy.preload(route, function () {\n                var loaded$ = _this.loader.load(ngModule.injector, route);\n                return loaded$.pipe(operators.mergeMap(function (config) {\n                    route._loadedConfig = config;\n                    return _this.processRoutes(config.module, config.routes);\n                }));\n            });\n        };\n        RouterPreloader.decorators = [\n            { type: core.Injectable }\n        ];\n        /** @nocollapse */\n        RouterPreloader.ctorParameters = function () { return [\n            { type: Router },\n            { type: core.NgModuleFactoryLoader },\n            { type: core.Compiler },\n            { type: core.Injector },\n            { type: PreloadingStrategy }\n        ]; };\n        return RouterPreloader;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RouterScroller = /** @class */ (function () {\n        function RouterScroller(router, \n        /** @docsNotRequired */ viewportScroller, options) {\n            if (options === void 0) { options = {}; }\n            this.router = router;\n            this.viewportScroller = viewportScroller;\n            this.options = options;\n            this.lastId = 0;\n            this.lastSource = 'imperative';\n            this.restoredId = 0;\n            this.store = {};\n        }\n        RouterScroller.prototype.init = function () {\n            // we want to disable the automatic scrolling because having two places\n            // responsible for scrolling results race conditions, especially given\n            // that browser don't implement this behavior consistently\n            if (this.options.scrollPositionRestoration !== 'disabled') {\n                this.viewportScroller.setHistoryScrollRestoration('manual');\n            }\n            this.routerEventsSubscription = this.createScrollEvents();\n            this.scrollEventsSubscription = this.consumeScrollEvents();\n        };\n        RouterScroller.prototype.createScrollEvents = function () {\n            var _this = this;\n            return this.router.events.subscribe(function (e) {\n                if (e instanceof NavigationStart) {\n                    // store the scroll position of the current stable navigations.\n                    _this.store[_this.lastId] = _this.viewportScroller.getScrollPosition();\n                    _this.lastSource = e.navigationTrigger;\n                    _this.restoredId = e.restoredState ? e.restoredState.navigationId : 0;\n                }\n                else if (e instanceof NavigationEnd) {\n                    _this.lastId = e.id;\n                    _this.scheduleScrollEvent(e, _this.router.parseUrl(e.urlAfterRedirects).fragment);\n                }\n            });\n        };\n        RouterScroller.prototype.consumeScrollEvents = function () {\n            var _this = this;\n            return this.router.events.subscribe(function (e) {\n                if (!(e instanceof Scroll))\n                    return;\n                // a popstate event. The pop state event will always ignore anchor scrolling.\n                if (e.position) {\n                    if (_this.options.scrollPositionRestoration === 'top') {\n                        _this.viewportScroller.scrollToPosition([0, 0]);\n                    }\n                    else if (_this.options.scrollPositionRestoration === 'enabled') {\n                        _this.viewportScroller.scrollToPosition(e.position);\n                    }\n                    // imperative navigation \"forward\"\n                }\n                else {\n                    if (e.anchor && _this.options.anchorScrolling === 'enabled') {\n                        _this.viewportScroller.scrollToAnchor(e.anchor);\n                    }\n                    else if (_this.options.scrollPositionRestoration !== 'disabled') {\n                        _this.viewportScroller.scrollToPosition([0, 0]);\n                    }\n                }\n            });\n        };\n        RouterScroller.prototype.scheduleScrollEvent = function (routerEvent, anchor) {\n            this.router.triggerEvent(new Scroll(routerEvent, this.lastSource === 'popstate' ? this.store[this.restoredId] : null, anchor));\n        };\n        RouterScroller.prototype.ngOnDestroy = function () {\n            if (this.routerEventsSubscription) {\n                this.routerEventsSubscription.unsubscribe();\n            }\n            if (this.scrollEventsSubscription) {\n                this.scrollEventsSubscription.unsubscribe();\n            }\n        };\n        return RouterScroller;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Contains a list of directives\n     *\n     *\n     */\n    var ROUTER_DIRECTIVES = [RouterOutlet, RouterLink, RouterLinkWithHref, RouterLinkActive, EmptyOutletComponent];\n    /**\n     * @description\n     *\n     * Is used in DI to configure the router.\n     *\n     *\n     */\n    var ROUTER_CONFIGURATION = new core.InjectionToken('ROUTER_CONFIGURATION');\n    /**\n     * @docsNotRequired\n     */\n    var ROUTER_FORROOT_GUARD = new core.InjectionToken('ROUTER_FORROOT_GUARD');\n    var ROUTER_PROVIDERS = [\n        common.Location,\n        { provide: UrlSerializer, useClass: DefaultUrlSerializer },\n        {\n            provide: Router,\n            useFactory: setupRouter,\n            deps: [\n                core.ApplicationRef, UrlSerializer, ChildrenOutletContexts, common.Location, core.Injector,\n                core.NgModuleFactoryLoader, core.Compiler, ROUTES, ROUTER_CONFIGURATION,\n                [UrlHandlingStrategy, new core.Optional()], [RouteReuseStrategy, new core.Optional()]\n            ]\n        },\n        ChildrenOutletContexts,\n        { provide: ActivatedRoute, useFactory: rootRoute, deps: [Router] },\n        { provide: core.NgModuleFactoryLoader, useClass: core.SystemJsNgModuleLoader },\n        RouterPreloader,\n        NoPreloading,\n        PreloadAllModules,\n        { provide: ROUTER_CONFIGURATION, useValue: { enableTracing: false } },\n    ];\n    function routerNgProbeToken() {\n        return new core.NgProbeToken('Router', Router);\n    }\n    /**\n     * @usageNotes\n     *\n     * RouterModule can be imported multiple times: once per lazily-loaded bundle.\n     * Since the router deals with a global shared resource--location, we cannot have\n     * more than one router service active.\n     *\n     * That is why there are two ways to create the module: `RouterModule.forRoot` and\n     * `RouterModule.forChild`.\n     *\n     * * `forRoot` creates a module that contains all the directives, the given routes, and the router\n     *   service itself.\n     * * `forChild` creates a module that contains all the directives and the given routes, but does not\n     *   include the router service.\n     *\n     * When registered at the root, the module should be used as follows\n     *\n     * ```\n     * @NgModule({\n     *   imports: [RouterModule.forRoot(ROUTES)]\n     * })\n     * class MyNgModule {}\n     * ```\n     *\n     * For submodules and lazy loaded submodules the module should be used as follows:\n     *\n     * ```\n     * @NgModule({\n     *   imports: [RouterModule.forChild(ROUTES)]\n     * })\n     * class MyNgModule {}\n     * ```\n     *\n     * @description\n     *\n     * Adds router directives and providers.\n     *\n     * Managing state transitions is one of the hardest parts of building applications. This is\n     * especially true on the web, where you also need to ensure that the state is reflected in the URL.\n     * In addition, we often want to split applications into multiple bundles and load them on demand.\n     * Doing this transparently is not trivial.\n     *\n     * The Angular router solves these problems. Using the router, you can declaratively specify\n     * application states, manage state transitions while taking care of the URL, and load bundles on\n     * demand.\n     *\n     * [Read this developer guide](https://angular.io/docs/ts/latest/guide/router.html) to get an\n     * overview of how the router should be used.\n     *\n     *\n     */\n    var RouterModule = /** @class */ (function () {\n        // Note: We are injecting the Router so it gets created eagerly...\n        function RouterModule(guard, router) {\n        }\n        /**\n         * Creates a module with all the router providers and directives. It also optionally sets up an\n         * application listener to perform an initial navigation.\n         *\n         * Options (see `ExtraOptions`):\n         * * `enableTracing` makes the router log all its internal events to the console.\n         * * `useHash` enables the location strategy that uses the URL fragment instead of the history\n         * API.\n         * * `initialNavigation` disables the initial navigation.\n         * * `errorHandler` provides a custom error handler.\n         * * `preloadingStrategy` configures a preloading strategy (see `PreloadAllModules`).\n         * * `onSameUrlNavigation` configures how the router handles navigation to the current URL. See\n         * `ExtraOptions` for more details.\n         * * `paramsInheritanceStrategy` defines how the router merges params, data and resolved data\n         * from parent to child routes.\n         */\n        RouterModule.forRoot = function (routes, config) {\n            return {\n                ngModule: RouterModule,\n                providers: [\n                    ROUTER_PROVIDERS,\n                    provideRoutes(routes),\n                    {\n                        provide: ROUTER_FORROOT_GUARD,\n                        useFactory: provideForRootGuard,\n                        deps: [[Router, new core.Optional(), new core.SkipSelf()]]\n                    },\n                    { provide: ROUTER_CONFIGURATION, useValue: config ? config : {} },\n                    {\n                        provide: common.LocationStrategy,\n                        useFactory: provideLocationStrategy,\n                        deps: [\n                            common.PlatformLocation, [new core.Inject(common.APP_BASE_HREF), new core.Optional()], ROUTER_CONFIGURATION\n                        ]\n                    },\n                    {\n                        provide: RouterScroller,\n                        useFactory: createRouterScroller,\n                        deps: [Router, common.ViewportScroller, ROUTER_CONFIGURATION]\n                    },\n                    {\n                        provide: PreloadingStrategy,\n                        useExisting: config && config.preloadingStrategy ? config.preloadingStrategy :\n                            NoPreloading\n                    },\n                    { provide: core.NgProbeToken, multi: true, useFactory: routerNgProbeToken },\n                    provideRouterInitializer(),\n                ],\n            };\n        };\n        /**\n         * Creates a module with all the router directives and a provider registering routes.\n         */\n        RouterModule.forChild = function (routes) {\n            return { ngModule: RouterModule, providers: [provideRoutes(routes)] };\n        };\n        RouterModule.decorators = [\n            { type: core.NgModule, args: [{\n                        declarations: ROUTER_DIRECTIVES,\n                        exports: ROUTER_DIRECTIVES,\n                        entryComponents: [EmptyOutletComponent]\n                    },] }\n        ];\n        /** @nocollapse */\n        RouterModule.ctorParameters = function () { return [\n            { type: undefined, decorators: [{ type: core.Optional }, { type: core.Inject, args: [ROUTER_FORROOT_GUARD,] }] },\n            { type: Router, decorators: [{ type: core.Optional }] }\n        ]; };\n        return RouterModule;\n    }());\n    function createRouterScroller(router, viewportScroller, config) {\n        if (config.scrollOffset) {\n            viewportScroller.setOffset(config.scrollOffset);\n        }\n        return new RouterScroller(router, viewportScroller, config);\n    }\n    function provideLocationStrategy(platformLocationStrategy, baseHref, options) {\n        if (options === void 0) { options = {}; }\n        return options.useHash ? new common.HashLocationStrategy(platformLocationStrategy, baseHref) :\n            new common.PathLocationStrategy(platformLocationStrategy, baseHref);\n    }\n    function provideForRootGuard(router) {\n        if (router) {\n            throw new Error(\"RouterModule.forRoot() called twice. Lazy loaded modules should use RouterModule.forChild() instead.\");\n        }\n        return 'guarded';\n    }\n    /**\n     * @description\n     *\n     * Registers routes.\n     *\n     * ### Example\n     *\n     * ```\n     * @NgModule({\n     *   imports: [RouterModule.forChild(ROUTES)],\n     *   providers: [provideRoutes(EXTRA_ROUTES)]\n     * })\n     * class MyNgModule {}\n     * ```\n     *\n     *\n     */\n    function provideRoutes(routes) {\n        return [\n            { provide: core.ANALYZE_FOR_ENTRY_COMPONENTS, multi: true, useValue: routes },\n            { provide: ROUTES, multi: true, useValue: routes },\n        ];\n    }\n    function setupRouter(ref, urlSerializer, contexts, location, injector, loader, compiler, config, opts, urlHandlingStrategy, routeReuseStrategy) {\n        if (opts === void 0) { opts = {}; }\n        var router = new Router(null, urlSerializer, contexts, location, injector, loader, compiler, flatten(config));\n        if (urlHandlingStrategy) {\n            router.urlHandlingStrategy = urlHandlingStrategy;\n        }\n        if (routeReuseStrategy) {\n            router.routeReuseStrategy = routeReuseStrategy;\n        }\n        if (opts.errorHandler) {\n            router.errorHandler = opts.errorHandler;\n        }\n        if (opts.malformedUriErrorHandler) {\n            router.malformedUriErrorHandler = opts.malformedUriErrorHandler;\n        }\n        if (opts.enableTracing) {\n            var dom_1 = platformBrowser.ɵgetDOM();\n            router.events.subscribe(function (e) {\n                dom_1.logGroup(\"Router Event: \" + e.constructor.name);\n                dom_1.log(e.toString());\n                dom_1.log(e);\n                dom_1.logGroupEnd();\n            });\n        }\n        if (opts.onSameUrlNavigation) {\n            router.onSameUrlNavigation = opts.onSameUrlNavigation;\n        }\n        if (opts.paramsInheritanceStrategy) {\n            router.paramsInheritanceStrategy = opts.paramsInheritanceStrategy;\n        }\n        if (opts.urlUpdateStrategy) {\n            router.urlUpdateStrategy = opts.urlUpdateStrategy;\n        }\n        if (opts.relativeLinkResolution) {\n            router.relativeLinkResolution = opts.relativeLinkResolution;\n        }\n        return router;\n    }\n    function rootRoute(router) {\n        return router.routerState.root;\n    }\n    /**\n     * To initialize the router properly we need to do in two steps:\n     *\n     * We need to start the navigation in a APP_INITIALIZER to block the bootstrap if\n     * a resolver or a guards executes asynchronously. Second, we need to actually run\n     * activation in a BOOTSTRAP_LISTENER. We utilize the afterPreactivation\n     * hook provided by the router to do that.\n     *\n     * The router navigation starts, reaches the point when preactivation is done, and then\n     * pauses. It waits for the hook to be resolved. We then resolve it only in a bootstrap listener.\n     */\n    var RouterInitializer = /** @class */ (function () {\n        function RouterInitializer(injector) {\n            this.injector = injector;\n            this.initNavigation = false;\n            this.resultOfPreactivationDone = new rxjs.Subject();\n        }\n        RouterInitializer.prototype.appInitializer = function () {\n            var _this = this;\n            var p = this.injector.get(common.LOCATION_INITIALIZED, Promise.resolve(null));\n            return p.then(function () {\n                var resolve = null;\n                var res = new Promise(function (r) { return resolve = r; });\n                var router = _this.injector.get(Router);\n                var opts = _this.injector.get(ROUTER_CONFIGURATION);\n                if (_this.isLegacyDisabled(opts) || _this.isLegacyEnabled(opts)) {\n                    resolve(true);\n                }\n                else if (opts.initialNavigation === 'disabled') {\n                    router.setUpLocationChangeListener();\n                    resolve(true);\n                }\n                else if (opts.initialNavigation === 'enabled') {\n                    router.hooks.afterPreactivation = function () {\n                        // only the initial navigation should be delayed\n                        if (!_this.initNavigation) {\n                            _this.initNavigation = true;\n                            resolve(true);\n                            return _this.resultOfPreactivationDone;\n                            // subsequent navigations should not be delayed\n                        }\n                        else {\n                            return rxjs.of(null);\n                        }\n                    };\n                    router.initialNavigation();\n                }\n                else {\n                    throw new Error(\"Invalid initialNavigation options: '\" + opts.initialNavigation + \"'\");\n                }\n                return res;\n            });\n        };\n        RouterInitializer.prototype.bootstrapListener = function (bootstrappedComponentRef) {\n            var opts = this.injector.get(ROUTER_CONFIGURATION);\n            var preloader = this.injector.get(RouterPreloader);\n            var routerScroller = this.injector.get(RouterScroller);\n            var router = this.injector.get(Router);\n            var ref = this.injector.get(core.ApplicationRef);\n            if (bootstrappedComponentRef !== ref.components[0]) {\n                return;\n            }\n            if (this.isLegacyEnabled(opts)) {\n                router.initialNavigation();\n            }\n            else if (this.isLegacyDisabled(opts)) {\n                router.setUpLocationChangeListener();\n            }\n            preloader.setUpPreloading();\n            routerScroller.init();\n            router.resetRootComponentType(ref.componentTypes[0]);\n            this.resultOfPreactivationDone.next(null);\n            this.resultOfPreactivationDone.complete();\n        };\n        RouterInitializer.prototype.isLegacyEnabled = function (opts) {\n            return opts.initialNavigation === 'legacy_enabled' || opts.initialNavigation === true ||\n                opts.initialNavigation === undefined;\n        };\n        RouterInitializer.prototype.isLegacyDisabled = function (opts) {\n            return opts.initialNavigation === 'legacy_disabled' || opts.initialNavigation === false;\n        };\n        RouterInitializer.decorators = [\n            { type: core.Injectable }\n        ];\n        /** @nocollapse */\n        RouterInitializer.ctorParameters = function () { return [\n            { type: core.Injector }\n        ]; };\n        return RouterInitializer;\n    }());\n    function getAppInitializer(r) {\n        return r.appInitializer.bind(r);\n    }\n    function getBootstrapListener(r) {\n        return r.bootstrapListener.bind(r);\n    }\n    /**\n     * A token for the router initializer that will be called after the app is bootstrapped.\n     *\n     * @experimental\n     */\n    var ROUTER_INITIALIZER = new core.InjectionToken('Router Initializer');\n    function provideRouterInitializer() {\n        return [\n            RouterInitializer,\n            {\n                provide: core.APP_INITIALIZER,\n                multi: true,\n                useFactory: getAppInitializer,\n                deps: [RouterInitializer]\n            },\n            { provide: ROUTER_INITIALIZER, useFactory: getBootstrapListener, deps: [RouterInitializer] },\n            { provide: core.APP_BOOTSTRAP_LISTENER, multi: true, useExisting: ROUTER_INITIALIZER },\n        ];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var VERSION = new core.Version('6.1.2');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ɵangular_packages_router_router_a = ROUTER_FORROOT_GUARD;\n    exports.ɵangular_packages_router_router_h = RouterInitializer;\n    exports.ɵangular_packages_router_router_c = createRouterScroller;\n    exports.ɵangular_packages_router_router_i = getAppInitializer;\n    exports.ɵangular_packages_router_router_j = getBootstrapListener;\n    exports.ɵangular_packages_router_router_e = provideForRootGuard;\n    exports.ɵangular_packages_router_router_d = provideLocationStrategy;\n    exports.ɵangular_packages_router_router_k = provideRouterInitializer;\n    exports.ɵangular_packages_router_router_g = rootRoute;\n    exports.ɵangular_packages_router_router_b = routerNgProbeToken;\n    exports.ɵangular_packages_router_router_f = setupRouter;\n    exports.ɵangular_packages_router_router_n = RouterScroller;\n    exports.ɵangular_packages_router_router_l = Tree;\n    exports.ɵangular_packages_router_router_m = TreeNode;\n    exports.RouterLink = RouterLink;\n    exports.RouterLinkWithHref = RouterLinkWithHref;\n    exports.RouterLinkActive = RouterLinkActive;\n    exports.RouterOutlet = RouterOutlet;\n    exports.ActivationEnd = ActivationEnd;\n    exports.ActivationStart = ActivationStart;\n    exports.ChildActivationEnd = ChildActivationEnd;\n    exports.ChildActivationStart = ChildActivationStart;\n    exports.GuardsCheckEnd = GuardsCheckEnd;\n    exports.GuardsCheckStart = GuardsCheckStart;\n    exports.NavigationCancel = NavigationCancel;\n    exports.NavigationEnd = NavigationEnd;\n    exports.NavigationError = NavigationError;\n    exports.NavigationStart = NavigationStart;\n    exports.ResolveEnd = ResolveEnd;\n    exports.ResolveStart = ResolveStart;\n    exports.RouteConfigLoadEnd = RouteConfigLoadEnd;\n    exports.RouteConfigLoadStart = RouteConfigLoadStart;\n    exports.RouterEvent = RouterEvent;\n    exports.RoutesRecognized = RoutesRecognized;\n    exports.Scroll = Scroll;\n    exports.RouteReuseStrategy = RouteReuseStrategy;\n    exports.Router = Router;\n    exports.ROUTES = ROUTES;\n    exports.ROUTER_CONFIGURATION = ROUTER_CONFIGURATION;\n    exports.ROUTER_INITIALIZER = ROUTER_INITIALIZER;\n    exports.RouterModule = RouterModule;\n    exports.provideRoutes = provideRoutes;\n    exports.ChildrenOutletContexts = ChildrenOutletContexts;\n    exports.OutletContext = OutletContext;\n    exports.NoPreloading = NoPreloading;\n    exports.PreloadAllModules = PreloadAllModules;\n    exports.PreloadingStrategy = PreloadingStrategy;\n    exports.RouterPreloader = RouterPreloader;\n    exports.ActivatedRoute = ActivatedRoute;\n    exports.ActivatedRouteSnapshot = ActivatedRouteSnapshot;\n    exports.RouterState = RouterState;\n    exports.RouterStateSnapshot = RouterStateSnapshot;\n    exports.PRIMARY_OUTLET = PRIMARY_OUTLET;\n    exports.convertToParamMap = convertToParamMap;\n    exports.UrlHandlingStrategy = UrlHandlingStrategy;\n    exports.DefaultUrlSerializer = DefaultUrlSerializer;\n    exports.UrlSegment = UrlSegment;\n    exports.UrlSegmentGroup = UrlSegmentGroup;\n    exports.UrlSerializer = UrlSerializer;\n    exports.UrlTree = UrlTree;\n    exports.VERSION = VERSION;\n    exports.ɵEmptyOutletComponent = EmptyOutletComponent;\n    exports.ɵROUTER_PROVIDERS = ROUTER_PROVIDERS;\n    exports.ɵflatten = flatten;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=router.umd.js.map\n"]}