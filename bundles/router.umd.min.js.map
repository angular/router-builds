{"version":3,"sources":["/home/travis/build/angular/angular/dist/packages-dist/router/bundles/router.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","router","common","core","Rx","Observable","prototype","platformBrowser","this","_angular_common","_angular_core","rxjs_BehaviorSubject","rxjs_Subject","rxjs_observable_of","rxjs_operator_concatMap","rxjs_operator_map","rxjs_operator_mergeMap","rxjs_Observable","rxjs_observable_from","rxjs_operator_catch","rxjs_operator_concatAll","rxjs_operator_first","rxjs_util_EmptyError","rxjs_observable_fromPromise","rxjs_operator_every","rxjs_operator_last","rxjs_operator_mergeAll","rxjs_operator_reduce","_angular_platformBrowser","rxjs_operator_filter","__extends","d","b","__","constructor","extendStatics","Object","create","ParamMap","convertToParamMap","params","ParamsAsMap","navigationCancelingError","message","error","Error","NAVIGATION_CANCELING_ERROR","isNavigationCancelingError","defaultUrlMatcher","segments","segmentGroup","route","parts","split","length","pathMatch","hasChildren","posParams","index","part","segment","isParameter","startsWith","substring","path","consumed","slice","Route","validateConfig","config","parentPath","i","fullPath","getFullPath","validateNode","Array","isArray","component","outlet","PRIMARY_OUTLET","redirectTo","children","loadChildren","matcher","charAt","exp","currentRoute","shallowEqualArrays","a","shallowEqual","k1","keys","k2","key","flatten","arr","concat","apply","last$1","forEach","map$$1","callback","prop","hasOwnProperty","waitForMap","obj","fn","of","waitHead","waitTail","res","k","mapped","map","call","r","push","concat$","concatAll","last$","last","andObservables","observables","merged$","mergeAll","every","result","wrapIntoObservable","value","ɵisObservable","ɵisPromise","fromPromise","Promise","resolve","createEmptyUrlTree","UrlTree","UrlSegmentGroup","containsTree","container","containee","exact","equalQueryParams","queryParams","equalSegmentGroups","root","containsQueryParams","containsSegmentGroup","equalPath","numberOfChildren","c","containsSegmentGroupHelper","containeePaths","current","next","equalSegments","as","bs","parameters","mapChildrenIntoArray","child","childOutlet","serializePaths","p","serializePath","join","serializeSegment","primary","children_1","v","encode","s","encodeURIComponent","replace","decode","decodeURIComponent","serializeParams","serializeQueryParams","strParams","name","matchSegments","str","match","SEGMENT_RE","matchQueryParams","QUERY_PARAM_RE","matchUrlQueryParamValue","QUERY_PARAM_VALUE_RE","noMatch","obs","NoMatch","absoluteRedirect","newTree","AbsoluteRedirect","namedOutletsRedirect","canLoadFails","applyRedirects","moduleInjector","configLoader","urlSerializer","urlTree","ApplyRedirects","runCanLoadGuard","canLoad","from","injectionToken","guard","get","matched","consumedSegments","lastChild","positionalParamSegments","slicedSegments","containsEmptyPathRedirectsWithNamedOutlets","createChildrenForEmptySegments","mergeTrivialChildren","containsEmptyPathRedirects","addEmptySegmentsToChildrenIfNeeded","routes","_i","routes_1","isEmptyPathRedirect","getOutlet","__assign","primarySegmentGroup","routes_2","some","undefined","findNode","node","_a","node_1","findPath","unshift","nodeChildrenAsMap","createEmptyState","rootComponent","snapshot","createEmptyStateSnapshot","emptyUrl","BehaviorSubject","UrlSegment","emptyParams","emptyData","emptyQueryParams","fragment","activated","ActivatedRoute","RouterState","TreeNode","ActivatedRouteSnapshot","RouterStateSnapshot","inheritedParamsDataResolve","pathToRoot","pathFromRoot","inhertingStartingFrom","parent_1","routeConfig","reduce","curr","data","_resolvedData","setRouterState","state","_routerState","serializeNode","advanceActivatedRoute","currentSnapshot","nextSnapshot","_futureSnapshot","url","equalParamsAndUrlSegments","equalUrlParams","parentsMismatch","parent","createRouterState","routeReuseStrategy","prevState","createNode","_root","shouldReuseRoute","createOrReuseChildren","retrieve","tree","setFutureSnapshotsOfActivatedRoutes","createActivatedRoute","createUrlTree","commands","nav","computeNavigation","toRoot","startingPosition","findStartingPosition","processChildren","updateSegmentGroupChildren","updateSegmentGroup","isMatrixParams","command","outlets","segmentPath","oldSegmentGroup","newSegmentGroup","qp","replaceSegment","oldSegment","newSegment","outletName","Navigation","numberOfDoubleDots","isAbsolute","cmd","cmdIdx","outlets_1","urlPart","partIndex","Position","_lastPathIndex","_urlSegment","modifier","createPositionApplyingDoubleDots","group","g","ci","dd","getPath","getOutlets","_b","startIndex","m","prefixedWith","slicedCommands","commandIndex","pathIndex","createNewSegmentGroup","outlets_2","currentCommandIndex","currentPathIndex","compare","paths","createNewSegmentChildren","stringify","closestLoadedConfig","_routeConfig","_loadedConfig","recognize","rootComponentType","Recognizer","sortActivatedRouteSnapshots","nodes","sort","localeCompare","getChildConfig","match$1","NoMatch$1","checkOutletNameUniqueness","names","n","routeWithSameOutletName","toString","getSourceSegmentGroup","_sourceSegment","getPathIndexShift","_segmentIndexShift","split$1","containsEmptyPathMatchesWithNamedOutlets","s_1","createChildrenForEmptyPaths","containsEmptyPathMatches","s_2","addEmptyPathsToChildrenIfNeeded","emptyPathMatch","getOutlet$1","primarySegment","getData","getResolve","NavigationExtras","defaultErrorHandler","defaultRouterHook","advanceActivatedRouteNodeAndItsChildren","parentLoadedConfig","validateCommands","attrBoolValue","CanActivate$1","CanActivateChild","CanDeactivate$1","Resolve","CanLoad","routerNgProbeToken","NgProbeToken","Router","provideLocationStrategy","platformLocationStrategy","baseHref","options","useHash","HashLocationStrategy","PathLocationStrategy","provideForRootGuard","provideRoutes","provide","ANALYZE_FOR_ENTRY_COMPONENTS","multi","useValue","ROUTES","ExtraOptions","setupRouter","ref","contexts","location","injector","loader","compiler","opts","urlHandlingStrategy","errorHandler","enableTracing","dom_1","ɵgetDOM","events","subscribe","e","logGroup","log","logGroupEnd","rootRoute","routerState","getAppInitializer","appInitializer","bind","getBootstrapListener","bootstrapListener","provideRouterInitializer","RouterInitializer","APP_INITIALIZER","useFactory","deps","ROUTER_INITIALIZER","APP_BOOTSTRAP_LISTENER","useExisting","setPrototypeOf","__proto__","assign","t","arguments","has","getAll","defineProperty","enumerable","configurable","LoadedRouterConfig","RouterEvent","id","RouteEvent","NavigationStart","_super","NavigationEnd","urlAfterRedirects","_this","NavigationCancel","reason","NavigationError","RoutesRecognized","GuardsCheckStart","GuardsCheckEnd","shouldActivate","ResolveStart","ResolveEnd","RouteConfigLoadStart","RouteConfigLoadEnd","ChildActivationStart","ChildActivationEnd","_queryParamMap","DEFAULT_SERIALIZER","serialize","_parameterMap","UrlSerializer","DefaultUrlSerializer","parse","UrlParser","parseRootSegment","parseQueryParams","parseFragment","query","encodeURI","remaining","consumeOptional","peekStartsWith","parseChildren","parseQueryParam","decodeURI","parseSegment","capture","parseParens","parseMatrixParams","parseParam","valueMatch","decodedKey","decodedVal","currentVal","allowPrimary","indexOf","substr","allowRedirects","ngModule","NgModuleRef","expanded$","expandSegmentGroup","urlTrees$","rootSegmentGroup","_catch","noMatchError","mapped$","rootCandidate","expandChildren","expandSegment","routes$","processedRoutes$","expandSegmentAgainstRoute","concattedProcessedRoutes$","first$","first","_","EmptyError","noLeftoversInUrl","matchSegmentAgainstRoute","expandSegmentAgainstRouteUsingRedirect","expandWildCardWithParamsAgainstRouteUsingRedirect","expandRegularSegmentAgainstRouteUsingRedirect","applyRedirectCommands","mergeMap","lineralizeSegments","newSegments","rawSegmentGroup","load","cfg","rawSlicedSegments","childConfig$","routerConfig","childModule","childConfig","expanded$_1","cs","shouldLoad","applyRedirectCreatreUrlTree","newRoot","createSegmentGroup","createQueryParams","redirectToParams","actualParams","copySourceValue","sourceName","updatedSegments","createSegments","redirectToSegments","actualSegments","findPosParam","findOrReturn","redirectToUrlSegment","pos","idx","actualSegments_1","splice","Tree","firstChild","siblings","filter","cc","futureSnapshot","_paramMap","urlSegment","lastPathIndex","_resolve","cmdWithOutlet","find","CanActivate","CanDeactivate","PreActivation","future","forwardEvent","canActivateChecks","canDeactivateChecks","initalize","parentContexts","futureRoot","currRoot","setupChildRouteGuards","checkGuards","isDeactivating","isActivating","canDeactivate$","runCanDeactivateChecks","canDeactivate","runCanActivateChecks","resolveData","checks$","runningChecks$","concatMap","check","runResolve","futureNode","currNode","futurePath","prevChildren","setupRouteGuards","deactivateRouteAndItsChildren","getContext","context","shouldRunGuardsAndResolvers","runGuardsAndResolvers","mode","childName","isActivated","runCanDeactivate","fireChildActivationStart","runCanActivateChild","runCanActivate","childActivations","reverse","canActivate","observable","getToken","canActivateChildGuards","extractCanActivateChild","guards","canActivateChild","resolveNode","resolvedData","key_1","getResolver","runningResolvers$","resolver","token","processSegmentGroup","freeze","rootNode","routeState","inheritParamsAndData","routeNode","processSegment","config_1","processSegmentAgainstRoute","rawSegment","snapshot_1","RouteReuseStrategy","DefaultRouteReuseStrategy","shouldDetach","store","detachedTree","shouldAttach","InjectionToken","RouterConfigLoader","onLoadStartListener","onLoadEndListener","parentInjector","moduleFactory$","loadModuleFactory","NgModuleFactory","compileModuleAsync","UrlHandlingStrategy","DefaultUrlHandlingStrategy","shouldProcessUrl","extract","merge","newUrlPart","wholeUrl","rootContexts","navigations","routerEvents","Subject","navigationId","navigated","hooks","beforePreactivation","afterPreactivation","onLoadStart","triggerEvent","onLoadEnd","resetConfig","currentUrlTree","rawUrlTree","currentRouterState","processNavigations","resetRootComponentType","initialNavigation","setUpLocationChangeListener","navigateByUrl","replaceUrl","locationSubscription","Zone","wrap","change","source","setTimeout","scheduleNavigation","serializeUrl","ngOnDestroy","dispose","unsubscribe","navigationExtras","relativeTo","preserveQueryParams","queryParamsHandling","preserveFragment","isDevMode","console","warn","f","q","extras","skipLocationChange","parseUrl","mergedTree","navigate","removeEmptyProps","isActive","executeScheduledNavigation","promise","catch","rawUrl","lastNavigation","reject","rej","urlTransition","then","runNavigate","shouldPreventPushState","shouldReplaceUrl","precreatedState","go","resolvePromise","rejectPromise","urlAndSnapshot$","appliedUrl","redirectsApplied$","preActivation","navigationIsSuccessful","beforePreactivationDone$","preactivationSetup$","evt","preactivationCheckGuards$","preactivationResolveData$","preactivationDone$","routerState$","storedState","storedUrl","isCurrentPathEqualTo","replaceState","ActivateRoutes","activate","resetUrlToCurrentUrlTree","ee","futureState","currState","deactivateChildRoutes","activateChildRoutes","futureChild","childOutletName","deactivateRoutes","parentContext","detachAndStoreRouteSubtree","deactivateRouteAndOutlet","componentRef","detach","onOutletDeactivated","contexts_1","deactivate","activateRoutes","getOrCreateContext","stored","onOutletReAttached","attachRef","attach","cmpFactoryResolver","componentFactoryResolver","activateWith","RouterLink","tabIndex","renderer","el","setAttribute","nativeElement","set","preserve","onClick","decorators","type","Directive","args","selector","ctorParameters","Attribute","Renderer2","ElementRef","propDecorators","Input","routerLink","HostListener","RouterLinkWithHref","locationStrategy","subscription","updateTargetUrlAndHref","ngOnChanges","changes","button","ctrlKey","metaKey","shiftKey","target","href","prepareExternalUrl","LocationStrategy","HostBinding","RouterLinkActive","element","cdr","classes","active","routerLinkActiveOptions","update","ngAfterContentInit","links","linksWithHrefs","hasActiveLinks","addClass","removeClass","isLinkActive","link","exportAs","ChangeDetectorRef","ContentChildren","descendants","routerLinkActive","OutletContext","ChildrenOutletContexts","Map","onChildOutletCreated","onChildOutletDestroyed","RouterOutlet","changeDetector","_activatedRoute","activateEvents","EventEmitter","deactivateEvents","ngOnInit","instance","cmp","activatedRoute","insert","hostView","destroy","emit","resolveComponentFactory","childContexts","OutletInjector","createComponent","markForCheck","ViewContainerRef","ComponentFactoryResolver","Output","notFoundValue","PreloadingStrategy","PreloadAllModules","preload","NoPreloading","RouterPreloader","moduleLoader","preloadingStrategy","onStartLoad","onEndLoad","setUpPreloading","navigations$","processRoutes","preloadConfig","loaded$","Injectable","NgModuleFactoryLoader","Compiler","Injector","ROUTER_DIRECTIVES","ROUTER_CONFIGURATION","ROUTER_FORROOT_GUARD","ROUTER_PROVIDERS","Location","useClass","ApplicationRef","Optional","SystemJsNgModuleLoader","RouterModule","forRoot","providers","SkipSelf","PlatformLocation","Inject","APP_BASE_HREF","forChild","NgModule","declarations","initNavigation","resultOfPreactivationDone","LOCATION_INITIALIZED","isLegacyDisabled","isLegacyEnabled","bootstrappedComponentRef","preloader","components","componentTypes","complete","VERSION","Version","ɵROUTER_PROVIDERS","ɵflatten","ɵa","ɵb","ɵh","ɵi","ɵj","ɵe","ɵd","ɵk","ɵg","ɵc","ɵf","ɵl","ɵm"],"mappings":"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","file":"/home/travis/build/angular/angular/dist/packages-dist/router/bundles/router.umd.min.js","sourcesContent":["/**\n * @license Angular v5.0.0-beta.6-fa6b802\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/core'), require('rxjs/BehaviorSubject'), require('rxjs/Subject'), require('rxjs/observable/of'), require('rxjs/operator/concatMap'), require('rxjs/operator/map'), require('rxjs/operator/mergeMap'), require('rxjs/Observable'), require('rxjs/observable/from'), require('rxjs/operator/catch'), require('rxjs/operator/concatAll'), require('rxjs/operator/first'), require('rxjs/util/EmptyError'), require('rxjs/observable/fromPromise'), require('rxjs/operator/every'), require('rxjs/operator/last'), require('rxjs/operator/mergeAll'), require('rxjs/operator/reduce'), require('@angular/platform-browser'), require('rxjs/operator/filter')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', '@angular/common', '@angular/core', 'rxjs/BehaviorSubject', 'rxjs/Subject', 'rxjs/observable/of', 'rxjs/operator/concatMap', 'rxjs/operator/map', 'rxjs/operator/mergeMap', 'rxjs/Observable', 'rxjs/observable/from', 'rxjs/operator/catch', 'rxjs/operator/concatAll', 'rxjs/operator/first', 'rxjs/util/EmptyError', 'rxjs/observable/fromPromise', 'rxjs/operator/every', 'rxjs/operator/last', 'rxjs/operator/mergeAll', 'rxjs/operator/reduce', '@angular/platform-browser', 'rxjs/operator/filter'], factory) :\n\t(factory((global.ng = global.ng || {}, global.ng.router = {}),global.ng.common,global.ng.core,global.Rx,global.Rx,global.Rx.Observable,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx,global.Rx.Observable,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx,global.Rx.Observable,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.ng.platformBrowser,global.Rx.Observable.prototype));\n}(this, (function (exports,_angular_common,_angular_core,rxjs_BehaviorSubject,rxjs_Subject,rxjs_observable_of,rxjs_operator_concatMap,rxjs_operator_map,rxjs_operator_mergeMap,rxjs_Observable,rxjs_observable_from,rxjs_operator_catch,rxjs_operator_concatAll,rxjs_operator_first,rxjs_util_EmptyError,rxjs_observable_fromPromise,rxjs_operator_every,rxjs_operator_last,rxjs_operator_mergeAll,rxjs_operator_reduce,_angular_platformBrowser,rxjs_operator_filter) { 'use strict';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n};\n\n/**\n * @license Angular v5.0.0-beta.6-fa6b802\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@whatItDoes Name of the primary outlet.\n *\n * \\@stable\n */\nvar PRIMARY_OUTLET = 'primary';\n/**\n * Matrix and Query parameters.\n *\n * `ParamMap` makes it easier to work with parameters as they could have either a single value or\n * multiple value. Because this should be known by the user, calling `get` or `getAll` returns the\n * correct type (either `string` or `string[]`).\n *\n * The API is inspired by the URLSearchParams interface.\n * see https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams\n *\n * \\@stable\n * @record\n */\nfunction ParamMap() { }\nvar ParamsAsMap = (function () {\n    /**\n     * @param {?} params\n     */\n    function ParamsAsMap(params) {\n        this.params = params || {};\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ParamsAsMap.prototype.has = function (name) { return this.params.hasOwnProperty(name); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ParamsAsMap.prototype.get = function (name) {\n        if (this.has(name)) {\n            var /** @type {?} */ v = this.params[name];\n            return Array.isArray(v) ? v[0] : v;\n        }\n        return null;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ParamsAsMap.prototype.getAll = function (name) {\n        if (this.has(name)) {\n            var /** @type {?} */ v = this.params[name];\n            return Array.isArray(v) ? v : [v];\n        }\n        return [];\n    };\n    Object.defineProperty(ParamsAsMap.prototype, \"keys\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return Object.keys(this.params); },\n        enumerable: true,\n        configurable: true\n    });\n    return ParamsAsMap;\n}());\n/**\n * Convert a {\\@link Params} instance to a {\\@link ParamMap}.\n *\n * \\@stable\n * @param {?} params\n * @return {?}\n */\nfunction convertToParamMap(params) {\n    return new ParamsAsMap(params);\n}\nvar NAVIGATION_CANCELING_ERROR = 'ngNavigationCancelingError';\n/**\n * @param {?} message\n * @return {?}\n */\nfunction navigationCancelingError(message) {\n    var /** @type {?} */ error = Error('NavigationCancelingError: ' + message);\n    ((error))[NAVIGATION_CANCELING_ERROR] = true;\n    return error;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction isNavigationCancelingError(error) {\n    return ((error))[NAVIGATION_CANCELING_ERROR];\n}\n/**\n * @param {?} segments\n * @param {?} segmentGroup\n * @param {?} route\n * @return {?}\n */\nfunction defaultUrlMatcher(segments, segmentGroup, route) {\n    var /** @type {?} */ parts = ((route.path)).split('/');\n    if (parts.length > segments.length) {\n        // The actual URL is shorter than the config, no match\n        return null;\n    }\n    if (route.pathMatch === 'full' &&\n        (segmentGroup.hasChildren() || parts.length < segments.length)) {\n        // The config is longer than the actual URL but we are looking for a full match, return null\n        return null;\n    }\n    var /** @type {?} */ posParams = {};\n    // Check each config part against the actual URL\n    for (var /** @type {?} */ index = 0; index < parts.length; index++) {\n        var /** @type {?} */ part = parts[index];\n        var /** @type {?} */ segment = segments[index];\n        var /** @type {?} */ isParameter = part.startsWith(':');\n        if (isParameter) {\n            posParams[part.substring(1)] = segment;\n        }\n        else if (part !== segment.path) {\n            // The actual URL part does not match the config, no match\n            return null;\n        }\n    }\n    return { consumed: segments.slice(0, parts.length), posParams: posParams };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * See {\\@link Routes} for more details.\n * \\@stable\n * @record\n */\nfunction Route() { }\nvar LoadedRouterConfig = (function () {\n    /**\n     * @param {?} routes\n     * @param {?} module\n     */\n    function LoadedRouterConfig(routes, module) {\n        this.routes = routes;\n        this.module = module;\n    }\n    return LoadedRouterConfig;\n}());\n/**\n * @param {?} config\n * @param {?=} parentPath\n * @return {?}\n */\nfunction validateConfig(config, parentPath) {\n    if (parentPath === void 0) { parentPath = ''; }\n    // forEach doesn't iterate undefined values\n    for (var /** @type {?} */ i = 0; i < config.length; i++) {\n        var /** @type {?} */ route = config[i];\n        var /** @type {?} */ fullPath = getFullPath(parentPath, route);\n        validateNode(route, fullPath);\n    }\n}\n/**\n * @param {?} route\n * @param {?} fullPath\n * @return {?}\n */\nfunction validateNode(route, fullPath) {\n    if (!route) {\n        throw new Error(\"\\n      Invalid configuration of route '\" + fullPath + \"': Encountered undefined route.\\n      The reason might be an extra comma.\\n\\n      Example:\\n      const routes: Routes = [\\n        { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\\n        { path: 'dashboard',  component: DashboardComponent },, << two commas\\n        { path: 'detail/:id', component: HeroDetailComponent }\\n      ];\\n    \");\n    }\n    if (Array.isArray(route)) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': Array cannot be specified\");\n    }\n    if (!route.component && (route.outlet && route.outlet !== PRIMARY_OUTLET)) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': a componentless route cannot have a named outlet set\");\n    }\n    if (route.redirectTo && route.children) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and children cannot be used together\");\n    }\n    if (route.redirectTo && route.loadChildren) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and loadChildren cannot be used together\");\n    }\n    if (route.children && route.loadChildren) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': children and loadChildren cannot be used together\");\n    }\n    if (route.redirectTo && route.component) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and component cannot be used together\");\n    }\n    if (route.path && route.matcher) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': path and matcher cannot be used together\");\n    }\n    if (route.redirectTo === void 0 && !route.component && !route.children && !route.loadChildren) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"'. One of the following must be provided: component, redirectTo, children or loadChildren\");\n    }\n    if (route.path === void 0 && route.matcher === void 0) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': routes must have either a path or a matcher specified\");\n    }\n    if (typeof route.path === 'string' && route.path.charAt(0) === '/') {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': path cannot start with a slash\");\n    }\n    if (route.path === '' && route.redirectTo !== void 0 && route.pathMatch === void 0) {\n        var /** @type {?} */ exp = \"The default value of 'pathMatch' is 'prefix', but often the intent is to use 'full'.\";\n        throw new Error(\"Invalid configuration of route '{path: \\\"\" + fullPath + \"\\\", redirectTo: \\\"\" + route.redirectTo + \"\\\"}': please provide 'pathMatch'. \" + exp);\n    }\n    if (route.pathMatch !== void 0 && route.pathMatch !== 'full' && route.pathMatch !== 'prefix') {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': pathMatch can only be set to 'prefix' or 'full'\");\n    }\n    if (route.children) {\n        validateConfig(route.children, fullPath);\n    }\n}\n/**\n * @param {?} parentPath\n * @param {?} currentRoute\n * @return {?}\n */\nfunction getFullPath(parentPath, currentRoute) {\n    if (!currentRoute) {\n        return parentPath;\n    }\n    if (!parentPath && !currentRoute.path) {\n        return '';\n    }\n    else if (parentPath && !currentRoute.path) {\n        return parentPath + \"/\";\n    }\n    else if (!parentPath && currentRoute.path) {\n        return currentRoute.path;\n    }\n    else {\n        return parentPath + \"/\" + currentRoute.path;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@whatItDoes Base for events the Router goes through, as opposed to events tied to a specific\n * Route. `RouterEvent`s will only be fired one time for any given navigation.\n *\n * Example:\n *\n * ```\n * class MyService {\n *   constructor(public router: Router, logger: Logger) {\n *     router.events.filter(e => e instanceof RouterEvent).subscribe(e => {\n *       logger.log(e.id, e.url);\n *     });\n *   }\n * }\n * ```\n *\n * \\@experimental\n */\nvar RouterEvent = (function () {\n    /**\n     * @param {?} id\n     * @param {?} url\n     */\n    function RouterEvent(id, url) {\n        this.id = id;\n        this.url = url;\n    }\n    return RouterEvent;\n}());\n/**\n * \\@whatItDoes Base for events tied to a specific `Route`, as opposed to events for the Router\n * lifecycle. `RouteEvent`s may be fired multiple times during a single navigation and will\n * always receive the `Route` they pertain to.\n *\n * Example:\n *\n * ```\n * class MyService {\n *   constructor(public router: Router, spinner: Spinner) {\n *     router.events.filter(e => e instanceof RouteEvent).subscribe(e => {\n *       if (e instanceof ChildActivationStart) {\n *         spinner.start(e.route);\n *       } else if (e instanceof ChildActivationEnd) {\n *         spinner.end(e.route);\n *       }\n *     });\n *   }\n * }\n * ```\n *\n * \\@experimental\n */\nvar RouteEvent = (function () {\n    /**\n     * @param {?} route\n     */\n    function RouteEvent(route) {\n        this.route = route;\n    }\n    return RouteEvent;\n}());\n/**\n * \\@whatItDoes Represents an event triggered when a navigation starts.\n *\n * \\@stable\n */\nvar NavigationStart = (function (_super) {\n    __extends(NavigationStart, _super);\n    function NavigationStart() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    NavigationStart.prototype.toString = function () { return \"NavigationStart(id: \" + this.id + \", url: '\" + this.url + \"')\"; };\n    return NavigationStart;\n}(RouterEvent));\n/**\n * \\@whatItDoes Represents an event triggered when a navigation ends successfully.\n *\n * \\@stable\n */\nvar NavigationEnd = (function (_super) {\n    __extends(NavigationEnd, _super);\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     */\n    function NavigationEnd(\n        /** @docsNotRequired */\n        id, \n        /** @docsNotRequired */\n        url, urlAfterRedirects) {\n        var _this = _super.call(this, id, url) || this;\n        _this.urlAfterRedirects = urlAfterRedirects;\n        return _this;\n    }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    NavigationEnd.prototype.toString = function () {\n        return \"NavigationEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"')\";\n    };\n    return NavigationEnd;\n}(RouterEvent));\n/**\n * \\@whatItDoes Represents an event triggered when a navigation is canceled.\n *\n * \\@stable\n */\nvar NavigationCancel = (function (_super) {\n    __extends(NavigationCancel, _super);\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} reason\n     */\n    function NavigationCancel(\n        /** @docsNotRequired */\n        id, \n        /** @docsNotRequired */\n        url, reason) {\n        var _this = _super.call(this, id, url) || this;\n        _this.reason = reason;\n        return _this;\n    }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    NavigationCancel.prototype.toString = function () { return \"NavigationCancel(id: \" + this.id + \", url: '\" + this.url + \"')\"; };\n    return NavigationCancel;\n}(RouterEvent));\n/**\n * \\@whatItDoes Represents an event triggered when a navigation fails due to an unexpected error.\n *\n * \\@stable\n */\nvar NavigationError = (function (_super) {\n    __extends(NavigationError, _super);\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} error\n     */\n    function NavigationError(\n        /** @docsNotRequired */\n        id, \n        /** @docsNotRequired */\n        url, error) {\n        var _this = _super.call(this, id, url) || this;\n        _this.error = error;\n        return _this;\n    }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    NavigationError.prototype.toString = function () {\n        return \"NavigationError(id: \" + this.id + \", url: '\" + this.url + \"', error: \" + this.error + \")\";\n    };\n    return NavigationError;\n}(RouterEvent));\n/**\n * \\@whatItDoes Represents an event triggered when routes are recognized.\n *\n * \\@stable\n */\nvar RoutesRecognized = (function (_super) {\n    __extends(RoutesRecognized, _super);\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     * @param {?} state\n     */\n    function RoutesRecognized(\n        /** @docsNotRequired */\n        id, \n        /** @docsNotRequired */\n        url, urlAfterRedirects, state) {\n        var _this = _super.call(this, id, url) || this;\n        _this.urlAfterRedirects = urlAfterRedirects;\n        _this.state = state;\n        return _this;\n    }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    RoutesRecognized.prototype.toString = function () {\n        return \"RoutesRecognized(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return RoutesRecognized;\n}(RouterEvent));\n/**\n * \\@whatItDoes Represents the start of the Guard phase of routing.\n *\n * \\@experimental\n */\nvar GuardsCheckStart = (function (_super) {\n    __extends(GuardsCheckStart, _super);\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     * @param {?} state\n     */\n    function GuardsCheckStart(\n        /** @docsNotRequired */\n        id, \n        /** @docsNotRequired */\n        url, urlAfterRedirects, state) {\n        var _this = _super.call(this, id, url) || this;\n        _this.urlAfterRedirects = urlAfterRedirects;\n        _this.state = state;\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    GuardsCheckStart.prototype.toString = function () {\n        return \"GuardsCheckStart(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return GuardsCheckStart;\n}(RouterEvent));\n/**\n * \\@whatItDoes Represents the end of the Guard phase of routing.\n *\n * \\@experimental\n */\nvar GuardsCheckEnd = (function (_super) {\n    __extends(GuardsCheckEnd, _super);\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     * @param {?} state\n     * @param {?} shouldActivate\n     */\n    function GuardsCheckEnd(\n        /** @docsNotRequired */\n        id, \n        /** @docsNotRequired */\n        url, urlAfterRedirects, state, shouldActivate) {\n        var _this = _super.call(this, id, url) || this;\n        _this.urlAfterRedirects = urlAfterRedirects;\n        _this.state = state;\n        _this.shouldActivate = shouldActivate;\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    GuardsCheckEnd.prototype.toString = function () {\n        return \"GuardsCheckEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \", shouldActivate: \" + this.shouldActivate + \")\";\n    };\n    return GuardsCheckEnd;\n}(RouterEvent));\n/**\n * \\@whatItDoes Represents the start of the Resolve phase of routing. The timing of this\n * event may change, thus it's experimental. In the current iteration it will run\n * in the \"resolve\" phase whether there's things to resolve or not. In the future this\n * behavior may change to only run when there are things to be resolved.\n *\n * \\@experimental\n */\nvar ResolveStart = (function (_super) {\n    __extends(ResolveStart, _super);\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     * @param {?} state\n     */\n    function ResolveStart(\n        /** @docsNotRequired */\n        id, \n        /** @docsNotRequired */\n        url, urlAfterRedirects, state) {\n        var _this = _super.call(this, id, url) || this;\n        _this.urlAfterRedirects = urlAfterRedirects;\n        _this.state = state;\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    ResolveStart.prototype.toString = function () {\n        return \"ResolveStart(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return ResolveStart;\n}(RouterEvent));\n/**\n * \\@whatItDoes Represents the end of the Resolve phase of routing. See note on\n * {\\@link ResolveStart} for use of this experimental API.\n *\n * \\@experimental\n */\nvar ResolveEnd = (function (_super) {\n    __extends(ResolveEnd, _super);\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     * @param {?} state\n     */\n    function ResolveEnd(\n        /** @docsNotRequired */\n        id, \n        /** @docsNotRequired */\n        url, urlAfterRedirects, state) {\n        var _this = _super.call(this, id, url) || this;\n        _this.urlAfterRedirects = urlAfterRedirects;\n        _this.state = state;\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    ResolveEnd.prototype.toString = function () {\n        return \"ResolveEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return ResolveEnd;\n}(RouterEvent));\n/**\n * \\@whatItDoes Represents an event triggered before lazy loading a route config.\n *\n * \\@experimental\n */\nvar RouteConfigLoadStart = (function (_super) {\n    __extends(RouteConfigLoadStart, _super);\n    function RouteConfigLoadStart() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @return {?}\n     */\n    RouteConfigLoadStart.prototype.toString = function () { return \"RouteConfigLoadStart(path: \" + this.route.path + \")\"; };\n    return RouteConfigLoadStart;\n}(RouteEvent));\n/**\n * \\@whatItDoes Represents an event triggered when a route has been lazy loaded.\n *\n * \\@experimental\n */\nvar RouteConfigLoadEnd = (function (_super) {\n    __extends(RouteConfigLoadEnd, _super);\n    function RouteConfigLoadEnd() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @return {?}\n     */\n    RouteConfigLoadEnd.prototype.toString = function () { return \"RouteConfigLoadEnd(path: \" + this.route.path + \")\"; };\n    return RouteConfigLoadEnd;\n}(RouteEvent));\n/**\n * \\@whatItDoes Represents the start of end of the Resolve phase of routing. See note on\n * {\\@link ChildActivationEnd} for use of this experimental API.\n *\n * \\@experimental\n */\nvar ChildActivationStart = (function (_super) {\n    __extends(ChildActivationStart, _super);\n    function ChildActivationStart() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @return {?}\n     */\n    ChildActivationStart.prototype.toString = function () { return \"ChildActivationStart(path: '\" + this.route.path + \"')\"; };\n    return ChildActivationStart;\n}(RouteEvent));\n/**\n * \\@whatItDoes Represents the start of end of the Resolve phase of routing. See note on\n * {\\@link ChildActivationStart} for use of this experimental API.\n *\n * \\@experimental\n */\nvar ChildActivationEnd = (function (_super) {\n    __extends(ChildActivationEnd, _super);\n    function ChildActivationEnd() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @return {?}\n     */\n    ChildActivationEnd.prototype.toString = function () { return \"ChildActivationEnd(path: '\" + this.route.path + \"')\"; };\n    return ChildActivationEnd;\n}(RouteEvent));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction shallowEqualArrays(a, b) {\n    if (a.length !== b.length)\n        return false;\n    for (var /** @type {?} */ i = 0; i < a.length; ++i) {\n        if (!shallowEqual(a[i], b[i]))\n            return false;\n    }\n    return true;\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction shallowEqual(a, b) {\n    var /** @type {?} */ k1 = Object.keys(a);\n    var /** @type {?} */ k2 = Object.keys(b);\n    if (k1.length != k2.length) {\n        return false;\n    }\n    var /** @type {?} */ key;\n    for (var /** @type {?} */ i = 0; i < k1.length; i++) {\n        key = k1[i];\n        if (a[key] !== b[key]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Flattens single-level nested arrays.\n * @template T\n * @param {?} arr\n * @return {?}\n */\nfunction flatten(arr) {\n    return Array.prototype.concat.apply([], arr);\n}\n/**\n * Return the last element of an array.\n * @template T\n * @param {?} a\n * @return {?}\n */\nfunction last$1(a) {\n    return a.length > 0 ? a[a.length - 1] : null;\n}\n/**\n * Verifys all booleans in an array are `true`.\n * @param {?} bools\n * @return {?}\n */\n\n/**\n * @template K, V\n * @param {?} map\n * @param {?} callback\n * @return {?}\n */\nfunction forEach(map$$1, callback) {\n    for (var /** @type {?} */ prop in map$$1) {\n        if (map$$1.hasOwnProperty(prop)) {\n            callback(map$$1[prop], prop);\n        }\n    }\n}\n/**\n * @template A, B\n * @param {?} obj\n * @param {?} fn\n * @return {?}\n */\nfunction waitForMap(obj, fn) {\n    if (Object.keys(obj).length === 0) {\n        return rxjs_observable_of.of({});\n    }\n    var /** @type {?} */ waitHead = [];\n    var /** @type {?} */ waitTail = [];\n    var /** @type {?} */ res = {};\n    forEach(obj, function (a, k) {\n        var /** @type {?} */ mapped = rxjs_operator_map.map.call(fn(k, a), function (r) { return res[k] = r; });\n        if (k === PRIMARY_OUTLET) {\n            waitHead.push(mapped);\n        }\n        else {\n            waitTail.push(mapped);\n        }\n    });\n    var /** @type {?} */ concat$ = rxjs_operator_concatAll.concatAll.call(rxjs_observable_of.of.apply(void 0, waitHead.concat(waitTail)));\n    var /** @type {?} */ last$ = rxjs_operator_last.last.call(concat$);\n    return rxjs_operator_map.map.call(last$, function () { return res; });\n}\n/**\n * ANDs Observables by merging all input observables, reducing to an Observable verifying all\n * input Observables return `true`.\n * @param {?} observables\n * @return {?}\n */\nfunction andObservables(observables) {\n    var /** @type {?} */ merged$ = rxjs_operator_mergeAll.mergeAll.call(observables);\n    return rxjs_operator_every.every.call(merged$, function (result) { return result === true; });\n}\n/**\n * @template T\n * @param {?} value\n * @return {?}\n */\nfunction wrapIntoObservable(value) {\n    if (_angular_core.ɵisObservable(value)) {\n        return value;\n    }\n    if (_angular_core.ɵisPromise(value)) {\n        // Use `Promise.resolve()` to wrap promise-like instances.\n        // Required ie when a Resolver returns a AngularJS `$q` promise to correctly trigger the\n        // change detection.\n        return rxjs_observable_fromPromise.fromPromise(Promise.resolve(value));\n    }\n    return rxjs_observable_of.of(/** @type {?} */ (value));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @return {?}\n */\nfunction createEmptyUrlTree() {\n    return new UrlTree(new UrlSegmentGroup([], {}), {}, null);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @param {?} exact\n * @return {?}\n */\nfunction containsTree(container, containee, exact) {\n    if (exact) {\n        return equalQueryParams(container.queryParams, containee.queryParams) &&\n            equalSegmentGroups(container.root, containee.root);\n    }\n    return containsQueryParams(container.queryParams, containee.queryParams) &&\n        containsSegmentGroup(container.root, containee.root);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @return {?}\n */\nfunction equalQueryParams(container, containee) {\n    return shallowEqual(container, containee);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @return {?}\n */\nfunction equalSegmentGroups(container, containee) {\n    if (!equalPath(container.segments, containee.segments))\n        return false;\n    if (container.numberOfChildren !== containee.numberOfChildren)\n        return false;\n    for (var /** @type {?} */ c in containee.children) {\n        if (!container.children[c])\n            return false;\n        if (!equalSegmentGroups(container.children[c], containee.children[c]))\n            return false;\n    }\n    return true;\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @return {?}\n */\nfunction containsQueryParams(container, containee) {\n    return Object.keys(containee).length <= Object.keys(container).length &&\n        Object.keys(containee).every(function (key) { return containee[key] === container[key]; });\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @return {?}\n */\nfunction containsSegmentGroup(container, containee) {\n    return containsSegmentGroupHelper(container, containee, containee.segments);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @param {?} containeePaths\n * @return {?}\n */\nfunction containsSegmentGroupHelper(container, containee, containeePaths) {\n    if (container.segments.length > containeePaths.length) {\n        var /** @type {?} */ current = container.segments.slice(0, containeePaths.length);\n        if (!equalPath(current, containeePaths))\n            return false;\n        if (containee.hasChildren())\n            return false;\n        return true;\n    }\n    else if (container.segments.length === containeePaths.length) {\n        if (!equalPath(container.segments, containeePaths))\n            return false;\n        for (var /** @type {?} */ c in containee.children) {\n            if (!container.children[c])\n                return false;\n            if (!containsSegmentGroup(container.children[c], containee.children[c]))\n                return false;\n        }\n        return true;\n    }\n    else {\n        var /** @type {?} */ current = containeePaths.slice(0, container.segments.length);\n        var /** @type {?} */ next = containeePaths.slice(container.segments.length);\n        if (!equalPath(container.segments, current))\n            return false;\n        if (!container.children[PRIMARY_OUTLET])\n            return false;\n        return containsSegmentGroupHelper(container.children[PRIMARY_OUTLET], containee, next);\n    }\n}\n/**\n * \\@whatItDoes Represents the parsed URL.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const tree: UrlTree =\n *       router.parseUrl('/team/33/(user/victor//support:help)?debug=true#fragment');\n *     const f = tree.fragment; // return 'fragment'\n *     const q = tree.queryParams; // returns {debug: 'true'}\n *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n *     const s: UrlSegment[] = g.segments; // returns 2 segments 'team' and '33'\n *     g.children[PRIMARY_OUTLET].segments; // returns 2 segments 'user' and 'victor'\n *     g.children['support'].segments; // return 1 segment 'help'\n *   }\n * }\n * ```\n *\n * \\@description\n *\n * Since a router state is a tree, and the URL is nothing but a serialized state, the URL is a\n * serialized tree.\n * UrlTree is a data structure that provides a lot of affordances in dealing with URLs\n *\n * \\@stable\n */\nvar UrlTree = (function () {\n    /**\n     * \\@internal\n     * @param {?} root\n     * @param {?} queryParams\n     * @param {?} fragment\n     */\n    function UrlTree(root, queryParams, fragment) {\n        this.root = root;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n    }\n    Object.defineProperty(UrlTree.prototype, \"queryParamMap\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this._queryParamMap) {\n                this._queryParamMap = convertToParamMap(this.queryParams);\n            }\n            return this._queryParamMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    UrlTree.prototype.toString = function () { return DEFAULT_SERIALIZER.serialize(this); };\n    return UrlTree;\n}());\n/**\n * \\@whatItDoes Represents the parsed URL segment group.\n *\n * See {\\@link UrlTree} for more information.\n *\n * \\@stable\n */\nvar UrlSegmentGroup = (function () {\n    /**\n     * @param {?} segments\n     * @param {?} children\n     */\n    function UrlSegmentGroup(segments, children) {\n        var _this = this;\n        this.segments = segments;\n        this.children = children;\n        /**\n         * The parent node in the url tree\n         */\n        this.parent = null;\n        forEach(children, function (v, k) { return v.parent = _this; });\n    }\n    /**\n     * Whether the segment has child segments\n     * @return {?}\n     */\n    UrlSegmentGroup.prototype.hasChildren = function () { return this.numberOfChildren > 0; };\n    Object.defineProperty(UrlSegmentGroup.prototype, \"numberOfChildren\", {\n        /**\n         * Number of child segments\n         * @return {?}\n         */\n        get: function () { return Object.keys(this.children).length; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    UrlSegmentGroup.prototype.toString = function () { return serializePaths(this); };\n    return UrlSegmentGroup;\n}());\n/**\n * \\@whatItDoes Represents a single URL segment.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const tree: UrlTree = router.parseUrl('/team;id=33');\n *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n *     const s: UrlSegment[] = g.segments;\n *     s[0].path; // returns 'team'\n *     s[0].parameters; // returns {id: 33}\n *   }\n * }\n * ```\n *\n * \\@description\n *\n * A UrlSegment is a part of a URL between the two slashes. It contains a path and the matrix\n * parameters associated with the segment.\n *\n * \\@stable\n */\nvar UrlSegment = (function () {\n    /**\n     * @param {?} path\n     * @param {?} parameters\n     */\n    function UrlSegment(path, parameters) {\n        this.path = path;\n        this.parameters = parameters;\n    }\n    Object.defineProperty(UrlSegment.prototype, \"parameterMap\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this._parameterMap) {\n                this._parameterMap = convertToParamMap(this.parameters);\n            }\n            return this._parameterMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    UrlSegment.prototype.toString = function () { return serializePath(this); };\n    return UrlSegment;\n}());\n/**\n * @param {?} as\n * @param {?} bs\n * @return {?}\n */\nfunction equalSegments(as, bs) {\n    return equalPath(as, bs) && as.every(function (a, i) { return shallowEqual(a.parameters, bs[i].parameters); });\n}\n/**\n * @param {?} as\n * @param {?} bs\n * @return {?}\n */\nfunction equalPath(as, bs) {\n    if (as.length !== bs.length)\n        return false;\n    return as.every(function (a, i) { return a.path === bs[i].path; });\n}\n/**\n * @template T\n * @param {?} segment\n * @param {?} fn\n * @return {?}\n */\nfunction mapChildrenIntoArray(segment, fn) {\n    var /** @type {?} */ res = [];\n    forEach(segment.children, function (child, childOutlet) {\n        if (childOutlet === PRIMARY_OUTLET) {\n            res = res.concat(fn(child, childOutlet));\n        }\n    });\n    forEach(segment.children, function (child, childOutlet) {\n        if (childOutlet !== PRIMARY_OUTLET) {\n            res = res.concat(fn(child, childOutlet));\n        }\n    });\n    return res;\n}\n/**\n * \\@whatItDoes Serializes and deserializes a URL string into a URL tree.\n *\n * \\@description The url serialization strategy is customizable. You can\n * make all URLs case insensitive by providing a custom UrlSerializer.\n *\n * See {\\@link DefaultUrlSerializer} for an example of a URL serializer.\n *\n * \\@stable\n * @abstract\n */\nvar UrlSerializer = (function () {\n    function UrlSerializer() {\n    }\n    return UrlSerializer;\n}());\n/**\n * \\@whatItDoes A default implementation of the {\\@link UrlSerializer}.\n *\n * \\@description\n *\n * Example URLs:\n *\n * ```\n * /inbox/33(popup:compose)\n * /inbox/33;open=true/messages/44\n * ```\n *\n * DefaultUrlSerializer uses parentheses to serialize secondary segments (e.g., popup:compose), the\n * colon syntax to specify the outlet, and the ';parameter=value' syntax (e.g., open=true) to\n * specify route specific parameters.\n *\n * \\@stable\n */\nvar DefaultUrlSerializer = (function () {\n    function DefaultUrlSerializer() {\n    }\n    /**\n     * Parses a url into a {\\@link UrlTree}\n     * @param {?} url\n     * @return {?}\n     */\n    DefaultUrlSerializer.prototype.parse = function (url) {\n        var /** @type {?} */ p = new UrlParser(url);\n        return new UrlTree(p.parseRootSegment(), p.parseQueryParams(), p.parseFragment());\n    };\n    /**\n     * Converts a {\\@link UrlTree} into a url\n     * @param {?} tree\n     * @return {?}\n     */\n    DefaultUrlSerializer.prototype.serialize = function (tree) {\n        var /** @type {?} */ segment = \"/\" + serializeSegment(tree.root, true);\n        var /** @type {?} */ query = serializeQueryParams(tree.queryParams);\n        var /** @type {?} */ fragment = typeof tree.fragment === \"string\" ? \"#\" + encodeURI((((tree.fragment)))) : '';\n        return \"\" + segment + query + fragment;\n    };\n    return DefaultUrlSerializer;\n}());\nvar DEFAULT_SERIALIZER = new DefaultUrlSerializer();\n/**\n * @param {?} segment\n * @return {?}\n */\nfunction serializePaths(segment) {\n    return segment.segments.map(function (p) { return serializePath(p); }).join('/');\n}\n/**\n * @param {?} segment\n * @param {?} root\n * @return {?}\n */\nfunction serializeSegment(segment, root) {\n    if (!segment.hasChildren()) {\n        return serializePaths(segment);\n    }\n    if (root) {\n        var /** @type {?} */ primary = segment.children[PRIMARY_OUTLET] ?\n            serializeSegment(segment.children[PRIMARY_OUTLET], false) :\n            '';\n        var /** @type {?} */ children_1 = [];\n        forEach(segment.children, function (v, k) {\n            if (k !== PRIMARY_OUTLET) {\n                children_1.push(k + \":\" + serializeSegment(v, false));\n            }\n        });\n        return children_1.length > 0 ? primary + \"(\" + children_1.join('//') + \")\" : primary;\n    }\n    else {\n        var /** @type {?} */ children = mapChildrenIntoArray(segment, function (v, k) {\n            if (k === PRIMARY_OUTLET) {\n                return [serializeSegment(segment.children[PRIMARY_OUTLET], false)];\n            }\n            return [k + \":\" + serializeSegment(v, false)];\n        });\n        return serializePaths(segment) + \"/(\" + children.join('//') + \")\";\n    }\n}\n/**\n * This method is intended for encoding *key* or *value* parts of query component. We need a custom\n * method because encodeURIComponent is too aggressive and encodes stuff that doesn't have to be\n * encoded per http://tools.ietf.org/html/rfc3986:\n *    query         = *( pchar / \"/\" / \"?\" )\n *    pchar         = unreserved / pct-encoded / sub-delims / \":\" / \"\\@\"\n *    unreserved    = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n *    pct-encoded   = \"%\" HEXDIG HEXDIG\n *    sub-delims    = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\"\n *                     / \"*\" / \"+\" / \",\" / \";\" / \"=\"\n * @param {?} s\n * @return {?}\n */\nfunction encode(s) {\n    return encodeURIComponent(s)\n        .replace(/%40/g, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/g, '$')\n        .replace(/%2C/gi, ',')\n        .replace(/%3B/gi, ';');\n}\n/**\n * @param {?} s\n * @return {?}\n */\nfunction decode(s) {\n    return decodeURIComponent(s);\n}\n/**\n * @param {?} path\n * @return {?}\n */\nfunction serializePath(path) {\n    return \"\" + encode(path.path) + serializeParams(path.parameters);\n}\n/**\n * @param {?} params\n * @return {?}\n */\nfunction serializeParams(params) {\n    return Object.keys(params).map(function (key) { return \";\" + encode(key) + \"=\" + encode(params[key]); }).join('');\n}\n/**\n * @param {?} params\n * @return {?}\n */\nfunction serializeQueryParams(params) {\n    var /** @type {?} */ strParams = Object.keys(params).map(function (name) {\n        var /** @type {?} */ value = params[name];\n        return Array.isArray(value) ? value.map(function (v) { return encode(name) + \"=\" + encode(v); }).join('&') :\n            encode(name) + \"=\" + encode(value);\n    });\n    return strParams.length ? \"?\" + strParams.join(\"&\") : '';\n}\nvar SEGMENT_RE = /^[^\\/()?;=&#]+/;\n/**\n * @param {?} str\n * @return {?}\n */\nfunction matchSegments(str) {\n    var /** @type {?} */ match = str.match(SEGMENT_RE);\n    return match ? match[0] : '';\n}\nvar QUERY_PARAM_RE = /^[^=?&#]+/;\n/**\n * @param {?} str\n * @return {?}\n */\nfunction matchQueryParams(str) {\n    var /** @type {?} */ match = str.match(QUERY_PARAM_RE);\n    return match ? match[0] : '';\n}\nvar QUERY_PARAM_VALUE_RE = /^[^?&#]+/;\n/**\n * @param {?} str\n * @return {?}\n */\nfunction matchUrlQueryParamValue(str) {\n    var /** @type {?} */ match = str.match(QUERY_PARAM_VALUE_RE);\n    return match ? match[0] : '';\n}\nvar UrlParser = (function () {\n    /**\n     * @param {?} url\n     */\n    function UrlParser(url) {\n        this.url = url;\n        this.remaining = url;\n    }\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseRootSegment = function () {\n        this.consumeOptional('/');\n        if (this.remaining === '' || this.peekStartsWith('?') || this.peekStartsWith('#')) {\n            return new UrlSegmentGroup([], {});\n        }\n        // The root segment group never has segments\n        return new UrlSegmentGroup([], this.parseChildren());\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseQueryParams = function () {\n        var /** @type {?} */ params = {};\n        if (this.consumeOptional('?')) {\n            do {\n                this.parseQueryParam(params);\n            } while (this.consumeOptional('&'));\n        }\n        return params;\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseFragment = function () {\n        return this.consumeOptional('#') ? decodeURI(this.remaining) : null;\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseChildren = function () {\n        if (this.remaining === '') {\n            return {};\n        }\n        this.consumeOptional('/');\n        var /** @type {?} */ segments = [];\n        if (!this.peekStartsWith('(')) {\n            segments.push(this.parseSegment());\n        }\n        while (this.peekStartsWith('/') && !this.peekStartsWith('//') && !this.peekStartsWith('/(')) {\n            this.capture('/');\n            segments.push(this.parseSegment());\n        }\n        var /** @type {?} */ children = {};\n        if (this.peekStartsWith('/(')) {\n            this.capture('/');\n            children = this.parseParens(true);\n        }\n        var /** @type {?} */ res = {};\n        if (this.peekStartsWith('(')) {\n            res = this.parseParens(false);\n        }\n        if (segments.length > 0 || Object.keys(children).length > 0) {\n            res[PRIMARY_OUTLET] = new UrlSegmentGroup(segments, children);\n        }\n        return res;\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseSegment = function () {\n        var /** @type {?} */ path = matchSegments(this.remaining);\n        if (path === '' && this.peekStartsWith(';')) {\n            throw new Error(\"Empty path url segment cannot have parameters: '\" + this.remaining + \"'.\");\n        }\n        this.capture(path);\n        return new UrlSegment(decode(path), this.parseMatrixParams());\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseMatrixParams = function () {\n        var /** @type {?} */ params = {};\n        while (this.consumeOptional(';')) {\n            this.parseParam(params);\n        }\n        return params;\n    };\n    /**\n     * @param {?} params\n     * @return {?}\n     */\n    UrlParser.prototype.parseParam = function (params) {\n        var /** @type {?} */ key = matchSegments(this.remaining);\n        if (!key) {\n            return;\n        }\n        this.capture(key);\n        var /** @type {?} */ value = '';\n        if (this.consumeOptional('=')) {\n            var /** @type {?} */ valueMatch = matchSegments(this.remaining);\n            if (valueMatch) {\n                value = valueMatch;\n                this.capture(value);\n            }\n        }\n        params[decode(key)] = decode(value);\n    };\n    /**\n     * @param {?} params\n     * @return {?}\n     */\n    UrlParser.prototype.parseQueryParam = function (params) {\n        var /** @type {?} */ key = matchQueryParams(this.remaining);\n        if (!key) {\n            return;\n        }\n        this.capture(key);\n        var /** @type {?} */ value = '';\n        if (this.consumeOptional('=')) {\n            var /** @type {?} */ valueMatch = matchUrlQueryParamValue(this.remaining);\n            if (valueMatch) {\n                value = valueMatch;\n                this.capture(value);\n            }\n        }\n        var /** @type {?} */ decodedKey = decode(key);\n        var /** @type {?} */ decodedVal = decode(value);\n        if (params.hasOwnProperty(decodedKey)) {\n            // Append to existing values\n            var /** @type {?} */ currentVal = params[decodedKey];\n            if (!Array.isArray(currentVal)) {\n                currentVal = [currentVal];\n                params[decodedKey] = currentVal;\n            }\n            currentVal.push(decodedVal);\n        }\n        else {\n            // Create a new value\n            params[decodedKey] = decodedVal;\n        }\n    };\n    /**\n     * @param {?} allowPrimary\n     * @return {?}\n     */\n    UrlParser.prototype.parseParens = function (allowPrimary) {\n        var /** @type {?} */ segments = {};\n        this.capture('(');\n        while (!this.consumeOptional(')') && this.remaining.length > 0) {\n            var /** @type {?} */ path = matchSegments(this.remaining);\n            var /** @type {?} */ next = this.remaining[path.length];\n            // if is is not one of these characters, then the segment was unescaped\n            // or the group was not closed\n            if (next !== '/' && next !== ')' && next !== ';') {\n                throw new Error(\"Cannot parse url '\" + this.url + \"'\");\n            }\n            var /** @type {?} */ outletName = ((undefined));\n            if (path.indexOf(':') > -1) {\n                outletName = path.substr(0, path.indexOf(':'));\n                this.capture(outletName);\n                this.capture(':');\n            }\n            else if (allowPrimary) {\n                outletName = PRIMARY_OUTLET;\n            }\n            var /** @type {?} */ children = this.parseChildren();\n            segments[outletName] = Object.keys(children).length === 1 ? children[PRIMARY_OUTLET] :\n                new UrlSegmentGroup([], children);\n            this.consumeOptional('//');\n        }\n        return segments;\n    };\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    UrlParser.prototype.peekStartsWith = function (str) { return this.remaining.startsWith(str); };\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    UrlParser.prototype.consumeOptional = function (str) {\n        if (this.peekStartsWith(str)) {\n            this.remaining = this.remaining.substring(str.length);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    UrlParser.prototype.capture = function (str) {\n        if (!this.consumeOptional(str)) {\n            throw new Error(\"Expected \\\"\" + str + \"\\\".\");\n        }\n    };\n    return UrlParser;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NoMatch = (function () {\n    /**\n     * @param {?=} segmentGroup\n     */\n    function NoMatch(segmentGroup) {\n        this.segmentGroup = segmentGroup || null;\n    }\n    return NoMatch;\n}());\nvar AbsoluteRedirect = (function () {\n    /**\n     * @param {?} urlTree\n     */\n    function AbsoluteRedirect(urlTree) {\n        this.urlTree = urlTree;\n    }\n    return AbsoluteRedirect;\n}());\n/**\n * @param {?} segmentGroup\n * @return {?}\n */\nfunction noMatch(segmentGroup) {\n    return new rxjs_Observable.Observable(function (obs) { return obs.error(new NoMatch(segmentGroup)); });\n}\n/**\n * @param {?} newTree\n * @return {?}\n */\nfunction absoluteRedirect(newTree) {\n    return new rxjs_Observable.Observable(function (obs) { return obs.error(new AbsoluteRedirect(newTree)); });\n}\n/**\n * @param {?} redirectTo\n * @return {?}\n */\nfunction namedOutletsRedirect(redirectTo) {\n    return new rxjs_Observable.Observable(function (obs) { return obs.error(new Error(\"Only absolute redirects can have named outlets. redirectTo: '\" + redirectTo + \"'\")); });\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction canLoadFails(route) {\n    return new rxjs_Observable.Observable(function (obs) { return obs.error(navigationCancelingError(\"Cannot load children because the guard of the route \\\"path: '\" + route.path + \"'\\\" returned false\")); });\n}\n/**\n * Returns the `UrlTree` with the redirection applied.\n *\n * Lazy modules are loaded along the way.\n * @param {?} moduleInjector\n * @param {?} configLoader\n * @param {?} urlSerializer\n * @param {?} urlTree\n * @param {?} config\n * @return {?}\n */\nfunction applyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config) {\n    return new ApplyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config).apply();\n}\nvar ApplyRedirects = (function () {\n    /**\n     * @param {?} moduleInjector\n     * @param {?} configLoader\n     * @param {?} urlSerializer\n     * @param {?} urlTree\n     * @param {?} config\n     */\n    function ApplyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config) {\n        this.configLoader = configLoader;\n        this.urlSerializer = urlSerializer;\n        this.urlTree = urlTree;\n        this.config = config;\n        this.allowRedirects = true;\n        this.ngModule = moduleInjector.get(_angular_core.NgModuleRef);\n    }\n    /**\n     * @return {?}\n     */\n    ApplyRedirects.prototype.apply = function () {\n        var _this = this;\n        var /** @type {?} */ expanded$ = this.expandSegmentGroup(this.ngModule, this.config, this.urlTree.root, PRIMARY_OUTLET);\n        var /** @type {?} */ urlTrees$ = rxjs_operator_map.map.call(expanded$, function (rootSegmentGroup) { return _this.createUrlTree(rootSegmentGroup, _this.urlTree.queryParams, /** @type {?} */ ((_this.urlTree.fragment))); });\n        return rxjs_operator_catch._catch.call(urlTrees$, function (e) {\n            if (e instanceof AbsoluteRedirect) {\n                // after an absolute redirect we do not apply any more redirects!\n                _this.allowRedirects = false;\n                // we need to run matching, so we can fetch all lazy-loaded modules\n                return _this.match(e.urlTree);\n            }\n            if (e instanceof NoMatch) {\n                throw _this.noMatchError(e);\n            }\n            throw e;\n        });\n    };\n    /**\n     * @param {?} tree\n     * @return {?}\n     */\n    ApplyRedirects.prototype.match = function (tree) {\n        var _this = this;\n        var /** @type {?} */ expanded$ = this.expandSegmentGroup(this.ngModule, this.config, tree.root, PRIMARY_OUTLET);\n        var /** @type {?} */ mapped$ = rxjs_operator_map.map.call(expanded$, function (rootSegmentGroup) {\n            return _this.createUrlTree(rootSegmentGroup, tree.queryParams, /** @type {?} */ ((tree.fragment)));\n        });\n        return rxjs_operator_catch._catch.call(mapped$, function (e) {\n            if (e instanceof NoMatch) {\n                throw _this.noMatchError(e);\n            }\n            throw e;\n        });\n    };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ApplyRedirects.prototype.noMatchError = function (e) {\n        return new Error(\"Cannot match any routes. URL Segment: '\" + e.segmentGroup + \"'\");\n    };\n    /**\n     * @param {?} rootCandidate\n     * @param {?} queryParams\n     * @param {?} fragment\n     * @return {?}\n     */\n    ApplyRedirects.prototype.createUrlTree = function (rootCandidate, queryParams, fragment) {\n        var /** @type {?} */ root = rootCandidate.segments.length > 0 ?\n            new UrlSegmentGroup([], (_a = {}, _a[PRIMARY_OUTLET] = rootCandidate, _a)) :\n            rootCandidate;\n        return new UrlTree(root, queryParams, fragment);\n        var _a;\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @param {?} segmentGroup\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandSegmentGroup = function (ngModule, routes, segmentGroup, outlet) {\n        if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n            return rxjs_operator_map.map.call(this.expandChildren(ngModule, routes, segmentGroup), function (children) { return new UrlSegmentGroup([], children); });\n        }\n        return this.expandSegment(ngModule, segmentGroup, routes, segmentGroup.segments, outlet, true);\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @param {?} segmentGroup\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandChildren = function (ngModule, routes, segmentGroup) {\n        var _this = this;\n        return waitForMap(segmentGroup.children, function (childOutlet, child) { return _this.expandSegmentGroup(ngModule, routes, child, childOutlet); });\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} segments\n     * @param {?} outlet\n     * @param {?} allowRedirects\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandSegment = function (ngModule, segmentGroup, routes, segments, outlet, allowRedirects) {\n        var _this = this;\n        var /** @type {?} */ routes$ = rxjs_observable_of.of.apply(void 0, routes);\n        var /** @type {?} */ processedRoutes$ = rxjs_operator_map.map.call(routes$, function (r) {\n            var /** @type {?} */ expanded$ = _this.expandSegmentAgainstRoute(ngModule, segmentGroup, routes, r, segments, outlet, allowRedirects);\n            return rxjs_operator_catch._catch.call(expanded$, function (e) {\n                if (e instanceof NoMatch) {\n                    return rxjs_observable_of.of(null);\n                }\n                throw e;\n            });\n        });\n        var /** @type {?} */ concattedProcessedRoutes$ = rxjs_operator_concatAll.concatAll.call(processedRoutes$);\n        var /** @type {?} */ first$ = rxjs_operator_first.first.call(concattedProcessedRoutes$, function (s) { return !!s; });\n        return rxjs_operator_catch._catch.call(first$, function (e, _) {\n            if (e instanceof rxjs_util_EmptyError.EmptyError) {\n                if (_this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n                    return rxjs_observable_of.of(new UrlSegmentGroup([], {}));\n                }\n                throw new NoMatch(segmentGroup);\n            }\n            throw e;\n        });\n    };\n    /**\n     * @param {?} segmentGroup\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.noLeftoversInUrl = function (segmentGroup, segments, outlet) {\n        return segments.length === 0 && !segmentGroup.children[outlet];\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} paths\n     * @param {?} outlet\n     * @param {?} allowRedirects\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandSegmentAgainstRoute = function (ngModule, segmentGroup, routes, route, paths, outlet, allowRedirects) {\n        if (getOutlet(route) !== outlet) {\n            return noMatch(segmentGroup);\n        }\n        if (route.redirectTo === undefined) {\n            return this.matchSegmentAgainstRoute(ngModule, segmentGroup, route, paths);\n        }\n        if (allowRedirects && this.allowRedirects) {\n            return this.expandSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, paths, outlet);\n        }\n        return noMatch(segmentGroup);\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandSegmentAgainstRouteUsingRedirect = function (ngModule, segmentGroup, routes, route, segments, outlet) {\n        if (route.path === '**') {\n            return this.expandWildCardWithParamsAgainstRouteUsingRedirect(ngModule, routes, route, outlet);\n        }\n        return this.expandRegularSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, segments, outlet);\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandWildCardWithParamsAgainstRouteUsingRedirect = function (ngModule, routes, route, outlet) {\n        var _this = this;\n        var /** @type {?} */ newTree = this.applyRedirectCommands([], /** @type {?} */ ((route.redirectTo)), {});\n        if (((route.redirectTo)).startsWith('/')) {\n            return absoluteRedirect(newTree);\n        }\n        return rxjs_operator_mergeMap.mergeMap.call(this.lineralizeSegments(route, newTree), function (newSegments) {\n            var /** @type {?} */ group = new UrlSegmentGroup(newSegments, {});\n            return _this.expandSegment(ngModule, group, routes, newSegments, outlet, false);\n        });\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandRegularSegmentAgainstRouteUsingRedirect = function (ngModule, segmentGroup, routes, route, segments, outlet) {\n        var _this = this;\n        var _a = match(segmentGroup, route, segments), matched = _a.matched, consumedSegments = _a.consumedSegments, lastChild = _a.lastChild, positionalParamSegments = _a.positionalParamSegments;\n        if (!matched)\n            return noMatch(segmentGroup);\n        var /** @type {?} */ newTree = this.applyRedirectCommands(consumedSegments, /** @type {?} */ ((route.redirectTo)), /** @type {?} */ (positionalParamSegments));\n        if (((route.redirectTo)).startsWith('/')) {\n            return absoluteRedirect(newTree);\n        }\n        return rxjs_operator_mergeMap.mergeMap.call(this.lineralizeSegments(route, newTree), function (newSegments) {\n            return _this.expandSegment(ngModule, segmentGroup, routes, newSegments.concat(segments.slice(lastChild)), outlet, false);\n        });\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} rawSegmentGroup\n     * @param {?} route\n     * @param {?} segments\n     * @return {?}\n     */\n    ApplyRedirects.prototype.matchSegmentAgainstRoute = function (ngModule, rawSegmentGroup, route, segments) {\n        var _this = this;\n        if (route.path === '**') {\n            if (route.loadChildren) {\n                return rxjs_operator_map.map.call(this.configLoader.load(ngModule.injector, route), function (cfg) {\n                    route._loadedConfig = cfg;\n                    return new UrlSegmentGroup(segments, {});\n                });\n            }\n            return rxjs_observable_of.of(new UrlSegmentGroup(segments, {}));\n        }\n        var _a = match(rawSegmentGroup, route, segments), matched = _a.matched, consumedSegments = _a.consumedSegments, lastChild = _a.lastChild;\n        if (!matched)\n            return noMatch(rawSegmentGroup);\n        var /** @type {?} */ rawSlicedSegments = segments.slice(lastChild);\n        var /** @type {?} */ childConfig$ = this.getChildConfig(ngModule, route);\n        return rxjs_operator_mergeMap.mergeMap.call(childConfig$, function (routerConfig) {\n            var /** @type {?} */ childModule = routerConfig.module;\n            var /** @type {?} */ childConfig = routerConfig.routes;\n            var _a = split(rawSegmentGroup, consumedSegments, rawSlicedSegments, childConfig), segmentGroup = _a.segmentGroup, slicedSegments = _a.slicedSegments;\n            if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n                var /** @type {?} */ expanded$_1 = _this.expandChildren(childModule, childConfig, segmentGroup);\n                return rxjs_operator_map.map.call(expanded$_1, function (children) { return new UrlSegmentGroup(consumedSegments, children); });\n            }\n            if (childConfig.length === 0 && slicedSegments.length === 0) {\n                return rxjs_observable_of.of(new UrlSegmentGroup(consumedSegments, {}));\n            }\n            var /** @type {?} */ expanded$ = _this.expandSegment(childModule, segmentGroup, childConfig, slicedSegments, PRIMARY_OUTLET, true);\n            return rxjs_operator_map.map.call(expanded$, function (cs) {\n                return new UrlSegmentGroup(consumedSegments.concat(cs.segments), cs.children);\n            });\n        });\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} route\n     * @return {?}\n     */\n    ApplyRedirects.prototype.getChildConfig = function (ngModule, route) {\n        var _this = this;\n        if (route.children) {\n            // The children belong to the same module\n            return rxjs_observable_of.of(new LoadedRouterConfig(route.children, ngModule));\n        }\n        if (route.loadChildren) {\n            // lazy children belong to the loaded module\n            if (route._loadedConfig !== undefined) {\n                return rxjs_observable_of.of(route._loadedConfig);\n            }\n            return rxjs_operator_mergeMap.mergeMap.call(runCanLoadGuard(ngModule.injector, route), function (shouldLoad) {\n                if (shouldLoad) {\n                    return rxjs_operator_map.map.call(_this.configLoader.load(ngModule.injector, route), function (cfg) {\n                        route._loadedConfig = cfg;\n                        return cfg;\n                    });\n                }\n                return canLoadFails(route);\n            });\n        }\n        return rxjs_observable_of.of(new LoadedRouterConfig([], ngModule));\n    };\n    /**\n     * @param {?} route\n     * @param {?} urlTree\n     * @return {?}\n     */\n    ApplyRedirects.prototype.lineralizeSegments = function (route, urlTree) {\n        var /** @type {?} */ res = [];\n        var /** @type {?} */ c = urlTree.root;\n        while (true) {\n            res = res.concat(c.segments);\n            if (c.numberOfChildren === 0) {\n                return rxjs_observable_of.of(res);\n            }\n            if (c.numberOfChildren > 1 || !c.children[PRIMARY_OUTLET]) {\n                return namedOutletsRedirect(/** @type {?} */ ((route.redirectTo)));\n            }\n            c = c.children[PRIMARY_OUTLET];\n        }\n    };\n    /**\n     * @param {?} segments\n     * @param {?} redirectTo\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.applyRedirectCommands = function (segments, redirectTo, posParams) {\n        return this.applyRedirectCreatreUrlTree(redirectTo, this.urlSerializer.parse(redirectTo), segments, posParams);\n    };\n    /**\n     * @param {?} redirectTo\n     * @param {?} urlTree\n     * @param {?} segments\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.applyRedirectCreatreUrlTree = function (redirectTo, urlTree, segments, posParams) {\n        var /** @type {?} */ newRoot = this.createSegmentGroup(redirectTo, urlTree.root, segments, posParams);\n        return new UrlTree(newRoot, this.createQueryParams(urlTree.queryParams, this.urlTree.queryParams), urlTree.fragment);\n    };\n    /**\n     * @param {?} redirectToParams\n     * @param {?} actualParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.createQueryParams = function (redirectToParams, actualParams) {\n        var /** @type {?} */ res = {};\n        forEach(redirectToParams, function (v, k) {\n            var /** @type {?} */ copySourceValue = typeof v === 'string' && v.startsWith(':');\n            if (copySourceValue) {\n                var /** @type {?} */ sourceName = v.substring(1);\n                res[k] = actualParams[sourceName];\n            }\n            else {\n                res[k] = v;\n            }\n        });\n        return res;\n    };\n    /**\n     * @param {?} redirectTo\n     * @param {?} group\n     * @param {?} segments\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.createSegmentGroup = function (redirectTo, group, segments, posParams) {\n        var _this = this;\n        var /** @type {?} */ updatedSegments = this.createSegments(redirectTo, group.segments, segments, posParams);\n        var /** @type {?} */ children = {};\n        forEach(group.children, function (child, name) {\n            children[name] = _this.createSegmentGroup(redirectTo, child, segments, posParams);\n        });\n        return new UrlSegmentGroup(updatedSegments, children);\n    };\n    /**\n     * @param {?} redirectTo\n     * @param {?} redirectToSegments\n     * @param {?} actualSegments\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.createSegments = function (redirectTo, redirectToSegments, actualSegments, posParams) {\n        var _this = this;\n        return redirectToSegments.map(function (s) { return s.path.startsWith(':') ? _this.findPosParam(redirectTo, s, posParams) :\n            _this.findOrReturn(s, actualSegments); });\n    };\n    /**\n     * @param {?} redirectTo\n     * @param {?} redirectToUrlSegment\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.findPosParam = function (redirectTo, redirectToUrlSegment, posParams) {\n        var /** @type {?} */ pos = posParams[redirectToUrlSegment.path.substring(1)];\n        if (!pos)\n            throw new Error(\"Cannot redirect to '\" + redirectTo + \"'. Cannot find '\" + redirectToUrlSegment.path + \"'.\");\n        return pos;\n    };\n    /**\n     * @param {?} redirectToUrlSegment\n     * @param {?} actualSegments\n     * @return {?}\n     */\n    ApplyRedirects.prototype.findOrReturn = function (redirectToUrlSegment, actualSegments) {\n        var /** @type {?} */ idx = 0;\n        for (var _i = 0, actualSegments_1 = actualSegments; _i < actualSegments_1.length; _i++) {\n            var s = actualSegments_1[_i];\n            if (s.path === redirectToUrlSegment.path) {\n                actualSegments.splice(idx);\n                return s;\n            }\n            idx++;\n        }\n        return redirectToUrlSegment;\n    };\n    return ApplyRedirects;\n}());\n/**\n * @param {?} moduleInjector\n * @param {?} route\n * @return {?}\n */\nfunction runCanLoadGuard(moduleInjector, route) {\n    var /** @type {?} */ canLoad = route.canLoad;\n    if (!canLoad || canLoad.length === 0)\n        return rxjs_observable_of.of(true);\n    var /** @type {?} */ obs = rxjs_operator_map.map.call(rxjs_observable_from.from(canLoad), function (injectionToken) {\n        var /** @type {?} */ guard = moduleInjector.get(injectionToken);\n        return wrapIntoObservable(guard.canLoad ? guard.canLoad(route) : guard(route));\n    });\n    return andObservables(obs);\n}\n/**\n * @param {?} segmentGroup\n * @param {?} route\n * @param {?} segments\n * @return {?}\n */\nfunction match(segmentGroup, route, segments) {\n    if (route.path === '') {\n        if ((route.pathMatch === 'full') && (segmentGroup.hasChildren() || segments.length > 0)) {\n            return { matched: false, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n        }\n        return { matched: true, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n    }\n    var /** @type {?} */ matcher = route.matcher || defaultUrlMatcher;\n    var /** @type {?} */ res = matcher(segments, segmentGroup, route);\n    if (!res) {\n        return {\n            matched: false,\n            consumedSegments: /** @type {?} */ ([]),\n            lastChild: 0,\n            positionalParamSegments: {},\n        };\n    }\n    return {\n        matched: true,\n        consumedSegments: /** @type {?} */ ((res.consumed)),\n        lastChild: /** @type {?} */ ((res.consumed.length)),\n        positionalParamSegments: /** @type {?} */ ((res.posParams)),\n    };\n}\n/**\n * @param {?} segmentGroup\n * @param {?} consumedSegments\n * @param {?} slicedSegments\n * @param {?} config\n * @return {?}\n */\nfunction split(segmentGroup, consumedSegments, slicedSegments, config) {\n    if (slicedSegments.length > 0 &&\n        containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n        var /** @type {?} */ s = new UrlSegmentGroup(consumedSegments, createChildrenForEmptySegments(config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n        return { segmentGroup: mergeTrivialChildren(s), slicedSegments: [] };\n    }\n    if (slicedSegments.length === 0 &&\n        containsEmptyPathRedirects(segmentGroup, slicedSegments, config)) {\n        var /** @type {?} */ s = new UrlSegmentGroup(segmentGroup.segments, addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, config, segmentGroup.children));\n        return { segmentGroup: mergeTrivialChildren(s), slicedSegments: slicedSegments };\n    }\n    return { segmentGroup: segmentGroup, slicedSegments: slicedSegments };\n}\n/**\n * @param {?} s\n * @return {?}\n */\nfunction mergeTrivialChildren(s) {\n    if (s.numberOfChildren === 1 && s.children[PRIMARY_OUTLET]) {\n        var /** @type {?} */ c = s.children[PRIMARY_OUTLET];\n        return new UrlSegmentGroup(s.segments.concat(c.segments), c.children);\n    }\n    return s;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} routes\n * @param {?} children\n * @return {?}\n */\nfunction addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, routes, children) {\n    var /** @type {?} */ res = {};\n    for (var _i = 0, routes_1 = routes; _i < routes_1.length; _i++) {\n        var r = routes_1[_i];\n        if (isEmptyPathRedirect(segmentGroup, slicedSegments, r) && !children[getOutlet(r)]) {\n            res[getOutlet(r)] = new UrlSegmentGroup([], {});\n        }\n    }\n    return __assign({}, children, res);\n}\n/**\n * @param {?} routes\n * @param {?} primarySegmentGroup\n * @return {?}\n */\nfunction createChildrenForEmptySegments(routes, primarySegmentGroup) {\n    var /** @type {?} */ res = {};\n    res[PRIMARY_OUTLET] = primarySegmentGroup;\n    for (var _i = 0, routes_2 = routes; _i < routes_2.length; _i++) {\n        var r = routes_2[_i];\n        if (r.path === '' && getOutlet(r) !== PRIMARY_OUTLET) {\n            res[getOutlet(r)] = new UrlSegmentGroup([], {});\n        }\n    }\n    return res;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} segments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, segments, routes) {\n    return routes.some(function (r) { return isEmptyPathRedirect(segmentGroup, segments, r) && getOutlet(r) !== PRIMARY_OUTLET; });\n}\n/**\n * @param {?} segmentGroup\n * @param {?} segments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathRedirects(segmentGroup, segments, routes) {\n    return routes.some(function (r) { return isEmptyPathRedirect(segmentGroup, segments, r); });\n}\n/**\n * @param {?} segmentGroup\n * @param {?} segments\n * @param {?} r\n * @return {?}\n */\nfunction isEmptyPathRedirect(segmentGroup, segments, r) {\n    if ((segmentGroup.hasChildren() || segments.length > 0) && r.pathMatch === 'full') {\n        return false;\n    }\n    return r.path === '' && r.redirectTo !== undefined;\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getOutlet(route) {\n    return route.outlet || PRIMARY_OUTLET;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Tree = (function () {\n    /**\n     * @param {?} root\n     */\n    function Tree(root) {\n        this._root = root;\n    }\n    Object.defineProperty(Tree.prototype, \"root\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._root.value; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.parent = function (t) {\n        var /** @type {?} */ p = this.pathFromRoot(t);\n        return p.length > 1 ? p[p.length - 2] : null;\n    };\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.children = function (t) {\n        var /** @type {?} */ n = findNode(t, this._root);\n        return n ? n.children.map(function (t) { return t.value; }) : [];\n    };\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.firstChild = function (t) {\n        var /** @type {?} */ n = findNode(t, this._root);\n        return n && n.children.length > 0 ? n.children[0].value : null;\n    };\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.siblings = function (t) {\n        var /** @type {?} */ p = findPath(t, this._root);\n        if (p.length < 2)\n            return [];\n        var /** @type {?} */ c = p[p.length - 2].children.map(function (c) { return c.value; });\n        return c.filter(function (cc) { return cc !== t; });\n    };\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.pathFromRoot = function (t) { return findPath(t, this._root).map(function (s) { return s.value; }); };\n    return Tree;\n}());\n/**\n * @template T\n * @param {?} value\n * @param {?} node\n * @return {?}\n */\nfunction findNode(value, node) {\n    if (value === node.value)\n        return node;\n    for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n        var child = _a[_i];\n        var /** @type {?} */ node_1 = findNode(value, child);\n        if (node_1)\n            return node_1;\n    }\n    return null;\n}\n/**\n * @template T\n * @param {?} value\n * @param {?} node\n * @return {?}\n */\nfunction findPath(value, node) {\n    if (value === node.value)\n        return [node];\n    for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n        var child = _a[_i];\n        var /** @type {?} */ path = findPath(value, child);\n        if (path.length) {\n            path.unshift(node);\n            return path;\n        }\n    }\n    return [];\n}\nvar TreeNode = (function () {\n    /**\n     * @param {?} value\n     * @param {?} children\n     */\n    function TreeNode(value, children) {\n        this.value = value;\n        this.children = children;\n    }\n    /**\n     * @return {?}\n     */\n    TreeNode.prototype.toString = function () { return \"TreeNode(\" + this.value + \")\"; };\n    return TreeNode;\n}());\n/**\n * @template T\n * @param {?} node\n * @return {?}\n */\nfunction nodeChildrenAsMap(node) {\n    var /** @type {?} */ map$$1 = {};\n    if (node) {\n        node.children.forEach(function (child) { return map$$1[child.value.outlet] = child; });\n    }\n    return map$$1;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@whatItDoes Represents the state of the router.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const state: RouterState = router.routerState;\n *     const root: ActivatedRoute = state.root;\n *     const child = root.firstChild;\n *     const id: Observable<string> = child.params.map(p => p.id);\n *     //...\n *   }\n * }\n * ```\n *\n * \\@description\n * RouterState is a tree of activated routes. Every node in this tree knows about the \"consumed\" URL\n * segments, the extracted parameters, and the resolved data.\n *\n * See {\\@link ActivatedRoute} for more information.\n *\n * \\@stable\n */\nvar RouterState = (function (_super) {\n    __extends(RouterState, _super);\n    /**\n     * \\@internal\n     * @param {?} root\n     * @param {?} snapshot\n     */\n    function RouterState(root, snapshot) {\n        var _this = _super.call(this, root) || this;\n        _this.snapshot = snapshot;\n        setRouterState(/** @type {?} */ (_this), root);\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    RouterState.prototype.toString = function () { return this.snapshot.toString(); };\n    return RouterState;\n}(Tree));\n/**\n * @param {?} urlTree\n * @param {?} rootComponent\n * @return {?}\n */\nfunction createEmptyState(urlTree, rootComponent) {\n    var /** @type {?} */ snapshot = createEmptyStateSnapshot(urlTree, rootComponent);\n    var /** @type {?} */ emptyUrl = new rxjs_BehaviorSubject.BehaviorSubject([new UrlSegment('', {})]);\n    var /** @type {?} */ emptyParams = new rxjs_BehaviorSubject.BehaviorSubject({});\n    var /** @type {?} */ emptyData = new rxjs_BehaviorSubject.BehaviorSubject({});\n    var /** @type {?} */ emptyQueryParams = new rxjs_BehaviorSubject.BehaviorSubject({});\n    var /** @type {?} */ fragment = new rxjs_BehaviorSubject.BehaviorSubject('');\n    var /** @type {?} */ activated = new ActivatedRoute(emptyUrl, emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, snapshot.root);\n    activated.snapshot = snapshot.root;\n    return new RouterState(new TreeNode(activated, []), snapshot);\n}\n/**\n * @param {?} urlTree\n * @param {?} rootComponent\n * @return {?}\n */\nfunction createEmptyStateSnapshot(urlTree, rootComponent) {\n    var /** @type {?} */ emptyParams = {};\n    var /** @type {?} */ emptyData = {};\n    var /** @type {?} */ emptyQueryParams = {};\n    var /** @type {?} */ fragment = '';\n    var /** @type {?} */ activated = new ActivatedRouteSnapshot([], emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, null, urlTree.root, -1, {});\n    return new RouterStateSnapshot('', new TreeNode(activated, []));\n}\n/**\n * \\@whatItDoes Contains the information about a route associated with a component loaded in an\n * outlet.\n * An `ActivatedRoute` can also be used to traverse the router state tree.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({...})\n * class MyComponent {\n *   constructor(route: ActivatedRoute) {\n *     const id: Observable<string> = route.params.map(p => p.id);\n *     const url: Observable<string> = route.url.map(segments => segments.join(''));\n *     // route.data includes both `data` and `resolve`\n *     const user = route.data.map(d => d.user);\n *   }\n * }\n * ```\n *\n * \\@stable\n */\nvar ActivatedRoute = (function () {\n    /**\n     * \\@internal\n     * @param {?} url\n     * @param {?} params\n     * @param {?} queryParams\n     * @param {?} fragment\n     * @param {?} data\n     * @param {?} outlet\n     * @param {?} component\n     * @param {?} futureSnapshot\n     */\n    function ActivatedRoute(url, params, queryParams, fragment, data, outlet, component, futureSnapshot) {\n        this.url = url;\n        this.params = params;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n        this.data = data;\n        this.outlet = outlet;\n        this.component = component;\n        this._futureSnapshot = futureSnapshot;\n    }\n    Object.defineProperty(ActivatedRoute.prototype, \"routeConfig\", {\n        /**\n         * The configuration used to match this route\n         * @return {?}\n         */\n        get: function () { return this._futureSnapshot.routeConfig; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"root\", {\n        /**\n         * The root of the router state\n         * @return {?}\n         */\n        get: function () { return this._routerState.root; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"parent\", {\n        /**\n         * The parent of this route in the router state tree\n         * @return {?}\n         */\n        get: function () { return this._routerState.parent(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"firstChild\", {\n        /**\n         * The first child of this route in the router state tree\n         * @return {?}\n         */\n        get: function () { return this._routerState.firstChild(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"children\", {\n        /**\n         * The children of this route in the router state tree\n         * @return {?}\n         */\n        get: function () { return this._routerState.children(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"pathFromRoot\", {\n        /**\n         * The path from the root of the router state tree to this route\n         * @return {?}\n         */\n        get: function () { return this._routerState.pathFromRoot(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"paramMap\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this._paramMap) {\n                this._paramMap = rxjs_operator_map.map.call(this.params, function (p) { return convertToParamMap(p); });\n            }\n            return this._paramMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"queryParamMap\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this._queryParamMap) {\n                this._queryParamMap =\n                    rxjs_operator_map.map.call(this.queryParams, function (p) { return convertToParamMap(p); });\n            }\n            return this._queryParamMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ActivatedRoute.prototype.toString = function () {\n        return this.snapshot ? this.snapshot.toString() : \"Future(\" + this._futureSnapshot + \")\";\n    };\n    return ActivatedRoute;\n}());\n/**\n * \\@internal\n * @param {?} route\n * @return {?}\n */\nfunction inheritedParamsDataResolve(route) {\n    var /** @type {?} */ pathToRoot = route.pathFromRoot;\n    var /** @type {?} */ inhertingStartingFrom = pathToRoot.length - 1;\n    while (inhertingStartingFrom >= 1) {\n        var /** @type {?} */ current = pathToRoot[inhertingStartingFrom];\n        var /** @type {?} */ parent_1 = pathToRoot[inhertingStartingFrom - 1];\n        // current route is an empty path => inherits its parent's params and data\n        if (current.routeConfig && current.routeConfig.path === '') {\n            inhertingStartingFrom--;\n            // parent is componentless => current route should inherit its params and data\n        }\n        else if (!parent_1.component) {\n            inhertingStartingFrom--;\n        }\n        else {\n            break;\n        }\n    }\n    return pathToRoot.slice(inhertingStartingFrom).reduce(function (res, curr) {\n        var /** @type {?} */ params = __assign({}, res.params, curr.params);\n        var /** @type {?} */ data = __assign({}, res.data, curr.data);\n        var /** @type {?} */ resolve = __assign({}, res.resolve, curr._resolvedData);\n        return { params: params, data: data, resolve: resolve };\n    }, /** @type {?} */ ({ params: {}, data: {}, resolve: {} }));\n}\n/**\n * \\@whatItDoes Contains the information about a route associated with a component loaded in an\n * outlet\n * at a particular moment in time. ActivatedRouteSnapshot can also be used to traverse the router\n * state tree.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'./my-component.html'})\n * class MyComponent {\n *   constructor(route: ActivatedRoute) {\n *     const id: string = route.snapshot.params.id;\n *     const url: string = route.snapshot.url.join('');\n *     const user = route.snapshot.data.user;\n *   }\n * }\n * ```\n *\n * \\@stable\n */\nvar ActivatedRouteSnapshot = (function () {\n    /**\n     * \\@internal\n     * @param {?} url\n     * @param {?} params\n     * @param {?} queryParams\n     * @param {?} fragment\n     * @param {?} data\n     * @param {?} outlet\n     * @param {?} component\n     * @param {?} routeConfig\n     * @param {?} urlSegment\n     * @param {?} lastPathIndex\n     * @param {?} resolve\n     */\n    function ActivatedRouteSnapshot(url, params, queryParams, fragment, data, outlet, component, routeConfig, urlSegment, lastPathIndex, resolve) {\n        this.url = url;\n        this.params = params;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n        this.data = data;\n        this.outlet = outlet;\n        this.component = component;\n        this._routeConfig = routeConfig;\n        this._urlSegment = urlSegment;\n        this._lastPathIndex = lastPathIndex;\n        this._resolve = resolve;\n    }\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"routeConfig\", {\n        /**\n         * The configuration used to match this route\n         * @return {?}\n         */\n        get: function () { return this._routeConfig; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"root\", {\n        /**\n         * The root of the router state\n         * @return {?}\n         */\n        get: function () { return this._routerState.root; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"parent\", {\n        /**\n         * The parent of this route in the router state tree\n         * @return {?}\n         */\n        get: function () { return this._routerState.parent(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"firstChild\", {\n        /**\n         * The first child of this route in the router state tree\n         * @return {?}\n         */\n        get: function () { return this._routerState.firstChild(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"children\", {\n        /**\n         * The children of this route in the router state tree\n         * @return {?}\n         */\n        get: function () { return this._routerState.children(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"pathFromRoot\", {\n        /**\n         * The path from the root of the router state tree to this route\n         * @return {?}\n         */\n        get: function () { return this._routerState.pathFromRoot(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"paramMap\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this._paramMap) {\n                this._paramMap = convertToParamMap(this.params);\n            }\n            return this._paramMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"queryParamMap\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this._queryParamMap) {\n                this._queryParamMap = convertToParamMap(this.queryParams);\n            }\n            return this._queryParamMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ActivatedRouteSnapshot.prototype.toString = function () {\n        var /** @type {?} */ url = this.url.map(function (segment) { return segment.toString(); }).join('/');\n        var /** @type {?} */ matched = this._routeConfig ? this._routeConfig.path : '';\n        return \"Route(url:'\" + url + \"', path:'\" + matched + \"')\";\n    };\n    return ActivatedRouteSnapshot;\n}());\n/**\n * \\@whatItDoes Represents the state of the router at a moment in time.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const state: RouterState = router.routerState;\n *     const snapshot: RouterStateSnapshot = state.snapshot;\n *     const root: ActivatedRouteSnapshot = snapshot.root;\n *     const child = root.firstChild;\n *     const id: Observable<string> = child.params.map(p => p.id);\n *     //...\n *   }\n * }\n * ```\n *\n * \\@description\n * RouterStateSnapshot is a tree of activated route snapshots. Every node in this tree knows about\n * the \"consumed\" URL segments, the extracted parameters, and the resolved data.\n *\n * \\@stable\n */\nvar RouterStateSnapshot = (function (_super) {\n    __extends(RouterStateSnapshot, _super);\n    /**\n     * \\@internal\n     * @param {?} url\n     * @param {?} root\n     */\n    function RouterStateSnapshot(url, root) {\n        var _this = _super.call(this, root) || this;\n        _this.url = url;\n        setRouterState(/** @type {?} */ (_this), root);\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    RouterStateSnapshot.prototype.toString = function () { return serializeNode(this._root); };\n    return RouterStateSnapshot;\n}(Tree));\n/**\n * @template U, T\n * @param {?} state\n * @param {?} node\n * @return {?}\n */\nfunction setRouterState(state, node) {\n    node.value._routerState = state;\n    node.children.forEach(function (c) { return setRouterState(state, c); });\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction serializeNode(node) {\n    var /** @type {?} */ c = node.children.length > 0 ? \" { \" + node.children.map(serializeNode).join(\", \") + \" } \" : '';\n    return \"\" + node.value + c;\n}\n/**\n * The expectation is that the activate route is created with the right set of parameters.\n * So we push new values into the observables only when they are not the initial values.\n * And we detect that by checking if the snapshot field is set.\n * @param {?} route\n * @return {?}\n */\nfunction advanceActivatedRoute(route) {\n    if (route.snapshot) {\n        var /** @type {?} */ currentSnapshot = route.snapshot;\n        var /** @type {?} */ nextSnapshot = route._futureSnapshot;\n        route.snapshot = nextSnapshot;\n        if (!shallowEqual(currentSnapshot.queryParams, nextSnapshot.queryParams)) {\n            ((route.queryParams)).next(nextSnapshot.queryParams);\n        }\n        if (currentSnapshot.fragment !== nextSnapshot.fragment) {\n            ((route.fragment)).next(nextSnapshot.fragment);\n        }\n        if (!shallowEqual(currentSnapshot.params, nextSnapshot.params)) {\n            ((route.params)).next(nextSnapshot.params);\n        }\n        if (!shallowEqualArrays(currentSnapshot.url, nextSnapshot.url)) {\n            ((route.url)).next(nextSnapshot.url);\n        }\n        if (!shallowEqual(currentSnapshot.data, nextSnapshot.data)) {\n            ((route.data)).next(nextSnapshot.data);\n        }\n    }\n    else {\n        route.snapshot = route._futureSnapshot;\n        // this is for resolved data\n        ((route.data)).next(route._futureSnapshot.data);\n    }\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction equalParamsAndUrlSegments(a, b) {\n    var /** @type {?} */ equalUrlParams = shallowEqual(a.params, b.params) && equalSegments(a.url, b.url);\n    var /** @type {?} */ parentsMismatch = !a.parent !== !b.parent;\n    return equalUrlParams && !parentsMismatch &&\n        (!a.parent || equalParamsAndUrlSegments(a.parent, /** @type {?} */ ((b.parent))));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} routeReuseStrategy\n * @param {?} curr\n * @param {?} prevState\n * @return {?}\n */\nfunction createRouterState(routeReuseStrategy, curr, prevState) {\n    var /** @type {?} */ root = createNode(routeReuseStrategy, curr._root, prevState ? prevState._root : undefined);\n    return new RouterState(root, curr);\n}\n/**\n * @param {?} routeReuseStrategy\n * @param {?} curr\n * @param {?=} prevState\n * @return {?}\n */\nfunction createNode(routeReuseStrategy, curr, prevState) {\n    // reuse an activated route that is currently displayed on the screen\n    if (prevState && routeReuseStrategy.shouldReuseRoute(curr.value, prevState.value.snapshot)) {\n        var /** @type {?} */ value = prevState.value;\n        value._futureSnapshot = curr.value;\n        var /** @type {?} */ children = createOrReuseChildren(routeReuseStrategy, curr, prevState);\n        return new TreeNode(value, children);\n        // retrieve an activated route that is used to be displayed, but is not currently displayed\n    }\n    else if (routeReuseStrategy.retrieve(curr.value)) {\n        var /** @type {?} */ tree = ((routeReuseStrategy.retrieve(curr.value))).route;\n        setFutureSnapshotsOfActivatedRoutes(curr, tree);\n        return tree;\n    }\n    else {\n        var /** @type {?} */ value = createActivatedRoute(curr.value);\n        var /** @type {?} */ children = curr.children.map(function (c) { return createNode(routeReuseStrategy, c); });\n        return new TreeNode(value, children);\n    }\n}\n/**\n * @param {?} curr\n * @param {?} result\n * @return {?}\n */\nfunction setFutureSnapshotsOfActivatedRoutes(curr, result) {\n    if (curr.value.routeConfig !== result.value.routeConfig) {\n        throw new Error('Cannot reattach ActivatedRouteSnapshot created from a different route');\n    }\n    if (curr.children.length !== result.children.length) {\n        throw new Error('Cannot reattach ActivatedRouteSnapshot with a different number of children');\n    }\n    result.value._futureSnapshot = curr.value;\n    for (var /** @type {?} */ i = 0; i < curr.children.length; ++i) {\n        setFutureSnapshotsOfActivatedRoutes(curr.children[i], result.children[i]);\n    }\n}\n/**\n * @param {?} routeReuseStrategy\n * @param {?} curr\n * @param {?} prevState\n * @return {?}\n */\nfunction createOrReuseChildren(routeReuseStrategy, curr, prevState) {\n    return curr.children.map(function (child) {\n        for (var _i = 0, _a = prevState.children; _i < _a.length; _i++) {\n            var p = _a[_i];\n            if (routeReuseStrategy.shouldReuseRoute(p.value.snapshot, child.value)) {\n                return createNode(routeReuseStrategy, child, p);\n            }\n        }\n        return createNode(routeReuseStrategy, child);\n    });\n}\n/**\n * @param {?} c\n * @return {?}\n */\nfunction createActivatedRoute(c) {\n    return new ActivatedRoute(new rxjs_BehaviorSubject.BehaviorSubject(c.url), new rxjs_BehaviorSubject.BehaviorSubject(c.params), new rxjs_BehaviorSubject.BehaviorSubject(c.queryParams), new rxjs_BehaviorSubject.BehaviorSubject(c.fragment), new rxjs_BehaviorSubject.BehaviorSubject(c.data), c.outlet, c.component, c);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} route\n * @param {?} urlTree\n * @param {?} commands\n * @param {?} queryParams\n * @param {?} fragment\n * @return {?}\n */\nfunction createUrlTree(route, urlTree, commands, queryParams, fragment) {\n    if (commands.length === 0) {\n        return tree(urlTree.root, urlTree.root, urlTree, queryParams, fragment);\n    }\n    var /** @type {?} */ nav = computeNavigation(commands);\n    if (nav.toRoot()) {\n        return tree(urlTree.root, new UrlSegmentGroup([], {}), urlTree, queryParams, fragment);\n    }\n    var /** @type {?} */ startingPosition = findStartingPosition(nav, urlTree, route);\n    var /** @type {?} */ segmentGroup = startingPosition.processChildren ?\n        updateSegmentGroupChildren(startingPosition.segmentGroup, startingPosition.index, nav.commands) :\n        updateSegmentGroup(startingPosition.segmentGroup, startingPosition.index, nav.commands);\n    return tree(startingPosition.segmentGroup, segmentGroup, urlTree, queryParams, fragment);\n}\n/**\n * @param {?} command\n * @return {?}\n */\nfunction isMatrixParams(command) {\n    return typeof command === 'object' && command != null && !command.outlets && !command.segmentPath;\n}\n/**\n * @param {?} oldSegmentGroup\n * @param {?} newSegmentGroup\n * @param {?} urlTree\n * @param {?} queryParams\n * @param {?} fragment\n * @return {?}\n */\nfunction tree(oldSegmentGroup, newSegmentGroup, urlTree, queryParams, fragment) {\n    var /** @type {?} */ qp = {};\n    if (queryParams) {\n        forEach(queryParams, function (value, name) {\n            qp[name] = Array.isArray(value) ? value.map(function (v) { return \"\" + v; }) : \"\" + value;\n        });\n    }\n    if (urlTree.root === oldSegmentGroup) {\n        return new UrlTree(newSegmentGroup, qp, fragment);\n    }\n    return new UrlTree(replaceSegment(urlTree.root, oldSegmentGroup, newSegmentGroup), qp, fragment);\n}\n/**\n * @param {?} current\n * @param {?} oldSegment\n * @param {?} newSegment\n * @return {?}\n */\nfunction replaceSegment(current, oldSegment, newSegment) {\n    var /** @type {?} */ children = {};\n    forEach(current.children, function (c, outletName) {\n        if (c === oldSegment) {\n            children[outletName] = newSegment;\n        }\n        else {\n            children[outletName] = replaceSegment(c, oldSegment, newSegment);\n        }\n    });\n    return new UrlSegmentGroup(current.segments, children);\n}\nvar Navigation = (function () {\n    /**\n     * @param {?} isAbsolute\n     * @param {?} numberOfDoubleDots\n     * @param {?} commands\n     */\n    function Navigation(isAbsolute, numberOfDoubleDots, commands) {\n        this.isAbsolute = isAbsolute;\n        this.numberOfDoubleDots = numberOfDoubleDots;\n        this.commands = commands;\n        if (isAbsolute && commands.length > 0 && isMatrixParams(commands[0])) {\n            throw new Error('Root segment cannot have matrix parameters');\n        }\n        var /** @type {?} */ cmdWithOutlet = commands.find(function (c) { return typeof c === 'object' && c != null && c.outlets; });\n        if (cmdWithOutlet && cmdWithOutlet !== last$1(commands)) {\n            throw new Error('{outlets:{}} has to be the last command');\n        }\n    }\n    /**\n     * @return {?}\n     */\n    Navigation.prototype.toRoot = function () {\n        return this.isAbsolute && this.commands.length === 1 && this.commands[0] == '/';\n    };\n    return Navigation;\n}());\n/**\n * Transforms commands to a normalized `Navigation`\n * @param {?} commands\n * @return {?}\n */\nfunction computeNavigation(commands) {\n    if ((typeof commands[0] === 'string') && commands.length === 1 && commands[0] === '/') {\n        return new Navigation(true, 0, commands);\n    }\n    var /** @type {?} */ numberOfDoubleDots = 0;\n    var /** @type {?} */ isAbsolute = false;\n    var /** @type {?} */ res = commands.reduce(function (res, cmd, cmdIdx) {\n        if (typeof cmd === 'object' && cmd != null) {\n            if (cmd.outlets) {\n                var /** @type {?} */ outlets_1 = {};\n                forEach(cmd.outlets, function (commands, name) {\n                    outlets_1[name] = typeof commands === 'string' ? commands.split('/') : commands;\n                });\n                return res.concat([{ outlets: outlets_1 }]);\n            }\n            if (cmd.segmentPath) {\n                return res.concat([cmd.segmentPath]);\n            }\n        }\n        if (!(typeof cmd === 'string')) {\n            return res.concat([cmd]);\n        }\n        if (cmdIdx === 0) {\n            cmd.split('/').forEach(function (urlPart, partIndex) {\n                if (partIndex == 0 && urlPart === '.') {\n                    // skip './a'\n                }\n                else if (partIndex == 0 && urlPart === '') {\n                    isAbsolute = true;\n                }\n                else if (urlPart === '..') {\n                    numberOfDoubleDots++;\n                }\n                else if (urlPart != '') {\n                    res.push(urlPart);\n                }\n            });\n            return res;\n        }\n        return res.concat([cmd]);\n    }, []);\n    return new Navigation(isAbsolute, numberOfDoubleDots, res);\n}\nvar Position = (function () {\n    /**\n     * @param {?} segmentGroup\n     * @param {?} processChildren\n     * @param {?} index\n     */\n    function Position(segmentGroup, processChildren, index) {\n        this.segmentGroup = segmentGroup;\n        this.processChildren = processChildren;\n        this.index = index;\n    }\n    return Position;\n}());\n/**\n * @param {?} nav\n * @param {?} tree\n * @param {?} route\n * @return {?}\n */\nfunction findStartingPosition(nav, tree, route) {\n    if (nav.isAbsolute) {\n        return new Position(tree.root, true, 0);\n    }\n    if (route.snapshot._lastPathIndex === -1) {\n        return new Position(route.snapshot._urlSegment, true, 0);\n    }\n    var /** @type {?} */ modifier = isMatrixParams(nav.commands[0]) ? 0 : 1;\n    var /** @type {?} */ index = route.snapshot._lastPathIndex + modifier;\n    return createPositionApplyingDoubleDots(route.snapshot._urlSegment, index, nav.numberOfDoubleDots);\n}\n/**\n * @param {?} group\n * @param {?} index\n * @param {?} numberOfDoubleDots\n * @return {?}\n */\nfunction createPositionApplyingDoubleDots(group, index, numberOfDoubleDots) {\n    var /** @type {?} */ g = group;\n    var /** @type {?} */ ci = index;\n    var /** @type {?} */ dd = numberOfDoubleDots;\n    while (dd > ci) {\n        dd -= ci;\n        g = ((g.parent));\n        if (!g) {\n            throw new Error('Invalid number of \\'../\\'');\n        }\n        ci = g.segments.length;\n    }\n    return new Position(g, false, ci - dd);\n}\n/**\n * @param {?} command\n * @return {?}\n */\nfunction getPath(command) {\n    if (typeof command === 'object' && command != null && command.outlets) {\n        return command.outlets[PRIMARY_OUTLET];\n    }\n    return \"\" + command;\n}\n/**\n * @param {?} commands\n * @return {?}\n */\nfunction getOutlets(commands) {\n    if (!(typeof commands[0] === 'object'))\n        return _a = {}, _a[PRIMARY_OUTLET] = commands, _a;\n    if (commands[0].outlets === undefined)\n        return _b = {}, _b[PRIMARY_OUTLET] = commands, _b;\n    return commands[0].outlets;\n    var _a, _b;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction updateSegmentGroup(segmentGroup, startIndex, commands) {\n    if (!segmentGroup) {\n        segmentGroup = new UrlSegmentGroup([], {});\n    }\n    if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n        return updateSegmentGroupChildren(segmentGroup, startIndex, commands);\n    }\n    var /** @type {?} */ m = prefixedWith(segmentGroup, startIndex, commands);\n    var /** @type {?} */ slicedCommands = commands.slice(m.commandIndex);\n    if (m.match && m.pathIndex < segmentGroup.segments.length) {\n        var /** @type {?} */ g = new UrlSegmentGroup(segmentGroup.segments.slice(0, m.pathIndex), {});\n        g.children[PRIMARY_OUTLET] =\n            new UrlSegmentGroup(segmentGroup.segments.slice(m.pathIndex), segmentGroup.children);\n        return updateSegmentGroupChildren(g, 0, slicedCommands);\n    }\n    else if (m.match && slicedCommands.length === 0) {\n        return new UrlSegmentGroup(segmentGroup.segments, {});\n    }\n    else if (m.match && !segmentGroup.hasChildren()) {\n        return createNewSegmentGroup(segmentGroup, startIndex, commands);\n    }\n    else if (m.match) {\n        return updateSegmentGroupChildren(segmentGroup, 0, slicedCommands);\n    }\n    else {\n        return createNewSegmentGroup(segmentGroup, startIndex, commands);\n    }\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction updateSegmentGroupChildren(segmentGroup, startIndex, commands) {\n    if (commands.length === 0) {\n        return new UrlSegmentGroup(segmentGroup.segments, {});\n    }\n    else {\n        var /** @type {?} */ outlets_2 = getOutlets(commands);\n        var /** @type {?} */ children_1 = {};\n        forEach(outlets_2, function (commands, outlet) {\n            if (commands !== null) {\n                children_1[outlet] = updateSegmentGroup(segmentGroup.children[outlet], startIndex, commands);\n            }\n        });\n        forEach(segmentGroup.children, function (child, childOutlet) {\n            if (outlets_2[childOutlet] === undefined) {\n                children_1[childOutlet] = child;\n            }\n        });\n        return new UrlSegmentGroup(segmentGroup.segments, children_1);\n    }\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction prefixedWith(segmentGroup, startIndex, commands) {\n    var /** @type {?} */ currentCommandIndex = 0;\n    var /** @type {?} */ currentPathIndex = startIndex;\n    var /** @type {?} */ noMatch = { match: false, pathIndex: 0, commandIndex: 0 };\n    while (currentPathIndex < segmentGroup.segments.length) {\n        if (currentCommandIndex >= commands.length)\n            return noMatch;\n        var /** @type {?} */ path = segmentGroup.segments[currentPathIndex];\n        var /** @type {?} */ curr = getPath(commands[currentCommandIndex]);\n        var /** @type {?} */ next = currentCommandIndex < commands.length - 1 ? commands[currentCommandIndex + 1] : null;\n        if (currentPathIndex > 0 && curr === undefined)\n            break;\n        if (curr && next && (typeof next === 'object') && next.outlets === undefined) {\n            if (!compare(curr, next, path))\n                return noMatch;\n            currentCommandIndex += 2;\n        }\n        else {\n            if (!compare(curr, {}, path))\n                return noMatch;\n            currentCommandIndex++;\n        }\n        currentPathIndex++;\n    }\n    return { match: true, pathIndex: currentPathIndex, commandIndex: currentCommandIndex };\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction createNewSegmentGroup(segmentGroup, startIndex, commands) {\n    var /** @type {?} */ paths = segmentGroup.segments.slice(0, startIndex);\n    var /** @type {?} */ i = 0;\n    while (i < commands.length) {\n        if (typeof commands[i] === 'object' && commands[i].outlets !== undefined) {\n            var /** @type {?} */ children = createNewSegmentChildren(commands[i].outlets);\n            return new UrlSegmentGroup(paths, children);\n        }\n        // if we start with an object literal, we need to reuse the path part from the segment\n        if (i === 0 && isMatrixParams(commands[0])) {\n            var /** @type {?} */ p = segmentGroup.segments[startIndex];\n            paths.push(new UrlSegment(p.path, commands[0]));\n            i++;\n            continue;\n        }\n        var /** @type {?} */ curr = getPath(commands[i]);\n        var /** @type {?} */ next = (i < commands.length - 1) ? commands[i + 1] : null;\n        if (curr && next && isMatrixParams(next)) {\n            paths.push(new UrlSegment(curr, stringify(next)));\n            i += 2;\n        }\n        else {\n            paths.push(new UrlSegment(curr, {}));\n            i++;\n        }\n    }\n    return new UrlSegmentGroup(paths, {});\n}\n/**\n * @param {?} outlets\n * @return {?}\n */\nfunction createNewSegmentChildren(outlets) {\n    var /** @type {?} */ children = {};\n    forEach(outlets, function (commands, outlet) {\n        if (commands !== null) {\n            children[outlet] = createNewSegmentGroup(new UrlSegmentGroup([], {}), 0, commands);\n        }\n    });\n    return children;\n}\n/**\n * @param {?} params\n * @return {?}\n */\nfunction stringify(params) {\n    var /** @type {?} */ res = {};\n    forEach(params, function (v, k) { return res[k] = \"\" + v; });\n    return res;\n}\n/**\n * @param {?} path\n * @param {?} params\n * @param {?} segment\n * @return {?}\n */\nfunction compare(path, params, segment) {\n    return path == segment.path && shallowEqual(params, segment.parameters);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar CanActivate = (function () {\n    /**\n     * @param {?} path\n     */\n    function CanActivate(path) {\n        this.path = path;\n    }\n    Object.defineProperty(CanActivate.prototype, \"route\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.path[this.path.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    return CanActivate;\n}());\nvar CanDeactivate = (function () {\n    /**\n     * @param {?} component\n     * @param {?} route\n     */\n    function CanDeactivate(component, route) {\n        this.component = component;\n        this.route = route;\n    }\n    return CanDeactivate;\n}());\n/**\n * This class bundles the actions involved in preactivation of a route.\n */\nvar PreActivation = (function () {\n    /**\n     * @param {?} future\n     * @param {?} curr\n     * @param {?} moduleInjector\n     * @param {?=} forwardEvent\n     */\n    function PreActivation(future, curr, moduleInjector, forwardEvent) {\n        this.future = future;\n        this.curr = curr;\n        this.moduleInjector = moduleInjector;\n        this.forwardEvent = forwardEvent;\n        this.canActivateChecks = [];\n        this.canDeactivateChecks = [];\n    }\n    /**\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    PreActivation.prototype.initalize = function (parentContexts) {\n        var /** @type {?} */ futureRoot = this.future._root;\n        var /** @type {?} */ currRoot = this.curr ? this.curr._root : null;\n        this.setupChildRouteGuards(futureRoot, currRoot, parentContexts, [futureRoot.value]);\n    };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.checkGuards = function () {\n        var _this = this;\n        if (!this.isDeactivating() && !this.isActivating()) {\n            return rxjs_observable_of.of(true);\n        }\n        var /** @type {?} */ canDeactivate$ = this.runCanDeactivateChecks();\n        return rxjs_operator_mergeMap.mergeMap.call(canDeactivate$, function (canDeactivate) { return canDeactivate ? _this.runCanActivateChecks() : rxjs_observable_of.of(false); });\n    };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.resolveData = function () {\n        var _this = this;\n        if (!this.isActivating())\n            return rxjs_observable_of.of(null);\n        var /** @type {?} */ checks$ = rxjs_observable_from.from(this.canActivateChecks);\n        var /** @type {?} */ runningChecks$ = rxjs_operator_concatMap.concatMap.call(checks$, function (check) { return _this.runResolve(check.route); });\n        return rxjs_operator_reduce.reduce.call(runningChecks$, function (_, __) { return _; });\n    };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.isDeactivating = function () { return this.canDeactivateChecks.length !== 0; };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.isActivating = function () { return this.canActivateChecks.length !== 0; };\n    /**\n     * Iterates over child routes and calls recursive `setupRouteGuards` to get `this` instance in\n     * proper state to run `checkGuards()` method.\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} contexts\n     * @param {?} futurePath\n     * @return {?}\n     */\n    PreActivation.prototype.setupChildRouteGuards = function (futureNode, currNode, contexts, futurePath) {\n        var _this = this;\n        var /** @type {?} */ prevChildren = nodeChildrenAsMap(currNode);\n        // Process the children of the future route\n        futureNode.children.forEach(function (c) {\n            _this.setupRouteGuards(c, prevChildren[c.value.outlet], contexts, futurePath.concat([c.value]));\n            delete prevChildren[c.value.outlet];\n        });\n        // Process any children left from the current route (not active for the future route)\n        forEach(prevChildren, function (v, k) {\n            return _this.deactivateRouteAndItsChildren(v, /** @type {?} */ ((contexts)).getContext(k));\n        });\n    };\n    /**\n     * Iterates over child routes and calls recursive `setupRouteGuards` to get `this` instance in\n     * proper state to run `checkGuards()` method.\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} parentContexts\n     * @param {?} futurePath\n     * @return {?}\n     */\n    PreActivation.prototype.setupRouteGuards = function (futureNode, currNode, parentContexts, futurePath) {\n        var /** @type {?} */ future = futureNode.value;\n        var /** @type {?} */ curr = currNode ? currNode.value : null;\n        var /** @type {?} */ context = parentContexts ? parentContexts.getContext(futureNode.value.outlet) : null;\n        // reusing the node\n        if (curr && future._routeConfig === curr._routeConfig) {\n            var /** @type {?} */ shouldRunGuardsAndResolvers = this.shouldRunGuardsAndResolvers(curr, future, /** @type {?} */ ((future._routeConfig)).runGuardsAndResolvers);\n            if (shouldRunGuardsAndResolvers) {\n                this.canActivateChecks.push(new CanActivate(futurePath));\n            }\n            else {\n                // we need to set the data\n                future.data = curr.data;\n                future._resolvedData = curr._resolvedData;\n            }\n            // If we have a component, we need to go through an outlet.\n            if (future.component) {\n                this.setupChildRouteGuards(futureNode, currNode, context ? context.children : null, futurePath);\n                // if we have a componentless route, we recurse but keep the same outlet map.\n            }\n            else {\n                this.setupChildRouteGuards(futureNode, currNode, parentContexts, futurePath);\n            }\n            if (shouldRunGuardsAndResolvers) {\n                var /** @type {?} */ outlet = ((((context)).outlet));\n                this.canDeactivateChecks.push(new CanDeactivate(outlet.component, curr));\n            }\n        }\n        else {\n            if (curr) {\n                this.deactivateRouteAndItsChildren(currNode, context);\n            }\n            this.canActivateChecks.push(new CanActivate(futurePath));\n            // If we have a component, we need to go through an outlet.\n            if (future.component) {\n                this.setupChildRouteGuards(futureNode, null, context ? context.children : null, futurePath);\n                // if we have a componentless route, we recurse but keep the same outlet map.\n            }\n            else {\n                this.setupChildRouteGuards(futureNode, null, parentContexts, futurePath);\n            }\n        }\n    };\n    /**\n     * @param {?} curr\n     * @param {?} future\n     * @param {?} mode\n     * @return {?}\n     */\n    PreActivation.prototype.shouldRunGuardsAndResolvers = function (curr, future, mode) {\n        switch (mode) {\n            case 'always':\n                return true;\n            case 'paramsOrQueryParamsChange':\n                return !equalParamsAndUrlSegments(curr, future) ||\n                    !shallowEqual(curr.queryParams, future.queryParams);\n            case 'paramsChange':\n            default:\n                return !equalParamsAndUrlSegments(curr, future);\n        }\n    };\n    /**\n     * @param {?} route\n     * @param {?} context\n     * @return {?}\n     */\n    PreActivation.prototype.deactivateRouteAndItsChildren = function (route, context) {\n        var _this = this;\n        var /** @type {?} */ children = nodeChildrenAsMap(route);\n        var /** @type {?} */ r = route.value;\n        forEach(children, function (node, childName) {\n            if (!r.component) {\n                _this.deactivateRouteAndItsChildren(node, context);\n            }\n            else if (context) {\n                _this.deactivateRouteAndItsChildren(node, context.children.getContext(childName));\n            }\n            else {\n                _this.deactivateRouteAndItsChildren(node, null);\n            }\n        });\n        if (!r.component) {\n            this.canDeactivateChecks.push(new CanDeactivate(null, r));\n        }\n        else if (context && context.outlet && context.outlet.isActivated) {\n            this.canDeactivateChecks.push(new CanDeactivate(context.outlet.component, r));\n        }\n        else {\n            this.canDeactivateChecks.push(new CanDeactivate(null, r));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.runCanDeactivateChecks = function () {\n        var _this = this;\n        var /** @type {?} */ checks$ = rxjs_observable_from.from(this.canDeactivateChecks);\n        var /** @type {?} */ runningChecks$ = rxjs_operator_mergeMap.mergeMap.call(checks$, function (check) { return _this.runCanDeactivate(check.component, check.route); });\n        return rxjs_operator_every.every.call(runningChecks$, function (result) { return result === true; });\n    };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.runCanActivateChecks = function () {\n        var _this = this;\n        var /** @type {?} */ checks$ = rxjs_observable_from.from(this.canActivateChecks);\n        var /** @type {?} */ runningChecks$ = rxjs_operator_concatMap.concatMap.call(checks$, function (check) { return andObservables(rxjs_observable_from.from([\n            _this.fireChildActivationStart(check.path), _this.runCanActivateChild(check.path),\n            _this.runCanActivate(check.route)\n        ])); });\n        return rxjs_operator_every.every.call(runningChecks$, function (result) { return result === true; });\n        // this.fireChildActivationStart(check.path),\n    };\n    /**\n     * This should fire off `ChildActivationStart` events for each route being activated at this\n     * level.\n     * In other words, if you're activating `a` and `b` below, `path` will contain the\n     * `ActivatedRouteSnapshot`s for both and we will fire `ChildActivationStart` for both. Always\n     * return\n     * `true` so checks continue to run.\n     * @param {?} path\n     * @return {?}\n     */\n    PreActivation.prototype.fireChildActivationStart = function (path) {\n        var _this = this;\n        if (!this.forwardEvent)\n            return rxjs_observable_of.of(true);\n        var /** @type {?} */ childActivations = path.slice(0, path.length - 1).reverse().filter(function (_) { return _ !== null; });\n        return andObservables(rxjs_operator_map.map.call(rxjs_observable_from.from(childActivations), function (snapshot) {\n            if (_this.forwardEvent && snapshot._routeConfig) {\n                _this.forwardEvent(new ChildActivationStart(snapshot._routeConfig));\n            }\n            return rxjs_observable_of.of(true);\n        }));\n    };\n    /**\n     * @param {?} future\n     * @return {?}\n     */\n    PreActivation.prototype.runCanActivate = function (future) {\n        var _this = this;\n        var /** @type {?} */ canActivate = future._routeConfig ? future._routeConfig.canActivate : null;\n        if (!canActivate || canActivate.length === 0)\n            return rxjs_observable_of.of(true);\n        var /** @type {?} */ obs = rxjs_operator_map.map.call(rxjs_observable_from.from(canActivate), function (c) {\n            var /** @type {?} */ guard = _this.getToken(c, future);\n            var /** @type {?} */ observable;\n            if (guard.canActivate) {\n                observable = wrapIntoObservable(guard.canActivate(future, _this.future));\n            }\n            else {\n                observable = wrapIntoObservable(guard(future, _this.future));\n            }\n            return rxjs_operator_first.first.call(observable);\n        });\n        return andObservables(obs);\n    };\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    PreActivation.prototype.runCanActivateChild = function (path) {\n        var _this = this;\n        var /** @type {?} */ future = path[path.length - 1];\n        var /** @type {?} */ canActivateChildGuards = path.slice(0, path.length - 1)\n            .reverse()\n            .map(function (p) { return _this.extractCanActivateChild(p); })\n            .filter(function (_) { return _ !== null; });\n        return andObservables(rxjs_operator_map.map.call(rxjs_observable_from.from(canActivateChildGuards), function (d) {\n            var /** @type {?} */ obs = rxjs_operator_map.map.call(rxjs_observable_from.from(d.guards), function (c) {\n                var /** @type {?} */ guard = _this.getToken(c, d.node);\n                var /** @type {?} */ observable;\n                if (guard.canActivateChild) {\n                    observable = wrapIntoObservable(guard.canActivateChild(future, _this.future));\n                }\n                else {\n                    observable = wrapIntoObservable(guard(future, _this.future));\n                }\n                return rxjs_operator_first.first.call(observable);\n            });\n            return andObservables(obs);\n        }));\n    };\n    /**\n     * @param {?} p\n     * @return {?}\n     */\n    PreActivation.prototype.extractCanActivateChild = function (p) {\n        var /** @type {?} */ canActivateChild = p._routeConfig ? p._routeConfig.canActivateChild : null;\n        if (!canActivateChild || canActivateChild.length === 0)\n            return null;\n        return { node: p, guards: canActivateChild };\n    };\n    /**\n     * @param {?} component\n     * @param {?} curr\n     * @return {?}\n     */\n    PreActivation.prototype.runCanDeactivate = function (component, curr) {\n        var _this = this;\n        var /** @type {?} */ canDeactivate = curr && curr._routeConfig ? curr._routeConfig.canDeactivate : null;\n        if (!canDeactivate || canDeactivate.length === 0)\n            return rxjs_observable_of.of(true);\n        var /** @type {?} */ canDeactivate$ = rxjs_operator_mergeMap.mergeMap.call(rxjs_observable_from.from(canDeactivate), function (c) {\n            var /** @type {?} */ guard = _this.getToken(c, curr);\n            var /** @type {?} */ observable;\n            if (guard.canDeactivate) {\n                observable =\n                    wrapIntoObservable(guard.canDeactivate(component, curr, _this.curr, _this.future));\n            }\n            else {\n                observable = wrapIntoObservable(guard(component, curr, _this.curr, _this.future));\n            }\n            return rxjs_operator_first.first.call(observable);\n        });\n        return rxjs_operator_every.every.call(canDeactivate$, function (result) { return result === true; });\n    };\n    /**\n     * @param {?} future\n     * @return {?}\n     */\n    PreActivation.prototype.runResolve = function (future) {\n        var /** @type {?} */ resolve = future._resolve;\n        return rxjs_operator_map.map.call(this.resolveNode(resolve, future), function (resolvedData) {\n            future._resolvedData = resolvedData;\n            future.data = __assign({}, future.data, inheritedParamsDataResolve(future).resolve);\n            return null;\n        });\n    };\n    /**\n     * @param {?} resolve\n     * @param {?} future\n     * @return {?}\n     */\n    PreActivation.prototype.resolveNode = function (resolve, future) {\n        var _this = this;\n        var /** @type {?} */ keys = Object.keys(resolve);\n        if (keys.length === 0) {\n            return rxjs_observable_of.of({});\n        }\n        if (keys.length === 1) {\n            var /** @type {?} */ key_1 = keys[0];\n            return rxjs_operator_map.map.call(this.getResolver(resolve[key_1], future), function (value) {\n                return _a = {}, _a[key_1] = value, _a;\n                var _a;\n            });\n        }\n        var /** @type {?} */ data = {};\n        var /** @type {?} */ runningResolvers$ = rxjs_operator_mergeMap.mergeMap.call(rxjs_observable_from.from(keys), function (key) {\n            return rxjs_operator_map.map.call(_this.getResolver(resolve[key], future), function (value) {\n                data[key] = value;\n                return value;\n            });\n        });\n        return rxjs_operator_map.map.call(rxjs_operator_last.last.call(runningResolvers$), function () { return data; });\n    };\n    /**\n     * @param {?} injectionToken\n     * @param {?} future\n     * @return {?}\n     */\n    PreActivation.prototype.getResolver = function (injectionToken, future) {\n        var /** @type {?} */ resolver = this.getToken(injectionToken, future);\n        return resolver.resolve ? wrapIntoObservable(resolver.resolve(future, this.future)) :\n            wrapIntoObservable(resolver(future, this.future));\n    };\n    /**\n     * @param {?} token\n     * @param {?} snapshot\n     * @return {?}\n     */\n    PreActivation.prototype.getToken = function (token, snapshot) {\n        var /** @type {?} */ config = closestLoadedConfig(snapshot);\n        var /** @type {?} */ injector = config ? config.module.injector : this.moduleInjector;\n        return injector.get(token);\n    };\n    return PreActivation;\n}());\n/**\n * @param {?} snapshot\n * @return {?}\n */\nfunction closestLoadedConfig(snapshot) {\n    if (!snapshot)\n        return null;\n    for (var /** @type {?} */ s = snapshot.parent; s; s = s.parent) {\n        var /** @type {?} */ route = s._routeConfig;\n        if (route && route._loadedConfig)\n            return route._loadedConfig;\n    }\n    return null;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NoMatch$1 = (function () {\n    function NoMatch() {\n    }\n    return NoMatch;\n}());\n/**\n * @param {?} rootComponentType\n * @param {?} config\n * @param {?} urlTree\n * @param {?} url\n * @return {?}\n */\nfunction recognize(rootComponentType, config, urlTree, url) {\n    return new Recognizer(rootComponentType, config, urlTree, url).recognize();\n}\nvar Recognizer = (function () {\n    /**\n     * @param {?} rootComponentType\n     * @param {?} config\n     * @param {?} urlTree\n     * @param {?} url\n     */\n    function Recognizer(rootComponentType, config, urlTree, url) {\n        this.rootComponentType = rootComponentType;\n        this.config = config;\n        this.urlTree = urlTree;\n        this.url = url;\n    }\n    /**\n     * @return {?}\n     */\n    Recognizer.prototype.recognize = function () {\n        try {\n            var /** @type {?} */ rootSegmentGroup = split$1(this.urlTree.root, [], [], this.config).segmentGroup;\n            var /** @type {?} */ children = this.processSegmentGroup(this.config, rootSegmentGroup, PRIMARY_OUTLET);\n            var /** @type {?} */ root = new ActivatedRouteSnapshot([], Object.freeze({}), Object.freeze(this.urlTree.queryParams), /** @type {?} */ ((this.urlTree.fragment)), {}, PRIMARY_OUTLET, this.rootComponentType, null, this.urlTree.root, -1, {});\n            var /** @type {?} */ rootNode = new TreeNode(root, children);\n            var /** @type {?} */ routeState = new RouterStateSnapshot(this.url, rootNode);\n            this.inheritParamsAndData(routeState._root);\n            return rxjs_observable_of.of(routeState);\n        }\n        catch (e) {\n            return new rxjs_Observable.Observable(function (obs) { return obs.error(e); });\n        }\n    };\n    /**\n     * @param {?} routeNode\n     * @return {?}\n     */\n    Recognizer.prototype.inheritParamsAndData = function (routeNode) {\n        var _this = this;\n        var /** @type {?} */ route = routeNode.value;\n        var /** @type {?} */ i = inheritedParamsDataResolve(route);\n        route.params = Object.freeze(i.params);\n        route.data = Object.freeze(i.data);\n        routeNode.children.forEach(function (n) { return _this.inheritParamsAndData(n); });\n    };\n    /**\n     * @param {?} config\n     * @param {?} segmentGroup\n     * @param {?} outlet\n     * @return {?}\n     */\n    Recognizer.prototype.processSegmentGroup = function (config, segmentGroup, outlet) {\n        if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n            return this.processChildren(config, segmentGroup);\n        }\n        return this.processSegment(config, segmentGroup, segmentGroup.segments, outlet);\n    };\n    /**\n     * @param {?} config\n     * @param {?} segmentGroup\n     * @return {?}\n     */\n    Recognizer.prototype.processChildren = function (config, segmentGroup) {\n        var _this = this;\n        var /** @type {?} */ children = mapChildrenIntoArray(segmentGroup, function (child, childOutlet) { return _this.processSegmentGroup(config, child, childOutlet); });\n        checkOutletNameUniqueness(children);\n        sortActivatedRouteSnapshots(children);\n        return children;\n    };\n    /**\n     * @param {?} config\n     * @param {?} segmentGroup\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    Recognizer.prototype.processSegment = function (config, segmentGroup, segments, outlet) {\n        for (var _i = 0, config_1 = config; _i < config_1.length; _i++) {\n            var r = config_1[_i];\n            try {\n                return this.processSegmentAgainstRoute(r, segmentGroup, segments, outlet);\n            }\n            catch (e) {\n                if (!(e instanceof NoMatch$1))\n                    throw e;\n            }\n        }\n        if (this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n            return [];\n        }\n        throw new NoMatch$1();\n    };\n    /**\n     * @param {?} segmentGroup\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    Recognizer.prototype.noLeftoversInUrl = function (segmentGroup, segments, outlet) {\n        return segments.length === 0 && !segmentGroup.children[outlet];\n    };\n    /**\n     * @param {?} route\n     * @param {?} rawSegment\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    Recognizer.prototype.processSegmentAgainstRoute = function (route, rawSegment, segments, outlet) {\n        if (route.redirectTo)\n            throw new NoMatch$1();\n        if ((route.outlet || PRIMARY_OUTLET) !== outlet)\n            throw new NoMatch$1();\n        if (route.path === '**') {\n            var /** @type {?} */ params = segments.length > 0 ? ((last$1(segments))).parameters : {};\n            var /** @type {?} */ snapshot_1 = new ActivatedRouteSnapshot(segments, params, Object.freeze(this.urlTree.queryParams), /** @type {?} */ ((this.urlTree.fragment)), getData(route), outlet, /** @type {?} */ ((route.component)), route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + segments.length, getResolve(route));\n            return [new TreeNode(snapshot_1, [])];\n        }\n        var _a = match$1(rawSegment, route, segments), consumedSegments = _a.consumedSegments, parameters = _a.parameters, lastChild = _a.lastChild;\n        var /** @type {?} */ rawSlicedSegments = segments.slice(lastChild);\n        var /** @type {?} */ childConfig = getChildConfig(route);\n        var _b = split$1(rawSegment, consumedSegments, rawSlicedSegments, childConfig), segmentGroup = _b.segmentGroup, slicedSegments = _b.slicedSegments;\n        var /** @type {?} */ snapshot = new ActivatedRouteSnapshot(consumedSegments, parameters, Object.freeze(this.urlTree.queryParams), /** @type {?} */ ((this.urlTree.fragment)), getData(route), outlet, /** @type {?} */ ((route.component)), route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + consumedSegments.length, getResolve(route));\n        if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n            var /** @type {?} */ children_1 = this.processChildren(childConfig, segmentGroup);\n            return [new TreeNode(snapshot, children_1)];\n        }\n        if (childConfig.length === 0 && slicedSegments.length === 0) {\n            return [new TreeNode(snapshot, [])];\n        }\n        var /** @type {?} */ children = this.processSegment(childConfig, segmentGroup, slicedSegments, PRIMARY_OUTLET);\n        return [new TreeNode(snapshot, children)];\n    };\n    return Recognizer;\n}());\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction sortActivatedRouteSnapshots(nodes) {\n    nodes.sort(function (a, b) {\n        if (a.value.outlet === PRIMARY_OUTLET)\n            return -1;\n        if (b.value.outlet === PRIMARY_OUTLET)\n            return 1;\n        return a.value.outlet.localeCompare(b.value.outlet);\n    });\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getChildConfig(route) {\n    if (route.children) {\n        return route.children;\n    }\n    if (route.loadChildren) {\n        return ((route._loadedConfig)).routes;\n    }\n    return [];\n}\n/**\n * @param {?} segmentGroup\n * @param {?} route\n * @param {?} segments\n * @return {?}\n */\nfunction match$1(segmentGroup, route, segments) {\n    if (route.path === '') {\n        if (route.pathMatch === 'full' && (segmentGroup.hasChildren() || segments.length > 0)) {\n            throw new NoMatch$1();\n        }\n        return { consumedSegments: [], lastChild: 0, parameters: {} };\n    }\n    var /** @type {?} */ matcher = route.matcher || defaultUrlMatcher;\n    var /** @type {?} */ res = matcher(segments, segmentGroup, route);\n    if (!res)\n        throw new NoMatch$1();\n    var /** @type {?} */ posParams = {};\n    forEach(/** @type {?} */ ((res.posParams)), function (v, k) { posParams[k] = v.path; });\n    var /** @type {?} */ parameters = res.consumed.length > 0 ? __assign({}, posParams, res.consumed[res.consumed.length - 1].parameters) :\n        posParams;\n    return { consumedSegments: res.consumed, lastChild: res.consumed.length, parameters: parameters };\n}\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction checkOutletNameUniqueness(nodes) {\n    var /** @type {?} */ names = {};\n    nodes.forEach(function (n) {\n        var /** @type {?} */ routeWithSameOutletName = names[n.value.outlet];\n        if (routeWithSameOutletName) {\n            var /** @type {?} */ p = routeWithSameOutletName.url.map(function (s) { return s.toString(); }).join('/');\n            var /** @type {?} */ c = n.value.url.map(function (s) { return s.toString(); }).join('/');\n            throw new Error(\"Two segments cannot have the same outlet name: '\" + p + \"' and '\" + c + \"'.\");\n        }\n        names[n.value.outlet] = n.value;\n    });\n}\n/**\n * @param {?} segmentGroup\n * @return {?}\n */\nfunction getSourceSegmentGroup(segmentGroup) {\n    var /** @type {?} */ s = segmentGroup;\n    while (s._sourceSegment) {\n        s = s._sourceSegment;\n    }\n    return s;\n}\n/**\n * @param {?} segmentGroup\n * @return {?}\n */\nfunction getPathIndexShift(segmentGroup) {\n    var /** @type {?} */ s = segmentGroup;\n    var /** @type {?} */ res = (s._segmentIndexShift ? s._segmentIndexShift : 0);\n    while (s._sourceSegment) {\n        s = s._sourceSegment;\n        res += (s._segmentIndexShift ? s._segmentIndexShift : 0);\n    }\n    return res - 1;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} consumedSegments\n * @param {?} slicedSegments\n * @param {?} config\n * @return {?}\n */\nfunction split$1(segmentGroup, consumedSegments, slicedSegments, config) {\n    if (slicedSegments.length > 0 &&\n        containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n        var /** @type {?} */ s_1 = new UrlSegmentGroup(consumedSegments, createChildrenForEmptyPaths(segmentGroup, consumedSegments, config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n        s_1._sourceSegment = segmentGroup;\n        s_1._segmentIndexShift = consumedSegments.length;\n        return { segmentGroup: s_1, slicedSegments: [] };\n    }\n    if (slicedSegments.length === 0 &&\n        containsEmptyPathMatches(segmentGroup, slicedSegments, config)) {\n        var /** @type {?} */ s_2 = new UrlSegmentGroup(segmentGroup.segments, addEmptyPathsToChildrenIfNeeded(segmentGroup, slicedSegments, config, segmentGroup.children));\n        s_2._sourceSegment = segmentGroup;\n        s_2._segmentIndexShift = consumedSegments.length;\n        return { segmentGroup: s_2, slicedSegments: slicedSegments };\n    }\n    var /** @type {?} */ s = new UrlSegmentGroup(segmentGroup.segments, segmentGroup.children);\n    s._sourceSegment = segmentGroup;\n    s._segmentIndexShift = consumedSegments.length;\n    return { segmentGroup: s, slicedSegments: slicedSegments };\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} routes\n * @param {?} children\n * @return {?}\n */\nfunction addEmptyPathsToChildrenIfNeeded(segmentGroup, slicedSegments, routes, children) {\n    var /** @type {?} */ res = {};\n    for (var _i = 0, routes_1 = routes; _i < routes_1.length; _i++) {\n        var r = routes_1[_i];\n        if (emptyPathMatch(segmentGroup, slicedSegments, r) && !children[getOutlet$1(r)]) {\n            var /** @type {?} */ s = new UrlSegmentGroup([], {});\n            s._sourceSegment = segmentGroup;\n            s._segmentIndexShift = segmentGroup.segments.length;\n            res[getOutlet$1(r)] = s;\n        }\n    }\n    return __assign({}, children, res);\n}\n/**\n * @param {?} segmentGroup\n * @param {?} consumedSegments\n * @param {?} routes\n * @param {?} primarySegment\n * @return {?}\n */\nfunction createChildrenForEmptyPaths(segmentGroup, consumedSegments, routes, primarySegment) {\n    var /** @type {?} */ res = {};\n    res[PRIMARY_OUTLET] = primarySegment;\n    primarySegment._sourceSegment = segmentGroup;\n    primarySegment._segmentIndexShift = consumedSegments.length;\n    for (var _i = 0, routes_2 = routes; _i < routes_2.length; _i++) {\n        var r = routes_2[_i];\n        if (r.path === '' && getOutlet$1(r) !== PRIMARY_OUTLET) {\n            var /** @type {?} */ s = new UrlSegmentGroup([], {});\n            s._sourceSegment = segmentGroup;\n            s._segmentIndexShift = consumedSegments.length;\n            res[getOutlet$1(r)] = s;\n        }\n    }\n    return res;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, routes) {\n    return routes.some(function (r) { return emptyPathMatch(segmentGroup, slicedSegments, r) && getOutlet$1(r) !== PRIMARY_OUTLET; });\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathMatches(segmentGroup, slicedSegments, routes) {\n    return routes.some(function (r) { return emptyPathMatch(segmentGroup, slicedSegments, r); });\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} r\n * @return {?}\n */\nfunction emptyPathMatch(segmentGroup, slicedSegments, r) {\n    if ((segmentGroup.hasChildren() || slicedSegments.length > 0) && r.pathMatch === 'full') {\n        return false;\n    }\n    return r.path === '' && r.redirectTo === undefined;\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getOutlet$1(route) {\n    return route.outlet || PRIMARY_OUTLET;\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getData(route) {\n    return route.data || {};\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getResolve(route) {\n    return route.resolve || {};\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@whatItDoes Provides a way to customize when activated routes get reused.\n *\n * \\@experimental\n * @abstract\n */\nvar RouteReuseStrategy = (function () {\n    function RouteReuseStrategy() {\n    }\n    return RouteReuseStrategy;\n}());\n/**\n * Does not detach any subtrees. Reuses routes as long as their route config is the same.\n */\nvar DefaultRouteReuseStrategy = (function () {\n    function DefaultRouteReuseStrategy() {\n    }\n    /**\n     * @param {?} route\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.shouldDetach = function (route) { return false; };\n    /**\n     * @param {?} route\n     * @param {?} detachedTree\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.store = function (route, detachedTree) { };\n    /**\n     * @param {?} route\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.shouldAttach = function (route) { return false; };\n    /**\n     * @param {?} route\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.retrieve = function (route) { return null; };\n    /**\n     * @param {?} future\n     * @param {?} curr\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.shouldReuseRoute = function (future, curr) {\n        return future.routeConfig === curr.routeConfig;\n    };\n    return DefaultRouteReuseStrategy;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docsNotRequired\n * \\@experimental\n */\nvar ROUTES = new _angular_core.InjectionToken('ROUTES');\nvar RouterConfigLoader = (function () {\n    /**\n     * @param {?} loader\n     * @param {?} compiler\n     * @param {?=} onLoadStartListener\n     * @param {?=} onLoadEndListener\n     */\n    function RouterConfigLoader(loader, compiler, onLoadStartListener, onLoadEndListener) {\n        this.loader = loader;\n        this.compiler = compiler;\n        this.onLoadStartListener = onLoadStartListener;\n        this.onLoadEndListener = onLoadEndListener;\n    }\n    /**\n     * @param {?} parentInjector\n     * @param {?} route\n     * @return {?}\n     */\n    RouterConfigLoader.prototype.load = function (parentInjector, route) {\n        var _this = this;\n        if (this.onLoadStartListener) {\n            this.onLoadStartListener(route);\n        }\n        var /** @type {?} */ moduleFactory$ = this.loadModuleFactory(/** @type {?} */ ((route.loadChildren)));\n        return rxjs_operator_map.map.call(moduleFactory$, function (factory) {\n            if (_this.onLoadEndListener) {\n                _this.onLoadEndListener(route);\n            }\n            var /** @type {?} */ module = factory.create(parentInjector);\n            return new LoadedRouterConfig(flatten(module.injector.get(ROUTES)), module);\n        });\n    };\n    /**\n     * @param {?} loadChildren\n     * @return {?}\n     */\n    RouterConfigLoader.prototype.loadModuleFactory = function (loadChildren) {\n        var _this = this;\n        if (typeof loadChildren === 'string') {\n            return rxjs_observable_fromPromise.fromPromise(this.loader.load(loadChildren));\n        }\n        else {\n            return rxjs_operator_mergeMap.mergeMap.call(wrapIntoObservable(loadChildren()), function (t) {\n                if (t instanceof _angular_core.NgModuleFactory) {\n                    return rxjs_observable_of.of(t);\n                }\n                else {\n                    return rxjs_observable_fromPromise.fromPromise(_this.compiler.compileModuleAsync(t));\n                }\n            });\n        }\n    };\n    return RouterConfigLoader;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@whatItDoes Provides a way to migrate AngularJS applications to Angular.\n *\n * \\@experimental\n * @abstract\n */\nvar UrlHandlingStrategy = (function () {\n    function UrlHandlingStrategy() {\n    }\n    return UrlHandlingStrategy;\n}());\n/**\n * \\@experimental\n */\nvar DefaultUrlHandlingStrategy = (function () {\n    function DefaultUrlHandlingStrategy() {\n    }\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    DefaultUrlHandlingStrategy.prototype.shouldProcessUrl = function (url) { return true; };\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    DefaultUrlHandlingStrategy.prototype.extract = function (url) { return url; };\n    /**\n     * @param {?} newUrlPart\n     * @param {?} wholeUrl\n     * @return {?}\n     */\n    DefaultUrlHandlingStrategy.prototype.merge = function (newUrlPart, wholeUrl) { return newUrlPart; };\n    return DefaultUrlHandlingStrategy;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@whatItDoes Represents the extra options used during navigation.\n *\n * \\@stable\n * @record\n */\nfunction NavigationExtras() { }\n/**\n * @param {?} error\n * @return {?}\n */\nfunction defaultErrorHandler(error) {\n    throw error;\n}\n/**\n * \\@internal\n * @param {?} snapshot\n * @return {?}\n */\nfunction defaultRouterHook(snapshot) {\n    return (rxjs_observable_of.of(null));\n}\n/**\n * \\@whatItDoes Provides the navigation and url manipulation capabilities.\n *\n * See {\\@link Routes} for more details and examples.\n *\n * \\@ngModule RouterModule\n *\n * \\@stable\n */\nvar Router = (function () {\n    /**\n     * @param {?} rootComponentType\n     * @param {?} urlSerializer\n     * @param {?} rootContexts\n     * @param {?} location\n     * @param {?} injector\n     * @param {?} loader\n     * @param {?} compiler\n     * @param {?} config\n     */\n    function Router(rootComponentType, urlSerializer, rootContexts, location, injector, loader, compiler, config) {\n        var _this = this;\n        this.rootComponentType = rootComponentType;\n        this.urlSerializer = urlSerializer;\n        this.rootContexts = rootContexts;\n        this.location = location;\n        this.config = config;\n        this.navigations = new rxjs_BehaviorSubject.BehaviorSubject(/** @type {?} */ ((null)));\n        this.routerEvents = new rxjs_Subject.Subject();\n        this.navigationId = 0;\n        /**\n         * Error handler that is invoked when a navigation errors.\n         *\n         * See {\\@link ErrorHandler} for more information.\n         */\n        this.errorHandler = defaultErrorHandler;\n        /**\n         * Indicates if at least one navigation happened.\n         */\n        this.navigated = false;\n        /**\n         * Used by RouterModule. This allows us to\n         * pause the navigation either before preactivation or after it.\n         * \\@internal\n         */\n        this.hooks = {\n            beforePreactivation: defaultRouterHook,\n            afterPreactivation: defaultRouterHook\n        };\n        /**\n         * Extracts and merges URLs. Used for AngularJS to Angular migrations.\n         */\n        this.urlHandlingStrategy = new DefaultUrlHandlingStrategy();\n        this.routeReuseStrategy = new DefaultRouteReuseStrategy();\n        var /** @type {?} */ onLoadStart = function (r) { return _this.triggerEvent(new RouteConfigLoadStart(r)); };\n        var /** @type {?} */ onLoadEnd = function (r) { return _this.triggerEvent(new RouteConfigLoadEnd(r)); };\n        this.ngModule = injector.get(_angular_core.NgModuleRef);\n        this.resetConfig(config);\n        this.currentUrlTree = createEmptyUrlTree();\n        this.rawUrlTree = this.currentUrlTree;\n        this.configLoader = new RouterConfigLoader(loader, compiler, onLoadStart, onLoadEnd);\n        this.currentRouterState = createEmptyState(this.currentUrlTree, this.rootComponentType);\n        this.processNavigations();\n    }\n    /**\n     * \\@internal\n     * TODO: this should be removed once the constructor of the router made internal\n     * @param {?} rootComponentType\n     * @return {?}\n     */\n    Router.prototype.resetRootComponentType = function (rootComponentType) {\n        this.rootComponentType = rootComponentType;\n        // TODO: vsavkin router 4.0 should make the root component set to null\n        // this will simplify the lifecycle of the router.\n        this.currentRouterState.root.component = this.rootComponentType;\n    };\n    /**\n     * Sets up the location change listener and performs the initial navigation.\n     * @return {?}\n     */\n    Router.prototype.initialNavigation = function () {\n        this.setUpLocationChangeListener();\n        if (this.navigationId === 0) {\n            this.navigateByUrl(this.location.path(true), { replaceUrl: true });\n        }\n    };\n    /**\n     * Sets up the location change listener.\n     * @return {?}\n     */\n    Router.prototype.setUpLocationChangeListener = function () {\n        var _this = this;\n        // Zone.current.wrap is needed because of the issue with RxJS scheduler,\n        // which does not work properly with zone.js in IE and Safari\n        if (!this.locationSubscription) {\n            this.locationSubscription = (this.location.subscribe(Zone.current.wrap(function (change) {\n                var /** @type {?} */ rawUrlTree = _this.urlSerializer.parse(change['url']);\n                var /** @type {?} */ source = change['type'] === 'popstate' ? 'popstate' : 'hashchange';\n                setTimeout(function () { _this.scheduleNavigation(rawUrlTree, source, { replaceUrl: true }); }, 0);\n            })));\n        }\n    };\n    Object.defineProperty(Router.prototype, \"routerState\", {\n        /**\n         * The current route state\n         * @return {?}\n         */\n        get: function () { return this.currentRouterState; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Router.prototype, \"url\", {\n        /**\n         * The current url\n         * @return {?}\n         */\n        get: function () { return this.serializeUrl(this.currentUrlTree); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Router.prototype, \"events\", {\n        /**\n         * An observable of router events\n         * @return {?}\n         */\n        get: function () { return this.routerEvents; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@internal\n     * @param {?} e\n     * @return {?}\n     */\n    Router.prototype.triggerEvent = function (e) { this.routerEvents.next(e); };\n    /**\n     * Resets the configuration used for navigation and generating links.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.resetConfig([\n     *  { path: 'team/:id', component: TeamCmp, children: [\n     *    { path: 'simple', component: SimpleCmp },\n     *    { path: 'user/:name', component: UserCmp }\n     *  ]}\n     * ]);\n     * ```\n     * @param {?} config\n     * @return {?}\n     */\n    Router.prototype.resetConfig = function (config) {\n        validateConfig(config);\n        this.config = config;\n        this.navigated = false;\n    };\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    Router.prototype.ngOnDestroy = function () { this.dispose(); };\n    /**\n     * Disposes of the router\n     * @return {?}\n     */\n    Router.prototype.dispose = function () {\n        if (this.locationSubscription) {\n            this.locationSubscription.unsubscribe();\n            this.locationSubscription = ((null));\n        }\n    };\n    /**\n     * Applies an array of commands to the current url tree and creates a new url tree.\n     *\n     * When given an activate route, applies the given commands starting from the route.\n     * When not given a route, applies the given command starting from the root.\n     *\n     * ### Usage\n     *\n     * ```\n     * // create /team/33/user/11\n     * router.createUrlTree(['/team', 33, 'user', 11]);\n     *\n     * // create /team/33;expand=true/user/11\n     * router.createUrlTree(['/team', 33, {expand: true}, 'user', 11]);\n     *\n     * // you can collapse static segments like this (this works only with the first passed-in value):\n     * router.createUrlTree(['/team/33/user', userId]);\n     *\n     * // If the first segment can contain slashes, and you do not want the router to split it, you\n     * // can do the following:\n     *\n     * router.createUrlTree([{segmentPath: '/one/two'}]);\n     *\n     * // create /team/33/(user/11//right:chat)\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: 'chat'}}]);\n     *\n     * // remove the right secondary node\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: null}}]);\n     *\n     * // assuming the current url is `/team/33/user/11` and the route points to `user/11`\n     *\n     * // navigate to /team/33/user/11/details\n     * router.createUrlTree(['details'], {relativeTo: route});\n     *\n     * // navigate to /team/33/user/22\n     * router.createUrlTree(['../22'], {relativeTo: route});\n     *\n     * // navigate to /team/44/user/22\n     * router.createUrlTree(['../../team/44/user/22'], {relativeTo: route});\n     * ```\n     * @param {?} commands\n     * @param {?=} navigationExtras\n     * @return {?}\n     */\n    Router.prototype.createUrlTree = function (commands, navigationExtras) {\n        if (navigationExtras === void 0) { navigationExtras = {}; }\n        var relativeTo = navigationExtras.relativeTo, queryParams = navigationExtras.queryParams, fragment = navigationExtras.fragment, preserveQueryParams = navigationExtras.preserveQueryParams, queryParamsHandling = navigationExtras.queryParamsHandling, preserveFragment = navigationExtras.preserveFragment;\n        if (_angular_core.isDevMode() && preserveQueryParams && (console) && (console.warn)) {\n            console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n        }\n        var /** @type {?} */ a = relativeTo || this.routerState.root;\n        var /** @type {?} */ f = preserveFragment ? this.currentUrlTree.fragment : fragment;\n        var /** @type {?} */ q = null;\n        if (queryParamsHandling) {\n            switch (queryParamsHandling) {\n                case 'merge':\n                    q = __assign({}, this.currentUrlTree.queryParams, queryParams);\n                    break;\n                case 'preserve':\n                    q = this.currentUrlTree.queryParams;\n                    break;\n                default:\n                    q = queryParams || null;\n            }\n        }\n        else {\n            q = preserveQueryParams ? this.currentUrlTree.queryParams : queryParams || null;\n        }\n        return createUrlTree(a, this.currentUrlTree, commands, /** @type {?} */ ((q)), /** @type {?} */ ((f)));\n    };\n    /**\n     * Navigate based on the provided url. This navigation is always absolute.\n     *\n     * Returns a promise that:\n     * - resolves to 'true' when navigation succeeds,\n     * - resolves to 'false' when navigation fails,\n     * - is rejected when an error happens.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.navigateByUrl(\"/team/33/user/11\");\n     *\n     * // Navigate without updating the URL\n     * router.navigateByUrl(\"/team/33/user/11\", { skipLocationChange: true });\n     * ```\n     *\n     * In opposite to `navigate`, `navigateByUrl` takes a whole URL\n     * and does not apply any delta to the current one.\n     * @param {?} url\n     * @param {?=} extras\n     * @return {?}\n     */\n    Router.prototype.navigateByUrl = function (url, extras) {\n        if (extras === void 0) { extras = { skipLocationChange: false }; }\n        var /** @type {?} */ urlTree = url instanceof UrlTree ? url : this.parseUrl(url);\n        var /** @type {?} */ mergedTree = this.urlHandlingStrategy.merge(urlTree, this.rawUrlTree);\n        return this.scheduleNavigation(mergedTree, 'imperative', extras);\n    };\n    /**\n     * Navigate based on the provided array of commands and a starting point.\n     * If no starting route is provided, the navigation is absolute.\n     *\n     * Returns a promise that:\n     * - resolves to 'true' when navigation succeeds,\n     * - resolves to 'false' when navigation fails,\n     * - is rejected when an error happens.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route});\n     *\n     * // Navigate without updating the URL\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route, skipLocationChange: true});\n     * ```\n     *\n     * In opposite to `navigateByUrl`, `navigate` always takes a delta that is applied to the current\n     * URL.\n     * @param {?} commands\n     * @param {?=} extras\n     * @return {?}\n     */\n    Router.prototype.navigate = function (commands, extras) {\n        if (extras === void 0) { extras = { skipLocationChange: false }; }\n        validateCommands(commands);\n        if (typeof extras.queryParams === 'object' && extras.queryParams !== null) {\n            extras.queryParams = this.removeEmptyProps(extras.queryParams);\n        }\n        return this.navigateByUrl(this.createUrlTree(commands, extras), extras);\n    };\n    /**\n     * Serializes a {\\@link UrlTree} into a string\n     * @param {?} url\n     * @return {?}\n     */\n    Router.prototype.serializeUrl = function (url) { return this.urlSerializer.serialize(url); };\n    /**\n     * Parses a string into a {\\@link UrlTree}\n     * @param {?} url\n     * @return {?}\n     */\n    Router.prototype.parseUrl = function (url) { return this.urlSerializer.parse(url); };\n    /**\n     * Returns whether the url is activated\n     * @param {?} url\n     * @param {?} exact\n     * @return {?}\n     */\n    Router.prototype.isActive = function (url, exact) {\n        if (url instanceof UrlTree) {\n            return containsTree(this.currentUrlTree, url, exact);\n        }\n        var /** @type {?} */ urlTree = this.urlSerializer.parse(url);\n        return containsTree(this.currentUrlTree, urlTree, exact);\n    };\n    /**\n     * @param {?} params\n     * @return {?}\n     */\n    Router.prototype.removeEmptyProps = function (params) {\n        return Object.keys(params).reduce(function (result, key) {\n            var /** @type {?} */ value = params[key];\n            if (value !== null && value !== undefined) {\n                result[key] = value;\n            }\n            return result;\n        }, {});\n    };\n    /**\n     * @return {?}\n     */\n    Router.prototype.processNavigations = function () {\n        var _this = this;\n        rxjs_operator_concatMap.concatMap\n            .call(this.navigations, function (nav) {\n            if (nav) {\n                _this.executeScheduledNavigation(nav);\n                // a failed navigation should not stop the router from processing\n                // further navigations => the catch\n                return nav.promise.catch(function () { });\n            }\n            else {\n                return (rxjs_observable_of.of(null));\n            }\n        })\n            .subscribe(function () { });\n    };\n    /**\n     * @param {?} rawUrl\n     * @param {?} source\n     * @param {?} extras\n     * @return {?}\n     */\n    Router.prototype.scheduleNavigation = function (rawUrl, source, extras) {\n        var /** @type {?} */ lastNavigation = this.navigations.value;\n        // If the user triggers a navigation imperatively (e.g., by using navigateByUrl),\n        // and that navigation results in 'replaceState' that leads to the same URL,\n        // we should skip those.\n        if (lastNavigation && source !== 'imperative' && lastNavigation.source === 'imperative' &&\n            lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n            return Promise.resolve(true); // return value is not used\n        }\n        // Because of a bug in IE and Edge, the location class fires two events (popstate and\n        // hashchange) every single time. The second one should be ignored. Otherwise, the URL will\n        // flicker.\n        if (lastNavigation && source == 'hashchange' && lastNavigation.source === 'popstate' &&\n            lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n            return Promise.resolve(true); // return value is not used\n        }\n        var /** @type {?} */ resolve = null;\n        var /** @type {?} */ reject = null;\n        var /** @type {?} */ promise = new Promise(function (res, rej) {\n            resolve = res;\n            reject = rej;\n        });\n        var /** @type {?} */ id = ++this.navigationId;\n        this.navigations.next({ id: id, source: source, rawUrl: rawUrl, extras: extras, resolve: resolve, reject: reject, promise: promise });\n        // Make sure that the error is propagated even though `processNavigations` catch\n        // handler does not rethrow\n        return promise.catch(function (e) { return Promise.reject(e); });\n    };\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    Router.prototype.executeScheduledNavigation = function (_a) {\n        var _this = this;\n        var id = _a.id, rawUrl = _a.rawUrl, extras = _a.extras, resolve = _a.resolve, reject = _a.reject;\n        var /** @type {?} */ url = this.urlHandlingStrategy.extract(rawUrl);\n        var /** @type {?} */ urlTransition = !this.navigated || url.toString() !== this.currentUrlTree.toString();\n        if (urlTransition && this.urlHandlingStrategy.shouldProcessUrl(rawUrl)) {\n            this.routerEvents.next(new NavigationStart(id, this.serializeUrl(url)));\n            Promise.resolve()\n                .then(function (_) { return _this.runNavigate(url, rawUrl, !!extras.skipLocationChange, !!extras.replaceUrl, id, null); })\n                .then(resolve, reject);\n            // we cannot process the current URL, but we could process the previous one =>\n            // we need to do some cleanup\n        }\n        else if (urlTransition && this.rawUrlTree &&\n            this.urlHandlingStrategy.shouldProcessUrl(this.rawUrlTree)) {\n            this.routerEvents.next(new NavigationStart(id, this.serializeUrl(url)));\n            Promise.resolve()\n                .then(function (_) { return _this.runNavigate(url, rawUrl, false, false, id, createEmptyState(url, _this.rootComponentType).snapshot); })\n                .then(resolve, reject);\n        }\n        else {\n            this.rawUrlTree = rawUrl;\n            resolve(null);\n        }\n    };\n    /**\n     * @param {?} url\n     * @param {?} rawUrl\n     * @param {?} shouldPreventPushState\n     * @param {?} shouldReplaceUrl\n     * @param {?} id\n     * @param {?} precreatedState\n     * @return {?}\n     */\n    Router.prototype.runNavigate = function (url, rawUrl, shouldPreventPushState, shouldReplaceUrl, id, precreatedState) {\n        var _this = this;\n        if (id !== this.navigationId) {\n            this.location.go(this.urlSerializer.serialize(this.currentUrlTree));\n            this.routerEvents.next(new NavigationCancel(id, this.serializeUrl(url), \"Navigation ID \" + id + \" is not equal to the current navigation id \" + this.navigationId));\n            return Promise.resolve(false);\n        }\n        return new Promise(function (resolvePromise, rejectPromise) {\n            // create an observable of the url and route state snapshot\n            // this operation do not result in any side effects\n            var /** @type {?} */ urlAndSnapshot$;\n            if (!precreatedState) {\n                var /** @type {?} */ moduleInjector = _this.ngModule.injector;\n                var /** @type {?} */ redirectsApplied$ = applyRedirects(moduleInjector, _this.configLoader, _this.urlSerializer, url, _this.config);\n                urlAndSnapshot$ = rxjs_operator_mergeMap.mergeMap.call(redirectsApplied$, function (appliedUrl) {\n                    return rxjs_operator_map.map.call(recognize(_this.rootComponentType, _this.config, appliedUrl, _this.serializeUrl(appliedUrl)), function (snapshot) {\n                        _this.routerEvents.next(new RoutesRecognized(id, _this.serializeUrl(url), _this.serializeUrl(appliedUrl), snapshot));\n                        return { appliedUrl: appliedUrl, snapshot: snapshot };\n                    });\n                });\n            }\n            else {\n                urlAndSnapshot$ = rxjs_observable_of.of({ appliedUrl: url, snapshot: precreatedState });\n            }\n            var /** @type {?} */ beforePreactivationDone$ = rxjs_operator_mergeMap.mergeMap.call(urlAndSnapshot$, function (p) {\n                return rxjs_operator_map.map.call(_this.hooks.beforePreactivation(p.snapshot), function () { return p; });\n            });\n            // run preactivation: guards and data resolvers\n            var /** @type {?} */ preActivation;\n            var /** @type {?} */ preactivationSetup$ = rxjs_operator_map.map.call(beforePreactivationDone$, function (_a) {\n                var appliedUrl = _a.appliedUrl, snapshot = _a.snapshot;\n                var /** @type {?} */ moduleInjector = _this.ngModule.injector;\n                preActivation = new PreActivation(snapshot, _this.currentRouterState.snapshot, moduleInjector, function (evt) { return _this.triggerEvent(evt); });\n                preActivation.initalize(_this.rootContexts);\n                return { appliedUrl: appliedUrl, snapshot: snapshot };\n            });\n            var /** @type {?} */ preactivationCheckGuards$ = rxjs_operator_mergeMap.mergeMap.call(preactivationSetup$, function (_a) {\n                var appliedUrl = _a.appliedUrl, snapshot = _a.snapshot;\n                if (_this.navigationId !== id)\n                    return rxjs_observable_of.of(false);\n                _this.triggerEvent(new GuardsCheckStart(id, _this.serializeUrl(url), appliedUrl, snapshot));\n                return rxjs_operator_map.map.call(preActivation.checkGuards(), function (shouldActivate) {\n                    _this.triggerEvent(new GuardsCheckEnd(id, _this.serializeUrl(url), appliedUrl, snapshot, shouldActivate));\n                    return { appliedUrl: appliedUrl, snapshot: snapshot, shouldActivate: shouldActivate };\n                });\n            });\n            var /** @type {?} */ preactivationResolveData$ = rxjs_operator_mergeMap.mergeMap.call(preactivationCheckGuards$, function (p) {\n                if (_this.navigationId !== id)\n                    return rxjs_observable_of.of(false);\n                if (p.shouldActivate && preActivation.isActivating()) {\n                    _this.triggerEvent(new ResolveStart(id, _this.serializeUrl(url), p.appliedUrl, p.snapshot));\n                    return rxjs_operator_map.map.call(preActivation.resolveData(), function () {\n                        _this.triggerEvent(new ResolveEnd(id, _this.serializeUrl(url), p.appliedUrl, p.snapshot));\n                        return p;\n                    });\n                }\n                else {\n                    return rxjs_observable_of.of(p);\n                }\n            });\n            var /** @type {?} */ preactivationDone$ = rxjs_operator_mergeMap.mergeMap.call(preactivationResolveData$, function (p) {\n                return rxjs_operator_map.map.call(_this.hooks.afterPreactivation(p.snapshot), function () { return p; });\n            });\n            // create router state\n            // this operation has side effects => route state is being affected\n            var /** @type {?} */ routerState$ = rxjs_operator_map.map.call(preactivationDone$, function (_a) {\n                var appliedUrl = _a.appliedUrl, snapshot = _a.snapshot, shouldActivate = _a.shouldActivate;\n                if (shouldActivate) {\n                    var /** @type {?} */ state = createRouterState(_this.routeReuseStrategy, snapshot, _this.currentRouterState);\n                    return { appliedUrl: appliedUrl, state: state, shouldActivate: shouldActivate };\n                }\n                else {\n                    return { appliedUrl: appliedUrl, state: null, shouldActivate: shouldActivate };\n                }\n            });\n            // applied the new router state\n            // this operation has side effects\n            var /** @type {?} */ navigationIsSuccessful;\n            var /** @type {?} */ storedState = _this.currentRouterState;\n            var /** @type {?} */ storedUrl = _this.currentUrlTree;\n            routerState$\n                .forEach(function (_a) {\n                var appliedUrl = _a.appliedUrl, state = _a.state, shouldActivate = _a.shouldActivate;\n                if (!shouldActivate || id !== _this.navigationId) {\n                    navigationIsSuccessful = false;\n                    return;\n                }\n                _this.currentUrlTree = appliedUrl;\n                _this.rawUrlTree = _this.urlHandlingStrategy.merge(_this.currentUrlTree, rawUrl);\n                _this.currentRouterState = state;\n                if (!shouldPreventPushState) {\n                    var /** @type {?} */ path = _this.urlSerializer.serialize(_this.rawUrlTree);\n                    if (_this.location.isCurrentPathEqualTo(path) || shouldReplaceUrl) {\n                        _this.location.replaceState(path);\n                    }\n                    else {\n                        _this.location.go(path);\n                    }\n                }\n                new ActivateRoutes(_this.routeReuseStrategy, state, storedState, function (evt) { return _this.triggerEvent(evt); })\n                    .activate(_this.rootContexts);\n                navigationIsSuccessful = true;\n            })\n                .then(function () {\n                if (navigationIsSuccessful) {\n                    _this.navigated = true;\n                    _this.routerEvents.next(new NavigationEnd(id, _this.serializeUrl(url), _this.serializeUrl(_this.currentUrlTree)));\n                    resolvePromise(true);\n                }\n                else {\n                    _this.resetUrlToCurrentUrlTree();\n                    _this.routerEvents.next(new NavigationCancel(id, _this.serializeUrl(url), ''));\n                    resolvePromise(false);\n                }\n            }, function (e) {\n                if (isNavigationCancelingError(e)) {\n                    _this.resetUrlToCurrentUrlTree();\n                    _this.navigated = true;\n                    _this.routerEvents.next(new NavigationCancel(id, _this.serializeUrl(url), e.message));\n                    resolvePromise(false);\n                }\n                else {\n                    _this.routerEvents.next(new NavigationError(id, _this.serializeUrl(url), e));\n                    try {\n                        resolvePromise(_this.errorHandler(e));\n                    }\n                    catch (ee) {\n                        rejectPromise(ee);\n                    }\n                }\n                _this.currentRouterState = storedState;\n                _this.currentUrlTree = storedUrl;\n                _this.rawUrlTree = _this.urlHandlingStrategy.merge(_this.currentUrlTree, rawUrl);\n                _this.location.replaceState(_this.serializeUrl(_this.rawUrlTree));\n            });\n        });\n    };\n    /**\n     * @return {?}\n     */\n    Router.prototype.resetUrlToCurrentUrlTree = function () {\n        var /** @type {?} */ path = this.urlSerializer.serialize(this.rawUrlTree);\n        this.location.replaceState(path);\n    };\n    return Router;\n}());\nvar ActivateRoutes = (function () {\n    /**\n     * @param {?} routeReuseStrategy\n     * @param {?} futureState\n     * @param {?} currState\n     * @param {?} forwardEvent\n     */\n    function ActivateRoutes(routeReuseStrategy, futureState, currState, forwardEvent) {\n        this.routeReuseStrategy = routeReuseStrategy;\n        this.futureState = futureState;\n        this.currState = currState;\n        this.forwardEvent = forwardEvent;\n    }\n    /**\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.activate = function (parentContexts) {\n        var /** @type {?} */ futureRoot = this.futureState._root;\n        var /** @type {?} */ currRoot = this.currState ? this.currState._root : null;\n        this.deactivateChildRoutes(futureRoot, currRoot, parentContexts);\n        advanceActivatedRoute(this.futureState.root);\n        this.activateChildRoutes(futureRoot, currRoot, parentContexts);\n    };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} contexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.deactivateChildRoutes = function (futureNode, currNode, contexts) {\n        var _this = this;\n        var /** @type {?} */ children = nodeChildrenAsMap(currNode);\n        // Recurse on the routes active in the future state to de-activate deeper children\n        futureNode.children.forEach(function (futureChild) {\n            var /** @type {?} */ childOutletName = futureChild.value.outlet;\n            _this.deactivateRoutes(futureChild, children[childOutletName], contexts);\n            delete children[childOutletName];\n        });\n        // De-activate the routes that will not be re-used\n        forEach(children, function (v, childName) {\n            _this.deactivateRouteAndItsChildren(v, contexts);\n        });\n    };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} parentContext\n     * @return {?}\n     */\n    ActivateRoutes.prototype.deactivateRoutes = function (futureNode, currNode, parentContext) {\n        var /** @type {?} */ future = futureNode.value;\n        var /** @type {?} */ curr = currNode ? currNode.value : null;\n        if (future === curr) {\n            // Reusing the node, check to see if the children need to be de-activated\n            if (future.component) {\n                // If we have a normal route, we need to go through an outlet.\n                var /** @type {?} */ context = parentContext.getContext(future.outlet);\n                if (context) {\n                    this.deactivateChildRoutes(futureNode, currNode, context.children);\n                }\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.deactivateChildRoutes(futureNode, currNode, parentContext);\n            }\n        }\n        else {\n            if (curr) {\n                // Deactivate the current route which will not be re-used\n                this.deactivateRouteAndItsChildren(currNode, parentContext);\n            }\n        }\n    };\n    /**\n     * @param {?} route\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.deactivateRouteAndItsChildren = function (route, parentContexts) {\n        if (this.routeReuseStrategy.shouldDetach(route.value.snapshot)) {\n            this.detachAndStoreRouteSubtree(route, parentContexts);\n        }\n        else {\n            this.deactivateRouteAndOutlet(route, parentContexts);\n        }\n    };\n    /**\n     * @param {?} route\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.detachAndStoreRouteSubtree = function (route, parentContexts) {\n        var /** @type {?} */ context = parentContexts.getContext(route.value.outlet);\n        if (context && context.outlet) {\n            var /** @type {?} */ componentRef = context.outlet.detach();\n            var /** @type {?} */ contexts = context.children.onOutletDeactivated();\n            this.routeReuseStrategy.store(route.value.snapshot, { componentRef: componentRef, route: route, contexts: contexts });\n        }\n    };\n    /**\n     * @param {?} route\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.deactivateRouteAndOutlet = function (route, parentContexts) {\n        var _this = this;\n        var /** @type {?} */ context = parentContexts.getContext(route.value.outlet);\n        if (context) {\n            var /** @type {?} */ children = nodeChildrenAsMap(route);\n            var /** @type {?} */ contexts_1 = route.value.component ? context.children : parentContexts;\n            forEach(children, function (v, k) { return _this.deactivateRouteAndItsChildren(v, contexts_1); });\n            if (context.outlet) {\n                // Destroy the component\n                context.outlet.deactivate();\n                // Destroy the contexts for all the outlets that were in the component\n                context.children.onOutletDeactivated();\n            }\n        }\n    };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} contexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.activateChildRoutes = function (futureNode, currNode, contexts) {\n        var _this = this;\n        var /** @type {?} */ children = nodeChildrenAsMap(currNode);\n        futureNode.children.forEach(function (c) { _this.activateRoutes(c, children[c.value.outlet], contexts); });\n        if (futureNode.children.length && futureNode.value.routeConfig) {\n            this.forwardEvent(new ChildActivationEnd(futureNode.value.routeConfig));\n        }\n    };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.activateRoutes = function (futureNode, currNode, parentContexts) {\n        var /** @type {?} */ future = futureNode.value;\n        var /** @type {?} */ curr = currNode ? currNode.value : null;\n        advanceActivatedRoute(future);\n        // reusing the node\n        if (future === curr) {\n            if (future.component) {\n                // If we have a normal route, we need to go through an outlet.\n                var /** @type {?} */ context = parentContexts.getOrCreateContext(future.outlet);\n                this.activateChildRoutes(futureNode, currNode, context.children);\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.activateChildRoutes(futureNode, currNode, parentContexts);\n            }\n        }\n        else {\n            if (future.component) {\n                // if we have a normal route, we need to place the component into the outlet and recurse.\n                var /** @type {?} */ context = parentContexts.getOrCreateContext(future.outlet);\n                if (this.routeReuseStrategy.shouldAttach(future.snapshot)) {\n                    var /** @type {?} */ stored = ((this.routeReuseStrategy.retrieve(future.snapshot)));\n                    this.routeReuseStrategy.store(future.snapshot, null);\n                    context.children.onOutletReAttached(stored.contexts);\n                    context.attachRef = stored.componentRef;\n                    context.route = stored.route.value;\n                    if (context.outlet) {\n                        // Attach right away when the outlet has already been instantiated\n                        // Otherwise attach from `RouterOutlet.ngOnInit` when it is instantiated\n                        context.outlet.attach(stored.componentRef, stored.route.value);\n                    }\n                    advanceActivatedRouteNodeAndItsChildren(stored.route);\n                }\n                else {\n                    var /** @type {?} */ config = parentLoadedConfig(future.snapshot);\n                    var /** @type {?} */ cmpFactoryResolver = config ? config.module.componentFactoryResolver : null;\n                    context.route = future;\n                    context.resolver = cmpFactoryResolver;\n                    if (context.outlet) {\n                        // Activate the outlet when it has already been instantiated\n                        // Otherwise it will get activated from its `ngOnInit` when instantiated\n                        context.outlet.activateWith(future, cmpFactoryResolver);\n                    }\n                    this.activateChildRoutes(futureNode, null, context.children);\n                }\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.activateChildRoutes(futureNode, null, parentContexts);\n            }\n        }\n    };\n    return ActivateRoutes;\n}());\n/**\n * @param {?} node\n * @return {?}\n */\nfunction advanceActivatedRouteNodeAndItsChildren(node) {\n    advanceActivatedRoute(node.value);\n    node.children.forEach(advanceActivatedRouteNodeAndItsChildren);\n}\n/**\n * @param {?} snapshot\n * @return {?}\n */\nfunction parentLoadedConfig(snapshot) {\n    for (var /** @type {?} */ s = snapshot.parent; s; s = s.parent) {\n        var /** @type {?} */ route = s._routeConfig;\n        if (route && route._loadedConfig)\n            return route._loadedConfig;\n        if (route && route.component)\n            return null;\n    }\n    return null;\n}\n/**\n * @param {?} commands\n * @return {?}\n */\nfunction validateCommands(commands) {\n    for (var /** @type {?} */ i = 0; i < commands.length; i++) {\n        var /** @type {?} */ cmd = commands[i];\n        if (cmd == null) {\n            throw new Error(\"The requested path contains \" + cmd + \" segment at index \" + i);\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Lets you link to specific parts of your app.\n *\n * \\@howToUse\n *\n * Consider the following route configuration:\n * `[{ path: 'user/:name', component: UserCmp }]`\n *\n * When linking to this `user/:name` route, you can write:\n * `<a routerLink='/user/bob'>link to user component</a>`\n *\n * \\@description\n *\n * The RouterLink directives let you link to specific parts of your app.\n *\n * When the link is static, you can use the directive as follows:\n * `<a routerLink=\"/user/bob\">link to user component</a>`\n *\n * If you use dynamic values to generate the link, you can pass an array of path\n * segments, followed by the params for each segment.\n *\n * For instance `['/team', teamId, 'user', userName, {details: true}]`\n * means that we want to generate a link to `/team/11/user/bob;details=true`.\n *\n * Multiple static segments can be merged into one\n * (e.g., `['/team/11/user', userName, {details: true}]`).\n *\n * The first segment name can be prepended with `/`, `./`, or `../`:\n * * If the first segment begins with `/`, the router will look up the route from the root of the\n *   app.\n * * If the first segment begins with `./`, or doesn't begin with a slash, the router will\n *   instead look in the children of the current activated route.\n * * And if the first segment begins with `../`, the router will go up one level.\n *\n * You can set query params and fragment as follows:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" fragment=\"education\">\n *   link to user component\n * </a>\n * ```\n * RouterLink will use these to generate this link: `/user/bob#education?debug=true`.\n *\n * (Deprecated in v4.0.0 use `queryParamsHandling` instead) You can also tell the\n * directive to preserve the current query params and fragment:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" preserveQueryParams preserveFragment>\n *   link to user component\n * </a>\n * ```\n *\n * You can tell the directive to how to handle queryParams, available options are:\n *  - 'merge' merge the queryParams into the current queryParams\n *  - 'preserve' preserve the current queryParams\n *  - default / '' use the queryParams only\n *  same options for {\\@link NavigationExtras#queryParamsHandling}\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" queryParamsHandling=\"merge\">\n *   link to user component\n * </a>\n * ```\n *\n * The router link directive always treats the provided input as a delta to the current url.\n *\n * For instance, if the current url is `/user/(box//aux:team)`.\n *\n * Then the following link `<a [routerLink]=\"['/user/jim']\">Jim</a>` will generate the link\n * `/user/(jim//aux:team)`.\n *\n * \\@ngModule RouterModule\n *\n * See {\\@link Router#createUrlTree} for more information.\n *\n * \\@stable\n */\nvar RouterLink = (function () {\n    /**\n     * @param {?} router\n     * @param {?} route\n     * @param {?} tabIndex\n     * @param {?} renderer\n     * @param {?} el\n     */\n    function RouterLink(router, route, tabIndex, renderer, el) {\n        this.router = router;\n        this.route = route;\n        this.commands = [];\n        if (tabIndex == null) {\n            renderer.setAttribute(el.nativeElement, 'tabindex', '0');\n        }\n    }\n    Object.defineProperty(RouterLink.prototype, \"routerLink\", {\n        /**\n         * @param {?} commands\n         * @return {?}\n         */\n        set: function (commands) {\n            if (commands != null) {\n                this.commands = Array.isArray(commands) ? commands : [commands];\n            }\n            else {\n                this.commands = [];\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterLink.prototype, \"preserveQueryParams\", {\n        /**\n         * @deprecated 4.0.0 use `queryParamsHandling` instead.\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (_angular_core.isDevMode() && (console) && (console.warn)) {\n                console.warn('preserveQueryParams is deprecated!, use queryParamsHandling instead.');\n            }\n            this.preserve = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    RouterLink.prototype.onClick = function () {\n        var /** @type {?} */ extras = {\n            skipLocationChange: attrBoolValue(this.skipLocationChange),\n            replaceUrl: attrBoolValue(this.replaceUrl),\n        };\n        this.router.navigateByUrl(this.urlTree, extras);\n        return true;\n    };\n    Object.defineProperty(RouterLink.prototype, \"urlTree\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this.router.createUrlTree(this.commands, {\n                relativeTo: this.route,\n                queryParams: this.queryParams,\n                fragment: this.fragment,\n                preserveQueryParams: attrBoolValue(this.preserve),\n                queryParamsHandling: this.queryParamsHandling,\n                preserveFragment: attrBoolValue(this.preserveFragment),\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RouterLink;\n}());\nRouterLink.decorators = [\n    { type: _angular_core.Directive, args: [{ selector: ':not(a)[routerLink]' },] },\n];\n/** @nocollapse */\nRouterLink.ctorParameters = function () { return [\n    { type: Router, },\n    { type: ActivatedRoute, },\n    { type: undefined, decorators: [{ type: _angular_core.Attribute, args: ['tabindex',] },] },\n    { type: _angular_core.Renderer2, },\n    { type: _angular_core.ElementRef, },\n]; };\nRouterLink.propDecorators = {\n    \"queryParams\": [{ type: _angular_core.Input },],\n    \"fragment\": [{ type: _angular_core.Input },],\n    \"queryParamsHandling\": [{ type: _angular_core.Input },],\n    \"preserveFragment\": [{ type: _angular_core.Input },],\n    \"skipLocationChange\": [{ type: _angular_core.Input },],\n    \"replaceUrl\": [{ type: _angular_core.Input },],\n    \"routerLink\": [{ type: _angular_core.Input },],\n    \"preserveQueryParams\": [{ type: _angular_core.Input },],\n    \"onClick\": [{ type: _angular_core.HostListener, args: ['click',] },],\n};\n/**\n * \\@whatItDoes Lets you link to specific parts of your app.\n *\n * See {\\@link RouterLink} for more information.\n *\n * \\@ngModule RouterModule\n *\n * \\@stable\n */\nvar RouterLinkWithHref = (function () {\n    /**\n     * @param {?} router\n     * @param {?} route\n     * @param {?} locationStrategy\n     */\n    function RouterLinkWithHref(router, route, locationStrategy) {\n        var _this = this;\n        this.router = router;\n        this.route = route;\n        this.locationStrategy = locationStrategy;\n        this.commands = [];\n        this.subscription = router.events.subscribe(function (s) {\n            if (s instanceof NavigationEnd) {\n                _this.updateTargetUrlAndHref();\n            }\n        });\n    }\n    Object.defineProperty(RouterLinkWithHref.prototype, \"routerLink\", {\n        /**\n         * @param {?} commands\n         * @return {?}\n         */\n        set: function (commands) {\n            if (commands != null) {\n                this.commands = Array.isArray(commands) ? commands : [commands];\n            }\n            else {\n                this.commands = [];\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterLinkWithHref.prototype, \"preserveQueryParams\", {\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (_angular_core.isDevMode() && (console) && (console.warn)) {\n                console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n            }\n            this.preserve = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    RouterLinkWithHref.prototype.ngOnChanges = function (changes) { this.updateTargetUrlAndHref(); };\n    /**\n     * @return {?}\n     */\n    RouterLinkWithHref.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n    /**\n     * @param {?} button\n     * @param {?} ctrlKey\n     * @param {?} metaKey\n     * @param {?} shiftKey\n     * @return {?}\n     */\n    RouterLinkWithHref.prototype.onClick = function (button, ctrlKey, metaKey, shiftKey) {\n        if (button !== 0 || ctrlKey || metaKey || shiftKey) {\n            return true;\n        }\n        if (typeof this.target === 'string' && this.target != '_self') {\n            return true;\n        }\n        var /** @type {?} */ extras = {\n            skipLocationChange: attrBoolValue(this.skipLocationChange),\n            replaceUrl: attrBoolValue(this.replaceUrl),\n        };\n        this.router.navigateByUrl(this.urlTree, extras);\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    RouterLinkWithHref.prototype.updateTargetUrlAndHref = function () {\n        this.href = this.locationStrategy.prepareExternalUrl(this.router.serializeUrl(this.urlTree));\n    };\n    Object.defineProperty(RouterLinkWithHref.prototype, \"urlTree\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this.router.createUrlTree(this.commands, {\n                relativeTo: this.route,\n                queryParams: this.queryParams,\n                fragment: this.fragment,\n                preserveQueryParams: attrBoolValue(this.preserve),\n                queryParamsHandling: this.queryParamsHandling,\n                preserveFragment: attrBoolValue(this.preserveFragment),\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RouterLinkWithHref;\n}());\nRouterLinkWithHref.decorators = [\n    { type: _angular_core.Directive, args: [{ selector: 'a[routerLink]' },] },\n];\n/** @nocollapse */\nRouterLinkWithHref.ctorParameters = function () { return [\n    { type: Router, },\n    { type: ActivatedRoute, },\n    { type: _angular_common.LocationStrategy, },\n]; };\nRouterLinkWithHref.propDecorators = {\n    \"target\": [{ type: _angular_core.HostBinding, args: ['attr.target',] }, { type: _angular_core.Input },],\n    \"queryParams\": [{ type: _angular_core.Input },],\n    \"fragment\": [{ type: _angular_core.Input },],\n    \"queryParamsHandling\": [{ type: _angular_core.Input },],\n    \"preserveFragment\": [{ type: _angular_core.Input },],\n    \"skipLocationChange\": [{ type: _angular_core.Input },],\n    \"replaceUrl\": [{ type: _angular_core.Input },],\n    \"href\": [{ type: _angular_core.HostBinding },],\n    \"routerLink\": [{ type: _angular_core.Input },],\n    \"preserveQueryParams\": [{ type: _angular_core.Input },],\n    \"onClick\": [{ type: _angular_core.HostListener, args: ['click', ['$event.button', '$event.ctrlKey', '$event.metaKey', '$event.shiftKey'],] },],\n};\n/**\n * @param {?} s\n * @return {?}\n */\nfunction attrBoolValue(s) {\n    return s === '' || !!s;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Lets you add a CSS class to an element when the link's route becomes active.\n *\n * \\@howToUse\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\">Bob</a>\n * ```\n *\n * \\@description\n *\n * The RouterLinkActive directive lets you add a CSS class to an element when the link's route\n * becomes active.\n *\n * Consider the following example:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\">Bob</a>\n * ```\n *\n * When the url is either '/user' or '/user/bob', the active-link class will\n * be added to the `a` tag. If the url changes, the class will be removed.\n *\n * You can set more than one class, as follows:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"class1 class2\">Bob</a>\n * <a routerLink=\"/user/bob\" [routerLinkActive]=\"['class1', 'class2']\">Bob</a>\n * ```\n *\n * You can configure RouterLinkActive by passing `exact: true`. This will add the classes\n * only when the url matches the link exactly.\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact:\n * true}\">Bob</a>\n * ```\n *\n * You can assign the RouterLinkActive instance to a template variable and directly check\n * the `isActive` status.\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive #rla=\"routerLinkActive\">\n *   Bob {{ rla.isActive ? '(already open)' : ''}}\n * </a>\n * ```\n *\n * Finally, you can apply the RouterLinkActive directive to an ancestor of a RouterLink.\n *\n * ```\n * <div routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact: true}\">\n *   <a routerLink=\"/user/jim\">Jim</a>\n *   <a routerLink=\"/user/bob\">Bob</a>\n * </div>\n * ```\n *\n * This will set the active-link class on the div tag if the url is either '/user/jim' or\n * '/user/bob'.\n *\n * \\@ngModule RouterModule\n *\n * \\@stable\n */\nvar RouterLinkActive = (function () {\n    /**\n     * @param {?} router\n     * @param {?} element\n     * @param {?} renderer\n     * @param {?} cdr\n     */\n    function RouterLinkActive(router, element, renderer, cdr) {\n        var _this = this;\n        this.router = router;\n        this.element = element;\n        this.renderer = renderer;\n        this.cdr = cdr;\n        this.classes = [];\n        this.active = false;\n        this.routerLinkActiveOptions = { exact: false };\n        this.subscription = router.events.subscribe(function (s) {\n            if (s instanceof NavigationEnd) {\n                _this.update();\n            }\n        });\n    }\n    Object.defineProperty(RouterLinkActive.prototype, \"isActive\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.active; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    RouterLinkActive.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        this.links.changes.subscribe(function (_) { return _this.update(); });\n        this.linksWithHrefs.changes.subscribe(function (_) { return _this.update(); });\n        this.update();\n    };\n    Object.defineProperty(RouterLinkActive.prototype, \"routerLinkActive\", {\n        /**\n         * @param {?} data\n         * @return {?}\n         */\n        set: function (data) {\n            var /** @type {?} */ classes = Array.isArray(data) ? data : data.split(' ');\n            this.classes = classes.filter(function (c) { return !!c; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    RouterLinkActive.prototype.ngOnChanges = function (changes) { this.update(); };\n    /**\n     * @return {?}\n     */\n    RouterLinkActive.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n    /**\n     * @return {?}\n     */\n    RouterLinkActive.prototype.update = function () {\n        var _this = this;\n        if (!this.links || !this.linksWithHrefs || !this.router.navigated)\n            return;\n        var /** @type {?} */ hasActiveLinks = this.hasActiveLinks();\n        // react only when status has changed to prevent unnecessary dom updates\n        if (this.active !== hasActiveLinks) {\n            this.classes.forEach(function (c) {\n                if (hasActiveLinks) {\n                    _this.renderer.addClass(_this.element.nativeElement, c);\n                }\n                else {\n                    _this.renderer.removeClass(_this.element.nativeElement, c);\n                }\n            });\n            Promise.resolve(hasActiveLinks).then(function (active) { return _this.active = active; });\n        }\n    };\n    /**\n     * @param {?} router\n     * @return {?}\n     */\n    RouterLinkActive.prototype.isLinkActive = function (router) {\n        var _this = this;\n        return function (link) {\n            return router.isActive(link.urlTree, _this.routerLinkActiveOptions.exact);\n        };\n    };\n    /**\n     * @return {?}\n     */\n    RouterLinkActive.prototype.hasActiveLinks = function () {\n        return this.links.some(this.isLinkActive(this.router)) ||\n            this.linksWithHrefs.some(this.isLinkActive(this.router));\n    };\n    return RouterLinkActive;\n}());\nRouterLinkActive.decorators = [\n    { type: _angular_core.Directive, args: [{\n                selector: '[routerLinkActive]',\n                exportAs: 'routerLinkActive',\n            },] },\n];\n/** @nocollapse */\nRouterLinkActive.ctorParameters = function () { return [\n    { type: Router, },\n    { type: _angular_core.ElementRef, },\n    { type: _angular_core.Renderer2, },\n    { type: _angular_core.ChangeDetectorRef, },\n]; };\nRouterLinkActive.propDecorators = {\n    \"links\": [{ type: _angular_core.ContentChildren, args: [RouterLink, { descendants: true },] },],\n    \"linksWithHrefs\": [{ type: _angular_core.ContentChildren, args: [RouterLinkWithHref, { descendants: true },] },],\n    \"routerLinkActiveOptions\": [{ type: _angular_core.Input },],\n    \"routerLinkActive\": [{ type: _angular_core.Input },],\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Store contextual information about a {\\@link RouterOutlet}\n *\n * \\@stable\n */\nvar OutletContext = (function () {\n    function OutletContext() {\n        this.outlet = null;\n        this.route = null;\n        this.resolver = null;\n        this.children = new ChildrenOutletContexts();\n        this.attachRef = null;\n    }\n    return OutletContext;\n}());\n/**\n * Store contextual information about the children (= nested) {\\@link RouterOutlet}\n *\n * \\@stable\n */\nvar ChildrenOutletContexts = (function () {\n    function ChildrenOutletContexts() {\n        this.contexts = new Map();\n    }\n    /**\n     * Called when a `RouterOutlet` directive is instantiated\n     * @param {?} childName\n     * @param {?} outlet\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.onChildOutletCreated = function (childName, outlet) {\n        var /** @type {?} */ context = this.getOrCreateContext(childName);\n        context.outlet = outlet;\n        this.contexts.set(childName, context);\n    };\n    /**\n     * Called when a `RouterOutlet` directive is destroyed.\n     * We need to keep the context as the outlet could be destroyed inside a NgIf and might be\n     * re-created later.\n     * @param {?} childName\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.onChildOutletDestroyed = function (childName) {\n        var /** @type {?} */ context = this.getContext(childName);\n        if (context) {\n            context.outlet = null;\n        }\n    };\n    /**\n     * Called when the corresponding route is deactivated during navigation.\n     * Because the component get destroyed, all children outlet are destroyed.\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.onOutletDeactivated = function () {\n        var /** @type {?} */ contexts = this.contexts;\n        this.contexts = new Map();\n        return contexts;\n    };\n    /**\n     * @param {?} contexts\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.onOutletReAttached = function (contexts) { this.contexts = contexts; };\n    /**\n     * @param {?} childName\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.getOrCreateContext = function (childName) {\n        var /** @type {?} */ context = this.getContext(childName);\n        if (!context) {\n            context = new OutletContext();\n            this.contexts.set(childName, context);\n        }\n        return context;\n    };\n    /**\n     * @param {?} childName\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.getContext = function (childName) { return this.contexts.get(childName) || null; };\n    return ChildrenOutletContexts;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Acts as a placeholder that Angular dynamically fills based on the current router\n * state.\n *\n * \\@howToUse\n *\n * ```\n * <router-outlet></router-outlet>\n * <router-outlet name='left'></router-outlet>\n * <router-outlet name='right'></router-outlet>\n * ```\n *\n * A router outlet will emit an activate event any time a new component is being instantiated,\n * and a deactivate event when it is being destroyed.\n *\n * ```\n * <router-outlet\n *   (activate)='onActivate($event)'\n *   (deactivate)='onDeactivate($event)'></router-outlet>\n * ```\n * \\@ngModule RouterModule\n *\n * \\@stable\n */\nvar RouterOutlet = (function () {\n    /**\n     * @param {?} parentContexts\n     * @param {?} location\n     * @param {?} resolver\n     * @param {?} name\n     * @param {?} changeDetector\n     */\n    function RouterOutlet(parentContexts, location, resolver, name, changeDetector) {\n        this.parentContexts = parentContexts;\n        this.location = location;\n        this.resolver = resolver;\n        this.changeDetector = changeDetector;\n        this.activated = null;\n        this._activatedRoute = null;\n        this.activateEvents = new _angular_core.EventEmitter();\n        this.deactivateEvents = new _angular_core.EventEmitter();\n        this.name = name || PRIMARY_OUTLET;\n        parentContexts.onChildOutletCreated(this.name, this);\n    }\n    /**\n     * @return {?}\n     */\n    RouterOutlet.prototype.ngOnDestroy = function () { this.parentContexts.onChildOutletDestroyed(this.name); };\n    /**\n     * @return {?}\n     */\n    RouterOutlet.prototype.ngOnInit = function () {\n        if (!this.activated) {\n            // If the outlet was not instantiated at the time the route got activated we need to populate\n            // the outlet when it is initialized (ie inside a NgIf)\n            var /** @type {?} */ context = this.parentContexts.getContext(this.name);\n            if (context && context.route) {\n                if (context.attachRef) {\n                    // `attachRef` is populated when there is an existing component to mount\n                    this.attach(context.attachRef, context.route);\n                }\n                else {\n                    // otherwise the component defined in the configuration is created\n                    this.activateWith(context.route, context.resolver || null);\n                }\n            }\n        }\n    };\n    Object.defineProperty(RouterOutlet.prototype, \"locationInjector\", {\n        /**\n         * @deprecated since v4 *\n         * @return {?}\n         */\n        get: function () { return this.location.injector; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"locationFactoryResolver\", {\n        /**\n         * @deprecated since v4 *\n         * @return {?}\n         */\n        get: function () { return this.resolver; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"isActivated\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return !!this.activated; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"component\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this.activated)\n                throw new Error('Outlet is not activated');\n            return this.activated.instance;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"activatedRoute\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (!this.activated)\n                throw new Error('Outlet is not activated');\n            return (this._activatedRoute);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"activatedRouteData\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (this._activatedRoute) {\n                return this._activatedRoute.snapshot.data;\n            }\n            return {};\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Called when the `RouteReuseStrategy` instructs to detach the subtree\n     * @return {?}\n     */\n    RouterOutlet.prototype.detach = function () {\n        if (!this.activated)\n            throw new Error('Outlet is not activated');\n        this.location.detach();\n        var /** @type {?} */ cmp = this.activated;\n        this.activated = null;\n        this._activatedRoute = null;\n        return cmp;\n    };\n    /**\n     * Called when the `RouteReuseStrategy` instructs to re-attach a previously detached subtree\n     * @param {?} ref\n     * @param {?} activatedRoute\n     * @return {?}\n     */\n    RouterOutlet.prototype.attach = function (ref, activatedRoute) {\n        this.activated = ref;\n        this._activatedRoute = activatedRoute;\n        this.location.insert(ref.hostView);\n    };\n    /**\n     * @return {?}\n     */\n    RouterOutlet.prototype.deactivate = function () {\n        if (this.activated) {\n            var /** @type {?} */ c = this.component;\n            this.activated.destroy();\n            this.activated = null;\n            this._activatedRoute = null;\n            this.deactivateEvents.emit(c);\n        }\n    };\n    /**\n     * @param {?} activatedRoute\n     * @param {?} resolver\n     * @return {?}\n     */\n    RouterOutlet.prototype.activateWith = function (activatedRoute, resolver) {\n        if (this.isActivated) {\n            throw new Error('Cannot activate an already activated outlet');\n        }\n        this._activatedRoute = activatedRoute;\n        var /** @type {?} */ snapshot = activatedRoute._futureSnapshot;\n        var /** @type {?} */ component = (((snapshot._routeConfig)).component);\n        resolver = resolver || this.resolver;\n        var /** @type {?} */ factory = resolver.resolveComponentFactory(component);\n        var /** @type {?} */ childContexts = this.parentContexts.getOrCreateContext(this.name).children;\n        var /** @type {?} */ injector = new OutletInjector(activatedRoute, childContexts, this.location.injector);\n        this.activated = this.location.createComponent(factory, this.location.length, injector);\n        // Calling `markForCheck` to make sure we will run the change detection when the\n        // `RouterOutlet` is inside a `ChangeDetectionStrategy.OnPush` component.\n        this.changeDetector.markForCheck();\n        this.activateEvents.emit(this.activated.instance);\n    };\n    return RouterOutlet;\n}());\nRouterOutlet.decorators = [\n    { type: _angular_core.Directive, args: [{ selector: 'router-outlet', exportAs: 'outlet' },] },\n];\n/** @nocollapse */\nRouterOutlet.ctorParameters = function () { return [\n    { type: ChildrenOutletContexts, },\n    { type: _angular_core.ViewContainerRef, },\n    { type: _angular_core.ComponentFactoryResolver, },\n    { type: undefined, decorators: [{ type: _angular_core.Attribute, args: ['name',] },] },\n    { type: _angular_core.ChangeDetectorRef, },\n]; };\nRouterOutlet.propDecorators = {\n    \"activateEvents\": [{ type: _angular_core.Output, args: ['activate',] },],\n    \"deactivateEvents\": [{ type: _angular_core.Output, args: ['deactivate',] },],\n};\nvar OutletInjector = (function () {\n    /**\n     * @param {?} route\n     * @param {?} childContexts\n     * @param {?} parent\n     */\n    function OutletInjector(route, childContexts, parent) {\n        this.route = route;\n        this.childContexts = childContexts;\n        this.parent = parent;\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    OutletInjector.prototype.get = function (token, notFoundValue) {\n        if (token === ActivatedRoute) {\n            return this.route;\n        }\n        if (token === ChildrenOutletContexts) {\n            return this.childContexts;\n        }\n        return this.parent.get(token, notFoundValue);\n    };\n    return OutletInjector;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@whatItDoes Interface that a class can implement to be a guard deciding if a route can be\n * activated.\n *\n * \\@howToUse\n *\n * ```\n * class UserToken {}\n * class Permissions {\n *   canActivate(user: UserToken, id: string): boolean {\n *     return true;\n *   }\n * }\n *\n * \\@Injectable()\n * class CanActivateTeam implements CanActivate {\n *   constructor(private permissions: Permissions, private currentUser: UserToken) {}\n *\n *   canActivate(\n *     route: ActivatedRouteSnapshot,\n *     state: RouterStateSnapshot\n *   ): Observable<boolean>|Promise<boolean>|boolean {\n *     return this.permissions.canActivate(this.currentUser, route.params.id);\n *   }\n * }\n *\n * \\@NgModule({\n *   imports: [\n *     RouterModule.forRoot([\n *       {\n *         path: 'team/:id',\n *         component: TeamCmp,\n *         canActivate: [CanActivateTeam]\n *       }\n *     ])\n *   ],\n *   providers: [CanActivateTeam, UserToken, Permissions]\n * })\n * class AppModule {}\n * ```\n *\n * You can alternatively provide a function with the `canActivate` signature:\n *\n * ```\n * \\@NgModule({\n *   imports: [\n *     RouterModule.forRoot([\n *       {\n *         path: 'team/:id',\n *         component: TeamCmp,\n *         canActivate: ['canActivateTeam']\n *       }\n *     ])\n *   ],\n *   providers: [\n *     {\n *       provide: 'canActivateTeam',\n *       useValue: (route: ActivatedRouteSnapshot, state: RouterStateSnapshot) => true\n *     }\n *   ]\n * })\n * class AppModule {}\n * ```\n *\n * \\@stable\n * @record\n */\nfunction CanActivate$1() { }\n/**\n * \\@whatItDoes Interface that a class can implement to be a guard deciding if a child route can be\n * activated.\n *\n * \\@howToUse\n *\n * ```\n * class UserToken {}\n * class Permissions {\n *   canActivate(user: UserToken, id: string): boolean {\n *     return true;\n *   }\n * }\n *\n * \\@Injectable()\n * class CanActivateTeam implements CanActivateChild {\n *   constructor(private permissions: Permissions, private currentUser: UserToken) {}\n *\n *   canActivateChild(\n *     route: ActivatedRouteSnapshot,\n *     state: RouterStateSnapshot\n *   ): Observable<boolean>|Promise<boolean>|boolean {\n *     return this.permissions.canActivate(this.currentUser, route.params.id);\n *   }\n * }\n *\n * \\@NgModule({\n *   imports: [\n *     RouterModule.forRoot([\n *       {\n *         path: 'root',\n *         canActivateChild: [CanActivateTeam],\n *         children: [\n *           {\n *              path: 'team/:id',\n *              component: Team\n *           }\n *         ]\n *       }\n *     ])\n *   ],\n *   providers: [CanActivateTeam, UserToken, Permissions]\n * })\n * class AppModule {}\n * ```\n *\n * You can alternatively provide a function with the `canActivateChild` signature:\n *\n * ```\n * \\@NgModule({\n *   imports: [\n *     RouterModule.forRoot([\n *       {\n *         path: 'root',\n *         canActivateChild: ['canActivateTeam'],\n *         children: [\n *           {\n *             path: 'team/:id',\n *             component: Team\n *           }\n *         ]\n *       }\n *     ])\n *   ],\n *   providers: [\n *     {\n *       provide: 'canActivateTeam',\n *       useValue: (route: ActivatedRouteSnapshot, state: RouterStateSnapshot) => true\n *     }\n *   ]\n * })\n * class AppModule {}\n * ```\n *\n * \\@stable\n * @record\n */\nfunction CanActivateChild() { }\n/**\n * \\@whatItDoes Interface that a class can implement to be a guard deciding if a route can be\n * deactivated.\n *\n * \\@howToUse\n *\n * ```\n * class UserToken {}\n * class Permissions {\n *   canDeactivate(user: UserToken, id: string): boolean {\n *     return true;\n *   }\n * }\n *\n * \\@Injectable()\n * class CanDeactivateTeam implements CanDeactivate<TeamComponent> {\n *   constructor(private permissions: Permissions, private currentUser: UserToken) {}\n *\n *   canDeactivate(\n *     component: TeamComponent,\n *     currentRoute: ActivatedRouteSnapshot,\n *     currentState: RouterStateSnapshot,\n *     nextState: RouterStateSnapshot\n *   ): Observable<boolean>|Promise<boolean>|boolean {\n *     return this.permissions.canDeactivate(this.currentUser, route.params.id);\n *   }\n * }\n *\n * \\@NgModule({\n *   imports: [\n *     RouterModule.forRoot([\n *       {\n *         path: 'team/:id',\n *         component: TeamCmp,\n *         canDeactivate: [CanDeactivateTeam]\n *       }\n *     ])\n *   ],\n *   providers: [CanDeactivateTeam, UserToken, Permissions]\n * })\n * class AppModule {}\n * ```\n *\n * You can alternatively provide a function with the `canDeactivate` signature:\n *\n * ```\n * \\@NgModule({\n *   imports: [\n *     RouterModule.forRoot([\n *       {\n *         path: 'team/:id',\n *         component: TeamCmp,\n *         canDeactivate: ['canDeactivateTeam']\n *       }\n *     ])\n *   ],\n *   providers: [\n *     {\n *       provide: 'canDeactivateTeam',\n *       useValue: (component: TeamComponent, currentRoute: ActivatedRouteSnapshot, currentState:\n * RouterStateSnapshot, nextState: RouterStateSnapshot) => true\n *     }\n *   ]\n * })\n * class AppModule {}\n * ```\n *\n * \\@stable\n * @record\n */\nfunction CanDeactivate$1() { }\n/**\n * \\@whatItDoes Interface that class can implement to be a data provider.\n *\n * \\@howToUse\n *\n * ```\n * class Backend {\n *   fetchTeam(id: string) {\n *     return 'someTeam';\n *   }\n * }\n *\n * \\@Injectable()\n * class TeamResolver implements Resolve<Team> {\n *   constructor(private backend: Backend) {}\n *\n *   resolve(\n *     route: ActivatedRouteSnapshot,\n *     state: RouterStateSnapshot\n *   ): Observable<any>|Promise<any>|any {\n *     return this.backend.fetchTeam(route.params.id);\n *   }\n * }\n *\n * \\@NgModule({\n *   imports: [\n *     RouterModule.forRoot([\n *       {\n *         path: 'team/:id',\n *         component: TeamCmp,\n *         resolve: {\n *           team: TeamResolver\n *         }\n *       }\n *     ])\n *   ],\n *   providers: [TeamResolver]\n * })\n * class AppModule {}\n * ```\n *\n * You can alternatively provide a function with the `resolve` signature:\n *\n * ```\n * \\@NgModule({\n *   imports: [\n *     RouterModule.forRoot([\n *       {\n *         path: 'team/:id',\n *         component: TeamCmp,\n *         resolve: {\n *           team: 'teamResolver'\n *         }\n *       }\n *     ])\n *   ],\n *   providers: [\n *     {\n *       provide: 'teamResolver',\n *       useValue: (route: ActivatedRouteSnapshot, state: RouterStateSnapshot) => 'team'\n *     }\n *   ]\n * })\n * class AppModule {}\n * ```\n * \\@stable\n * @record\n */\nfunction Resolve() { }\n/**\n * \\@whatItDoes Interface that a class can implement to be a guard deciding if a children can be\n * loaded.\n *\n * \\@howToUse\n *\n * ```\n * class UserToken {}\n * class Permissions {\n *   canLoadChildren(user: UserToken, id: string): boolean {\n *     return true;\n *   }\n * }\n *\n * \\@Injectable()\n * class CanLoadTeamSection implements CanLoad {\n *   constructor(private permissions: Permissions, private currentUser: UserToken) {}\n *\n *   canLoad(route: Route): Observable<boolean>|Promise<boolean>|boolean {\n *     return this.permissions.canLoadChildren(this.currentUser, route);\n *   }\n * }\n *\n * \\@NgModule({\n *   imports: [\n *     RouterModule.forRoot([\n *       {\n *         path: 'team/:id',\n *         component: TeamCmp,\n *         loadChildren: 'team.js',\n *         canLoad: [CanLoadTeamSection]\n *       }\n *     ])\n *   ],\n *   providers: [CanLoadTeamSection, UserToken, Permissions]\n * })\n * class AppModule {}\n * ```\n *\n * You can alternatively provide a function with the `canLoad` signature:\n *\n * ```\n * \\@NgModule({\n *   imports: [\n *     RouterModule.forRoot([\n *       {\n *         path: 'team/:id',\n *         component: TeamCmp,\n *         loadChildren: 'team.js',\n *         canLoad: ['canLoadTeamSection']\n *       }\n *     ])\n *   ],\n *   providers: [\n *     {\n *       provide: 'canLoadTeamSection',\n *       useValue: (route: Route) => true\n *     }\n *   ]\n * })\n * class AppModule {}\n * ```\n *\n * \\@stable\n * @record\n */\nfunction CanLoad() { }\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n*@license\n*Copyright Google Inc. All Rights Reserved.\n*\n*Use of this source code is governed by an MIT-style license that can be\n*found in the LICENSE file at https://angular.io/license\n*/\n/**\n * \\@whatItDoes Provides a preloading strategy.\n *\n * \\@experimental\n * @abstract\n */\nvar PreloadingStrategy = (function () {\n    function PreloadingStrategy() {\n    }\n    return PreloadingStrategy;\n}());\n/**\n * \\@whatItDoes Provides a preloading strategy that preloads all modules as quickly as possible.\n *\n * \\@howToUse\n *\n * ```\n * RouteModule.forRoot(ROUTES, {preloadingStrategy: PreloadAllModules})\n * ```\n *\n * \\@experimental\n */\nvar PreloadAllModules = (function () {\n    function PreloadAllModules() {\n    }\n    /**\n     * @param {?} route\n     * @param {?} fn\n     * @return {?}\n     */\n    PreloadAllModules.prototype.preload = function (route, fn) {\n        return rxjs_operator_catch._catch.call(fn(), function () { return rxjs_observable_of.of(null); });\n    };\n    return PreloadAllModules;\n}());\n/**\n * \\@whatItDoes Provides a preloading strategy that does not preload any modules.\n *\n * \\@description\n *\n * This strategy is enabled by default.\n *\n * \\@experimental\n */\nvar NoPreloading = (function () {\n    function NoPreloading() {\n    }\n    /**\n     * @param {?} route\n     * @param {?} fn\n     * @return {?}\n     */\n    NoPreloading.prototype.preload = function (route, fn) { return rxjs_observable_of.of(null); };\n    return NoPreloading;\n}());\n/**\n * The preloader optimistically loads all router configurations to\n * make navigations into lazily-loaded sections of the application faster.\n *\n * The preloader runs in the background. When the router bootstraps, the preloader\n * starts listening to all navigation events. After every such event, the preloader\n * will check if any configurations can be loaded lazily.\n *\n * If a route is protected by `canLoad` guards, the preloaded will not load it.\n *\n * \\@stable\n */\nvar RouterPreloader = (function () {\n    /**\n     * @param {?} router\n     * @param {?} moduleLoader\n     * @param {?} compiler\n     * @param {?} injector\n     * @param {?} preloadingStrategy\n     */\n    function RouterPreloader(router, moduleLoader, compiler, injector, preloadingStrategy) {\n        this.router = router;\n        this.injector = injector;\n        this.preloadingStrategy = preloadingStrategy;\n        var /** @type {?} */ onStartLoad = function (r) { return router.triggerEvent(new RouteConfigLoadStart(r)); };\n        var /** @type {?} */ onEndLoad = function (r) { return router.triggerEvent(new RouteConfigLoadEnd(r)); };\n        this.loader = new RouterConfigLoader(moduleLoader, compiler, onStartLoad, onEndLoad);\n    }\n    \n    /**\n     * @return {?}\n     */\n    RouterPreloader.prototype.setUpPreloading = function () {\n        var _this = this;\n        var /** @type {?} */ navigations$ = rxjs_operator_filter.filter.call(this.router.events, function (e) { return e instanceof NavigationEnd; });\n        this.subscription = rxjs_operator_concatMap.concatMap.call(navigations$, function () { return _this.preload(); }).subscribe(function () { });\n    };\n    /**\n     * @return {?}\n     */\n    RouterPreloader.prototype.preload = function () {\n        var /** @type {?} */ ngModule = this.injector.get(_angular_core.NgModuleRef);\n        return this.processRoutes(ngModule, this.router.config);\n    };\n    /**\n     * @return {?}\n     */\n    RouterPreloader.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n    /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @return {?}\n     */\n    RouterPreloader.prototype.processRoutes = function (ngModule, routes) {\n        var /** @type {?} */ res = [];\n        for (var _i = 0, routes_1 = routes; _i < routes_1.length; _i++) {\n            var route = routes_1[_i];\n            // we already have the config loaded, just recurse\n            if (route.loadChildren && !route.canLoad && route._loadedConfig) {\n                var /** @type {?} */ childConfig = route._loadedConfig;\n                res.push(this.processRoutes(childConfig.module, childConfig.routes));\n                // no config loaded, fetch the config\n            }\n            else if (route.loadChildren && !route.canLoad) {\n                res.push(this.preloadConfig(ngModule, route));\n                // recurse into children\n            }\n            else if (route.children) {\n                res.push(this.processRoutes(ngModule, route.children));\n            }\n        }\n        return rxjs_operator_mergeAll.mergeAll.call(rxjs_observable_from.from(res));\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} route\n     * @return {?}\n     */\n    RouterPreloader.prototype.preloadConfig = function (ngModule, route) {\n        var _this = this;\n        return this.preloadingStrategy.preload(route, function () {\n            var /** @type {?} */ loaded$ = _this.loader.load(ngModule.injector, route);\n            return rxjs_operator_mergeMap.mergeMap.call(loaded$, function (config) {\n                route._loadedConfig = config;\n                return _this.processRoutes(config.module, config.routes);\n            });\n        });\n    };\n    return RouterPreloader;\n}());\nRouterPreloader.decorators = [\n    { type: _angular_core.Injectable },\n];\n/** @nocollapse */\nRouterPreloader.ctorParameters = function () { return [\n    { type: Router, },\n    { type: _angular_core.NgModuleFactoryLoader, },\n    { type: _angular_core.Compiler, },\n    { type: _angular_core.Injector, },\n    { type: PreloadingStrategy, },\n]; };\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Contains a list of directives\n * \\@stable\n */\nvar ROUTER_DIRECTIVES = [RouterOutlet, RouterLink, RouterLinkWithHref, RouterLinkActive];\n/**\n * \\@whatItDoes Is used in DI to configure the router.\n * \\@stable\n */\nvar ROUTER_CONFIGURATION = new _angular_core.InjectionToken('ROUTER_CONFIGURATION');\n/**\n * \\@docsNotRequired\n */\nvar ROUTER_FORROOT_GUARD = new _angular_core.InjectionToken('ROUTER_FORROOT_GUARD');\nvar ROUTER_PROVIDERS = [\n    _angular_common.Location,\n    { provide: UrlSerializer, useClass: DefaultUrlSerializer },\n    {\n        provide: Router,\n        useFactory: setupRouter,\n        deps: [\n            _angular_core.ApplicationRef, UrlSerializer, ChildrenOutletContexts, _angular_common.Location, _angular_core.Injector,\n            _angular_core.NgModuleFactoryLoader, _angular_core.Compiler, ROUTES, ROUTER_CONFIGURATION,\n            [UrlHandlingStrategy, new _angular_core.Optional()], [RouteReuseStrategy, new _angular_core.Optional()]\n        ]\n    },\n    ChildrenOutletContexts,\n    { provide: ActivatedRoute, useFactory: rootRoute, deps: [Router] },\n    { provide: _angular_core.NgModuleFactoryLoader, useClass: _angular_core.SystemJsNgModuleLoader },\n    RouterPreloader,\n    NoPreloading,\n    PreloadAllModules,\n    { provide: ROUTER_CONFIGURATION, useValue: { enableTracing: false } },\n];\n/**\n * @return {?}\n */\nfunction routerNgProbeToken() {\n    return new _angular_core.NgProbeToken('Router', Router);\n}\n/**\n * \\@whatItDoes Adds router directives and providers.\n *\n * \\@howToUse\n *\n * RouterModule can be imported multiple times: once per lazily-loaded bundle.\n * Since the router deals with a global shared resource--location, we cannot have\n * more than one router service active.\n *\n * That is why there are two ways to create the module: `RouterModule.forRoot` and\n * `RouterModule.forChild`.\n *\n * * `forRoot` creates a module that contains all the directives, the given routes, and the router\n *   service itself.\n * * `forChild` creates a module that contains all the directives and the given routes, but does not\n *   include the router service.\n *\n * When registered at the root, the module should be used as follows\n *\n * ```\n * \\@NgModule({\n *   imports: [RouterModule.forRoot(ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n * For submodules and lazy loaded submodules the module should be used as follows:\n *\n * ```\n * \\@NgModule({\n *   imports: [RouterModule.forChild(ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n * \\@description\n *\n * Managing state transitions is one of the hardest parts of building applications. This is\n * especially true on the web, where you also need to ensure that the state is reflected in the URL.\n * In addition, we often want to split applications into multiple bundles and load them on demand.\n * Doing this transparently is not trivial.\n *\n * The Angular router solves these problems. Using the router, you can declaratively specify\n * application states, manage state transitions while taking care of the URL, and load bundles on\n * demand.\n *\n * [Read this developer guide](https://angular.io/docs/ts/latest/guide/router.html) to get an\n * overview of how the router should be used.\n *\n * \\@stable\n */\nvar RouterModule = (function () {\n    /**\n     * @param {?} guard\n     * @param {?} router\n     */\n    function RouterModule(guard, router) {\n    }\n    /**\n     * Creates a module with all the router providers and directives. It also optionally sets up an\n     * application listener to perform an initial navigation.\n     *\n     * Options:\n     * * `enableTracing` makes the router log all its internal events to the console.\n     * * `useHash` enables the location strategy that uses the URL fragment instead of the history\n     * API.\n     * * `initialNavigation` disables the initial navigation.\n     * * `errorHandler` provides a custom error handler.\n     * @param {?} routes\n     * @param {?=} config\n     * @return {?}\n     */\n    RouterModule.forRoot = function (routes, config) {\n        return {\n            ngModule: RouterModule,\n            providers: [\n                ROUTER_PROVIDERS,\n                provideRoutes(routes),\n                {\n                    provide: ROUTER_FORROOT_GUARD,\n                    useFactory: provideForRootGuard,\n                    deps: [[Router, new _angular_core.Optional(), new _angular_core.SkipSelf()]]\n                },\n                { provide: ROUTER_CONFIGURATION, useValue: config ? config : {} },\n                {\n                    provide: _angular_common.LocationStrategy,\n                    useFactory: provideLocationStrategy,\n                    deps: [\n                        _angular_common.PlatformLocation, [new _angular_core.Inject(_angular_common.APP_BASE_HREF), new _angular_core.Optional()], ROUTER_CONFIGURATION\n                    ]\n                },\n                {\n                    provide: PreloadingStrategy,\n                    useExisting: config && config.preloadingStrategy ? config.preloadingStrategy :\n                        NoPreloading\n                },\n                { provide: _angular_core.NgProbeToken, multi: true, useFactory: routerNgProbeToken },\n                provideRouterInitializer(),\n            ],\n        };\n    };\n    /**\n     * Creates a module with all the router directives and a provider registering routes.\n     * @param {?} routes\n     * @return {?}\n     */\n    RouterModule.forChild = function (routes) {\n        return { ngModule: RouterModule, providers: [provideRoutes(routes)] };\n    };\n    return RouterModule;\n}());\nRouterModule.decorators = [\n    { type: _angular_core.NgModule, args: [{ declarations: ROUTER_DIRECTIVES, exports: ROUTER_DIRECTIVES },] },\n];\n/** @nocollapse */\nRouterModule.ctorParameters = function () { return [\n    { type: undefined, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Inject, args: [ROUTER_FORROOT_GUARD,] },] },\n    { type: Router, decorators: [{ type: _angular_core.Optional },] },\n]; };\n/**\n * @param {?} platformLocationStrategy\n * @param {?} baseHref\n * @param {?=} options\n * @return {?}\n */\nfunction provideLocationStrategy(platformLocationStrategy, baseHref, options) {\n    if (options === void 0) { options = {}; }\n    return options.useHash ? new _angular_common.HashLocationStrategy(platformLocationStrategy, baseHref) :\n        new _angular_common.PathLocationStrategy(platformLocationStrategy, baseHref);\n}\n/**\n * @param {?} router\n * @return {?}\n */\nfunction provideForRootGuard(router) {\n    if (router) {\n        throw new Error(\"RouterModule.forRoot() called twice. Lazy loaded modules should use RouterModule.forChild() instead.\");\n    }\n    return 'guarded';\n}\n/**\n * \\@whatItDoes Registers routes.\n *\n * \\@howToUse\n *\n * ```\n * \\@NgModule({\n *   imports: [RouterModule.forChild(ROUTES)],\n *   providers: [provideRoutes(EXTRA_ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n * \\@stable\n * @param {?} routes\n * @return {?}\n */\nfunction provideRoutes(routes) {\n    return [\n        { provide: _angular_core.ANALYZE_FOR_ENTRY_COMPONENTS, multi: true, useValue: routes },\n        { provide: ROUTES, multi: true, useValue: routes },\n    ];\n}\n/**\n * \\@whatItDoes Represents options to configure the router.\n *\n * \\@stable\n * @record\n */\nfunction ExtraOptions() { }\n/**\n * @param {?} ref\n * @param {?} urlSerializer\n * @param {?} contexts\n * @param {?} location\n * @param {?} injector\n * @param {?} loader\n * @param {?} compiler\n * @param {?} config\n * @param {?=} opts\n * @param {?=} urlHandlingStrategy\n * @param {?=} routeReuseStrategy\n * @return {?}\n */\nfunction setupRouter(ref, urlSerializer, contexts, location, injector, loader, compiler, config, opts, urlHandlingStrategy, routeReuseStrategy) {\n    if (opts === void 0) { opts = {}; }\n    var /** @type {?} */ router = new Router(null, urlSerializer, contexts, location, injector, loader, compiler, flatten(config));\n    if (urlHandlingStrategy) {\n        router.urlHandlingStrategy = urlHandlingStrategy;\n    }\n    if (routeReuseStrategy) {\n        router.routeReuseStrategy = routeReuseStrategy;\n    }\n    if (opts.errorHandler) {\n        router.errorHandler = opts.errorHandler;\n    }\n    if (opts.enableTracing) {\n        var /** @type {?} */ dom_1 = _angular_platformBrowser.ɵgetDOM();\n        router.events.subscribe(function (e) {\n            dom_1.logGroup(\"Router Event: \" + (((e.constructor))).name);\n            dom_1.log(e.toString());\n            dom_1.log(e);\n            dom_1.logGroupEnd();\n        });\n    }\n    return router;\n}\n/**\n * @param {?} router\n * @return {?}\n */\nfunction rootRoute(router) {\n    return router.routerState.root;\n}\n/**\n * To initialize the router properly we need to do in two steps:\n *\n * We need to start the navigation in a APP_INITIALIZER to block the bootstrap if\n * a resolver or a guards executes asynchronously. Second, we need to actually run\n * activation in a BOOTSTRAP_LISTENER. We utilize the afterPreactivation\n * hook provided by the router to do that.\n *\n * The router navigation starts, reaches the point when preactivation is done, and then\n * pauses. It waits for the hook to be resolved. We then resolve it only in a bootstrap listener.\n */\nvar RouterInitializer = (function () {\n    /**\n     * @param {?} injector\n     */\n    function RouterInitializer(injector) {\n        this.injector = injector;\n        this.initNavigation = false;\n        this.resultOfPreactivationDone = new rxjs_Subject.Subject();\n    }\n    /**\n     * @return {?}\n     */\n    RouterInitializer.prototype.appInitializer = function () {\n        var _this = this;\n        var /** @type {?} */ p = this.injector.get(_angular_common.LOCATION_INITIALIZED, Promise.resolve(null));\n        return p.then(function () {\n            var /** @type {?} */ resolve = ((null));\n            var /** @type {?} */ res = new Promise(function (r) { return resolve = r; });\n            var /** @type {?} */ router = _this.injector.get(Router);\n            var /** @type {?} */ opts = _this.injector.get(ROUTER_CONFIGURATION);\n            if (_this.isLegacyDisabled(opts) || _this.isLegacyEnabled(opts)) {\n                resolve(true);\n            }\n            else if (opts.initialNavigation === 'disabled') {\n                router.setUpLocationChangeListener();\n                resolve(true);\n            }\n            else if (opts.initialNavigation === 'enabled') {\n                router.hooks.afterPreactivation = function () {\n                    // only the initial navigation should be delayed\n                    if (!_this.initNavigation) {\n                        _this.initNavigation = true;\n                        resolve(true);\n                        return _this.resultOfPreactivationDone;\n                        // subsequent navigations should not be delayed\n                    }\n                    else {\n                        return (rxjs_observable_of.of(null));\n                    }\n                };\n                router.initialNavigation();\n            }\n            else {\n                throw new Error(\"Invalid initialNavigation options: '\" + opts.initialNavigation + \"'\");\n            }\n            return res;\n        });\n    };\n    /**\n     * @param {?} bootstrappedComponentRef\n     * @return {?}\n     */\n    RouterInitializer.prototype.bootstrapListener = function (bootstrappedComponentRef) {\n        var /** @type {?} */ opts = this.injector.get(ROUTER_CONFIGURATION);\n        var /** @type {?} */ preloader = this.injector.get(RouterPreloader);\n        var /** @type {?} */ router = this.injector.get(Router);\n        var /** @type {?} */ ref = this.injector.get(_angular_core.ApplicationRef);\n        if (bootstrappedComponentRef !== ref.components[0]) {\n            return;\n        }\n        if (this.isLegacyEnabled(opts)) {\n            router.initialNavigation();\n        }\n        else if (this.isLegacyDisabled(opts)) {\n            router.setUpLocationChangeListener();\n        }\n        preloader.setUpPreloading();\n        router.resetRootComponentType(ref.componentTypes[0]);\n        this.resultOfPreactivationDone.next(/** @type {?} */ ((null)));\n        this.resultOfPreactivationDone.complete();\n    };\n    /**\n     * @param {?} opts\n     * @return {?}\n     */\n    RouterInitializer.prototype.isLegacyEnabled = function (opts) {\n        return opts.initialNavigation === 'legacy_enabled' || opts.initialNavigation === true ||\n            opts.initialNavigation === undefined;\n    };\n    /**\n     * @param {?} opts\n     * @return {?}\n     */\n    RouterInitializer.prototype.isLegacyDisabled = function (opts) {\n        return opts.initialNavigation === 'legacy_disabled' || opts.initialNavigation === false;\n    };\n    return RouterInitializer;\n}());\nRouterInitializer.decorators = [\n    { type: _angular_core.Injectable },\n];\n/** @nocollapse */\nRouterInitializer.ctorParameters = function () { return [\n    { type: _angular_core.Injector, },\n]; };\n/**\n * @param {?} r\n * @return {?}\n */\nfunction getAppInitializer(r) {\n    return r.appInitializer.bind(r);\n}\n/**\n * @param {?} r\n * @return {?}\n */\nfunction getBootstrapListener(r) {\n    return r.bootstrapListener.bind(r);\n}\n/**\n * A token for the router initializer that will be called after the app is bootstrapped.\n *\n * \\@experimental\n */\nvar ROUTER_INITIALIZER = new _angular_core.InjectionToken('Router Initializer');\n/**\n * @return {?}\n */\nfunction provideRouterInitializer() {\n    return [\n        RouterInitializer,\n        {\n            provide: _angular_core.APP_INITIALIZER,\n            multi: true,\n            useFactory: getAppInitializer,\n            deps: [RouterInitializer]\n        },\n        { provide: ROUTER_INITIALIZER, useFactory: getBootstrapListener, deps: [RouterInitializer] },\n        { provide: _angular_core.APP_BOOTSTRAP_LISTENER, multi: true, useExisting: ROUTER_INITIALIZER },\n    ];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n/**\n * \\@stable\n */\nvar VERSION = new _angular_core.Version('5.0.0-beta.6-fa6b802');\n\nexports.Route = Route;\nexports.RouterLink = RouterLink;\nexports.RouterLinkWithHref = RouterLinkWithHref;\nexports.RouterLinkActive = RouterLinkActive;\nexports.RouterOutlet = RouterOutlet;\nexports.ChildActivationEnd = ChildActivationEnd;\nexports.ChildActivationStart = ChildActivationStart;\nexports.GuardsCheckEnd = GuardsCheckEnd;\nexports.GuardsCheckStart = GuardsCheckStart;\nexports.NavigationCancel = NavigationCancel;\nexports.NavigationEnd = NavigationEnd;\nexports.NavigationError = NavigationError;\nexports.NavigationStart = NavigationStart;\nexports.ResolveEnd = ResolveEnd;\nexports.ResolveStart = ResolveStart;\nexports.RouteConfigLoadEnd = RouteConfigLoadEnd;\nexports.RouteConfigLoadStart = RouteConfigLoadStart;\nexports.RouteEvent = RouteEvent;\nexports.RoutesRecognized = RoutesRecognized;\nexports.CanActivate = CanActivate$1;\nexports.CanActivateChild = CanActivateChild;\nexports.CanDeactivate = CanDeactivate$1;\nexports.CanLoad = CanLoad;\nexports.Resolve = Resolve;\nexports.RouteReuseStrategy = RouteReuseStrategy;\nexports.NavigationExtras = NavigationExtras;\nexports.Router = Router;\nexports.ROUTES = ROUTES;\nexports.ExtraOptions = ExtraOptions;\nexports.ROUTER_CONFIGURATION = ROUTER_CONFIGURATION;\nexports.ROUTER_INITIALIZER = ROUTER_INITIALIZER;\nexports.RouterModule = RouterModule;\nexports.provideRoutes = provideRoutes;\nexports.ChildrenOutletContexts = ChildrenOutletContexts;\nexports.OutletContext = OutletContext;\nexports.NoPreloading = NoPreloading;\nexports.PreloadAllModules = PreloadAllModules;\nexports.PreloadingStrategy = PreloadingStrategy;\nexports.RouterPreloader = RouterPreloader;\nexports.ActivatedRoute = ActivatedRoute;\nexports.ActivatedRouteSnapshot = ActivatedRouteSnapshot;\nexports.RouterState = RouterState;\nexports.RouterStateSnapshot = RouterStateSnapshot;\nexports.PRIMARY_OUTLET = PRIMARY_OUTLET;\nexports.ParamMap = ParamMap;\nexports.convertToParamMap = convertToParamMap;\nexports.UrlHandlingStrategy = UrlHandlingStrategy;\nexports.DefaultUrlSerializer = DefaultUrlSerializer;\nexports.UrlSegment = UrlSegment;\nexports.UrlSegmentGroup = UrlSegmentGroup;\nexports.UrlSerializer = UrlSerializer;\nexports.UrlTree = UrlTree;\nexports.VERSION = VERSION;\nexports.ɵROUTER_PROVIDERS = ROUTER_PROVIDERS;\nexports.ɵflatten = flatten;\nexports.ɵa = RouterEvent;\nexports.ɵb = ROUTER_FORROOT_GUARD;\nexports.ɵh = RouterInitializer;\nexports.ɵi = getAppInitializer;\nexports.ɵj = getBootstrapListener;\nexports.ɵe = provideForRootGuard;\nexports.ɵd = provideLocationStrategy;\nexports.ɵk = provideRouterInitializer;\nexports.ɵg = rootRoute;\nexports.ɵc = routerNgProbeToken;\nexports.ɵf = setupRouter;\nexports.ɵl = Tree;\nexports.ɵm = TreeNode;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=router.umd.js.map\n"]}