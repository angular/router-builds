{"version":3,"sources":["packages/router/router.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","router","core","rxjs","operators","common","this","i0","i3","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__values","o","s","Symbol","iterator","m","i","call","length","next","value","done","TypeError","__read","n","r","e","ar","push","error","__spread","arguments","concat","RouterEvent","NavigationStart","_super","id","url","navigationTrigger","restoredState","_this","toString","NavigationEnd","urlAfterRedirects","NavigationCancel","reason","NavigationError","RoutesRecognized","state","GuardsCheckStart","GuardsCheckEnd","shouldActivate","ResolveStart","ResolveEnd","RouteConfigLoadStart","route","path","RouteConfigLoadEnd","ChildActivationStart","snapshot","routeConfig","ChildActivationEnd","ActivationStart","ActivationEnd","Scroll","routerEvent","position","anchor","ParamsAsMap","params","has","name","get","v","isArray","getAll","defineProperty","keys","enumerable","configurable","convertToParamMap","navigationCancelingError","message","Error","defaultUrlMatcher","segments","segmentGroup","parts","split","pathMatch","hasChildren","posParams","index","part","segment","startsWith","substring","consumed","slice","shallowEqual","a","key","k1","k2","equalArraysOrString","aSorted","sort","bSorted_1","every","val","flatten","arr","apply","last","forEach","map","callback","prop","wrapIntoObservable","ɵisObservable","ɵisPromise","from","Promise","resolve","of","containsTree","container","containee","exact","equalQueryParams","queryParams","equalSegmentGroups","equalPath","numberOfChildren","c","children","root","containsQueryParams","containsSegmentGroup","containsSegmentGroupHelper","containeePaths","current","UrlTree","fragment","_queryParamMap","DEFAULT_SERIALIZER","serialize","UrlSegmentGroup","parent","k","serializePaths","UrlSegment","parameters","_parameterMap","serializePath","as","bs","mapChildrenIntoArray","fn","res","child","childOutlet","UrlSerializer","DefaultUrlSerializer","parse","UrlParser","parseRootSegment","parseQueryParams","parseFragment","tree","serializeSegment","primary","children_1","join","serializeQueryParams","strParams","encodeUriQuery","encodeUriFragment","encodeURI","encodeUriString","encodeURIComponent","replace","encodeUriSegment","decode","decodeURIComponent","decodeQuery","serializeMatrixParams","SEGMENT_RE","matchSegments","str","match","QUERY_PARAM_RE","QUERY_PARAM_VALUE_RE","remaining","consumeOptional","peekStartsWith","parseChildren","parseQueryParam","parseSegment","capture","parseParens","parseMatrixParams","parseParam","valueMatch","matchQueryParams","matchUrlQueryParamValue","decodedKey","decodedVal","currentVal","allowPrimary","outletName","undefined","indexOf","substr","Tree","_root","t","pathFromRoot","findNode","firstChild","siblings","findPath","filter","cc","node","e_1","_a","_b","_c","node_1","e_1_1","return","e_2","unshift","e_2_1","TreeNode","nodeChildrenAsMap","outlet","RouterState","setRouterState","createEmptyState","urlTree","rootComponent","createEmptyStateSnapshot","activated","ActivatedRouteSnapshot","RouterStateSnapshot","emptyUrl","BehaviorSubject","emptyParams","emptyData","emptyQueryParams","ActivatedRoute","data","component","futureSnapshot","_futureSnapshot","_routerState","_paramMap","pipe","inheritedParamsDataResolve","paramsInheritanceStrategy","inheritingStartingFrom","flattenInherited","reduce","curr","assign","_resolvedData","urlSegment","lastPathIndex","_urlSegment","_lastPathIndex","_resolve","serializeNode","advanceActivatedRoute","currentSnapshot","nextSnapshot","shallowEqualArrays","equalParamsAndUrlSegments","equalSegments","isMatrixParams","command","outlets","segmentPath","oldSegmentGroup","newSegmentGroup","qp","replaceSegment","oldSegment","newSegment","Navigation","isAbsolute","numberOfDoubleDots","commands","cmdWithOutlet","find","toRoot","Position","processChildren","getPath","updateSegmentGroup","startIndex","updateSegmentGroupChildren","prefixedWith","currentCommandIndex","currentPathIndex","noMatch","pathIndex","commandIndex","compare","slicedCommands","g","createNewSegmentGroup","outlets_2","getOutlets","paths","createNewSegmentChildren","stringify","ActivateRoutes","routeReuseStrategy","futureState","currState","forwardEvent","activate","parentContexts","futureRoot","currRoot","deactivateChildRoutes","activateChildRoutes","futureNode","currNode","contexts","futureChild","childOutletName","deactivateRoutes","childName","deactivateRouteAndItsChildren","parentContext","future","context","getContext","shouldDetach","detachAndStoreRouteSubtree","deactivateRouteAndOutlet","componentRef","detach","onOutletDeactivated","store","contexts_1","deactivate","activateRoutes","getOrCreateContext","shouldAttach","stored","retrieve","onOutletReAttached","attachRef","attach","advanceActivatedRouteNodeAndItsChildren","config","parentLoadedConfig","_loadedConfig","cmpFactoryResolver","componentFactoryResolver","resolver","activateWith","LoadedRouterConfig","routes","isFunction","isUrlTree","INITIAL_VALUE","prioritizedGuardValue","switchMap","obs","combineLatest","take","startWith","scan","acc","list","isPending","innerAcc","item","NoMatch","AbsoluteRedirect","Observable","absoluteRedirect","newTree","namedOutletsRedirect","redirectTo","ApplyRedirects","moduleInjector","configLoader","urlSerializer","allowRedirects","ngModule","NgModuleRef","expandSegmentGroup","rootSegmentGroup","createUrlTree","catchError","noMatchError","rootCandidate","expandChildren","expandSegment","waitForMap","obj","waitHead","waitTail","mapped","concatAll","expandSegmentAgainstRoute","first","_","EmptyError","noLeftoversInUrl","getOutlet","matchSegmentAgainstRoute","expandSegmentAgainstRouteUsingRedirect","expandWildCardWithParamsAgainstRouteUsingRedirect","expandRegularSegmentAgainstRouteUsingRedirect","applyRedirectCommands","lineralizeSegments","mergeMap","newSegments","group","consumedSegments","lastChild","positionalParamSegments","matched","rawSegmentGroup","loadChildren","load","injector","cfg","rawSlicedSegments","getChildConfig","routerConfig","childModule","childConfig","slicedSegments","containsEmptyPathRedirectsWithNamedOutlets","some","isEmptyPathRedirect","mergeTrivialChildren","createChildrenForEmptySegments","primarySegmentGroup","e_3","routes_2","routes_2_1","e_3_1","containsEmptyPathRedirects","addEmptySegmentsToChildrenIfNeeded","routes_1","routes_1_1","cs","runCanLoadGuards","shouldLoadResult","canLoadFails","canLoad","canLoadObservables","injectionToken","guardVal","guard","isCanLoad","tap","result","applyRedirectCreatreUrlTree","newRoot","createSegmentGroup","createQueryParams","redirectToParams","actualParams","sourceName","updatedSegments","createSegments","redirectToSegments","actualSegments","findPosParam","findOrReturn","redirectToUrlSegment","pos","idx","actualSegments_1","actualSegments_1_1","splice","matcher","CanActivate","CanDeactivate","getToken","token","getClosestLoadedConfig","getChildRouteGuards","futurePath","checks","canDeactivateChecks","canActivateChecks","prevChildren","getRouteGuards","shouldRun","shouldRunGuardsAndResolvers","mode","runGuardsAndResolvers","isActivated","fireActivationStart","fireChildActivationStart","runCanActivate","futureRSS","futureARS","canActivate","canActivateObservables","defer","observable","isCanActivate","runCanActivateChild","canActivateChildGuardsMapped","reverse","getCanActivateChild","canActivateChild","guards","guardsMapped","isCanActivateChild","NoMatch$1","Recognizer","rootComponentType","relativeLinkResolution","recognize","split$1","processSegmentGroup","freeze","rootNode","routeState","inheritParamsAndData","routeNode","processSegment","checkOutletNameUniqueness","nodes","names","routeWithSameOutletName","sortActivatedRouteSnapshots","localeCompare","config_1","config_1_1","processSegmentAgainstRoute","rawSegment","getData","getSourceSegmentGroup","getPathIndexShift","getResolve","match$1","_sourceSegment","_segmentIndexShift","containsEmptyPathMatchesWithNamedOutlets","emptyPathMatch","getOutlet$1","s_1","createChildrenForEmptyPaths","primarySegment","containsEmptyPathMatches","s_2","addEmptyPathsToChildrenIfNeeded","switchTap","source","nextResult","RouteReuseStrategy","DefaultRouteReuseStrategy","detachedTree","shouldReuseRoute","OutletContext","ChildrenOutletContexts","Map","onChildOutletCreated","set","onChildOutletDestroyed","RouterOutlet","location","changeDetector","_activatedRoute","activateEvents","EventEmitter","deactivateEvents","ngOnDestroy","ngOnInit","instance","cmp","ref","activatedRoute","insert","hostView","destroy","emit","resolveComponentFactory","childContexts","OutletInjector","createComponent","markForCheck","ɵfac","RouterOutlet_Factory","ɵɵdirectiveInject","ViewContainerRef","ComponentFactoryResolver","ɵɵinjectAttribute","ChangeDetectorRef","ɵdir","ɵɵdefineDirective","type","selectors","outputs","exportAs","ɵEmptyOutletComponent","notFoundValue","validateConfig","parentPath","validateNode","getFullPath","fullPath","charAt","currentRoute","standardizeConfig","ɵEmptyOutletComponent_Factory","ɵcmp","ɵɵdefineComponent","decls","vars","template","ɵEmptyOutletComponent_Template","rf","ctx","ɵɵelement","directives","encapsulation","ROUTES","InjectionToken","RouterConfigLoader","loader","compiler","onLoadStartListener","onLoadEndListener","parentInjector","loadModuleFactory","NgModuleFactory","compileModuleAsync","UrlHandlingStrategy","DefaultUrlHandlingStrategy","shouldProcessUrl","extract","merge","newUrlPart","wholeUrl","defaultErrorHandler","defaultMalformedUriErrorHandler","defaultRouterHook","runExtras","Router","rootContexts","lastSuccessfulNavigation","currentNavigation","lastLocationChangeInfo","navigationId","isNgZoneEnabled","events","Subject","errorHandler","malformedUriErrorHandler","navigated","lastSuccessfulId","hooks","beforePreactivation","afterPreactivation","urlHandlingStrategy","onSameUrlNavigation","urlUpdateStrategy","console","ɵConsole","ngZone","NgZone","resetConfig","currentUrlTree","createEmptyUrlTree","rawUrlTree","browserUrlTree","triggerEvent","routerState","transitions","currentRawUrl","extractedUrl","rawUrl","extras","reject","promise","targetSnapshot","currentRouterState","targetRouterState","guardsResult","navigations","setupNavigations","processNavigations","eventsSubject","completed","errored","initialUrl","trigger","previousNavigation","urlTransition","transition","getValue","serializeUrl","EMPTY","applyRedirects$1","applyRedirects","finalUrl","recognize$1","serializer","skipLocationChange","setBrowserUrl","replaceUrl","routesRecognized","navStart","appliedUrlTree","guardsStart","checkGuards","runCanDeactivateChecks","currRSS","check","runCanDeactivate","currARS","canDeactivate","canDeactivateObservables","isCanDeactivate","isBoolean","runCanActivateChecks","concatMap","evt","guardsEnd","resetUrlToCurrentUrlTree","navCancel","resolveStart","dataResolved","resolveData","canActivateChecksResolved","runResolve","resolveNode","getResolver","takeLast","resolvedData","complete","resolveEnd","createRouterState","prevState","createNode","createOrReuseChildren","detachedRouteHandle","setFutureSnapshotsOfActivatedRoutes","createActivatedRoute","finalize","isNavigationCancelingError","redirecting","resetStateAndUrl","setTimeout","mergedTree","scheduleNavigation","navError","ee","resetRootComponentType","getTransition","setTransition","initialNavigation","setUpLocationChangeListener","navigateByUrl","locationSubscription","subscribe","event","currentChange","extractLocationChangeInfoFromEvent","shouldScheduleNavigation","change","parseUrl","transitionId","previous","sameDestination","getCurrentNavigation","dispose","unsubscribe","navigationExtras","relativeTo","preserveQueryParams","queryParamsHandling","preserveFragment","isDevMode","warn","f","q","removeEmptyProps","nav","computeNavigation","cmd","cmdIdx","outlets_1","urlPart","partIndex","startingPosition","findStartingPosition","modifier","createPositionApplyingDoubleDots","ci","dd","isInAngularZone","navigate","validateCommands","isActive","priorPromise","lastNavigation","browserNavPrecededByRouterNav","duplicateNav","rej","catch","isCurrentPathEqualTo","replaceState","go","storedState","storedUrl","Router_Factory","ɵɵinvalidFactory","ɵprov","ɵɵdefineInjectable","RouterLink","tabIndex","renderer","el","setAttribute","nativeElement","preserve","onClick","attrBoolValue","RouterLink_Factory","Renderer2","ElementRef","hostBindings","RouterLink_HostBindings","ɵɵlistener","RouterLink_click_HostBindingHandler","inputs","routerLink","RouterLinkWithHref","locationStrategy","subscription","updateTargetUrlAndHref","ngOnChanges","changes","button","ctrlKey","metaKey","shiftKey","target","href","prepareExternalUrl","RouterLinkWithHref_Factory","LocationStrategy","hostVars","RouterLinkWithHref_HostBindings","RouterLinkWithHref_click_HostBindingHandler","$event","ɵɵhostProperty","ɵɵsanitizeUrl","ɵɵattribute","features","ɵɵNgOnChangesFeature","RouterLinkActive","element","cdr","link","linkWithHref","classes","routerLinkActiveOptions","update","ngAfterContentInit","links","linksWithHrefs","then","hasActiveLinks","addClass","removeClass","isLinkActive","isActiveCheckFn","RouterLinkActive_Factory","contentQueries","RouterLinkActive_ContentQueries","dirIndex","_t","ɵɵcontentQuery","ɵɵqueryRefresh","ɵɵloadQuery","routerLinkActive","PreloadingStrategy","PreloadAllModules","preload","NoPreloading","RouterPreloader","moduleLoader","preloadingStrategy","setUpPreloading","processRoutes","preloadConfig","mergeAll","RouterPreloader_Factory","ɵɵinject","NgModuleFactoryLoader","Compiler","Injector","RouterScroller","viewportScroller","options","lastId","lastSource","restoredId","scrollPositionRestoration","anchorScrolling","init","setHistoryScrollRestoration","routerEventsSubscription","createScrollEvents","scrollEventsSubscription","consumeScrollEvents","getScrollPosition","scheduleScrollEvent","scrollToPosition","scrollToAnchor","RouterScroller_Factory","ROUTER_CONFIGURATION","ROUTER_FORROOT_GUARD","ROUTER_PROVIDERS","Location","provide","useClass","useFactory","setupRouter","opts","enableTracing","dom_1","ɵgetDOM","logGroup","log","logGroupEnd","deps","Optional","rootRoute","SystemJsNgModuleLoader","useValue","routerNgProbeToken","NgProbeToken","RouterModule","forRoot","providers","provideRoutes","provideForRootGuard","SkipSelf","provideLocationStrategy","PlatformLocation","Inject","APP_BASE_HREF","createRouterScroller","ViewportScroller","useExisting","multi","RouterInitializer","APP_INITIALIZER","getAppInitializer","ROUTER_INITIALIZER","getBootstrapListener","APP_BOOTSTRAP_LISTENER","forChild","scrollOffset","setOffset","platformLocationStrategy","baseHref","useHash","HashLocationStrategy","PathLocationStrategy","ANALYZE_FOR_ENTRY_COMPONENTS","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","RouterModule_Factory","ngJitMode","ɵɵsetNgModuleScope","declarations","initNavigation","resultOfPreactivationDone","appInitializer","LOCATION_INITIALIZED","isLegacyDisabled","isLegacyEnabled","bootstrapListener","bootstrappedComponentRef","preloader","routerScroller","ApplicationRef","components","componentTypes","bind","RouterInitializer_Factory","VERSION","Version","PRIMARY_OUTLET","ɵROUTER_PROVIDERS","ɵflatten"],"mappings":"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","sourcesContent":["/**\n * @license Angular v10.1.0-next.3+12.sha-b280d54\n * (c) 2010-2020 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('rxjs'), require('rxjs/operators'), require('@angular/common')) :\n    typeof define === 'function' && define.amd ? define('@angular/router', ['exports', '@angular/core', 'rxjs', 'rxjs/operators', '@angular/common'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.router = {}), global.ng.core, global.rxjs, global.rxjs.operators, global.ng.common));\n}(this, (function (exports, i0, rxjs, operators, i3) { 'use strict';\n\n    /*! *****************************************************************************\n    Copyright (c) Microsoft Corporation.\n\n    Permission to use, copy, modify, and/or distribute this software for any\n    purpose with or without fee is hereby granted.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n    PERFORMANCE OF THIS SOFTWARE.\n    ***************************************************************************** */\n    /* global Reflect, Promise */\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b)\n                if (b.hasOwnProperty(p))\n                    d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    function __extends(d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    }\n    var __assign = function () {\n        __assign = Object.assign || function __assign(t) {\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\n                s = arguments[i];\n                for (var p in s)\n                    if (Object.prototype.hasOwnProperty.call(s, p))\n                        t[p] = s[p];\n            }\n            return t;\n        };\n        return __assign.apply(this, arguments);\n    };\n    function __rest(s, e) {\n        var t = {};\n        for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n                t[p] = s[p];\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                    t[p[i]] = s[p[i]];\n            }\n        return t;\n    }\n    function __decorate(decorators, target, key, desc) {\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\")\n            r = Reflect.decorate(decorators, target, key, desc);\n        else\n            for (var i = decorators.length - 1; i >= 0; i--)\n                if (d = decorators[i])\n                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\n    }\n    function __param(paramIndex, decorator) {\n        return function (target, key) { decorator(target, key, paramIndex); };\n    }\n    function __metadata(metadataKey, metadataValue) {\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\")\n            return Reflect.metadata(metadataKey, metadataValue);\n    }\n    function __awaiter(thisArg, _arguments, P, generator) {\n        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n        return new (P || (P = Promise))(function (resolve, reject) {\n            function fulfilled(value) { try {\n                step(generator.next(value));\n            }\n            catch (e) {\n                reject(e);\n            } }\n            function rejected(value) { try {\n                step(generator[\"throw\"](value));\n            }\n            catch (e) {\n                reject(e);\n            } }\n            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\n        });\n    }\n    function __generator(thisArg, body) {\n        var _ = { label: 0, sent: function () { if (t[0] & 1)\n                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () { return this; }), g;\n        function verb(n) { return function (v) { return step([n, v]); }; }\n        function step(op) {\n            if (f)\n                throw new TypeError(\"Generator is already executing.\");\n            while (_)\n                try {\n                    if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)\n                        return t;\n                    if (y = 0, t)\n                        op = [op[0] & 2, t.value];\n                    switch (op[0]) {\n                        case 0:\n                        case 1:\n                            t = op;\n                            break;\n                        case 4:\n                            _.label++;\n                            return { value: op[1], done: false };\n                        case 5:\n                            _.label++;\n                            y = op[1];\n                            op = [0];\n                            continue;\n                        case 7:\n                            op = _.ops.pop();\n                            _.trys.pop();\n                            continue;\n                        default:\n                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                                _ = 0;\n                                continue;\n                            }\n                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {\n                                _.label = op[1];\n                                break;\n                            }\n                            if (op[0] === 6 && _.label < t[1]) {\n                                _.label = t[1];\n                                t = op;\n                                break;\n                            }\n                            if (t && _.label < t[2]) {\n                                _.label = t[2];\n                                _.ops.push(op);\n                                break;\n                            }\n                            if (t[2])\n                                _.ops.pop();\n                            _.trys.pop();\n                            continue;\n                    }\n                    op = body.call(thisArg, _);\n                }\n                catch (e) {\n                    op = [6, e];\n                    y = 0;\n                }\n                finally {\n                    f = t = 0;\n                }\n            if (op[0] & 5)\n                throw op[1];\n            return { value: op[0] ? op[1] : void 0, done: true };\n        }\n    }\n    var __createBinding = Object.create ? (function (o, m, k, k2) {\n        if (k2 === undefined)\n            k2 = k;\n        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });\n    }) : (function (o, m, k, k2) {\n        if (k2 === undefined)\n            k2 = k;\n        o[k2] = m[k];\n    });\n    function __exportStar(m, exports) {\n        for (var p in m)\n            if (p !== \"default\" && !exports.hasOwnProperty(p))\n                __createBinding(exports, m, p);\n    }\n    function __values(o) {\n        var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n        if (m)\n            return m.call(o);\n        if (o && typeof o.length === \"number\")\n            return {\n                next: function () {\n                    if (o && i >= o.length)\n                        o = void 0;\n                    return { value: o && o[i++], done: !o };\n                }\n            };\n        throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n    }\n    function __read(o, n) {\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n        if (!m)\n            return o;\n        var i = m.call(o), r, ar = [], e;\n        try {\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)\n                ar.push(r.value);\n        }\n        catch (error) {\n            e = { error: error };\n        }\n        finally {\n            try {\n                if (r && !r.done && (m = i[\"return\"]))\n                    m.call(i);\n            }\n            finally {\n                if (e)\n                    throw e.error;\n            }\n        }\n        return ar;\n    }\n    function __spread() {\n        for (var ar = [], i = 0; i < arguments.length; i++)\n            ar = ar.concat(__read(arguments[i]));\n        return ar;\n    }\n    function __spreadArrays() {\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++)\n            s += arguments[i].length;\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n                r[k] = a[j];\n        return r;\n    }\n    ;\n    function __await(v) {\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\n    }\n    function __asyncGenerator(thisArg, _arguments, generator) {\n        if (!Symbol.asyncIterator)\n            throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n        function verb(n) { if (g[n])\n            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n        function resume(n, v) { try {\n            step(g[n](v));\n        }\n        catch (e) {\n            settle(q[0][3], e);\n        } }\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n        function fulfill(value) { resume(\"next\", value); }\n        function reject(value) { resume(\"throw\", value); }\n        function settle(f, v) { if (f(v), q.shift(), q.length)\n            resume(q[0][0], q[0][1]); }\n    }\n    function __asyncDelegator(o) {\n        var i, p;\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\n    }\n    function __asyncValues(o) {\n        if (!Symbol.asyncIterator)\n            throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n        var m = o[Symbol.asyncIterator], i;\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }\n    }\n    function __makeTemplateObject(cooked, raw) {\n        if (Object.defineProperty) {\n            Object.defineProperty(cooked, \"raw\", { value: raw });\n        }\n        else {\n            cooked.raw = raw;\n        }\n        return cooked;\n    }\n    ;\n    var __setModuleDefault = Object.create ? (function (o, v) {\n        Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n    }) : function (o, v) {\n        o[\"default\"] = v;\n    };\n    function __importStar(mod) {\n        if (mod && mod.__esModule)\n            return mod;\n        var result = {};\n        if (mod != null)\n            for (var k in mod)\n                if (Object.hasOwnProperty.call(mod, k))\n                    __createBinding(result, mod, k);\n        __setModuleDefault(result, mod);\n        return result;\n    }\n    function __importDefault(mod) {\n        return (mod && mod.__esModule) ? mod : { default: mod };\n    }\n    function __classPrivateFieldGet(receiver, privateMap) {\n        if (!privateMap.has(receiver)) {\n            throw new TypeError(\"attempted to get private field on non-instance\");\n        }\n        return privateMap.get(receiver);\n    }\n    function __classPrivateFieldSet(receiver, privateMap, value) {\n        if (!privateMap.has(receiver)) {\n            throw new TypeError(\"attempted to set private field on non-instance\");\n        }\n        privateMap.set(receiver, value);\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base for events the router goes through, as opposed to events tied to a specific\n     * route. Fired one time for any given navigation.\n     *\n     * The following code shows how a class subscribes to router events.\n     *\n     * ```ts\n     * class MyService {\n     *   constructor(public router: Router, logger: Logger) {\n     *     router.events.pipe(\n     *        filter((e: Event): e is RouterEvent => e instanceof RouterEvent)\n     *     ).subscribe((e: RouterEvent) => {\n     *       logger.log(e.id, e.url);\n     *     });\n     *   }\n     * }\n     * ```\n     *\n     * @see `Event`\n     * @see [Router events summary](guide/router#router-events)\n     * @publicApi\n     */\n    var RouterEvent = /** @class */ (function () {\n        function RouterEvent(\n        /** A unique ID that the router assigns to every router navigation. */\n        id, \n        /** The URL that is the destination for this navigation. */\n        url) {\n            this.id = id;\n            this.url = url;\n        }\n        return RouterEvent;\n    }());\n    /**\n     * An event triggered when a navigation starts.\n     *\n     * @publicApi\n     */\n    var NavigationStart = /** @class */ (function (_super) {\n        __extends(NavigationStart, _super);\n        function NavigationStart(\n        /** @docsNotRequired */\n        id, \n        /** @docsNotRequired */\n        url, \n        /** @docsNotRequired */\n        navigationTrigger, \n        /** @docsNotRequired */\n        restoredState) {\n            if (navigationTrigger === void 0) { navigationTrigger = 'imperative'; }\n            if (restoredState === void 0) { restoredState = null; }\n            var _this = _super.call(this, id, url) || this;\n            _this.navigationTrigger = navigationTrigger;\n            _this.restoredState = restoredState;\n            return _this;\n        }\n        /** @docsNotRequired */\n        NavigationStart.prototype.toString = function () {\n            return \"NavigationStart(id: \" + this.id + \", url: '\" + this.url + \"')\";\n        };\n        return NavigationStart;\n    }(RouterEvent));\n    /**\n     * An event triggered when a navigation ends successfully.\n     *\n     * @see `NavigationStart`\n     * @see `NavigationCancel`\n     * @see `NavigationError`\n     *\n     * @publicApi\n     */\n    var NavigationEnd = /** @class */ (function (_super) {\n        __extends(NavigationEnd, _super);\n        function NavigationEnd(\n        /** @docsNotRequired */\n        id, \n        /** @docsNotRequired */\n        url, \n        /** @docsNotRequired */\n        urlAfterRedirects) {\n            var _this = _super.call(this, id, url) || this;\n            _this.urlAfterRedirects = urlAfterRedirects;\n            return _this;\n        }\n        /** @docsNotRequired */\n        NavigationEnd.prototype.toString = function () {\n            return \"NavigationEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"')\";\n        };\n        return NavigationEnd;\n    }(RouterEvent));\n    /**\n     * An event triggered when a navigation is canceled, directly or indirectly.\n     * This can happen when a route guard\n     * returns `false` or initiates a redirect by returning a `UrlTree`.\n     *\n     * @see `NavigationStart`\n     * @see `NavigationEnd`\n     * @see `NavigationError`\n     *\n     * @publicApi\n     */\n    var NavigationCancel = /** @class */ (function (_super) {\n        __extends(NavigationCancel, _super);\n        function NavigationCancel(\n        /** @docsNotRequired */\n        id, \n        /** @docsNotRequired */\n        url, \n        /** @docsNotRequired */\n        reason) {\n            var _this = _super.call(this, id, url) || this;\n            _this.reason = reason;\n            return _this;\n        }\n        /** @docsNotRequired */\n        NavigationCancel.prototype.toString = function () {\n            return \"NavigationCancel(id: \" + this.id + \", url: '\" + this.url + \"')\";\n        };\n        return NavigationCancel;\n    }(RouterEvent));\n    /**\n     * An event triggered when a navigation fails due to an unexpected error.\n     *\n     * @see `NavigationStart`\n     * @see `NavigationEnd`\n     * @see `NavigationCancel`\n     *\n     * @publicApi\n     */\n    var NavigationError = /** @class */ (function (_super) {\n        __extends(NavigationError, _super);\n        function NavigationError(\n        /** @docsNotRequired */\n        id, \n        /** @docsNotRequired */\n        url, \n        /** @docsNotRequired */\n        error) {\n            var _this = _super.call(this, id, url) || this;\n            _this.error = error;\n            return _this;\n        }\n        /** @docsNotRequired */\n        NavigationError.prototype.toString = function () {\n            return \"NavigationError(id: \" + this.id + \", url: '\" + this.url + \"', error: \" + this.error + \")\";\n        };\n        return NavigationError;\n    }(RouterEvent));\n    /**\n     * An event triggered when routes are recognized.\n     *\n     * @publicApi\n     */\n    var RoutesRecognized = /** @class */ (function (_super) {\n        __extends(RoutesRecognized, _super);\n        function RoutesRecognized(\n        /** @docsNotRequired */\n        id, \n        /** @docsNotRequired */\n        url, \n        /** @docsNotRequired */\n        urlAfterRedirects, \n        /** @docsNotRequired */\n        state) {\n            var _this = _super.call(this, id, url) || this;\n            _this.urlAfterRedirects = urlAfterRedirects;\n            _this.state = state;\n            return _this;\n        }\n        /** @docsNotRequired */\n        RoutesRecognized.prototype.toString = function () {\n            return \"RoutesRecognized(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n        };\n        return RoutesRecognized;\n    }(RouterEvent));\n    /**\n     * An event triggered at the start of the Guard phase of routing.\n     *\n     * @see `GuardsCheckEnd`\n     *\n     * @publicApi\n     */\n    var GuardsCheckStart = /** @class */ (function (_super) {\n        __extends(GuardsCheckStart, _super);\n        function GuardsCheckStart(\n        /** @docsNotRequired */\n        id, \n        /** @docsNotRequired */\n        url, \n        /** @docsNotRequired */\n        urlAfterRedirects, \n        /** @docsNotRequired */\n        state) {\n            var _this = _super.call(this, id, url) || this;\n            _this.urlAfterRedirects = urlAfterRedirects;\n            _this.state = state;\n            return _this;\n        }\n        GuardsCheckStart.prototype.toString = function () {\n            return \"GuardsCheckStart(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n        };\n        return GuardsCheckStart;\n    }(RouterEvent));\n    /**\n     * An event triggered at the end of the Guard phase of routing.\n     *\n     * @see `GuardsCheckStart`\n     *\n     * @publicApi\n     */\n    var GuardsCheckEnd = /** @class */ (function (_super) {\n        __extends(GuardsCheckEnd, _super);\n        function GuardsCheckEnd(\n        /** @docsNotRequired */\n        id, \n        /** @docsNotRequired */\n        url, \n        /** @docsNotRequired */\n        urlAfterRedirects, \n        /** @docsNotRequired */\n        state, \n        /** @docsNotRequired */\n        shouldActivate) {\n            var _this = _super.call(this, id, url) || this;\n            _this.urlAfterRedirects = urlAfterRedirects;\n            _this.state = state;\n            _this.shouldActivate = shouldActivate;\n            return _this;\n        }\n        GuardsCheckEnd.prototype.toString = function () {\n            return \"GuardsCheckEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \", shouldActivate: \" + this.shouldActivate + \")\";\n        };\n        return GuardsCheckEnd;\n    }(RouterEvent));\n    /**\n     * An event triggered at the the start of the Resolve phase of routing.\n     *\n     * Runs in the \"resolve\" phase whether or not there is anything to resolve.\n     * In future, may change to only run when there are things to be resolved.\n     *\n     * @see `ResolveEnd`\n     *\n     * @publicApi\n     */\n    var ResolveStart = /** @class */ (function (_super) {\n        __extends(ResolveStart, _super);\n        function ResolveStart(\n        /** @docsNotRequired */\n        id, \n        /** @docsNotRequired */\n        url, \n        /** @docsNotRequired */\n        urlAfterRedirects, \n        /** @docsNotRequired */\n        state) {\n            var _this = _super.call(this, id, url) || this;\n            _this.urlAfterRedirects = urlAfterRedirects;\n            _this.state = state;\n            return _this;\n        }\n        ResolveStart.prototype.toString = function () {\n            return \"ResolveStart(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n        };\n        return ResolveStart;\n    }(RouterEvent));\n    /**\n     * An event triggered at the end of the Resolve phase of routing.\n     * @see `ResolveStart`.\n     *\n     * @publicApi\n     */\n    var ResolveEnd = /** @class */ (function (_super) {\n        __extends(ResolveEnd, _super);\n        function ResolveEnd(\n        /** @docsNotRequired */\n        id, \n        /** @docsNotRequired */\n        url, \n        /** @docsNotRequired */\n        urlAfterRedirects, \n        /** @docsNotRequired */\n        state) {\n            var _this = _super.call(this, id, url) || this;\n            _this.urlAfterRedirects = urlAfterRedirects;\n            _this.state = state;\n            return _this;\n        }\n        ResolveEnd.prototype.toString = function () {\n            return \"ResolveEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n        };\n        return ResolveEnd;\n    }(RouterEvent));\n    /**\n     * An event triggered before lazy loading a route configuration.\n     *\n     * @see `RouteConfigLoadEnd`\n     *\n     * @publicApi\n     */\n    var RouteConfigLoadStart = /** @class */ (function () {\n        function RouteConfigLoadStart(\n        /** @docsNotRequired */\n        route) {\n            this.route = route;\n        }\n        RouteConfigLoadStart.prototype.toString = function () {\n            return \"RouteConfigLoadStart(path: \" + this.route.path + \")\";\n        };\n        return RouteConfigLoadStart;\n    }());\n    /**\n     * An event triggered when a route has been lazy loaded.\n     *\n     * @see `RouteConfigLoadStart`\n     *\n     * @publicApi\n     */\n    var RouteConfigLoadEnd = /** @class */ (function () {\n        function RouteConfigLoadEnd(\n        /** @docsNotRequired */\n        route) {\n            this.route = route;\n        }\n        RouteConfigLoadEnd.prototype.toString = function () {\n            return \"RouteConfigLoadEnd(path: \" + this.route.path + \")\";\n        };\n        return RouteConfigLoadEnd;\n    }());\n    /**\n     * An event triggered at the start of the child-activation\n     * part of the Resolve phase of routing.\n     * @see  `ChildActivationEnd`\n     * @see `ResolveStart`\n     *\n     * @publicApi\n     */\n    var ChildActivationStart = /** @class */ (function () {\n        function ChildActivationStart(\n        /** @docsNotRequired */\n        snapshot) {\n            this.snapshot = snapshot;\n        }\n        ChildActivationStart.prototype.toString = function () {\n            var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n            return \"ChildActivationStart(path: '\" + path + \"')\";\n        };\n        return ChildActivationStart;\n    }());\n    /**\n     * An event triggered at the end of the child-activation part\n     * of the Resolve phase of routing.\n     * @see `ChildActivationStart`\n     * @see `ResolveStart`\n     * @publicApi\n     */\n    var ChildActivationEnd = /** @class */ (function () {\n        function ChildActivationEnd(\n        /** @docsNotRequired */\n        snapshot) {\n            this.snapshot = snapshot;\n        }\n        ChildActivationEnd.prototype.toString = function () {\n            var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n            return \"ChildActivationEnd(path: '\" + path + \"')\";\n        };\n        return ChildActivationEnd;\n    }());\n    /**\n     * An event triggered at the start of the activation part\n     * of the Resolve phase of routing.\n     * @see `ActivationEnd`\n     * @see `ResolveStart`\n     *\n     * @publicApi\n     */\n    var ActivationStart = /** @class */ (function () {\n        function ActivationStart(\n        /** @docsNotRequired */\n        snapshot) {\n            this.snapshot = snapshot;\n        }\n        ActivationStart.prototype.toString = function () {\n            var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n            return \"ActivationStart(path: '\" + path + \"')\";\n        };\n        return ActivationStart;\n    }());\n    /**\n     * An event triggered at the end of the activation part\n     * of the Resolve phase of routing.\n     * @see `ActivationStart`\n     * @see `ResolveStart`\n     *\n     * @publicApi\n     */\n    var ActivationEnd = /** @class */ (function () {\n        function ActivationEnd(\n        /** @docsNotRequired */\n        snapshot) {\n            this.snapshot = snapshot;\n        }\n        ActivationEnd.prototype.toString = function () {\n            var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n            return \"ActivationEnd(path: '\" + path + \"')\";\n        };\n        return ActivationEnd;\n    }());\n    /**\n     * An event triggered by scrolling.\n     *\n     * @publicApi\n     */\n    var Scroll = /** @class */ (function () {\n        function Scroll(\n        /** @docsNotRequired */\n        routerEvent, \n        /** @docsNotRequired */\n        position, \n        /** @docsNotRequired */\n        anchor) {\n            this.routerEvent = routerEvent;\n            this.position = position;\n            this.anchor = anchor;\n        }\n        Scroll.prototype.toString = function () {\n            var pos = this.position ? this.position[0] + \", \" + this.position[1] : null;\n            return \"Scroll(anchor: '\" + this.anchor + \"', position: '\" + pos + \"')\";\n        };\n        return Scroll;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The primary routing outlet.\n     *\n     * @publicApi\n     */\n    var PRIMARY_OUTLET = 'primary';\n    var ParamsAsMap = /** @class */ (function () {\n        function ParamsAsMap(params) {\n            this.params = params || {};\n        }\n        ParamsAsMap.prototype.has = function (name) {\n            return Object.prototype.hasOwnProperty.call(this.params, name);\n        };\n        ParamsAsMap.prototype.get = function (name) {\n            if (this.has(name)) {\n                var v = this.params[name];\n                return Array.isArray(v) ? v[0] : v;\n            }\n            return null;\n        };\n        ParamsAsMap.prototype.getAll = function (name) {\n            if (this.has(name)) {\n                var v = this.params[name];\n                return Array.isArray(v) ? v : [v];\n            }\n            return [];\n        };\n        Object.defineProperty(ParamsAsMap.prototype, \"keys\", {\n            get: function () {\n                return Object.keys(this.params);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        return ParamsAsMap;\n    }());\n    /**\n     * Converts a `Params` instance to a `ParamMap`.\n     * @param params The instance to convert.\n     * @returns The new map instance.\n     *\n     * @publicApi\n     */\n    function convertToParamMap(params) {\n        return new ParamsAsMap(params);\n    }\n    var NAVIGATION_CANCELING_ERROR = 'ngNavigationCancelingError';\n    function navigationCancelingError(message) {\n        var error = Error('NavigationCancelingError: ' + message);\n        error[NAVIGATION_CANCELING_ERROR] = true;\n        return error;\n    }\n    function isNavigationCancelingError(error) {\n        return error && error[NAVIGATION_CANCELING_ERROR];\n    }\n    // Matches the route configuration (`route`) against the actual URL (`segments`).\n    function defaultUrlMatcher(segments, segmentGroup, route) {\n        var parts = route.path.split('/');\n        if (parts.length > segments.length) {\n            // The actual URL is shorter than the config, no match\n            return null;\n        }\n        if (route.pathMatch === 'full' &&\n            (segmentGroup.hasChildren() || parts.length < segments.length)) {\n            // The config is longer than the actual URL but we are looking for a full match, return null\n            return null;\n        }\n        var posParams = {};\n        // Check each config part against the actual URL\n        for (var index = 0; index < parts.length; index++) {\n            var part = parts[index];\n            var segment = segments[index];\n            var isParameter = part.startsWith(':');\n            if (isParameter) {\n                posParams[part.substring(1)] = segment;\n            }\n            else if (part !== segment.path) {\n                // The actual URL part does not match the config, no match\n                return null;\n            }\n        }\n        return { consumed: segments.slice(0, parts.length), posParams: posParams };\n    }\n\n    function shallowEqualArrays(a, b) {\n        if (a.length !== b.length)\n            return false;\n        for (var i = 0; i < a.length; ++i) {\n            if (!shallowEqual(a[i], b[i]))\n                return false;\n        }\n        return true;\n    }\n    function shallowEqual(a, b) {\n        // Casting Object.keys return values to include `undefined` as there are some cases\n        // in IE 11 where this can happen. Cannot provide a test because the behavior only\n        // exists in certain circumstances in IE 11, therefore doing this cast ensures the\n        // logic is correct for when this edge case is hit.\n        var k1 = Object.keys(a);\n        var k2 = Object.keys(b);\n        if (!k1 || !k2 || k1.length != k2.length) {\n            return false;\n        }\n        var key;\n        for (var i = 0; i < k1.length; i++) {\n            key = k1[i];\n            if (!equalArraysOrString(a[key], b[key])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * Test equality for arrays of strings or a string.\n     */\n    function equalArraysOrString(a, b) {\n        if (Array.isArray(a) && Array.isArray(b)) {\n            if (a.length !== b.length)\n                return false;\n            var aSorted = __spread(a).sort();\n            var bSorted_1 = __spread(b).sort();\n            return aSorted.every(function (val, index) { return bSorted_1[index] === val; });\n        }\n        else {\n            return a === b;\n        }\n    }\n    /**\n     * Flattens single-level nested arrays.\n     */\n    function flatten(arr) {\n        return Array.prototype.concat.apply([], arr);\n    }\n    /**\n     * Return the last element of an array.\n     */\n    function last(a) {\n        return a.length > 0 ? a[a.length - 1] : null;\n    }\n    /**\n     * Verifys all booleans in an array are `true`.\n     */\n    function and(bools) {\n        return !bools.some(function (v) { return !v; });\n    }\n    function forEach(map, callback) {\n        for (var prop in map) {\n            if (map.hasOwnProperty(prop)) {\n                callback(map[prop], prop);\n            }\n        }\n    }\n    function waitForMap(obj, fn) {\n        if (Object.keys(obj).length === 0) {\n            return rxjs.of({});\n        }\n        var waitHead = [];\n        var waitTail = [];\n        var res = {};\n        forEach(obj, function (a, k) {\n            var mapped = fn(k, a).pipe(operators.map(function (r) { return res[k] = r; }));\n            if (k === PRIMARY_OUTLET) {\n                waitHead.push(mapped);\n            }\n            else {\n                waitTail.push(mapped);\n            }\n        });\n        // Closure compiler has problem with using spread operator here. So we use \"Array.concat\".\n        // Note that we also need to cast the new promise because TypeScript cannot infer the type\n        // when calling the \"of\" function through \"Function.apply\"\n        return rxjs.of.apply(null, waitHead.concat(waitTail))\n            .pipe(operators.concatAll(), operators.last(), operators.map(function () { return res; }));\n    }\n    function wrapIntoObservable(value) {\n        if (i0.ɵisObservable(value)) {\n            return value;\n        }\n        if (i0.ɵisPromise(value)) {\n            // Use `Promise.resolve()` to wrap promise-like instances.\n            // Required ie when a Resolver returns a AngularJS `$q` promise to correctly trigger the\n            // change detection.\n            return rxjs.from(Promise.resolve(value));\n        }\n        return rxjs.of(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function createEmptyUrlTree() {\n        return new UrlTree(new UrlSegmentGroup([], {}), {}, null);\n    }\n    function containsTree(container, containee, exact) {\n        if (exact) {\n            return equalQueryParams(container.queryParams, containee.queryParams) &&\n                equalSegmentGroups(container.root, containee.root);\n        }\n        return containsQueryParams(container.queryParams, containee.queryParams) &&\n            containsSegmentGroup(container.root, containee.root);\n    }\n    function equalQueryParams(container, containee) {\n        // TODO: This does not handle array params correctly.\n        return shallowEqual(container, containee);\n    }\n    function equalSegmentGroups(container, containee) {\n        if (!equalPath(container.segments, containee.segments))\n            return false;\n        if (container.numberOfChildren !== containee.numberOfChildren)\n            return false;\n        for (var c in containee.children) {\n            if (!container.children[c])\n                return false;\n            if (!equalSegmentGroups(container.children[c], containee.children[c]))\n                return false;\n        }\n        return true;\n    }\n    function containsQueryParams(container, containee) {\n        return Object.keys(containee).length <= Object.keys(container).length &&\n            Object.keys(containee).every(function (key) { return equalArraysOrString(container[key], containee[key]); });\n    }\n    function containsSegmentGroup(container, containee) {\n        return containsSegmentGroupHelper(container, containee, containee.segments);\n    }\n    function containsSegmentGroupHelper(container, containee, containeePaths) {\n        if (container.segments.length > containeePaths.length) {\n            var current = container.segments.slice(0, containeePaths.length);\n            if (!equalPath(current, containeePaths))\n                return false;\n            if (containee.hasChildren())\n                return false;\n            return true;\n        }\n        else if (container.segments.length === containeePaths.length) {\n            if (!equalPath(container.segments, containeePaths))\n                return false;\n            for (var c in containee.children) {\n                if (!container.children[c])\n                    return false;\n                if (!containsSegmentGroup(container.children[c], containee.children[c]))\n                    return false;\n            }\n            return true;\n        }\n        else {\n            var current = containeePaths.slice(0, container.segments.length);\n            var next = containeePaths.slice(container.segments.length);\n            if (!equalPath(container.segments, current))\n                return false;\n            if (!container.children[PRIMARY_OUTLET])\n                return false;\n            return containsSegmentGroupHelper(container.children[PRIMARY_OUTLET], containee, next);\n        }\n    }\n    /**\n     * @description\n     *\n     * Represents the parsed URL.\n     *\n     * Since a router state is a tree, and the URL is nothing but a serialized state, the URL is a\n     * serialized tree.\n     * UrlTree is a data structure that provides a lot of affordances in dealing with URLs\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * @Component({templateUrl:'template.html'})\n     * class MyComponent {\n     *   constructor(router: Router) {\n     *     const tree: UrlTree =\n     *       router.parseUrl('/team/33/(user/victor//support:help)?debug=true#fragment');\n     *     const f = tree.fragment; // return 'fragment'\n     *     const q = tree.queryParams; // returns {debug: 'true'}\n     *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n     *     const s: UrlSegment[] = g.segments; // returns 2 segments 'team' and '33'\n     *     g.children[PRIMARY_OUTLET].segments; // returns 2 segments 'user' and 'victor'\n     *     g.children['support'].segments; // return 1 segment 'help'\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var UrlTree = /** @class */ (function () {\n        /** @internal */\n        function UrlTree(\n        /** The root segment group of the URL tree */\n        root, \n        /** The query params of the URL */\n        queryParams, \n        /** The fragment of the URL */\n        fragment) {\n            this.root = root;\n            this.queryParams = queryParams;\n            this.fragment = fragment;\n        }\n        Object.defineProperty(UrlTree.prototype, \"queryParamMap\", {\n            get: function () {\n                if (!this._queryParamMap) {\n                    this._queryParamMap = convertToParamMap(this.queryParams);\n                }\n                return this._queryParamMap;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        /** @docsNotRequired */\n        UrlTree.prototype.toString = function () {\n            return DEFAULT_SERIALIZER.serialize(this);\n        };\n        return UrlTree;\n    }());\n    /**\n     * @description\n     *\n     * Represents the parsed URL segment group.\n     *\n     * See `UrlTree` for more information.\n     *\n     * @publicApi\n     */\n    var UrlSegmentGroup = /** @class */ (function () {\n        function UrlSegmentGroup(\n        /** The URL segments of this group. See `UrlSegment` for more information */\n        segments, \n        /** The list of children of this group */\n        children) {\n            var _this = this;\n            this.segments = segments;\n            this.children = children;\n            /** The parent node in the url tree */\n            this.parent = null;\n            forEach(children, function (v, k) { return v.parent = _this; });\n        }\n        /** Whether the segment has child segments */\n        UrlSegmentGroup.prototype.hasChildren = function () {\n            return this.numberOfChildren > 0;\n        };\n        Object.defineProperty(UrlSegmentGroup.prototype, \"numberOfChildren\", {\n            /** Number of child segments */\n            get: function () {\n                return Object.keys(this.children).length;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        /** @docsNotRequired */\n        UrlSegmentGroup.prototype.toString = function () {\n            return serializePaths(this);\n        };\n        return UrlSegmentGroup;\n    }());\n    /**\n     * @description\n     *\n     * Represents a single URL segment.\n     *\n     * A UrlSegment is a part of a URL between the two slashes. It contains a path and the matrix\n     * parameters associated with the segment.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * @Component({templateUrl:'template.html'})\n     * class MyComponent {\n     *   constructor(router: Router) {\n     *     const tree: UrlTree = router.parseUrl('/team;id=33');\n     *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n     *     const s: UrlSegment[] = g.segments;\n     *     s[0].path; // returns 'team'\n     *     s[0].parameters; // returns {id: 33}\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var UrlSegment = /** @class */ (function () {\n        function UrlSegment(\n        /** The path part of a URL segment */\n        path, \n        /** The matrix parameters associated with a segment */\n        parameters) {\n            this.path = path;\n            this.parameters = parameters;\n        }\n        Object.defineProperty(UrlSegment.prototype, \"parameterMap\", {\n            get: function () {\n                if (!this._parameterMap) {\n                    this._parameterMap = convertToParamMap(this.parameters);\n                }\n                return this._parameterMap;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        /** @docsNotRequired */\n        UrlSegment.prototype.toString = function () {\n            return serializePath(this);\n        };\n        return UrlSegment;\n    }());\n    function equalSegments(as, bs) {\n        return equalPath(as, bs) && as.every(function (a, i) { return shallowEqual(a.parameters, bs[i].parameters); });\n    }\n    function equalPath(as, bs) {\n        if (as.length !== bs.length)\n            return false;\n        return as.every(function (a, i) { return a.path === bs[i].path; });\n    }\n    function mapChildrenIntoArray(segment, fn) {\n        var res = [];\n        forEach(segment.children, function (child, childOutlet) {\n            if (childOutlet === PRIMARY_OUTLET) {\n                res = res.concat(fn(child, childOutlet));\n            }\n        });\n        forEach(segment.children, function (child, childOutlet) {\n            if (childOutlet !== PRIMARY_OUTLET) {\n                res = res.concat(fn(child, childOutlet));\n            }\n        });\n        return res;\n    }\n    /**\n     * @description\n     *\n     * Serializes and deserializes a URL string into a URL tree.\n     *\n     * The url serialization strategy is customizable. You can\n     * make all URLs case insensitive by providing a custom UrlSerializer.\n     *\n     * See `DefaultUrlSerializer` for an example of a URL serializer.\n     *\n     * @publicApi\n     */\n    var UrlSerializer = /** @class */ (function () {\n        function UrlSerializer() {\n        }\n        return UrlSerializer;\n    }());\n    /**\n     * @description\n     *\n     * A default implementation of the `UrlSerializer`.\n     *\n     * Example URLs:\n     *\n     * ```\n     * /inbox/33(popup:compose)\n     * /inbox/33;open=true/messages/44\n     * ```\n     *\n     * DefaultUrlSerializer uses parentheses to serialize secondary segments (e.g., popup:compose), the\n     * colon syntax to specify the outlet, and the ';parameter=value' syntax (e.g., open=true) to\n     * specify route specific parameters.\n     *\n     * @publicApi\n     */\n    var DefaultUrlSerializer = /** @class */ (function () {\n        function DefaultUrlSerializer() {\n        }\n        /** Parses a url into a `UrlTree` */\n        DefaultUrlSerializer.prototype.parse = function (url) {\n            var p = new UrlParser(url);\n            return new UrlTree(p.parseRootSegment(), p.parseQueryParams(), p.parseFragment());\n        };\n        /** Converts a `UrlTree` into a url */\n        DefaultUrlSerializer.prototype.serialize = function (tree) {\n            var segment = \"/\" + serializeSegment(tree.root, true);\n            var query = serializeQueryParams(tree.queryParams);\n            var fragment = typeof tree.fragment === \"string\" ? \"#\" + encodeUriFragment(tree.fragment) : '';\n            return \"\" + segment + query + fragment;\n        };\n        return DefaultUrlSerializer;\n    }());\n    var DEFAULT_SERIALIZER = new DefaultUrlSerializer();\n    function serializePaths(segment) {\n        return segment.segments.map(function (p) { return serializePath(p); }).join('/');\n    }\n    function serializeSegment(segment, root) {\n        if (!segment.hasChildren()) {\n            return serializePaths(segment);\n        }\n        if (root) {\n            var primary = segment.children[PRIMARY_OUTLET] ?\n                serializeSegment(segment.children[PRIMARY_OUTLET], false) :\n                '';\n            var children_1 = [];\n            forEach(segment.children, function (v, k) {\n                if (k !== PRIMARY_OUTLET) {\n                    children_1.push(k + \":\" + serializeSegment(v, false));\n                }\n            });\n            return children_1.length > 0 ? primary + \"(\" + children_1.join('//') + \")\" : primary;\n        }\n        else {\n            var children = mapChildrenIntoArray(segment, function (v, k) {\n                if (k === PRIMARY_OUTLET) {\n                    return [serializeSegment(segment.children[PRIMARY_OUTLET], false)];\n                }\n                return [k + \":\" + serializeSegment(v, false)];\n            });\n            // use no parenthesis if the only child is a primary outlet route\n            if (Object.keys(segment.children).length === 1 && segment.children[PRIMARY_OUTLET] != null) {\n                return serializePaths(segment) + \"/\" + children[0];\n            }\n            return serializePaths(segment) + \"/(\" + children.join('//') + \")\";\n        }\n    }\n    /**\n     * Encodes a URI string with the default encoding. This function will only ever be called from\n     * `encodeUriQuery` or `encodeUriSegment` as it's the base set of encodings to be used. We need\n     * a custom encoding because encodeURIComponent is too aggressive and encodes stuff that doesn't\n     * have to be encoded per https://url.spec.whatwg.org.\n     */\n    function encodeUriString(s) {\n        return encodeURIComponent(s)\n            .replace(/%40/g, '@')\n            .replace(/%3A/gi, ':')\n            .replace(/%24/g, '$')\n            .replace(/%2C/gi, ',');\n    }\n    /**\n     * This function should be used to encode both keys and values in a query string key/value. In\n     * the following URL, you need to call encodeUriQuery on \"k\" and \"v\":\n     *\n     * http://www.site.org/html;mk=mv?k=v#f\n     */\n    function encodeUriQuery(s) {\n        return encodeUriString(s).replace(/%3B/gi, ';');\n    }\n    /**\n     * This function should be used to encode a URL fragment. In the following URL, you need to call\n     * encodeUriFragment on \"f\":\n     *\n     * http://www.site.org/html;mk=mv?k=v#f\n     */\n    function encodeUriFragment(s) {\n        return encodeURI(s);\n    }\n    /**\n     * This function should be run on any URI segment as well as the key and value in a key/value\n     * pair for matrix params. In the following URL, you need to call encodeUriSegment on \"html\",\n     * \"mk\", and \"mv\":\n     *\n     * http://www.site.org/html;mk=mv?k=v#f\n     */\n    function encodeUriSegment(s) {\n        return encodeUriString(s).replace(/\\(/g, '%28').replace(/\\)/g, '%29').replace(/%26/gi, '&');\n    }\n    function decode(s) {\n        return decodeURIComponent(s);\n    }\n    // Query keys/values should have the \"+\" replaced first, as \"+\" in a query string is \" \".\n    // decodeURIComponent function will not decode \"+\" as a space.\n    function decodeQuery(s) {\n        return decode(s.replace(/\\+/g, '%20'));\n    }\n    function serializePath(path) {\n        return \"\" + encodeUriSegment(path.path) + serializeMatrixParams(path.parameters);\n    }\n    function serializeMatrixParams(params) {\n        return Object.keys(params)\n            .map(function (key) { return \";\" + encodeUriSegment(key) + \"=\" + encodeUriSegment(params[key]); })\n            .join('');\n    }\n    function serializeQueryParams(params) {\n        var strParams = Object.keys(params).map(function (name) {\n            var value = params[name];\n            return Array.isArray(value) ?\n                value.map(function (v) { return encodeUriQuery(name) + \"=\" + encodeUriQuery(v); }).join('&') :\n                encodeUriQuery(name) + \"=\" + encodeUriQuery(value);\n        });\n        return strParams.length ? \"?\" + strParams.join('&') : '';\n    }\n    var SEGMENT_RE = /^[^\\/()?;=#]+/;\n    function matchSegments(str) {\n        var match = str.match(SEGMENT_RE);\n        return match ? match[0] : '';\n    }\n    var QUERY_PARAM_RE = /^[^=?&#]+/;\n    // Return the name of the query param at the start of the string or an empty string\n    function matchQueryParams(str) {\n        var match = str.match(QUERY_PARAM_RE);\n        return match ? match[0] : '';\n    }\n    var QUERY_PARAM_VALUE_RE = /^[^?&#]+/;\n    // Return the value of the query param at the start of the string or an empty string\n    function matchUrlQueryParamValue(str) {\n        var match = str.match(QUERY_PARAM_VALUE_RE);\n        return match ? match[0] : '';\n    }\n    var UrlParser = /** @class */ (function () {\n        function UrlParser(url) {\n            this.url = url;\n            this.remaining = url;\n        }\n        UrlParser.prototype.parseRootSegment = function () {\n            this.consumeOptional('/');\n            if (this.remaining === '' || this.peekStartsWith('?') || this.peekStartsWith('#')) {\n                return new UrlSegmentGroup([], {});\n            }\n            // The root segment group never has segments\n            return new UrlSegmentGroup([], this.parseChildren());\n        };\n        UrlParser.prototype.parseQueryParams = function () {\n            var params = {};\n            if (this.consumeOptional('?')) {\n                do {\n                    this.parseQueryParam(params);\n                } while (this.consumeOptional('&'));\n            }\n            return params;\n        };\n        UrlParser.prototype.parseFragment = function () {\n            return this.consumeOptional('#') ? decodeURIComponent(this.remaining) : null;\n        };\n        UrlParser.prototype.parseChildren = function () {\n            if (this.remaining === '') {\n                return {};\n            }\n            this.consumeOptional('/');\n            var segments = [];\n            if (!this.peekStartsWith('(')) {\n                segments.push(this.parseSegment());\n            }\n            while (this.peekStartsWith('/') && !this.peekStartsWith('//') && !this.peekStartsWith('/(')) {\n                this.capture('/');\n                segments.push(this.parseSegment());\n            }\n            var children = {};\n            if (this.peekStartsWith('/(')) {\n                this.capture('/');\n                children = this.parseParens(true);\n            }\n            var res = {};\n            if (this.peekStartsWith('(')) {\n                res = this.parseParens(false);\n            }\n            if (segments.length > 0 || Object.keys(children).length > 0) {\n                res[PRIMARY_OUTLET] = new UrlSegmentGroup(segments, children);\n            }\n            return res;\n        };\n        // parse a segment with its matrix parameters\n        // ie `name;k1=v1;k2`\n        UrlParser.prototype.parseSegment = function () {\n            var path = matchSegments(this.remaining);\n            if (path === '' && this.peekStartsWith(';')) {\n                throw new Error(\"Empty path url segment cannot have parameters: '\" + this.remaining + \"'.\");\n            }\n            this.capture(path);\n            return new UrlSegment(decode(path), this.parseMatrixParams());\n        };\n        UrlParser.prototype.parseMatrixParams = function () {\n            var params = {};\n            while (this.consumeOptional(';')) {\n                this.parseParam(params);\n            }\n            return params;\n        };\n        UrlParser.prototype.parseParam = function (params) {\n            var key = matchSegments(this.remaining);\n            if (!key) {\n                return;\n            }\n            this.capture(key);\n            var value = '';\n            if (this.consumeOptional('=')) {\n                var valueMatch = matchSegments(this.remaining);\n                if (valueMatch) {\n                    value = valueMatch;\n                    this.capture(value);\n                }\n            }\n            params[decode(key)] = decode(value);\n        };\n        // Parse a single query parameter `name[=value]`\n        UrlParser.prototype.parseQueryParam = function (params) {\n            var key = matchQueryParams(this.remaining);\n            if (!key) {\n                return;\n            }\n            this.capture(key);\n            var value = '';\n            if (this.consumeOptional('=')) {\n                var valueMatch = matchUrlQueryParamValue(this.remaining);\n                if (valueMatch) {\n                    value = valueMatch;\n                    this.capture(value);\n                }\n            }\n            var decodedKey = decodeQuery(key);\n            var decodedVal = decodeQuery(value);\n            if (params.hasOwnProperty(decodedKey)) {\n                // Append to existing values\n                var currentVal = params[decodedKey];\n                if (!Array.isArray(currentVal)) {\n                    currentVal = [currentVal];\n                    params[decodedKey] = currentVal;\n                }\n                currentVal.push(decodedVal);\n            }\n            else {\n                // Create a new value\n                params[decodedKey] = decodedVal;\n            }\n        };\n        // parse `(a/b//outlet_name:c/d)`\n        UrlParser.prototype.parseParens = function (allowPrimary) {\n            var segments = {};\n            this.capture('(');\n            while (!this.consumeOptional(')') && this.remaining.length > 0) {\n                var path = matchSegments(this.remaining);\n                var next = this.remaining[path.length];\n                // if is is not one of these characters, then the segment was unescaped\n                // or the group was not closed\n                if (next !== '/' && next !== ')' && next !== ';') {\n                    throw new Error(\"Cannot parse url '\" + this.url + \"'\");\n                }\n                var outletName = undefined;\n                if (path.indexOf(':') > -1) {\n                    outletName = path.substr(0, path.indexOf(':'));\n                    this.capture(outletName);\n                    this.capture(':');\n                }\n                else if (allowPrimary) {\n                    outletName = PRIMARY_OUTLET;\n                }\n                var children = this.parseChildren();\n                segments[outletName] = Object.keys(children).length === 1 ? children[PRIMARY_OUTLET] :\n                    new UrlSegmentGroup([], children);\n                this.consumeOptional('//');\n            }\n            return segments;\n        };\n        UrlParser.prototype.peekStartsWith = function (str) {\n            return this.remaining.startsWith(str);\n        };\n        // Consumes the prefix when it is present and returns whether it has been consumed\n        UrlParser.prototype.consumeOptional = function (str) {\n            if (this.peekStartsWith(str)) {\n                this.remaining = this.remaining.substring(str.length);\n                return true;\n            }\n            return false;\n        };\n        UrlParser.prototype.capture = function (str) {\n            if (!this.consumeOptional(str)) {\n                throw new Error(\"Expected \\\"\" + str + \"\\\".\");\n            }\n        };\n        return UrlParser;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Tree = /** @class */ (function () {\n        function Tree(root) {\n            this._root = root;\n        }\n        Object.defineProperty(Tree.prototype, \"root\", {\n            get: function () {\n                return this._root.value;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        /**\n         * @internal\n         */\n        Tree.prototype.parent = function (t) {\n            var p = this.pathFromRoot(t);\n            return p.length > 1 ? p[p.length - 2] : null;\n        };\n        /**\n         * @internal\n         */\n        Tree.prototype.children = function (t) {\n            var n = findNode(t, this._root);\n            return n ? n.children.map(function (t) { return t.value; }) : [];\n        };\n        /**\n         * @internal\n         */\n        Tree.prototype.firstChild = function (t) {\n            var n = findNode(t, this._root);\n            return n && n.children.length > 0 ? n.children[0].value : null;\n        };\n        /**\n         * @internal\n         */\n        Tree.prototype.siblings = function (t) {\n            var p = findPath(t, this._root);\n            if (p.length < 2)\n                return [];\n            var c = p[p.length - 2].children.map(function (c) { return c.value; });\n            return c.filter(function (cc) { return cc !== t; });\n        };\n        /**\n         * @internal\n         */\n        Tree.prototype.pathFromRoot = function (t) {\n            return findPath(t, this._root).map(function (s) { return s.value; });\n        };\n        return Tree;\n    }());\n    // DFS for the node matching the value\n    function findNode(value, node) {\n        var e_1, _a;\n        if (value === node.value)\n            return node;\n        try {\n            for (var _b = __values(node.children), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var child = _c.value;\n                var node_1 = findNode(value, child);\n                if (node_1)\n                    return node_1;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return null;\n    }\n    // Return the path to the node with the given value using DFS\n    function findPath(value, node) {\n        var e_2, _a;\n        if (value === node.value)\n            return [node];\n        try {\n            for (var _b = __values(node.children), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var child = _c.value;\n                var path = findPath(value, child);\n                if (path.length) {\n                    path.unshift(node);\n                    return path;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return [];\n    }\n    var TreeNode = /** @class */ (function () {\n        function TreeNode(value, children) {\n            this.value = value;\n            this.children = children;\n        }\n        TreeNode.prototype.toString = function () {\n            return \"TreeNode(\" + this.value + \")\";\n        };\n        return TreeNode;\n    }());\n    // Return the list of T indexed by outlet name\n    function nodeChildrenAsMap(node) {\n        var map = {};\n        if (node) {\n            node.children.forEach(function (child) { return map[child.value.outlet] = child; });\n        }\n        return map;\n    }\n\n    /**\n     * Represents the state of the router as a tree of activated routes.\n     *\n     * @usageNotes\n     *\n     * Every node in the route tree is an `ActivatedRoute` instance\n     * that knows about the \"consumed\" URL segments, the extracted parameters,\n     * and the resolved data.\n     * Use the `ActivatedRoute` properties to traverse the tree from any node.\n     *\n     * The following fragment shows how a component gets the root node\n     * of the current state to establish its own route tree:\n     *\n     * ```\n     * @Component({templateUrl:'template.html'})\n     * class MyComponent {\n     *   constructor(router: Router) {\n     *     const state: RouterState = router.routerState;\n     *     const root: ActivatedRoute = state.root;\n     *     const child = root.firstChild;\n     *     const id: Observable<string> = child.params.map(p => p.id);\n     *     //...\n     *   }\n     * }\n     * ```\n     *\n     * @see `ActivatedRoute`\n     * @see [Getting route information](guide/router#getting-route-information)\n     *\n     * @publicApi\n     */\n    var RouterState = /** @class */ (function (_super) {\n        __extends(RouterState, _super);\n        /** @internal */\n        function RouterState(root, \n        /** The current snapshot of the router state */\n        snapshot) {\n            var _this = _super.call(this, root) || this;\n            _this.snapshot = snapshot;\n            setRouterState(_this, root);\n            return _this;\n        }\n        RouterState.prototype.toString = function () {\n            return this.snapshot.toString();\n        };\n        return RouterState;\n    }(Tree));\n    function createEmptyState(urlTree, rootComponent) {\n        var snapshot = createEmptyStateSnapshot(urlTree, rootComponent);\n        var emptyUrl = new rxjs.BehaviorSubject([new UrlSegment('', {})]);\n        var emptyParams = new rxjs.BehaviorSubject({});\n        var emptyData = new rxjs.BehaviorSubject({});\n        var emptyQueryParams = new rxjs.BehaviorSubject({});\n        var fragment = new rxjs.BehaviorSubject('');\n        var activated = new ActivatedRoute(emptyUrl, emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, snapshot.root);\n        activated.snapshot = snapshot.root;\n        return new RouterState(new TreeNode(activated, []), snapshot);\n    }\n    function createEmptyStateSnapshot(urlTree, rootComponent) {\n        var emptyParams = {};\n        var emptyData = {};\n        var emptyQueryParams = {};\n        var fragment = '';\n        var activated = new ActivatedRouteSnapshot([], emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, null, urlTree.root, -1, {});\n        return new RouterStateSnapshot('', new TreeNode(activated, []));\n    }\n    /**\n     * Provides access to information about a route associated with a component\n     * that is loaded in an outlet.\n     * Use to traverse the `RouterState` tree and extract information from nodes.\n     *\n     * The following example shows how to construct a component using information from a\n     * currently activated route.\n     *\n     * {@example router/activated-route/module.ts region=\"activated-route\"\n     *     header=\"activated-route.component.ts\"}\n     *\n     * @see [Getting route information](guide/router#getting-route-information)\n     *\n     * @publicApi\n     */\n    var ActivatedRoute = /** @class */ (function () {\n        /** @internal */\n        function ActivatedRoute(\n        /** An observable of the URL segments matched by this route. */\n        url, \n        /** An observable of the matrix parameters scoped to this route. */\n        params, \n        /** An observable of the query parameters shared by all the routes. */\n        queryParams, \n        /** An observable of the URL fragment shared by all the routes. */\n        fragment, \n        /** An observable of the static and resolved data of this route. */\n        data, \n        /** The outlet name of the route, a constant. */\n        outlet, \n        /** The component of the route, a constant. */\n        // TODO(vsavkin): remove |string\n        component, futureSnapshot) {\n            this.url = url;\n            this.params = params;\n            this.queryParams = queryParams;\n            this.fragment = fragment;\n            this.data = data;\n            this.outlet = outlet;\n            this.component = component;\n            this._futureSnapshot = futureSnapshot;\n        }\n        Object.defineProperty(ActivatedRoute.prototype, \"routeConfig\", {\n            /** The configuration used to match this route. */\n            get: function () {\n                return this._futureSnapshot.routeConfig;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRoute.prototype, \"root\", {\n            /** The root of the router state. */\n            get: function () {\n                return this._routerState.root;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRoute.prototype, \"parent\", {\n            /** The parent of this route in the router state tree. */\n            get: function () {\n                return this._routerState.parent(this);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRoute.prototype, \"firstChild\", {\n            /** The first child of this route in the router state tree. */\n            get: function () {\n                return this._routerState.firstChild(this);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRoute.prototype, \"children\", {\n            /** The children of this route in the router state tree. */\n            get: function () {\n                return this._routerState.children(this);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRoute.prototype, \"pathFromRoot\", {\n            /** The path from the root of the router state tree to this route. */\n            get: function () {\n                return this._routerState.pathFromRoot(this);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRoute.prototype, \"paramMap\", {\n            /**\n             * An Observable that contains a map of the required and optional parameters\n             * specific to the route.\n             * The map supports retrieving single and multiple values from the same parameter.\n             */\n            get: function () {\n                if (!this._paramMap) {\n                    this._paramMap = this.params.pipe(operators.map(function (p) { return convertToParamMap(p); }));\n                }\n                return this._paramMap;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRoute.prototype, \"queryParamMap\", {\n            /**\n             * An Observable that contains a map of the query parameters available to all routes.\n             * The map supports retrieving single and multiple values from the query parameter.\n             */\n            get: function () {\n                if (!this._queryParamMap) {\n                    this._queryParamMap =\n                        this.queryParams.pipe(operators.map(function (p) { return convertToParamMap(p); }));\n                }\n                return this._queryParamMap;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        ActivatedRoute.prototype.toString = function () {\n            return this.snapshot ? this.snapshot.toString() : \"Future(\" + this._futureSnapshot + \")\";\n        };\n        return ActivatedRoute;\n    }());\n    /**\n     * Returns the inherited params, data, and resolve for a given route.\n     * By default, this only inherits values up to the nearest path-less or component-less route.\n     * @internal\n     */\n    function inheritedParamsDataResolve(route, paramsInheritanceStrategy) {\n        if (paramsInheritanceStrategy === void 0) { paramsInheritanceStrategy = 'emptyOnly'; }\n        var pathFromRoot = route.pathFromRoot;\n        var inheritingStartingFrom = 0;\n        if (paramsInheritanceStrategy !== 'always') {\n            inheritingStartingFrom = pathFromRoot.length - 1;\n            while (inheritingStartingFrom >= 1) {\n                var current = pathFromRoot[inheritingStartingFrom];\n                var parent = pathFromRoot[inheritingStartingFrom - 1];\n                // current route is an empty path => inherits its parent's params and data\n                if (current.routeConfig && current.routeConfig.path === '') {\n                    inheritingStartingFrom--;\n                    // parent is componentless => current route should inherit its params and data\n                }\n                else if (!parent.component) {\n                    inheritingStartingFrom--;\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return flattenInherited(pathFromRoot.slice(inheritingStartingFrom));\n    }\n    /** @internal */\n    function flattenInherited(pathFromRoot) {\n        return pathFromRoot.reduce(function (res, curr) {\n            var params = Object.assign(Object.assign({}, res.params), curr.params);\n            var data = Object.assign(Object.assign({}, res.data), curr.data);\n            var resolve = Object.assign(Object.assign({}, res.resolve), curr._resolvedData);\n            return { params: params, data: data, resolve: resolve };\n        }, { params: {}, data: {}, resolve: {} });\n    }\n    /**\n     * @description\n     *\n     * Contains the information about a route associated with a component loaded in an\n     * outlet at a particular moment in time. ActivatedRouteSnapshot can also be used to\n     * traverse the router state tree.\n     *\n     * The following example initializes a component with route information extracted\n     * from the snapshot of the root node at the time of creation.\n     *\n     * ```\n     * @Component({templateUrl:'./my-component.html'})\n     * class MyComponent {\n     *   constructor(route: ActivatedRoute) {\n     *     const id: string = route.snapshot.params.id;\n     *     const url: string = route.snapshot.url.join('');\n     *     const user = route.snapshot.data.user;\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var ActivatedRouteSnapshot = /** @class */ (function () {\n        /** @internal */\n        function ActivatedRouteSnapshot(\n        /** The URL segments matched by this route */\n        url, \n        /** The matrix parameters scoped to this route */\n        params, \n        /** The query parameters shared by all the routes */\n        queryParams, \n        /** The URL fragment shared by all the routes */\n        fragment, \n        /** The static and resolved data of this route */\n        data, \n        /** The outlet name of the route */\n        outlet, \n        /** The component of the route */\n        component, routeConfig, urlSegment, lastPathIndex, resolve) {\n            this.url = url;\n            this.params = params;\n            this.queryParams = queryParams;\n            this.fragment = fragment;\n            this.data = data;\n            this.outlet = outlet;\n            this.component = component;\n            this.routeConfig = routeConfig;\n            this._urlSegment = urlSegment;\n            this._lastPathIndex = lastPathIndex;\n            this._resolve = resolve;\n        }\n        Object.defineProperty(ActivatedRouteSnapshot.prototype, \"root\", {\n            /** The root of the router state */\n            get: function () {\n                return this._routerState.root;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRouteSnapshot.prototype, \"parent\", {\n            /** The parent of this route in the router state tree */\n            get: function () {\n                return this._routerState.parent(this);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRouteSnapshot.prototype, \"firstChild\", {\n            /** The first child of this route in the router state tree */\n            get: function () {\n                return this._routerState.firstChild(this);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRouteSnapshot.prototype, \"children\", {\n            /** The children of this route in the router state tree */\n            get: function () {\n                return this._routerState.children(this);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRouteSnapshot.prototype, \"pathFromRoot\", {\n            /** The path from the root of the router state tree to this route */\n            get: function () {\n                return this._routerState.pathFromRoot(this);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRouteSnapshot.prototype, \"paramMap\", {\n            get: function () {\n                if (!this._paramMap) {\n                    this._paramMap = convertToParamMap(this.params);\n                }\n                return this._paramMap;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRouteSnapshot.prototype, \"queryParamMap\", {\n            get: function () {\n                if (!this._queryParamMap) {\n                    this._queryParamMap = convertToParamMap(this.queryParams);\n                }\n                return this._queryParamMap;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        ActivatedRouteSnapshot.prototype.toString = function () {\n            var url = this.url.map(function (segment) { return segment.toString(); }).join('/');\n            var matched = this.routeConfig ? this.routeConfig.path : '';\n            return \"Route(url:'\" + url + \"', path:'\" + matched + \"')\";\n        };\n        return ActivatedRouteSnapshot;\n    }());\n    /**\n     * @description\n     *\n     * Represents the state of the router at a moment in time.\n     *\n     * This is a tree of activated route snapshots. Every node in this tree knows about\n     * the \"consumed\" URL segments, the extracted parameters, and the resolved data.\n     *\n     * The following example shows how a component is initialized with information\n     * from the snapshot of the root node's state at the time of creation.\n     *\n     * ```\n     * @Component({templateUrl:'template.html'})\n     * class MyComponent {\n     *   constructor(router: Router) {\n     *     const state: RouterState = router.routerState;\n     *     const snapshot: RouterStateSnapshot = state.snapshot;\n     *     const root: ActivatedRouteSnapshot = snapshot.root;\n     *     const child = root.firstChild;\n     *     const id: Observable<string> = child.params.map(p => p.id);\n     *     //...\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var RouterStateSnapshot = /** @class */ (function (_super) {\n        __extends(RouterStateSnapshot, _super);\n        /** @internal */\n        function RouterStateSnapshot(\n        /** The url from which this snapshot was created */\n        url, root) {\n            var _this = _super.call(this, root) || this;\n            _this.url = url;\n            setRouterState(_this, root);\n            return _this;\n        }\n        RouterStateSnapshot.prototype.toString = function () {\n            return serializeNode(this._root);\n        };\n        return RouterStateSnapshot;\n    }(Tree));\n    function setRouterState(state, node) {\n        node.value._routerState = state;\n        node.children.forEach(function (c) { return setRouterState(state, c); });\n    }\n    function serializeNode(node) {\n        var c = node.children.length > 0 ? \" { \" + node.children.map(serializeNode).join(', ') + \" } \" : '';\n        return \"\" + node.value + c;\n    }\n    /**\n     * The expectation is that the activate route is created with the right set of parameters.\n     * So we push new values into the observables only when they are not the initial values.\n     * And we detect that by checking if the snapshot field is set.\n     */\n    function advanceActivatedRoute(route) {\n        if (route.snapshot) {\n            var currentSnapshot = route.snapshot;\n            var nextSnapshot = route._futureSnapshot;\n            route.snapshot = nextSnapshot;\n            if (!shallowEqual(currentSnapshot.queryParams, nextSnapshot.queryParams)) {\n                route.queryParams.next(nextSnapshot.queryParams);\n            }\n            if (currentSnapshot.fragment !== nextSnapshot.fragment) {\n                route.fragment.next(nextSnapshot.fragment);\n            }\n            if (!shallowEqual(currentSnapshot.params, nextSnapshot.params)) {\n                route.params.next(nextSnapshot.params);\n            }\n            if (!shallowEqualArrays(currentSnapshot.url, nextSnapshot.url)) {\n                route.url.next(nextSnapshot.url);\n            }\n            if (!shallowEqual(currentSnapshot.data, nextSnapshot.data)) {\n                route.data.next(nextSnapshot.data);\n            }\n        }\n        else {\n            route.snapshot = route._futureSnapshot;\n            // this is for resolved data\n            route.data.next(route._futureSnapshot.data);\n        }\n    }\n    function equalParamsAndUrlSegments(a, b) {\n        var equalUrlParams = shallowEqual(a.params, b.params) && equalSegments(a.url, b.url);\n        var parentsMismatch = !a.parent !== !b.parent;\n        return equalUrlParams && !parentsMismatch &&\n            (!a.parent || equalParamsAndUrlSegments(a.parent, b.parent));\n    }\n\n    function createRouterState(routeReuseStrategy, curr, prevState) {\n        var root = createNode(routeReuseStrategy, curr._root, prevState ? prevState._root : undefined);\n        return new RouterState(root, curr);\n    }\n    function createNode(routeReuseStrategy, curr, prevState) {\n        // reuse an activated route that is currently displayed on the screen\n        if (prevState && routeReuseStrategy.shouldReuseRoute(curr.value, prevState.value.snapshot)) {\n            var value = prevState.value;\n            value._futureSnapshot = curr.value;\n            var children = createOrReuseChildren(routeReuseStrategy, curr, prevState);\n            return new TreeNode(value, children);\n            // retrieve an activated route that is used to be displayed, but is not currently displayed\n        }\n        else {\n            var detachedRouteHandle = routeReuseStrategy.retrieve(curr.value);\n            if (detachedRouteHandle) {\n                var tree = detachedRouteHandle.route;\n                setFutureSnapshotsOfActivatedRoutes(curr, tree);\n                return tree;\n            }\n            else {\n                var value = createActivatedRoute(curr.value);\n                var children = curr.children.map(function (c) { return createNode(routeReuseStrategy, c); });\n                return new TreeNode(value, children);\n            }\n        }\n    }\n    function setFutureSnapshotsOfActivatedRoutes(curr, result) {\n        if (curr.value.routeConfig !== result.value.routeConfig) {\n            throw new Error('Cannot reattach ActivatedRouteSnapshot created from a different route');\n        }\n        if (curr.children.length !== result.children.length) {\n            throw new Error('Cannot reattach ActivatedRouteSnapshot with a different number of children');\n        }\n        result.value._futureSnapshot = curr.value;\n        for (var i = 0; i < curr.children.length; ++i) {\n            setFutureSnapshotsOfActivatedRoutes(curr.children[i], result.children[i]);\n        }\n    }\n    function createOrReuseChildren(routeReuseStrategy, curr, prevState) {\n        return curr.children.map(function (child) {\n            var e_1, _a;\n            try {\n                for (var _b = __values(prevState.children), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var p = _c.value;\n                    if (routeReuseStrategy.shouldReuseRoute(p.value.snapshot, child.value)) {\n                        return createNode(routeReuseStrategy, child, p);\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            return createNode(routeReuseStrategy, child);\n        });\n    }\n    function createActivatedRoute(c) {\n        return new ActivatedRoute(new rxjs.BehaviorSubject(c.url), new rxjs.BehaviorSubject(c.params), new rxjs.BehaviorSubject(c.queryParams), new rxjs.BehaviorSubject(c.fragment), new rxjs.BehaviorSubject(c.data), c.outlet, c.component, c);\n    }\n\n    function createUrlTree(route, urlTree, commands, queryParams, fragment) {\n        if (commands.length === 0) {\n            return tree(urlTree.root, urlTree.root, urlTree, queryParams, fragment);\n        }\n        var nav = computeNavigation(commands);\n        if (nav.toRoot()) {\n            return tree(urlTree.root, new UrlSegmentGroup([], {}), urlTree, queryParams, fragment);\n        }\n        var startingPosition = findStartingPosition(nav, urlTree, route);\n        var segmentGroup = startingPosition.processChildren ?\n            updateSegmentGroupChildren(startingPosition.segmentGroup, startingPosition.index, nav.commands) :\n            updateSegmentGroup(startingPosition.segmentGroup, startingPosition.index, nav.commands);\n        return tree(startingPosition.segmentGroup, segmentGroup, urlTree, queryParams, fragment);\n    }\n    function isMatrixParams(command) {\n        return typeof command === 'object' && command != null && !command.outlets && !command.segmentPath;\n    }\n    function tree(oldSegmentGroup, newSegmentGroup, urlTree, queryParams, fragment) {\n        var qp = {};\n        if (queryParams) {\n            forEach(queryParams, function (value, name) {\n                qp[name] = Array.isArray(value) ? value.map(function (v) { return \"\" + v; }) : \"\" + value;\n            });\n        }\n        if (urlTree.root === oldSegmentGroup) {\n            return new UrlTree(newSegmentGroup, qp, fragment);\n        }\n        return new UrlTree(replaceSegment(urlTree.root, oldSegmentGroup, newSegmentGroup), qp, fragment);\n    }\n    function replaceSegment(current, oldSegment, newSegment) {\n        var children = {};\n        forEach(current.children, function (c, outletName) {\n            if (c === oldSegment) {\n                children[outletName] = newSegment;\n            }\n            else {\n                children[outletName] = replaceSegment(c, oldSegment, newSegment);\n            }\n        });\n        return new UrlSegmentGroup(current.segments, children);\n    }\n    var Navigation = /** @class */ (function () {\n        function Navigation(isAbsolute, numberOfDoubleDots, commands) {\n            this.isAbsolute = isAbsolute;\n            this.numberOfDoubleDots = numberOfDoubleDots;\n            this.commands = commands;\n            if (isAbsolute && commands.length > 0 && isMatrixParams(commands[0])) {\n                throw new Error('Root segment cannot have matrix parameters');\n            }\n            var cmdWithOutlet = commands.find(function (c) { return typeof c === 'object' && c != null && c.outlets; });\n            if (cmdWithOutlet && cmdWithOutlet !== last(commands)) {\n                throw new Error('{outlets:{}} has to be the last command');\n            }\n        }\n        Navigation.prototype.toRoot = function () {\n            return this.isAbsolute && this.commands.length === 1 && this.commands[0] == '/';\n        };\n        return Navigation;\n    }());\n    /** Transforms commands to a normalized `Navigation` */\n    function computeNavigation(commands) {\n        if ((typeof commands[0] === 'string') && commands.length === 1 && commands[0] === '/') {\n            return new Navigation(true, 0, commands);\n        }\n        var numberOfDoubleDots = 0;\n        var isAbsolute = false;\n        var res = commands.reduce(function (res, cmd, cmdIdx) {\n            if (typeof cmd === 'object' && cmd != null) {\n                if (cmd.outlets) {\n                    var outlets_1 = {};\n                    forEach(cmd.outlets, function (commands, name) {\n                        outlets_1[name] = typeof commands === 'string' ? commands.split('/') : commands;\n                    });\n                    return __spread(res, [{ outlets: outlets_1 }]);\n                }\n                if (cmd.segmentPath) {\n                    return __spread(res, [cmd.segmentPath]);\n                }\n            }\n            if (!(typeof cmd === 'string')) {\n                return __spread(res, [cmd]);\n            }\n            if (cmdIdx === 0) {\n                cmd.split('/').forEach(function (urlPart, partIndex) {\n                    if (partIndex == 0 && urlPart === '.') {\n                        // skip './a'\n                    }\n                    else if (partIndex == 0 && urlPart === '') { //  '/a'\n                        isAbsolute = true;\n                    }\n                    else if (urlPart === '..') { //  '../a'\n                        numberOfDoubleDots++;\n                    }\n                    else if (urlPart != '') {\n                        res.push(urlPart);\n                    }\n                });\n                return res;\n            }\n            return __spread(res, [cmd]);\n        }, []);\n        return new Navigation(isAbsolute, numberOfDoubleDots, res);\n    }\n    var Position = /** @class */ (function () {\n        function Position(segmentGroup, processChildren, index) {\n            this.segmentGroup = segmentGroup;\n            this.processChildren = processChildren;\n            this.index = index;\n        }\n        return Position;\n    }());\n    function findStartingPosition(nav, tree, route) {\n        if (nav.isAbsolute) {\n            return new Position(tree.root, true, 0);\n        }\n        if (route.snapshot._lastPathIndex === -1) {\n            var segmentGroup = route.snapshot._urlSegment;\n            // Pathless ActivatedRoute has _lastPathIndex === -1 but should not process children\n            // see issue #26224, #13011, #35687\n            // However, if the ActivatedRoute is the root we should process children like above.\n            var processChildren = segmentGroup === tree.root;\n            return new Position(segmentGroup, processChildren, 0);\n        }\n        var modifier = isMatrixParams(nav.commands[0]) ? 0 : 1;\n        var index = route.snapshot._lastPathIndex + modifier;\n        return createPositionApplyingDoubleDots(route.snapshot._urlSegment, index, nav.numberOfDoubleDots);\n    }\n    function createPositionApplyingDoubleDots(group, index, numberOfDoubleDots) {\n        var g = group;\n        var ci = index;\n        var dd = numberOfDoubleDots;\n        while (dd > ci) {\n            dd -= ci;\n            g = g.parent;\n            if (!g) {\n                throw new Error('Invalid number of \\'../\\'');\n            }\n            ci = g.segments.length;\n        }\n        return new Position(g, false, ci - dd);\n    }\n    function getPath(command) {\n        if (typeof command === 'object' && command != null && command.outlets) {\n            return command.outlets[PRIMARY_OUTLET];\n        }\n        return \"\" + command;\n    }\n    function getOutlets(commands) {\n        var _a;\n        if (typeof commands[0] === 'object' && commands[0] !== null && commands[0].outlets) {\n            return commands[0].outlets;\n        }\n        return _a = {}, _a[PRIMARY_OUTLET] = commands, _a;\n    }\n    function updateSegmentGroup(segmentGroup, startIndex, commands) {\n        if (!segmentGroup) {\n            segmentGroup = new UrlSegmentGroup([], {});\n        }\n        if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n            return updateSegmentGroupChildren(segmentGroup, startIndex, commands);\n        }\n        var m = prefixedWith(segmentGroup, startIndex, commands);\n        var slicedCommands = commands.slice(m.commandIndex);\n        if (m.match && m.pathIndex < segmentGroup.segments.length) {\n            var g = new UrlSegmentGroup(segmentGroup.segments.slice(0, m.pathIndex), {});\n            g.children[PRIMARY_OUTLET] =\n                new UrlSegmentGroup(segmentGroup.segments.slice(m.pathIndex), segmentGroup.children);\n            return updateSegmentGroupChildren(g, 0, slicedCommands);\n        }\n        else if (m.match && slicedCommands.length === 0) {\n            return new UrlSegmentGroup(segmentGroup.segments, {});\n        }\n        else if (m.match && !segmentGroup.hasChildren()) {\n            return createNewSegmentGroup(segmentGroup, startIndex, commands);\n        }\n        else if (m.match) {\n            return updateSegmentGroupChildren(segmentGroup, 0, slicedCommands);\n        }\n        else {\n            return createNewSegmentGroup(segmentGroup, startIndex, commands);\n        }\n    }\n    function updateSegmentGroupChildren(segmentGroup, startIndex, commands) {\n        if (commands.length === 0) {\n            return new UrlSegmentGroup(segmentGroup.segments, {});\n        }\n        else {\n            var outlets_2 = getOutlets(commands);\n            var children_1 = {};\n            forEach(outlets_2, function (commands, outlet) {\n                if (commands !== null) {\n                    children_1[outlet] = updateSegmentGroup(segmentGroup.children[outlet], startIndex, commands);\n                }\n            });\n            forEach(segmentGroup.children, function (child, childOutlet) {\n                if (outlets_2[childOutlet] === undefined) {\n                    children_1[childOutlet] = child;\n                }\n            });\n            return new UrlSegmentGroup(segmentGroup.segments, children_1);\n        }\n    }\n    function prefixedWith(segmentGroup, startIndex, commands) {\n        var currentCommandIndex = 0;\n        var currentPathIndex = startIndex;\n        var noMatch = { match: false, pathIndex: 0, commandIndex: 0 };\n        while (currentPathIndex < segmentGroup.segments.length) {\n            if (currentCommandIndex >= commands.length)\n                return noMatch;\n            var path = segmentGroup.segments[currentPathIndex];\n            var curr = getPath(commands[currentCommandIndex]);\n            var next = currentCommandIndex < commands.length - 1 ? commands[currentCommandIndex + 1] : null;\n            if (currentPathIndex > 0 && curr === undefined)\n                break;\n            if (curr && next && (typeof next === 'object') && next.outlets === undefined) {\n                if (!compare(curr, next, path))\n                    return noMatch;\n                currentCommandIndex += 2;\n            }\n            else {\n                if (!compare(curr, {}, path))\n                    return noMatch;\n                currentCommandIndex++;\n            }\n            currentPathIndex++;\n        }\n        return { match: true, pathIndex: currentPathIndex, commandIndex: currentCommandIndex };\n    }\n    function createNewSegmentGroup(segmentGroup, startIndex, commands) {\n        var paths = segmentGroup.segments.slice(0, startIndex);\n        var i = 0;\n        while (i < commands.length) {\n            if (typeof commands[i] === 'object' && commands[i] !== null &&\n                commands[i].outlets !== undefined) {\n                var children = createNewSegmentChildren(commands[i].outlets);\n                return new UrlSegmentGroup(paths, children);\n            }\n            // if we start with an object literal, we need to reuse the path part from the segment\n            if (i === 0 && isMatrixParams(commands[0])) {\n                var p = segmentGroup.segments[startIndex];\n                paths.push(new UrlSegment(p.path, commands[0]));\n                i++;\n                continue;\n            }\n            var curr = getPath(commands[i]);\n            var next = (i < commands.length - 1) ? commands[i + 1] : null;\n            if (curr && next && isMatrixParams(next)) {\n                paths.push(new UrlSegment(curr, stringify(next)));\n                i += 2;\n            }\n            else {\n                paths.push(new UrlSegment(curr, {}));\n                i++;\n            }\n        }\n        return new UrlSegmentGroup(paths, {});\n    }\n    function createNewSegmentChildren(outlets) {\n        var children = {};\n        forEach(outlets, function (commands, outlet) {\n            if (commands !== null) {\n                children[outlet] = createNewSegmentGroup(new UrlSegmentGroup([], {}), 0, commands);\n            }\n        });\n        return children;\n    }\n    function stringify(params) {\n        var res = {};\n        forEach(params, function (v, k) { return res[k] = \"\" + v; });\n        return res;\n    }\n    function compare(path, params, segment) {\n        return path == segment.path && shallowEqual(params, segment.parameters);\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var activateRoutes = function (rootContexts, routeReuseStrategy, forwardEvent) { return operators.map(function (t) {\n        new ActivateRoutes(routeReuseStrategy, t.targetRouterState, t.currentRouterState, forwardEvent)\n            .activate(rootContexts);\n        return t;\n    }); };\n    var ActivateRoutes = /** @class */ (function () {\n        function ActivateRoutes(routeReuseStrategy, futureState, currState, forwardEvent) {\n            this.routeReuseStrategy = routeReuseStrategy;\n            this.futureState = futureState;\n            this.currState = currState;\n            this.forwardEvent = forwardEvent;\n        }\n        ActivateRoutes.prototype.activate = function (parentContexts) {\n            var futureRoot = this.futureState._root;\n            var currRoot = this.currState ? this.currState._root : null;\n            this.deactivateChildRoutes(futureRoot, currRoot, parentContexts);\n            advanceActivatedRoute(this.futureState.root);\n            this.activateChildRoutes(futureRoot, currRoot, parentContexts);\n        };\n        // De-activate the child route that are not re-used for the future state\n        ActivateRoutes.prototype.deactivateChildRoutes = function (futureNode, currNode, contexts) {\n            var _this = this;\n            var children = nodeChildrenAsMap(currNode);\n            // Recurse on the routes active in the future state to de-activate deeper children\n            futureNode.children.forEach(function (futureChild) {\n                var childOutletName = futureChild.value.outlet;\n                _this.deactivateRoutes(futureChild, children[childOutletName], contexts);\n                delete children[childOutletName];\n            });\n            // De-activate the routes that will not be re-used\n            forEach(children, function (v, childName) {\n                _this.deactivateRouteAndItsChildren(v, contexts);\n            });\n        };\n        ActivateRoutes.prototype.deactivateRoutes = function (futureNode, currNode, parentContext) {\n            var future = futureNode.value;\n            var curr = currNode ? currNode.value : null;\n            if (future === curr) {\n                // Reusing the node, check to see if the children need to be de-activated\n                if (future.component) {\n                    // If we have a normal route, we need to go through an outlet.\n                    var context = parentContext.getContext(future.outlet);\n                    if (context) {\n                        this.deactivateChildRoutes(futureNode, currNode, context.children);\n                    }\n                }\n                else {\n                    // if we have a componentless route, we recurse but keep the same outlet map.\n                    this.deactivateChildRoutes(futureNode, currNode, parentContext);\n                }\n            }\n            else {\n                if (curr) {\n                    // Deactivate the current route which will not be re-used\n                    this.deactivateRouteAndItsChildren(currNode, parentContext);\n                }\n            }\n        };\n        ActivateRoutes.prototype.deactivateRouteAndItsChildren = function (route, parentContexts) {\n            if (this.routeReuseStrategy.shouldDetach(route.value.snapshot)) {\n                this.detachAndStoreRouteSubtree(route, parentContexts);\n            }\n            else {\n                this.deactivateRouteAndOutlet(route, parentContexts);\n            }\n        };\n        ActivateRoutes.prototype.detachAndStoreRouteSubtree = function (route, parentContexts) {\n            var context = parentContexts.getContext(route.value.outlet);\n            if (context && context.outlet) {\n                var componentRef = context.outlet.detach();\n                var contexts = context.children.onOutletDeactivated();\n                this.routeReuseStrategy.store(route.value.snapshot, { componentRef: componentRef, route: route, contexts: contexts });\n            }\n        };\n        ActivateRoutes.prototype.deactivateRouteAndOutlet = function (route, parentContexts) {\n            var _this = this;\n            var context = parentContexts.getContext(route.value.outlet);\n            if (context) {\n                var children = nodeChildrenAsMap(route);\n                var contexts_1 = route.value.component ? context.children : parentContexts;\n                forEach(children, function (v, k) { return _this.deactivateRouteAndItsChildren(v, contexts_1); });\n                if (context.outlet) {\n                    // Destroy the component\n                    context.outlet.deactivate();\n                    // Destroy the contexts for all the outlets that were in the component\n                    context.children.onOutletDeactivated();\n                }\n            }\n        };\n        ActivateRoutes.prototype.activateChildRoutes = function (futureNode, currNode, contexts) {\n            var _this = this;\n            var children = nodeChildrenAsMap(currNode);\n            futureNode.children.forEach(function (c) {\n                _this.activateRoutes(c, children[c.value.outlet], contexts);\n                _this.forwardEvent(new ActivationEnd(c.value.snapshot));\n            });\n            if (futureNode.children.length) {\n                this.forwardEvent(new ChildActivationEnd(futureNode.value.snapshot));\n            }\n        };\n        ActivateRoutes.prototype.activateRoutes = function (futureNode, currNode, parentContexts) {\n            var future = futureNode.value;\n            var curr = currNode ? currNode.value : null;\n            advanceActivatedRoute(future);\n            // reusing the node\n            if (future === curr) {\n                if (future.component) {\n                    // If we have a normal route, we need to go through an outlet.\n                    var context = parentContexts.getOrCreateContext(future.outlet);\n                    this.activateChildRoutes(futureNode, currNode, context.children);\n                }\n                else {\n                    // if we have a componentless route, we recurse but keep the same outlet map.\n                    this.activateChildRoutes(futureNode, currNode, parentContexts);\n                }\n            }\n            else {\n                if (future.component) {\n                    // if we have a normal route, we need to place the component into the outlet and recurse.\n                    var context = parentContexts.getOrCreateContext(future.outlet);\n                    if (this.routeReuseStrategy.shouldAttach(future.snapshot)) {\n                        var stored = this.routeReuseStrategy.retrieve(future.snapshot);\n                        this.routeReuseStrategy.store(future.snapshot, null);\n                        context.children.onOutletReAttached(stored.contexts);\n                        context.attachRef = stored.componentRef;\n                        context.route = stored.route.value;\n                        if (context.outlet) {\n                            // Attach right away when the outlet has already been instantiated\n                            // Otherwise attach from `RouterOutlet.ngOnInit` when it is instantiated\n                            context.outlet.attach(stored.componentRef, stored.route.value);\n                        }\n                        advanceActivatedRouteNodeAndItsChildren(stored.route);\n                    }\n                    else {\n                        var config = parentLoadedConfig(future.snapshot);\n                        var cmpFactoryResolver = config ? config.module.componentFactoryResolver : null;\n                        context.attachRef = null;\n                        context.route = future;\n                        context.resolver = cmpFactoryResolver;\n                        if (context.outlet) {\n                            // Activate the outlet when it has already been instantiated\n                            // Otherwise it will get activated from its `ngOnInit` when instantiated\n                            context.outlet.activateWith(future, cmpFactoryResolver);\n                        }\n                        this.activateChildRoutes(futureNode, null, context.children);\n                    }\n                }\n                else {\n                    // if we have a componentless route, we recurse but keep the same outlet map.\n                    this.activateChildRoutes(futureNode, null, parentContexts);\n                }\n            }\n        };\n        return ActivateRoutes;\n    }());\n    function advanceActivatedRouteNodeAndItsChildren(node) {\n        advanceActivatedRoute(node.value);\n        node.children.forEach(advanceActivatedRouteNodeAndItsChildren);\n    }\n    function parentLoadedConfig(snapshot) {\n        for (var s = snapshot.parent; s; s = s.parent) {\n            var route = s.routeConfig;\n            if (route && route._loadedConfig)\n                return route._loadedConfig;\n            if (route && route.component)\n                return null;\n        }\n        return null;\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LoadedRouterConfig = /** @class */ (function () {\n        function LoadedRouterConfig(routes, module) {\n            this.routes = routes;\n            this.module = module;\n        }\n        return LoadedRouterConfig;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Simple function check, but generic so type inference will flow. Example:\n     *\n     * function product(a: number, b: number) {\n     *   return a * b;\n     * }\n     *\n     * if (isFunction<product>(fn)) {\n     *   return fn(1, 2);\n     * } else {\n     *   throw \"Must provide the `product` function\";\n     * }\n     */\n    function isFunction(v) {\n        return typeof v === 'function';\n    }\n    function isBoolean(v) {\n        return typeof v === 'boolean';\n    }\n    function isUrlTree(v) {\n        return v instanceof UrlTree;\n    }\n    function isCanLoad(guard) {\n        return guard && isFunction(guard.canLoad);\n    }\n    function isCanActivate(guard) {\n        return guard && isFunction(guard.canActivate);\n    }\n    function isCanActivateChild(guard) {\n        return guard && isFunction(guard.canActivateChild);\n    }\n    function isCanDeactivate(guard) {\n        return guard && isFunction(guard.canDeactivate);\n    }\n\n    var INITIAL_VALUE = Symbol('INITIAL_VALUE');\n    function prioritizedGuardValue() {\n        return operators.switchMap(function (obs) {\n            return rxjs.combineLatest.apply(void 0, __spread(obs.map(function (o) { return o.pipe(operators.take(1), operators.startWith(INITIAL_VALUE)); }))).pipe(operators.scan(function (acc, list) {\n                var isPending = false;\n                return list.reduce(function (innerAcc, val, i) {\n                    if (innerAcc !== INITIAL_VALUE)\n                        return innerAcc;\n                    // Toggle pending flag if any values haven't been set yet\n                    if (val === INITIAL_VALUE)\n                        isPending = true;\n                    // Any other return values are only valid if we haven't yet hit a pending\n                    // call. This guarantees that in the case of a guard at the bottom of the\n                    // tree that returns a redirect, we will wait for the higher priority\n                    // guard at the top to finish before performing the redirect.\n                    if (!isPending) {\n                        // Early return when we hit a `false` value as that should always\n                        // cancel navigation\n                        if (val === false)\n                            return val;\n                        if (i === list.length - 1 || isUrlTree(val)) {\n                            return val;\n                        }\n                    }\n                    return innerAcc;\n                }, acc);\n            }, INITIAL_VALUE), operators.filter(function (item) { return item !== INITIAL_VALUE; }), operators.map(function (item) { return isUrlTree(item) ? item : item === true; }), //\n            operators.take(1));\n        });\n    }\n\n    var NoMatch = /** @class */ (function () {\n        function NoMatch(segmentGroup) {\n            this.segmentGroup = segmentGroup || null;\n        }\n        return NoMatch;\n    }());\n    var AbsoluteRedirect = /** @class */ (function () {\n        function AbsoluteRedirect(urlTree) {\n            this.urlTree = urlTree;\n        }\n        return AbsoluteRedirect;\n    }());\n    function noMatch(segmentGroup) {\n        return new rxjs.Observable(function (obs) { return obs.error(new NoMatch(segmentGroup)); });\n    }\n    function absoluteRedirect(newTree) {\n        return new rxjs.Observable(function (obs) { return obs.error(new AbsoluteRedirect(newTree)); });\n    }\n    function namedOutletsRedirect(redirectTo) {\n        return new rxjs.Observable(function (obs) { return obs.error(new Error(\"Only absolute redirects can have named outlets. redirectTo: '\" + redirectTo + \"'\")); });\n    }\n    function canLoadFails(route) {\n        return new rxjs.Observable(function (obs) { return obs.error(navigationCancelingError(\"Cannot load children because the guard of the route \\\"path: '\" + route.path + \"'\\\" returned false\")); });\n    }\n    /**\n     * Returns the `UrlTree` with the redirection applied.\n     *\n     * Lazy modules are loaded along the way.\n     */\n    function applyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config) {\n        return new ApplyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config).apply();\n    }\n    var ApplyRedirects = /** @class */ (function () {\n        function ApplyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config) {\n            this.configLoader = configLoader;\n            this.urlSerializer = urlSerializer;\n            this.urlTree = urlTree;\n            this.config = config;\n            this.allowRedirects = true;\n            this.ngModule = moduleInjector.get(i0.NgModuleRef);\n        }\n        ApplyRedirects.prototype.apply = function () {\n            var _this = this;\n            var expanded$ = this.expandSegmentGroup(this.ngModule, this.config, this.urlTree.root, PRIMARY_OUTLET);\n            var urlTrees$ = expanded$.pipe(operators.map(function (rootSegmentGroup) { return _this.createUrlTree(rootSegmentGroup, _this.urlTree.queryParams, _this.urlTree.fragment); }));\n            return urlTrees$.pipe(operators.catchError(function (e) {\n                if (e instanceof AbsoluteRedirect) {\n                    // after an absolute redirect we do not apply any more redirects!\n                    _this.allowRedirects = false;\n                    // we need to run matching, so we can fetch all lazy-loaded modules\n                    return _this.match(e.urlTree);\n                }\n                if (e instanceof NoMatch) {\n                    throw _this.noMatchError(e);\n                }\n                throw e;\n            }));\n        };\n        ApplyRedirects.prototype.match = function (tree) {\n            var _this = this;\n            var expanded$ = this.expandSegmentGroup(this.ngModule, this.config, tree.root, PRIMARY_OUTLET);\n            var mapped$ = expanded$.pipe(operators.map(function (rootSegmentGroup) { return _this.createUrlTree(rootSegmentGroup, tree.queryParams, tree.fragment); }));\n            return mapped$.pipe(operators.catchError(function (e) {\n                if (e instanceof NoMatch) {\n                    throw _this.noMatchError(e);\n                }\n                throw e;\n            }));\n        };\n        ApplyRedirects.prototype.noMatchError = function (e) {\n            return new Error(\"Cannot match any routes. URL Segment: '\" + e.segmentGroup + \"'\");\n        };\n        ApplyRedirects.prototype.createUrlTree = function (rootCandidate, queryParams, fragment) {\n            var _a;\n            var root = rootCandidate.segments.length > 0 ?\n                new UrlSegmentGroup([], (_a = {}, _a[PRIMARY_OUTLET] = rootCandidate, _a)) :\n                rootCandidate;\n            return new UrlTree(root, queryParams, fragment);\n        };\n        ApplyRedirects.prototype.expandSegmentGroup = function (ngModule, routes, segmentGroup, outlet) {\n            if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n                return this.expandChildren(ngModule, routes, segmentGroup)\n                    .pipe(operators.map(function (children) { return new UrlSegmentGroup([], children); }));\n            }\n            return this.expandSegment(ngModule, segmentGroup, routes, segmentGroup.segments, outlet, true);\n        };\n        // Recursively expand segment groups for all the child outlets\n        ApplyRedirects.prototype.expandChildren = function (ngModule, routes, segmentGroup) {\n            var _this = this;\n            return waitForMap(segmentGroup.children, function (childOutlet, child) { return _this.expandSegmentGroup(ngModule, routes, child, childOutlet); });\n        };\n        ApplyRedirects.prototype.expandSegment = function (ngModule, segmentGroup, routes, segments, outlet, allowRedirects) {\n            var _this = this;\n            return rxjs.of.apply(void 0, __spread(routes)).pipe(operators.map(function (r) {\n                var expanded$ = _this.expandSegmentAgainstRoute(ngModule, segmentGroup, routes, r, segments, outlet, allowRedirects);\n                return expanded$.pipe(operators.catchError(function (e) {\n                    if (e instanceof NoMatch) {\n                        // TODO(i): this return type doesn't match the declared Observable<UrlSegmentGroup> -\n                        // talk to Jason\n                        return rxjs.of(null);\n                    }\n                    throw e;\n                }));\n            }), operators.concatAll(), operators.first(function (s) { return !!s; }), operators.catchError(function (e, _) {\n                if (e instanceof rxjs.EmptyError || e.name === 'EmptyError') {\n                    if (_this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n                        return rxjs.of(new UrlSegmentGroup([], {}));\n                    }\n                    throw new NoMatch(segmentGroup);\n                }\n                throw e;\n            }));\n        };\n        ApplyRedirects.prototype.noLeftoversInUrl = function (segmentGroup, segments, outlet) {\n            return segments.length === 0 && !segmentGroup.children[outlet];\n        };\n        ApplyRedirects.prototype.expandSegmentAgainstRoute = function (ngModule, segmentGroup, routes, route, paths, outlet, allowRedirects) {\n            if (getOutlet(route) !== outlet) {\n                return noMatch(segmentGroup);\n            }\n            if (route.redirectTo === undefined) {\n                return this.matchSegmentAgainstRoute(ngModule, segmentGroup, route, paths);\n            }\n            if (allowRedirects && this.allowRedirects) {\n                return this.expandSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, paths, outlet);\n            }\n            return noMatch(segmentGroup);\n        };\n        ApplyRedirects.prototype.expandSegmentAgainstRouteUsingRedirect = function (ngModule, segmentGroup, routes, route, segments, outlet) {\n            if (route.path === '**') {\n                return this.expandWildCardWithParamsAgainstRouteUsingRedirect(ngModule, routes, route, outlet);\n            }\n            return this.expandRegularSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, segments, outlet);\n        };\n        ApplyRedirects.prototype.expandWildCardWithParamsAgainstRouteUsingRedirect = function (ngModule, routes, route, outlet) {\n            var _this = this;\n            var newTree = this.applyRedirectCommands([], route.redirectTo, {});\n            if (route.redirectTo.startsWith('/')) {\n                return absoluteRedirect(newTree);\n            }\n            return this.lineralizeSegments(route, newTree).pipe(operators.mergeMap(function (newSegments) {\n                var group = new UrlSegmentGroup(newSegments, {});\n                return _this.expandSegment(ngModule, group, routes, newSegments, outlet, false);\n            }));\n        };\n        ApplyRedirects.prototype.expandRegularSegmentAgainstRouteUsingRedirect = function (ngModule, segmentGroup, routes, route, segments, outlet) {\n            var _this = this;\n            var _a = match(segmentGroup, route, segments), matched = _a.matched, consumedSegments = _a.consumedSegments, lastChild = _a.lastChild, positionalParamSegments = _a.positionalParamSegments;\n            if (!matched)\n                return noMatch(segmentGroup);\n            var newTree = this.applyRedirectCommands(consumedSegments, route.redirectTo, positionalParamSegments);\n            if (route.redirectTo.startsWith('/')) {\n                return absoluteRedirect(newTree);\n            }\n            return this.lineralizeSegments(route, newTree).pipe(operators.mergeMap(function (newSegments) {\n                return _this.expandSegment(ngModule, segmentGroup, routes, newSegments.concat(segments.slice(lastChild)), outlet, false);\n            }));\n        };\n        ApplyRedirects.prototype.matchSegmentAgainstRoute = function (ngModule, rawSegmentGroup, route, segments) {\n            var _this = this;\n            if (route.path === '**') {\n                if (route.loadChildren) {\n                    return this.configLoader.load(ngModule.injector, route)\n                        .pipe(operators.map(function (cfg) {\n                        route._loadedConfig = cfg;\n                        return new UrlSegmentGroup(segments, {});\n                    }));\n                }\n                return rxjs.of(new UrlSegmentGroup(segments, {}));\n            }\n            var _a = match(rawSegmentGroup, route, segments), matched = _a.matched, consumedSegments = _a.consumedSegments, lastChild = _a.lastChild;\n            if (!matched)\n                return noMatch(rawSegmentGroup);\n            var rawSlicedSegments = segments.slice(lastChild);\n            var childConfig$ = this.getChildConfig(ngModule, route, segments);\n            return childConfig$.pipe(operators.mergeMap(function (routerConfig) {\n                var childModule = routerConfig.module;\n                var childConfig = routerConfig.routes;\n                var _a = split(rawSegmentGroup, consumedSegments, rawSlicedSegments, childConfig), segmentGroup = _a.segmentGroup, slicedSegments = _a.slicedSegments;\n                if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n                    var expanded$_1 = _this.expandChildren(childModule, childConfig, segmentGroup);\n                    return expanded$_1.pipe(operators.map(function (children) { return new UrlSegmentGroup(consumedSegments, children); }));\n                }\n                if (childConfig.length === 0 && slicedSegments.length === 0) {\n                    return rxjs.of(new UrlSegmentGroup(consumedSegments, {}));\n                }\n                var expanded$ = _this.expandSegment(childModule, segmentGroup, childConfig, slicedSegments, PRIMARY_OUTLET, true);\n                return expanded$.pipe(operators.map(function (cs) { return new UrlSegmentGroup(consumedSegments.concat(cs.segments), cs.children); }));\n            }));\n        };\n        ApplyRedirects.prototype.getChildConfig = function (ngModule, route, segments) {\n            var _this = this;\n            if (route.children) {\n                // The children belong to the same module\n                return rxjs.of(new LoadedRouterConfig(route.children, ngModule));\n            }\n            if (route.loadChildren) {\n                // lazy children belong to the loaded module\n                if (route._loadedConfig !== undefined) {\n                    return rxjs.of(route._loadedConfig);\n                }\n                return this.runCanLoadGuards(ngModule.injector, route, segments)\n                    .pipe(operators.mergeMap(function (shouldLoadResult) {\n                    if (shouldLoadResult) {\n                        return _this.configLoader.load(ngModule.injector, route)\n                            .pipe(operators.map(function (cfg) {\n                            route._loadedConfig = cfg;\n                            return cfg;\n                        }));\n                    }\n                    return canLoadFails(route);\n                }));\n            }\n            return rxjs.of(new LoadedRouterConfig([], ngModule));\n        };\n        ApplyRedirects.prototype.runCanLoadGuards = function (moduleInjector, route, segments) {\n            var _this = this;\n            var canLoad = route.canLoad;\n            if (!canLoad || canLoad.length === 0)\n                return rxjs.of(true);\n            var canLoadObservables = canLoad.map(function (injectionToken) {\n                var guard = moduleInjector.get(injectionToken);\n                var guardVal;\n                if (isCanLoad(guard)) {\n                    guardVal = guard.canLoad(route, segments);\n                }\n                else if (isFunction(guard)) {\n                    guardVal = guard(route, segments);\n                }\n                else {\n                    throw new Error('Invalid CanLoad guard');\n                }\n                return wrapIntoObservable(guardVal);\n            });\n            return rxjs.of(canLoadObservables)\n                .pipe(prioritizedGuardValue(), operators.tap(function (result) {\n                if (!isUrlTree(result))\n                    return;\n                var error = navigationCancelingError(\"Redirecting to \\\"\" + _this.urlSerializer.serialize(result) + \"\\\"\");\n                error.url = result;\n                throw error;\n            }), operators.map(function (result) { return result === true; }));\n        };\n        ApplyRedirects.prototype.lineralizeSegments = function (route, urlTree) {\n            var res = [];\n            var c = urlTree.root;\n            while (true) {\n                res = res.concat(c.segments);\n                if (c.numberOfChildren === 0) {\n                    return rxjs.of(res);\n                }\n                if (c.numberOfChildren > 1 || !c.children[PRIMARY_OUTLET]) {\n                    return namedOutletsRedirect(route.redirectTo);\n                }\n                c = c.children[PRIMARY_OUTLET];\n            }\n        };\n        ApplyRedirects.prototype.applyRedirectCommands = function (segments, redirectTo, posParams) {\n            return this.applyRedirectCreatreUrlTree(redirectTo, this.urlSerializer.parse(redirectTo), segments, posParams);\n        };\n        ApplyRedirects.prototype.applyRedirectCreatreUrlTree = function (redirectTo, urlTree, segments, posParams) {\n            var newRoot = this.createSegmentGroup(redirectTo, urlTree.root, segments, posParams);\n            return new UrlTree(newRoot, this.createQueryParams(urlTree.queryParams, this.urlTree.queryParams), urlTree.fragment);\n        };\n        ApplyRedirects.prototype.createQueryParams = function (redirectToParams, actualParams) {\n            var res = {};\n            forEach(redirectToParams, function (v, k) {\n                var copySourceValue = typeof v === 'string' && v.startsWith(':');\n                if (copySourceValue) {\n                    var sourceName = v.substring(1);\n                    res[k] = actualParams[sourceName];\n                }\n                else {\n                    res[k] = v;\n                }\n            });\n            return res;\n        };\n        ApplyRedirects.prototype.createSegmentGroup = function (redirectTo, group, segments, posParams) {\n            var _this = this;\n            var updatedSegments = this.createSegments(redirectTo, group.segments, segments, posParams);\n            var children = {};\n            forEach(group.children, function (child, name) {\n                children[name] = _this.createSegmentGroup(redirectTo, child, segments, posParams);\n            });\n            return new UrlSegmentGroup(updatedSegments, children);\n        };\n        ApplyRedirects.prototype.createSegments = function (redirectTo, redirectToSegments, actualSegments, posParams) {\n            var _this = this;\n            return redirectToSegments.map(function (s) { return s.path.startsWith(':') ? _this.findPosParam(redirectTo, s, posParams) :\n                _this.findOrReturn(s, actualSegments); });\n        };\n        ApplyRedirects.prototype.findPosParam = function (redirectTo, redirectToUrlSegment, posParams) {\n            var pos = posParams[redirectToUrlSegment.path.substring(1)];\n            if (!pos)\n                throw new Error(\"Cannot redirect to '\" + redirectTo + \"'. Cannot find '\" + redirectToUrlSegment.path + \"'.\");\n            return pos;\n        };\n        ApplyRedirects.prototype.findOrReturn = function (redirectToUrlSegment, actualSegments) {\n            var e_1, _a;\n            var idx = 0;\n            try {\n                for (var actualSegments_1 = __values(actualSegments), actualSegments_1_1 = actualSegments_1.next(); !actualSegments_1_1.done; actualSegments_1_1 = actualSegments_1.next()) {\n                    var s = actualSegments_1_1.value;\n                    if (s.path === redirectToUrlSegment.path) {\n                        actualSegments.splice(idx);\n                        return s;\n                    }\n                    idx++;\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (actualSegments_1_1 && !actualSegments_1_1.done && (_a = actualSegments_1.return)) _a.call(actualSegments_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            return redirectToUrlSegment;\n        };\n        return ApplyRedirects;\n    }());\n    function match(segmentGroup, route, segments) {\n        if (route.path === '') {\n            if ((route.pathMatch === 'full') && (segmentGroup.hasChildren() || segments.length > 0)) {\n                return { matched: false, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n            }\n            return { matched: true, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n        }\n        var matcher = route.matcher || defaultUrlMatcher;\n        var res = matcher(segments, segmentGroup, route);\n        if (!res) {\n            return {\n                matched: false,\n                consumedSegments: [],\n                lastChild: 0,\n                positionalParamSegments: {},\n            };\n        }\n        return {\n            matched: true,\n            consumedSegments: res.consumed,\n            lastChild: res.consumed.length,\n            positionalParamSegments: res.posParams,\n        };\n    }\n    function split(segmentGroup, consumedSegments, slicedSegments, config) {\n        if (slicedSegments.length > 0 &&\n            containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n            var s = new UrlSegmentGroup(consumedSegments, createChildrenForEmptySegments(config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n            return { segmentGroup: mergeTrivialChildren(s), slicedSegments: [] };\n        }\n        if (slicedSegments.length === 0 &&\n            containsEmptyPathRedirects(segmentGroup, slicedSegments, config)) {\n            var s = new UrlSegmentGroup(segmentGroup.segments, addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, config, segmentGroup.children));\n            return { segmentGroup: mergeTrivialChildren(s), slicedSegments: slicedSegments };\n        }\n        return { segmentGroup: segmentGroup, slicedSegments: slicedSegments };\n    }\n    function mergeTrivialChildren(s) {\n        if (s.numberOfChildren === 1 && s.children[PRIMARY_OUTLET]) {\n            var c = s.children[PRIMARY_OUTLET];\n            return new UrlSegmentGroup(s.segments.concat(c.segments), c.children);\n        }\n        return s;\n    }\n    function addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, routes, children) {\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var routes_1 = __values(routes), routes_1_1 = routes_1.next(); !routes_1_1.done; routes_1_1 = routes_1.next()) {\n                var r = routes_1_1.value;\n                if (isEmptyPathRedirect(segmentGroup, slicedSegments, r) && !children[getOutlet(r)]) {\n                    res[getOutlet(r)] = new UrlSegmentGroup([], {});\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (routes_1_1 && !routes_1_1.done && (_a = routes_1.return)) _a.call(routes_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return Object.assign(Object.assign({}, children), res);\n    }\n    function createChildrenForEmptySegments(routes, primarySegmentGroup) {\n        var e_3, _a;\n        var res = {};\n        res[PRIMARY_OUTLET] = primarySegmentGroup;\n        try {\n            for (var routes_2 = __values(routes), routes_2_1 = routes_2.next(); !routes_2_1.done; routes_2_1 = routes_2.next()) {\n                var r = routes_2_1.value;\n                if (r.path === '' && getOutlet(r) !== PRIMARY_OUTLET) {\n                    res[getOutlet(r)] = new UrlSegmentGroup([], {});\n                }\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (routes_2_1 && !routes_2_1.done && (_a = routes_2.return)) _a.call(routes_2);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n        return res;\n    }\n    function containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, segments, routes) {\n        return routes.some(function (r) { return isEmptyPathRedirect(segmentGroup, segments, r) && getOutlet(r) !== PRIMARY_OUTLET; });\n    }\n    function containsEmptyPathRedirects(segmentGroup, segments, routes) {\n        return routes.some(function (r) { return isEmptyPathRedirect(segmentGroup, segments, r); });\n    }\n    function isEmptyPathRedirect(segmentGroup, segments, r) {\n        if ((segmentGroup.hasChildren() || segments.length > 0) && r.pathMatch === 'full') {\n            return false;\n        }\n        return r.path === '' && r.redirectTo !== undefined;\n    }\n    function getOutlet(route) {\n        return route.outlet || PRIMARY_OUTLET;\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function applyRedirects$1(moduleInjector, configLoader, urlSerializer, config) {\n        return function (source) {\n            return source.pipe(operators.switchMap(function (t) { return applyRedirects(moduleInjector, configLoader, urlSerializer, t.extractedUrl, config)\n                .pipe(operators.map(function (urlAfterRedirects) { return (Object.assign(Object.assign({}, t), { urlAfterRedirects: urlAfterRedirects })); })); }));\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var CanActivate = /** @class */ (function () {\n        function CanActivate(path) {\n            this.path = path;\n            this.route = this.path[this.path.length - 1];\n        }\n        return CanActivate;\n    }());\n    var CanDeactivate = /** @class */ (function () {\n        function CanDeactivate(component, route) {\n            this.component = component;\n            this.route = route;\n        }\n        return CanDeactivate;\n    }());\n    function getAllRouteGuards(future, curr, parentContexts) {\n        var futureRoot = future._root;\n        var currRoot = curr ? curr._root : null;\n        return getChildRouteGuards(futureRoot, currRoot, parentContexts, [futureRoot.value]);\n    }\n    function getCanActivateChild(p) {\n        var canActivateChild = p.routeConfig ? p.routeConfig.canActivateChild : null;\n        if (!canActivateChild || canActivateChild.length === 0)\n            return null;\n        return { node: p, guards: canActivateChild };\n    }\n    function getToken(token, snapshot, moduleInjector) {\n        var config = getClosestLoadedConfig(snapshot);\n        var injector = config ? config.module.injector : moduleInjector;\n        return injector.get(token);\n    }\n    function getClosestLoadedConfig(snapshot) {\n        if (!snapshot)\n            return null;\n        for (var s = snapshot.parent; s; s = s.parent) {\n            var route = s.routeConfig;\n            if (route && route._loadedConfig)\n                return route._loadedConfig;\n        }\n        return null;\n    }\n    function getChildRouteGuards(futureNode, currNode, contexts, futurePath, checks) {\n        if (checks === void 0) { checks = {\n            canDeactivateChecks: [],\n            canActivateChecks: []\n        }; }\n        var prevChildren = nodeChildrenAsMap(currNode);\n        // Process the children of the future route\n        futureNode.children.forEach(function (c) {\n            getRouteGuards(c, prevChildren[c.value.outlet], contexts, futurePath.concat([c.value]), checks);\n            delete prevChildren[c.value.outlet];\n        });\n        // Process any children left from the current route (not active for the future route)\n        forEach(prevChildren, function (v, k) { return deactivateRouteAndItsChildren(v, contexts.getContext(k), checks); });\n        return checks;\n    }\n    function getRouteGuards(futureNode, currNode, parentContexts, futurePath, checks) {\n        if (checks === void 0) { checks = {\n            canDeactivateChecks: [],\n            canActivateChecks: []\n        }; }\n        var future = futureNode.value;\n        var curr = currNode ? currNode.value : null;\n        var context = parentContexts ? parentContexts.getContext(futureNode.value.outlet) : null;\n        // reusing the node\n        if (curr && future.routeConfig === curr.routeConfig) {\n            var shouldRun = shouldRunGuardsAndResolvers(curr, future, future.routeConfig.runGuardsAndResolvers);\n            if (shouldRun) {\n                checks.canActivateChecks.push(new CanActivate(futurePath));\n            }\n            else {\n                // we need to set the data\n                future.data = curr.data;\n                future._resolvedData = curr._resolvedData;\n            }\n            // If we have a component, we need to go through an outlet.\n            if (future.component) {\n                getChildRouteGuards(futureNode, currNode, context ? context.children : null, futurePath, checks);\n                // if we have a componentless route, we recurse but keep the same outlet map.\n            }\n            else {\n                getChildRouteGuards(futureNode, currNode, parentContexts, futurePath, checks);\n            }\n            if (shouldRun) {\n                var component = context && context.outlet && context.outlet.component || null;\n                checks.canDeactivateChecks.push(new CanDeactivate(component, curr));\n            }\n        }\n        else {\n            if (curr) {\n                deactivateRouteAndItsChildren(currNode, context, checks);\n            }\n            checks.canActivateChecks.push(new CanActivate(futurePath));\n            // If we have a component, we need to go through an outlet.\n            if (future.component) {\n                getChildRouteGuards(futureNode, null, context ? context.children : null, futurePath, checks);\n                // if we have a componentless route, we recurse but keep the same outlet map.\n            }\n            else {\n                getChildRouteGuards(futureNode, null, parentContexts, futurePath, checks);\n            }\n        }\n        return checks;\n    }\n    function shouldRunGuardsAndResolvers(curr, future, mode) {\n        if (typeof mode === 'function') {\n            return mode(curr, future);\n        }\n        switch (mode) {\n            case 'pathParamsChange':\n                return !equalPath(curr.url, future.url);\n            case 'pathParamsOrQueryParamsChange':\n                return !equalPath(curr.url, future.url) ||\n                    !shallowEqual(curr.queryParams, future.queryParams);\n            case 'always':\n                return true;\n            case 'paramsOrQueryParamsChange':\n                return !equalParamsAndUrlSegments(curr, future) ||\n                    !shallowEqual(curr.queryParams, future.queryParams);\n            case 'paramsChange':\n            default:\n                return !equalParamsAndUrlSegments(curr, future);\n        }\n    }\n    function deactivateRouteAndItsChildren(route, context, checks) {\n        var children = nodeChildrenAsMap(route);\n        var r = route.value;\n        forEach(children, function (node, childName) {\n            if (!r.component) {\n                deactivateRouteAndItsChildren(node, context, checks);\n            }\n            else if (context) {\n                deactivateRouteAndItsChildren(node, context.children.getContext(childName), checks);\n            }\n            else {\n                deactivateRouteAndItsChildren(node, null, checks);\n            }\n        });\n        if (!r.component) {\n            checks.canDeactivateChecks.push(new CanDeactivate(null, r));\n        }\n        else if (context && context.outlet && context.outlet.isActivated) {\n            checks.canDeactivateChecks.push(new CanDeactivate(context.outlet.component, r));\n        }\n        else {\n            checks.canDeactivateChecks.push(new CanDeactivate(null, r));\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function checkGuards(moduleInjector, forwardEvent) {\n        return function (source) {\n            return source.pipe(operators.mergeMap(function (t) {\n                var targetSnapshot = t.targetSnapshot, currentSnapshot = t.currentSnapshot, _a = t.guards, canActivateChecks = _a.canActivateChecks, canDeactivateChecks = _a.canDeactivateChecks;\n                if (canDeactivateChecks.length === 0 && canActivateChecks.length === 0) {\n                    return rxjs.of(Object.assign(Object.assign({}, t), { guardsResult: true }));\n                }\n                return runCanDeactivateChecks(canDeactivateChecks, targetSnapshot, currentSnapshot, moduleInjector)\n                    .pipe(operators.mergeMap(function (canDeactivate) {\n                    return canDeactivate && isBoolean(canDeactivate) ?\n                        runCanActivateChecks(targetSnapshot, canActivateChecks, moduleInjector, forwardEvent) :\n                        rxjs.of(canDeactivate);\n                }), operators.map(function (guardsResult) { return (Object.assign(Object.assign({}, t), { guardsResult: guardsResult })); }));\n            }));\n        };\n    }\n    function runCanDeactivateChecks(checks, futureRSS, currRSS, moduleInjector) {\n        return rxjs.from(checks).pipe(operators.mergeMap(function (check) { return runCanDeactivate(check.component, check.route, currRSS, futureRSS, moduleInjector); }), operators.first(function (result) {\n            return result !== true;\n        }, true));\n    }\n    function runCanActivateChecks(futureSnapshot, checks, moduleInjector, forwardEvent) {\n        return rxjs.from(checks).pipe(operators.concatMap(function (check) {\n            return rxjs.from([\n                fireChildActivationStart(check.route.parent, forwardEvent),\n                fireActivationStart(check.route, forwardEvent),\n                runCanActivateChild(futureSnapshot, check.path, moduleInjector),\n                runCanActivate(futureSnapshot, check.route, moduleInjector)\n            ])\n                .pipe(operators.concatAll(), operators.first(function (result) {\n                return result !== true;\n            }, true));\n        }), operators.first(function (result) {\n            return result !== true;\n        }, true));\n    }\n    /**\n     * This should fire off `ActivationStart` events for each route being activated at this\n     * level.\n     * In other words, if you're activating `a` and `b` below, `path` will contain the\n     * `ActivatedRouteSnapshot`s for both and we will fire `ActivationStart` for both. Always\n     * return\n     * `true` so checks continue to run.\n     */\n    function fireActivationStart(snapshot, forwardEvent) {\n        if (snapshot !== null && forwardEvent) {\n            forwardEvent(new ActivationStart(snapshot));\n        }\n        return rxjs.of(true);\n    }\n    /**\n     * This should fire off `ChildActivationStart` events for each route being activated at this\n     * level.\n     * In other words, if you're activating `a` and `b` below, `path` will contain the\n     * `ActivatedRouteSnapshot`s for both and we will fire `ChildActivationStart` for both. Always\n     * return\n     * `true` so checks continue to run.\n     */\n    function fireChildActivationStart(snapshot, forwardEvent) {\n        if (snapshot !== null && forwardEvent) {\n            forwardEvent(new ChildActivationStart(snapshot));\n        }\n        return rxjs.of(true);\n    }\n    function runCanActivate(futureRSS, futureARS, moduleInjector) {\n        var canActivate = futureARS.routeConfig ? futureARS.routeConfig.canActivate : null;\n        if (!canActivate || canActivate.length === 0)\n            return rxjs.of(true);\n        var canActivateObservables = canActivate.map(function (c) {\n            return rxjs.defer(function () {\n                var guard = getToken(c, futureARS, moduleInjector);\n                var observable;\n                if (isCanActivate(guard)) {\n                    observable = wrapIntoObservable(guard.canActivate(futureARS, futureRSS));\n                }\n                else if (isFunction(guard)) {\n                    observable = wrapIntoObservable(guard(futureARS, futureRSS));\n                }\n                else {\n                    throw new Error('Invalid CanActivate guard');\n                }\n                return observable.pipe(operators.first());\n            });\n        });\n        return rxjs.of(canActivateObservables).pipe(prioritizedGuardValue());\n    }\n    function runCanActivateChild(futureRSS, path, moduleInjector) {\n        var futureARS = path[path.length - 1];\n        var canActivateChildGuards = path.slice(0, path.length - 1)\n            .reverse()\n            .map(function (p) { return getCanActivateChild(p); })\n            .filter(function (_) { return _ !== null; });\n        var canActivateChildGuardsMapped = canActivateChildGuards.map(function (d) {\n            return rxjs.defer(function () {\n                var guardsMapped = d.guards.map(function (c) {\n                    var guard = getToken(c, d.node, moduleInjector);\n                    var observable;\n                    if (isCanActivateChild(guard)) {\n                        observable = wrapIntoObservable(guard.canActivateChild(futureARS, futureRSS));\n                    }\n                    else if (isFunction(guard)) {\n                        observable = wrapIntoObservable(guard(futureARS, futureRSS));\n                    }\n                    else {\n                        throw new Error('Invalid CanActivateChild guard');\n                    }\n                    return observable.pipe(operators.first());\n                });\n                return rxjs.of(guardsMapped).pipe(prioritizedGuardValue());\n            });\n        });\n        return rxjs.of(canActivateChildGuardsMapped).pipe(prioritizedGuardValue());\n    }\n    function runCanDeactivate(component, currARS, currRSS, futureRSS, moduleInjector) {\n        var canDeactivate = currARS && currARS.routeConfig ? currARS.routeConfig.canDeactivate : null;\n        if (!canDeactivate || canDeactivate.length === 0)\n            return rxjs.of(true);\n        var canDeactivateObservables = canDeactivate.map(function (c) {\n            var guard = getToken(c, currARS, moduleInjector);\n            var observable;\n            if (isCanDeactivate(guard)) {\n                observable = wrapIntoObservable(guard.canDeactivate(component, currARS, currRSS, futureRSS));\n            }\n            else if (isFunction(guard)) {\n                observable = wrapIntoObservable(guard(component, currARS, currRSS, futureRSS));\n            }\n            else {\n                throw new Error('Invalid CanDeactivate guard');\n            }\n            return observable.pipe(operators.first());\n        });\n        return rxjs.of(canDeactivateObservables).pipe(prioritizedGuardValue());\n    }\n\n    var NoMatch$1 = /** @class */ (function () {\n        function NoMatch() {\n        }\n        return NoMatch;\n    }());\n    function recognize(rootComponentType, config, urlTree, url, paramsInheritanceStrategy, relativeLinkResolution) {\n        if (paramsInheritanceStrategy === void 0) { paramsInheritanceStrategy = 'emptyOnly'; }\n        if (relativeLinkResolution === void 0) { relativeLinkResolution = 'legacy'; }\n        return new Recognizer(rootComponentType, config, urlTree, url, paramsInheritanceStrategy, relativeLinkResolution)\n            .recognize();\n    }\n    var Recognizer = /** @class */ (function () {\n        function Recognizer(rootComponentType, config, urlTree, url, paramsInheritanceStrategy, relativeLinkResolution) {\n            this.rootComponentType = rootComponentType;\n            this.config = config;\n            this.urlTree = urlTree;\n            this.url = url;\n            this.paramsInheritanceStrategy = paramsInheritanceStrategy;\n            this.relativeLinkResolution = relativeLinkResolution;\n        }\n        Recognizer.prototype.recognize = function () {\n            try {\n                var rootSegmentGroup = split$1(this.urlTree.root, [], [], this.config, this.relativeLinkResolution).segmentGroup;\n                var children = this.processSegmentGroup(this.config, rootSegmentGroup, PRIMARY_OUTLET);\n                var root = new ActivatedRouteSnapshot([], Object.freeze({}), Object.freeze(Object.assign({}, this.urlTree.queryParams)), this.urlTree.fragment, {}, PRIMARY_OUTLET, this.rootComponentType, null, this.urlTree.root, -1, {});\n                var rootNode = new TreeNode(root, children);\n                var routeState = new RouterStateSnapshot(this.url, rootNode);\n                this.inheritParamsAndData(routeState._root);\n                return rxjs.of(routeState);\n            }\n            catch (e) {\n                return new rxjs.Observable(function (obs) { return obs.error(e); });\n            }\n        };\n        Recognizer.prototype.inheritParamsAndData = function (routeNode) {\n            var _this = this;\n            var route = routeNode.value;\n            var i = inheritedParamsDataResolve(route, this.paramsInheritanceStrategy);\n            route.params = Object.freeze(i.params);\n            route.data = Object.freeze(i.data);\n            routeNode.children.forEach(function (n) { return _this.inheritParamsAndData(n); });\n        };\n        Recognizer.prototype.processSegmentGroup = function (config, segmentGroup, outlet) {\n            if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n                return this.processChildren(config, segmentGroup);\n            }\n            return this.processSegment(config, segmentGroup, segmentGroup.segments, outlet);\n        };\n        Recognizer.prototype.processChildren = function (config, segmentGroup) {\n            var _this = this;\n            var children = mapChildrenIntoArray(segmentGroup, function (child, childOutlet) { return _this.processSegmentGroup(config, child, childOutlet); });\n            checkOutletNameUniqueness(children);\n            sortActivatedRouteSnapshots(children);\n            return children;\n        };\n        Recognizer.prototype.processSegment = function (config, segmentGroup, segments, outlet) {\n            var e_1, _a;\n            try {\n                for (var config_1 = __values(config), config_1_1 = config_1.next(); !config_1_1.done; config_1_1 = config_1.next()) {\n                    var r = config_1_1.value;\n                    try {\n                        return this.processSegmentAgainstRoute(r, segmentGroup, segments, outlet);\n                    }\n                    catch (e) {\n                        if (!(e instanceof NoMatch$1))\n                            throw e;\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (config_1_1 && !config_1_1.done && (_a = config_1.return)) _a.call(config_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            if (this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n                return [];\n            }\n            throw new NoMatch$1();\n        };\n        Recognizer.prototype.noLeftoversInUrl = function (segmentGroup, segments, outlet) {\n            return segments.length === 0 && !segmentGroup.children[outlet];\n        };\n        Recognizer.prototype.processSegmentAgainstRoute = function (route, rawSegment, segments, outlet) {\n            if (route.redirectTo)\n                throw new NoMatch$1();\n            if ((route.outlet || PRIMARY_OUTLET) !== outlet)\n                throw new NoMatch$1();\n            var snapshot;\n            var consumedSegments = [];\n            var rawSlicedSegments = [];\n            if (route.path === '**') {\n                var params = segments.length > 0 ? last(segments).parameters : {};\n                snapshot = new ActivatedRouteSnapshot(segments, params, Object.freeze(Object.assign({}, this.urlTree.queryParams)), this.urlTree.fragment, getData(route), outlet, route.component, route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + segments.length, getResolve(route));\n            }\n            else {\n                var result = match$1(rawSegment, route, segments);\n                consumedSegments = result.consumedSegments;\n                rawSlicedSegments = segments.slice(result.lastChild);\n                snapshot = new ActivatedRouteSnapshot(consumedSegments, result.parameters, Object.freeze(Object.assign({}, this.urlTree.queryParams)), this.urlTree.fragment, getData(route), outlet, route.component, route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + consumedSegments.length, getResolve(route));\n            }\n            var childConfig = getChildConfig(route);\n            var _a = split$1(rawSegment, consumedSegments, rawSlicedSegments, childConfig, this.relativeLinkResolution), segmentGroup = _a.segmentGroup, slicedSegments = _a.slicedSegments;\n            if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n                var children_1 = this.processChildren(childConfig, segmentGroup);\n                return [new TreeNode(snapshot, children_1)];\n            }\n            if (childConfig.length === 0 && slicedSegments.length === 0) {\n                return [new TreeNode(snapshot, [])];\n            }\n            var children = this.processSegment(childConfig, segmentGroup, slicedSegments, PRIMARY_OUTLET);\n            return [new TreeNode(snapshot, children)];\n        };\n        return Recognizer;\n    }());\n    function sortActivatedRouteSnapshots(nodes) {\n        nodes.sort(function (a, b) {\n            if (a.value.outlet === PRIMARY_OUTLET)\n                return -1;\n            if (b.value.outlet === PRIMARY_OUTLET)\n                return 1;\n            return a.value.outlet.localeCompare(b.value.outlet);\n        });\n    }\n    function getChildConfig(route) {\n        if (route.children) {\n            return route.children;\n        }\n        if (route.loadChildren) {\n            return route._loadedConfig.routes;\n        }\n        return [];\n    }\n    function match$1(segmentGroup, route, segments) {\n        if (route.path === '') {\n            if (route.pathMatch === 'full' && (segmentGroup.hasChildren() || segments.length > 0)) {\n                throw new NoMatch$1();\n            }\n            return { consumedSegments: [], lastChild: 0, parameters: {} };\n        }\n        var matcher = route.matcher || defaultUrlMatcher;\n        var res = matcher(segments, segmentGroup, route);\n        if (!res)\n            throw new NoMatch$1();\n        var posParams = {};\n        forEach(res.posParams, function (v, k) {\n            posParams[k] = v.path;\n        });\n        var parameters = res.consumed.length > 0 ? Object.assign(Object.assign({}, posParams), res.consumed[res.consumed.length - 1].parameters) :\n            posParams;\n        return { consumedSegments: res.consumed, lastChild: res.consumed.length, parameters: parameters };\n    }\n    function checkOutletNameUniqueness(nodes) {\n        var names = {};\n        nodes.forEach(function (n) {\n            var routeWithSameOutletName = names[n.value.outlet];\n            if (routeWithSameOutletName) {\n                var p = routeWithSameOutletName.url.map(function (s) { return s.toString(); }).join('/');\n                var c = n.value.url.map(function (s) { return s.toString(); }).join('/');\n                throw new Error(\"Two segments cannot have the same outlet name: '\" + p + \"' and '\" + c + \"'.\");\n            }\n            names[n.value.outlet] = n.value;\n        });\n    }\n    function getSourceSegmentGroup(segmentGroup) {\n        var s = segmentGroup;\n        while (s._sourceSegment) {\n            s = s._sourceSegment;\n        }\n        return s;\n    }\n    function getPathIndexShift(segmentGroup) {\n        var s = segmentGroup;\n        var res = (s._segmentIndexShift ? s._segmentIndexShift : 0);\n        while (s._sourceSegment) {\n            s = s._sourceSegment;\n            res += (s._segmentIndexShift ? s._segmentIndexShift : 0);\n        }\n        return res - 1;\n    }\n    function split$1(segmentGroup, consumedSegments, slicedSegments, config, relativeLinkResolution) {\n        if (slicedSegments.length > 0 &&\n            containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n            var s_1 = new UrlSegmentGroup(consumedSegments, createChildrenForEmptyPaths(segmentGroup, consumedSegments, config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n            s_1._sourceSegment = segmentGroup;\n            s_1._segmentIndexShift = consumedSegments.length;\n            return { segmentGroup: s_1, slicedSegments: [] };\n        }\n        if (slicedSegments.length === 0 &&\n            containsEmptyPathMatches(segmentGroup, slicedSegments, config)) {\n            var s_2 = new UrlSegmentGroup(segmentGroup.segments, addEmptyPathsToChildrenIfNeeded(segmentGroup, consumedSegments, slicedSegments, config, segmentGroup.children, relativeLinkResolution));\n            s_2._sourceSegment = segmentGroup;\n            s_2._segmentIndexShift = consumedSegments.length;\n            return { segmentGroup: s_2, slicedSegments: slicedSegments };\n        }\n        var s = new UrlSegmentGroup(segmentGroup.segments, segmentGroup.children);\n        s._sourceSegment = segmentGroup;\n        s._segmentIndexShift = consumedSegments.length;\n        return { segmentGroup: s, slicedSegments: slicedSegments };\n    }\n    function addEmptyPathsToChildrenIfNeeded(segmentGroup, consumedSegments, slicedSegments, routes, children, relativeLinkResolution) {\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var routes_1 = __values(routes), routes_1_1 = routes_1.next(); !routes_1_1.done; routes_1_1 = routes_1.next()) {\n                var r = routes_1_1.value;\n                if (emptyPathMatch(segmentGroup, slicedSegments, r) && !children[getOutlet$1(r)]) {\n                    var s = new UrlSegmentGroup([], {});\n                    s._sourceSegment = segmentGroup;\n                    if (relativeLinkResolution === 'legacy') {\n                        s._segmentIndexShift = segmentGroup.segments.length;\n                    }\n                    else {\n                        s._segmentIndexShift = consumedSegments.length;\n                    }\n                    res[getOutlet$1(r)] = s;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (routes_1_1 && !routes_1_1.done && (_a = routes_1.return)) _a.call(routes_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return Object.assign(Object.assign({}, children), res);\n    }\n    function createChildrenForEmptyPaths(segmentGroup, consumedSegments, routes, primarySegment) {\n        var e_3, _a;\n        var res = {};\n        res[PRIMARY_OUTLET] = primarySegment;\n        primarySegment._sourceSegment = segmentGroup;\n        primarySegment._segmentIndexShift = consumedSegments.length;\n        try {\n            for (var routes_2 = __values(routes), routes_2_1 = routes_2.next(); !routes_2_1.done; routes_2_1 = routes_2.next()) {\n                var r = routes_2_1.value;\n                if (r.path === '' && getOutlet$1(r) !== PRIMARY_OUTLET) {\n                    var s = new UrlSegmentGroup([], {});\n                    s._sourceSegment = segmentGroup;\n                    s._segmentIndexShift = consumedSegments.length;\n                    res[getOutlet$1(r)] = s;\n                }\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (routes_2_1 && !routes_2_1.done && (_a = routes_2.return)) _a.call(routes_2);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n        return res;\n    }\n    function containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, routes) {\n        return routes.some(function (r) { return emptyPathMatch(segmentGroup, slicedSegments, r) && getOutlet$1(r) !== PRIMARY_OUTLET; });\n    }\n    function containsEmptyPathMatches(segmentGroup, slicedSegments, routes) {\n        return routes.some(function (r) { return emptyPathMatch(segmentGroup, slicedSegments, r); });\n    }\n    function emptyPathMatch(segmentGroup, slicedSegments, r) {\n        if ((segmentGroup.hasChildren() || slicedSegments.length > 0) && r.pathMatch === 'full') {\n            return false;\n        }\n        return r.path === '' && r.redirectTo === undefined;\n    }\n    function getOutlet$1(route) {\n        return route.outlet || PRIMARY_OUTLET;\n    }\n    function getData(route) {\n        return route.data || {};\n    }\n    function getResolve(route) {\n        return route.resolve || {};\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function recognize$1(rootComponentType, config, serializer, paramsInheritanceStrategy, relativeLinkResolution) {\n        return function (source) {\n            return source.pipe(operators.mergeMap(function (t) { return recognize(rootComponentType, config, t.urlAfterRedirects, serializer(t.urlAfterRedirects), paramsInheritanceStrategy, relativeLinkResolution)\n                .pipe(operators.map(function (targetSnapshot) { return (Object.assign(Object.assign({}, t), { targetSnapshot: targetSnapshot })); })); }));\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function resolveData(paramsInheritanceStrategy, moduleInjector) {\n        return function (source) {\n            return source.pipe(operators.mergeMap(function (t) {\n                var targetSnapshot = t.targetSnapshot, canActivateChecks = t.guards.canActivateChecks;\n                if (!canActivateChecks.length) {\n                    return rxjs.of(t);\n                }\n                var canActivateChecksResolved = 0;\n                return rxjs.from(canActivateChecks)\n                    .pipe(operators.concatMap(function (check) { return runResolve(check.route, targetSnapshot, paramsInheritanceStrategy, moduleInjector); }), operators.tap(function () { return canActivateChecksResolved++; }), operators.takeLast(1), operators.mergeMap(function (_) { return canActivateChecksResolved === canActivateChecks.length ? rxjs.of(t) : rxjs.EMPTY; }));\n            }));\n        };\n    }\n    function runResolve(futureARS, futureRSS, paramsInheritanceStrategy, moduleInjector) {\n        var resolve = futureARS._resolve;\n        return resolveNode(resolve, futureARS, futureRSS, moduleInjector)\n            .pipe(operators.map(function (resolvedData) {\n            futureARS._resolvedData = resolvedData;\n            futureARS.data = Object.assign(Object.assign({}, futureARS.data), inheritedParamsDataResolve(futureARS, paramsInheritanceStrategy).resolve);\n            return null;\n        }));\n    }\n    function resolveNode(resolve, futureARS, futureRSS, moduleInjector) {\n        var keys = Object.keys(resolve);\n        if (keys.length === 0) {\n            return rxjs.of({});\n        }\n        var data = {};\n        return rxjs.from(keys).pipe(operators.mergeMap(function (key) { return getResolver(resolve[key], futureARS, futureRSS, moduleInjector)\n            .pipe(operators.tap(function (value) {\n            data[key] = value;\n        })); }), operators.takeLast(1), operators.mergeMap(function () {\n            // Ensure all resolvers returned values, otherwise don't emit any \"next\" and just complete\n            // the chain which will cancel navigation\n            if (Object.keys(data).length === keys.length) {\n                return rxjs.of(data);\n            }\n            return rxjs.EMPTY;\n        }));\n    }\n    function getResolver(injectionToken, futureARS, futureRSS, moduleInjector) {\n        var resolver = getToken(injectionToken, futureARS, moduleInjector);\n        return resolver.resolve ? wrapIntoObservable(resolver.resolve(futureARS, futureRSS)) :\n            wrapIntoObservable(resolver(futureARS, futureRSS));\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Perform a side effect through a switchMap for every emission on the source Observable,\n     * but return an Observable that is identical to the source. It's essentially the same as\n     * the `tap` operator, but if the side effectful `next` function returns an ObservableInput,\n     * it will wait before continuing with the original value.\n     */\n    function switchTap(next) {\n        return function (source) {\n            return source.pipe(operators.switchMap(function (v) {\n                var nextResult = next(v);\n                if (nextResult) {\n                    return rxjs.from(nextResult).pipe(operators.map(function () { return v; }));\n                }\n                return rxjs.from([v]);\n            }));\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Provides a way to customize when activated routes get reused.\n     *\n     * @publicApi\n     */\n    var RouteReuseStrategy = /** @class */ (function () {\n        function RouteReuseStrategy() {\n        }\n        return RouteReuseStrategy;\n    }());\n    /**\n     * Does not detach any subtrees. Reuses routes as long as their route config is the same.\n     */\n    var DefaultRouteReuseStrategy = /** @class */ (function () {\n        function DefaultRouteReuseStrategy() {\n        }\n        DefaultRouteReuseStrategy.prototype.shouldDetach = function (route) {\n            return false;\n        };\n        DefaultRouteReuseStrategy.prototype.store = function (route, detachedTree) { };\n        DefaultRouteReuseStrategy.prototype.shouldAttach = function (route) {\n            return false;\n        };\n        DefaultRouteReuseStrategy.prototype.retrieve = function (route) {\n            return null;\n        };\n        DefaultRouteReuseStrategy.prototype.shouldReuseRoute = function (future, curr) {\n            return future.routeConfig === curr.routeConfig;\n        };\n        return DefaultRouteReuseStrategy;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Store contextual information about a `RouterOutlet`\n     *\n     * @publicApi\n     */\n    var OutletContext = /** @class */ (function () {\n        function OutletContext() {\n            this.outlet = null;\n            this.route = null;\n            this.resolver = null;\n            this.children = new ChildrenOutletContexts();\n            this.attachRef = null;\n        }\n        return OutletContext;\n    }());\n    /**\n     * Store contextual information about the children (= nested) `RouterOutlet`\n     *\n     * @publicApi\n     */\n    var ChildrenOutletContexts = /** @class */ (function () {\n        function ChildrenOutletContexts() {\n            // contexts for child outlets, by name.\n            this.contexts = new Map();\n        }\n        /** Called when a `RouterOutlet` directive is instantiated */\n        ChildrenOutletContexts.prototype.onChildOutletCreated = function (childName, outlet) {\n            var context = this.getOrCreateContext(childName);\n            context.outlet = outlet;\n            this.contexts.set(childName, context);\n        };\n        /**\n         * Called when a `RouterOutlet` directive is destroyed.\n         * We need to keep the context as the outlet could be destroyed inside a NgIf and might be\n         * re-created later.\n         */\n        ChildrenOutletContexts.prototype.onChildOutletDestroyed = function (childName) {\n            var context = this.getContext(childName);\n            if (context) {\n                context.outlet = null;\n            }\n        };\n        /**\n         * Called when the corresponding route is deactivated during navigation.\n         * Because the component get destroyed, all children outlet are destroyed.\n         */\n        ChildrenOutletContexts.prototype.onOutletDeactivated = function () {\n            var contexts = this.contexts;\n            this.contexts = new Map();\n            return contexts;\n        };\n        ChildrenOutletContexts.prototype.onOutletReAttached = function (contexts) {\n            this.contexts = contexts;\n        };\n        ChildrenOutletContexts.prototype.getOrCreateContext = function (childName) {\n            var context = this.getContext(childName);\n            if (!context) {\n                context = new OutletContext();\n                this.contexts.set(childName, context);\n            }\n            return context;\n        };\n        ChildrenOutletContexts.prototype.getContext = function (childName) {\n            return this.contexts.get(childName) || null;\n        };\n        return ChildrenOutletContexts;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Acts as a placeholder that Angular dynamically fills based on the current router state.\n     *\n     * Each outlet can have a unique name, determined by the optional `name` attribute.\n     * The name cannot be set or changed dynamically. If not set, default value is \"primary\".\n     *\n     * ```\n     * <router-outlet></router-outlet>\n     * <router-outlet name='left'></router-outlet>\n     * <router-outlet name='right'></router-outlet>\n     * ```\n     *\n     * Named outlets can be the targets of secondary routes.\n     * The `Route` object for a secondary route has an `outlet` property to identify the target outlet:\n     *\n     * `{path: <base-path>, component: <component>, outlet: <target_outlet_name>}`\n     *\n     * Using named outlets and secondary routes, you can target multiple outlets in\n     * the same `RouterLink` directive.\n     *\n     * The router keeps track of separate branches in a navigation tree for each named outlet and\n     * generates a representation of that tree in the URL.\n     * The URL for a secondary route uses the following syntax to specify both the primary and secondary\n     * routes at the same time:\n     *\n     * `http://base-path/primary-route-path(outlet-name:route-path)`\n     *\n     * A router outlet emits an activate event when a new component is instantiated,\n     * and a deactivate event when a component is destroyed.\n     *\n     * ```\n     * <router-outlet\n     *   (activate)='onActivate($event)'\n     *   (deactivate)='onDeactivate($event)'></router-outlet>\n     * ```\n     *\n     * @see [Routing tutorial](guide/router-tutorial-toh#named-outlets \"Example of a named\n     * outlet and secondary route configuration\").\n     * @see `RouterLink`\n     * @see `Route`\n     * @ngModule RouterModule\n     *\n     * @publicApi\n     */\n    var RouterOutlet = /** @class */ (function () {\n        function RouterOutlet(parentContexts, location, resolver, name, changeDetector) {\n            this.parentContexts = parentContexts;\n            this.location = location;\n            this.resolver = resolver;\n            this.changeDetector = changeDetector;\n            this.activated = null;\n            this._activatedRoute = null;\n            this.activateEvents = new i0.EventEmitter();\n            this.deactivateEvents = new i0.EventEmitter();\n            this.name = name || PRIMARY_OUTLET;\n            parentContexts.onChildOutletCreated(this.name, this);\n        }\n        RouterOutlet.prototype.ngOnDestroy = function () {\n            this.parentContexts.onChildOutletDestroyed(this.name);\n        };\n        RouterOutlet.prototype.ngOnInit = function () {\n            if (!this.activated) {\n                // If the outlet was not instantiated at the time the route got activated we need to populate\n                // the outlet when it is initialized (ie inside a NgIf)\n                var context = this.parentContexts.getContext(this.name);\n                if (context && context.route) {\n                    if (context.attachRef) {\n                        // `attachRef` is populated when there is an existing component to mount\n                        this.attach(context.attachRef, context.route);\n                    }\n                    else {\n                        // otherwise the component defined in the configuration is created\n                        this.activateWith(context.route, context.resolver || null);\n                    }\n                }\n            }\n        };\n        Object.defineProperty(RouterOutlet.prototype, \"isActivated\", {\n            get: function () {\n                return !!this.activated;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(RouterOutlet.prototype, \"component\", {\n            get: function () {\n                if (!this.activated)\n                    throw new Error('Outlet is not activated');\n                return this.activated.instance;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(RouterOutlet.prototype, \"activatedRoute\", {\n            get: function () {\n                if (!this.activated)\n                    throw new Error('Outlet is not activated');\n                return this._activatedRoute;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(RouterOutlet.prototype, \"activatedRouteData\", {\n            get: function () {\n                if (this._activatedRoute) {\n                    return this._activatedRoute.snapshot.data;\n                }\n                return {};\n            },\n            enumerable: false,\n            configurable: true\n        });\n        /**\n         * Called when the `RouteReuseStrategy` instructs to detach the subtree\n         */\n        RouterOutlet.prototype.detach = function () {\n            if (!this.activated)\n                throw new Error('Outlet is not activated');\n            this.location.detach();\n            var cmp = this.activated;\n            this.activated = null;\n            this._activatedRoute = null;\n            return cmp;\n        };\n        /**\n         * Called when the `RouteReuseStrategy` instructs to re-attach a previously detached subtree\n         */\n        RouterOutlet.prototype.attach = function (ref, activatedRoute) {\n            this.activated = ref;\n            this._activatedRoute = activatedRoute;\n            this.location.insert(ref.hostView);\n        };\n        RouterOutlet.prototype.deactivate = function () {\n            if (this.activated) {\n                var c = this.component;\n                this.activated.destroy();\n                this.activated = null;\n                this._activatedRoute = null;\n                this.deactivateEvents.emit(c);\n            }\n        };\n        RouterOutlet.prototype.activateWith = function (activatedRoute, resolver) {\n            if (this.isActivated) {\n                throw new Error('Cannot activate an already activated outlet');\n            }\n            this._activatedRoute = activatedRoute;\n            var snapshot = activatedRoute._futureSnapshot;\n            var component = snapshot.routeConfig.component;\n            resolver = resolver || this.resolver;\n            var factory = resolver.resolveComponentFactory(component);\n            var childContexts = this.parentContexts.getOrCreateContext(this.name).children;\n            var injector = new OutletInjector(activatedRoute, childContexts, this.location.injector);\n            this.activated = this.location.createComponent(factory, this.location.length, injector);\n            // Calling `markForCheck` to make sure we will run the change detection when the\n            // `RouterOutlet` is inside a `ChangeDetectionStrategy.OnPush` component.\n            this.changeDetector.markForCheck();\n            this.activateEvents.emit(this.activated.instance);\n        };\n        return RouterOutlet;\n    }());\n    RouterOutlet.ɵfac = function RouterOutlet_Factory(t) { return new (t || RouterOutlet)(i0.ɵɵdirectiveInject(ChildrenOutletContexts), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver), i0.ɵɵinjectAttribute('name'), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef)); };\n    RouterOutlet.ɵdir = i0.ɵɵdefineDirective({ type: RouterOutlet, selectors: [[\"router-outlet\"]], outputs: { activateEvents: \"activate\", deactivateEvents: \"deactivate\" }, exportAs: [\"outlet\"] });\n    /*@__PURE__*/ (function () {\n        i0.ɵsetClassMetadata(RouterOutlet, [{\n                type: i0.Directive,\n                args: [{ selector: 'router-outlet', exportAs: 'outlet' }]\n            }], function () {\n            return [{ type: ChildrenOutletContexts }, { type: i0.ViewContainerRef }, { type: i0.ComponentFactoryResolver }, { type: undefined, decorators: [{\n                            type: i0.Attribute,\n                            args: ['name']\n                        }] }, { type: i0.ChangeDetectorRef }];\n        }, { activateEvents: [{\n                    type: i0.Output,\n                    args: ['activate']\n                }], deactivateEvents: [{\n                    type: i0.Output,\n                    args: ['deactivate']\n                }] });\n    })();\n    var OutletInjector = /** @class */ (function () {\n        function OutletInjector(route, childContexts, parent) {\n            this.route = route;\n            this.childContexts = childContexts;\n            this.parent = parent;\n        }\n        OutletInjector.prototype.get = function (token, notFoundValue) {\n            if (token === ActivatedRoute) {\n                return this.route;\n            }\n            if (token === ChildrenOutletContexts) {\n                return this.childContexts;\n            }\n            return this.parent.get(token, notFoundValue);\n        };\n        return OutletInjector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This component is used internally within the router to be a placeholder when an empty\n     * router-outlet is needed. For example, with a config such as:\n     *\n     * `{path: 'parent', outlet: 'nav', children: [...]}`\n     *\n     * In order to render, there needs to be a component on this config, which will default\n     * to this `EmptyOutletComponent`.\n     */\n    var ɵEmptyOutletComponent = /** @class */ (function () {\n        function ɵEmptyOutletComponent() {\n        }\n        return ɵEmptyOutletComponent;\n    }());\n    ɵEmptyOutletComponent.ɵfac = function ɵEmptyOutletComponent_Factory(t) { return new (t || ɵEmptyOutletComponent)(); };\n    ɵEmptyOutletComponent.ɵcmp = i0.ɵɵdefineComponent({ type: ɵEmptyOutletComponent, selectors: [[\"ng-component\"]], decls: 1, vars: 0, template: function ɵEmptyOutletComponent_Template(rf, ctx) {\n            if (rf & 1) {\n                i0.ɵɵelement(0, \"router-outlet\");\n            }\n        }, directives: [RouterOutlet], encapsulation: 2 });\n    /*@__PURE__*/ (function () {\n        i0.ɵsetClassMetadata(ɵEmptyOutletComponent, [{\n                type: i0.Component,\n                args: [{ template: \"<router-outlet></router-outlet>\" }]\n            }], null, null);\n    })();\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function validateConfig(config, parentPath) {\n        if (parentPath === void 0) { parentPath = ''; }\n        // forEach doesn't iterate undefined values\n        for (var i = 0; i < config.length; i++) {\n            var route = config[i];\n            var fullPath = getFullPath(parentPath, route);\n            validateNode(route, fullPath);\n        }\n    }\n    function validateNode(route, fullPath) {\n        if (!route) {\n            throw new Error(\"\\n      Invalid configuration of route '\" + fullPath + \"': Encountered undefined route.\\n      The reason might be an extra comma.\\n\\n      Example:\\n      const routes: Routes = [\\n        { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\\n        { path: 'dashboard',  component: DashboardComponent },, << two commas\\n        { path: 'detail/:id', component: HeroDetailComponent }\\n      ];\\n    \");\n        }\n        if (Array.isArray(route)) {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': Array cannot be specified\");\n        }\n        if (!route.component && !route.children && !route.loadChildren &&\n            (route.outlet && route.outlet !== PRIMARY_OUTLET)) {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': a componentless route without children or loadChildren cannot have a named outlet set\");\n        }\n        if (route.redirectTo && route.children) {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and children cannot be used together\");\n        }\n        if (route.redirectTo && route.loadChildren) {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and loadChildren cannot be used together\");\n        }\n        if (route.children && route.loadChildren) {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': children and loadChildren cannot be used together\");\n        }\n        if (route.redirectTo && route.component) {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and component cannot be used together\");\n        }\n        if (route.path && route.matcher) {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': path and matcher cannot be used together\");\n        }\n        if (route.redirectTo === void 0 && !route.component && !route.children && !route.loadChildren) {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"'. One of the following must be provided: component, redirectTo, children or loadChildren\");\n        }\n        if (route.path === void 0 && route.matcher === void 0) {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': routes must have either a path or a matcher specified\");\n        }\n        if (typeof route.path === 'string' && route.path.charAt(0) === '/') {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': path cannot start with a slash\");\n        }\n        if (route.path === '' && route.redirectTo !== void 0 && route.pathMatch === void 0) {\n            var exp = \"The default value of 'pathMatch' is 'prefix', but often the intent is to use 'full'.\";\n            throw new Error(\"Invalid configuration of route '{path: \\\"\" + fullPath + \"\\\", redirectTo: \\\"\" + route.redirectTo + \"\\\"}': please provide 'pathMatch'. \" + exp);\n        }\n        if (route.pathMatch !== void 0 && route.pathMatch !== 'full' && route.pathMatch !== 'prefix') {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': pathMatch can only be set to 'prefix' or 'full'\");\n        }\n        if (route.children) {\n            validateConfig(route.children, fullPath);\n        }\n    }\n    function getFullPath(parentPath, currentRoute) {\n        if (!currentRoute) {\n            return parentPath;\n        }\n        if (!parentPath && !currentRoute.path) {\n            return '';\n        }\n        else if (parentPath && !currentRoute.path) {\n            return parentPath + \"/\";\n        }\n        else if (!parentPath && currentRoute.path) {\n            return currentRoute.path;\n        }\n        else {\n            return parentPath + \"/\" + currentRoute.path;\n        }\n    }\n    /**\n     * Makes a copy of the config and adds any default required properties.\n     */\n    function standardizeConfig(r) {\n        var children = r.children && r.children.map(standardizeConfig);\n        var c = children ? Object.assign(Object.assign({}, r), { children: children }) : Object.assign({}, r);\n        if (!c.component && (children || c.loadChildren) && (c.outlet && c.outlet !== PRIMARY_OUTLET)) {\n            c.component = ɵEmptyOutletComponent;\n        }\n        return c;\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The [DI token](guide/glossary/#di-token) for a router configuration.\n     * @see `ROUTES`\n     * @publicApi\n     */\n    var ROUTES = new i0.InjectionToken('ROUTES');\n    var RouterConfigLoader = /** @class */ (function () {\n        function RouterConfigLoader(loader, compiler, onLoadStartListener, onLoadEndListener) {\n            this.loader = loader;\n            this.compiler = compiler;\n            this.onLoadStartListener = onLoadStartListener;\n            this.onLoadEndListener = onLoadEndListener;\n        }\n        RouterConfigLoader.prototype.load = function (parentInjector, route) {\n            var _this = this;\n            if (this.onLoadStartListener) {\n                this.onLoadStartListener(route);\n            }\n            var moduleFactory$ = this.loadModuleFactory(route.loadChildren);\n            return moduleFactory$.pipe(operators.map(function (factory) {\n                if (_this.onLoadEndListener) {\n                    _this.onLoadEndListener(route);\n                }\n                var module = factory.create(parentInjector);\n                return new LoadedRouterConfig(flatten(module.injector.get(ROUTES)).map(standardizeConfig), module);\n            }));\n        };\n        RouterConfigLoader.prototype.loadModuleFactory = function (loadChildren) {\n            var _this = this;\n            if (typeof loadChildren === 'string') {\n                return rxjs.from(this.loader.load(loadChildren));\n            }\n            else {\n                return wrapIntoObservable(loadChildren()).pipe(operators.mergeMap(function (t) {\n                    if (t instanceof i0.NgModuleFactory) {\n                        return rxjs.of(t);\n                    }\n                    else {\n                        return rxjs.from(_this.compiler.compileModuleAsync(t));\n                    }\n                }));\n            }\n        };\n        return RouterConfigLoader;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Provides a way to migrate AngularJS applications to Angular.\n     *\n     * @publicApi\n     */\n    var UrlHandlingStrategy = /** @class */ (function () {\n        function UrlHandlingStrategy() {\n        }\n        return UrlHandlingStrategy;\n    }());\n    /**\n     * @publicApi\n     */\n    var DefaultUrlHandlingStrategy = /** @class */ (function () {\n        function DefaultUrlHandlingStrategy() {\n        }\n        DefaultUrlHandlingStrategy.prototype.shouldProcessUrl = function (url) {\n            return true;\n        };\n        DefaultUrlHandlingStrategy.prototype.extract = function (url) {\n            return url;\n        };\n        DefaultUrlHandlingStrategy.prototype.merge = function (newUrlPart, wholeUrl) {\n            return newUrlPart;\n        };\n        return DefaultUrlHandlingStrategy;\n    }());\n\n    function defaultErrorHandler(error) {\n        throw error;\n    }\n    function defaultMalformedUriErrorHandler(error, urlSerializer, url) {\n        return urlSerializer.parse('/');\n    }\n    /**\n     * @internal\n     */\n    function defaultRouterHook(snapshot, runExtras) {\n        return rxjs.of(null);\n    }\n    /**\n     * @description\n     *\n     * A service that provides navigation among views and URL manipulation capabilities.\n     *\n     * @see `Route`.\n     * @see [Routing and Navigation Guide](guide/router).\n     *\n     * @ngModule RouterModule\n     *\n     * @publicApi\n     */\n    var Router = /** @class */ (function () {\n        /**\n         * Creates the router service.\n         */\n        // TODO: vsavkin make internal after the final is out.\n        function Router(rootComponentType, urlSerializer, rootContexts, location, injector, loader, compiler, config) {\n            var _this = this;\n            this.rootComponentType = rootComponentType;\n            this.urlSerializer = urlSerializer;\n            this.rootContexts = rootContexts;\n            this.location = location;\n            this.config = config;\n            this.lastSuccessfulNavigation = null;\n            this.currentNavigation = null;\n            /**\n             * Tracks the previously seen location change from the location subscription so we can compare\n             * the two latest to see if they are duplicates. See setUpLocationChangeListener.\n             */\n            this.lastLocationChangeInfo = null;\n            this.navigationId = 0;\n            this.isNgZoneEnabled = false;\n            /**\n             * An event stream for routing events in this NgModule.\n             */\n            this.events = new rxjs.Subject();\n            /**\n             * A handler for navigation errors in this NgModule.\n             */\n            this.errorHandler = defaultErrorHandler;\n            /**\n             * A handler for errors thrown by `Router.parseUrl(url)`\n             * when `url` contains an invalid character.\n             * The most common case is a `%` sign\n             * that's not encoded and is not part of a percent encoded sequence.\n             */\n            this.malformedUriErrorHandler = defaultMalformedUriErrorHandler;\n            /**\n             * True if at least one navigation event has occurred,\n             * false otherwise.\n             */\n            this.navigated = false;\n            this.lastSuccessfulId = -1;\n            /**\n             * Hooks that enable you to pause navigation,\n             * either before or after the preactivation phase.\n             * Used by `RouterModule`.\n             *\n             * @internal\n             */\n            this.hooks = { beforePreactivation: defaultRouterHook, afterPreactivation: defaultRouterHook };\n            /**\n             * A strategy for extracting and merging URLs.\n             * Used for AngularJS to Angular migrations.\n             */\n            this.urlHandlingStrategy = new DefaultUrlHandlingStrategy();\n            /**\n             * A strategy for re-using routes.\n             */\n            this.routeReuseStrategy = new DefaultRouteReuseStrategy();\n            /**\n             * How to handle a navigation request to the current URL. One of:\n             * - `'ignore'` :  The router ignores the request.\n             * - `'reload'` : The router reloads the URL. Use to implement a \"refresh\" feature.\n             */\n            this.onSameUrlNavigation = 'ignore';\n            /**\n             * How to merge parameters, data, and resolved data from parent to child\n             * routes. One of:\n             *\n             * - `'emptyOnly'` : Inherit parent parameters, data, and resolved data\n             * for path-less or component-less routes.\n             * - `'always'` : Inherit parent parameters, data, and resolved data\n             * for all child routes.\n             */\n            this.paramsInheritanceStrategy = 'emptyOnly';\n            /**\n             * Determines when the router updates the browser URL.\n             * By default (`\"deferred\"`), updates the browser URL after navigation has finished.\n             * Set to `'eager'` to update the browser URL at the beginning of navigation.\n             * You can choose to update early so that, if navigation fails,\n             * you can show an error message with the URL that failed.\n             */\n            this.urlUpdateStrategy = 'deferred';\n            /**\n             * Enables a bug fix that corrects relative link resolution in components with empty paths.\n             * @see `RouterModule`\n             */\n            this.relativeLinkResolution = 'legacy';\n            var onLoadStart = function (r) { return _this.triggerEvent(new RouteConfigLoadStart(r)); };\n            var onLoadEnd = function (r) { return _this.triggerEvent(new RouteConfigLoadEnd(r)); };\n            this.ngModule = injector.get(i0.NgModuleRef);\n            this.console = injector.get(i0.ɵConsole);\n            var ngZone = injector.get(i0.NgZone);\n            this.isNgZoneEnabled = ngZone instanceof i0.NgZone;\n            this.resetConfig(config);\n            this.currentUrlTree = createEmptyUrlTree();\n            this.rawUrlTree = this.currentUrlTree;\n            this.browserUrlTree = this.currentUrlTree;\n            this.configLoader = new RouterConfigLoader(loader, compiler, onLoadStart, onLoadEnd);\n            this.routerState = createEmptyState(this.currentUrlTree, this.rootComponentType);\n            this.transitions = new rxjs.BehaviorSubject({\n                id: 0,\n                currentUrlTree: this.currentUrlTree,\n                currentRawUrl: this.currentUrlTree,\n                extractedUrl: this.urlHandlingStrategy.extract(this.currentUrlTree),\n                urlAfterRedirects: this.urlHandlingStrategy.extract(this.currentUrlTree),\n                rawUrl: this.currentUrlTree,\n                extras: {},\n                resolve: null,\n                reject: null,\n                promise: Promise.resolve(true),\n                source: 'imperative',\n                restoredState: null,\n                currentSnapshot: this.routerState.snapshot,\n                targetSnapshot: null,\n                currentRouterState: this.routerState,\n                targetRouterState: null,\n                guards: { canActivateChecks: [], canDeactivateChecks: [] },\n                guardsResult: null,\n            });\n            this.navigations = this.setupNavigations(this.transitions);\n            this.processNavigations();\n        }\n        Router.prototype.setupNavigations = function (transitions) {\n            var _this = this;\n            var eventsSubject = this.events;\n            return transitions.pipe(operators.filter(function (t) { return t.id !== 0; }), \n            // Extract URL\n            operators.map(function (t) { return (Object.assign(Object.assign({}, t), { extractedUrl: _this.urlHandlingStrategy.extract(t.rawUrl) })); }), \n            // Using switchMap so we cancel executing navigations when a new one comes in\n            operators.switchMap(function (t) {\n                var completed = false;\n                var errored = false;\n                return rxjs.of(t).pipe(\n                // Store the Navigation object\n                operators.tap(function (t) {\n                    _this.currentNavigation = {\n                        id: t.id,\n                        initialUrl: t.currentRawUrl,\n                        extractedUrl: t.extractedUrl,\n                        trigger: t.source,\n                        extras: t.extras,\n                        previousNavigation: _this.lastSuccessfulNavigation ? Object.assign(Object.assign({}, _this.lastSuccessfulNavigation), { previousNavigation: null }) :\n                            null\n                    };\n                }), operators.switchMap(function (t) {\n                    var urlTransition = !_this.navigated ||\n                        t.extractedUrl.toString() !== _this.browserUrlTree.toString();\n                    var processCurrentUrl = (_this.onSameUrlNavigation === 'reload' ? true : urlTransition) &&\n                        _this.urlHandlingStrategy.shouldProcessUrl(t.rawUrl);\n                    if (processCurrentUrl) {\n                        return rxjs.of(t).pipe(\n                        // Fire NavigationStart event\n                        operators.switchMap(function (t) {\n                            var transition = _this.transitions.getValue();\n                            eventsSubject.next(new NavigationStart(t.id, _this.serializeUrl(t.extractedUrl), t.source, t.restoredState));\n                            if (transition !== _this.transitions.getValue()) {\n                                return rxjs.EMPTY;\n                            }\n                            return [t];\n                        }), \n                        // This delay is required to match old behavior that forced navigation\n                        // to always be async\n                        operators.switchMap(function (t) { return Promise.resolve(t); }), \n                        // ApplyRedirects\n                        applyRedirects$1(_this.ngModule.injector, _this.configLoader, _this.urlSerializer, _this.config), \n                        // Update the currentNavigation\n                        operators.tap(function (t) {\n                            _this.currentNavigation = Object.assign(Object.assign({}, _this.currentNavigation), { finalUrl: t.urlAfterRedirects });\n                        }), \n                        // Recognize\n                        recognize$1(_this.rootComponentType, _this.config, function (url) { return _this.serializeUrl(url); }, _this.paramsInheritanceStrategy, _this.relativeLinkResolution), \n                        // Update URL if in `eager` update mode\n                        operators.tap(function (t) {\n                            if (_this.urlUpdateStrategy === 'eager') {\n                                if (!t.extras.skipLocationChange) {\n                                    _this.setBrowserUrl(t.urlAfterRedirects, !!t.extras.replaceUrl, t.id, t.extras.state);\n                                }\n                                _this.browserUrlTree = t.urlAfterRedirects;\n                            }\n                        }), \n                        // Fire RoutesRecognized\n                        operators.tap(function (t) {\n                            var routesRecognized = new RoutesRecognized(t.id, _this.serializeUrl(t.extractedUrl), _this.serializeUrl(t.urlAfterRedirects), t.targetSnapshot);\n                            eventsSubject.next(routesRecognized);\n                        }));\n                    }\n                    else {\n                        var processPreviousUrl = urlTransition && _this.rawUrlTree &&\n                            _this.urlHandlingStrategy.shouldProcessUrl(_this.rawUrlTree);\n                        /* When the current URL shouldn't be processed, but the previous one was,\n                         * we handle this \"error condition\" by navigating to the previously\n                         * successful URL, but leaving the URL intact.*/\n                        if (processPreviousUrl) {\n                            var id = t.id, extractedUrl = t.extractedUrl, source = t.source, restoredState = t.restoredState, extras = t.extras;\n                            var navStart = new NavigationStart(id, _this.serializeUrl(extractedUrl), source, restoredState);\n                            eventsSubject.next(navStart);\n                            var targetSnapshot = createEmptyState(extractedUrl, _this.rootComponentType).snapshot;\n                            return rxjs.of(Object.assign(Object.assign({}, t), { targetSnapshot: targetSnapshot, urlAfterRedirects: extractedUrl, extras: Object.assign(Object.assign({}, extras), { skipLocationChange: false, replaceUrl: false }) }));\n                        }\n                        else {\n                            /* When neither the current or previous URL can be processed, do nothing\n                             * other than update router's internal reference to the current \"settled\"\n                             * URL. This way the next navigation will be coming from the current URL\n                             * in the browser.\n                             */\n                            _this.rawUrlTree = t.rawUrl;\n                            _this.browserUrlTree = t.urlAfterRedirects;\n                            t.resolve(null);\n                            return rxjs.EMPTY;\n                        }\n                    }\n                }), \n                // Before Preactivation\n                switchTap(function (t) {\n                    var targetSnapshot = t.targetSnapshot, navigationId = t.id, appliedUrlTree = t.extractedUrl, rawUrlTree = t.rawUrl, _b = t.extras, skipLocationChange = _b.skipLocationChange, replaceUrl = _b.replaceUrl;\n                    return _this.hooks.beforePreactivation(targetSnapshot, {\n                        navigationId: navigationId,\n                        appliedUrlTree: appliedUrlTree,\n                        rawUrlTree: rawUrlTree,\n                        skipLocationChange: !!skipLocationChange,\n                        replaceUrl: !!replaceUrl,\n                    });\n                }), \n                // --- GUARDS ---\n                operators.tap(function (t) {\n                    var guardsStart = new GuardsCheckStart(t.id, _this.serializeUrl(t.extractedUrl), _this.serializeUrl(t.urlAfterRedirects), t.targetSnapshot);\n                    _this.triggerEvent(guardsStart);\n                }), operators.map(function (t) { return (Object.assign(Object.assign({}, t), { guards: getAllRouteGuards(t.targetSnapshot, t.currentSnapshot, _this.rootContexts) })); }), checkGuards(_this.ngModule.injector, function (evt) { return _this.triggerEvent(evt); }), operators.tap(function (t) {\n                    if (isUrlTree(t.guardsResult)) {\n                        var error = navigationCancelingError(\"Redirecting to \\\"\" + _this.serializeUrl(t.guardsResult) + \"\\\"\");\n                        error.url = t.guardsResult;\n                        throw error;\n                    }\n                }), operators.tap(function (t) {\n                    var guardsEnd = new GuardsCheckEnd(t.id, _this.serializeUrl(t.extractedUrl), _this.serializeUrl(t.urlAfterRedirects), t.targetSnapshot, !!t.guardsResult);\n                    _this.triggerEvent(guardsEnd);\n                }), operators.filter(function (t) {\n                    if (!t.guardsResult) {\n                        _this.resetUrlToCurrentUrlTree();\n                        var navCancel = new NavigationCancel(t.id, _this.serializeUrl(t.extractedUrl), '');\n                        eventsSubject.next(navCancel);\n                        t.resolve(false);\n                        return false;\n                    }\n                    return true;\n                }), \n                // --- RESOLVE ---\n                switchTap(function (t) {\n                    if (t.guards.canActivateChecks.length) {\n                        return rxjs.of(t).pipe(operators.tap(function (t) {\n                            var resolveStart = new ResolveStart(t.id, _this.serializeUrl(t.extractedUrl), _this.serializeUrl(t.urlAfterRedirects), t.targetSnapshot);\n                            _this.triggerEvent(resolveStart);\n                        }), operators.switchMap(function (t) {\n                            var dataResolved = false;\n                            return rxjs.of(t).pipe(resolveData(_this.paramsInheritanceStrategy, _this.ngModule.injector), operators.tap({\n                                next: function () { return dataResolved = true; },\n                                complete: function () {\n                                    if (!dataResolved) {\n                                        var navCancel = new NavigationCancel(t.id, _this.serializeUrl(t.extractedUrl), \"At least one route resolver didn't emit any value.\");\n                                        eventsSubject.next(navCancel);\n                                        t.resolve(false);\n                                    }\n                                }\n                            }));\n                        }), operators.tap(function (t) {\n                            var resolveEnd = new ResolveEnd(t.id, _this.serializeUrl(t.extractedUrl), _this.serializeUrl(t.urlAfterRedirects), t.targetSnapshot);\n                            _this.triggerEvent(resolveEnd);\n                        }));\n                    }\n                    return undefined;\n                }), \n                // --- AFTER PREACTIVATION ---\n                switchTap(function (t) {\n                    var targetSnapshot = t.targetSnapshot, navigationId = t.id, appliedUrlTree = t.extractedUrl, rawUrlTree = t.rawUrl, _b = t.extras, skipLocationChange = _b.skipLocationChange, replaceUrl = _b.replaceUrl;\n                    return _this.hooks.afterPreactivation(targetSnapshot, {\n                        navigationId: navigationId,\n                        appliedUrlTree: appliedUrlTree,\n                        rawUrlTree: rawUrlTree,\n                        skipLocationChange: !!skipLocationChange,\n                        replaceUrl: !!replaceUrl,\n                    });\n                }), operators.map(function (t) {\n                    var targetRouterState = createRouterState(_this.routeReuseStrategy, t.targetSnapshot, t.currentRouterState);\n                    return (Object.assign(Object.assign({}, t), { targetRouterState: targetRouterState }));\n                }), \n                /* Once here, we are about to activate syncronously. The assumption is this\n                   will succeed, and user code may read from the Router service. Therefore\n                   before activation, we need to update router properties storing the current\n                   URL and the RouterState, as well as updated the browser URL. All this should\n                   happen *before* activating. */\n                operators.tap(function (t) {\n                    _this.currentUrlTree = t.urlAfterRedirects;\n                    _this.rawUrlTree =\n                        _this.urlHandlingStrategy.merge(_this.currentUrlTree, t.rawUrl);\n                    _this.routerState = t.targetRouterState;\n                    if (_this.urlUpdateStrategy === 'deferred') {\n                        if (!t.extras.skipLocationChange) {\n                            _this.setBrowserUrl(_this.rawUrlTree, !!t.extras.replaceUrl, t.id, t.extras.state);\n                        }\n                        _this.browserUrlTree = t.urlAfterRedirects;\n                    }\n                }), activateRoutes(_this.rootContexts, _this.routeReuseStrategy, function (evt) { return _this.triggerEvent(evt); }), operators.tap({\n                    next: function () {\n                        completed = true;\n                    },\n                    complete: function () {\n                        completed = true;\n                    }\n                }), operators.finalize(function () {\n                    /* When the navigation stream finishes either through error or success, we\n                     * set the `completed` or `errored` flag. However, there are some situations\n                     * where we could get here without either of those being set. For instance, a\n                     * redirect during NavigationStart. Therefore, this is a catch-all to make\n                     * sure the NavigationCancel\n                     * event is fired when a navigation gets cancelled but not caught by other\n                     * means. */\n                    if (!completed && !errored) {\n                        // Must reset to current URL tree here to ensure history.state is set. On a\n                        // fresh page load, if a new navigation comes in before a successful\n                        // navigation completes, there will be nothing in\n                        // history.state.navigationId. This can cause sync problems with AngularJS\n                        // sync code which looks for a value here in order to determine whether or\n                        // not to handle a given popstate event or to leave it to the Angualr\n                        // router.\n                        _this.resetUrlToCurrentUrlTree();\n                        var navCancel = new NavigationCancel(t.id, _this.serializeUrl(t.extractedUrl), \"Navigation ID \" + t.id + \" is not equal to the current navigation id \" + _this.navigationId);\n                        eventsSubject.next(navCancel);\n                        t.resolve(false);\n                    }\n                    // currentNavigation should always be reset to null here. If navigation was\n                    // successful, lastSuccessfulTransition will have already been set. Therefore\n                    // we can safely set currentNavigation to null here.\n                    _this.currentNavigation = null;\n                }), operators.catchError(function (e) {\n                    errored = true;\n                    /* This error type is issued during Redirect, and is handled as a\n                     * cancellation rather than an error. */\n                    if (isNavigationCancelingError(e)) {\n                        var redirecting = isUrlTree(e.url);\n                        if (!redirecting) {\n                            // Set property only if we're not redirecting. If we landed on a page and\n                            // redirect to `/` route, the new navigation is going to see the `/`\n                            // isn't a change from the default currentUrlTree and won't navigate.\n                            // This is only applicable with initial navigation, so setting\n                            // `navigated` only when not redirecting resolves this scenario.\n                            _this.navigated = true;\n                            _this.resetStateAndUrl(t.currentRouterState, t.currentUrlTree, t.rawUrl);\n                        }\n                        var navCancel = new NavigationCancel(t.id, _this.serializeUrl(t.extractedUrl), e.message);\n                        eventsSubject.next(navCancel);\n                        // When redirecting, we need to delay resolving the navigation\n                        // promise and push it to the redirect navigation\n                        if (!redirecting) {\n                            t.resolve(false);\n                        }\n                        else {\n                            // setTimeout is required so this navigation finishes with\n                            // the return EMPTY below. If it isn't allowed to finish\n                            // processing, there can be multiple navigations to the same\n                            // URL.\n                            setTimeout(function () {\n                                var mergedTree = _this.urlHandlingStrategy.merge(e.url, _this.rawUrlTree);\n                                var extras = {\n                                    skipLocationChange: t.extras.skipLocationChange,\n                                    replaceUrl: _this.urlUpdateStrategy === 'eager'\n                                };\n                                return _this.scheduleNavigation(mergedTree, 'imperative', null, extras, { resolve: t.resolve, reject: t.reject, promise: t.promise });\n                            }, 0);\n                        }\n                        /* All other errors should reset to the router's internal URL reference to\n                         * the pre-error state. */\n                    }\n                    else {\n                        _this.resetStateAndUrl(t.currentRouterState, t.currentUrlTree, t.rawUrl);\n                        var navError = new NavigationError(t.id, _this.serializeUrl(t.extractedUrl), e);\n                        eventsSubject.next(navError);\n                        try {\n                            t.resolve(_this.errorHandler(e));\n                        }\n                        catch (ee) {\n                            t.reject(ee);\n                        }\n                    }\n                    return rxjs.EMPTY;\n                }));\n                // TODO(jasonaden): remove cast once g3 is on updated TypeScript\n            }));\n        };\n        /**\n         * @internal\n         * TODO: this should be removed once the constructor of the router made internal\n         */\n        Router.prototype.resetRootComponentType = function (rootComponentType) {\n            this.rootComponentType = rootComponentType;\n            // TODO: vsavkin router 4.0 should make the root component set to null\n            // this will simplify the lifecycle of the router.\n            this.routerState.root.component = this.rootComponentType;\n        };\n        Router.prototype.getTransition = function () {\n            var transition = this.transitions.value;\n            // This value needs to be set. Other values such as extractedUrl are set on initial navigation\n            // but the urlAfterRedirects may not get set if we aren't processing the new URL *and* not\n            // processing the previous URL.\n            transition.urlAfterRedirects = this.browserUrlTree;\n            return transition;\n        };\n        Router.prototype.setTransition = function (t) {\n            this.transitions.next(Object.assign(Object.assign({}, this.getTransition()), t));\n        };\n        /**\n         * Sets up the location change listener and performs the initial navigation.\n         */\n        Router.prototype.initialNavigation = function () {\n            this.setUpLocationChangeListener();\n            if (this.navigationId === 0) {\n                this.navigateByUrl(this.location.path(true), { replaceUrl: true });\n            }\n        };\n        /**\n         * Sets up the location change listener. This listener detects navigations triggered from outside\n         * the Router (the browser back/forward buttons, for example) and schedules a corresponding Router\n         * navigation so that the correct events, guards, etc. are triggered.\n         */\n        Router.prototype.setUpLocationChangeListener = function () {\n            var _this = this;\n            // Don't need to use Zone.wrap any more, because zone.js\n            // already patch onPopState, so location change callback will\n            // run into ngZone\n            if (!this.locationSubscription) {\n                this.locationSubscription = this.location.subscribe(function (event) {\n                    var currentChange = _this.extractLocationChangeInfoFromEvent(event);\n                    if (_this.shouldScheduleNavigation(_this.lastLocationChangeInfo, currentChange)) {\n                        // The `setTimeout` was added in #12160 and is likely to support Angular/AngularJS\n                        // hybrid apps.\n                        setTimeout(function () {\n                            var source = currentChange.source, state = currentChange.state, urlTree = currentChange.urlTree;\n                            _this.scheduleNavigation(urlTree, source, state, { replaceUrl: true });\n                        }, 0);\n                    }\n                    _this.lastLocationChangeInfo = currentChange;\n                });\n            }\n        };\n        /** Extracts router-related information from a `PopStateEvent`. */\n        Router.prototype.extractLocationChangeInfoFromEvent = function (change) {\n            var _a;\n            return {\n                source: change['type'] === 'popstate' ? 'popstate' : 'hashchange',\n                urlTree: this.parseUrl(change['url']),\n                // Navigations coming from Angular router have a navigationId state\n                // property. When this exists, restore the state.\n                state: ((_a = change.state) === null || _a === void 0 ? void 0 : _a.navigationId) ? change.state : null,\n                transitionId: this.getTransition().id\n            };\n        };\n        /**\n         * Determines whether two events triggered by the Location subscription are due to the same\n         * navigation. The location subscription can fire two events (popstate and hashchange) for a\n         * single navigation. The second one should be ignored, that is, we should not schedule another\n         * navigation in the Router.\n         */\n        Router.prototype.shouldScheduleNavigation = function (previous, current) {\n            if (!previous)\n                return true;\n            var sameDestination = current.urlTree.toString() === previous.urlTree.toString();\n            var eventsOccurredAtSameTime = current.transitionId === previous.transitionId;\n            if (!eventsOccurredAtSameTime || !sameDestination) {\n                return true;\n            }\n            if ((current.source === 'hashchange' && previous.source === 'popstate') ||\n                (current.source === 'popstate' && previous.source === 'hashchange')) {\n                return false;\n            }\n            return true;\n        };\n        Object.defineProperty(Router.prototype, \"url\", {\n            /** The current URL. */\n            get: function () {\n                return this.serializeUrl(this.currentUrlTree);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        /** The current Navigation object if one exists */\n        Router.prototype.getCurrentNavigation = function () {\n            return this.currentNavigation;\n        };\n        /** @internal */\n        Router.prototype.triggerEvent = function (event) {\n            this.events.next(event);\n        };\n        /**\n         * Resets the route configuration used for navigation and generating links.\n         *\n         * @param config The route array for the new configuration.\n         *\n         * @usageNotes\n         *\n         * ```\n         * router.resetConfig([\n         *  { path: 'team/:id', component: TeamCmp, children: [\n         *    { path: 'simple', component: SimpleCmp },\n         *    { path: 'user/:name', component: UserCmp }\n         *  ]}\n         * ]);\n         * ```\n         */\n        Router.prototype.resetConfig = function (config) {\n            validateConfig(config);\n            this.config = config.map(standardizeConfig);\n            this.navigated = false;\n            this.lastSuccessfulId = -1;\n        };\n        /** @docsNotRequired */\n        Router.prototype.ngOnDestroy = function () {\n            this.dispose();\n        };\n        /** Disposes of the router. */\n        Router.prototype.dispose = function () {\n            if (this.locationSubscription) {\n                this.locationSubscription.unsubscribe();\n                this.locationSubscription = undefined;\n            }\n        };\n        /**\n         * Appends URL segments to the current URL tree to create a new URL tree.\n         *\n         * @param commands An array of URL fragments with which to construct the new URL tree.\n         * If the path is static, can be the literal URL string. For a dynamic path, pass an array of path\n         * segments, followed by the parameters for each segment.\n         * The fragments are applied to the current URL tree or the one provided  in the `relativeTo`\n         * property of the options object, if supplied.\n         * @param navigationExtras Options that control the navigation strategy. This function\n         * only uses properties in `NavigationExtras` that would change the provided URL.\n         * @returns The new URL tree.\n         *\n         * @usageNotes\n         *\n         * ```\n         * // create /team/33/user/11\n         * router.createUrlTree(['/team', 33, 'user', 11]);\n         *\n         * // create /team/33;expand=true/user/11\n         * router.createUrlTree(['/team', 33, {expand: true}, 'user', 11]);\n         *\n         * // you can collapse static segments like this (this works only with the first passed-in value):\n         * router.createUrlTree(['/team/33/user', userId]);\n         *\n         * // If the first segment can contain slashes, and you do not want the router to split it,\n         * // you can do the following:\n         * router.createUrlTree([{segmentPath: '/one/two'}]);\n         *\n         * // create /team/33/(user/11//right:chat)\n         * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: 'chat'}}]);\n         *\n         * // remove the right secondary node\n         * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: null}}]);\n         *\n         * // assuming the current url is `/team/33/user/11` and the route points to `user/11`\n         *\n         * // navigate to /team/33/user/11/details\n         * router.createUrlTree(['details'], {relativeTo: route});\n         *\n         * // navigate to /team/33/user/22\n         * router.createUrlTree(['../22'], {relativeTo: route});\n         *\n         * // navigate to /team/44/user/22\n         * router.createUrlTree(['../../team/44/user/22'], {relativeTo: route});\n         * ```\n         */\n        Router.prototype.createUrlTree = function (commands, navigationExtras) {\n            if (navigationExtras === void 0) { navigationExtras = {}; }\n            var relativeTo = navigationExtras.relativeTo, queryParams = navigationExtras.queryParams, fragment = navigationExtras.fragment, preserveQueryParams = navigationExtras.preserveQueryParams, queryParamsHandling = navigationExtras.queryParamsHandling, preserveFragment = navigationExtras.preserveFragment;\n            if (i0.isDevMode() && preserveQueryParams && console && console.warn) {\n                console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n            }\n            var a = relativeTo || this.routerState.root;\n            var f = preserveFragment ? this.currentUrlTree.fragment : fragment;\n            var q = null;\n            if (queryParamsHandling) {\n                switch (queryParamsHandling) {\n                    case 'merge':\n                        q = Object.assign(Object.assign({}, this.currentUrlTree.queryParams), queryParams);\n                        break;\n                    case 'preserve':\n                        q = this.currentUrlTree.queryParams;\n                        break;\n                    default:\n                        q = queryParams || null;\n                }\n            }\n            else {\n                q = preserveQueryParams ? this.currentUrlTree.queryParams : queryParams || null;\n            }\n            if (q !== null) {\n                q = this.removeEmptyProps(q);\n            }\n            return createUrlTree(a, this.currentUrlTree, commands, q, f);\n        };\n        /**\n         * Navigates to a view using an absolute route path.\n         *\n         * @param url An absolute path for a defined route. The function does not apply any delta to the\n         *     current URL.\n         * @param extras An object containing properties that modify the navigation strategy.\n         * The function ignores any properties in the `NavigationExtras` that would change the\n         * provided URL.\n         *\n         * @returns A Promise that resolves to 'true' when navigation succeeds,\n         * to 'false' when navigation fails, or is rejected on error.\n         *\n         * @usageNotes\n         *\n         * The following calls request navigation to an absolute path.\n         *\n         * ```\n         * router.navigateByUrl(\"/team/33/user/11\");\n         *\n         * // Navigate without updating the URL\n         * router.navigateByUrl(\"/team/33/user/11\", { skipLocationChange: true });\n         * ```\n         *\n         * @see [Routing and Navigation guide](guide/router)\n         *\n         */\n        Router.prototype.navigateByUrl = function (url, extras) {\n            if (extras === void 0) { extras = { skipLocationChange: false }; }\n            if (i0.isDevMode() && this.isNgZoneEnabled && !i0.NgZone.isInAngularZone()) {\n                this.console.warn(\"Navigation triggered outside Angular zone, did you forget to call 'ngZone.run()'?\");\n            }\n            var urlTree = isUrlTree(url) ? url : this.parseUrl(url);\n            var mergedTree = this.urlHandlingStrategy.merge(urlTree, this.rawUrlTree);\n            return this.scheduleNavigation(mergedTree, 'imperative', null, extras);\n        };\n        /**\n         * Navigate based on the provided array of commands and a starting point.\n         * If no starting route is provided, the navigation is absolute.\n         *\n         * @param commands An array of URL fragments with which to construct the target URL.\n         * If the path is static, can be the literal URL string. For a dynamic path, pass an array of path\n         * segments, followed by the parameters for each segment.\n         * The fragments are applied to the current URL or the one provided  in the `relativeTo` property\n         * of the options object, if supplied.\n         * @param extras An options object that determines how the URL should be constructed or\n         *     interpreted.\n         *\n         * @returns A Promise that resolves to `true` when navigation succeeds, to `false` when navigation\n         *     fails,\n         * or is rejected on error.\n         *\n         * @usageNotes\n         *\n         * The following calls request navigation to a dynamic route path relative to the current URL.\n         *\n         * ```\n         * router.navigate(['team', 33, 'user', 11], {relativeTo: route});\n         *\n         * // Navigate without updating the URL, overriding the default behavior\n         * router.navigate(['team', 33, 'user', 11], {relativeTo: route, skipLocationChange: true});\n         * ```\n         *\n         * @see [Routing and Navigation guide](guide/router)\n         *\n         */\n        Router.prototype.navigate = function (commands, extras) {\n            if (extras === void 0) { extras = { skipLocationChange: false }; }\n            validateCommands(commands);\n            return this.navigateByUrl(this.createUrlTree(commands, extras), extras);\n        };\n        /** Serializes a `UrlTree` into a string */\n        Router.prototype.serializeUrl = function (url) {\n            return this.urlSerializer.serialize(url);\n        };\n        /** Parses a string into a `UrlTree` */\n        Router.prototype.parseUrl = function (url) {\n            var urlTree;\n            try {\n                urlTree = this.urlSerializer.parse(url);\n            }\n            catch (e) {\n                urlTree = this.malformedUriErrorHandler(e, this.urlSerializer, url);\n            }\n            return urlTree;\n        };\n        /** Returns whether the url is activated */\n        Router.prototype.isActive = function (url, exact) {\n            if (isUrlTree(url)) {\n                return containsTree(this.currentUrlTree, url, exact);\n            }\n            var urlTree = this.parseUrl(url);\n            return containsTree(this.currentUrlTree, urlTree, exact);\n        };\n        Router.prototype.removeEmptyProps = function (params) {\n            return Object.keys(params).reduce(function (result, key) {\n                var value = params[key];\n                if (value !== null && value !== undefined) {\n                    result[key] = value;\n                }\n                return result;\n            }, {});\n        };\n        Router.prototype.processNavigations = function () {\n            var _this = this;\n            this.navigations.subscribe(function (t) {\n                _this.navigated = true;\n                _this.lastSuccessfulId = t.id;\n                _this.events\n                    .next(new NavigationEnd(t.id, _this.serializeUrl(t.extractedUrl), _this.serializeUrl(_this.currentUrlTree)));\n                _this.lastSuccessfulNavigation = _this.currentNavigation;\n                _this.currentNavigation = null;\n                t.resolve(true);\n            }, function (e) {\n                _this.console.warn(\"Unhandled Navigation Error: \");\n            });\n        };\n        Router.prototype.scheduleNavigation = function (rawUrl, source, restoredState, extras, priorPromise) {\n            // * Imperative navigations (router.navigate) might trigger additional navigations to the same\n            //   URL via a popstate event and the locationChangeListener. We should skip these duplicate\n            //   navs. Duplicates may also be triggered by attempts to sync AngularJS and Angular router\n            //   states.\n            // * Imperative navigations can be cancelled by router guards, meaning the URL won't change. If\n            //   the user follows that with a navigation using the back/forward button or manual URL change,\n            //   the destination may be the same as the previous imperative attempt. We should not skip\n            //   these navigations because it's a separate case from the one above -- it's not a duplicate\n            //   navigation.\n            var lastNavigation = this.getTransition();\n            // We don't want to skip duplicate successful navs if they're imperative because\n            // onSameUrlNavigation could be 'reload' (so the duplicate is intended).\n            var browserNavPrecededByRouterNav = source !== 'imperative' && (lastNavigation === null || lastNavigation === void 0 ? void 0 : lastNavigation.source) === 'imperative';\n            var lastNavigationSucceeded = this.lastSuccessfulId === lastNavigation.id;\n            // If the last navigation succeeded or is in flight, we can use the rawUrl as the comparison.\n            // However, if it failed, we should compare to the final result (urlAfterRedirects).\n            var lastNavigationUrl = (lastNavigationSucceeded || this.currentNavigation) ?\n                lastNavigation.rawUrl :\n                lastNavigation.urlAfterRedirects;\n            var duplicateNav = lastNavigationUrl.toString() === rawUrl.toString();\n            if (browserNavPrecededByRouterNav && duplicateNav) {\n                return Promise.resolve(true); // return value is not used\n            }\n            var resolve;\n            var reject;\n            var promise;\n            if (priorPromise) {\n                resolve = priorPromise.resolve;\n                reject = priorPromise.reject;\n                promise = priorPromise.promise;\n            }\n            else {\n                promise = new Promise(function (res, rej) {\n                    resolve = res;\n                    reject = rej;\n                });\n            }\n            var id = ++this.navigationId;\n            this.setTransition({\n                id: id,\n                source: source,\n                restoredState: restoredState,\n                currentUrlTree: this.currentUrlTree,\n                currentRawUrl: this.rawUrlTree,\n                rawUrl: rawUrl,\n                extras: extras,\n                resolve: resolve,\n                reject: reject,\n                promise: promise,\n                currentSnapshot: this.routerState.snapshot,\n                currentRouterState: this.routerState\n            });\n            // Make sure that the error is propagated even though `processNavigations` catch\n            // handler does not rethrow\n            return promise.catch(function (e) {\n                return Promise.reject(e);\n            });\n        };\n        Router.prototype.setBrowserUrl = function (url, replaceUrl, id, state) {\n            var path = this.urlSerializer.serialize(url);\n            state = state || {};\n            if (this.location.isCurrentPathEqualTo(path) || replaceUrl) {\n                // TODO(jasonaden): Remove first `navigationId` and rely on `ng` namespace.\n                this.location.replaceState(path, '', Object.assign(Object.assign({}, state), { navigationId: id }));\n            }\n            else {\n                this.location.go(path, '', Object.assign(Object.assign({}, state), { navigationId: id }));\n            }\n        };\n        Router.prototype.resetStateAndUrl = function (storedState, storedUrl, rawUrl) {\n            this.routerState = storedState;\n            this.currentUrlTree = storedUrl;\n            this.rawUrlTree = this.urlHandlingStrategy.merge(this.currentUrlTree, rawUrl);\n            this.resetUrlToCurrentUrlTree();\n        };\n        Router.prototype.resetUrlToCurrentUrlTree = function () {\n            this.location.replaceState(this.urlSerializer.serialize(this.rawUrlTree), '', { navigationId: this.lastSuccessfulId });\n        };\n        return Router;\n    }());\n    Router.ɵfac = function Router_Factory(t) { i0.ɵɵinvalidFactory(); };\n    Router.ɵprov = i0.ɵɵdefineInjectable({ token: Router, factory: Router.ɵfac });\n    /*@__PURE__*/ (function () {\n        i0.ɵsetClassMetadata(Router, [{\n                type: i0.Injectable\n            }], function () { return [{ type: i0.Type }, { type: UrlSerializer }, { type: ChildrenOutletContexts }, { type: i3.Location }, { type: i0.Injector }, { type: i0.NgModuleFactoryLoader }, { type: i0.Compiler }, { type: undefined }]; }, null);\n    })();\n    function validateCommands(commands) {\n        for (var i = 0; i < commands.length; i++) {\n            var cmd = commands[i];\n            if (cmd == null) {\n                throw new Error(\"The requested path contains \" + cmd + \" segment at index \" + i);\n            }\n        }\n    }\n\n    /**\n     * @description\n     *\n     * When applied to an element in a template, makes that element a link\n     * that initiates navigation to a route. Navigation opens one or more routed components\n     * in one or more `<router-outlet>` locations on the page.\n     *\n     * Given a route configuration `[{ path: 'user/:name', component: UserCmp }]`,\n     * the following creates a static link to the route:\n     * `<a routerLink=\"/user/bob\">link to user component</a>`\n     *\n     * You can use dynamic values to generate the link.\n     * For a dynamic link, pass an array of path segments,\n     * followed by the params for each segment.\n     * For example, `['/team', teamId, 'user', userName, {details: true}]`\n     * generates a link to `/team/11/user/bob;details=true`.\n     *\n     * Multiple static segments can be merged into one term and combined with dynamic segements.\n     * For example, `['/team/11/user', userName, {details: true}]`\n     *\n     * The input that you provide to the link is treated as a delta to the current URL.\n     * For instance, suppose the current URL is `/user/(box//aux:team)`.\n     * The link `<a [routerLink]=\"['/user/jim']\">Jim</a>` creates the URL\n     * `/user/(jim//aux:team)`.\n     * See {@link Router#createUrlTree createUrlTree} for more information.\n     *\n     * @usageNotes\n     *\n     * You can use absolute or relative paths in a link, set query parameters,\n     * control how parameters are handled, and keep a history of navigation states.\n     *\n     * ### Relative link paths\n     *\n     * The first segment name can be prepended with `/`, `./`, or `../`.\n     * * If the first segment begins with `/`, the router looks up the route from the root of the\n     *   app.\n     * * If the first segment begins with `./`, or doesn't begin with a slash, the router\n     *   looks in the children of the current activated route.\n     * * If the first segment begins with `../`, the router goes up one level in the route tree.\n     *\n     * ### Setting and handling query params and fragments\n     *\n     * The following link adds a query parameter and a fragment to the generated URL:\n     *\n     * ```\n     * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" fragment=\"education\">\n     *   link to user component\n     * </a>\n     * ```\n     * By default, the directive constructs the new URL using the given query parameters.\n     * The example generates the link: `/user/bob?debug=true#education`.\n     *\n     * You can instruct the directive to handle query parameters differently\n     * by specifying the `queryParamsHandling` option in the link.\n     * Allowed values are:\n     *\n     *  - `'merge'`: Merge the given `queryParams` into the current query params.\n     *  - `'preserve'`: Preserve the current query params.\n     *\n     * For example:\n     *\n     * ```\n     * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" queryParamsHandling=\"merge\">\n     *   link to user component\n     * </a>\n     * ```\n     *\n     * See {@link NavigationExtras.queryParamsHandling NavigationExtras#queryParamsHandling}.\n     *\n     * ### Preserving navigation history\n     *\n     * You can provide a `state` value to be persisted to the browser's\n     * [`History.state` property](https://developer.mozilla.org/en-US/docs/Web/API/History#Properties).\n     * For example:\n     *\n     * ```\n     * <a [routerLink]=\"['/user/bob']\" [state]=\"{tracingId: 123}\">\n     *   link to user component\n     * </a>\n     * ```\n     *\n     * Use {@link Router.getCurrentNavigation() Router#getCurrentNavigation} to retrieve a saved\n     * navigation-state value. For example, to capture the `tracingId` during the `NavigationStart`\n     * event:\n     *\n     * ```\n     * // Get NavigationStart events\n     * router.events.pipe(filter(e => e instanceof NavigationStart)).subscribe(e => {\n     *   const navigation = router.getCurrentNavigation();\n     *   tracingService.trace({id: navigation.extras.state.tracingId});\n     * });\n     * ```\n     *\n     * @ngModule RouterModule\n     *\n     * @publicApi\n     */\n    var RouterLink = /** @class */ (function () {\n        function RouterLink(router, route, tabIndex, renderer, el) {\n            this.router = router;\n            this.route = route;\n            this.commands = [];\n            if (tabIndex == null) {\n                renderer.setAttribute(el.nativeElement, 'tabindex', '0');\n            }\n        }\n        Object.defineProperty(RouterLink.prototype, \"routerLink\", {\n            /**\n             * Commands to pass to {@link Router#createUrlTree Router#createUrlTree}.\n             *   - **array**: commands to pass to {@link Router#createUrlTree Router#createUrlTree}.\n             *   - **string**: shorthand for array of commands with just the string, i.e. `['/route']`\n             *   - **null|undefined**: shorthand for an empty array of commands, i.e. `[]`\n             * @see {@link Router#createUrlTree Router#createUrlTree}\n             */\n            set: function (commands) {\n                if (commands != null) {\n                    this.commands = Array.isArray(commands) ? commands : [commands];\n                }\n                else {\n                    this.commands = [];\n                }\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(RouterLink.prototype, \"preserveQueryParams\", {\n            /**\n             * @deprecated As of Angular v4.0 use `queryParamsHandling` instead.\n             */\n            set: function (value) {\n                if (i0.isDevMode() && console && console.warn) {\n                    console.warn('preserveQueryParams is deprecated!, use queryParamsHandling instead.');\n                }\n                this.preserve = value;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        RouterLink.prototype.onClick = function () {\n            var extras = {\n                skipLocationChange: attrBoolValue(this.skipLocationChange),\n                replaceUrl: attrBoolValue(this.replaceUrl),\n                state: this.state,\n            };\n            this.router.navigateByUrl(this.urlTree, extras);\n            return true;\n        };\n        Object.defineProperty(RouterLink.prototype, \"urlTree\", {\n            get: function () {\n                return this.router.createUrlTree(this.commands, {\n                    relativeTo: this.route,\n                    queryParams: this.queryParams,\n                    fragment: this.fragment,\n                    preserveQueryParams: attrBoolValue(this.preserve),\n                    queryParamsHandling: this.queryParamsHandling,\n                    preserveFragment: attrBoolValue(this.preserveFragment),\n                });\n            },\n            enumerable: false,\n            configurable: true\n        });\n        return RouterLink;\n    }());\n    RouterLink.ɵfac = function RouterLink_Factory(t) { return new (t || RouterLink)(i0.ɵɵdirectiveInject(Router), i0.ɵɵdirectiveInject(ActivatedRoute), i0.ɵɵinjectAttribute('tabindex'), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef)); };\n    RouterLink.ɵdir = i0.ɵɵdefineDirective({ type: RouterLink, selectors: [[\"\", \"routerLink\", \"\", 5, \"a\", 5, \"area\"]], hostBindings: function RouterLink_HostBindings(rf, ctx) {\n            if (rf & 1) {\n                i0.ɵɵlistener(\"click\", function RouterLink_click_HostBindingHandler() { return ctx.onClick(); });\n            }\n        }, inputs: { queryParams: \"queryParams\", fragment: \"fragment\", queryParamsHandling: \"queryParamsHandling\", preserveFragment: \"preserveFragment\", skipLocationChange: \"skipLocationChange\", replaceUrl: \"replaceUrl\", state: \"state\", routerLink: \"routerLink\", preserveQueryParams: \"preserveQueryParams\" } });\n    /*@__PURE__*/ (function () {\n        i0.ɵsetClassMetadata(RouterLink, [{\n                type: i0.Directive,\n                args: [{ selector: ':not(a):not(area)[routerLink]' }]\n            }], function () {\n            return [{ type: Router }, { type: ActivatedRoute }, { type: undefined, decorators: [{\n                            type: i0.Attribute,\n                            args: ['tabindex']\n                        }] }, { type: i0.Renderer2 }, { type: i0.ElementRef }];\n        }, { queryParams: [{\n                    type: i0.Input\n                }], fragment: [{\n                    type: i0.Input\n                }], queryParamsHandling: [{\n                    type: i0.Input\n                }], preserveFragment: [{\n                    type: i0.Input\n                }], skipLocationChange: [{\n                    type: i0.Input\n                }], replaceUrl: [{\n                    type: i0.Input\n                }], state: [{\n                    type: i0.Input\n                }], routerLink: [{\n                    type: i0.Input\n                }], preserveQueryParams: [{\n                    type: i0.Input\n                }], onClick: [{\n                    type: i0.HostListener,\n                    args: ['click']\n                }] });\n    })();\n    /**\n     * @description\n     *\n     * Lets you link to specific routes in your app.\n     *\n     * See `RouterLink` for more information.\n     *\n     * @ngModule RouterModule\n     *\n     * @publicApi\n     */\n    var RouterLinkWithHref = /** @class */ (function () {\n        function RouterLinkWithHref(router, route, locationStrategy) {\n            var _this = this;\n            this.router = router;\n            this.route = route;\n            this.locationStrategy = locationStrategy;\n            this.commands = [];\n            this.subscription = router.events.subscribe(function (s) {\n                if (s instanceof NavigationEnd) {\n                    _this.updateTargetUrlAndHref();\n                }\n            });\n        }\n        Object.defineProperty(RouterLinkWithHref.prototype, \"routerLink\", {\n            /**\n             * Commands to pass to {@link Router#createUrlTree Router#createUrlTree}.\n             *   - **array**: commands to pass to {@link Router#createUrlTree Router#createUrlTree}.\n             *   - **string**: shorthand for array of commands with just the string, i.e. `['/route']`\n             *   - **null|undefined**: shorthand for an empty array of commands, i.e. `[]`\n             * @see {@link Router#createUrlTree Router#createUrlTree}\n             */\n            set: function (commands) {\n                if (commands != null) {\n                    this.commands = Array.isArray(commands) ? commands : [commands];\n                }\n                else {\n                    this.commands = [];\n                }\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(RouterLinkWithHref.prototype, \"preserveQueryParams\", {\n            /**\n             * @deprecated As of Angular v4.0 use `queryParamsHandling` instead.\n             */\n            set: function (value) {\n                if (i0.isDevMode() && console && console.warn) {\n                    console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n                }\n                this.preserve = value;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        RouterLinkWithHref.prototype.ngOnChanges = function (changes) {\n            this.updateTargetUrlAndHref();\n        };\n        RouterLinkWithHref.prototype.ngOnDestroy = function () {\n            this.subscription.unsubscribe();\n        };\n        RouterLinkWithHref.prototype.onClick = function (button, ctrlKey, metaKey, shiftKey) {\n            if (button !== 0 || ctrlKey || metaKey || shiftKey) {\n                return true;\n            }\n            if (typeof this.target === 'string' && this.target != '_self') {\n                return true;\n            }\n            var extras = {\n                skipLocationChange: attrBoolValue(this.skipLocationChange),\n                replaceUrl: attrBoolValue(this.replaceUrl),\n                state: this.state\n            };\n            this.router.navigateByUrl(this.urlTree, extras);\n            return false;\n        };\n        RouterLinkWithHref.prototype.updateTargetUrlAndHref = function () {\n            this.href = this.locationStrategy.prepareExternalUrl(this.router.serializeUrl(this.urlTree));\n        };\n        Object.defineProperty(RouterLinkWithHref.prototype, \"urlTree\", {\n            get: function () {\n                return this.router.createUrlTree(this.commands, {\n                    relativeTo: this.route,\n                    queryParams: this.queryParams,\n                    fragment: this.fragment,\n                    preserveQueryParams: attrBoolValue(this.preserve),\n                    queryParamsHandling: this.queryParamsHandling,\n                    preserveFragment: attrBoolValue(this.preserveFragment),\n                });\n            },\n            enumerable: false,\n            configurable: true\n        });\n        return RouterLinkWithHref;\n    }());\n    RouterLinkWithHref.ɵfac = function RouterLinkWithHref_Factory(t) { return new (t || RouterLinkWithHref)(i0.ɵɵdirectiveInject(Router), i0.ɵɵdirectiveInject(ActivatedRoute), i0.ɵɵdirectiveInject(i3.LocationStrategy)); };\n    RouterLinkWithHref.ɵdir = i0.ɵɵdefineDirective({ type: RouterLinkWithHref, selectors: [[\"a\", \"routerLink\", \"\"], [\"area\", \"routerLink\", \"\"]], hostVars: 2, hostBindings: function RouterLinkWithHref_HostBindings(rf, ctx) {\n            if (rf & 1) {\n                i0.ɵɵlistener(\"click\", function RouterLinkWithHref_click_HostBindingHandler($event) { return ctx.onClick($event.button, $event.ctrlKey, $event.metaKey, $event.shiftKey); });\n            }\n            if (rf & 2) {\n                i0.ɵɵhostProperty(\"href\", ctx.href, i0.ɵɵsanitizeUrl);\n                i0.ɵɵattribute(\"target\", ctx.target);\n            }\n        }, inputs: { target: \"target\", queryParams: \"queryParams\", fragment: \"fragment\", queryParamsHandling: \"queryParamsHandling\", preserveFragment: \"preserveFragment\", skipLocationChange: \"skipLocationChange\", replaceUrl: \"replaceUrl\", state: \"state\", routerLink: \"routerLink\", preserveQueryParams: \"preserveQueryParams\" }, features: [i0.ɵɵNgOnChangesFeature] });\n    /*@__PURE__*/ (function () {\n        i0.ɵsetClassMetadata(RouterLinkWithHref, [{\n                type: i0.Directive,\n                args: [{ selector: 'a[routerLink],area[routerLink]' }]\n            }], function () { return [{ type: Router }, { type: ActivatedRoute }, { type: i3.LocationStrategy }]; }, { target: [{\n                    type: i0.HostBinding,\n                    args: ['attr.target']\n                }, {\n                    type: i0.Input\n                }], queryParams: [{\n                    type: i0.Input\n                }], fragment: [{\n                    type: i0.Input\n                }], queryParamsHandling: [{\n                    type: i0.Input\n                }], preserveFragment: [{\n                    type: i0.Input\n                }], skipLocationChange: [{\n                    type: i0.Input\n                }], replaceUrl: [{\n                    type: i0.Input\n                }], state: [{\n                    type: i0.Input\n                }], href: [{\n                    type: i0.HostBinding\n                }], routerLink: [{\n                    type: i0.Input\n                }], preserveQueryParams: [{\n                    type: i0.Input\n                }], onClick: [{\n                    type: i0.HostListener,\n                    args: ['click', ['$event.button', '$event.ctrlKey', '$event.metaKey', '$event.shiftKey']]\n                }] });\n    })();\n    function attrBoolValue(s) {\n        return s === '' || !!s;\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * @description\n     *\n     * Tracks whether the linked route of an element is currently active, and allows you\n     * to specify one or more CSS classes to add to the element when the linked route\n     * is active.\n     *\n     * Use this directive to create a visual distinction for elements associated with an active route.\n     * For example, the following code highlights the word \"Bob\" when the the router\n     * activates the associated route:\n     *\n     * ```\n     * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\">Bob</a>\n     * ```\n     *\n     * Whenever the URL is either '/user' or '/user/bob', the \"active-link\" class is\n     * added to the anchor tag. If the URL changes, the class is removed.\n     *\n     * You can set more than one class using a space-separated string or an array.\n     * For example:\n     *\n     * ```\n     * <a routerLink=\"/user/bob\" routerLinkActive=\"class1 class2\">Bob</a>\n     * <a routerLink=\"/user/bob\" [routerLinkActive]=\"['class1', 'class2']\">Bob</a>\n     * ```\n     *\n     * To add the classes only when the URL matches the link exactly, add the option `exact: true`:\n     *\n     * ```\n     * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact:\n     * true}\">Bob</a>\n     * ```\n     *\n     * To directly check the `isActive` status of the link, assign the `RouterLinkActive`\n     * instance to a template variable.\n     * For example, the following checks the status without assigning any CSS classes:\n     *\n     * ```\n     * <a routerLink=\"/user/bob\" routerLinkActive #rla=\"routerLinkActive\">\n     *   Bob {{ rla.isActive ? '(already open)' : ''}}\n     * </a>\n     * ```\n     *\n     * You can apply the `RouterLinkActive` directive to an ancestor of linked elements.\n     * For example, the following sets the active-link class on the `<div>`  parent tag\n     * when the URL is either '/user/jim' or '/user/bob'.\n     *\n     * ```\n     * <div routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact: true}\">\n     *   <a routerLink=\"/user/jim\">Jim</a>\n     *   <a routerLink=\"/user/bob\">Bob</a>\n     * </div>\n     * ```\n     *\n     * @ngModule RouterModule\n     *\n     * @publicApi\n     */\n    var RouterLinkActive = /** @class */ (function () {\n        function RouterLinkActive(router, element, renderer, cdr, link, linkWithHref) {\n            var _this = this;\n            this.router = router;\n            this.element = element;\n            this.renderer = renderer;\n            this.cdr = cdr;\n            this.link = link;\n            this.linkWithHref = linkWithHref;\n            this.classes = [];\n            this.isActive = false;\n            this.routerLinkActiveOptions = { exact: false };\n            this.subscription = router.events.subscribe(function (s) {\n                if (s instanceof NavigationEnd) {\n                    _this.update();\n                }\n            });\n        }\n        RouterLinkActive.prototype.ngAfterContentInit = function () {\n            var _this = this;\n            this.links.changes.subscribe(function (_) { return _this.update(); });\n            this.linksWithHrefs.changes.subscribe(function (_) { return _this.update(); });\n            this.update();\n        };\n        Object.defineProperty(RouterLinkActive.prototype, \"routerLinkActive\", {\n            set: function (data) {\n                var classes = Array.isArray(data) ? data : data.split(' ');\n                this.classes = classes.filter(function (c) { return !!c; });\n            },\n            enumerable: false,\n            configurable: true\n        });\n        RouterLinkActive.prototype.ngOnChanges = function (changes) {\n            this.update();\n        };\n        RouterLinkActive.prototype.ngOnDestroy = function () {\n            this.subscription.unsubscribe();\n        };\n        RouterLinkActive.prototype.update = function () {\n            var _this = this;\n            if (!this.links || !this.linksWithHrefs || !this.router.navigated)\n                return;\n            Promise.resolve().then(function () {\n                var hasActiveLinks = _this.hasActiveLinks();\n                if (_this.isActive !== hasActiveLinks) {\n                    _this.isActive = hasActiveLinks;\n                    _this.cdr.markForCheck();\n                    _this.classes.forEach(function (c) {\n                        if (hasActiveLinks) {\n                            _this.renderer.addClass(_this.element.nativeElement, c);\n                        }\n                        else {\n                            _this.renderer.removeClass(_this.element.nativeElement, c);\n                        }\n                    });\n                }\n            });\n        };\n        RouterLinkActive.prototype.isLinkActive = function (router) {\n            var _this = this;\n            return function (link) { return router.isActive(link.urlTree, _this.routerLinkActiveOptions.exact); };\n        };\n        RouterLinkActive.prototype.hasActiveLinks = function () {\n            var isActiveCheckFn = this.isLinkActive(this.router);\n            return this.link && isActiveCheckFn(this.link) ||\n                this.linkWithHref && isActiveCheckFn(this.linkWithHref) ||\n                this.links.some(isActiveCheckFn) || this.linksWithHrefs.some(isActiveCheckFn);\n        };\n        return RouterLinkActive;\n    }());\n    RouterLinkActive.ɵfac = function RouterLinkActive_Factory(t) { return new (t || RouterLinkActive)(i0.ɵɵdirectiveInject(Router), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(RouterLink, 8), i0.ɵɵdirectiveInject(RouterLinkWithHref, 8)); };\n    RouterLinkActive.ɵdir = i0.ɵɵdefineDirective({ type: RouterLinkActive, selectors: [[\"\", \"routerLinkActive\", \"\"]], contentQueries: function RouterLinkActive_ContentQueries(rf, ctx, dirIndex) {\n            if (rf & 1) {\n                i0.ɵɵcontentQuery(dirIndex, RouterLink, true);\n                i0.ɵɵcontentQuery(dirIndex, RouterLinkWithHref, true);\n            }\n            if (rf & 2) {\n                var _t;\n                i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.links = _t);\n                i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.linksWithHrefs = _t);\n            }\n        }, inputs: { routerLinkActiveOptions: \"routerLinkActiveOptions\", routerLinkActive: \"routerLinkActive\" }, exportAs: [\"routerLinkActive\"], features: [i0.ɵɵNgOnChangesFeature] });\n    /*@__PURE__*/ (function () {\n        i0.ɵsetClassMetadata(RouterLinkActive, [{\n                type: i0.Directive,\n                args: [{\n                        selector: '[routerLinkActive]',\n                        exportAs: 'routerLinkActive',\n                    }]\n            }], function () {\n            return [{ type: Router }, { type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i0.ChangeDetectorRef }, { type: RouterLink, decorators: [{\n                            type: i0.Optional\n                        }] }, { type: RouterLinkWithHref, decorators: [{\n                            type: i0.Optional\n                        }] }];\n        }, { links: [{\n                    type: i0.ContentChildren,\n                    args: [RouterLink, { descendants: true }]\n                }], linksWithHrefs: [{\n                    type: i0.ContentChildren,\n                    args: [RouterLinkWithHref, { descendants: true }]\n                }], routerLinkActiveOptions: [{\n                    type: i0.Input\n                }], routerLinkActive: [{\n                    type: i0.Input\n                }] });\n    })();\n\n    /**\n     * @description\n     *\n     * Provides a preloading strategy.\n     *\n     * @publicApi\n     */\n    var PreloadingStrategy = /** @class */ (function () {\n        function PreloadingStrategy() {\n        }\n        return PreloadingStrategy;\n    }());\n    /**\n     * @description\n     *\n     * Provides a preloading strategy that preloads all modules as quickly as possible.\n     *\n     * ```\n     * RouteModule.forRoot(ROUTES, {preloadingStrategy: PreloadAllModules})\n     * ```\n     *\n     * @publicApi\n     */\n    var PreloadAllModules = /** @class */ (function () {\n        function PreloadAllModules() {\n        }\n        PreloadAllModules.prototype.preload = function (route, fn) {\n            return fn().pipe(operators.catchError(function () { return rxjs.of(null); }));\n        };\n        return PreloadAllModules;\n    }());\n    /**\n     * @description\n     *\n     * Provides a preloading strategy that does not preload any modules.\n     *\n     * This strategy is enabled by default.\n     *\n     * @publicApi\n     */\n    var NoPreloading = /** @class */ (function () {\n        function NoPreloading() {\n        }\n        NoPreloading.prototype.preload = function (route, fn) {\n            return rxjs.of(null);\n        };\n        return NoPreloading;\n    }());\n    /**\n     * The preloader optimistically loads all router configurations to\n     * make navigations into lazily-loaded sections of the application faster.\n     *\n     * The preloader runs in the background. When the router bootstraps, the preloader\n     * starts listening to all navigation events. After every such event, the preloader\n     * will check if any configurations can be loaded lazily.\n     *\n     * If a route is protected by `canLoad` guards, the preloaded will not load it.\n     *\n     * @publicApi\n     */\n    var RouterPreloader = /** @class */ (function () {\n        function RouterPreloader(router, moduleLoader, compiler, injector, preloadingStrategy) {\n            this.router = router;\n            this.injector = injector;\n            this.preloadingStrategy = preloadingStrategy;\n            var onStartLoad = function (r) { return router.triggerEvent(new RouteConfigLoadStart(r)); };\n            var onEndLoad = function (r) { return router.triggerEvent(new RouteConfigLoadEnd(r)); };\n            this.loader = new RouterConfigLoader(moduleLoader, compiler, onStartLoad, onEndLoad);\n        }\n        RouterPreloader.prototype.setUpPreloading = function () {\n            var _this = this;\n            this.subscription =\n                this.router.events\n                    .pipe(operators.filter(function (e) { return e instanceof NavigationEnd; }), operators.concatMap(function () { return _this.preload(); }))\n                    .subscribe(function () { });\n        };\n        RouterPreloader.prototype.preload = function () {\n            var ngModule = this.injector.get(i0.NgModuleRef);\n            return this.processRoutes(ngModule, this.router.config);\n        };\n        // TODO(jasonaden): This class relies on code external to the class to call setUpPreloading. If\n        // this hasn't been done, ngOnDestroy will fail as this.subscription will be undefined. This\n        // should be refactored.\n        RouterPreloader.prototype.ngOnDestroy = function () {\n            this.subscription.unsubscribe();\n        };\n        RouterPreloader.prototype.processRoutes = function (ngModule, routes) {\n            var e_1, _a;\n            var res = [];\n            try {\n                for (var routes_1 = __values(routes), routes_1_1 = routes_1.next(); !routes_1_1.done; routes_1_1 = routes_1.next()) {\n                    var route = routes_1_1.value;\n                    // we already have the config loaded, just recurse\n                    if (route.loadChildren && !route.canLoad && route._loadedConfig) {\n                        var childConfig = route._loadedConfig;\n                        res.push(this.processRoutes(childConfig.module, childConfig.routes));\n                        // no config loaded, fetch the config\n                    }\n                    else if (route.loadChildren && !route.canLoad) {\n                        res.push(this.preloadConfig(ngModule, route));\n                        // recurse into children\n                    }\n                    else if (route.children) {\n                        res.push(this.processRoutes(ngModule, route.children));\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (routes_1_1 && !routes_1_1.done && (_a = routes_1.return)) _a.call(routes_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            return rxjs.from(res).pipe(operators.mergeAll(), operators.map(function (_) { return void 0; }));\n        };\n        RouterPreloader.prototype.preloadConfig = function (ngModule, route) {\n            var _this = this;\n            return this.preloadingStrategy.preload(route, function () {\n                var loaded$ = _this.loader.load(ngModule.injector, route);\n                return loaded$.pipe(operators.mergeMap(function (config) {\n                    route._loadedConfig = config;\n                    return _this.processRoutes(config.module, config.routes);\n                }));\n            });\n        };\n        return RouterPreloader;\n    }());\n    RouterPreloader.ɵfac = function RouterPreloader_Factory(t) { return new (t || RouterPreloader)(i0.ɵɵinject(Router), i0.ɵɵinject(i0.NgModuleFactoryLoader), i0.ɵɵinject(i0.Compiler), i0.ɵɵinject(i0.Injector), i0.ɵɵinject(PreloadingStrategy)); };\n    RouterPreloader.ɵprov = i0.ɵɵdefineInjectable({ token: RouterPreloader, factory: RouterPreloader.ɵfac });\n    /*@__PURE__*/ (function () {\n        i0.ɵsetClassMetadata(RouterPreloader, [{\n                type: i0.Injectable\n            }], function () { return [{ type: Router }, { type: i0.NgModuleFactoryLoader }, { type: i0.Compiler }, { type: i0.Injector }, { type: PreloadingStrategy }]; }, null);\n    })();\n\n    var RouterScroller = /** @class */ (function () {\n        function RouterScroller(router, \n        /** @docsNotRequired */ viewportScroller, options) {\n            if (options === void 0) { options = {}; }\n            this.router = router;\n            this.viewportScroller = viewportScroller;\n            this.options = options;\n            this.lastId = 0;\n            this.lastSource = 'imperative';\n            this.restoredId = 0;\n            this.store = {};\n            // Default both options to 'disabled'\n            options.scrollPositionRestoration = options.scrollPositionRestoration || 'disabled';\n            options.anchorScrolling = options.anchorScrolling || 'disabled';\n        }\n        RouterScroller.prototype.init = function () {\n            // we want to disable the automatic scrolling because having two places\n            // responsible for scrolling results race conditions, especially given\n            // that browser don't implement this behavior consistently\n            if (this.options.scrollPositionRestoration !== 'disabled') {\n                this.viewportScroller.setHistoryScrollRestoration('manual');\n            }\n            this.routerEventsSubscription = this.createScrollEvents();\n            this.scrollEventsSubscription = this.consumeScrollEvents();\n        };\n        RouterScroller.prototype.createScrollEvents = function () {\n            var _this = this;\n            return this.router.events.subscribe(function (e) {\n                if (e instanceof NavigationStart) {\n                    // store the scroll position of the current stable navigations.\n                    _this.store[_this.lastId] = _this.viewportScroller.getScrollPosition();\n                    _this.lastSource = e.navigationTrigger;\n                    _this.restoredId = e.restoredState ? e.restoredState.navigationId : 0;\n                }\n                else if (e instanceof NavigationEnd) {\n                    _this.lastId = e.id;\n                    _this.scheduleScrollEvent(e, _this.router.parseUrl(e.urlAfterRedirects).fragment);\n                }\n            });\n        };\n        RouterScroller.prototype.consumeScrollEvents = function () {\n            var _this = this;\n            return this.router.events.subscribe(function (e) {\n                if (!(e instanceof Scroll))\n                    return;\n                // a popstate event. The pop state event will always ignore anchor scrolling.\n                if (e.position) {\n                    if (_this.options.scrollPositionRestoration === 'top') {\n                        _this.viewportScroller.scrollToPosition([0, 0]);\n                    }\n                    else if (_this.options.scrollPositionRestoration === 'enabled') {\n                        _this.viewportScroller.scrollToPosition(e.position);\n                    }\n                    // imperative navigation \"forward\"\n                }\n                else {\n                    if (e.anchor && _this.options.anchorScrolling === 'enabled') {\n                        _this.viewportScroller.scrollToAnchor(e.anchor);\n                    }\n                    else if (_this.options.scrollPositionRestoration !== 'disabled') {\n                        _this.viewportScroller.scrollToPosition([0, 0]);\n                    }\n                }\n            });\n        };\n        RouterScroller.prototype.scheduleScrollEvent = function (routerEvent, anchor) {\n            this.router.triggerEvent(new Scroll(routerEvent, this.lastSource === 'popstate' ? this.store[this.restoredId] : null, anchor));\n        };\n        RouterScroller.prototype.ngOnDestroy = function () {\n            if (this.routerEventsSubscription) {\n                this.routerEventsSubscription.unsubscribe();\n            }\n            if (this.scrollEventsSubscription) {\n                this.scrollEventsSubscription.unsubscribe();\n            }\n        };\n        return RouterScroller;\n    }());\n    RouterScroller.ɵfac = function RouterScroller_Factory(t) { i0.ɵɵinvalidFactory(); };\n    RouterScroller.ɵprov = i0.ɵɵdefineInjectable({ token: RouterScroller, factory: RouterScroller.ɵfac });\n    /*@__PURE__*/ (function () {\n        i0.ɵsetClassMetadata(RouterScroller, [{\n                type: i0.Injectable\n            }], function () { return [{ type: Router }, { type: i3.ViewportScroller }, { type: undefined }]; }, null);\n    })();\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The directives defined in the `RouterModule`.\n     */\n    var ROUTER_DIRECTIVES = [RouterOutlet, RouterLink, RouterLinkWithHref, RouterLinkActive, ɵEmptyOutletComponent];\n    /**\n     * A [DI token](guide/glossary/#di-token) for the router service.\n     *\n     * @publicApi\n     */\n    var ROUTER_CONFIGURATION = new i0.InjectionToken('ROUTER_CONFIGURATION');\n    /**\n     * @docsNotRequired\n     */\n    var ROUTER_FORROOT_GUARD = new i0.InjectionToken('ROUTER_FORROOT_GUARD');\n    var ROUTER_PROVIDERS = [\n        i3.Location,\n        { provide: UrlSerializer, useClass: DefaultUrlSerializer },\n        {\n            provide: Router,\n            useFactory: setupRouter,\n            deps: [\n                UrlSerializer, ChildrenOutletContexts, i3.Location, i0.Injector, i0.NgModuleFactoryLoader, i0.Compiler,\n                ROUTES, ROUTER_CONFIGURATION, [UrlHandlingStrategy, new i0.Optional()],\n                [RouteReuseStrategy, new i0.Optional()]\n            ]\n        },\n        ChildrenOutletContexts,\n        { provide: ActivatedRoute, useFactory: rootRoute, deps: [Router] },\n        { provide: i0.NgModuleFactoryLoader, useClass: i0.SystemJsNgModuleLoader },\n        RouterPreloader,\n        NoPreloading,\n        PreloadAllModules,\n        { provide: ROUTER_CONFIGURATION, useValue: { enableTracing: false } },\n    ];\n    function routerNgProbeToken() {\n        return new i0.NgProbeToken('Router', Router);\n    }\n    /**\n     * @description\n     *\n     * Adds directives and providers for in-app navigation among views defined in an application.\n     * Use the Angular `Router` service to declaratively specify application states and manage state\n     * transitions.\n     *\n     * You can import this NgModule multiple times, once for each lazy-loaded bundle.\n     * However, only one `Router` service can be active.\n     * To ensure this, there are two ways to register routes when importing this module:\n     *\n     * * The `forRoot()` method creates an `NgModule` that contains all the directives, the given\n     * routes, and the `Router` service itself.\n     * * The `forChild()` method creates an `NgModule` that contains all the directives and the given\n     * routes, but does not include the `Router` service.\n     *\n     * @see [Routing and Navigation guide](guide/router) for an\n     * overview of how the `Router` service should be used.\n     *\n     * @publicApi\n     */\n    var RouterModule = /** @class */ (function () {\n        // Note: We are injecting the Router so it gets created eagerly...\n        function RouterModule(guard, router) {\n        }\n        /**\n         * Creates and configures a module with all the router providers and directives.\n         * Optionally sets up an application listener to perform an initial navigation.\n         *\n         * When registering the NgModule at the root, import as follows:\n         *\n         * ```\n         * @NgModule({\n         *   imports: [RouterModule.forRoot(ROUTES)]\n         * })\n         * class MyNgModule {}\n         * ```\n         *\n         * @param routes An array of `Route` objects that define the navigation paths for the application.\n         * @param config An `ExtraOptions` configuration object that controls how navigation is performed.\n         * @return The new `NgModule`.\n         *\n         */\n        RouterModule.forRoot = function (routes, config) {\n            return {\n                ngModule: RouterModule,\n                providers: [\n                    ROUTER_PROVIDERS,\n                    provideRoutes(routes),\n                    {\n                        provide: ROUTER_FORROOT_GUARD,\n                        useFactory: provideForRootGuard,\n                        deps: [[Router, new i0.Optional(), new i0.SkipSelf()]]\n                    },\n                    { provide: ROUTER_CONFIGURATION, useValue: config ? config : {} },\n                    {\n                        provide: i3.LocationStrategy,\n                        useFactory: provideLocationStrategy,\n                        deps: [i3.PlatformLocation, [new i0.Inject(i3.APP_BASE_HREF), new i0.Optional()], ROUTER_CONFIGURATION]\n                    },\n                    {\n                        provide: RouterScroller,\n                        useFactory: createRouterScroller,\n                        deps: [Router, i3.ViewportScroller, ROUTER_CONFIGURATION]\n                    },\n                    {\n                        provide: PreloadingStrategy,\n                        useExisting: config && config.preloadingStrategy ? config.preloadingStrategy :\n                            NoPreloading\n                    },\n                    { provide: i0.NgProbeToken, multi: true, useFactory: routerNgProbeToken },\n                    provideRouterInitializer(),\n                ],\n            };\n        };\n        /**\n         * Creates a module with all the router directives and a provider registering routes,\n         * without creating a new Router service.\n         * When registering for submodules and lazy-loaded submodules, create the NgModule as follows:\n         *\n         * ```\n         * @NgModule({\n         *   imports: [RouterModule.forChild(ROUTES)]\n         * })\n         * class MyNgModule {}\n         * ```\n         *\n         * @param routes An array of `Route` objects that define the navigation paths for the submodule.\n         * @return The new NgModule.\n         *\n         */\n        RouterModule.forChild = function (routes) {\n            return { ngModule: RouterModule, providers: [provideRoutes(routes)] };\n        };\n        return RouterModule;\n    }());\n    RouterModule.ɵmod = i0.ɵɵdefineNgModule({ type: RouterModule });\n    RouterModule.ɵinj = i0.ɵɵdefineInjector({ factory: function RouterModule_Factory(t) { return new (t || RouterModule)(i0.ɵɵinject(ROUTER_FORROOT_GUARD, 8), i0.ɵɵinject(Router, 8)); } });\n    (function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(RouterModule, { declarations: [RouterOutlet, RouterLink, RouterLinkWithHref, RouterLinkActive, ɵEmptyOutletComponent], exports: [RouterOutlet, RouterLink, RouterLinkWithHref, RouterLinkActive, ɵEmptyOutletComponent] }); })();\n    /*@__PURE__*/ (function () {\n        i0.ɵsetClassMetadata(RouterModule, [{\n                type: i0.NgModule,\n                args: [{\n                        declarations: ROUTER_DIRECTIVES,\n                        exports: ROUTER_DIRECTIVES,\n                        entryComponents: [ɵEmptyOutletComponent]\n                    }]\n            }], function () {\n            return [{ type: undefined, decorators: [{\n                            type: i0.Optional\n                        }, {\n                            type: i0.Inject,\n                            args: [ROUTER_FORROOT_GUARD]\n                        }] }, { type: Router, decorators: [{\n                            type: i0.Optional\n                        }] }];\n        }, null);\n    })();\n    function createRouterScroller(router, viewportScroller, config) {\n        if (config.scrollOffset) {\n            viewportScroller.setOffset(config.scrollOffset);\n        }\n        return new RouterScroller(router, viewportScroller, config);\n    }\n    function provideLocationStrategy(platformLocationStrategy, baseHref, options) {\n        if (options === void 0) { options = {}; }\n        return options.useHash ? new i3.HashLocationStrategy(platformLocationStrategy, baseHref) :\n            new i3.PathLocationStrategy(platformLocationStrategy, baseHref);\n    }\n    function provideForRootGuard(router) {\n        if (router) {\n            throw new Error(\"RouterModule.forRoot() called twice. Lazy loaded modules should use RouterModule.forChild() instead.\");\n        }\n        return 'guarded';\n    }\n    /**\n     * Registers a [DI provider](guide/glossary#provider) for a set of routes.\n     * @param routes The route configuration to provide.\n     *\n     * @usageNotes\n     *\n     * ```\n     * @NgModule({\n     *   imports: [RouterModule.forChild(ROUTES)],\n     *   providers: [provideRoutes(EXTRA_ROUTES)]\n     * })\n     * class MyNgModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    function provideRoutes(routes) {\n        return [\n            { provide: i0.ANALYZE_FOR_ENTRY_COMPONENTS, multi: true, useValue: routes },\n            { provide: ROUTES, multi: true, useValue: routes },\n        ];\n    }\n    function setupRouter(urlSerializer, contexts, location, injector, loader, compiler, config, opts, urlHandlingStrategy, routeReuseStrategy) {\n        if (opts === void 0) { opts = {}; }\n        var router = new Router(null, urlSerializer, contexts, location, injector, loader, compiler, flatten(config));\n        if (urlHandlingStrategy) {\n            router.urlHandlingStrategy = urlHandlingStrategy;\n        }\n        if (routeReuseStrategy) {\n            router.routeReuseStrategy = routeReuseStrategy;\n        }\n        if (opts.errorHandler) {\n            router.errorHandler = opts.errorHandler;\n        }\n        if (opts.malformedUriErrorHandler) {\n            router.malformedUriErrorHandler = opts.malformedUriErrorHandler;\n        }\n        if (opts.enableTracing) {\n            var dom_1 = i3.ɵgetDOM();\n            router.events.subscribe(function (e) {\n                dom_1.logGroup(\"Router Event: \" + e.constructor.name);\n                dom_1.log(e.toString());\n                dom_1.log(e);\n                dom_1.logGroupEnd();\n            });\n        }\n        if (opts.onSameUrlNavigation) {\n            router.onSameUrlNavigation = opts.onSameUrlNavigation;\n        }\n        if (opts.paramsInheritanceStrategy) {\n            router.paramsInheritanceStrategy = opts.paramsInheritanceStrategy;\n        }\n        if (opts.urlUpdateStrategy) {\n            router.urlUpdateStrategy = opts.urlUpdateStrategy;\n        }\n        if (opts.relativeLinkResolution) {\n            router.relativeLinkResolution = opts.relativeLinkResolution;\n        }\n        return router;\n    }\n    function rootRoute(router) {\n        return router.routerState.root;\n    }\n    /**\n     * Router initialization requires two steps:\n     *\n     * First, we start the navigation in a `APP_INITIALIZER` to block the bootstrap if\n     * a resolver or a guard executes asynchronously.\n     *\n     * Next, we actually run activation in a `BOOTSTRAP_LISTENER`, using the\n     * `afterPreactivation` hook provided by the router.\n     * The router navigation starts, reaches the point when preactivation is done, and then\n     * pauses. It waits for the hook to be resolved. We then resolve it only in a bootstrap listener.\n     */\n    var RouterInitializer = /** @class */ (function () {\n        function RouterInitializer(injector) {\n            this.injector = injector;\n            this.initNavigation = false;\n            this.resultOfPreactivationDone = new rxjs.Subject();\n        }\n        RouterInitializer.prototype.appInitializer = function () {\n            var _this = this;\n            var p = this.injector.get(i3.LOCATION_INITIALIZED, Promise.resolve(null));\n            return p.then(function () {\n                var resolve = null;\n                var res = new Promise(function (r) { return resolve = r; });\n                var router = _this.injector.get(Router);\n                var opts = _this.injector.get(ROUTER_CONFIGURATION);\n                if (_this.isLegacyDisabled(opts) || _this.isLegacyEnabled(opts)) {\n                    resolve(true);\n                }\n                else if (opts.initialNavigation === 'disabled') {\n                    router.setUpLocationChangeListener();\n                    resolve(true);\n                }\n                else if (opts.initialNavigation === 'enabled') {\n                    router.hooks.afterPreactivation = function () {\n                        // only the initial navigation should be delayed\n                        if (!_this.initNavigation) {\n                            _this.initNavigation = true;\n                            resolve(true);\n                            return _this.resultOfPreactivationDone;\n                            // subsequent navigations should not be delayed\n                        }\n                        else {\n                            return rxjs.of(null);\n                        }\n                    };\n                    router.initialNavigation();\n                }\n                else {\n                    throw new Error(\"Invalid initialNavigation options: '\" + opts.initialNavigation + \"'\");\n                }\n                return res;\n            });\n        };\n        RouterInitializer.prototype.bootstrapListener = function (bootstrappedComponentRef) {\n            var opts = this.injector.get(ROUTER_CONFIGURATION);\n            var preloader = this.injector.get(RouterPreloader);\n            var routerScroller = this.injector.get(RouterScroller);\n            var router = this.injector.get(Router);\n            var ref = this.injector.get(i0.ApplicationRef);\n            if (bootstrappedComponentRef !== ref.components[0]) {\n                return;\n            }\n            if (this.isLegacyEnabled(opts)) {\n                router.initialNavigation();\n            }\n            else if (this.isLegacyDisabled(opts)) {\n                router.setUpLocationChangeListener();\n            }\n            preloader.setUpPreloading();\n            routerScroller.init();\n            router.resetRootComponentType(ref.componentTypes[0]);\n            this.resultOfPreactivationDone.next(null);\n            this.resultOfPreactivationDone.complete();\n        };\n        RouterInitializer.prototype.isLegacyEnabled = function (opts) {\n            return opts.initialNavigation === 'legacy_enabled' || opts.initialNavigation === true ||\n                opts.initialNavigation === undefined;\n        };\n        RouterInitializer.prototype.isLegacyDisabled = function (opts) {\n            return opts.initialNavigation === 'legacy_disabled' || opts.initialNavigation === false;\n        };\n        return RouterInitializer;\n    }());\n    RouterInitializer.ɵfac = function RouterInitializer_Factory(t) { return new (t || RouterInitializer)(i0.ɵɵinject(i0.Injector)); };\n    RouterInitializer.ɵprov = i0.ɵɵdefineInjectable({ token: RouterInitializer, factory: RouterInitializer.ɵfac });\n    /*@__PURE__*/ (function () {\n        i0.ɵsetClassMetadata(RouterInitializer, [{\n                type: i0.Injectable\n            }], function () { return [{ type: i0.Injector }]; }, null);\n    })();\n    function getAppInitializer(r) {\n        return r.appInitializer.bind(r);\n    }\n    function getBootstrapListener(r) {\n        return r.bootstrapListener.bind(r);\n    }\n    /**\n     * A [DI token](guide/glossary/#di-token) for the router initializer that\n     * is called after the app is bootstrapped.\n     *\n     * @publicApi\n     */\n    var ROUTER_INITIALIZER = new i0.InjectionToken('Router Initializer');\n    function provideRouterInitializer() {\n        return [\n            RouterInitializer,\n            {\n                provide: i0.APP_INITIALIZER,\n                multi: true,\n                useFactory: getAppInitializer,\n                deps: [RouterInitializer]\n            },\n            { provide: ROUTER_INITIALIZER, useFactory: getBootstrapListener, deps: [RouterInitializer] },\n            { provide: i0.APP_BOOTSTRAP_LISTENER, multi: true, useExisting: ROUTER_INITIALIZER },\n        ];\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @publicApi\n     */\n    var VERSION = new i0.Version('10.1.0-next.3+12.sha-b280d54');\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ActivatedRoute = ActivatedRoute;\n    exports.ActivatedRouteSnapshot = ActivatedRouteSnapshot;\n    exports.ActivationEnd = ActivationEnd;\n    exports.ActivationStart = ActivationStart;\n    exports.ChildActivationEnd = ChildActivationEnd;\n    exports.ChildActivationStart = ChildActivationStart;\n    exports.ChildrenOutletContexts = ChildrenOutletContexts;\n    exports.DefaultUrlSerializer = DefaultUrlSerializer;\n    exports.GuardsCheckEnd = GuardsCheckEnd;\n    exports.GuardsCheckStart = GuardsCheckStart;\n    exports.NavigationCancel = NavigationCancel;\n    exports.NavigationEnd = NavigationEnd;\n    exports.NavigationError = NavigationError;\n    exports.NavigationStart = NavigationStart;\n    exports.NoPreloading = NoPreloading;\n    exports.OutletContext = OutletContext;\n    exports.PRIMARY_OUTLET = PRIMARY_OUTLET;\n    exports.PreloadAllModules = PreloadAllModules;\n    exports.PreloadingStrategy = PreloadingStrategy;\n    exports.ROUTER_CONFIGURATION = ROUTER_CONFIGURATION;\n    exports.ROUTER_INITIALIZER = ROUTER_INITIALIZER;\n    exports.ROUTES = ROUTES;\n    exports.ResolveEnd = ResolveEnd;\n    exports.ResolveStart = ResolveStart;\n    exports.RouteConfigLoadEnd = RouteConfigLoadEnd;\n    exports.RouteConfigLoadStart = RouteConfigLoadStart;\n    exports.RouteReuseStrategy = RouteReuseStrategy;\n    exports.Router = Router;\n    exports.RouterEvent = RouterEvent;\n    exports.RouterLink = RouterLink;\n    exports.RouterLinkActive = RouterLinkActive;\n    exports.RouterLinkWithHref = RouterLinkWithHref;\n    exports.RouterModule = RouterModule;\n    exports.RouterOutlet = RouterOutlet;\n    exports.RouterPreloader = RouterPreloader;\n    exports.RouterState = RouterState;\n    exports.RouterStateSnapshot = RouterStateSnapshot;\n    exports.RoutesRecognized = RoutesRecognized;\n    exports.Scroll = Scroll;\n    exports.UrlHandlingStrategy = UrlHandlingStrategy;\n    exports.UrlSegment = UrlSegment;\n    exports.UrlSegmentGroup = UrlSegmentGroup;\n    exports.UrlSerializer = UrlSerializer;\n    exports.UrlTree = UrlTree;\n    exports.VERSION = VERSION;\n    exports.convertToParamMap = convertToParamMap;\n    exports.provideRoutes = provideRoutes;\n    exports.ɵEmptyOutletComponent = ɵEmptyOutletComponent;\n    exports.ɵROUTER_PROVIDERS = ROUTER_PROVIDERS;\n    exports.ɵflatten = flatten;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=router.umd.js.map\n"]}