{"version":3,"sources":["packages/router/router.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","router","common","core","rxjs","operators","platformBrowser","this","extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","__values","o","m","Symbol","iterator","next","value","done","__read","r","e","ar","push","error","__spread","concat","RouterEvent","NavigationStart","_super","id","url","navigationTrigger","restoredState","_this","toString","NavigationEnd","urlAfterRedirects","NavigationCancel","reason","NavigationError","RoutesRecognized","state","GuardsCheckStart","GuardsCheckEnd","shouldActivate","ResolveStart","ResolveEnd","RouteConfigLoadStart","route","path","RouteConfigLoadEnd","ChildActivationStart","snapshot","routeConfig","ChildActivationEnd","ActivationStart","ActivationEnd","EmptyOutletComponent","decorators","type","Component","args","template","PRIMARY_OUTLET","ParamsAsMap","params","has","name","get","v","isArray","getAll","defineProperty","keys","enumerable","configurable","convertToParamMap","defaultUrlMatcher","segments","segmentGroup","parts","split","pathMatch","hasChildren","posParams","index","part","segment","startsWith","substring","consumed","slice","LoadedRouterConfig","routes","validateConfig","config","parentPath","validateNode","getFullPath","fullPath","Error","component","children","loadChildren","outlet","redirectTo","matcher","charAt","currentRoute","standardizeConfig","map","c","shallowEqual","a","key","k1","k2","flatten","arr","apply","last$1","forEach","map$$1","callback","prop","andObservables","observables","pipe","mergeAll","every","result","wrapIntoObservable","ɵisObservable","ɵisPromise","from","Promise","resolve","of","containsTree","container","containee","exact","equalQueryParams","queryParams","equalSegmentGroups","equalPath","numberOfChildren","root","containsQueryParams","containsSegmentGroup","containsSegmentGroupHelper","containeePaths","current","UrlTree","fragment","_queryParamMap","DEFAULT_SERIALIZER","serialize","UrlSegmentGroup","parent","k","serializePaths","UrlSegment","parameters","_parameterMap","serializePath","as","bs","mapChildrenIntoArray","fn","res","child","childOutlet","UrlSerializer","DefaultUrlSerializer","parse","UrlParser","parseRootSegment","parseQueryParams","parseFragment","tree","serializeSegment","primary","children_1","join","serializeQueryParams","strParams","encodeUriQuery","encodeUriFragment","encodeURI","encodeUriString","encodeURIComponent","replace","encodeUriSegment","decode","decodeURIComponent","decodeQuery","serializeMatrixParams","SEGMENT_RE","matchSegments","str","match","QUERY_PARAM_RE","QUERY_PARAM_VALUE_RE","remaining","consumeOptional","peekStartsWith","parseChildren","parseQueryParam","parseSegment","capture","parseParens","parseMatrixParams","parseParam","valueMatch","matchQueryParams","matchUrlQueryParamValue","decodedKey","decodedVal","currentVal","allowPrimary","outletName","undefined","indexOf","substr","NoMatch","AbsoluteRedirect","urlTree","noMatch","Observable","obs","absoluteRedirect","newTree","namedOutletsRedirect","ApplyRedirects","moduleInjector","configLoader","urlSerializer","allowRedirects","ngModule","NgModuleRef","expandSegmentGroup","rootSegmentGroup","createUrlTree","catchError","noMatchError","rootCandidate","_a","expandChildren","expandSegment","waitForMap","obj","waitHead","waitTail","mapped","concatAll","last","expandSegmentAgainstRoute","first","_","EmptyError","noLeftoversInUrl","paths","getOutlet","matchSegmentAgainstRoute","expandSegmentAgainstRouteUsingRedirect","expandWildCardWithParamsAgainstRouteUsingRedirect","expandRegularSegmentAgainstRouteUsingRedirect","applyRedirectCommands","lineralizeSegments","mergeMap","newSegments","group","consumedSegments","lastChild","positionalParamSegments","matched","rawSegmentGroup","load","injector","cfg","_loadedConfig","rawSlicedSegments","getChildConfig","routerConfig","childModule","childConfig","slicedSegments","containsEmptyPathRedirectsWithNamedOutlets","some","isEmptyPathRedirect","mergeTrivialChildren","createChildrenForEmptySegments","primarySegmentGroup","e_3","routes_2","routes_2_1","e_3_1","return","containsEmptyPathRedirects","addEmptySegmentsToChildrenIfNeeded","e_2","routes_1","routes_1_1","e_2_1","cs","runCanLoadGuard","canLoad","injectionToken","guard","shouldLoad","canLoadFails","navigationCancelingError","message","applyRedirectCreatreUrlTree","newRoot","createSegmentGroup","createQueryParams","redirectToParams","actualParams","sourceName","updatedSegments","createSegments","redirectToSegments","actualSegments","findPosParam","findOrReturn","redirectToUrlSegment","pos","e_1","idx","actualSegments_1","actualSegments_1_1","splice","e_1_1","Tree","_root","pathFromRoot","findNode","firstChild","siblings","findPath","filter","cc","node","_b","node_1","_c","unshift","TreeNode","nodeChildrenAsMap","RouterState","setRouterState","createEmptyState","rootComponent","createEmptyStateSnapshot","activated","ActivatedRouteSnapshot","RouterStateSnapshot","emptyUrl","BehaviorSubject","emptyParams","emptyData","emptyQueryParams","ActivatedRoute","data","futureSnapshot","_futureSnapshot","_routerState","_paramMap","inheritedParamsDataResolve","paramsInheritanceStrategy","inheritingStartingFrom","parent_1","flattenInherited","reduce","curr","_resolvedData","urlSegment","lastPathIndex","_urlSegment","_lastPathIndex","_resolve","serializeNode","advanceActivatedRoute","currentSnapshot","nextSnapshot","shallowEqualArrays","equalParamsAndUrlSegments","equalSegments","isMatrixParams","command","outlets","segmentPath","oldSegmentGroup","newSegmentGroup","qp","replaceSegment","oldSegment","newSegment","Navigation","isAbsolute","numberOfDoubleDots","commands","cmdWithOutlet","find","toRoot","Position","processChildren","getPath","updateSegmentGroup","startIndex","updateSegmentGroupChildren","prefixedWith","currentCommandIndex","currentPathIndex","pathIndex","commandIndex","compare","slicedCommands","g","createNewSegmentGroup","outlets_2","getOutlets","createNewSegmentChildren","stringify","CanActivate","CanDeactivate","PreActivation","future","forwardEvent","canActivateChecks","canDeactivateChecks","initialize","parentContexts","futureRoot","setupChildRouteGuards","checkGuards","isDeactivating","isActivating","runCanDeactivateChecks","canDeactivate","runCanActivateChecks","resolveData","concatMap","check","runResolve","futureNode","currNode","contexts","futurePath","prevChildren","setupRouteGuards","deactivateRouteAndItsChildren","getContext","context","shouldRunGuardsAndResolvers","runGuardsAndResolvers","mode","childName","isActivated","runCanDeactivate","fireChildActivationStart","fireActivationStart","runCanActivateChild","runCanActivate","canActivate","getToken","canActivateChildGuards","reverse","extractCanActivateChild","guards","canActivateChild","resolveNode","resolvedData","key_1","getResolver","resolver","token","closestLoadedConfig","NoMatch$1","Recognizer","rootComponentType","recognize","split$1","processSegmentGroup","freeze","rootNode","routeState","inheritParamsAndData","routeNode","processSegment","checkOutletNameUniqueness","nodes","names","routeWithSameOutletName","sortActivatedRouteSnapshots","sort","localeCompare","config_1","config_1_1","processSegmentAgainstRoute","rawSegment","getData","getSourceSegmentGroup","getPathIndexShift","getResolve","match$1","_sourceSegment","_segmentIndexShift","containsEmptyPathMatchesWithNamedOutlets","emptyPathMatch","getOutlet$1","s_1","createChildrenForEmptyPaths","primarySegment","containsEmptyPathMatches","s_2","addEmptyPathsToChildrenIfNeeded","RouteReuseStrategy","DefaultRouteReuseStrategy","shouldDetach","store","detachedTree","shouldAttach","retrieve","shouldReuseRoute","ROUTES","InjectionToken","RouterConfigLoader","loader","compiler","onLoadStartListener","onLoadEndListener","parentInjector","loadModuleFactory","NgModuleFactory","compileModuleAsync","UrlHandlingStrategy","DefaultUrlHandlingStrategy","shouldProcessUrl","extract","merge","newUrlPart","wholeUrl","defaultErrorHandler","defaultRouterHook","Router","rootContexts","location","navigations","navigationId","events","Subject","errorHandler","navigated","lastSuccessfulId","hooks","beforePreactivation","afterPreactivation","urlHandlingStrategy","routeReuseStrategy","onSameUrlNavigation","resetConfig","currentUrlTree","createEmptyUrlTree","rawUrlTree","triggerEvent","routerState","processNavigations","resetRootComponentType","initialNavigation","setUpLocationChangeListener","navigateByUrl","replaceUrl","locationSubscription","subscribe","change","source","setTimeout","scheduleNavigation","serializeUrl","ngOnDestroy","dispose","unsubscribe","navigationExtras","relativeTo","preserveQueryParams","queryParamsHandling","preserveFragment","isDevMode","console","warn","f","q","removeEmptyProps","nav","computeNavigation","cmd","cmdIdx","outlets_1","urlPart","partIndex","startingPosition","findStartingPosition","modifier","createPositionApplyingDoubleDots","ci","dd","extras","skipLocationChange","parseUrl","mergedTree","navigate","validateCommands","isActive","executeScheduledNavigation","promise","catch","rawUrl","lastNavigation","reject","rej","urlTransition","then","runNavigate","precreatedState","resolvePromise","rejectPromise","preActivation","routerState$","appliedUrl","applyRedirects","evt","createRouterState","prevState","createNode","createOrReuseChildren","detachedRouteHandle","setFutureSnapshotsOfActivatedRoutes","createActivatedRoute","activateRoutes","storedState","storedUrl","navigationIsSuccessful","isCurrentPathEqualTo","replaceState","go","ActivateRoutes","activate","resetUrlToCurrentUrlTree","isNavigationCancelingError","resetStateAndUrl","ee","futureState","currState","currRoot","deactivateChildRoutes","activateChildRoutes","futureChild","childOutletName","deactivateRoutes","parentContext","detachAndStoreRouteSubtree","deactivateRouteAndOutlet","componentRef","detach","onOutletDeactivated","contexts_1","deactivate","getOrCreateContext","stored","onOutletReAttached","attachRef","attach","advanceActivatedRouteNodeAndItsChildren","parentLoadedConfig","cmpFactoryResolver","componentFactoryResolver","activateWith","RouterLink","tabIndex","renderer","el","setAttribute","nativeElement","set","preserve","onClick","attrBoolValue","Directive","selector","ctorParameters","String","Attribute","Renderer2","ElementRef","propDecorators","Input","routerLink","HostListener","RouterLinkWithHref","locationStrategy","subscription","updateTargetUrlAndHref","ngOnChanges","changes","button","ctrlKey","metaKey","shiftKey","target","href","prepareExternalUrl","LocationStrategy","HostBinding","RouterLinkActive","element","cdr","classes","routerLinkActiveOptions","update","ngAfterContentInit","links","linksWithHrefs","hasActiveLinks","addClass","removeClass","isLinkActive","link","exportAs","ChangeDetectorRef","ContentChildren","descendants","routerLinkActive","OutletContext","ChildrenOutletContexts","Map","onChildOutletCreated","onChildOutletDestroyed","RouterOutlet","changeDetector","_activatedRoute","activateEvents","EventEmitter","deactivateEvents","ngOnInit","instance","cmp","ref","activatedRoute","insert","hostView","destroy","emit","resolveComponentFactory","childContexts","OutletInjector","createComponent","markForCheck","ViewContainerRef","ComponentFactoryResolver","Output","notFoundValue","PreloadingStrategy","PreloadAllModules","preload","NoPreloading","RouterPreloader","moduleLoader","preloadingStrategy","setUpPreloading","processRoutes","preloadConfig","Injectable","NgModuleFactoryLoader","Compiler","Injector","ROUTER_DIRECTIVES","ROUTER_CONFIGURATION","ROUTER_FORROOT_GUARD","ROUTER_PROVIDERS","Location","provide","useClass","useFactory","setupRouter","deps","ApplicationRef","Optional","rootRoute","SystemJsNgModuleLoader","useValue","enableTracing","routerNgProbeToken","NgProbeToken","RouterModule","forRoot","providers","provideRoutes","provideForRootGuard","SkipSelf","provideLocationStrategy","PlatformLocation","Inject","APP_BASE_HREF","useExisting","multi","provideRouterInitializer","forChild","NgModule","declarations","entryComponents","platformLocationStrategy","baseHref","options","useHash","HashLocationStrategy","PathLocationStrategy","ANALYZE_FOR_ENTRY_COMPONENTS","opts","dom_1","ɵgetDOM","logGroup","log","logGroupEnd","RouterInitializer","initNavigation","resultOfPreactivationDone","appInitializer","LOCATION_INITIALIZED","isLegacyDisabled","isLegacyEnabled","bootstrapListener","bootstrappedComponentRef","preloader","components","componentTypes","complete","getAppInitializer","bind","getBootstrapListener","ROUTER_INITIALIZER","APP_INITIALIZER","APP_BOOTSTRAP_LISTENER","VERSION","Version","ɵangular_packages_router_router_a","ɵangular_packages_router_router_g","ɵangular_packages_router_router_h","ɵangular_packages_router_router_i","ɵangular_packages_router_router_d","ɵangular_packages_router_router_c","ɵangular_packages_router_router_j","ɵangular_packages_router_router_f","ɵangular_packages_router_router_b","ɵangular_packages_router_router_e","ɵangular_packages_router_router_k","ɵangular_packages_router_router_l","ɵEmptyOutletComponent","ɵROUTER_PROVIDERS","ɵflatten"],"mappings":"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","sourcesContent":["/**\n * @license Angular v6.0.6\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/core'), require('rxjs'), require('rxjs/operators'), require('@angular/platform-browser')) :\n\ttypeof define === 'function' && define.amd ? define('@angular/router', ['exports', '@angular/common', '@angular/core', 'rxjs', 'rxjs/operators', '@angular/platform-browser'], factory) :\n\t(factory((global.ng = global.ng || {}, global.ng.router = {}),global.ng.common,global.ng.core,global.rxjs,global.rxjs.operators,global.ng.platformBrowser));\n}(this, (function (exports,common,core,rxjs,operators,platformBrowser) { 'use strict';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Base for events the Router goes through, as opposed to events tied to a specific\n * Route. `RouterEvent`s will only be fired one time for any given navigation.\n *\n * Example:\n *\n * ```\n * class MyService {\n *   constructor(public router: Router, logger: Logger) {\n *     router.events.filter(e => e instanceof RouterEvent).subscribe(e => {\n *       logger.log(e.id, e.url);\n *     });\n *   }\n * }\n * ```\n *\n * @experimental\n */\nvar RouterEvent = /** @class */ (function () {\n    function RouterEvent(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url) {\n        this.id = id;\n        this.url = url;\n    }\n    return RouterEvent;\n}());\n/**\n * @description\n *\n * Represents an event triggered when a navigation starts.\n *\n *\n */\nvar NavigationStart = /** @class */ (function (_super) {\n    __extends(NavigationStart, _super);\n    function NavigationStart(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    navigationTrigger, \n    /** @docsNotRequired */\n    restoredState) {\n        /** @docsNotRequired */\n        if (navigationTrigger === void 0) { navigationTrigger = 'imperative'; }\n        /** @docsNotRequired */\n        if (restoredState === void 0) { restoredState = null; }\n        var _this = _super.call(this, id, url) || this;\n        _this.navigationTrigger = navigationTrigger;\n        _this.restoredState = restoredState;\n        return _this;\n    }\n    /** @docsNotRequired */\n    NavigationStart.prototype.toString = function () { return \"NavigationStart(id: \" + this.id + \", url: '\" + this.url + \"')\"; };\n    return NavigationStart;\n}(RouterEvent));\n/**\n * @description\n *\n * Represents an event triggered when a navigation ends successfully.\n *\n *\n */\nvar NavigationEnd = /** @class */ (function (_super) {\n    __extends(NavigationEnd, _super);\n    function NavigationEnd(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    urlAfterRedirects) {\n        var _this = _super.call(this, id, url) || this;\n        _this.urlAfterRedirects = urlAfterRedirects;\n        return _this;\n    }\n    /** @docsNotRequired */\n    NavigationEnd.prototype.toString = function () {\n        return \"NavigationEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"')\";\n    };\n    return NavigationEnd;\n}(RouterEvent));\n/**\n * @description\n *\n * Represents an event triggered when a navigation is canceled.\n *\n *\n */\nvar NavigationCancel = /** @class */ (function (_super) {\n    __extends(NavigationCancel, _super);\n    function NavigationCancel(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    reason) {\n        var _this = _super.call(this, id, url) || this;\n        _this.reason = reason;\n        return _this;\n    }\n    /** @docsNotRequired */\n    NavigationCancel.prototype.toString = function () { return \"NavigationCancel(id: \" + this.id + \", url: '\" + this.url + \"')\"; };\n    return NavigationCancel;\n}(RouterEvent));\n/**\n * @description\n *\n * Represents an event triggered when a navigation fails due to an unexpected error.\n *\n *\n */\nvar NavigationError = /** @class */ (function (_super) {\n    __extends(NavigationError, _super);\n    function NavigationError(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    error) {\n        var _this = _super.call(this, id, url) || this;\n        _this.error = error;\n        return _this;\n    }\n    /** @docsNotRequired */\n    NavigationError.prototype.toString = function () {\n        return \"NavigationError(id: \" + this.id + \", url: '\" + this.url + \"', error: \" + this.error + \")\";\n    };\n    return NavigationError;\n}(RouterEvent));\n/**\n * @description\n *\n * Represents an event triggered when routes are recognized.\n *\n *\n */\nvar RoutesRecognized = /** @class */ (function (_super) {\n    __extends(RoutesRecognized, _super);\n    function RoutesRecognized(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    urlAfterRedirects, \n    /** @docsNotRequired */\n    state) {\n        var _this = _super.call(this, id, url) || this;\n        _this.urlAfterRedirects = urlAfterRedirects;\n        _this.state = state;\n        return _this;\n    }\n    /** @docsNotRequired */\n    RoutesRecognized.prototype.toString = function () {\n        return \"RoutesRecognized(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return RoutesRecognized;\n}(RouterEvent));\n/**\n * @description\n *\n * Represents the start of the Guard phase of routing.\n *\n * @experimental\n */\nvar GuardsCheckStart = /** @class */ (function (_super) {\n    __extends(GuardsCheckStart, _super);\n    function GuardsCheckStart(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    urlAfterRedirects, \n    /** @docsNotRequired */\n    state) {\n        var _this = _super.call(this, id, url) || this;\n        _this.urlAfterRedirects = urlAfterRedirects;\n        _this.state = state;\n        return _this;\n    }\n    GuardsCheckStart.prototype.toString = function () {\n        return \"GuardsCheckStart(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return GuardsCheckStart;\n}(RouterEvent));\n/**\n * @description\n *\n * Represents the end of the Guard phase of routing.\n *\n * @experimental\n */\nvar GuardsCheckEnd = /** @class */ (function (_super) {\n    __extends(GuardsCheckEnd, _super);\n    function GuardsCheckEnd(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    urlAfterRedirects, \n    /** @docsNotRequired */\n    state, \n    /** @docsNotRequired */\n    shouldActivate) {\n        var _this = _super.call(this, id, url) || this;\n        _this.urlAfterRedirects = urlAfterRedirects;\n        _this.state = state;\n        _this.shouldActivate = shouldActivate;\n        return _this;\n    }\n    GuardsCheckEnd.prototype.toString = function () {\n        return \"GuardsCheckEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \", shouldActivate: \" + this.shouldActivate + \")\";\n    };\n    return GuardsCheckEnd;\n}(RouterEvent));\n/**\n * @description\n *\n * Represents the start of the Resolve phase of routing. The timing of this\n * event may change, thus it's experimental. In the current iteration it will run\n * in the \"resolve\" phase whether there's things to resolve or not. In the future this\n * behavior may change to only run when there are things to be resolved.\n *\n * @experimental\n */\nvar ResolveStart = /** @class */ (function (_super) {\n    __extends(ResolveStart, _super);\n    function ResolveStart(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    urlAfterRedirects, \n    /** @docsNotRequired */\n    state) {\n        var _this = _super.call(this, id, url) || this;\n        _this.urlAfterRedirects = urlAfterRedirects;\n        _this.state = state;\n        return _this;\n    }\n    ResolveStart.prototype.toString = function () {\n        return \"ResolveStart(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return ResolveStart;\n}(RouterEvent));\n/**\n * @description\n *\n * Represents the end of the Resolve phase of routing. See note on\n * `ResolveStart` for use of this experimental API.\n *\n * @experimental\n */\nvar ResolveEnd = /** @class */ (function (_super) {\n    __extends(ResolveEnd, _super);\n    function ResolveEnd(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    urlAfterRedirects, \n    /** @docsNotRequired */\n    state) {\n        var _this = _super.call(this, id, url) || this;\n        _this.urlAfterRedirects = urlAfterRedirects;\n        _this.state = state;\n        return _this;\n    }\n    ResolveEnd.prototype.toString = function () {\n        return \"ResolveEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return ResolveEnd;\n}(RouterEvent));\n/**\n * @description\n *\n * Represents an event triggered before lazy loading a route config.\n *\n * @experimental\n */\nvar RouteConfigLoadStart = /** @class */ (function () {\n    function RouteConfigLoadStart(\n    /** @docsNotRequired */\n    route) {\n        this.route = route;\n    }\n    RouteConfigLoadStart.prototype.toString = function () { return \"RouteConfigLoadStart(path: \" + this.route.path + \")\"; };\n    return RouteConfigLoadStart;\n}());\n/**\n * @description\n *\n * Represents an event triggered when a route has been lazy loaded.\n *\n * @experimental\n */\nvar RouteConfigLoadEnd = /** @class */ (function () {\n    function RouteConfigLoadEnd(\n    /** @docsNotRequired */\n    route) {\n        this.route = route;\n    }\n    RouteConfigLoadEnd.prototype.toString = function () { return \"RouteConfigLoadEnd(path: \" + this.route.path + \")\"; };\n    return RouteConfigLoadEnd;\n}());\n/**\n * @description\n *\n * Represents the start of end of the Resolve phase of routing. See note on\n * `ChildActivationEnd` for use of this experimental API.\n *\n * @experimental\n */\nvar ChildActivationStart = /** @class */ (function () {\n    function ChildActivationStart(\n    /** @docsNotRequired */\n    snapshot) {\n        this.snapshot = snapshot;\n    }\n    ChildActivationStart.prototype.toString = function () {\n        var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n        return \"ChildActivationStart(path: '\" + path + \"')\";\n    };\n    return ChildActivationStart;\n}());\n/**\n * @description\n *\n * Represents the start of end of the Resolve phase of routing. See note on\n * `ChildActivationStart` for use of this experimental API.\n *\n * @experimental\n */\nvar ChildActivationEnd = /** @class */ (function () {\n    function ChildActivationEnd(\n    /** @docsNotRequired */\n    snapshot) {\n        this.snapshot = snapshot;\n    }\n    ChildActivationEnd.prototype.toString = function () {\n        var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n        return \"ChildActivationEnd(path: '\" + path + \"')\";\n    };\n    return ChildActivationEnd;\n}());\n/**\n * @description\n *\n * Represents the start of end of the Resolve phase of routing. See note on\n * `ActivationEnd` for use of this experimental API.\n *\n * @experimental\n */\nvar ActivationStart = /** @class */ (function () {\n    function ActivationStart(\n    /** @docsNotRequired */\n    snapshot) {\n        this.snapshot = snapshot;\n    }\n    ActivationStart.prototype.toString = function () {\n        var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n        return \"ActivationStart(path: '\" + path + \"')\";\n    };\n    return ActivationStart;\n}());\n/**\n * @description\n *\n * Represents the start of end of the Resolve phase of routing. See note on\n * `ActivationStart` for use of this experimental API.\n *\n * @experimental\n */\nvar ActivationEnd = /** @class */ (function () {\n    function ActivationEnd(\n    /** @docsNotRequired */\n    snapshot) {\n        this.snapshot = snapshot;\n    }\n    ActivationEnd.prototype.toString = function () {\n        var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n        return \"ActivationEnd(path: '\" + path + \"')\";\n    };\n    return ActivationEnd;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This component is used internally within the router to be a placeholder when an empty\n * router-outlet is needed. For example, with a config such as:\n *\n * `{path: 'parent', outlet: 'nav', children: [...]}`\n *\n * In order to render, there needs to be a component on this config, which will default\n * to this `EmptyOutletComponent`.\n */\nvar EmptyOutletComponent = /** @class */ (function () {\n    function EmptyOutletComponent() {\n    }\n    EmptyOutletComponent.decorators = [\n        { type: core.Component, args: [{ template: \"<router-outlet></router-outlet>\" }] }\n    ];\n    return EmptyOutletComponent;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Name of the primary outlet.\n *\n *\n */\nvar PRIMARY_OUTLET = 'primary';\nvar ParamsAsMap = /** @class */ (function () {\n    function ParamsAsMap(params) {\n        this.params = params || {};\n    }\n    ParamsAsMap.prototype.has = function (name) { return this.params.hasOwnProperty(name); };\n    ParamsAsMap.prototype.get = function (name) {\n        if (this.has(name)) {\n            var v = this.params[name];\n            return Array.isArray(v) ? v[0] : v;\n        }\n        return null;\n    };\n    ParamsAsMap.prototype.getAll = function (name) {\n        if (this.has(name)) {\n            var v = this.params[name];\n            return Array.isArray(v) ? v : [v];\n        }\n        return [];\n    };\n    Object.defineProperty(ParamsAsMap.prototype, \"keys\", {\n        get: function () { return Object.keys(this.params); },\n        enumerable: true,\n        configurable: true\n    });\n    return ParamsAsMap;\n}());\n/**\n * Convert a `Params` instance to a `ParamMap`.\n *\n *\n */\nfunction convertToParamMap(params) {\n    return new ParamsAsMap(params);\n}\nvar NAVIGATION_CANCELING_ERROR = 'ngNavigationCancelingError';\nfunction navigationCancelingError(message) {\n    var error = Error('NavigationCancelingError: ' + message);\n    error[NAVIGATION_CANCELING_ERROR] = true;\n    return error;\n}\nfunction isNavigationCancelingError(error) {\n    return error && error[NAVIGATION_CANCELING_ERROR];\n}\n// Matches the route configuration (`route`) against the actual URL (`segments`).\nfunction defaultUrlMatcher(segments, segmentGroup, route) {\n    var parts = route.path.split('/');\n    if (parts.length > segments.length) {\n        // The actual URL is shorter than the config, no match\n        return null;\n    }\n    if (route.pathMatch === 'full' &&\n        (segmentGroup.hasChildren() || parts.length < segments.length)) {\n        // The config is longer than the actual URL but we are looking for a full match, return null\n        return null;\n    }\n    var posParams = {};\n    // Check each config part against the actual URL\n    for (var index = 0; index < parts.length; index++) {\n        var part = parts[index];\n        var segment = segments[index];\n        var isParameter = part.startsWith(':');\n        if (isParameter) {\n            posParams[part.substring(1)] = segment;\n        }\n        else if (part !== segment.path) {\n            // The actual URL part does not match the config, no match\n            return null;\n        }\n    }\n    return { consumed: segments.slice(0, parts.length), posParams: posParams };\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar LoadedRouterConfig = /** @class */ (function () {\n    function LoadedRouterConfig(routes, module) {\n        this.routes = routes;\n        this.module = module;\n    }\n    return LoadedRouterConfig;\n}());\nfunction validateConfig(config, parentPath) {\n    if (parentPath === void 0) { parentPath = ''; }\n    // forEach doesn't iterate undefined values\n    for (var i = 0; i < config.length; i++) {\n        var route = config[i];\n        var fullPath = getFullPath(parentPath, route);\n        validateNode(route, fullPath);\n    }\n}\nfunction validateNode(route, fullPath) {\n    if (!route) {\n        throw new Error(\"\\n      Invalid configuration of route '\" + fullPath + \"': Encountered undefined route.\\n      The reason might be an extra comma.\\n\\n      Example:\\n      const routes: Routes = [\\n        { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\\n        { path: 'dashboard',  component: DashboardComponent },, << two commas\\n        { path: 'detail/:id', component: HeroDetailComponent }\\n      ];\\n    \");\n    }\n    if (Array.isArray(route)) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': Array cannot be specified\");\n    }\n    if (!route.component && !route.children && !route.loadChildren &&\n        (route.outlet && route.outlet !== PRIMARY_OUTLET)) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': a componentless route without children or loadChildren cannot have a named outlet set\");\n    }\n    if (route.redirectTo && route.children) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and children cannot be used together\");\n    }\n    if (route.redirectTo && route.loadChildren) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and loadChildren cannot be used together\");\n    }\n    if (route.children && route.loadChildren) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': children and loadChildren cannot be used together\");\n    }\n    if (route.redirectTo && route.component) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and component cannot be used together\");\n    }\n    if (route.path && route.matcher) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': path and matcher cannot be used together\");\n    }\n    if (route.redirectTo === void 0 && !route.component && !route.children && !route.loadChildren) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"'. One of the following must be provided: component, redirectTo, children or loadChildren\");\n    }\n    if (route.path === void 0 && route.matcher === void 0) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': routes must have either a path or a matcher specified\");\n    }\n    if (typeof route.path === 'string' && route.path.charAt(0) === '/') {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': path cannot start with a slash\");\n    }\n    if (route.path === '' && route.redirectTo !== void 0 && route.pathMatch === void 0) {\n        var exp = \"The default value of 'pathMatch' is 'prefix', but often the intent is to use 'full'.\";\n        throw new Error(\"Invalid configuration of route '{path: \\\"\" + fullPath + \"\\\", redirectTo: \\\"\" + route.redirectTo + \"\\\"}': please provide 'pathMatch'. \" + exp);\n    }\n    if (route.pathMatch !== void 0 && route.pathMatch !== 'full' && route.pathMatch !== 'prefix') {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': pathMatch can only be set to 'prefix' or 'full'\");\n    }\n    if (route.children) {\n        validateConfig(route.children, fullPath);\n    }\n}\nfunction getFullPath(parentPath, currentRoute) {\n    if (!currentRoute) {\n        return parentPath;\n    }\n    if (!parentPath && !currentRoute.path) {\n        return '';\n    }\n    else if (parentPath && !currentRoute.path) {\n        return parentPath + \"/\";\n    }\n    else if (!parentPath && currentRoute.path) {\n        return currentRoute.path;\n    }\n    else {\n        return parentPath + \"/\" + currentRoute.path;\n    }\n}\n/**\n * Makes a copy of the config and adds any default required properties.\n */\nfunction standardizeConfig(r) {\n    var children = r.children && r.children.map(standardizeConfig);\n    var c = children ? __assign({}, r, { children: children }) : __assign({}, r);\n    if (!c.component && (children || c.loadChildren) && (c.outlet && c.outlet !== PRIMARY_OUTLET)) {\n        c.component = EmptyOutletComponent;\n    }\n    return c;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction shallowEqualArrays(a, b) {\n    if (a.length !== b.length)\n        return false;\n    for (var i = 0; i < a.length; ++i) {\n        if (!shallowEqual(a[i], b[i]))\n            return false;\n    }\n    return true;\n}\nfunction shallowEqual(a, b) {\n    var k1 = Object.keys(a);\n    var k2 = Object.keys(b);\n    if (k1.length != k2.length) {\n        return false;\n    }\n    var key;\n    for (var i = 0; i < k1.length; i++) {\n        key = k1[i];\n        if (a[key] !== b[key]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Flattens single-level nested arrays.\n */\nfunction flatten(arr) {\n    return Array.prototype.concat.apply([], arr);\n}\n/**\n * Return the last element of an array.\n */\nfunction last$1(a) {\n    return a.length > 0 ? a[a.length - 1] : null;\n}\n/**\n * Verifys all booleans in an array are `true`.\n */\n\nfunction forEach(map$$1, callback) {\n    for (var prop in map$$1) {\n        if (map$$1.hasOwnProperty(prop)) {\n            callback(map$$1[prop], prop);\n        }\n    }\n}\nfunction waitForMap(obj, fn) {\n    if (Object.keys(obj).length === 0) {\n        return rxjs.of({});\n    }\n    var waitHead = [];\n    var waitTail = [];\n    var res = {};\n    forEach(obj, function (a, k) {\n        var mapped = fn(k, a).pipe(operators.map(function (r) { return res[k] = r; }));\n        if (k === PRIMARY_OUTLET) {\n            waitHead.push(mapped);\n        }\n        else {\n            waitTail.push(mapped);\n        }\n    });\n    // Closure compiler has problem with using spread operator here. So just using Array.concat.\n    return rxjs.of.apply(null, waitHead.concat(waitTail)).pipe(operators.concatAll(), operators.last(), operators.map(function () { return res; }));\n}\n/**\n * ANDs Observables by merging all input observables, reducing to an Observable verifying all\n * input Observables return `true`.\n */\nfunction andObservables(observables) {\n    return observables.pipe(operators.mergeAll(), operators.every(function (result) { return result === true; }));\n}\nfunction wrapIntoObservable(value) {\n    if (core.ɵisObservable(value)) {\n        return value;\n    }\n    if (core.ɵisPromise(value)) {\n        // Use `Promise.resolve()` to wrap promise-like instances.\n        // Required ie when a Resolver returns a AngularJS `$q` promise to correctly trigger the\n        // change detection.\n        return rxjs.from(Promise.resolve(value));\n    }\n    return rxjs.of(value);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction createEmptyUrlTree() {\n    return new UrlTree(new UrlSegmentGroup([], {}), {}, null);\n}\nfunction containsTree(container, containee, exact) {\n    if (exact) {\n        return equalQueryParams(container.queryParams, containee.queryParams) &&\n            equalSegmentGroups(container.root, containee.root);\n    }\n    return containsQueryParams(container.queryParams, containee.queryParams) &&\n        containsSegmentGroup(container.root, containee.root);\n}\nfunction equalQueryParams(container, containee) {\n    return shallowEqual(container, containee);\n}\nfunction equalSegmentGroups(container, containee) {\n    if (!equalPath(container.segments, containee.segments))\n        return false;\n    if (container.numberOfChildren !== containee.numberOfChildren)\n        return false;\n    for (var c in containee.children) {\n        if (!container.children[c])\n            return false;\n        if (!equalSegmentGroups(container.children[c], containee.children[c]))\n            return false;\n    }\n    return true;\n}\nfunction containsQueryParams(container, containee) {\n    return Object.keys(containee).length <= Object.keys(container).length &&\n        Object.keys(containee).every(function (key) { return containee[key] === container[key]; });\n}\nfunction containsSegmentGroup(container, containee) {\n    return containsSegmentGroupHelper(container, containee, containee.segments);\n}\nfunction containsSegmentGroupHelper(container, containee, containeePaths) {\n    if (container.segments.length > containeePaths.length) {\n        var current = container.segments.slice(0, containeePaths.length);\n        if (!equalPath(current, containeePaths))\n            return false;\n        if (containee.hasChildren())\n            return false;\n        return true;\n    }\n    else if (container.segments.length === containeePaths.length) {\n        if (!equalPath(container.segments, containeePaths))\n            return false;\n        for (var c in containee.children) {\n            if (!container.children[c])\n                return false;\n            if (!containsSegmentGroup(container.children[c], containee.children[c]))\n                return false;\n        }\n        return true;\n    }\n    else {\n        var current = containeePaths.slice(0, container.segments.length);\n        var next = containeePaths.slice(container.segments.length);\n        if (!equalPath(container.segments, current))\n            return false;\n        if (!container.children[PRIMARY_OUTLET])\n            return false;\n        return containsSegmentGroupHelper(container.children[PRIMARY_OUTLET], containee, next);\n    }\n}\n/**\n * @description\n *\n * Represents the parsed URL.\n *\n * Since a router state is a tree, and the URL is nothing but a serialized state, the URL is a\n * serialized tree.\n * UrlTree is a data structure that provides a lot of affordances in dealing with URLs\n *\n * ### Example\n *\n * ```\n * @Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const tree: UrlTree =\n *       router.parseUrl('/team/33/(user/victor//support:help)?debug=true#fragment');\n *     const f = tree.fragment; // return 'fragment'\n *     const q = tree.queryParams; // returns {debug: 'true'}\n *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n *     const s: UrlSegment[] = g.segments; // returns 2 segments 'team' and '33'\n *     g.children[PRIMARY_OUTLET].segments; // returns 2 segments 'user' and 'victor'\n *     g.children['support'].segments; // return 1 segment 'help'\n *   }\n * }\n * ```\n *\n *\n */\nvar UrlTree = /** @class */ (function () {\n    /** @internal */\n    function UrlTree(\n    /** The root segment group of the URL tree */\n    root, \n    /** The query params of the URL */\n    queryParams, \n    /** The fragment of the URL */\n    fragment) {\n        this.root = root;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n    }\n    Object.defineProperty(UrlTree.prototype, \"queryParamMap\", {\n        get: function () {\n            if (!this._queryParamMap) {\n                this._queryParamMap = convertToParamMap(this.queryParams);\n            }\n            return this._queryParamMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @docsNotRequired */\n    UrlTree.prototype.toString = function () { return DEFAULT_SERIALIZER.serialize(this); };\n    return UrlTree;\n}());\n/**\n * @description\n *\n * Represents the parsed URL segment group.\n *\n * See `UrlTree` for more information.\n *\n *\n */\nvar UrlSegmentGroup = /** @class */ (function () {\n    function UrlSegmentGroup(\n    /** The URL segments of this group. See `UrlSegment` for more information */\n    segments, \n    /** The list of children of this group */\n    children) {\n        var _this = this;\n        this.segments = segments;\n        this.children = children;\n        /** The parent node in the url tree */\n        this.parent = null;\n        forEach(children, function (v, k) { return v.parent = _this; });\n    }\n    /** Whether the segment has child segments */\n    UrlSegmentGroup.prototype.hasChildren = function () { return this.numberOfChildren > 0; };\n    Object.defineProperty(UrlSegmentGroup.prototype, \"numberOfChildren\", {\n        /** Number of child segments */\n        get: function () { return Object.keys(this.children).length; },\n        enumerable: true,\n        configurable: true\n    });\n    /** @docsNotRequired */\n    UrlSegmentGroup.prototype.toString = function () { return serializePaths(this); };\n    return UrlSegmentGroup;\n}());\n/**\n * @description\n *\n * Represents a single URL segment.\n *\n * A UrlSegment is a part of a URL between the two slashes. It contains a path and the matrix\n * parameters associated with the segment.\n *\n * ## Example\n *\n * ```\n * @Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const tree: UrlTree = router.parseUrl('/team;id=33');\n *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n *     const s: UrlSegment[] = g.segments;\n *     s[0].path; // returns 'team'\n *     s[0].parameters; // returns {id: 33}\n *   }\n * }\n * ```\n *\n *\n */\nvar UrlSegment = /** @class */ (function () {\n    function UrlSegment(\n    /** The path part of a URL segment */\n    path, \n    /** The matrix parameters associated with a segment */\n    parameters) {\n        this.path = path;\n        this.parameters = parameters;\n    }\n    Object.defineProperty(UrlSegment.prototype, \"parameterMap\", {\n        get: function () {\n            if (!this._parameterMap) {\n                this._parameterMap = convertToParamMap(this.parameters);\n            }\n            return this._parameterMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @docsNotRequired */\n    UrlSegment.prototype.toString = function () { return serializePath(this); };\n    return UrlSegment;\n}());\nfunction equalSegments(as, bs) {\n    return equalPath(as, bs) && as.every(function (a, i) { return shallowEqual(a.parameters, bs[i].parameters); });\n}\nfunction equalPath(as, bs) {\n    if (as.length !== bs.length)\n        return false;\n    return as.every(function (a, i) { return a.path === bs[i].path; });\n}\nfunction mapChildrenIntoArray(segment, fn) {\n    var res = [];\n    forEach(segment.children, function (child, childOutlet) {\n        if (childOutlet === PRIMARY_OUTLET) {\n            res = res.concat(fn(child, childOutlet));\n        }\n    });\n    forEach(segment.children, function (child, childOutlet) {\n        if (childOutlet !== PRIMARY_OUTLET) {\n            res = res.concat(fn(child, childOutlet));\n        }\n    });\n    return res;\n}\n/**\n * @description\n *\n * Serializes and deserializes a URL string into a URL tree.\n *\n * The url serialization strategy is customizable. You can\n * make all URLs case insensitive by providing a custom UrlSerializer.\n *\n * See `DefaultUrlSerializer` for an example of a URL serializer.\n *\n *\n */\nvar UrlSerializer = /** @class */ (function () {\n    function UrlSerializer() {\n    }\n    return UrlSerializer;\n}());\n/**\n * @description\n *\n * A default implementation of the `UrlSerializer`.\n *\n * Example URLs:\n *\n * ```\n * /inbox/33(popup:compose)\n * /inbox/33;open=true/messages/44\n * ```\n *\n * DefaultUrlSerializer uses parentheses to serialize secondary segments (e.g., popup:compose), the\n * colon syntax to specify the outlet, and the ';parameter=value' syntax (e.g., open=true) to\n * specify route specific parameters.\n *\n *\n */\nvar DefaultUrlSerializer = /** @class */ (function () {\n    function DefaultUrlSerializer() {\n    }\n    /** Parses a url into a `UrlTree` */\n    DefaultUrlSerializer.prototype.parse = function (url) {\n        var p = new UrlParser(url);\n        return new UrlTree(p.parseRootSegment(), p.parseQueryParams(), p.parseFragment());\n    };\n    /** Converts a `UrlTree` into a url */\n    DefaultUrlSerializer.prototype.serialize = function (tree) {\n        var segment = \"/\" + serializeSegment(tree.root, true);\n        var query = serializeQueryParams(tree.queryParams);\n        var fragment = typeof tree.fragment === \"string\" ? \"#\" + encodeUriFragment(tree.fragment) : '';\n        return \"\" + segment + query + fragment;\n    };\n    return DefaultUrlSerializer;\n}());\nvar DEFAULT_SERIALIZER = new DefaultUrlSerializer();\nfunction serializePaths(segment) {\n    return segment.segments.map(function (p) { return serializePath(p); }).join('/');\n}\nfunction serializeSegment(segment, root) {\n    if (!segment.hasChildren()) {\n        return serializePaths(segment);\n    }\n    if (root) {\n        var primary = segment.children[PRIMARY_OUTLET] ?\n            serializeSegment(segment.children[PRIMARY_OUTLET], false) :\n            '';\n        var children_1 = [];\n        forEach(segment.children, function (v, k) {\n            if (k !== PRIMARY_OUTLET) {\n                children_1.push(k + \":\" + serializeSegment(v, false));\n            }\n        });\n        return children_1.length > 0 ? primary + \"(\" + children_1.join('//') + \")\" : primary;\n    }\n    else {\n        var children = mapChildrenIntoArray(segment, function (v, k) {\n            if (k === PRIMARY_OUTLET) {\n                return [serializeSegment(segment.children[PRIMARY_OUTLET], false)];\n            }\n            return [k + \":\" + serializeSegment(v, false)];\n        });\n        return serializePaths(segment) + \"/(\" + children.join('//') + \")\";\n    }\n}\n/**\n * Encodes a URI string with the default encoding. This function will only ever be called from\n * `encodeUriQuery` or `encodeUriSegment` as it's the base set of encodings to be used. We need\n * a custom encoding because encodeURIComponent is too aggressive and encodes stuff that doesn't\n * have to be encoded per https://url.spec.whatwg.org.\n */\nfunction encodeUriString(s) {\n    return encodeURIComponent(s)\n        .replace(/%40/g, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/g, '$')\n        .replace(/%2C/gi, ',');\n}\n/**\n * This function should be used to encode both keys and values in a query string key/value. In\n * the following URL, you need to call encodeUriQuery on \"k\" and \"v\":\n *\n * http://www.site.org/html;mk=mv?k=v#f\n */\nfunction encodeUriQuery(s) {\n    return encodeUriString(s).replace(/%3B/gi, ';');\n}\n/**\n * This function should be used to encode a URL fragment. In the following URL, you need to call\n * encodeUriFragment on \"f\":\n *\n * http://www.site.org/html;mk=mv?k=v#f\n */\nfunction encodeUriFragment(s) {\n    return encodeURI(s);\n}\n/**\n * This function should be run on any URI segment as well as the key and value in a key/value\n * pair for matrix params. In the following URL, you need to call encodeUriSegment on \"html\",\n * \"mk\", and \"mv\":\n *\n * http://www.site.org/html;mk=mv?k=v#f\n */\nfunction encodeUriSegment(s) {\n    return encodeUriString(s).replace(/\\(/g, '%28').replace(/\\)/g, '%29').replace(/%26/gi, '&');\n}\nfunction decode(s) {\n    return decodeURIComponent(s);\n}\n// Query keys/values should have the \"+\" replaced first, as \"+\" in a query string is \" \".\n// decodeURIComponent function will not decode \"+\" as a space.\nfunction decodeQuery(s) {\n    return decode(s.replace(/\\+/g, '%20'));\n}\nfunction serializePath(path) {\n    return \"\" + encodeUriSegment(path.path) + serializeMatrixParams(path.parameters);\n}\nfunction serializeMatrixParams(params) {\n    return Object.keys(params)\n        .map(function (key) { return \";\" + encodeUriSegment(key) + \"=\" + encodeUriSegment(params[key]); })\n        .join('');\n}\nfunction serializeQueryParams(params) {\n    var strParams = Object.keys(params).map(function (name) {\n        var value = params[name];\n        return Array.isArray(value) ?\n            value.map(function (v) { return encodeUriQuery(name) + \"=\" + encodeUriQuery(v); }).join('&') :\n            encodeUriQuery(name) + \"=\" + encodeUriQuery(value);\n    });\n    return strParams.length ? \"?\" + strParams.join(\"&\") : '';\n}\nvar SEGMENT_RE = /^[^\\/()?;=#]+/;\nfunction matchSegments(str) {\n    var match = str.match(SEGMENT_RE);\n    return match ? match[0] : '';\n}\nvar QUERY_PARAM_RE = /^[^=?&#]+/;\n// Return the name of the query param at the start of the string or an empty string\nfunction matchQueryParams(str) {\n    var match = str.match(QUERY_PARAM_RE);\n    return match ? match[0] : '';\n}\nvar QUERY_PARAM_VALUE_RE = /^[^?&#]+/;\n// Return the value of the query param at the start of the string or an empty string\nfunction matchUrlQueryParamValue(str) {\n    var match = str.match(QUERY_PARAM_VALUE_RE);\n    return match ? match[0] : '';\n}\nvar UrlParser = /** @class */ (function () {\n    function UrlParser(url) {\n        this.url = url;\n        this.remaining = url;\n    }\n    UrlParser.prototype.parseRootSegment = function () {\n        this.consumeOptional('/');\n        if (this.remaining === '' || this.peekStartsWith('?') || this.peekStartsWith('#')) {\n            return new UrlSegmentGroup([], {});\n        }\n        // The root segment group never has segments\n        return new UrlSegmentGroup([], this.parseChildren());\n    };\n    UrlParser.prototype.parseQueryParams = function () {\n        var params = {};\n        if (this.consumeOptional('?')) {\n            do {\n                this.parseQueryParam(params);\n            } while (this.consumeOptional('&'));\n        }\n        return params;\n    };\n    UrlParser.prototype.parseFragment = function () {\n        return this.consumeOptional('#') ? decodeURIComponent(this.remaining) : null;\n    };\n    UrlParser.prototype.parseChildren = function () {\n        if (this.remaining === '') {\n            return {};\n        }\n        this.consumeOptional('/');\n        var segments = [];\n        if (!this.peekStartsWith('(')) {\n            segments.push(this.parseSegment());\n        }\n        while (this.peekStartsWith('/') && !this.peekStartsWith('//') && !this.peekStartsWith('/(')) {\n            this.capture('/');\n            segments.push(this.parseSegment());\n        }\n        var children = {};\n        if (this.peekStartsWith('/(')) {\n            this.capture('/');\n            children = this.parseParens(true);\n        }\n        var res = {};\n        if (this.peekStartsWith('(')) {\n            res = this.parseParens(false);\n        }\n        if (segments.length > 0 || Object.keys(children).length > 0) {\n            res[PRIMARY_OUTLET] = new UrlSegmentGroup(segments, children);\n        }\n        return res;\n    };\n    // parse a segment with its matrix parameters\n    // ie `name;k1=v1;k2`\n    UrlParser.prototype.parseSegment = function () {\n        var path = matchSegments(this.remaining);\n        if (path === '' && this.peekStartsWith(';')) {\n            throw new Error(\"Empty path url segment cannot have parameters: '\" + this.remaining + \"'.\");\n        }\n        this.capture(path);\n        return new UrlSegment(decode(path), this.parseMatrixParams());\n    };\n    UrlParser.prototype.parseMatrixParams = function () {\n        var params = {};\n        while (this.consumeOptional(';')) {\n            this.parseParam(params);\n        }\n        return params;\n    };\n    UrlParser.prototype.parseParam = function (params) {\n        var key = matchSegments(this.remaining);\n        if (!key) {\n            return;\n        }\n        this.capture(key);\n        var value = '';\n        if (this.consumeOptional('=')) {\n            var valueMatch = matchSegments(this.remaining);\n            if (valueMatch) {\n                value = valueMatch;\n                this.capture(value);\n            }\n        }\n        params[decode(key)] = decode(value);\n    };\n    // Parse a single query parameter `name[=value]`\n    UrlParser.prototype.parseQueryParam = function (params) {\n        var key = matchQueryParams(this.remaining);\n        if (!key) {\n            return;\n        }\n        this.capture(key);\n        var value = '';\n        if (this.consumeOptional('=')) {\n            var valueMatch = matchUrlQueryParamValue(this.remaining);\n            if (valueMatch) {\n                value = valueMatch;\n                this.capture(value);\n            }\n        }\n        var decodedKey = decodeQuery(key);\n        var decodedVal = decodeQuery(value);\n        if (params.hasOwnProperty(decodedKey)) {\n            // Append to existing values\n            var currentVal = params[decodedKey];\n            if (!Array.isArray(currentVal)) {\n                currentVal = [currentVal];\n                params[decodedKey] = currentVal;\n            }\n            currentVal.push(decodedVal);\n        }\n        else {\n            // Create a new value\n            params[decodedKey] = decodedVal;\n        }\n    };\n    // parse `(a/b//outlet_name:c/d)`\n    UrlParser.prototype.parseParens = function (allowPrimary) {\n        var segments = {};\n        this.capture('(');\n        while (!this.consumeOptional(')') && this.remaining.length > 0) {\n            var path = matchSegments(this.remaining);\n            var next = this.remaining[path.length];\n            // if is is not one of these characters, then the segment was unescaped\n            // or the group was not closed\n            if (next !== '/' && next !== ')' && next !== ';') {\n                throw new Error(\"Cannot parse url '\" + this.url + \"'\");\n            }\n            var outletName = undefined;\n            if (path.indexOf(':') > -1) {\n                outletName = path.substr(0, path.indexOf(':'));\n                this.capture(outletName);\n                this.capture(':');\n            }\n            else if (allowPrimary) {\n                outletName = PRIMARY_OUTLET;\n            }\n            var children = this.parseChildren();\n            segments[outletName] = Object.keys(children).length === 1 ? children[PRIMARY_OUTLET] :\n                new UrlSegmentGroup([], children);\n            this.consumeOptional('//');\n        }\n        return segments;\n    };\n    UrlParser.prototype.peekStartsWith = function (str) { return this.remaining.startsWith(str); };\n    // Consumes the prefix when it is present and returns whether it has been consumed\n    UrlParser.prototype.consumeOptional = function (str) {\n        if (this.peekStartsWith(str)) {\n            this.remaining = this.remaining.substring(str.length);\n            return true;\n        }\n        return false;\n    };\n    UrlParser.prototype.capture = function (str) {\n        if (!this.consumeOptional(str)) {\n            throw new Error(\"Expected \\\"\" + str + \"\\\".\");\n        }\n    };\n    return UrlParser;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NoMatch = /** @class */ (function () {\n    function NoMatch(segmentGroup) {\n        this.segmentGroup = segmentGroup || null;\n    }\n    return NoMatch;\n}());\nvar AbsoluteRedirect = /** @class */ (function () {\n    function AbsoluteRedirect(urlTree) {\n        this.urlTree = urlTree;\n    }\n    return AbsoluteRedirect;\n}());\nfunction noMatch(segmentGroup) {\n    return new rxjs.Observable(function (obs) { return obs.error(new NoMatch(segmentGroup)); });\n}\nfunction absoluteRedirect(newTree) {\n    return new rxjs.Observable(function (obs) { return obs.error(new AbsoluteRedirect(newTree)); });\n}\nfunction namedOutletsRedirect(redirectTo) {\n    return new rxjs.Observable(function (obs) { return obs.error(new Error(\"Only absolute redirects can have named outlets. redirectTo: '\" + redirectTo + \"'\")); });\n}\nfunction canLoadFails(route) {\n    return new rxjs.Observable(function (obs) { return obs.error(navigationCancelingError(\"Cannot load children because the guard of the route \\\"path: '\" + route.path + \"'\\\" returned false\")); });\n}\n/**\n * Returns the `UrlTree` with the redirection applied.\n *\n * Lazy modules are loaded along the way.\n */\nfunction applyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config) {\n    return new ApplyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config).apply();\n}\nvar ApplyRedirects = /** @class */ (function () {\n    function ApplyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config) {\n        this.configLoader = configLoader;\n        this.urlSerializer = urlSerializer;\n        this.urlTree = urlTree;\n        this.config = config;\n        this.allowRedirects = true;\n        this.ngModule = moduleInjector.get(core.NgModuleRef);\n    }\n    ApplyRedirects.prototype.apply = function () {\n        var _this = this;\n        var expanded$ = this.expandSegmentGroup(this.ngModule, this.config, this.urlTree.root, PRIMARY_OUTLET);\n        var urlTrees$ = expanded$.pipe(operators.map(function (rootSegmentGroup) { return _this.createUrlTree(rootSegmentGroup, _this.urlTree.queryParams, _this.urlTree.fragment); }));\n        return urlTrees$.pipe(operators.catchError(function (e) {\n            if (e instanceof AbsoluteRedirect) {\n                // after an absolute redirect we do not apply any more redirects!\n                _this.allowRedirects = false;\n                // we need to run matching, so we can fetch all lazy-loaded modules\n                return _this.match(e.urlTree);\n            }\n            if (e instanceof NoMatch) {\n                throw _this.noMatchError(e);\n            }\n            throw e;\n        }));\n    };\n    ApplyRedirects.prototype.match = function (tree) {\n        var _this = this;\n        var expanded$ = this.expandSegmentGroup(this.ngModule, this.config, tree.root, PRIMARY_OUTLET);\n        var mapped$ = expanded$.pipe(operators.map(function (rootSegmentGroup) {\n            return _this.createUrlTree(rootSegmentGroup, tree.queryParams, tree.fragment);\n        }));\n        return mapped$.pipe(operators.catchError(function (e) {\n            if (e instanceof NoMatch) {\n                throw _this.noMatchError(e);\n            }\n            throw e;\n        }));\n    };\n    ApplyRedirects.prototype.noMatchError = function (e) {\n        return new Error(\"Cannot match any routes. URL Segment: '\" + e.segmentGroup + \"'\");\n    };\n    ApplyRedirects.prototype.createUrlTree = function (rootCandidate, queryParams, fragment) {\n        var root = rootCandidate.segments.length > 0 ?\n            new UrlSegmentGroup([], (_a = {}, _a[PRIMARY_OUTLET] = rootCandidate, _a)) :\n            rootCandidate;\n        return new UrlTree(root, queryParams, fragment);\n        var _a;\n    };\n    ApplyRedirects.prototype.expandSegmentGroup = function (ngModule, routes, segmentGroup, outlet) {\n        if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n            return this.expandChildren(ngModule, routes, segmentGroup)\n                .pipe(operators.map(function (children) { return new UrlSegmentGroup([], children); }));\n        }\n        return this.expandSegment(ngModule, segmentGroup, routes, segmentGroup.segments, outlet, true);\n    };\n    // Recursively expand segment groups for all the child outlets\n    ApplyRedirects.prototype.expandChildren = function (ngModule, routes, segmentGroup) {\n        var _this = this;\n        return waitForMap(segmentGroup.children, function (childOutlet, child) { return _this.expandSegmentGroup(ngModule, routes, child, childOutlet); });\n    };\n    ApplyRedirects.prototype.expandSegment = function (ngModule, segmentGroup, routes, segments, outlet, allowRedirects) {\n        var _this = this;\n        return rxjs.of.apply(void 0, __spread(routes)).pipe(operators.map(function (r) {\n            var expanded$ = _this.expandSegmentAgainstRoute(ngModule, segmentGroup, routes, r, segments, outlet, allowRedirects);\n            return expanded$.pipe(operators.catchError(function (e) {\n                if (e instanceof NoMatch) {\n                    // TODO(i): this return type doesn't match the declared Observable<UrlSegmentGroup> -\n                    // talk to Jason\n                    return rxjs.of(null);\n                }\n                throw e;\n            }));\n        }), operators.concatAll(), operators.first(function (s) { return !!s; }), operators.catchError(function (e, _) {\n            if (e instanceof rxjs.EmptyError || e.name === 'EmptyError') {\n                if (_this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n                    return rxjs.of(new UrlSegmentGroup([], {}));\n                }\n                throw new NoMatch(segmentGroup);\n            }\n            throw e;\n        }));\n    };\n    ApplyRedirects.prototype.noLeftoversInUrl = function (segmentGroup, segments, outlet) {\n        return segments.length === 0 && !segmentGroup.children[outlet];\n    };\n    ApplyRedirects.prototype.expandSegmentAgainstRoute = function (ngModule, segmentGroup, routes, route, paths, outlet, allowRedirects) {\n        if (getOutlet(route) !== outlet) {\n            return noMatch(segmentGroup);\n        }\n        if (route.redirectTo === undefined) {\n            return this.matchSegmentAgainstRoute(ngModule, segmentGroup, route, paths);\n        }\n        if (allowRedirects && this.allowRedirects) {\n            return this.expandSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, paths, outlet);\n        }\n        return noMatch(segmentGroup);\n    };\n    ApplyRedirects.prototype.expandSegmentAgainstRouteUsingRedirect = function (ngModule, segmentGroup, routes, route, segments, outlet) {\n        if (route.path === '**') {\n            return this.expandWildCardWithParamsAgainstRouteUsingRedirect(ngModule, routes, route, outlet);\n        }\n        return this.expandRegularSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, segments, outlet);\n    };\n    ApplyRedirects.prototype.expandWildCardWithParamsAgainstRouteUsingRedirect = function (ngModule, routes, route, outlet) {\n        var _this = this;\n        var newTree = this.applyRedirectCommands([], route.redirectTo, {});\n        if (route.redirectTo.startsWith('/')) {\n            return absoluteRedirect(newTree);\n        }\n        return this.lineralizeSegments(route, newTree).pipe(operators.mergeMap(function (newSegments) {\n            var group = new UrlSegmentGroup(newSegments, {});\n            return _this.expandSegment(ngModule, group, routes, newSegments, outlet, false);\n        }));\n    };\n    ApplyRedirects.prototype.expandRegularSegmentAgainstRouteUsingRedirect = function (ngModule, segmentGroup, routes, route, segments, outlet) {\n        var _this = this;\n        var _a = match(segmentGroup, route, segments), matched = _a.matched, consumedSegments = _a.consumedSegments, lastChild = _a.lastChild, positionalParamSegments = _a.positionalParamSegments;\n        if (!matched)\n            return noMatch(segmentGroup);\n        var newTree = this.applyRedirectCommands(consumedSegments, route.redirectTo, positionalParamSegments);\n        if (route.redirectTo.startsWith('/')) {\n            return absoluteRedirect(newTree);\n        }\n        return this.lineralizeSegments(route, newTree).pipe(operators.mergeMap(function (newSegments) {\n            return _this.expandSegment(ngModule, segmentGroup, routes, newSegments.concat(segments.slice(lastChild)), outlet, false);\n        }));\n    };\n    ApplyRedirects.prototype.matchSegmentAgainstRoute = function (ngModule, rawSegmentGroup, route, segments) {\n        var _this = this;\n        if (route.path === '**') {\n            if (route.loadChildren) {\n                return this.configLoader.load(ngModule.injector, route)\n                    .pipe(operators.map(function (cfg) {\n                    route._loadedConfig = cfg;\n                    return new UrlSegmentGroup(segments, {});\n                }));\n            }\n            return rxjs.of(new UrlSegmentGroup(segments, {}));\n        }\n        var _a = match(rawSegmentGroup, route, segments), matched = _a.matched, consumedSegments = _a.consumedSegments, lastChild = _a.lastChild;\n        if (!matched)\n            return noMatch(rawSegmentGroup);\n        var rawSlicedSegments = segments.slice(lastChild);\n        var childConfig$ = this.getChildConfig(ngModule, route);\n        return childConfig$.pipe(operators.mergeMap(function (routerConfig) {\n            var childModule = routerConfig.module;\n            var childConfig = routerConfig.routes;\n            var _a = split(rawSegmentGroup, consumedSegments, rawSlicedSegments, childConfig), segmentGroup = _a.segmentGroup, slicedSegments = _a.slicedSegments;\n            if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n                var expanded$_1 = _this.expandChildren(childModule, childConfig, segmentGroup);\n                return expanded$_1.pipe(operators.map(function (children) { return new UrlSegmentGroup(consumedSegments, children); }));\n            }\n            if (childConfig.length === 0 && slicedSegments.length === 0) {\n                return rxjs.of(new UrlSegmentGroup(consumedSegments, {}));\n            }\n            var expanded$ = _this.expandSegment(childModule, segmentGroup, childConfig, slicedSegments, PRIMARY_OUTLET, true);\n            return expanded$.pipe(operators.map(function (cs) {\n                return new UrlSegmentGroup(consumedSegments.concat(cs.segments), cs.children);\n            }));\n        }));\n    };\n    ApplyRedirects.prototype.getChildConfig = function (ngModule, route) {\n        var _this = this;\n        if (route.children) {\n            // The children belong to the same module\n            return rxjs.of(new LoadedRouterConfig(route.children, ngModule));\n        }\n        if (route.loadChildren) {\n            // lazy children belong to the loaded module\n            if (route._loadedConfig !== undefined) {\n                return rxjs.of(route._loadedConfig);\n            }\n            return runCanLoadGuard(ngModule.injector, route).pipe(operators.mergeMap(function (shouldLoad) {\n                if (shouldLoad) {\n                    return _this.configLoader.load(ngModule.injector, route)\n                        .pipe(operators.map(function (cfg) {\n                        route._loadedConfig = cfg;\n                        return cfg;\n                    }));\n                }\n                return canLoadFails(route);\n            }));\n        }\n        return rxjs.of(new LoadedRouterConfig([], ngModule));\n    };\n    ApplyRedirects.prototype.lineralizeSegments = function (route, urlTree) {\n        var res = [];\n        var c = urlTree.root;\n        while (true) {\n            res = res.concat(c.segments);\n            if (c.numberOfChildren === 0) {\n                return rxjs.of(res);\n            }\n            if (c.numberOfChildren > 1 || !c.children[PRIMARY_OUTLET]) {\n                return namedOutletsRedirect(route.redirectTo);\n            }\n            c = c.children[PRIMARY_OUTLET];\n        }\n    };\n    ApplyRedirects.prototype.applyRedirectCommands = function (segments, redirectTo, posParams) {\n        return this.applyRedirectCreatreUrlTree(redirectTo, this.urlSerializer.parse(redirectTo), segments, posParams);\n    };\n    ApplyRedirects.prototype.applyRedirectCreatreUrlTree = function (redirectTo, urlTree, segments, posParams) {\n        var newRoot = this.createSegmentGroup(redirectTo, urlTree.root, segments, posParams);\n        return new UrlTree(newRoot, this.createQueryParams(urlTree.queryParams, this.urlTree.queryParams), urlTree.fragment);\n    };\n    ApplyRedirects.prototype.createQueryParams = function (redirectToParams, actualParams) {\n        var res = {};\n        forEach(redirectToParams, function (v, k) {\n            var copySourceValue = typeof v === 'string' && v.startsWith(':');\n            if (copySourceValue) {\n                var sourceName = v.substring(1);\n                res[k] = actualParams[sourceName];\n            }\n            else {\n                res[k] = v;\n            }\n        });\n        return res;\n    };\n    ApplyRedirects.prototype.createSegmentGroup = function (redirectTo, group, segments, posParams) {\n        var _this = this;\n        var updatedSegments = this.createSegments(redirectTo, group.segments, segments, posParams);\n        var children = {};\n        forEach(group.children, function (child, name) {\n            children[name] = _this.createSegmentGroup(redirectTo, child, segments, posParams);\n        });\n        return new UrlSegmentGroup(updatedSegments, children);\n    };\n    ApplyRedirects.prototype.createSegments = function (redirectTo, redirectToSegments, actualSegments, posParams) {\n        var _this = this;\n        return redirectToSegments.map(function (s) { return s.path.startsWith(':') ? _this.findPosParam(redirectTo, s, posParams) :\n            _this.findOrReturn(s, actualSegments); });\n    };\n    ApplyRedirects.prototype.findPosParam = function (redirectTo, redirectToUrlSegment, posParams) {\n        var pos = posParams[redirectToUrlSegment.path.substring(1)];\n        if (!pos)\n            throw new Error(\"Cannot redirect to '\" + redirectTo + \"'. Cannot find '\" + redirectToUrlSegment.path + \"'.\");\n        return pos;\n    };\n    ApplyRedirects.prototype.findOrReturn = function (redirectToUrlSegment, actualSegments) {\n        var idx = 0;\n        try {\n            for (var actualSegments_1 = __values(actualSegments), actualSegments_1_1 = actualSegments_1.next(); !actualSegments_1_1.done; actualSegments_1_1 = actualSegments_1.next()) {\n                var s = actualSegments_1_1.value;\n                if (s.path === redirectToUrlSegment.path) {\n                    actualSegments.splice(idx);\n                    return s;\n                }\n                idx++;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (actualSegments_1_1 && !actualSegments_1_1.done && (_a = actualSegments_1.return)) _a.call(actualSegments_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return redirectToUrlSegment;\n        var e_1, _a;\n    };\n    return ApplyRedirects;\n}());\nfunction runCanLoadGuard(moduleInjector, route) {\n    var canLoad = route.canLoad;\n    if (!canLoad || canLoad.length === 0)\n        return rxjs.of(true);\n    var obs = rxjs.from(canLoad).pipe(operators.map(function (injectionToken) {\n        var guard = moduleInjector.get(injectionToken);\n        return wrapIntoObservable(guard.canLoad ? guard.canLoad(route) : guard(route));\n    }));\n    return andObservables(obs);\n}\nfunction match(segmentGroup, route, segments) {\n    if (route.path === '') {\n        if ((route.pathMatch === 'full') && (segmentGroup.hasChildren() || segments.length > 0)) {\n            return { matched: false, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n        }\n        return { matched: true, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n    }\n    var matcher = route.matcher || defaultUrlMatcher;\n    var res = matcher(segments, segmentGroup, route);\n    if (!res) {\n        return {\n            matched: false,\n            consumedSegments: [],\n            lastChild: 0,\n            positionalParamSegments: {},\n        };\n    }\n    return {\n        matched: true,\n        consumedSegments: res.consumed,\n        lastChild: res.consumed.length,\n        positionalParamSegments: res.posParams,\n    };\n}\nfunction split(segmentGroup, consumedSegments, slicedSegments, config) {\n    if (slicedSegments.length > 0 &&\n        containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n        var s = new UrlSegmentGroup(consumedSegments, createChildrenForEmptySegments(config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n        return { segmentGroup: mergeTrivialChildren(s), slicedSegments: [] };\n    }\n    if (slicedSegments.length === 0 &&\n        containsEmptyPathRedirects(segmentGroup, slicedSegments, config)) {\n        var s = new UrlSegmentGroup(segmentGroup.segments, addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, config, segmentGroup.children));\n        return { segmentGroup: mergeTrivialChildren(s), slicedSegments: slicedSegments };\n    }\n    return { segmentGroup: segmentGroup, slicedSegments: slicedSegments };\n}\nfunction mergeTrivialChildren(s) {\n    if (s.numberOfChildren === 1 && s.children[PRIMARY_OUTLET]) {\n        var c = s.children[PRIMARY_OUTLET];\n        return new UrlSegmentGroup(s.segments.concat(c.segments), c.children);\n    }\n    return s;\n}\nfunction addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, routes, children) {\n    var res = {};\n    try {\n        for (var routes_1 = __values(routes), routes_1_1 = routes_1.next(); !routes_1_1.done; routes_1_1 = routes_1.next()) {\n            var r = routes_1_1.value;\n            if (isEmptyPathRedirect(segmentGroup, slicedSegments, r) && !children[getOutlet(r)]) {\n                res[getOutlet(r)] = new UrlSegmentGroup([], {});\n            }\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (routes_1_1 && !routes_1_1.done && (_a = routes_1.return)) _a.call(routes_1);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    return __assign({}, children, res);\n    var e_2, _a;\n}\nfunction createChildrenForEmptySegments(routes, primarySegmentGroup) {\n    var res = {};\n    res[PRIMARY_OUTLET] = primarySegmentGroup;\n    try {\n        for (var routes_2 = __values(routes), routes_2_1 = routes_2.next(); !routes_2_1.done; routes_2_1 = routes_2.next()) {\n            var r = routes_2_1.value;\n            if (r.path === '' && getOutlet(r) !== PRIMARY_OUTLET) {\n                res[getOutlet(r)] = new UrlSegmentGroup([], {});\n            }\n        }\n    }\n    catch (e_3_1) { e_3 = { error: e_3_1 }; }\n    finally {\n        try {\n            if (routes_2_1 && !routes_2_1.done && (_a = routes_2.return)) _a.call(routes_2);\n        }\n        finally { if (e_3) throw e_3.error; }\n    }\n    return res;\n    var e_3, _a;\n}\nfunction containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, segments, routes) {\n    return routes.some(function (r) { return isEmptyPathRedirect(segmentGroup, segments, r) && getOutlet(r) !== PRIMARY_OUTLET; });\n}\nfunction containsEmptyPathRedirects(segmentGroup, segments, routes) {\n    return routes.some(function (r) { return isEmptyPathRedirect(segmentGroup, segments, r); });\n}\nfunction isEmptyPathRedirect(segmentGroup, segments, r) {\n    if ((segmentGroup.hasChildren() || segments.length > 0) && r.pathMatch === 'full') {\n        return false;\n    }\n    return r.path === '' && r.redirectTo !== undefined;\n}\nfunction getOutlet(route) {\n    return route.outlet || PRIMARY_OUTLET;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Tree = /** @class */ (function () {\n    function Tree(root) {\n        this._root = root;\n    }\n    Object.defineProperty(Tree.prototype, \"root\", {\n        get: function () { return this._root.value; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @internal\n     */\n    Tree.prototype.parent = function (t) {\n        var p = this.pathFromRoot(t);\n        return p.length > 1 ? p[p.length - 2] : null;\n    };\n    /**\n     * @internal\n     */\n    Tree.prototype.children = function (t) {\n        var n = findNode(t, this._root);\n        return n ? n.children.map(function (t) { return t.value; }) : [];\n    };\n    /**\n     * @internal\n     */\n    Tree.prototype.firstChild = function (t) {\n        var n = findNode(t, this._root);\n        return n && n.children.length > 0 ? n.children[0].value : null;\n    };\n    /**\n     * @internal\n     */\n    Tree.prototype.siblings = function (t) {\n        var p = findPath(t, this._root);\n        if (p.length < 2)\n            return [];\n        var c = p[p.length - 2].children.map(function (c) { return c.value; });\n        return c.filter(function (cc) { return cc !== t; });\n    };\n    /**\n     * @internal\n     */\n    Tree.prototype.pathFromRoot = function (t) { return findPath(t, this._root).map(function (s) { return s.value; }); };\n    return Tree;\n}());\n// DFS for the node matching the value\nfunction findNode(value, node) {\n    if (value === node.value)\n        return node;\n    try {\n        for (var _a = __values(node.children), _b = _a.next(); !_b.done; _b = _a.next()) {\n            var child = _b.value;\n            var node_1 = findNode(value, child);\n            if (node_1)\n                return node_1;\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return null;\n    var e_1, _c;\n}\n// Return the path to the node with the given value using DFS\nfunction findPath(value, node) {\n    if (value === node.value)\n        return [node];\n    try {\n        for (var _a = __values(node.children), _b = _a.next(); !_b.done; _b = _a.next()) {\n            var child = _b.value;\n            var path = findPath(value, child);\n            if (path.length) {\n                path.unshift(node);\n                return path;\n            }\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    return [];\n    var e_2, _c;\n}\nvar TreeNode = /** @class */ (function () {\n    function TreeNode(value, children) {\n        this.value = value;\n        this.children = children;\n    }\n    TreeNode.prototype.toString = function () { return \"TreeNode(\" + this.value + \")\"; };\n    return TreeNode;\n}());\n// Return the list of T indexed by outlet name\nfunction nodeChildrenAsMap(node) {\n    var map$$1 = {};\n    if (node) {\n        node.children.forEach(function (child) { return map$$1[child.value.outlet] = child; });\n    }\n    return map$$1;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Represents the state of the router.\n *\n * RouterState is a tree of activated routes. Every node in this tree knows about the \"consumed\" URL\n * segments, the extracted parameters, and the resolved data.\n *\n * ### Example\n *\n * ```\n * @Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const state: RouterState = router.routerState;\n *     const root: ActivatedRoute = state.root;\n *     const child = root.firstChild;\n *     const id: Observable<string> = child.params.map(p => p.id);\n *     //...\n *   }\n * }\n * ```\n *\n * See `ActivatedRoute` for more information.\n *\n *\n */\nvar RouterState = /** @class */ (function (_super) {\n    __extends(RouterState, _super);\n    /** @internal */\n    function RouterState(root, \n    /** The current snapshot of the router state */\n    snapshot) {\n        var _this = _super.call(this, root) || this;\n        _this.snapshot = snapshot;\n        setRouterState(_this, root);\n        return _this;\n    }\n    RouterState.prototype.toString = function () { return this.snapshot.toString(); };\n    return RouterState;\n}(Tree));\nfunction createEmptyState(urlTree, rootComponent) {\n    var snapshot = createEmptyStateSnapshot(urlTree, rootComponent);\n    var emptyUrl = new rxjs.BehaviorSubject([new UrlSegment('', {})]);\n    var emptyParams = new rxjs.BehaviorSubject({});\n    var emptyData = new rxjs.BehaviorSubject({});\n    var emptyQueryParams = new rxjs.BehaviorSubject({});\n    var fragment = new rxjs.BehaviorSubject('');\n    var activated = new ActivatedRoute(emptyUrl, emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, snapshot.root);\n    activated.snapshot = snapshot.root;\n    return new RouterState(new TreeNode(activated, []), snapshot);\n}\nfunction createEmptyStateSnapshot(urlTree, rootComponent) {\n    var emptyParams = {};\n    var emptyData = {};\n    var emptyQueryParams = {};\n    var fragment = '';\n    var activated = new ActivatedRouteSnapshot([], emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, null, urlTree.root, -1, {});\n    return new RouterStateSnapshot('', new TreeNode(activated, []));\n}\n/**\n * @description\n *\n * Contains the information about a route associated with a component loaded in an\n * outlet.  An `ActivatedRoute` can also be used to traverse the router state tree.\n *\n * ```\n * @Component({...})\n * class MyComponent {\n *   constructor(route: ActivatedRoute) {\n *     const id: Observable<string> = route.params.map(p => p.id);\n *     const url: Observable<string> = route.url.map(segments => segments.join(''));\n *     // route.data includes both `data` and `resolve`\n *     const user = route.data.map(d => d.user);\n *   }\n * }\n * ```\n *\n *\n */\nvar ActivatedRoute = /** @class */ (function () {\n    /** @internal */\n    function ActivatedRoute(\n    /** An observable of the URL segments matched by this route */\n    url, \n    /** An observable of the matrix parameters scoped to this route */\n    params, \n    /** An observable of the query parameters shared by all the routes */\n    queryParams, \n    /** An observable of the URL fragment shared by all the routes */\n    fragment, \n    /** An observable of the static and resolved data of this route. */\n    data, \n    /** The outlet name of the route. It's a constant */\n    outlet, \n    /** The component of the route. It's a constant */\n    // TODO(vsavkin): remove |string\n    component, futureSnapshot) {\n        this.url = url;\n        this.params = params;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n        this.data = data;\n        this.outlet = outlet;\n        this.component = component;\n        this._futureSnapshot = futureSnapshot;\n    }\n    Object.defineProperty(ActivatedRoute.prototype, \"routeConfig\", {\n        /** The configuration used to match this route */\n        get: function () { return this._futureSnapshot.routeConfig; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"root\", {\n        /** The root of the router state */\n        get: function () { return this._routerState.root; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"parent\", {\n        /** The parent of this route in the router state tree */\n        get: function () { return this._routerState.parent(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"firstChild\", {\n        /** The first child of this route in the router state tree */\n        get: function () { return this._routerState.firstChild(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"children\", {\n        /** The children of this route in the router state tree */\n        get: function () { return this._routerState.children(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"pathFromRoot\", {\n        /** The path from the root of the router state tree to this route */\n        get: function () { return this._routerState.pathFromRoot(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"paramMap\", {\n        get: function () {\n            if (!this._paramMap) {\n                this._paramMap = this.params.pipe(operators.map(function (p) { return convertToParamMap(p); }));\n            }\n            return this._paramMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"queryParamMap\", {\n        get: function () {\n            if (!this._queryParamMap) {\n                this._queryParamMap =\n                    this.queryParams.pipe(operators.map(function (p) { return convertToParamMap(p); }));\n            }\n            return this._queryParamMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ActivatedRoute.prototype.toString = function () {\n        return this.snapshot ? this.snapshot.toString() : \"Future(\" + this._futureSnapshot + \")\";\n    };\n    return ActivatedRoute;\n}());\n/**\n * Returns the inherited params, data, and resolve for a given route.\n * By default, this only inherits values up to the nearest path-less or component-less route.\n * @internal\n */\nfunction inheritedParamsDataResolve(route, paramsInheritanceStrategy) {\n    if (paramsInheritanceStrategy === void 0) { paramsInheritanceStrategy = 'emptyOnly'; }\n    var pathFromRoot = route.pathFromRoot;\n    var inheritingStartingFrom = 0;\n    if (paramsInheritanceStrategy !== 'always') {\n        inheritingStartingFrom = pathFromRoot.length - 1;\n        while (inheritingStartingFrom >= 1) {\n            var current = pathFromRoot[inheritingStartingFrom];\n            var parent_1 = pathFromRoot[inheritingStartingFrom - 1];\n            // current route is an empty path => inherits its parent's params and data\n            if (current.routeConfig && current.routeConfig.path === '') {\n                inheritingStartingFrom--;\n                // parent is componentless => current route should inherit its params and data\n            }\n            else if (!parent_1.component) {\n                inheritingStartingFrom--;\n            }\n            else {\n                break;\n            }\n        }\n    }\n    return flattenInherited(pathFromRoot.slice(inheritingStartingFrom));\n}\n/** @internal */\nfunction flattenInherited(pathFromRoot) {\n    return pathFromRoot.reduce(function (res, curr) {\n        var params = __assign({}, res.params, curr.params);\n        var data = __assign({}, res.data, curr.data);\n        var resolve = __assign({}, res.resolve, curr._resolvedData);\n        return { params: params, data: data, resolve: resolve };\n    }, { params: {}, data: {}, resolve: {} });\n}\n/**\n * @description\n *\n * Contains the information about a route associated with a component loaded in an\n * outlet at a particular moment in time. ActivatedRouteSnapshot can also be used to\n * traverse the router state tree.\n *\n * ```\n * @Component({templateUrl:'./my-component.html'})\n * class MyComponent {\n *   constructor(route: ActivatedRoute) {\n *     const id: string = route.snapshot.params.id;\n *     const url: string = route.snapshot.url.join('');\n *     const user = route.snapshot.data.user;\n *   }\n * }\n * ```\n *\n *\n */\nvar ActivatedRouteSnapshot = /** @class */ (function () {\n    /** @internal */\n    function ActivatedRouteSnapshot(\n    /** The URL segments matched by this route */\n    url, \n    /** The matrix parameters scoped to this route */\n    params, \n    /** The query parameters shared by all the routes */\n    queryParams, \n    /** The URL fragment shared by all the routes */\n    fragment, \n    /** The static and resolved data of this route */\n    data, \n    /** The outlet name of the route */\n    outlet, \n    /** The component of the route */\n    component, routeConfig, urlSegment, lastPathIndex, resolve) {\n        this.url = url;\n        this.params = params;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n        this.data = data;\n        this.outlet = outlet;\n        this.component = component;\n        this.routeConfig = routeConfig;\n        this._urlSegment = urlSegment;\n        this._lastPathIndex = lastPathIndex;\n        this._resolve = resolve;\n    }\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"root\", {\n        /** The root of the router state */\n        get: function () { return this._routerState.root; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"parent\", {\n        /** The parent of this route in the router state tree */\n        get: function () { return this._routerState.parent(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"firstChild\", {\n        /** The first child of this route in the router state tree */\n        get: function () { return this._routerState.firstChild(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"children\", {\n        /** The children of this route in the router state tree */\n        get: function () { return this._routerState.children(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"pathFromRoot\", {\n        /** The path from the root of the router state tree to this route */\n        get: function () { return this._routerState.pathFromRoot(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"paramMap\", {\n        get: function () {\n            if (!this._paramMap) {\n                this._paramMap = convertToParamMap(this.params);\n            }\n            return this._paramMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"queryParamMap\", {\n        get: function () {\n            if (!this._queryParamMap) {\n                this._queryParamMap = convertToParamMap(this.queryParams);\n            }\n            return this._queryParamMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ActivatedRouteSnapshot.prototype.toString = function () {\n        var url = this.url.map(function (segment) { return segment.toString(); }).join('/');\n        var matched = this.routeConfig ? this.routeConfig.path : '';\n        return \"Route(url:'\" + url + \"', path:'\" + matched + \"')\";\n    };\n    return ActivatedRouteSnapshot;\n}());\n/**\n * @description\n *\n * Represents the state of the router at a moment in time.\n *\n * This is a tree of activated route snapshots. Every node in this tree knows about\n * the \"consumed\" URL segments, the extracted parameters, and the resolved data.\n *\n * ### Example\n *\n * ```\n * @Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const state: RouterState = router.routerState;\n *     const snapshot: RouterStateSnapshot = state.snapshot;\n *     const root: ActivatedRouteSnapshot = snapshot.root;\n *     const child = root.firstChild;\n *     const id: Observable<string> = child.params.map(p => p.id);\n *     //...\n *   }\n * }\n * ```\n *\n *\n */\nvar RouterStateSnapshot = /** @class */ (function (_super) {\n    __extends(RouterStateSnapshot, _super);\n    /** @internal */\n    function RouterStateSnapshot(\n    /** The url from which this snapshot was created */\n    url, root) {\n        var _this = _super.call(this, root) || this;\n        _this.url = url;\n        setRouterState(_this, root);\n        return _this;\n    }\n    RouterStateSnapshot.prototype.toString = function () { return serializeNode(this._root); };\n    return RouterStateSnapshot;\n}(Tree));\nfunction setRouterState(state, node) {\n    node.value._routerState = state;\n    node.children.forEach(function (c) { return setRouterState(state, c); });\n}\nfunction serializeNode(node) {\n    var c = node.children.length > 0 ? \" { \" + node.children.map(serializeNode).join(', ') + \" } \" : '';\n    return \"\" + node.value + c;\n}\n/**\n * The expectation is that the activate route is created with the right set of parameters.\n * So we push new values into the observables only when they are not the initial values.\n * And we detect that by checking if the snapshot field is set.\n */\nfunction advanceActivatedRoute(route) {\n    if (route.snapshot) {\n        var currentSnapshot = route.snapshot;\n        var nextSnapshot = route._futureSnapshot;\n        route.snapshot = nextSnapshot;\n        if (!shallowEqual(currentSnapshot.queryParams, nextSnapshot.queryParams)) {\n            route.queryParams.next(nextSnapshot.queryParams);\n        }\n        if (currentSnapshot.fragment !== nextSnapshot.fragment) {\n            route.fragment.next(nextSnapshot.fragment);\n        }\n        if (!shallowEqual(currentSnapshot.params, nextSnapshot.params)) {\n            route.params.next(nextSnapshot.params);\n        }\n        if (!shallowEqualArrays(currentSnapshot.url, nextSnapshot.url)) {\n            route.url.next(nextSnapshot.url);\n        }\n        if (!shallowEqual(currentSnapshot.data, nextSnapshot.data)) {\n            route.data.next(nextSnapshot.data);\n        }\n    }\n    else {\n        route.snapshot = route._futureSnapshot;\n        // this is for resolved data\n        route.data.next(route._futureSnapshot.data);\n    }\n}\nfunction equalParamsAndUrlSegments(a, b) {\n    var equalUrlParams = shallowEqual(a.params, b.params) && equalSegments(a.url, b.url);\n    var parentsMismatch = !a.parent !== !b.parent;\n    return equalUrlParams && !parentsMismatch &&\n        (!a.parent || equalParamsAndUrlSegments(a.parent, b.parent));\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction createRouterState(routeReuseStrategy, curr, prevState) {\n    var root = createNode(routeReuseStrategy, curr._root, prevState ? prevState._root : undefined);\n    return new RouterState(root, curr);\n}\nfunction createNode(routeReuseStrategy, curr, prevState) {\n    // reuse an activated route that is currently displayed on the screen\n    if (prevState && routeReuseStrategy.shouldReuseRoute(curr.value, prevState.value.snapshot)) {\n        var value = prevState.value;\n        value._futureSnapshot = curr.value;\n        var children = createOrReuseChildren(routeReuseStrategy, curr, prevState);\n        return new TreeNode(value, children);\n        // retrieve an activated route that is used to be displayed, but is not currently displayed\n    }\n    else {\n        var detachedRouteHandle = routeReuseStrategy.retrieve(curr.value);\n        if (detachedRouteHandle) {\n            var tree = detachedRouteHandle.route;\n            setFutureSnapshotsOfActivatedRoutes(curr, tree);\n            return tree;\n        }\n        else {\n            var value = createActivatedRoute(curr.value);\n            var children = curr.children.map(function (c) { return createNode(routeReuseStrategy, c); });\n            return new TreeNode(value, children);\n        }\n    }\n}\nfunction setFutureSnapshotsOfActivatedRoutes(curr, result) {\n    if (curr.value.routeConfig !== result.value.routeConfig) {\n        throw new Error('Cannot reattach ActivatedRouteSnapshot created from a different route');\n    }\n    if (curr.children.length !== result.children.length) {\n        throw new Error('Cannot reattach ActivatedRouteSnapshot with a different number of children');\n    }\n    result.value._futureSnapshot = curr.value;\n    for (var i = 0; i < curr.children.length; ++i) {\n        setFutureSnapshotsOfActivatedRoutes(curr.children[i], result.children[i]);\n    }\n}\nfunction createOrReuseChildren(routeReuseStrategy, curr, prevState) {\n    return curr.children.map(function (child) {\n        try {\n            for (var _a = __values(prevState.children), _b = _a.next(); !_b.done; _b = _a.next()) {\n                var p = _b.value;\n                if (routeReuseStrategy.shouldReuseRoute(p.value.snapshot, child.value)) {\n                    return createNode(routeReuseStrategy, child, p);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return createNode(routeReuseStrategy, child);\n        var e_1, _c;\n    });\n}\nfunction createActivatedRoute(c) {\n    return new ActivatedRoute(new rxjs.BehaviorSubject(c.url), new rxjs.BehaviorSubject(c.params), new rxjs.BehaviorSubject(c.queryParams), new rxjs.BehaviorSubject(c.fragment), new rxjs.BehaviorSubject(c.data), c.outlet, c.component, c);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction createUrlTree(route, urlTree, commands, queryParams, fragment) {\n    if (commands.length === 0) {\n        return tree(urlTree.root, urlTree.root, urlTree, queryParams, fragment);\n    }\n    var nav = computeNavigation(commands);\n    if (nav.toRoot()) {\n        return tree(urlTree.root, new UrlSegmentGroup([], {}), urlTree, queryParams, fragment);\n    }\n    var startingPosition = findStartingPosition(nav, urlTree, route);\n    var segmentGroup = startingPosition.processChildren ?\n        updateSegmentGroupChildren(startingPosition.segmentGroup, startingPosition.index, nav.commands) :\n        updateSegmentGroup(startingPosition.segmentGroup, startingPosition.index, nav.commands);\n    return tree(startingPosition.segmentGroup, segmentGroup, urlTree, queryParams, fragment);\n}\nfunction isMatrixParams(command) {\n    return typeof command === 'object' && command != null && !command.outlets && !command.segmentPath;\n}\nfunction tree(oldSegmentGroup, newSegmentGroup, urlTree, queryParams, fragment) {\n    var qp = {};\n    if (queryParams) {\n        forEach(queryParams, function (value, name) {\n            qp[name] = Array.isArray(value) ? value.map(function (v) { return \"\" + v; }) : \"\" + value;\n        });\n    }\n    if (urlTree.root === oldSegmentGroup) {\n        return new UrlTree(newSegmentGroup, qp, fragment);\n    }\n    return new UrlTree(replaceSegment(urlTree.root, oldSegmentGroup, newSegmentGroup), qp, fragment);\n}\nfunction replaceSegment(current, oldSegment, newSegment) {\n    var children = {};\n    forEach(current.children, function (c, outletName) {\n        if (c === oldSegment) {\n            children[outletName] = newSegment;\n        }\n        else {\n            children[outletName] = replaceSegment(c, oldSegment, newSegment);\n        }\n    });\n    return new UrlSegmentGroup(current.segments, children);\n}\nvar Navigation = /** @class */ (function () {\n    function Navigation(isAbsolute, numberOfDoubleDots, commands) {\n        this.isAbsolute = isAbsolute;\n        this.numberOfDoubleDots = numberOfDoubleDots;\n        this.commands = commands;\n        if (isAbsolute && commands.length > 0 && isMatrixParams(commands[0])) {\n            throw new Error('Root segment cannot have matrix parameters');\n        }\n        var cmdWithOutlet = commands.find(function (c) { return typeof c === 'object' && c != null && c.outlets; });\n        if (cmdWithOutlet && cmdWithOutlet !== last$1(commands)) {\n            throw new Error('{outlets:{}} has to be the last command');\n        }\n    }\n    Navigation.prototype.toRoot = function () {\n        return this.isAbsolute && this.commands.length === 1 && this.commands[0] == '/';\n    };\n    return Navigation;\n}());\n/** Transforms commands to a normalized `Navigation` */\nfunction computeNavigation(commands) {\n    if ((typeof commands[0] === 'string') && commands.length === 1 && commands[0] === '/') {\n        return new Navigation(true, 0, commands);\n    }\n    var numberOfDoubleDots = 0;\n    var isAbsolute = false;\n    var res = commands.reduce(function (res, cmd, cmdIdx) {\n        if (typeof cmd === 'object' && cmd != null) {\n            if (cmd.outlets) {\n                var outlets_1 = {};\n                forEach(cmd.outlets, function (commands, name) {\n                    outlets_1[name] = typeof commands === 'string' ? commands.split('/') : commands;\n                });\n                return __spread(res, [{ outlets: outlets_1 }]);\n            }\n            if (cmd.segmentPath) {\n                return __spread(res, [cmd.segmentPath]);\n            }\n        }\n        if (!(typeof cmd === 'string')) {\n            return __spread(res, [cmd]);\n        }\n        if (cmdIdx === 0) {\n            cmd.split('/').forEach(function (urlPart, partIndex) {\n                if (partIndex == 0 && urlPart === '.') {\n                    // skip './a'\n                }\n                else if (partIndex == 0 && urlPart === '') {\n                    isAbsolute = true;\n                }\n                else if (urlPart === '..') {\n                    numberOfDoubleDots++;\n                }\n                else if (urlPart != '') {\n                    res.push(urlPart);\n                }\n            });\n            return res;\n        }\n        return __spread(res, [cmd]);\n    }, []);\n    return new Navigation(isAbsolute, numberOfDoubleDots, res);\n}\nvar Position = /** @class */ (function () {\n    function Position(segmentGroup, processChildren, index) {\n        this.segmentGroup = segmentGroup;\n        this.processChildren = processChildren;\n        this.index = index;\n    }\n    return Position;\n}());\nfunction findStartingPosition(nav, tree, route) {\n    if (nav.isAbsolute) {\n        return new Position(tree.root, true, 0);\n    }\n    if (route.snapshot._lastPathIndex === -1) {\n        return new Position(route.snapshot._urlSegment, true, 0);\n    }\n    var modifier = isMatrixParams(nav.commands[0]) ? 0 : 1;\n    var index = route.snapshot._lastPathIndex + modifier;\n    return createPositionApplyingDoubleDots(route.snapshot._urlSegment, index, nav.numberOfDoubleDots);\n}\nfunction createPositionApplyingDoubleDots(group, index, numberOfDoubleDots) {\n    var g = group;\n    var ci = index;\n    var dd = numberOfDoubleDots;\n    while (dd > ci) {\n        dd -= ci;\n        g = g.parent;\n        if (!g) {\n            throw new Error('Invalid number of \\'../\\'');\n        }\n        ci = g.segments.length;\n    }\n    return new Position(g, false, ci - dd);\n}\nfunction getPath(command) {\n    if (typeof command === 'object' && command != null && command.outlets) {\n        return command.outlets[PRIMARY_OUTLET];\n    }\n    return \"\" + command;\n}\nfunction getOutlets(commands) {\n    if (!(typeof commands[0] === 'object'))\n        return _a = {}, _a[PRIMARY_OUTLET] = commands, _a;\n    if (commands[0].outlets === undefined)\n        return _b = {}, _b[PRIMARY_OUTLET] = commands, _b;\n    return commands[0].outlets;\n    var _a, _b;\n}\nfunction updateSegmentGroup(segmentGroup, startIndex, commands) {\n    if (!segmentGroup) {\n        segmentGroup = new UrlSegmentGroup([], {});\n    }\n    if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n        return updateSegmentGroupChildren(segmentGroup, startIndex, commands);\n    }\n    var m = prefixedWith(segmentGroup, startIndex, commands);\n    var slicedCommands = commands.slice(m.commandIndex);\n    if (m.match && m.pathIndex < segmentGroup.segments.length) {\n        var g = new UrlSegmentGroup(segmentGroup.segments.slice(0, m.pathIndex), {});\n        g.children[PRIMARY_OUTLET] =\n            new UrlSegmentGroup(segmentGroup.segments.slice(m.pathIndex), segmentGroup.children);\n        return updateSegmentGroupChildren(g, 0, slicedCommands);\n    }\n    else if (m.match && slicedCommands.length === 0) {\n        return new UrlSegmentGroup(segmentGroup.segments, {});\n    }\n    else if (m.match && !segmentGroup.hasChildren()) {\n        return createNewSegmentGroup(segmentGroup, startIndex, commands);\n    }\n    else if (m.match) {\n        return updateSegmentGroupChildren(segmentGroup, 0, slicedCommands);\n    }\n    else {\n        return createNewSegmentGroup(segmentGroup, startIndex, commands);\n    }\n}\nfunction updateSegmentGroupChildren(segmentGroup, startIndex, commands) {\n    if (commands.length === 0) {\n        return new UrlSegmentGroup(segmentGroup.segments, {});\n    }\n    else {\n        var outlets_2 = getOutlets(commands);\n        var children_1 = {};\n        forEach(outlets_2, function (commands, outlet) {\n            if (commands !== null) {\n                children_1[outlet] = updateSegmentGroup(segmentGroup.children[outlet], startIndex, commands);\n            }\n        });\n        forEach(segmentGroup.children, function (child, childOutlet) {\n            if (outlets_2[childOutlet] === undefined) {\n                children_1[childOutlet] = child;\n            }\n        });\n        return new UrlSegmentGroup(segmentGroup.segments, children_1);\n    }\n}\nfunction prefixedWith(segmentGroup, startIndex, commands) {\n    var currentCommandIndex = 0;\n    var currentPathIndex = startIndex;\n    var noMatch = { match: false, pathIndex: 0, commandIndex: 0 };\n    while (currentPathIndex < segmentGroup.segments.length) {\n        if (currentCommandIndex >= commands.length)\n            return noMatch;\n        var path = segmentGroup.segments[currentPathIndex];\n        var curr = getPath(commands[currentCommandIndex]);\n        var next = currentCommandIndex < commands.length - 1 ? commands[currentCommandIndex + 1] : null;\n        if (currentPathIndex > 0 && curr === undefined)\n            break;\n        if (curr && next && (typeof next === 'object') && next.outlets === undefined) {\n            if (!compare(curr, next, path))\n                return noMatch;\n            currentCommandIndex += 2;\n        }\n        else {\n            if (!compare(curr, {}, path))\n                return noMatch;\n            currentCommandIndex++;\n        }\n        currentPathIndex++;\n    }\n    return { match: true, pathIndex: currentPathIndex, commandIndex: currentCommandIndex };\n}\nfunction createNewSegmentGroup(segmentGroup, startIndex, commands) {\n    var paths = segmentGroup.segments.slice(0, startIndex);\n    var i = 0;\n    while (i < commands.length) {\n        if (typeof commands[i] === 'object' && commands[i].outlets !== undefined) {\n            var children = createNewSegmentChildren(commands[i].outlets);\n            return new UrlSegmentGroup(paths, children);\n        }\n        // if we start with an object literal, we need to reuse the path part from the segment\n        if (i === 0 && isMatrixParams(commands[0])) {\n            var p = segmentGroup.segments[startIndex];\n            paths.push(new UrlSegment(p.path, commands[0]));\n            i++;\n            continue;\n        }\n        var curr = getPath(commands[i]);\n        var next = (i < commands.length - 1) ? commands[i + 1] : null;\n        if (curr && next && isMatrixParams(next)) {\n            paths.push(new UrlSegment(curr, stringify(next)));\n            i += 2;\n        }\n        else {\n            paths.push(new UrlSegment(curr, {}));\n            i++;\n        }\n    }\n    return new UrlSegmentGroup(paths, {});\n}\nfunction createNewSegmentChildren(outlets) {\n    var children = {};\n    forEach(outlets, function (commands, outlet) {\n        if (commands !== null) {\n            children[outlet] = createNewSegmentGroup(new UrlSegmentGroup([], {}), 0, commands);\n        }\n    });\n    return children;\n}\nfunction stringify(params) {\n    var res = {};\n    forEach(params, function (v, k) { return res[k] = \"\" + v; });\n    return res;\n}\nfunction compare(path, params, segment) {\n    return path == segment.path && shallowEqual(params, segment.parameters);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CanActivate = /** @class */ (function () {\n    function CanActivate(path) {\n        this.path = path;\n        this.route = this.path[this.path.length - 1];\n    }\n    return CanActivate;\n}());\nvar CanDeactivate = /** @class */ (function () {\n    function CanDeactivate(component, route) {\n        this.component = component;\n        this.route = route;\n    }\n    return CanDeactivate;\n}());\n/**\n * This class bundles the actions involved in preactivation of a route.\n */\nvar PreActivation = /** @class */ (function () {\n    function PreActivation(future, curr, moduleInjector, forwardEvent) {\n        this.future = future;\n        this.curr = curr;\n        this.moduleInjector = moduleInjector;\n        this.forwardEvent = forwardEvent;\n        this.canActivateChecks = [];\n        this.canDeactivateChecks = [];\n    }\n    PreActivation.prototype.initialize = function (parentContexts) {\n        var futureRoot = this.future._root;\n        var currRoot = this.curr ? this.curr._root : null;\n        this.setupChildRouteGuards(futureRoot, currRoot, parentContexts, [futureRoot.value]);\n    };\n    PreActivation.prototype.checkGuards = function () {\n        var _this = this;\n        if (!this.isDeactivating() && !this.isActivating()) {\n            return rxjs.of(true);\n        }\n        var canDeactivate$ = this.runCanDeactivateChecks();\n        return canDeactivate$.pipe(operators.mergeMap(function (canDeactivate) { return canDeactivate ? _this.runCanActivateChecks() : rxjs.of(false); }));\n    };\n    PreActivation.prototype.resolveData = function (paramsInheritanceStrategy) {\n        var _this = this;\n        if (!this.isActivating())\n            return rxjs.of(null);\n        return rxjs.from(this.canActivateChecks)\n            .pipe(operators.concatMap(function (check) { return _this.runResolve(check.route, paramsInheritanceStrategy); }), operators.reduce(function (_, __) { return _; }));\n    };\n    PreActivation.prototype.isDeactivating = function () { return this.canDeactivateChecks.length !== 0; };\n    PreActivation.prototype.isActivating = function () { return this.canActivateChecks.length !== 0; };\n    /**\n     * Iterates over child routes and calls recursive `setupRouteGuards` to get `this` instance in\n     * proper state to run `checkGuards()` method.\n     */\n    PreActivation.prototype.setupChildRouteGuards = function (futureNode, currNode, contexts, futurePath) {\n        var _this = this;\n        var prevChildren = nodeChildrenAsMap(currNode);\n        // Process the children of the future route\n        futureNode.children.forEach(function (c) {\n            _this.setupRouteGuards(c, prevChildren[c.value.outlet], contexts, futurePath.concat([c.value]));\n            delete prevChildren[c.value.outlet];\n        });\n        // Process any children left from the current route (not active for the future route)\n        forEach(prevChildren, function (v, k) {\n            return _this.deactivateRouteAndItsChildren(v, contexts.getContext(k));\n        });\n    };\n    /**\n     * Iterates over child routes and calls recursive `setupRouteGuards` to get `this` instance in\n     * proper state to run `checkGuards()` method.\n     */\n    PreActivation.prototype.setupRouteGuards = function (futureNode, currNode, parentContexts, futurePath) {\n        var future = futureNode.value;\n        var curr = currNode ? currNode.value : null;\n        var context = parentContexts ? parentContexts.getContext(futureNode.value.outlet) : null;\n        // reusing the node\n        if (curr && future.routeConfig === curr.routeConfig) {\n            var shouldRunGuardsAndResolvers = this.shouldRunGuardsAndResolvers(curr, future, future.routeConfig.runGuardsAndResolvers);\n            if (shouldRunGuardsAndResolvers) {\n                this.canActivateChecks.push(new CanActivate(futurePath));\n            }\n            else {\n                // we need to set the data\n                future.data = curr.data;\n                future._resolvedData = curr._resolvedData;\n            }\n            // If we have a component, we need to go through an outlet.\n            if (future.component) {\n                this.setupChildRouteGuards(futureNode, currNode, context ? context.children : null, futurePath);\n                // if we have a componentless route, we recurse but keep the same outlet map.\n            }\n            else {\n                this.setupChildRouteGuards(futureNode, currNode, parentContexts, futurePath);\n            }\n            if (shouldRunGuardsAndResolvers) {\n                var outlet = context.outlet;\n                this.canDeactivateChecks.push(new CanDeactivate(outlet.component, curr));\n            }\n        }\n        else {\n            if (curr) {\n                this.deactivateRouteAndItsChildren(currNode, context);\n            }\n            this.canActivateChecks.push(new CanActivate(futurePath));\n            // If we have a component, we need to go through an outlet.\n            if (future.component) {\n                this.setupChildRouteGuards(futureNode, null, context ? context.children : null, futurePath);\n                // if we have a componentless route, we recurse but keep the same outlet map.\n            }\n            else {\n                this.setupChildRouteGuards(futureNode, null, parentContexts, futurePath);\n            }\n        }\n    };\n    PreActivation.prototype.shouldRunGuardsAndResolvers = function (curr, future, mode) {\n        switch (mode) {\n            case 'always':\n                return true;\n            case 'paramsOrQueryParamsChange':\n                return !equalParamsAndUrlSegments(curr, future) ||\n                    !shallowEqual(curr.queryParams, future.queryParams);\n            case 'paramsChange':\n            default:\n                return !equalParamsAndUrlSegments(curr, future);\n        }\n    };\n    PreActivation.prototype.deactivateRouteAndItsChildren = function (route, context) {\n        var _this = this;\n        var children = nodeChildrenAsMap(route);\n        var r = route.value;\n        forEach(children, function (node, childName) {\n            if (!r.component) {\n                _this.deactivateRouteAndItsChildren(node, context);\n            }\n            else if (context) {\n                _this.deactivateRouteAndItsChildren(node, context.children.getContext(childName));\n            }\n            else {\n                _this.deactivateRouteAndItsChildren(node, null);\n            }\n        });\n        if (!r.component) {\n            this.canDeactivateChecks.push(new CanDeactivate(null, r));\n        }\n        else if (context && context.outlet && context.outlet.isActivated) {\n            this.canDeactivateChecks.push(new CanDeactivate(context.outlet.component, r));\n        }\n        else {\n            this.canDeactivateChecks.push(new CanDeactivate(null, r));\n        }\n    };\n    PreActivation.prototype.runCanDeactivateChecks = function () {\n        var _this = this;\n        return rxjs.from(this.canDeactivateChecks)\n            .pipe(operators.mergeMap(function (check) { return _this.runCanDeactivate(check.component, check.route); }), operators.every(function (result) { return result === true; }));\n    };\n    PreActivation.prototype.runCanActivateChecks = function () {\n        var _this = this;\n        return rxjs.from(this.canActivateChecks)\n            .pipe(operators.concatMap(function (check) { return andObservables(rxjs.from([\n            _this.fireChildActivationStart(check.route.parent),\n            _this.fireActivationStart(check.route), _this.runCanActivateChild(check.path),\n            _this.runCanActivate(check.route)\n        ])); }), operators.every(function (result) { return result === true; }));\n        // this.fireChildActivationStart(check.path),\n    };\n    /**\n     * This should fire off `ActivationStart` events for each route being activated at this\n     * level.\n     * In other words, if you're activating `a` and `b` below, `path` will contain the\n     * `ActivatedRouteSnapshot`s for both and we will fire `ActivationStart` for both. Always\n     * return\n     * `true` so checks continue to run.\n     */\n    PreActivation.prototype.fireActivationStart = function (snapshot) {\n        if (snapshot !== null && this.forwardEvent) {\n            this.forwardEvent(new ActivationStart(snapshot));\n        }\n        return rxjs.of(true);\n    };\n    /**\n     * This should fire off `ChildActivationStart` events for each route being activated at this\n     * level.\n     * In other words, if you're activating `a` and `b` below, `path` will contain the\n     * `ActivatedRouteSnapshot`s for both and we will fire `ChildActivationStart` for both. Always\n     * return\n     * `true` so checks continue to run.\n     */\n    PreActivation.prototype.fireChildActivationStart = function (snapshot) {\n        if (snapshot !== null && this.forwardEvent) {\n            this.forwardEvent(new ChildActivationStart(snapshot));\n        }\n        return rxjs.of(true);\n    };\n    PreActivation.prototype.runCanActivate = function (future) {\n        var _this = this;\n        var canActivate = future.routeConfig ? future.routeConfig.canActivate : null;\n        if (!canActivate || canActivate.length === 0)\n            return rxjs.of(true);\n        var obs = rxjs.from(canActivate).pipe(operators.map(function (c) {\n            var guard = _this.getToken(c, future);\n            var observable;\n            if (guard.canActivate) {\n                observable = wrapIntoObservable(guard.canActivate(future, _this.future));\n            }\n            else {\n                observable = wrapIntoObservable(guard(future, _this.future));\n            }\n            return observable.pipe(operators.first());\n        }));\n        return andObservables(obs);\n    };\n    PreActivation.prototype.runCanActivateChild = function (path) {\n        var _this = this;\n        var future = path[path.length - 1];\n        var canActivateChildGuards = path.slice(0, path.length - 1)\n            .reverse()\n            .map(function (p) { return _this.extractCanActivateChild(p); })\n            .filter(function (_) { return _ !== null; });\n        return andObservables(rxjs.from(canActivateChildGuards).pipe(operators.map(function (d) {\n            var obs = rxjs.from(d.guards).pipe(operators.map(function (c) {\n                var guard = _this.getToken(c, d.node);\n                var observable;\n                if (guard.canActivateChild) {\n                    observable = wrapIntoObservable(guard.canActivateChild(future, _this.future));\n                }\n                else {\n                    observable = wrapIntoObservable(guard(future, _this.future));\n                }\n                return observable.pipe(operators.first());\n            }));\n            return andObservables(obs);\n        })));\n    };\n    PreActivation.prototype.extractCanActivateChild = function (p) {\n        var canActivateChild = p.routeConfig ? p.routeConfig.canActivateChild : null;\n        if (!canActivateChild || canActivateChild.length === 0)\n            return null;\n        return { node: p, guards: canActivateChild };\n    };\n    PreActivation.prototype.runCanDeactivate = function (component, curr) {\n        var _this = this;\n        var canDeactivate = curr && curr.routeConfig ? curr.routeConfig.canDeactivate : null;\n        if (!canDeactivate || canDeactivate.length === 0)\n            return rxjs.of(true);\n        var canDeactivate$ = rxjs.from(canDeactivate).pipe(operators.mergeMap(function (c) {\n            var guard = _this.getToken(c, curr);\n            var observable;\n            if (guard.canDeactivate) {\n                observable =\n                    wrapIntoObservable(guard.canDeactivate(component, curr, _this.curr, _this.future));\n            }\n            else {\n                observable = wrapIntoObservable(guard(component, curr, _this.curr, _this.future));\n            }\n            return observable.pipe(operators.first());\n        }));\n        return canDeactivate$.pipe(operators.every(function (result) { return result === true; }));\n    };\n    PreActivation.prototype.runResolve = function (future, paramsInheritanceStrategy) {\n        var resolve = future._resolve;\n        return this.resolveNode(resolve, future).pipe(operators.map(function (resolvedData) {\n            future._resolvedData = resolvedData;\n            future.data = __assign({}, future.data, inheritedParamsDataResolve(future, paramsInheritanceStrategy).resolve);\n            return null;\n        }));\n    };\n    PreActivation.prototype.resolveNode = function (resolve, future) {\n        var _this = this;\n        var keys = Object.keys(resolve);\n        if (keys.length === 0) {\n            return rxjs.of({});\n        }\n        if (keys.length === 1) {\n            var key_1 = keys[0];\n            return this.getResolver(resolve[key_1], future).pipe(operators.map(function (value) {\n                return _a = {}, _a[key_1] = value, _a;\n                var _a;\n            }));\n        }\n        var data = {};\n        var runningResolvers$ = rxjs.from(keys).pipe(operators.mergeMap(function (key) {\n            return _this.getResolver(resolve[key], future).pipe(operators.map(function (value) {\n                data[key] = value;\n                return value;\n            }));\n        }));\n        return runningResolvers$.pipe(operators.last(), operators.map(function () { return data; }));\n    };\n    PreActivation.prototype.getResolver = function (injectionToken, future) {\n        var resolver = this.getToken(injectionToken, future);\n        return resolver.resolve ? wrapIntoObservable(resolver.resolve(future, this.future)) :\n            wrapIntoObservable(resolver(future, this.future));\n    };\n    PreActivation.prototype.getToken = function (token, snapshot) {\n        var config = closestLoadedConfig(snapshot);\n        var injector = config ? config.module.injector : this.moduleInjector;\n        return injector.get(token);\n    };\n    return PreActivation;\n}());\nfunction closestLoadedConfig(snapshot) {\n    if (!snapshot)\n        return null;\n    for (var s = snapshot.parent; s; s = s.parent) {\n        var route = s.routeConfig;\n        if (route && route._loadedConfig)\n            return route._loadedConfig;\n    }\n    return null;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NoMatch$1 = /** @class */ (function () {\n    function NoMatch() {\n    }\n    return NoMatch;\n}());\nfunction recognize(rootComponentType, config, urlTree, url, paramsInheritanceStrategy) {\n    if (paramsInheritanceStrategy === void 0) { paramsInheritanceStrategy = 'emptyOnly'; }\n    return new Recognizer(rootComponentType, config, urlTree, url, paramsInheritanceStrategy)\n        .recognize();\n}\nvar Recognizer = /** @class */ (function () {\n    function Recognizer(rootComponentType, config, urlTree, url, paramsInheritanceStrategy) {\n        this.rootComponentType = rootComponentType;\n        this.config = config;\n        this.urlTree = urlTree;\n        this.url = url;\n        this.paramsInheritanceStrategy = paramsInheritanceStrategy;\n    }\n    Recognizer.prototype.recognize = function () {\n        try {\n            var rootSegmentGroup = split$1(this.urlTree.root, [], [], this.config).segmentGroup;\n            var children = this.processSegmentGroup(this.config, rootSegmentGroup, PRIMARY_OUTLET);\n            var root = new ActivatedRouteSnapshot([], Object.freeze({}), Object.freeze(__assign({}, this.urlTree.queryParams)), this.urlTree.fragment, {}, PRIMARY_OUTLET, this.rootComponentType, null, this.urlTree.root, -1, {});\n            var rootNode = new TreeNode(root, children);\n            var routeState = new RouterStateSnapshot(this.url, rootNode);\n            this.inheritParamsAndData(routeState._root);\n            return rxjs.of(routeState);\n        }\n        catch (e) {\n            return new rxjs.Observable(function (obs) { return obs.error(e); });\n        }\n    };\n    Recognizer.prototype.inheritParamsAndData = function (routeNode) {\n        var _this = this;\n        var route = routeNode.value;\n        var i = inheritedParamsDataResolve(route, this.paramsInheritanceStrategy);\n        route.params = Object.freeze(i.params);\n        route.data = Object.freeze(i.data);\n        routeNode.children.forEach(function (n) { return _this.inheritParamsAndData(n); });\n    };\n    Recognizer.prototype.processSegmentGroup = function (config, segmentGroup, outlet) {\n        if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n            return this.processChildren(config, segmentGroup);\n        }\n        return this.processSegment(config, segmentGroup, segmentGroup.segments, outlet);\n    };\n    Recognizer.prototype.processChildren = function (config, segmentGroup) {\n        var _this = this;\n        var children = mapChildrenIntoArray(segmentGroup, function (child, childOutlet) { return _this.processSegmentGroup(config, child, childOutlet); });\n        checkOutletNameUniqueness(children);\n        sortActivatedRouteSnapshots(children);\n        return children;\n    };\n    Recognizer.prototype.processSegment = function (config, segmentGroup, segments, outlet) {\n        try {\n            for (var config_1 = __values(config), config_1_1 = config_1.next(); !config_1_1.done; config_1_1 = config_1.next()) {\n                var r = config_1_1.value;\n                try {\n                    return this.processSegmentAgainstRoute(r, segmentGroup, segments, outlet);\n                }\n                catch (e) {\n                    if (!(e instanceof NoMatch$1))\n                        throw e;\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (config_1_1 && !config_1_1.done && (_a = config_1.return)) _a.call(config_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        if (this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n            return [];\n        }\n        throw new NoMatch$1();\n        var e_1, _a;\n    };\n    Recognizer.prototype.noLeftoversInUrl = function (segmentGroup, segments, outlet) {\n        return segments.length === 0 && !segmentGroup.children[outlet];\n    };\n    Recognizer.prototype.processSegmentAgainstRoute = function (route, rawSegment, segments, outlet) {\n        if (route.redirectTo)\n            throw new NoMatch$1();\n        if ((route.outlet || PRIMARY_OUTLET) !== outlet)\n            throw new NoMatch$1();\n        var snapshot;\n        var consumedSegments = [];\n        var rawSlicedSegments = [];\n        if (route.path === '**') {\n            var params = segments.length > 0 ? last$1(segments).parameters : {};\n            snapshot = new ActivatedRouteSnapshot(segments, params, Object.freeze(__assign({}, this.urlTree.queryParams)), this.urlTree.fragment, getData(route), outlet, route.component, route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + segments.length, getResolve(route));\n        }\n        else {\n            var result = match$1(rawSegment, route, segments);\n            consumedSegments = result.consumedSegments;\n            rawSlicedSegments = segments.slice(result.lastChild);\n            snapshot = new ActivatedRouteSnapshot(consumedSegments, result.parameters, Object.freeze(__assign({}, this.urlTree.queryParams)), this.urlTree.fragment, getData(route), outlet, route.component, route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + consumedSegments.length, getResolve(route));\n        }\n        var childConfig = getChildConfig(route);\n        var _a = split$1(rawSegment, consumedSegments, rawSlicedSegments, childConfig), segmentGroup = _a.segmentGroup, slicedSegments = _a.slicedSegments;\n        if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n            var children_1 = this.processChildren(childConfig, segmentGroup);\n            return [new TreeNode(snapshot, children_1)];\n        }\n        if (childConfig.length === 0 && slicedSegments.length === 0) {\n            return [new TreeNode(snapshot, [])];\n        }\n        var children = this.processSegment(childConfig, segmentGroup, slicedSegments, PRIMARY_OUTLET);\n        return [new TreeNode(snapshot, children)];\n    };\n    return Recognizer;\n}());\nfunction sortActivatedRouteSnapshots(nodes) {\n    nodes.sort(function (a, b) {\n        if (a.value.outlet === PRIMARY_OUTLET)\n            return -1;\n        if (b.value.outlet === PRIMARY_OUTLET)\n            return 1;\n        return a.value.outlet.localeCompare(b.value.outlet);\n    });\n}\nfunction getChildConfig(route) {\n    if (route.children) {\n        return route.children;\n    }\n    if (route.loadChildren) {\n        return route._loadedConfig.routes;\n    }\n    return [];\n}\nfunction match$1(segmentGroup, route, segments) {\n    if (route.path === '') {\n        if (route.pathMatch === 'full' && (segmentGroup.hasChildren() || segments.length > 0)) {\n            throw new NoMatch$1();\n        }\n        return { consumedSegments: [], lastChild: 0, parameters: {} };\n    }\n    var matcher = route.matcher || defaultUrlMatcher;\n    var res = matcher(segments, segmentGroup, route);\n    if (!res)\n        throw new NoMatch$1();\n    var posParams = {};\n    forEach(res.posParams, function (v, k) { posParams[k] = v.path; });\n    var parameters = res.consumed.length > 0 ? __assign({}, posParams, res.consumed[res.consumed.length - 1].parameters) :\n        posParams;\n    return { consumedSegments: res.consumed, lastChild: res.consumed.length, parameters: parameters };\n}\nfunction checkOutletNameUniqueness(nodes) {\n    var names = {};\n    nodes.forEach(function (n) {\n        var routeWithSameOutletName = names[n.value.outlet];\n        if (routeWithSameOutletName) {\n            var p = routeWithSameOutletName.url.map(function (s) { return s.toString(); }).join('/');\n            var c = n.value.url.map(function (s) { return s.toString(); }).join('/');\n            throw new Error(\"Two segments cannot have the same outlet name: '\" + p + \"' and '\" + c + \"'.\");\n        }\n        names[n.value.outlet] = n.value;\n    });\n}\nfunction getSourceSegmentGroup(segmentGroup) {\n    var s = segmentGroup;\n    while (s._sourceSegment) {\n        s = s._sourceSegment;\n    }\n    return s;\n}\nfunction getPathIndexShift(segmentGroup) {\n    var s = segmentGroup;\n    var res = (s._segmentIndexShift ? s._segmentIndexShift : 0);\n    while (s._sourceSegment) {\n        s = s._sourceSegment;\n        res += (s._segmentIndexShift ? s._segmentIndexShift : 0);\n    }\n    return res - 1;\n}\nfunction split$1(segmentGroup, consumedSegments, slicedSegments, config) {\n    if (slicedSegments.length > 0 &&\n        containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n        var s_1 = new UrlSegmentGroup(consumedSegments, createChildrenForEmptyPaths(segmentGroup, consumedSegments, config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n        s_1._sourceSegment = segmentGroup;\n        s_1._segmentIndexShift = consumedSegments.length;\n        return { segmentGroup: s_1, slicedSegments: [] };\n    }\n    if (slicedSegments.length === 0 &&\n        containsEmptyPathMatches(segmentGroup, slicedSegments, config)) {\n        var s_2 = new UrlSegmentGroup(segmentGroup.segments, addEmptyPathsToChildrenIfNeeded(segmentGroup, slicedSegments, config, segmentGroup.children));\n        s_2._sourceSegment = segmentGroup;\n        s_2._segmentIndexShift = consumedSegments.length;\n        return { segmentGroup: s_2, slicedSegments: slicedSegments };\n    }\n    var s = new UrlSegmentGroup(segmentGroup.segments, segmentGroup.children);\n    s._sourceSegment = segmentGroup;\n    s._segmentIndexShift = consumedSegments.length;\n    return { segmentGroup: s, slicedSegments: slicedSegments };\n}\nfunction addEmptyPathsToChildrenIfNeeded(segmentGroup, slicedSegments, routes, children) {\n    var res = {};\n    try {\n        for (var routes_1 = __values(routes), routes_1_1 = routes_1.next(); !routes_1_1.done; routes_1_1 = routes_1.next()) {\n            var r = routes_1_1.value;\n            if (emptyPathMatch(segmentGroup, slicedSegments, r) && !children[getOutlet$1(r)]) {\n                var s = new UrlSegmentGroup([], {});\n                s._sourceSegment = segmentGroup;\n                s._segmentIndexShift = segmentGroup.segments.length;\n                res[getOutlet$1(r)] = s;\n            }\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (routes_1_1 && !routes_1_1.done && (_a = routes_1.return)) _a.call(routes_1);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    return __assign({}, children, res);\n    var e_2, _a;\n}\nfunction createChildrenForEmptyPaths(segmentGroup, consumedSegments, routes, primarySegment) {\n    var res = {};\n    res[PRIMARY_OUTLET] = primarySegment;\n    primarySegment._sourceSegment = segmentGroup;\n    primarySegment._segmentIndexShift = consumedSegments.length;\n    try {\n        for (var routes_2 = __values(routes), routes_2_1 = routes_2.next(); !routes_2_1.done; routes_2_1 = routes_2.next()) {\n            var r = routes_2_1.value;\n            if (r.path === '' && getOutlet$1(r) !== PRIMARY_OUTLET) {\n                var s = new UrlSegmentGroup([], {});\n                s._sourceSegment = segmentGroup;\n                s._segmentIndexShift = consumedSegments.length;\n                res[getOutlet$1(r)] = s;\n            }\n        }\n    }\n    catch (e_3_1) { e_3 = { error: e_3_1 }; }\n    finally {\n        try {\n            if (routes_2_1 && !routes_2_1.done && (_a = routes_2.return)) _a.call(routes_2);\n        }\n        finally { if (e_3) throw e_3.error; }\n    }\n    return res;\n    var e_3, _a;\n}\nfunction containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, routes) {\n    return routes.some(function (r) { return emptyPathMatch(segmentGroup, slicedSegments, r) && getOutlet$1(r) !== PRIMARY_OUTLET; });\n}\nfunction containsEmptyPathMatches(segmentGroup, slicedSegments, routes) {\n    return routes.some(function (r) { return emptyPathMatch(segmentGroup, slicedSegments, r); });\n}\nfunction emptyPathMatch(segmentGroup, slicedSegments, r) {\n    if ((segmentGroup.hasChildren() || slicedSegments.length > 0) && r.pathMatch === 'full') {\n        return false;\n    }\n    return r.path === '' && r.redirectTo === undefined;\n}\nfunction getOutlet$1(route) {\n    return route.outlet || PRIMARY_OUTLET;\n}\nfunction getData(route) {\n    return route.data || {};\n}\nfunction getResolve(route) {\n    return route.resolve || {};\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Provides a way to customize when activated routes get reused.\n *\n * @experimental\n */\nvar RouteReuseStrategy = /** @class */ (function () {\n    function RouteReuseStrategy() {\n    }\n    return RouteReuseStrategy;\n}());\n/**\n * Does not detach any subtrees. Reuses routes as long as their route config is the same.\n */\nvar DefaultRouteReuseStrategy = /** @class */ (function () {\n    function DefaultRouteReuseStrategy() {\n    }\n    DefaultRouteReuseStrategy.prototype.shouldDetach = function (route) { return false; };\n    DefaultRouteReuseStrategy.prototype.store = function (route, detachedTree) { };\n    DefaultRouteReuseStrategy.prototype.shouldAttach = function (route) { return false; };\n    DefaultRouteReuseStrategy.prototype.retrieve = function (route) { return null; };\n    DefaultRouteReuseStrategy.prototype.shouldReuseRoute = function (future, curr) {\n        return future.routeConfig === curr.routeConfig;\n    };\n    return DefaultRouteReuseStrategy;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(i): switch to fromPromise once it's expored in rxjs\n/**\n * @docsNotRequired\n * @experimental\n */\nvar ROUTES = new core.InjectionToken('ROUTES');\nvar RouterConfigLoader = /** @class */ (function () {\n    function RouterConfigLoader(loader, compiler, onLoadStartListener, onLoadEndListener) {\n        this.loader = loader;\n        this.compiler = compiler;\n        this.onLoadStartListener = onLoadStartListener;\n        this.onLoadEndListener = onLoadEndListener;\n    }\n    RouterConfigLoader.prototype.load = function (parentInjector, route) {\n        var _this = this;\n        if (this.onLoadStartListener) {\n            this.onLoadStartListener(route);\n        }\n        var moduleFactory$ = this.loadModuleFactory(route.loadChildren);\n        return moduleFactory$.pipe(operators.map(function (factory) {\n            if (_this.onLoadEndListener) {\n                _this.onLoadEndListener(route);\n            }\n            var module = factory.create(parentInjector);\n            return new LoadedRouterConfig(flatten(module.injector.get(ROUTES)).map(standardizeConfig), module);\n        }));\n    };\n    RouterConfigLoader.prototype.loadModuleFactory = function (loadChildren) {\n        var _this = this;\n        if (typeof loadChildren === 'string') {\n            return rxjs.from(this.loader.load(loadChildren));\n        }\n        else {\n            return wrapIntoObservable(loadChildren()).pipe(operators.mergeMap(function (t) {\n                if (t instanceof core.NgModuleFactory) {\n                    return rxjs.of(t);\n                }\n                else {\n                    return rxjs.from(_this.compiler.compileModuleAsync(t));\n                }\n            }));\n        }\n    };\n    return RouterConfigLoader;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Provides a way to migrate AngularJS applications to Angular.\n *\n * @experimental\n */\nvar UrlHandlingStrategy = /** @class */ (function () {\n    function UrlHandlingStrategy() {\n    }\n    return UrlHandlingStrategy;\n}());\n/**\n * @experimental\n */\nvar DefaultUrlHandlingStrategy = /** @class */ (function () {\n    function DefaultUrlHandlingStrategy() {\n    }\n    DefaultUrlHandlingStrategy.prototype.shouldProcessUrl = function (url) { return true; };\n    DefaultUrlHandlingStrategy.prototype.extract = function (url) { return url; };\n    DefaultUrlHandlingStrategy.prototype.merge = function (newUrlPart, wholeUrl) { return newUrlPart; };\n    return DefaultUrlHandlingStrategy;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction defaultErrorHandler(error) {\n    throw error;\n}\n/**\n * @internal\n */\nfunction defaultRouterHook(snapshot) {\n    return rxjs.of(null);\n}\n/**\n * @description\n *\n * Provides the navigation and url manipulation capabilities.\n *\n * See `Routes` for more details and examples.\n *\n * @ngModule RouterModule\n *\n *\n */\nvar Router = /** @class */ (function () {\n    /**\n     * Creates the router service.\n     */\n    // TODO: vsavkin make internal after the final is out.\n    function Router(rootComponentType, urlSerializer, rootContexts, location, injector, loader, compiler, config) {\n        var _this = this;\n        this.rootComponentType = rootComponentType;\n        this.urlSerializer = urlSerializer;\n        this.rootContexts = rootContexts;\n        this.location = location;\n        this.config = config;\n        this.navigations = new rxjs.BehaviorSubject(null);\n        this.navigationId = 0;\n        this.events = new rxjs.Subject();\n        /**\n         * Error handler that is invoked when a navigation errors.\n         *\n         * See `ErrorHandler` for more information.\n         */\n        this.errorHandler = defaultErrorHandler;\n        /**\n         * Indicates if at least one navigation happened.\n         */\n        this.navigated = false;\n        this.lastSuccessfulId = -1;\n        /**\n         * Used by RouterModule. This allows us to\n         * pause the navigation either before preactivation or after it.\n         * @internal\n         */\n        this.hooks = {\n            beforePreactivation: defaultRouterHook,\n            afterPreactivation: defaultRouterHook\n        };\n        /**\n         * Extracts and merges URLs. Used for AngularJS to Angular migrations.\n         */\n        this.urlHandlingStrategy = new DefaultUrlHandlingStrategy();\n        this.routeReuseStrategy = new DefaultRouteReuseStrategy();\n        /**\n         * Define what the router should do if it receives a navigation request to the current URL.\n         * By default, the router will ignore this navigation. However, this prevents features such\n         * as a \"refresh\" button. Use this option to configure the behavior when navigating to the\n         * current URL. Default is 'ignore'.\n         */\n        this.onSameUrlNavigation = 'ignore';\n        /**\n         * Defines how the router merges params, data and resolved data from parent to child\n         * routes. Available options are:\n         *\n         * - `'emptyOnly'`, the default, only inherits parent params for path-less or component-less\n         *   routes.\n         * - `'always'`, enables unconditional inheritance of parent params.\n         */\n        this.paramsInheritanceStrategy = 'emptyOnly';\n        var onLoadStart = function (r) { return _this.triggerEvent(new RouteConfigLoadStart(r)); };\n        var onLoadEnd = function (r) { return _this.triggerEvent(new RouteConfigLoadEnd(r)); };\n        this.ngModule = injector.get(core.NgModuleRef);\n        this.resetConfig(config);\n        this.currentUrlTree = createEmptyUrlTree();\n        this.rawUrlTree = this.currentUrlTree;\n        this.configLoader = new RouterConfigLoader(loader, compiler, onLoadStart, onLoadEnd);\n        this.routerState = createEmptyState(this.currentUrlTree, this.rootComponentType);\n        this.processNavigations();\n    }\n    /**\n     * @internal\n     * TODO: this should be removed once the constructor of the router made internal\n     */\n    Router.prototype.resetRootComponentType = function (rootComponentType) {\n        this.rootComponentType = rootComponentType;\n        // TODO: vsavkin router 4.0 should make the root component set to null\n        // this will simplify the lifecycle of the router.\n        this.routerState.root.component = this.rootComponentType;\n    };\n    /**\n     * Sets up the location change listener and performs the initial navigation.\n     */\n    Router.prototype.initialNavigation = function () {\n        this.setUpLocationChangeListener();\n        if (this.navigationId === 0) {\n            this.navigateByUrl(this.location.path(true), { replaceUrl: true });\n        }\n    };\n    /**\n     * Sets up the location change listener.\n     */\n    Router.prototype.setUpLocationChangeListener = function () {\n        var _this = this;\n        // Don't need to use Zone.wrap any more, because zone.js\n        // already patch onPopState, so location change callback will\n        // run into ngZone\n        if (!this.locationSubscription) {\n            this.locationSubscription = this.location.subscribe(function (change) {\n                var rawUrlTree = _this.urlSerializer.parse(change['url']);\n                var source = change['type'] === 'popstate' ? 'popstate' : 'hashchange';\n                var state = change.state && change.state.navigationId ?\n                    { navigationId: change.state.navigationId } :\n                    null;\n                setTimeout(function () { _this.scheduleNavigation(rawUrlTree, source, state, { replaceUrl: true }); }, 0);\n            });\n        }\n    };\n    Object.defineProperty(Router.prototype, \"url\", {\n        /** The current url */\n        get: function () { return this.serializeUrl(this.currentUrlTree); },\n        enumerable: true,\n        configurable: true\n    });\n    /** @internal */\n    Router.prototype.triggerEvent = function (e) { this.events.next(e); };\n    /**\n     * Resets the configuration used for navigation and generating links.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.resetConfig([\n     *  { path: 'team/:id', component: TeamCmp, children: [\n     *    { path: 'simple', component: SimpleCmp },\n     *    { path: 'user/:name', component: UserCmp }\n     *  ]}\n     * ]);\n     * ```\n     */\n    Router.prototype.resetConfig = function (config) {\n        validateConfig(config);\n        this.config = config.map(standardizeConfig);\n        this.navigated = false;\n        this.lastSuccessfulId = -1;\n    };\n    /** @docsNotRequired */\n    Router.prototype.ngOnDestroy = function () { this.dispose(); };\n    /** Disposes of the router */\n    Router.prototype.dispose = function () {\n        if (this.locationSubscription) {\n            this.locationSubscription.unsubscribe();\n            this.locationSubscription = null;\n        }\n    };\n    /**\n     * Applies an array of commands to the current url tree and creates a new url tree.\n     *\n     * When given an activate route, applies the given commands starting from the route.\n     * When not given a route, applies the given command starting from the root.\n     *\n     * ### Usage\n     *\n     * ```\n     * // create /team/33/user/11\n     * router.createUrlTree(['/team', 33, 'user', 11]);\n     *\n     * // create /team/33;expand=true/user/11\n     * router.createUrlTree(['/team', 33, {expand: true}, 'user', 11]);\n     *\n     * // you can collapse static segments like this (this works only with the first passed-in value):\n     * router.createUrlTree(['/team/33/user', userId]);\n     *\n     * // If the first segment can contain slashes, and you do not want the router to split it, you\n     * // can do the following:\n     *\n     * router.createUrlTree([{segmentPath: '/one/two'}]);\n     *\n     * // create /team/33/(user/11//right:chat)\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: 'chat'}}]);\n     *\n     * // remove the right secondary node\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: null}}]);\n     *\n     * // assuming the current url is `/team/33/user/11` and the route points to `user/11`\n     *\n     * // navigate to /team/33/user/11/details\n     * router.createUrlTree(['details'], {relativeTo: route});\n     *\n     * // navigate to /team/33/user/22\n     * router.createUrlTree(['../22'], {relativeTo: route});\n     *\n     * // navigate to /team/44/user/22\n     * router.createUrlTree(['../../team/44/user/22'], {relativeTo: route});\n     * ```\n     */\n    Router.prototype.createUrlTree = function (commands, navigationExtras) {\n        if (navigationExtras === void 0) { navigationExtras = {}; }\n        var relativeTo = navigationExtras.relativeTo, queryParams = navigationExtras.queryParams, fragment = navigationExtras.fragment, preserveQueryParams = navigationExtras.preserveQueryParams, queryParamsHandling = navigationExtras.queryParamsHandling, preserveFragment = navigationExtras.preserveFragment;\n        if (core.isDevMode() && preserveQueryParams && console && console.warn) {\n            console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n        }\n        var a = relativeTo || this.routerState.root;\n        var f = preserveFragment ? this.currentUrlTree.fragment : fragment;\n        var q = null;\n        if (queryParamsHandling) {\n            switch (queryParamsHandling) {\n                case 'merge':\n                    q = __assign({}, this.currentUrlTree.queryParams, queryParams);\n                    break;\n                case 'preserve':\n                    q = this.currentUrlTree.queryParams;\n                    break;\n                default:\n                    q = queryParams || null;\n            }\n        }\n        else {\n            q = preserveQueryParams ? this.currentUrlTree.queryParams : queryParams || null;\n        }\n        if (q !== null) {\n            q = this.removeEmptyProps(q);\n        }\n        return createUrlTree(a, this.currentUrlTree, commands, q, f);\n    };\n    /**\n     * Navigate based on the provided url. This navigation is always absolute.\n     *\n     * Returns a promise that:\n     * - resolves to 'true' when navigation succeeds,\n     * - resolves to 'false' when navigation fails,\n     * - is rejected when an error happens.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.navigateByUrl(\"/team/33/user/11\");\n     *\n     * // Navigate without updating the URL\n     * router.navigateByUrl(\"/team/33/user/11\", { skipLocationChange: true });\n     * ```\n     *\n     * In opposite to `navigate`, `navigateByUrl` takes a whole URL\n     * and does not apply any delta to the current one.\n     */\n    Router.prototype.navigateByUrl = function (url, extras) {\n        if (extras === void 0) { extras = { skipLocationChange: false }; }\n        var urlTree = url instanceof UrlTree ? url : this.parseUrl(url);\n        var mergedTree = this.urlHandlingStrategy.merge(urlTree, this.rawUrlTree);\n        return this.scheduleNavigation(mergedTree, 'imperative', null, extras);\n    };\n    /**\n     * Navigate based on the provided array of commands and a starting point.\n     * If no starting route is provided, the navigation is absolute.\n     *\n     * Returns a promise that:\n     * - resolves to 'true' when navigation succeeds,\n     * - resolves to 'false' when navigation fails,\n     * - is rejected when an error happens.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route});\n     *\n     * // Navigate without updating the URL\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route, skipLocationChange: true});\n     * ```\n     *\n     * In opposite to `navigateByUrl`, `navigate` always takes a delta that is applied to the current\n     * URL.\n     */\n    Router.prototype.navigate = function (commands, extras) {\n        if (extras === void 0) { extras = { skipLocationChange: false }; }\n        validateCommands(commands);\n        return this.navigateByUrl(this.createUrlTree(commands, extras), extras);\n    };\n    /** Serializes a `UrlTree` into a string */\n    Router.prototype.serializeUrl = function (url) { return this.urlSerializer.serialize(url); };\n    /** Parses a string into a `UrlTree` */\n    Router.prototype.parseUrl = function (url) { return this.urlSerializer.parse(url); };\n    /** Returns whether the url is activated */\n    Router.prototype.isActive = function (url, exact) {\n        if (url instanceof UrlTree) {\n            return containsTree(this.currentUrlTree, url, exact);\n        }\n        var urlTree = this.urlSerializer.parse(url);\n        return containsTree(this.currentUrlTree, urlTree, exact);\n    };\n    Router.prototype.removeEmptyProps = function (params) {\n        return Object.keys(params).reduce(function (result, key) {\n            var value = params[key];\n            if (value !== null && value !== undefined) {\n                result[key] = value;\n            }\n            return result;\n        }, {});\n    };\n    Router.prototype.processNavigations = function () {\n        var _this = this;\n        this.navigations\n            .pipe(operators.concatMap(function (nav) {\n            if (nav) {\n                _this.executeScheduledNavigation(nav);\n                // a failed navigation should not stop the router from processing\n                // further navigations => the catch\n                return nav.promise.catch(function () { });\n            }\n            else {\n                return rxjs.of(null);\n            }\n        }))\n            .subscribe(function () { });\n    };\n    Router.prototype.scheduleNavigation = function (rawUrl, source, state, extras) {\n        var lastNavigation = this.navigations.value;\n        // If the user triggers a navigation imperatively (e.g., by using navigateByUrl),\n        // and that navigation results in 'replaceState' that leads to the same URL,\n        // we should skip those.\n        if (lastNavigation && source !== 'imperative' && lastNavigation.source === 'imperative' &&\n            lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n            return Promise.resolve(true); // return value is not used\n        }\n        // Because of a bug in IE and Edge, the location class fires two events (popstate and\n        // hashchange) every single time. The second one should be ignored. Otherwise, the URL will\n        // flicker. Handles the case when a popstate was emitted first.\n        if (lastNavigation && source == 'hashchange' && lastNavigation.source === 'popstate' &&\n            lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n            return Promise.resolve(true); // return value is not used\n        }\n        // Because of a bug in IE and Edge, the location class fires two events (popstate and\n        // hashchange) every single time. The second one should be ignored. Otherwise, the URL will\n        // flicker. Handles the case when a hashchange was emitted first.\n        if (lastNavigation && source == 'popstate' && lastNavigation.source === 'hashchange' &&\n            lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n            return Promise.resolve(true); // return value is not used\n        }\n        var resolve = null;\n        var reject = null;\n        var promise = new Promise(function (res, rej) {\n            resolve = res;\n            reject = rej;\n        });\n        var id = ++this.navigationId;\n        this.navigations.next({ id: id, source: source, state: state, rawUrl: rawUrl, extras: extras, resolve: resolve, reject: reject, promise: promise });\n        // Make sure that the error is propagated even though `processNavigations` catch\n        // handler does not rethrow\n        return promise.catch(function (e) { return Promise.reject(e); });\n    };\n    Router.prototype.executeScheduledNavigation = function (_a) {\n        var _this = this;\n        var id = _a.id, rawUrl = _a.rawUrl, extras = _a.extras, resolve = _a.resolve, reject = _a.reject, source = _a.source, state = _a.state;\n        var url = this.urlHandlingStrategy.extract(rawUrl);\n        var urlTransition = !this.navigated || url.toString() !== this.currentUrlTree.toString();\n        if ((this.onSameUrlNavigation === 'reload' ? true : urlTransition) &&\n            this.urlHandlingStrategy.shouldProcessUrl(rawUrl)) {\n            this.events\n                .next(new NavigationStart(id, this.serializeUrl(url), source, state));\n            Promise.resolve()\n                .then(function (_) { return _this.runNavigate(url, rawUrl, !!extras.skipLocationChange, !!extras.replaceUrl, id, null); })\n                .then(resolve, reject);\n            // we cannot process the current URL, but we could process the previous one =>\n            // we need to do some cleanup\n        }\n        else if (urlTransition && this.rawUrlTree &&\n            this.urlHandlingStrategy.shouldProcessUrl(this.rawUrlTree)) {\n            this.events\n                .next(new NavigationStart(id, this.serializeUrl(url), source, state));\n            Promise.resolve()\n                .then(function (_) { return _this.runNavigate(url, rawUrl, false, false, id, createEmptyState(url, _this.rootComponentType).snapshot); })\n                .then(resolve, reject);\n        }\n        else {\n            this.rawUrlTree = rawUrl;\n            resolve(null);\n        }\n    };\n    Router.prototype.runNavigate = function (url, rawUrl, skipLocationChange, replaceUrl, id, precreatedState) {\n        var _this = this;\n        if (id !== this.navigationId) {\n            this.events\n                .next(new NavigationCancel(id, this.serializeUrl(url), \"Navigation ID \" + id + \" is not equal to the current navigation id \" + this.navigationId));\n            return Promise.resolve(false);\n        }\n        return new Promise(function (resolvePromise, rejectPromise) {\n            // create an observable of the url and route state snapshot\n            // this operation do not result in any side effects\n            var urlAndSnapshot$;\n            if (!precreatedState) {\n                var moduleInjector = _this.ngModule.injector;\n                var redirectsApplied$ = applyRedirects(moduleInjector, _this.configLoader, _this.urlSerializer, url, _this.config);\n                urlAndSnapshot$ = redirectsApplied$.pipe(operators.mergeMap(function (appliedUrl) {\n                    return recognize(_this.rootComponentType, _this.config, appliedUrl, _this.serializeUrl(appliedUrl), _this.paramsInheritanceStrategy)\n                        .pipe(operators.map(function (snapshot) {\n                        _this.events\n                            .next(new RoutesRecognized(id, _this.serializeUrl(url), _this.serializeUrl(appliedUrl), snapshot));\n                        return { appliedUrl: appliedUrl, snapshot: snapshot };\n                    }));\n                }));\n            }\n            else {\n                urlAndSnapshot$ = rxjs.of({ appliedUrl: url, snapshot: precreatedState });\n            }\n            var beforePreactivationDone$ = urlAndSnapshot$.pipe(operators.mergeMap(function (p) {\n                if (typeof p === 'boolean')\n                    return rxjs.of(p);\n                return _this.hooks.beforePreactivation(p.snapshot).pipe(operators.map(function () { return p; }));\n            }));\n            // run preactivation: guards and data resolvers\n            var preActivation;\n            var preactivationSetup$ = beforePreactivationDone$.pipe(operators.map(function (p) {\n                if (typeof p === 'boolean')\n                    return p;\n                var appliedUrl = p.appliedUrl, snapshot = p.snapshot;\n                var moduleInjector = _this.ngModule.injector;\n                preActivation = new PreActivation(snapshot, _this.routerState.snapshot, moduleInjector, function (evt) { return _this.triggerEvent(evt); });\n                preActivation.initialize(_this.rootContexts);\n                return { appliedUrl: appliedUrl, snapshot: snapshot };\n            }));\n            var preactivationCheckGuards$ = preactivationSetup$.pipe(operators.mergeMap(function (p) {\n                if (typeof p === 'boolean' || _this.navigationId !== id)\n                    return rxjs.of(false);\n                var appliedUrl = p.appliedUrl, snapshot = p.snapshot;\n                _this.triggerEvent(new GuardsCheckStart(id, _this.serializeUrl(url), _this.serializeUrl(appliedUrl), snapshot));\n                return preActivation.checkGuards().pipe(operators.map(function (shouldActivate) {\n                    _this.triggerEvent(new GuardsCheckEnd(id, _this.serializeUrl(url), _this.serializeUrl(appliedUrl), snapshot, shouldActivate));\n                    return { appliedUrl: appliedUrl, snapshot: snapshot, shouldActivate: shouldActivate };\n                }));\n            }));\n            var preactivationResolveData$ = preactivationCheckGuards$.pipe(operators.mergeMap(function (p) {\n                if (typeof p === 'boolean' || _this.navigationId !== id)\n                    return rxjs.of(false);\n                if (p.shouldActivate && preActivation.isActivating()) {\n                    _this.triggerEvent(new ResolveStart(id, _this.serializeUrl(url), _this.serializeUrl(p.appliedUrl), p.snapshot));\n                    return preActivation.resolveData(_this.paramsInheritanceStrategy).pipe(operators.map(function () {\n                        _this.triggerEvent(new ResolveEnd(id, _this.serializeUrl(url), _this.serializeUrl(p.appliedUrl), p.snapshot));\n                        return p;\n                    }));\n                }\n                else {\n                    return rxjs.of(p);\n                }\n            }));\n            var preactivationDone$ = preactivationResolveData$.pipe(operators.mergeMap(function (p) {\n                if (typeof p === 'boolean' || _this.navigationId !== id)\n                    return rxjs.of(false);\n                return _this.hooks.afterPreactivation(p.snapshot).pipe(operators.map(function () { return p; }));\n            }));\n            // create router state\n            // this operation has side effects => route state is being affected\n            var routerState$ = preactivationDone$.pipe(operators.map(function (p) {\n                if (typeof p === 'boolean' || _this.navigationId !== id)\n                    return false;\n                var appliedUrl = p.appliedUrl, snapshot = p.snapshot, shouldActivate = p.shouldActivate;\n                if (shouldActivate) {\n                    var state = createRouterState(_this.routeReuseStrategy, snapshot, _this.routerState);\n                    return { appliedUrl: appliedUrl, state: state, shouldActivate: shouldActivate };\n                }\n                else {\n                    return { appliedUrl: appliedUrl, state: null, shouldActivate: shouldActivate };\n                }\n            }));\n            _this.activateRoutes(routerState$, _this.routerState, _this.currentUrlTree, id, url, rawUrl, skipLocationChange, replaceUrl, resolvePromise, rejectPromise);\n        });\n    };\n    /**\n     * Performs the logic of activating routes. This is a synchronous process by default. While this\n     * is a private method, it could be overridden to make activation asynchronous.\n     */\n    Router.prototype.activateRoutes = function (state, storedState, storedUrl, id, url, rawUrl, skipLocationChange, replaceUrl, resolvePromise, rejectPromise) {\n        var _this = this;\n        // applied the new router state\n        // this operation has side effects\n        var navigationIsSuccessful;\n        state\n            .forEach(function (p) {\n            if (typeof p === 'boolean' || !p.shouldActivate || id !== _this.navigationId || !p.state) {\n                navigationIsSuccessful = false;\n                return;\n            }\n            var appliedUrl = p.appliedUrl, state = p.state;\n            _this.currentUrlTree = appliedUrl;\n            _this.rawUrlTree = _this.urlHandlingStrategy.merge(_this.currentUrlTree, rawUrl);\n            _this.routerState = state;\n            if (!skipLocationChange) {\n                var path = _this.urlSerializer.serialize(_this.rawUrlTree);\n                if (_this.location.isCurrentPathEqualTo(path) || replaceUrl) {\n                    _this.location.replaceState(path, '', { navigationId: id });\n                }\n                else {\n                    _this.location.go(path, '', { navigationId: id });\n                }\n            }\n            new ActivateRoutes(_this.routeReuseStrategy, state, storedState, function (evt) { return _this.triggerEvent(evt); })\n                .activate(_this.rootContexts);\n            navigationIsSuccessful = true;\n        })\n            .then(function () {\n            if (navigationIsSuccessful) {\n                _this.navigated = true;\n                _this.lastSuccessfulId = id;\n                _this.events\n                    .next(new NavigationEnd(id, _this.serializeUrl(url), _this.serializeUrl(_this.currentUrlTree)));\n                resolvePromise(true);\n            }\n            else {\n                _this.resetUrlToCurrentUrlTree();\n                _this.events\n                    .next(new NavigationCancel(id, _this.serializeUrl(url), ''));\n                resolvePromise(false);\n            }\n        }, function (e) {\n            if (isNavigationCancelingError(e)) {\n                _this.navigated = true;\n                _this.resetStateAndUrl(storedState, storedUrl, rawUrl);\n                _this.events\n                    .next(new NavigationCancel(id, _this.serializeUrl(url), e.message));\n                resolvePromise(false);\n            }\n            else {\n                _this.resetStateAndUrl(storedState, storedUrl, rawUrl);\n                _this.events\n                    .next(new NavigationError(id, _this.serializeUrl(url), e));\n                try {\n                    resolvePromise(_this.errorHandler(e));\n                }\n                catch (ee) {\n                    rejectPromise(ee);\n                }\n            }\n        });\n    };\n    Router.prototype.resetStateAndUrl = function (storedState, storedUrl, rawUrl) {\n        this.routerState = storedState;\n        this.currentUrlTree = storedUrl;\n        this.rawUrlTree = this.urlHandlingStrategy.merge(this.currentUrlTree, rawUrl);\n        this.resetUrlToCurrentUrlTree();\n    };\n    Router.prototype.resetUrlToCurrentUrlTree = function () {\n        this.location.replaceState(this.urlSerializer.serialize(this.rawUrlTree), '', { navigationId: this.lastSuccessfulId });\n    };\n    return Router;\n}());\nvar ActivateRoutes = /** @class */ (function () {\n    function ActivateRoutes(routeReuseStrategy, futureState, currState, forwardEvent) {\n        this.routeReuseStrategy = routeReuseStrategy;\n        this.futureState = futureState;\n        this.currState = currState;\n        this.forwardEvent = forwardEvent;\n    }\n    ActivateRoutes.prototype.activate = function (parentContexts) {\n        var futureRoot = this.futureState._root;\n        var currRoot = this.currState ? this.currState._root : null;\n        this.deactivateChildRoutes(futureRoot, currRoot, parentContexts);\n        advanceActivatedRoute(this.futureState.root);\n        this.activateChildRoutes(futureRoot, currRoot, parentContexts);\n    };\n    // De-activate the child route that are not re-used for the future state\n    ActivateRoutes.prototype.deactivateChildRoutes = function (futureNode, currNode, contexts) {\n        var _this = this;\n        var children = nodeChildrenAsMap(currNode);\n        // Recurse on the routes active in the future state to de-activate deeper children\n        futureNode.children.forEach(function (futureChild) {\n            var childOutletName = futureChild.value.outlet;\n            _this.deactivateRoutes(futureChild, children[childOutletName], contexts);\n            delete children[childOutletName];\n        });\n        // De-activate the routes that will not be re-used\n        forEach(children, function (v, childName) {\n            _this.deactivateRouteAndItsChildren(v, contexts);\n        });\n    };\n    ActivateRoutes.prototype.deactivateRoutes = function (futureNode, currNode, parentContext) {\n        var future = futureNode.value;\n        var curr = currNode ? currNode.value : null;\n        if (future === curr) {\n            // Reusing the node, check to see if the children need to be de-activated\n            if (future.component) {\n                // If we have a normal route, we need to go through an outlet.\n                var context = parentContext.getContext(future.outlet);\n                if (context) {\n                    this.deactivateChildRoutes(futureNode, currNode, context.children);\n                }\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.deactivateChildRoutes(futureNode, currNode, parentContext);\n            }\n        }\n        else {\n            if (curr) {\n                // Deactivate the current route which will not be re-used\n                this.deactivateRouteAndItsChildren(currNode, parentContext);\n            }\n        }\n    };\n    ActivateRoutes.prototype.deactivateRouteAndItsChildren = function (route, parentContexts) {\n        if (this.routeReuseStrategy.shouldDetach(route.value.snapshot)) {\n            this.detachAndStoreRouteSubtree(route, parentContexts);\n        }\n        else {\n            this.deactivateRouteAndOutlet(route, parentContexts);\n        }\n    };\n    ActivateRoutes.prototype.detachAndStoreRouteSubtree = function (route, parentContexts) {\n        var context = parentContexts.getContext(route.value.outlet);\n        if (context && context.outlet) {\n            var componentRef = context.outlet.detach();\n            var contexts = context.children.onOutletDeactivated();\n            this.routeReuseStrategy.store(route.value.snapshot, { componentRef: componentRef, route: route, contexts: contexts });\n        }\n    };\n    ActivateRoutes.prototype.deactivateRouteAndOutlet = function (route, parentContexts) {\n        var _this = this;\n        var context = parentContexts.getContext(route.value.outlet);\n        if (context) {\n            var children = nodeChildrenAsMap(route);\n            var contexts_1 = route.value.component ? context.children : parentContexts;\n            forEach(children, function (v, k) { return _this.deactivateRouteAndItsChildren(v, contexts_1); });\n            if (context.outlet) {\n                // Destroy the component\n                context.outlet.deactivate();\n                // Destroy the contexts for all the outlets that were in the component\n                context.children.onOutletDeactivated();\n            }\n        }\n    };\n    ActivateRoutes.prototype.activateChildRoutes = function (futureNode, currNode, contexts) {\n        var _this = this;\n        var children = nodeChildrenAsMap(currNode);\n        futureNode.children.forEach(function (c) {\n            _this.activateRoutes(c, children[c.value.outlet], contexts);\n            _this.forwardEvent(new ActivationEnd(c.value.snapshot));\n        });\n        if (futureNode.children.length) {\n            this.forwardEvent(new ChildActivationEnd(futureNode.value.snapshot));\n        }\n    };\n    ActivateRoutes.prototype.activateRoutes = function (futureNode, currNode, parentContexts) {\n        var future = futureNode.value;\n        var curr = currNode ? currNode.value : null;\n        advanceActivatedRoute(future);\n        // reusing the node\n        if (future === curr) {\n            if (future.component) {\n                // If we have a normal route, we need to go through an outlet.\n                var context = parentContexts.getOrCreateContext(future.outlet);\n                this.activateChildRoutes(futureNode, currNode, context.children);\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.activateChildRoutes(futureNode, currNode, parentContexts);\n            }\n        }\n        else {\n            if (future.component) {\n                // if we have a normal route, we need to place the component into the outlet and recurse.\n                var context = parentContexts.getOrCreateContext(future.outlet);\n                if (this.routeReuseStrategy.shouldAttach(future.snapshot)) {\n                    var stored = this.routeReuseStrategy.retrieve(future.snapshot);\n                    this.routeReuseStrategy.store(future.snapshot, null);\n                    context.children.onOutletReAttached(stored.contexts);\n                    context.attachRef = stored.componentRef;\n                    context.route = stored.route.value;\n                    if (context.outlet) {\n                        // Attach right away when the outlet has already been instantiated\n                        // Otherwise attach from `RouterOutlet.ngOnInit` when it is instantiated\n                        context.outlet.attach(stored.componentRef, stored.route.value);\n                    }\n                    advanceActivatedRouteNodeAndItsChildren(stored.route);\n                }\n                else {\n                    var config = parentLoadedConfig(future.snapshot);\n                    var cmpFactoryResolver = config ? config.module.componentFactoryResolver : null;\n                    context.route = future;\n                    context.resolver = cmpFactoryResolver;\n                    if (context.outlet) {\n                        // Activate the outlet when it has already been instantiated\n                        // Otherwise it will get activated from its `ngOnInit` when instantiated\n                        context.outlet.activateWith(future, cmpFactoryResolver);\n                    }\n                    this.activateChildRoutes(futureNode, null, context.children);\n                }\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.activateChildRoutes(futureNode, null, parentContexts);\n            }\n        }\n    };\n    return ActivateRoutes;\n}());\nfunction advanceActivatedRouteNodeAndItsChildren(node) {\n    advanceActivatedRoute(node.value);\n    node.children.forEach(advanceActivatedRouteNodeAndItsChildren);\n}\nfunction parentLoadedConfig(snapshot) {\n    for (var s = snapshot.parent; s; s = s.parent) {\n        var route = s.routeConfig;\n        if (route && route._loadedConfig)\n            return route._loadedConfig;\n        if (route && route.component)\n            return null;\n    }\n    return null;\n}\nfunction validateCommands(commands) {\n    for (var i = 0; i < commands.length; i++) {\n        var cmd = commands[i];\n        if (cmd == null) {\n            throw new Error(\"The requested path contains \" + cmd + \" segment at index \" + i);\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Lets you link to specific routes in your app.\n *\n * Consider the following route configuration:\n * `[{ path: 'user/:name', component: UserCmp }]`.\n * When linking to this `user/:name` route, you use the `RouterLink` directive.\n *\n * If the link is static, you can use the directive as follows:\n * `<a routerLink=\"/user/bob\">link to user component</a>`\n *\n * If you use dynamic values to generate the link, you can pass an array of path\n * segments, followed by the params for each segment.\n *\n * For instance `['/team', teamId, 'user', userName, {details: true}]`\n * means that we want to generate a link to `/team/11/user/bob;details=true`.\n *\n * Multiple static segments can be merged into one\n * (e.g., `['/team/11/user', userName, {details: true}]`).\n *\n * The first segment name can be prepended with `/`, `./`, or `../`:\n * * If the first segment begins with `/`, the router will look up the route from the root of the\n *   app.\n * * If the first segment begins with `./`, or doesn't begin with a slash, the router will\n *   instead look in the children of the current activated route.\n * * And if the first segment begins with `../`, the router will go up one level.\n *\n * You can set query params and fragment as follows:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" fragment=\"education\">\n *   link to user component\n * </a>\n * ```\n * RouterLink will use these to generate this link: `/user/bob#education?debug=true`.\n *\n * (Deprecated in v4.0.0 use `queryParamsHandling` instead) You can also tell the\n * directive to preserve the current query params and fragment:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" preserveQueryParams preserveFragment>\n *   link to user component\n * </a>\n * ```\n *\n * You can tell the directive to how to handle queryParams, available options are:\n *  - `'merge'`: merge the queryParams into the current queryParams\n *  - `'preserve'`: preserve the current queryParams\n *  - default/`''`: use the queryParams only\n *\n * Same options for {@link NavigationExtras#queryParamsHandling\n * NavigationExtras#queryParamsHandling}.\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" queryParamsHandling=\"merge\">\n *   link to user component\n * </a>\n * ```\n *\n * The router link directive always treats the provided input as a delta to the current url.\n *\n * For instance, if the current url is `/user/(box//aux:team)`.\n *\n * Then the following link `<a [routerLink]=\"['/user/jim']\">Jim</a>` will generate the link\n * `/user/(jim//aux:team)`.\n *\n * See {@link Router#createUrlTree createUrlTree} for more information.\n *\n * @ngModule RouterModule\n *\n *\n */\nvar RouterLink = /** @class */ (function () {\n    function RouterLink(router, route, tabIndex, renderer, el) {\n        this.router = router;\n        this.route = route;\n        this.commands = [];\n        if (tabIndex == null) {\n            renderer.setAttribute(el.nativeElement, 'tabindex', '0');\n        }\n    }\n    Object.defineProperty(RouterLink.prototype, \"routerLink\", {\n        set: function (commands) {\n            if (commands != null) {\n                this.commands = Array.isArray(commands) ? commands : [commands];\n            }\n            else {\n                this.commands = [];\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterLink.prototype, \"preserveQueryParams\", {\n        /**\n         * @deprecated 4.0.0 use `queryParamsHandling` instead.\n         */\n        set: function (value) {\n            if (core.isDevMode() && console && console.warn) {\n                console.warn('preserveQueryParams is deprecated!, use queryParamsHandling instead.');\n            }\n            this.preserve = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RouterLink.prototype.onClick = function () {\n        var extras = {\n            skipLocationChange: attrBoolValue(this.skipLocationChange),\n            replaceUrl: attrBoolValue(this.replaceUrl),\n        };\n        this.router.navigateByUrl(this.urlTree, extras);\n        return true;\n    };\n    Object.defineProperty(RouterLink.prototype, \"urlTree\", {\n        get: function () {\n            return this.router.createUrlTree(this.commands, {\n                relativeTo: this.route,\n                queryParams: this.queryParams,\n                fragment: this.fragment,\n                preserveQueryParams: attrBoolValue(this.preserve),\n                queryParamsHandling: this.queryParamsHandling,\n                preserveFragment: attrBoolValue(this.preserveFragment),\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RouterLink.decorators = [\n        { type: core.Directive, args: [{ selector: ':not(a)[routerLink]' },] }\n    ];\n    /** @nocollapse */\n    RouterLink.ctorParameters = function () { return [\n        { type: Router },\n        { type: ActivatedRoute },\n        { type: String, decorators: [{ type: core.Attribute, args: ['tabindex',] }] },\n        { type: core.Renderer2 },\n        { type: core.ElementRef }\n    ]; };\n    RouterLink.propDecorators = {\n        queryParams: [{ type: core.Input }],\n        fragment: [{ type: core.Input }],\n        queryParamsHandling: [{ type: core.Input }],\n        preserveFragment: [{ type: core.Input }],\n        skipLocationChange: [{ type: core.Input }],\n        replaceUrl: [{ type: core.Input }],\n        routerLink: [{ type: core.Input }],\n        preserveQueryParams: [{ type: core.Input }],\n        onClick: [{ type: core.HostListener, args: ['click',] }]\n    };\n    return RouterLink;\n}());\n/**\n * @description\n *\n * Lets you link to specific routes in your app.\n *\n * See `RouterLink` for more information.\n *\n * @ngModule RouterModule\n *\n *\n */\nvar RouterLinkWithHref = /** @class */ (function () {\n    function RouterLinkWithHref(router, route, locationStrategy) {\n        var _this = this;\n        this.router = router;\n        this.route = route;\n        this.locationStrategy = locationStrategy;\n        this.commands = [];\n        this.subscription = router.events.subscribe(function (s) {\n            if (s instanceof NavigationEnd) {\n                _this.updateTargetUrlAndHref();\n            }\n        });\n    }\n    Object.defineProperty(RouterLinkWithHref.prototype, \"routerLink\", {\n        set: function (commands) {\n            if (commands != null) {\n                this.commands = Array.isArray(commands) ? commands : [commands];\n            }\n            else {\n                this.commands = [];\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterLinkWithHref.prototype, \"preserveQueryParams\", {\n        set: function (value) {\n            if (core.isDevMode() && console && console.warn) {\n                console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n            }\n            this.preserve = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RouterLinkWithHref.prototype.ngOnChanges = function (changes) { this.updateTargetUrlAndHref(); };\n    RouterLinkWithHref.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n    RouterLinkWithHref.prototype.onClick = function (button, ctrlKey, metaKey, shiftKey) {\n        if (button !== 0 || ctrlKey || metaKey || shiftKey) {\n            return true;\n        }\n        if (typeof this.target === 'string' && this.target != '_self') {\n            return true;\n        }\n        var extras = {\n            skipLocationChange: attrBoolValue(this.skipLocationChange),\n            replaceUrl: attrBoolValue(this.replaceUrl),\n        };\n        this.router.navigateByUrl(this.urlTree, extras);\n        return false;\n    };\n    RouterLinkWithHref.prototype.updateTargetUrlAndHref = function () {\n        this.href = this.locationStrategy.prepareExternalUrl(this.router.serializeUrl(this.urlTree));\n    };\n    Object.defineProperty(RouterLinkWithHref.prototype, \"urlTree\", {\n        get: function () {\n            return this.router.createUrlTree(this.commands, {\n                relativeTo: this.route,\n                queryParams: this.queryParams,\n                fragment: this.fragment,\n                preserveQueryParams: attrBoolValue(this.preserve),\n                queryParamsHandling: this.queryParamsHandling,\n                preserveFragment: attrBoolValue(this.preserveFragment),\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RouterLinkWithHref.decorators = [\n        { type: core.Directive, args: [{ selector: 'a[routerLink]' },] }\n    ];\n    /** @nocollapse */\n    RouterLinkWithHref.ctorParameters = function () { return [\n        { type: Router },\n        { type: ActivatedRoute },\n        { type: common.LocationStrategy }\n    ]; };\n    RouterLinkWithHref.propDecorators = {\n        target: [{ type: core.HostBinding, args: ['attr.target',] }, { type: core.Input }],\n        queryParams: [{ type: core.Input }],\n        fragment: [{ type: core.Input }],\n        queryParamsHandling: [{ type: core.Input }],\n        preserveFragment: [{ type: core.Input }],\n        skipLocationChange: [{ type: core.Input }],\n        replaceUrl: [{ type: core.Input }],\n        href: [{ type: core.HostBinding }],\n        routerLink: [{ type: core.Input }],\n        preserveQueryParams: [{ type: core.Input }],\n        onClick: [{ type: core.HostListener, args: ['click', ['$event.button', '$event.ctrlKey', '$event.metaKey', '$event.shiftKey'],] }]\n    };\n    return RouterLinkWithHref;\n}());\nfunction attrBoolValue(s) {\n    return s === '' || !!s;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n *\n * @description\n *\n * Lets you add a CSS class to an element when the link's route becomes active.\n *\n * This directive lets you add a CSS class to an element when the link's route\n * becomes active.\n *\n * Consider the following example:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\">Bob</a>\n * ```\n *\n * When the url is either '/user' or '/user/bob', the active-link class will\n * be added to the `a` tag. If the url changes, the class will be removed.\n *\n * You can set more than one class, as follows:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"class1 class2\">Bob</a>\n * <a routerLink=\"/user/bob\" [routerLinkActive]=\"['class1', 'class2']\">Bob</a>\n * ```\n *\n * You can configure RouterLinkActive by passing `exact: true`. This will add the classes\n * only when the url matches the link exactly.\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact:\n * true}\">Bob</a>\n * ```\n *\n * You can assign the RouterLinkActive instance to a template variable and directly check\n * the `isActive` status.\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive #rla=\"routerLinkActive\">\n *   Bob {{ rla.isActive ? '(already open)' : ''}}\n * </a>\n * ```\n *\n * Finally, you can apply the RouterLinkActive directive to an ancestor of a RouterLink.\n *\n * ```\n * <div routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact: true}\">\n *   <a routerLink=\"/user/jim\">Jim</a>\n *   <a routerLink=\"/user/bob\">Bob</a>\n * </div>\n * ```\n *\n * This will set the active-link class on the div tag if the url is either '/user/jim' or\n * '/user/bob'.\n *\n * @ngModule RouterModule\n *\n *\n */\nvar RouterLinkActive = /** @class */ (function () {\n    function RouterLinkActive(router, element, renderer, cdr) {\n        var _this = this;\n        this.router = router;\n        this.element = element;\n        this.renderer = renderer;\n        this.cdr = cdr;\n        this.classes = [];\n        this.isActive = false;\n        this.routerLinkActiveOptions = { exact: false };\n        this.subscription = router.events.subscribe(function (s) {\n            if (s instanceof NavigationEnd) {\n                _this.update();\n            }\n        });\n    }\n    RouterLinkActive.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        this.links.changes.subscribe(function (_) { return _this.update(); });\n        this.linksWithHrefs.changes.subscribe(function (_) { return _this.update(); });\n        this.update();\n    };\n    Object.defineProperty(RouterLinkActive.prototype, \"routerLinkActive\", {\n        set: function (data) {\n            var classes = Array.isArray(data) ? data : data.split(' ');\n            this.classes = classes.filter(function (c) { return !!c; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RouterLinkActive.prototype.ngOnChanges = function (changes) { this.update(); };\n    RouterLinkActive.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n    RouterLinkActive.prototype.update = function () {\n        var _this = this;\n        if (!this.links || !this.linksWithHrefs || !this.router.navigated)\n            return;\n        Promise.resolve().then(function () {\n            var hasActiveLinks = _this.hasActiveLinks();\n            if (_this.isActive !== hasActiveLinks) {\n                _this.isActive = hasActiveLinks;\n                _this.classes.forEach(function (c) {\n                    if (hasActiveLinks) {\n                        _this.renderer.addClass(_this.element.nativeElement, c);\n                    }\n                    else {\n                        _this.renderer.removeClass(_this.element.nativeElement, c);\n                    }\n                });\n            }\n        });\n    };\n    RouterLinkActive.prototype.isLinkActive = function (router) {\n        var _this = this;\n        return function (link) {\n            return router.isActive(link.urlTree, _this.routerLinkActiveOptions.exact);\n        };\n    };\n    RouterLinkActive.prototype.hasActiveLinks = function () {\n        return this.links.some(this.isLinkActive(this.router)) ||\n            this.linksWithHrefs.some(this.isLinkActive(this.router));\n    };\n    RouterLinkActive.decorators = [\n        { type: core.Directive, args: [{\n                    selector: '[routerLinkActive]',\n                    exportAs: 'routerLinkActive',\n                },] }\n    ];\n    /** @nocollapse */\n    RouterLinkActive.ctorParameters = function () { return [\n        { type: Router },\n        { type: core.ElementRef },\n        { type: core.Renderer2 },\n        { type: core.ChangeDetectorRef }\n    ]; };\n    RouterLinkActive.propDecorators = {\n        links: [{ type: core.ContentChildren, args: [RouterLink, { descendants: true },] }],\n        linksWithHrefs: [{ type: core.ContentChildren, args: [RouterLinkWithHref, { descendants: true },] }],\n        routerLinkActiveOptions: [{ type: core.Input }],\n        routerLinkActive: [{ type: core.Input }]\n    };\n    return RouterLinkActive;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Store contextual information about a `RouterOutlet`\n *\n *\n */\nvar OutletContext = /** @class */ (function () {\n    function OutletContext() {\n        this.outlet = null;\n        this.route = null;\n        this.resolver = null;\n        this.children = new ChildrenOutletContexts();\n        this.attachRef = null;\n    }\n    return OutletContext;\n}());\n/**\n * Store contextual information about the children (= nested) `RouterOutlet`\n *\n *\n */\nvar ChildrenOutletContexts = /** @class */ (function () {\n    function ChildrenOutletContexts() {\n        // contexts for child outlets, by name.\n        this.contexts = new Map();\n    }\n    /** Called when a `RouterOutlet` directive is instantiated */\n    ChildrenOutletContexts.prototype.onChildOutletCreated = function (childName, outlet) {\n        var context = this.getOrCreateContext(childName);\n        context.outlet = outlet;\n        this.contexts.set(childName, context);\n    };\n    /**\n     * Called when a `RouterOutlet` directive is destroyed.\n     * We need to keep the context as the outlet could be destroyed inside a NgIf and might be\n     * re-created later.\n     */\n    ChildrenOutletContexts.prototype.onChildOutletDestroyed = function (childName) {\n        var context = this.getContext(childName);\n        if (context) {\n            context.outlet = null;\n        }\n    };\n    /**\n     * Called when the corresponding route is deactivated during navigation.\n     * Because the component get destroyed, all children outlet are destroyed.\n     */\n    ChildrenOutletContexts.prototype.onOutletDeactivated = function () {\n        var contexts = this.contexts;\n        this.contexts = new Map();\n        return contexts;\n    };\n    ChildrenOutletContexts.prototype.onOutletReAttached = function (contexts) { this.contexts = contexts; };\n    ChildrenOutletContexts.prototype.getOrCreateContext = function (childName) {\n        var context = this.getContext(childName);\n        if (!context) {\n            context = new OutletContext();\n            this.contexts.set(childName, context);\n        }\n        return context;\n    };\n    ChildrenOutletContexts.prototype.getContext = function (childName) { return this.contexts.get(childName) || null; };\n    return ChildrenOutletContexts;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Acts as a placeholder that Angular dynamically fills based on the current router state.\n *\n * ```\n * <router-outlet></router-outlet>\n * <router-outlet name='left'></router-outlet>\n * <router-outlet name='right'></router-outlet>\n * ```\n *\n * A router outlet will emit an activate event any time a new component is being instantiated,\n * and a deactivate event when it is being destroyed.\n *\n * ```\n * <router-outlet\n *   (activate)='onActivate($event)'\n *   (deactivate)='onDeactivate($event)'></router-outlet>\n * ```\n * @ngModule RouterModule\n *\n *\n */\nvar RouterOutlet = /** @class */ (function () {\n    function RouterOutlet(parentContexts, location, resolver, name, changeDetector) {\n        this.parentContexts = parentContexts;\n        this.location = location;\n        this.resolver = resolver;\n        this.changeDetector = changeDetector;\n        this.activated = null;\n        this._activatedRoute = null;\n        this.activateEvents = new core.EventEmitter();\n        this.deactivateEvents = new core.EventEmitter();\n        this.name = name || PRIMARY_OUTLET;\n        parentContexts.onChildOutletCreated(this.name, this);\n    }\n    RouterOutlet.prototype.ngOnDestroy = function () { this.parentContexts.onChildOutletDestroyed(this.name); };\n    RouterOutlet.prototype.ngOnInit = function () {\n        if (!this.activated) {\n            // If the outlet was not instantiated at the time the route got activated we need to populate\n            // the outlet when it is initialized (ie inside a NgIf)\n            var context = this.parentContexts.getContext(this.name);\n            if (context && context.route) {\n                if (context.attachRef) {\n                    // `attachRef` is populated when there is an existing component to mount\n                    this.attach(context.attachRef, context.route);\n                }\n                else {\n                    // otherwise the component defined in the configuration is created\n                    this.activateWith(context.route, context.resolver || null);\n                }\n            }\n        }\n    };\n    Object.defineProperty(RouterOutlet.prototype, \"isActivated\", {\n        get: function () { return !!this.activated; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"component\", {\n        get: function () {\n            if (!this.activated)\n                throw new Error('Outlet is not activated');\n            return this.activated.instance;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"activatedRoute\", {\n        get: function () {\n            if (!this.activated)\n                throw new Error('Outlet is not activated');\n            return this._activatedRoute;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"activatedRouteData\", {\n        get: function () {\n            if (this._activatedRoute) {\n                return this._activatedRoute.snapshot.data;\n            }\n            return {};\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Called when the `RouteReuseStrategy` instructs to detach the subtree\n     */\n    RouterOutlet.prototype.detach = function () {\n        if (!this.activated)\n            throw new Error('Outlet is not activated');\n        this.location.detach();\n        var cmp = this.activated;\n        this.activated = null;\n        this._activatedRoute = null;\n        return cmp;\n    };\n    /**\n     * Called when the `RouteReuseStrategy` instructs to re-attach a previously detached subtree\n     */\n    RouterOutlet.prototype.attach = function (ref, activatedRoute) {\n        this.activated = ref;\n        this._activatedRoute = activatedRoute;\n        this.location.insert(ref.hostView);\n    };\n    RouterOutlet.prototype.deactivate = function () {\n        if (this.activated) {\n            var c = this.component;\n            this.activated.destroy();\n            this.activated = null;\n            this._activatedRoute = null;\n            this.deactivateEvents.emit(c);\n        }\n    };\n    RouterOutlet.prototype.activateWith = function (activatedRoute, resolver) {\n        if (this.isActivated) {\n            throw new Error('Cannot activate an already activated outlet');\n        }\n        this._activatedRoute = activatedRoute;\n        var snapshot = activatedRoute._futureSnapshot;\n        var component = snapshot.routeConfig.component;\n        resolver = resolver || this.resolver;\n        var factory = resolver.resolveComponentFactory(component);\n        var childContexts = this.parentContexts.getOrCreateContext(this.name).children;\n        var injector = new OutletInjector(activatedRoute, childContexts, this.location.injector);\n        this.activated = this.location.createComponent(factory, this.location.length, injector);\n        // Calling `markForCheck` to make sure we will run the change detection when the\n        // `RouterOutlet` is inside a `ChangeDetectionStrategy.OnPush` component.\n        this.changeDetector.markForCheck();\n        this.activateEvents.emit(this.activated.instance);\n    };\n    RouterOutlet.decorators = [\n        { type: core.Directive, args: [{ selector: 'router-outlet', exportAs: 'outlet' },] }\n    ];\n    /** @nocollapse */\n    RouterOutlet.ctorParameters = function () { return [\n        { type: ChildrenOutletContexts },\n        { type: core.ViewContainerRef },\n        { type: core.ComponentFactoryResolver },\n        { type: String, decorators: [{ type: core.Attribute, args: ['name',] }] },\n        { type: core.ChangeDetectorRef }\n    ]; };\n    RouterOutlet.propDecorators = {\n        activateEvents: [{ type: core.Output, args: ['activate',] }],\n        deactivateEvents: [{ type: core.Output, args: ['deactivate',] }]\n    };\n    return RouterOutlet;\n}());\nvar OutletInjector = /** @class */ (function () {\n    function OutletInjector(route, childContexts, parent) {\n        this.route = route;\n        this.childContexts = childContexts;\n        this.parent = parent;\n    }\n    OutletInjector.prototype.get = function (token, notFoundValue) {\n        if (token === ActivatedRoute) {\n            return this.route;\n        }\n        if (token === ChildrenOutletContexts) {\n            return this.childContexts;\n        }\n        return this.parent.get(token, notFoundValue);\n    };\n    return OutletInjector;\n}());\n\n/**\n*@license\n*Copyright Google Inc. All Rights Reserved.\n*\n*Use of this source code is governed by an MIT-style license that can be\n*found in the LICENSE file at https://angular.io/license\n*/\n/**\n * @description\n *\n * Provides a preloading strategy.\n *\n * @experimental\n */\nvar PreloadingStrategy = /** @class */ (function () {\n    function PreloadingStrategy() {\n    }\n    return PreloadingStrategy;\n}());\n/**\n * @description\n *\n * Provides a preloading strategy that preloads all modules as quickly as possible.\n *\n * ```\n * RouteModule.forRoot(ROUTES, {preloadingStrategy: PreloadAllModules})\n * ```\n *\n * @experimental\n */\nvar PreloadAllModules = /** @class */ (function () {\n    function PreloadAllModules() {\n    }\n    PreloadAllModules.prototype.preload = function (route, fn) {\n        return fn().pipe(operators.catchError(function () { return rxjs.of(null); }));\n    };\n    return PreloadAllModules;\n}());\n/**\n * @description\n *\n * Provides a preloading strategy that does not preload any modules.\n *\n * This strategy is enabled by default.\n *\n * @experimental\n */\nvar NoPreloading = /** @class */ (function () {\n    function NoPreloading() {\n    }\n    NoPreloading.prototype.preload = function (route, fn) { return rxjs.of(null); };\n    return NoPreloading;\n}());\n/**\n * The preloader optimistically loads all router configurations to\n * make navigations into lazily-loaded sections of the application faster.\n *\n * The preloader runs in the background. When the router bootstraps, the preloader\n * starts listening to all navigation events. After every such event, the preloader\n * will check if any configurations can be loaded lazily.\n *\n * If a route is protected by `canLoad` guards, the preloaded will not load it.\n *\n *\n */\nvar RouterPreloader = /** @class */ (function () {\n    function RouterPreloader(router, moduleLoader, compiler, injector, preloadingStrategy) {\n        this.router = router;\n        this.injector = injector;\n        this.preloadingStrategy = preloadingStrategy;\n        var onStartLoad = function (r) { return router.triggerEvent(new RouteConfigLoadStart(r)); };\n        var onEndLoad = function (r) { return router.triggerEvent(new RouteConfigLoadEnd(r)); };\n        this.loader = new RouterConfigLoader(moduleLoader, compiler, onStartLoad, onEndLoad);\n    }\n    RouterPreloader.prototype.setUpPreloading = function () {\n        var _this = this;\n        this.subscription =\n            this.router.events\n                .pipe(operators.filter(function (e) { return e instanceof NavigationEnd; }), operators.concatMap(function () { return _this.preload(); }))\n                .subscribe(function () { });\n    };\n    RouterPreloader.prototype.preload = function () {\n        var ngModule = this.injector.get(core.NgModuleRef);\n        return this.processRoutes(ngModule, this.router.config);\n    };\n    // TODO(jasonaden): This class relies on code external to the class to call setUpPreloading. If\n    // this hasn't been done, ngOnDestroy will fail as this.subscription will be undefined. This\n    // should be refactored.\n    RouterPreloader.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n    RouterPreloader.prototype.processRoutes = function (ngModule, routes) {\n        var res = [];\n        try {\n            for (var routes_1 = __values(routes), routes_1_1 = routes_1.next(); !routes_1_1.done; routes_1_1 = routes_1.next()) {\n                var route = routes_1_1.value;\n                // we already have the config loaded, just recurse\n                if (route.loadChildren && !route.canLoad && route._loadedConfig) {\n                    var childConfig = route._loadedConfig;\n                    res.push(this.processRoutes(childConfig.module, childConfig.routes));\n                    // no config loaded, fetch the config\n                }\n                else if (route.loadChildren && !route.canLoad) {\n                    res.push(this.preloadConfig(ngModule, route));\n                    // recurse into children\n                }\n                else if (route.children) {\n                    res.push(this.processRoutes(ngModule, route.children));\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (routes_1_1 && !routes_1_1.done && (_a = routes_1.return)) _a.call(routes_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return rxjs.from(res).pipe(operators.mergeAll(), operators.map(function (_) { return void 0; }));\n        var e_1, _a;\n    };\n    RouterPreloader.prototype.preloadConfig = function (ngModule, route) {\n        var _this = this;\n        return this.preloadingStrategy.preload(route, function () {\n            var loaded$ = _this.loader.load(ngModule.injector, route);\n            return loaded$.pipe(operators.mergeMap(function (config) {\n                route._loadedConfig = config;\n                return _this.processRoutes(config.module, config.routes);\n            }));\n        });\n    };\n    RouterPreloader.decorators = [\n        { type: core.Injectable }\n    ];\n    /** @nocollapse */\n    RouterPreloader.ctorParameters = function () { return [\n        { type: Router },\n        { type: core.NgModuleFactoryLoader },\n        { type: core.Compiler },\n        { type: core.Injector },\n        { type: PreloadingStrategy }\n    ]; };\n    return RouterPreloader;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Contains a list of directives\n *\n *\n */\nvar ROUTER_DIRECTIVES = [RouterOutlet, RouterLink, RouterLinkWithHref, RouterLinkActive, EmptyOutletComponent];\n/**\n * @description\n *\n * Is used in DI to configure the router.\n *\n *\n */\nvar ROUTER_CONFIGURATION = new core.InjectionToken('ROUTER_CONFIGURATION');\n/**\n * @docsNotRequired\n */\nvar ROUTER_FORROOT_GUARD = new core.InjectionToken('ROUTER_FORROOT_GUARD');\nvar ROUTER_PROVIDERS = [\n    common.Location,\n    { provide: UrlSerializer, useClass: DefaultUrlSerializer },\n    {\n        provide: Router,\n        useFactory: setupRouter,\n        deps: [\n            core.ApplicationRef, UrlSerializer, ChildrenOutletContexts, common.Location, core.Injector,\n            core.NgModuleFactoryLoader, core.Compiler, ROUTES, ROUTER_CONFIGURATION,\n            [UrlHandlingStrategy, new core.Optional()], [RouteReuseStrategy, new core.Optional()]\n        ]\n    },\n    ChildrenOutletContexts,\n    { provide: ActivatedRoute, useFactory: rootRoute, deps: [Router] },\n    { provide: core.NgModuleFactoryLoader, useClass: core.SystemJsNgModuleLoader },\n    RouterPreloader,\n    NoPreloading,\n    PreloadAllModules,\n    { provide: ROUTER_CONFIGURATION, useValue: { enableTracing: false } },\n];\nfunction routerNgProbeToken() {\n    return new core.NgProbeToken('Router', Router);\n}\n/**\n * @usageNotes\n *\n * RouterModule can be imported multiple times: once per lazily-loaded bundle.\n * Since the router deals with a global shared resource--location, we cannot have\n * more than one router service active.\n *\n * That is why there are two ways to create the module: `RouterModule.forRoot` and\n * `RouterModule.forChild`.\n *\n * * `forRoot` creates a module that contains all the directives, the given routes, and the router\n *   service itself.\n * * `forChild` creates a module that contains all the directives and the given routes, but does not\n *   include the router service.\n *\n * When registered at the root, the module should be used as follows\n *\n * ```\n * @NgModule({\n *   imports: [RouterModule.forRoot(ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n * For submodules and lazy loaded submodules the module should be used as follows:\n *\n * ```\n * @NgModule({\n *   imports: [RouterModule.forChild(ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n * @description\n *\n * Adds router directives and providers.\n *\n * Managing state transitions is one of the hardest parts of building applications. This is\n * especially true on the web, where you also need to ensure that the state is reflected in the URL.\n * In addition, we often want to split applications into multiple bundles and load them on demand.\n * Doing this transparently is not trivial.\n *\n * The Angular router solves these problems. Using the router, you can declaratively specify\n * application states, manage state transitions while taking care of the URL, and load bundles on\n * demand.\n *\n * [Read this developer guide](https://angular.io/docs/ts/latest/guide/router.html) to get an\n * overview of how the router should be used.\n *\n *\n */\nvar RouterModule = /** @class */ (function () {\n    // Note: We are injecting the Router so it gets created eagerly...\n    function RouterModule(guard, router) {\n    }\n    /**\n     * Creates a module with all the router providers and directives. It also optionally sets up an\n     * application listener to perform an initial navigation.\n     *\n     * Options (see `ExtraOptions`):\n     * * `enableTracing` makes the router log all its internal events to the console.\n     * * `useHash` enables the location strategy that uses the URL fragment instead of the history\n     * API.\n     * * `initialNavigation` disables the initial navigation.\n     * * `errorHandler` provides a custom error handler.\n     * * `preloadingStrategy` configures a preloading strategy (see `PreloadAllModules`).\n     * * `onSameUrlNavigation` configures how the router handles navigation to the current URL. See\n     * `ExtraOptions` for more details.\n     */\n    RouterModule.forRoot = function (routes, config) {\n        return {\n            ngModule: RouterModule,\n            providers: [\n                ROUTER_PROVIDERS,\n                provideRoutes(routes),\n                {\n                    provide: ROUTER_FORROOT_GUARD,\n                    useFactory: provideForRootGuard,\n                    deps: [[Router, new core.Optional(), new core.SkipSelf()]]\n                },\n                { provide: ROUTER_CONFIGURATION, useValue: config ? config : {} },\n                {\n                    provide: common.LocationStrategy,\n                    useFactory: provideLocationStrategy,\n                    deps: [\n                        common.PlatformLocation, [new core.Inject(common.APP_BASE_HREF), new core.Optional()], ROUTER_CONFIGURATION\n                    ]\n                },\n                {\n                    provide: PreloadingStrategy,\n                    useExisting: config && config.preloadingStrategy ? config.preloadingStrategy :\n                        NoPreloading\n                },\n                { provide: core.NgProbeToken, multi: true, useFactory: routerNgProbeToken },\n                provideRouterInitializer(),\n            ],\n        };\n    };\n    /**\n     * Creates a module with all the router directives and a provider registering routes.\n     */\n    RouterModule.forChild = function (routes) {\n        return { ngModule: RouterModule, providers: [provideRoutes(routes)] };\n    };\n    RouterModule.decorators = [\n        { type: core.NgModule, args: [{\n                    declarations: ROUTER_DIRECTIVES,\n                    exports: ROUTER_DIRECTIVES,\n                    entryComponents: [EmptyOutletComponent]\n                },] }\n    ];\n    /** @nocollapse */\n    RouterModule.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: core.Optional }, { type: core.Inject, args: [ROUTER_FORROOT_GUARD,] }] },\n        { type: Router, decorators: [{ type: core.Optional }] }\n    ]; };\n    return RouterModule;\n}());\nfunction provideLocationStrategy(platformLocationStrategy, baseHref, options) {\n    if (options === void 0) { options = {}; }\n    return options.useHash ? new common.HashLocationStrategy(platformLocationStrategy, baseHref) :\n        new common.PathLocationStrategy(platformLocationStrategy, baseHref);\n}\nfunction provideForRootGuard(router) {\n    if (router) {\n        throw new Error(\"RouterModule.forRoot() called twice. Lazy loaded modules should use RouterModule.forChild() instead.\");\n    }\n    return 'guarded';\n}\n/**\n * @description\n *\n * Registers routes.\n *\n * ### Example\n *\n * ```\n * @NgModule({\n *   imports: [RouterModule.forChild(ROUTES)],\n *   providers: [provideRoutes(EXTRA_ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n *\n */\nfunction provideRoutes(routes) {\n    return [\n        { provide: core.ANALYZE_FOR_ENTRY_COMPONENTS, multi: true, useValue: routes },\n        { provide: ROUTES, multi: true, useValue: routes },\n    ];\n}\nfunction setupRouter(ref, urlSerializer, contexts, location, injector, loader, compiler, config, opts, urlHandlingStrategy, routeReuseStrategy) {\n    if (opts === void 0) { opts = {}; }\n    var router = new Router(null, urlSerializer, contexts, location, injector, loader, compiler, flatten(config));\n    if (urlHandlingStrategy) {\n        router.urlHandlingStrategy = urlHandlingStrategy;\n    }\n    if (routeReuseStrategy) {\n        router.routeReuseStrategy = routeReuseStrategy;\n    }\n    if (opts.errorHandler) {\n        router.errorHandler = opts.errorHandler;\n    }\n    if (opts.enableTracing) {\n        var dom_1 = platformBrowser.ɵgetDOM();\n        router.events.subscribe(function (e) {\n            dom_1.logGroup(\"Router Event: \" + e.constructor.name);\n            dom_1.log(e.toString());\n            dom_1.log(e);\n            dom_1.logGroupEnd();\n        });\n    }\n    if (opts.onSameUrlNavigation) {\n        router.onSameUrlNavigation = opts.onSameUrlNavigation;\n    }\n    if (opts.paramsInheritanceStrategy) {\n        router.paramsInheritanceStrategy = opts.paramsInheritanceStrategy;\n    }\n    return router;\n}\nfunction rootRoute(router) {\n    return router.routerState.root;\n}\n/**\n * To initialize the router properly we need to do in two steps:\n *\n * We need to start the navigation in a APP_INITIALIZER to block the bootstrap if\n * a resolver or a guards executes asynchronously. Second, we need to actually run\n * activation in a BOOTSTRAP_LISTENER. We utilize the afterPreactivation\n * hook provided by the router to do that.\n *\n * The router navigation starts, reaches the point when preactivation is done, and then\n * pauses. It waits for the hook to be resolved. We then resolve it only in a bootstrap listener.\n */\nvar RouterInitializer = /** @class */ (function () {\n    function RouterInitializer(injector) {\n        this.injector = injector;\n        this.initNavigation = false;\n        this.resultOfPreactivationDone = new rxjs.Subject();\n    }\n    RouterInitializer.prototype.appInitializer = function () {\n        var _this = this;\n        var p = this.injector.get(common.LOCATION_INITIALIZED, Promise.resolve(null));\n        return p.then(function () {\n            var resolve = null;\n            var res = new Promise(function (r) { return resolve = r; });\n            var router = _this.injector.get(Router);\n            var opts = _this.injector.get(ROUTER_CONFIGURATION);\n            if (_this.isLegacyDisabled(opts) || _this.isLegacyEnabled(opts)) {\n                resolve(true);\n            }\n            else if (opts.initialNavigation === 'disabled') {\n                router.setUpLocationChangeListener();\n                resolve(true);\n            }\n            else if (opts.initialNavigation === 'enabled') {\n                router.hooks.afterPreactivation = function () {\n                    // only the initial navigation should be delayed\n                    if (!_this.initNavigation) {\n                        _this.initNavigation = true;\n                        resolve(true);\n                        return _this.resultOfPreactivationDone;\n                        // subsequent navigations should not be delayed\n                    }\n                    else {\n                        return rxjs.of(null);\n                    }\n                };\n                router.initialNavigation();\n            }\n            else {\n                throw new Error(\"Invalid initialNavigation options: '\" + opts.initialNavigation + \"'\");\n            }\n            return res;\n        });\n    };\n    RouterInitializer.prototype.bootstrapListener = function (bootstrappedComponentRef) {\n        var opts = this.injector.get(ROUTER_CONFIGURATION);\n        var preloader = this.injector.get(RouterPreloader);\n        var router = this.injector.get(Router);\n        var ref = this.injector.get(core.ApplicationRef);\n        if (bootstrappedComponentRef !== ref.components[0]) {\n            return;\n        }\n        if (this.isLegacyEnabled(opts)) {\n            router.initialNavigation();\n        }\n        else if (this.isLegacyDisabled(opts)) {\n            router.setUpLocationChangeListener();\n        }\n        preloader.setUpPreloading();\n        router.resetRootComponentType(ref.componentTypes[0]);\n        this.resultOfPreactivationDone.next(null);\n        this.resultOfPreactivationDone.complete();\n    };\n    RouterInitializer.prototype.isLegacyEnabled = function (opts) {\n        return opts.initialNavigation === 'legacy_enabled' || opts.initialNavigation === true ||\n            opts.initialNavigation === undefined;\n    };\n    RouterInitializer.prototype.isLegacyDisabled = function (opts) {\n        return opts.initialNavigation === 'legacy_disabled' || opts.initialNavigation === false;\n    };\n    RouterInitializer.decorators = [\n        { type: core.Injectable }\n    ];\n    /** @nocollapse */\n    RouterInitializer.ctorParameters = function () { return [\n        { type: core.Injector }\n    ]; };\n    return RouterInitializer;\n}());\nfunction getAppInitializer(r) {\n    return r.appInitializer.bind(r);\n}\nfunction getBootstrapListener(r) {\n    return r.bootstrapListener.bind(r);\n}\n/**\n * A token for the router initializer that will be called after the app is bootstrapped.\n *\n * @experimental\n */\nvar ROUTER_INITIALIZER = new core.InjectionToken('Router Initializer');\nfunction provideRouterInitializer() {\n    return [\n        RouterInitializer,\n        {\n            provide: core.APP_INITIALIZER,\n            multi: true,\n            useFactory: getAppInitializer,\n            deps: [RouterInitializer]\n        },\n        { provide: ROUTER_INITIALIZER, useFactory: getBootstrapListener, deps: [RouterInitializer] },\n        { provide: core.APP_BOOTSTRAP_LISTENER, multi: true, useExisting: ROUTER_INITIALIZER },\n    ];\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\nvar VERSION = new core.Version('6.0.6');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\n\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file is not used to build this module. It is only used during editing\n// by the TypeScript language service and during build for verification. `ngc`\n// replaces this file with production index.ts when it rewrites private symbol\n// names.\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexports.ɵangular_packages_router_router_a = ROUTER_FORROOT_GUARD;\nexports.ɵangular_packages_router_router_g = RouterInitializer;\nexports.ɵangular_packages_router_router_h = getAppInitializer;\nexports.ɵangular_packages_router_router_i = getBootstrapListener;\nexports.ɵangular_packages_router_router_d = provideForRootGuard;\nexports.ɵangular_packages_router_router_c = provideLocationStrategy;\nexports.ɵangular_packages_router_router_j = provideRouterInitializer;\nexports.ɵangular_packages_router_router_f = rootRoute;\nexports.ɵangular_packages_router_router_b = routerNgProbeToken;\nexports.ɵangular_packages_router_router_e = setupRouter;\nexports.ɵangular_packages_router_router_k = Tree;\nexports.ɵangular_packages_router_router_l = TreeNode;\nexports.RouterLink = RouterLink;\nexports.RouterLinkWithHref = RouterLinkWithHref;\nexports.RouterLinkActive = RouterLinkActive;\nexports.RouterOutlet = RouterOutlet;\nexports.ActivationEnd = ActivationEnd;\nexports.ActivationStart = ActivationStart;\nexports.ChildActivationEnd = ChildActivationEnd;\nexports.ChildActivationStart = ChildActivationStart;\nexports.GuardsCheckEnd = GuardsCheckEnd;\nexports.GuardsCheckStart = GuardsCheckStart;\nexports.NavigationCancel = NavigationCancel;\nexports.NavigationEnd = NavigationEnd;\nexports.NavigationError = NavigationError;\nexports.NavigationStart = NavigationStart;\nexports.ResolveEnd = ResolveEnd;\nexports.ResolveStart = ResolveStart;\nexports.RouteConfigLoadEnd = RouteConfigLoadEnd;\nexports.RouteConfigLoadStart = RouteConfigLoadStart;\nexports.RouterEvent = RouterEvent;\nexports.RoutesRecognized = RoutesRecognized;\nexports.RouteReuseStrategy = RouteReuseStrategy;\nexports.Router = Router;\nexports.ROUTES = ROUTES;\nexports.ROUTER_CONFIGURATION = ROUTER_CONFIGURATION;\nexports.ROUTER_INITIALIZER = ROUTER_INITIALIZER;\nexports.RouterModule = RouterModule;\nexports.provideRoutes = provideRoutes;\nexports.ChildrenOutletContexts = ChildrenOutletContexts;\nexports.OutletContext = OutletContext;\nexports.NoPreloading = NoPreloading;\nexports.PreloadAllModules = PreloadAllModules;\nexports.PreloadingStrategy = PreloadingStrategy;\nexports.RouterPreloader = RouterPreloader;\nexports.ActivatedRoute = ActivatedRoute;\nexports.ActivatedRouteSnapshot = ActivatedRouteSnapshot;\nexports.RouterState = RouterState;\nexports.RouterStateSnapshot = RouterStateSnapshot;\nexports.PRIMARY_OUTLET = PRIMARY_OUTLET;\nexports.convertToParamMap = convertToParamMap;\nexports.UrlHandlingStrategy = UrlHandlingStrategy;\nexports.DefaultUrlSerializer = DefaultUrlSerializer;\nexports.UrlSegment = UrlSegment;\nexports.UrlSegmentGroup = UrlSegmentGroup;\nexports.UrlSerializer = UrlSerializer;\nexports.UrlTree = UrlTree;\nexports.VERSION = VERSION;\nexports.ɵEmptyOutletComponent = EmptyOutletComponent;\nexports.ɵROUTER_PROVIDERS = ROUTER_PROVIDERS;\nexports.ɵflatten = flatten;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=router.umd.js.map\n"]}