{"version":3,"sources":["/home/travis/build/angular/angular/dist/packages-dist/router/bundles/router.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","router","common","core","Rx","Observable","prototype","platformBrowser","this","_angular_common","_angular_core","rxjs_BehaviorSubject","rxjs_Subject","rxjs_observable_of","rxjs_operator_concatMap","rxjs_operator_map","rxjs_operator_mergeMap","rxjs_Observable","rxjs_observable_from","rxjs_operator_catch","rxjs_operator_concatAll","rxjs_operator_first","rxjs_util_EmptyError","rxjs_observable_fromPromise","rxjs_operator_every","rxjs_operator_last","rxjs_operator_mergeAll","rxjs_operator_reduce","_angular_platformBrowser","rxjs_operator_filter","__extends","d","b","__","constructor","extendStatics","Object","create","convertToParamMap","params","ParamsAsMap","convertToParams","qp","keys","forEach","name","value","Array","isArray","map","v","equalsParams","a","length","containsParams","names","every","hasOwnProperty","aValue","aIsArray","bValue","indexOf","navigationCancelingError","message","error","Error","NAVIGATION_CANCELING_ERROR","isNavigationCancelingError","defaultUrlMatcher","segments","segmentGroup","route","parts","split","pathMatch","hasChildren","posParams","index","part","segment","startsWith","substring","path","consumed","slice","validateConfig","config","parentPath","i","validateNode","getFullPath","fullPath","component","outlet","PRIMARY_OUTLET","redirectTo","children","loadChildren","matcher","charAt","currentRoute","flatten","arr","concat","apply","last$1","map$$1","callback","prop","waitForMap","obj","fn","of","waitHead","waitTail","res","k","mapped","call","r","push","concat$","concatAll","last$","last","andObservables","observables","merged$","mergeAll","result","wrapIntoObservable","ɵisObservable","ɵisPromise","fromPromise","Promise","resolve","createEmptyUrlTree","UrlTree","UrlSegmentGroup","equalsTree","queryParams","equalSegmentGroups","root","container","containee","equalPath","numberOfChildren","c","containsTree","containsSegmentGroup","containsSegmentGroupHelper","containeePaths","current","next","equalSegments","as","bs","parameters","mapChildrenIntoArray","child","childOutlet","serializePaths","group","toString","join","serializeSegment","primary","children_1","encode","s","encodeURIComponent","replace","decode","decodeURIComponent","paramsToStrings","strParams","serializeQueryParams","matchSegments","str","match","SEGMENT_RE","matchQueryParams","QUERY_PARAM_RE","matchUrlQueryParamValue","QUERY_PARAM_VALUE_RE","noMatch","obs","NoMatch","absoluteRedirect","newTree","AbsoluteRedirect","namedOutletsRedirect","canLoadFails","applyRedirects","moduleInjector","configLoader","urlSerializer","urlTree","ApplyRedirects","runCanLoadGuard","canLoad","from","injectionToken","guard","get","matched","consumedSegments","lastChild","positionalParamSegments","slicedSegments","containsEmptyPathRedirectsWithNamedOutlets","createChildrenForEmptySegments","mergeTrivialChildren","containsEmptyPathRedirects","addEmptySegmentsToChildrenIfNeeded","routes","_i","routes_1","isEmptyPathRedirect","getOutlet","__assign","primarySegmentGroup","routes_2","some","undefined","findNode","node","_a","node_1","findPath","unshift","nodeChildrenAsMap","createEmptyState","rootComponent","snapshot","createEmptyStateSnapshot","emptyUrl","BehaviorSubject","UrlSegment","emptyParams","emptyData","emptyQueryParams","fragment","activated","ActivatedRoute","RouterState","TreeNode","ActivatedRouteSnapshot","RouterStateSnapshot","inheritedParamsDataResolve","pathToRoot","pathFromRoot","inheritingStartingFrom","parent_1","routeConfig","reduce","curr","data","_resolvedData","setRouterState","state","_routerState","serializeNode","advanceActivatedRoute","currentSnapshot","nextSnapshot","_futureSnapshot","url","equalParamsAndUrlSegments","parent","createRouterState","routeReuseStrategy","prevState","createNode","_root","shouldReuseRoute","createOrReuseChildren","retrieve","tree","setFutureSnapshotsOfActivatedRoutes","createActivatedRoute","p","createUrlTree","commands","nav","computeNavigation","toRoot","startingPosition","findStartingPosition","processChildren","updateSegmentGroupChildren","updateSegmentGroup","isMatrixParams","command","outlets","segmentPath","oldSegmentGroup","newSegmentGroup","replaceSegment","oldSegment","newSegment","outletName","Navigation","numberOfDoubleDots","isAbsolute","cmd","cmdIdx","outlets_1","urlPart","partIndex","Position","_lastPathIndex","_urlSegment","modifier","createPositionApplyingDoubleDots","g","ci","dd","getPath","getOutlets","_b","startIndex","m","prefixedWith","slicedCommands","commandIndex","pathIndex","createNewSegmentGroup","outlets_2","currentCommandIndex","currentPathIndex","compare","paths","createNewSegmentChildren","closestLoadedConfig","_loadedConfig","recognize","rootComponentType","Recognizer","sortActivatedRouteSnapshots","nodes","sort","localeCompare","getChildConfig","match$1","NoMatch$1","checkOutletNameUniqueness","n","routeWithSameOutletName","getSourceSegmentGroup","_sourceSegment","getPathIndexShift","_segmentIndexShift","split$1","containsEmptyPathMatchesWithNamedOutlets","s_1","createChildrenForEmptyPaths","containsEmptyPathMatches","s_2","addEmptyPathsToChildrenIfNeeded","emptyPathMatch","getOutlet$1","primarySegment","getData","getResolve","defaultErrorHandler","defaultRouterHook","advanceActivatedRouteNodeAndItsChildren","parentLoadedConfig","validateCommands","attrBoolValue","routerNgProbeToken","NgProbeToken","Router","provideLocationStrategy","platformLocationStrategy","baseHref","options","useHash","HashLocationStrategy","PathLocationStrategy","provideForRootGuard","provideRoutes","provide","ANALYZE_FOR_ENTRY_COMPONENTS","multi","useValue","ROUTES","setupRouter","ref","contexts","location","injector","loader","compiler","opts","urlHandlingStrategy","errorHandler","enableTracing","dom_1","ɵgetDOM","events","subscribe","e","logGroup","log","logGroupEnd","rootRoute","routerState","getAppInitializer","appInitializer","bind","getBootstrapListener","bootstrapListener","provideRouterInitializer","RouterInitializer","APP_INITIALIZER","useFactory","deps","ROUTER_INITIALIZER","APP_BOOTSTRAP_LISTENER","useExisting","setPrototypeOf","__proto__","assign","t","arguments","RouterEvent","id","NavigationStart","_super","NavigationEnd","urlAfterRedirects","_this","NavigationCancel","reason","NavigationError","RoutesRecognized","GuardsCheckStart","GuardsCheckEnd","shouldActivate","ResolveStart","ResolveEnd","RouteConfigLoadStart","RouteConfigLoadEnd","ChildActivationStart","ChildActivationEnd","ActivationStart","ActivationEnd","has","getAll","defineProperty","enumerable","configurable","LoadedRouterConfig","_queryParamMap","DEFAULT_SERIALIZER","serialize","_parameterMap","UrlSerializer","DefaultUrlSerializer","parse","UrlParser","parseRootSegment","parseQueryParams","parseFragment","encodeURI","remaining","consumeOptional","peekStartsWith","parseChildren","parseQueryParam","decodeURI","parseSegment","capture","parseParens","parseMatrixParams","parseParam","key","valueMatch","decodedKey","decodedVal","currentVal","allowPrimary","substr","allowRedirects","ngModule","NgModuleRef","expanded$","expandSegmentGroup","urlTrees$","rootSegmentGroup","_catch","noMatchError","mapped$","rootCandidate","expandChildren","expandSegment","routes$","processedRoutes$","expandSegmentAgainstRoute","concattedProcessedRoutes$","first$","first","_","EmptyError","noLeftoversInUrl","matchSegmentAgainstRoute","expandSegmentAgainstRouteUsingRedirect","expandWildCardWithParamsAgainstRouteUsingRedirect","expandRegularSegmentAgainstRouteUsingRedirect","applyRedirectCommands","mergeMap","lineralizeSegments","newSegments","rawSegmentGroup","load","cfg","rawSlicedSegments","childConfig$","routerConfig","childModule","childConfig","expanded$_1","cs","shouldLoad","applyRedirectCreateUrlTree","newRoot","createSegmentGroup","createQueryParams","redirectToParams","actualParams","sourceName","updatedSegments","createSegments","redirectToSegments","actualSegments","findPosParam","findOrReturn","redirectToUrlSegment","pos","idx","actualSegments_1","splice","Tree","firstChild","siblings","filter","cc","futureSnapshot","_paramMap","urlSegment","lastPathIndex","_resolve","cmdWithOutlet","find","CanActivate","CanDeactivate","PreActivation","future","forwardEvent","canActivateChecks","canDeactivateChecks","initalize","parentContexts","futureRoot","currRoot","setupChildRouteGuards","checkGuards","isDeactivating","isActivating","canDeactivate$","runCanDeactivateChecks","canDeactivate","runCanActivateChecks","resolveData","checks$","runningChecks$","concatMap","check","runResolve","futureNode","currNode","futurePath","prevChildren","setupRouteGuards","deactivateRouteAndItsChildren","getContext","context","shouldRunGuardsAndResolvers","runGuardsAndResolvers","mode","childName","isActivated","runCanDeactivate","fireChildActivationStart","fireActivationStart","runCanActivateChild","runCanActivate","canActivate","observable","getToken","canActivateChildGuards","reverse","extractCanActivateChild","guards","canActivateChild","resolveNode","resolvedData","key_1","getResolver","runningResolvers$","resolver","token","processSegmentGroup","freeze","rootNode","routeState","inheritParamsAndData","routeNode","processSegment","config_1","processSegmentAgainstRoute","rawSegment","snapshot_1","RouteReuseStrategy","DefaultRouteReuseStrategy","shouldDetach","store","detachedTree","shouldAttach","InjectionToken","RouterConfigLoader","onLoadStartListener","onLoadEndListener","parentInjector","moduleFactory$","loadModuleFactory","NgModuleFactory","compileModuleAsync","UrlHandlingStrategy","DefaultUrlHandlingStrategy","shouldProcessUrl","extract","merge","newUrlPart","wholeUrl","rootContexts","navigations","navigationId","Subject","navigated","hooks","beforePreactivation","afterPreactivation","onLoadStart","triggerEvent","onLoadEnd","resetConfig","currentUrlTree","rawUrlTree","processNavigations","resetRootComponentType","initialNavigation","setUpLocationChangeListener","navigateByUrl","replaceUrl","locationSubscription","Zone","wrap","change","source","setTimeout","scheduleNavigation","serializeUrl","ngOnDestroy","dispose","unsubscribe","navigationExtras","relativeTo","preserveQueryParams","queryParamsHandling","preserveFragment","isDevMode","console","warn","f","convertedQueryParams","q","extras","skipLocationChange","parseUrl","mergedTree","navigate","removeEmptyProps","isActive","exact","executeScheduledNavigation","promise","catch","rawUrl","lastNavigation","reject","rej","urlTransition","then","runNavigate","shouldPreventPushState","shouldReplaceUrl","precreatedState","go","resolvePromise","rejectPromise","urlAndSnapshot$","appliedUrl","redirectsApplied$","preActivation","navigationIsSuccessful","beforePreactivationDone$","preactivationSetup$","evt","preactivationCheckGuards$","preactivationResolveData$","preactivationDone$","routerState$","storedState","storedUrl","isCurrentPathEqualTo","replaceState","ActivateRoutes","activate","resetUrlToCurrentUrlTree","ee","futureState","currState","deactivateChildRoutes","activateChildRoutes","futureChild","childOutletName","deactivateRoutes","parentContext","detachAndStoreRouteSubtree","deactivateRouteAndOutlet","componentRef","detach","onOutletDeactivated","contexts_1","deactivate","activateRoutes","getOrCreateContext","stored","onOutletReAttached","attachRef","attach","cmpFactoryResolver","componentFactoryResolver","activateWith","RouterLink","tabIndex","renderer","el","setAttribute","nativeElement","set","preserve","onClick","decorators","type","Directive","args","selector","ctorParameters","Attribute","Renderer2","ElementRef","propDecorators","Input","routerLink","HostListener","RouterLinkWithHref","locationStrategy","subscription","updateTargetUrlAndHref","ngOnChanges","changes","button","ctrlKey","metaKey","shiftKey","target","href","prepareExternalUrl","LocationStrategy","HostBinding","RouterLinkActive","element","cdr","classes","routerLinkActiveOptions","update","ngAfterContentInit","links","linksWithHrefs","hasActiveLinks","addClass","removeClass","active","isLinkActive","link","exportAs","ChangeDetectorRef","ContentChildren","descendants","routerLinkActive","OutletContext","ChildrenOutletContexts","Map","onChildOutletCreated","onChildOutletDestroyed","RouterOutlet","changeDetector","_activatedRoute","activateEvents","EventEmitter","deactivateEvents","ngOnInit","instance","cmp","activatedRoute","insert","hostView","destroy","emit","resolveComponentFactory","childContexts","OutletInjector","createComponent","markForCheck","ViewContainerRef","ComponentFactoryResolver","Output","notFoundValue","PreloadingStrategy","PreloadAllModules","preload","NoPreloading","RouterPreloader","moduleLoader","preloadingStrategy","onStartLoad","onEndLoad","setUpPreloading","navigations$","processRoutes","preloadConfig","loaded$","Injectable","NgModuleFactoryLoader","Compiler","Injector","ROUTER_DIRECTIVES","ROUTER_CONFIGURATION","ROUTER_FORROOT_GUARD","ROUTER_PROVIDERS","Location","useClass","ApplicationRef","Optional","SystemJsNgModuleLoader","RouterModule","forRoot","providers","SkipSelf","PlatformLocation","Inject","APP_BASE_HREF","forChild","NgModule","declarations","initNavigation","resultOfPreactivationDone","LOCATION_INITIALIZED","isLegacyDisabled","isLegacyEnabled","bootstrappedComponentRef","preloader","components","componentTypes","complete","VERSION","Version","ɵROUTER_PROVIDERS","ɵflatten","ɵa","ɵg","ɵh","ɵi","ɵd","ɵc","ɵj","ɵf","ɵb","ɵe","ɵk","ɵl"],"mappings":"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","file":"/home/travis/build/angular/angular/dist/packages-dist/router/bundles/router.umd.min.js","sourcesContent":["/**\n * @license Angular v5.0.0-beta.7-125ded2\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/core'), require('rxjs/BehaviorSubject'), require('rxjs/Subject'), require('rxjs/observable/of'), require('rxjs/operator/concatMap'), require('rxjs/operator/map'), require('rxjs/operator/mergeMap'), require('rxjs/Observable'), require('rxjs/observable/from'), require('rxjs/operator/catch'), require('rxjs/operator/concatAll'), require('rxjs/operator/first'), require('rxjs/util/EmptyError'), require('rxjs/observable/fromPromise'), require('rxjs/operator/every'), require('rxjs/operator/last'), require('rxjs/operator/mergeAll'), require('rxjs/operator/reduce'), require('@angular/platform-browser'), require('rxjs/operator/filter')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', '@angular/common', '@angular/core', 'rxjs/BehaviorSubject', 'rxjs/Subject', 'rxjs/observable/of', 'rxjs/operator/concatMap', 'rxjs/operator/map', 'rxjs/operator/mergeMap', 'rxjs/Observable', 'rxjs/observable/from', 'rxjs/operator/catch', 'rxjs/operator/concatAll', 'rxjs/operator/first', 'rxjs/util/EmptyError', 'rxjs/observable/fromPromise', 'rxjs/operator/every', 'rxjs/operator/last', 'rxjs/operator/mergeAll', 'rxjs/operator/reduce', '@angular/platform-browser', 'rxjs/operator/filter'], factory) :\n\t(factory((global.ng = global.ng || {}, global.ng.router = {}),global.ng.common,global.ng.core,global.Rx,global.Rx,global.Rx.Observable,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx,global.Rx.Observable,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx,global.Rx.Observable,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.ng.platformBrowser,global.Rx.Observable.prototype));\n}(this, (function (exports,_angular_common,_angular_core,rxjs_BehaviorSubject,rxjs_Subject,rxjs_observable_of,rxjs_operator_concatMap,rxjs_operator_map,rxjs_operator_mergeMap,rxjs_Observable,rxjs_observable_from,rxjs_operator_catch,rxjs_operator_concatAll,rxjs_operator_first,rxjs_util_EmptyError,rxjs_observable_fromPromise,rxjs_operator_every,rxjs_operator_last,rxjs_operator_mergeAll,rxjs_operator_reduce,_angular_platformBrowser,rxjs_operator_filter) { 'use strict';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n};\n\n/**\n * @license Angular v5.0.0-beta.7-125ded2\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@whatItDoes Base for events the Router goes through, as opposed to events tied to a specific\n * Route. `RouterEvent`s will only be fired one time for any given navigation.\n *\n * Example:\n *\n * ```\n * class MyService {\n *   constructor(public router: Router, logger: Logger) {\n *     router.events.filter(e => e instanceof RouterEvent).subscribe(e => {\n *       logger.log(e.id, e.url);\n *     });\n *   }\n * }\n * ```\n *\n * \\@experimental\n */\nvar RouterEvent = (function () {\n    function RouterEvent(id, url) {\n        this.id = id;\n        this.url = url;\n    }\n    return RouterEvent;\n}());\n/**\n * \\@whatItDoes Represents an event triggered when a navigation starts.\n *\n * \\@stable\n */\nvar NavigationStart = (function (_super) {\n    __extends(NavigationStart, _super);\n    function NavigationStart() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /** @docsNotRequired */\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    NavigationStart.prototype.toString = /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    function () { return \"NavigationStart(id: \" + this.id + \", url: '\" + this.url + \"')\"; };\n    return NavigationStart;\n}(RouterEvent));\n/**\n * \\@whatItDoes Represents an event triggered when a navigation ends successfully.\n *\n * \\@stable\n */\nvar NavigationEnd = (function (_super) {\n    __extends(NavigationEnd, _super);\n    function NavigationEnd(/** @docsNotRequired */\n        /** @docsNotRequired */\n        id, /** @docsNotRequired */\n        /** @docsNotRequired */\n        url, urlAfterRedirects) {\n        var _this = _super.call(this, id, url) || this;\n        _this.urlAfterRedirects = urlAfterRedirects;\n        return _this;\n    }\n    /** @docsNotRequired */\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    NavigationEnd.prototype.toString = /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    function () {\n        return \"NavigationEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"')\";\n    };\n    return NavigationEnd;\n}(RouterEvent));\n/**\n * \\@whatItDoes Represents an event triggered when a navigation is canceled.\n *\n * \\@stable\n */\nvar NavigationCancel = (function (_super) {\n    __extends(NavigationCancel, _super);\n    function NavigationCancel(/** @docsNotRequired */\n        /** @docsNotRequired */\n        id, /** @docsNotRequired */\n        /** @docsNotRequired */\n        url, reason) {\n        var _this = _super.call(this, id, url) || this;\n        _this.reason = reason;\n        return _this;\n    }\n    /** @docsNotRequired */\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    NavigationCancel.prototype.toString = /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    function () { return \"NavigationCancel(id: \" + this.id + \", url: '\" + this.url + \"')\"; };\n    return NavigationCancel;\n}(RouterEvent));\n/**\n * \\@whatItDoes Represents an event triggered when a navigation fails due to an unexpected error.\n *\n * \\@stable\n */\nvar NavigationError = (function (_super) {\n    __extends(NavigationError, _super);\n    function NavigationError(/** @docsNotRequired */\n        /** @docsNotRequired */\n        id, /** @docsNotRequired */\n        /** @docsNotRequired */\n        url, error) {\n        var _this = _super.call(this, id, url) || this;\n        _this.error = error;\n        return _this;\n    }\n    /** @docsNotRequired */\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    NavigationError.prototype.toString = /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    function () {\n        return \"NavigationError(id: \" + this.id + \", url: '\" + this.url + \"', error: \" + this.error + \")\";\n    };\n    return NavigationError;\n}(RouterEvent));\n/**\n * \\@whatItDoes Represents an event triggered when routes are recognized.\n *\n * \\@stable\n */\nvar RoutesRecognized = (function (_super) {\n    __extends(RoutesRecognized, _super);\n    function RoutesRecognized(/** @docsNotRequired */\n        /** @docsNotRequired */\n        id, /** @docsNotRequired */\n        /** @docsNotRequired */\n        url, urlAfterRedirects, state) {\n        var _this = _super.call(this, id, url) || this;\n        _this.urlAfterRedirects = urlAfterRedirects;\n        _this.state = state;\n        return _this;\n    }\n    /** @docsNotRequired */\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    RoutesRecognized.prototype.toString = /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    function () {\n        return \"RoutesRecognized(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return RoutesRecognized;\n}(RouterEvent));\n/**\n * \\@whatItDoes Represents the start of the Guard phase of routing.\n *\n * \\@experimental\n */\nvar GuardsCheckStart = (function (_super) {\n    __extends(GuardsCheckStart, _super);\n    function GuardsCheckStart(/** @docsNotRequired */\n        /** @docsNotRequired */\n        id, /** @docsNotRequired */\n        /** @docsNotRequired */\n        url, urlAfterRedirects, state) {\n        var _this = _super.call(this, id, url) || this;\n        _this.urlAfterRedirects = urlAfterRedirects;\n        _this.state = state;\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    GuardsCheckStart.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        return \"GuardsCheckStart(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return GuardsCheckStart;\n}(RouterEvent));\n/**\n * \\@whatItDoes Represents the end of the Guard phase of routing.\n *\n * \\@experimental\n */\nvar GuardsCheckEnd = (function (_super) {\n    __extends(GuardsCheckEnd, _super);\n    function GuardsCheckEnd(/** @docsNotRequired */\n        /** @docsNotRequired */\n        id, /** @docsNotRequired */\n        /** @docsNotRequired */\n        url, urlAfterRedirects, state, shouldActivate) {\n        var _this = _super.call(this, id, url) || this;\n        _this.urlAfterRedirects = urlAfterRedirects;\n        _this.state = state;\n        _this.shouldActivate = shouldActivate;\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    GuardsCheckEnd.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        return \"GuardsCheckEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \", shouldActivate: \" + this.shouldActivate + \")\";\n    };\n    return GuardsCheckEnd;\n}(RouterEvent));\n/**\n * \\@whatItDoes Represents the start of the Resolve phase of routing. The timing of this\n * event may change, thus it's experimental. In the current iteration it will run\n * in the \"resolve\" phase whether there's things to resolve or not. In the future this\n * behavior may change to only run when there are things to be resolved.\n *\n * \\@experimental\n */\nvar ResolveStart = (function (_super) {\n    __extends(ResolveStart, _super);\n    function ResolveStart(/** @docsNotRequired */\n        /** @docsNotRequired */\n        id, /** @docsNotRequired */\n        /** @docsNotRequired */\n        url, urlAfterRedirects, state) {\n        var _this = _super.call(this, id, url) || this;\n        _this.urlAfterRedirects = urlAfterRedirects;\n        _this.state = state;\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    ResolveStart.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        return \"ResolveStart(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return ResolveStart;\n}(RouterEvent));\n/**\n * \\@whatItDoes Represents the end of the Resolve phase of routing. See note on\n * {\\@link ResolveStart} for use of this experimental API.\n *\n * \\@experimental\n */\nvar ResolveEnd = (function (_super) {\n    __extends(ResolveEnd, _super);\n    function ResolveEnd(/** @docsNotRequired */\n        /** @docsNotRequired */\n        id, /** @docsNotRequired */\n        /** @docsNotRequired */\n        url, urlAfterRedirects, state) {\n        var _this = _super.call(this, id, url) || this;\n        _this.urlAfterRedirects = urlAfterRedirects;\n        _this.state = state;\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    ResolveEnd.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        return \"ResolveEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return ResolveEnd;\n}(RouterEvent));\n/**\n * \\@whatItDoes Represents an event triggered before lazy loading a route config.\n *\n * \\@experimental\n */\nvar RouteConfigLoadStart = (function () {\n    function RouteConfigLoadStart(route) {\n        this.route = route;\n    }\n    /**\n     * @return {?}\n     */\n    RouteConfigLoadStart.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return \"RouteConfigLoadStart(path: \" + this.route.path + \")\"; };\n    return RouteConfigLoadStart;\n}());\n/**\n * \\@whatItDoes Represents an event triggered when a route has been lazy loaded.\n *\n * \\@experimental\n */\nvar RouteConfigLoadEnd = (function () {\n    function RouteConfigLoadEnd(route) {\n        this.route = route;\n    }\n    /**\n     * @return {?}\n     */\n    RouteConfigLoadEnd.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return \"RouteConfigLoadEnd(path: \" + this.route.path + \")\"; };\n    return RouteConfigLoadEnd;\n}());\n/**\n * \\@whatItDoes Represents the start of end of the Resolve phase of routing. See note on\n * {\\@link ChildActivationEnd} for use of this experimental API.\n *\n * \\@experimental\n */\nvar ChildActivationStart = (function () {\n    function ChildActivationStart(snapshot) {\n        this.snapshot = snapshot;\n    }\n    /**\n     * @return {?}\n     */\n    ChildActivationStart.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n        return \"ChildActivationStart(path: '\" + path + \"')\";\n    };\n    return ChildActivationStart;\n}());\n/**\n * \\@whatItDoes Represents the start of end of the Resolve phase of routing. See note on\n * {\\@link ChildActivationStart} for use of this experimental API.\n *\n * \\@experimental\n */\nvar ChildActivationEnd = (function () {\n    function ChildActivationEnd(snapshot) {\n        this.snapshot = snapshot;\n    }\n    /**\n     * @return {?}\n     */\n    ChildActivationEnd.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n        return \"ChildActivationEnd(path: '\" + path + \"')\";\n    };\n    return ChildActivationEnd;\n}());\n/**\n * \\@whatItDoes Represents the start of end of the Resolve phase of routing. See note on\n * {\\@link ActivationEnd} for use of this experimental API.\n *\n * \\@experimental\n */\nvar ActivationStart = (function () {\n    function ActivationStart(snapshot) {\n        this.snapshot = snapshot;\n    }\n    /**\n     * @return {?}\n     */\n    ActivationStart.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n        return \"ActivationStart(path: '\" + path + \"')\";\n    };\n    return ActivationStart;\n}());\n/**\n * \\@whatItDoes Represents the start of end of the Resolve phase of routing. See note on\n * {\\@link ActivationStart} for use of this experimental API.\n *\n * \\@experimental\n */\nvar ActivationEnd = (function () {\n    function ActivationEnd(snapshot) {\n        this.snapshot = snapshot;\n    }\n    /**\n     * @return {?}\n     */\n    ActivationEnd.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n        return \"ActivationEnd(path: '\" + path + \"')\";\n    };\n    return ActivationEnd;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@whatItDoes Name of the primary outlet.\n *\n * \\@stable\n */\nvar PRIMARY_OUTLET = 'primary';\n/**\n * Matrix and Query parameters.\n *\n * `ParamMap` makes it easier to work with parameters as they could have either a single value or\n * multiple value. Because this should be known by the user, calling `get` or `getAll` returns the\n * correct type (either `string` or `string[]`).\n *\n * The API is inspired by the URLSearchParams interface.\n * see https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams\n *\n * \\@stable\n * @record\n */\n\nvar ParamsAsMap = (function () {\n    function ParamsAsMap(params) {\n        this.params = params || {};\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ParamsAsMap.prototype.has = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this.params.hasOwnProperty(name); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ParamsAsMap.prototype.get = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (this.has(name)) {\n            var /** @type {?} */ v = this.params[name];\n            return Array.isArray(v) ? v[0] : v;\n        }\n        return null;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ParamsAsMap.prototype.getAll = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (this.has(name)) {\n            var /** @type {?} */ v = this.params[name];\n            return Array.isArray(v) ? v : [v];\n        }\n        return [];\n    };\n    Object.defineProperty(ParamsAsMap.prototype, \"keys\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return Object.keys(this.params); },\n        enumerable: true,\n        configurable: true\n    });\n    return ParamsAsMap;\n}());\n/**\n * Convert a {\\@link Params} instance to a {\\@link ParamMap}.\n *\n * \\@stable\n * @param {?} params\n * @return {?}\n */\nfunction convertToParamMap(params) {\n    return new ParamsAsMap(params);\n}\n/**\n * @param {?} params\n * @return {?}\n */\nfunction convertToParams(params) {\n    var /** @type {?} */ qp = {};\n    if (params) {\n        Object.keys(params).forEach(function (name) {\n            var /** @type {?} */ value = params[name];\n            qp[name] = Array.isArray(value) ? value.map(function (v) { return \"\" + v; }) : \"\" + value;\n        });\n    }\n    return qp;\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction equalsParams(a, b) {\n    return (Object.keys(a).length === Object.keys(b).length) && containsParams(a, b);\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction containsParams(a, b) {\n    var /** @type {?} */ names = Object.keys(b);\n    if (names.length > Object.keys(a).length)\n        return false;\n    return names.every(function (name) {\n        if (!a.hasOwnProperty(name))\n            return false;\n        var /** @type {?} */ aValue = a[name];\n        var /** @type {?} */ aIsArray = Array.isArray(aValue);\n        var /** @type {?} */ bValue = b[name];\n        var /** @type {?} */ bIsArray = Array.isArray(bValue);\n        if (aIsArray !== bIsArray)\n            return false;\n        return aIsArray ?\n            aValue.length === bValue.length &&\n                (/** @type {?} */ (aValue)).every(function (v) { return (/** @type {?} */ (bValue)).indexOf(v) > -1; }) :\n            aValue === bValue;\n    });\n}\nvar NAVIGATION_CANCELING_ERROR = 'ngNavigationCancelingError';\n/**\n * @param {?} message\n * @return {?}\n */\nfunction navigationCancelingError(message) {\n    var /** @type {?} */ error = Error('NavigationCancelingError: ' + message);\n    (/** @type {?} */ (error))[NAVIGATION_CANCELING_ERROR] = true;\n    return error;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction isNavigationCancelingError(error) {\n    return (/** @type {?} */ (error))[NAVIGATION_CANCELING_ERROR];\n}\n/**\n * @param {?} segments\n * @param {?} segmentGroup\n * @param {?} route\n * @return {?}\n */\nfunction defaultUrlMatcher(segments, segmentGroup, route) {\n    var /** @type {?} */ parts = /** @type {?} */ ((route.path)).split('/');\n    if (parts.length > segments.length) {\n        // The actual URL is shorter than the config, no match\n        return null;\n    }\n    if (route.pathMatch === 'full' &&\n        (segmentGroup.hasChildren() || parts.length < segments.length)) {\n        // The config is longer than the actual URL but we are looking for a full match, return null\n        return null;\n    }\n    // Positional parameters `path/to/:param`\n    var /** @type {?} */ posParams = {};\n    // Check each config part against the actual URL\n    for (var /** @type {?} */ index = 0; index < parts.length; index++) {\n        var /** @type {?} */ part = parts[index];\n        var /** @type {?} */ segment = segments[index];\n        var /** @type {?} */ isParameter = part.startsWith(':');\n        if (isParameter) {\n            posParams[part.substring(1)] = segment;\n        }\n        else if (part !== segment.path) {\n            // The actual URL part does not match the config, no match\n            return null;\n        }\n    }\n    return { consumed: segments.slice(0, parts.length), posParams: posParams };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * See {\\@link Routes} for more details.\n * \\@stable\n * @record\n */\n\nvar LoadedRouterConfig = (function () {\n    function LoadedRouterConfig(routes, module) {\n        this.routes = routes;\n        this.module = module;\n    }\n    return LoadedRouterConfig;\n}());\n/**\n * @param {?} config\n * @param {?=} parentPath\n * @return {?}\n */\nfunction validateConfig(config, parentPath) {\n    if (parentPath === void 0) { parentPath = ''; }\n    // forEach doesn't iterate undefined values\n    for (var /** @type {?} */ i = 0; i < config.length; i++) {\n        var /** @type {?} */ route = config[i];\n        var /** @type {?} */ fullPath = getFullPath(parentPath, route);\n        validateNode(route, fullPath);\n    }\n}\n/**\n * @param {?} route\n * @param {?} fullPath\n * @return {?}\n */\nfunction validateNode(route, fullPath) {\n    if (!route) {\n        throw new Error(\"\\n      Invalid configuration of route '\" + fullPath + \"': Encountered undefined route.\\n      The reason might be an extra comma.\\n\\n      Example:\\n      const routes: Routes = [\\n        { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\\n        { path: 'dashboard',  component: DashboardComponent },, << two commas\\n        { path: 'detail/:id', component: HeroDetailComponent }\\n      ];\\n    \");\n    }\n    if (Array.isArray(route)) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': Array cannot be specified\");\n    }\n    if (!route.component && (route.outlet && route.outlet !== PRIMARY_OUTLET)) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': a componentless route cannot have a named outlet set\");\n    }\n    if (route.redirectTo && route.children) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and children cannot be used together\");\n    }\n    if (route.redirectTo && route.loadChildren) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and loadChildren cannot be used together\");\n    }\n    if (route.children && route.loadChildren) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': children and loadChildren cannot be used together\");\n    }\n    if (route.redirectTo && route.component) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and component cannot be used together\");\n    }\n    if (route.path && route.matcher) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': path and matcher cannot be used together\");\n    }\n    if (route.redirectTo === void 0 && !route.component && !route.children && !route.loadChildren) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"'. One of the following must be provided: component, redirectTo, children or loadChildren\");\n    }\n    if (route.path === void 0 && route.matcher === void 0) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': routes must have either a path or a matcher specified\");\n    }\n    if (typeof route.path === 'string' && route.path.charAt(0) === '/') {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': path cannot start with a slash\");\n    }\n    if (route.path === '' && route.redirectTo !== void 0 && route.pathMatch === void 0) {\n        var /** @type {?} */ exp = \"The default value of 'pathMatch' is 'prefix', but often the intent is to use 'full'.\";\n        throw new Error(\"Invalid configuration of route '{path: \\\"\" + fullPath + \"\\\", redirectTo: \\\"\" + route.redirectTo + \"\\\"}': please provide 'pathMatch'. \" + exp);\n    }\n    if (route.pathMatch !== void 0 && route.pathMatch !== 'full' && route.pathMatch !== 'prefix') {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': pathMatch can only be set to 'prefix' or 'full'\");\n    }\n    if (route.children) {\n        validateConfig(route.children, fullPath);\n    }\n}\n/**\n * @param {?} parentPath\n * @param {?} currentRoute\n * @return {?}\n */\nfunction getFullPath(parentPath, currentRoute) {\n    if (!currentRoute) {\n        return parentPath;\n    }\n    if (!parentPath && !currentRoute.path) {\n        return '';\n    }\n    else if (parentPath && !currentRoute.path) {\n        return parentPath + \"/\";\n    }\n    else if (!parentPath && currentRoute.path) {\n        return currentRoute.path;\n    }\n    else {\n        return parentPath + \"/\" + currentRoute.path;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Flattens single-level nested arrays.\n * @template T\n * @param {?} arr\n * @return {?}\n */\nfunction flatten(arr) {\n    return Array.prototype.concat.apply([], arr);\n}\n/**\n * Return the last element of an array.\n * @template T\n * @param {?} a\n * @return {?}\n */\nfunction last$1(a) {\n    return a.length > 0 ? a[a.length - 1] : null;\n}\n/**\n * @template K, V\n * @param {?} map\n * @param {?} callback\n * @return {?}\n */\nfunction forEach(map$$1, callback) {\n    for (var /** @type {?} */ prop in map$$1) {\n        if (map$$1.hasOwnProperty(prop)) {\n            callback(map$$1[prop], prop);\n        }\n    }\n}\n/**\n * @template A, B\n * @param {?} obj\n * @param {?} fn\n * @return {?}\n */\nfunction waitForMap(obj, fn) {\n    if (Object.keys(obj).length === 0) {\n        return rxjs_observable_of.of({});\n    }\n    var /** @type {?} */ waitHead = [];\n    var /** @type {?} */ waitTail = [];\n    var /** @type {?} */ res = {};\n    forEach(obj, function (a, k) {\n        var /** @type {?} */ mapped = rxjs_operator_map.map.call(fn(k, a), function (r) { return res[k] = r; });\n        if (k === PRIMARY_OUTLET) {\n            waitHead.push(mapped);\n        }\n        else {\n            waitTail.push(mapped);\n        }\n    });\n    var /** @type {?} */ concat$ = rxjs_operator_concatAll.concatAll.call(rxjs_observable_of.of.apply(void 0, waitHead.concat(waitTail)));\n    var /** @type {?} */ last$ = rxjs_operator_last.last.call(concat$);\n    return rxjs_operator_map.map.call(last$, function () { return res; });\n}\n/**\n * ANDs Observables by merging all input observables, reducing to an Observable verifying all\n * input Observables return `true`.\n * @param {?} observables\n * @return {?}\n */\nfunction andObservables(observables) {\n    var /** @type {?} */ merged$ = rxjs_operator_mergeAll.mergeAll.call(observables);\n    return rxjs_operator_every.every.call(merged$, function (result) { return result === true; });\n}\n/**\n * @template T\n * @param {?} value\n * @return {?}\n */\nfunction wrapIntoObservable(value) {\n    if (_angular_core.ɵisObservable(value)) {\n        return value;\n    }\n    if (_angular_core.ɵisPromise(value)) {\n        // Use `Promise.resolve()` to wrap promise-like instances.\n        // Required ie when a Resolver returns a AngularJS `$q` promise to correctly trigger the\n        // change detection.\n        return rxjs_observable_fromPromise.fromPromise(Promise.resolve(value));\n    }\n    return rxjs_observable_of.of(/** @type {?} */ (value));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @return {?}\n */\nfunction createEmptyUrlTree() {\n    return new UrlTree(new UrlSegmentGroup([], {}), {}, null);\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction equalsTree(a, b) {\n    return equalsParams(a.queryParams, b.queryParams) && equalSegmentGroups(a.root, b.root);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @return {?}\n */\nfunction equalSegmentGroups(container, containee) {\n    if (!equalPath(container.segments, containee.segments))\n        return false;\n    if (container.numberOfChildren !== containee.numberOfChildren)\n        return false;\n    for (var /** @type {?} */ c in containee.children) {\n        if (!container.children[c])\n            return false;\n        if (!equalSegmentGroups(container.children[c], containee.children[c]))\n            return false;\n    }\n    return true;\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @return {?}\n */\nfunction containsTree(container, containee) {\n    return containsParams(container.queryParams, containee.queryParams) &&\n        containsSegmentGroup(container.root, containee.root);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @return {?}\n */\nfunction containsSegmentGroup(container, containee) {\n    return containsSegmentGroupHelper(container, containee, containee.segments);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @param {?} containeePaths\n * @return {?}\n */\nfunction containsSegmentGroupHelper(container, containee, containeePaths) {\n    if (container.segments.length > containeePaths.length) {\n        var /** @type {?} */ current = container.segments.slice(0, containeePaths.length);\n        return equalPath(current, containeePaths) && !containee.hasChildren();\n    }\n    else if (container.segments.length === containeePaths.length) {\n        if (!equalPath(container.segments, containeePaths))\n            return false;\n        for (var /** @type {?} */ c in containee.children) {\n            if (!container.children[c])\n                return false;\n            if (!containsSegmentGroup(container.children[c], containee.children[c]))\n                return false;\n        }\n        return true;\n    }\n    else {\n        var /** @type {?} */ current = containeePaths.slice(0, container.segments.length);\n        var /** @type {?} */ next = containeePaths.slice(container.segments.length);\n        if (!container.children[PRIMARY_OUTLET])\n            return false;\n        return equalPath(container.segments, current) &&\n            containsSegmentGroupHelper(container.children[PRIMARY_OUTLET], containee, next);\n    }\n}\n/**\n * \\@whatItDoes Represents the parsed URL.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const tree: UrlTree =\n *       router.parseUrl('/team/33/(user/victor//support:help)?debug=true#fragment');\n *     const f = tree.fragment; // return 'fragment'\n *     const q = tree.queryParams; // returns {debug: 'true'}\n *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n *     const s: UrlSegment[] = g.segments; // returns 2 segments 'team' and '33'\n *     g.children[PRIMARY_OUTLET].segments; // returns 2 segments 'user' and 'victor'\n *     g.children['support'].segments; // return 1 segment 'help'\n *   }\n * }\n * ```\n *\n * \\@description\n *\n * Since a router state is a tree, and the URL is nothing but a serialized state, the URL is a\n * serialized tree.\n * UrlTree is a data structure that provides a lot of affordances in dealing with URLs\n *\n * \\@stable\n */\nvar UrlTree = (function () {\n    /** @internal */\n    function UrlTree(root, queryParams, fragment) {\n        this.root = root;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n    }\n    Object.defineProperty(UrlTree.prototype, \"queryParamMap\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            if (!this._queryParamMap) {\n                this._queryParamMap = convertToParamMap(this.queryParams);\n            }\n            return this._queryParamMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @docsNotRequired */\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    UrlTree.prototype.toString = /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    function () { return DEFAULT_SERIALIZER.serialize(this); };\n    return UrlTree;\n}());\n/**\n * \\@whatItDoes Represents the parsed URL segment group.\n *\n * See {\\@link UrlTree} for more information.\n *\n * \\@stable\n */\nvar UrlSegmentGroup = (function () {\n    function UrlSegmentGroup(segments, children) {\n        var _this = this;\n        this.segments = segments;\n        this.children = children;\n        /**\n         * The parent node in the url tree\n         */\n        this.parent = null;\n        forEach(children, function (v, k) { return v.parent = _this; });\n    }\n    /** Whether the segment has child segments */\n    /**\n     * Whether the segment has child segments\n     * @return {?}\n     */\n    UrlSegmentGroup.prototype.hasChildren = /**\n     * Whether the segment has child segments\n     * @return {?}\n     */\n    function () { return this.numberOfChildren > 0; };\n    Object.defineProperty(UrlSegmentGroup.prototype, \"numberOfChildren\", {\n        /** Number of child segments */\n        get: /**\n         * Number of child segments\n         * @return {?}\n         */\n        function () { return Object.keys(this.children).length; },\n        enumerable: true,\n        configurable: true\n    });\n    /** @docsNotRequired */\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    UrlSegmentGroup.prototype.toString = /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    function () { return serializePaths(this); };\n    return UrlSegmentGroup;\n}());\n/**\n * \\@whatItDoes Represents a single URL segment.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const tree: UrlTree = router.parseUrl('/team;id=33');\n *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n *     const s: UrlSegment[] = g.segments;\n *     s[0].path; // returns 'team'\n *     s[0].parameters; // returns {id: 33}\n *   }\n * }\n * ```\n *\n * \\@description\n *\n * A UrlSegment is a part of a URL between the two slashes. It contains a path and the matrix\n * parameters associated with the segment.\n *\n * \\@stable\n */\nvar UrlSegment = (function () {\n    function UrlSegment(path, parameters) {\n        this.path = path;\n        this.parameters = parameters;\n    }\n    Object.defineProperty(UrlSegment.prototype, \"parameterMap\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            if (!this._parameterMap) {\n                this._parameterMap = convertToParamMap(this.parameters);\n            }\n            return this._parameterMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @docsNotRequired */\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    UrlSegment.prototype.toString = /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ path = encode(this.path);\n        var /** @type {?} */ strParams = paramsToStrings(this.parameters).join(';');\n        return strParams ? path + \";\" + strParams : path;\n    };\n    return UrlSegment;\n}());\n/**\n * @param {?} as\n * @param {?} bs\n * @return {?}\n */\nfunction equalSegments(as, bs) {\n    return equalPath(as, bs) && as.every(function (a, i) { return equalsParams(a.parameters, bs[i].parameters); });\n}\n/**\n * @param {?} as\n * @param {?} bs\n * @return {?}\n */\nfunction equalPath(as, bs) {\n    if (as.length !== bs.length)\n        return false;\n    return as.every(function (a, i) { return a.path === bs[i].path; });\n}\n/**\n * @template T\n * @param {?} segment\n * @param {?} fn\n * @return {?}\n */\nfunction mapChildrenIntoArray(segment, fn) {\n    var /** @type {?} */ res = [];\n    forEach(segment.children, function (child, childOutlet) {\n        if (childOutlet === PRIMARY_OUTLET) {\n            res = res.concat(fn(child, childOutlet));\n        }\n    });\n    forEach(segment.children, function (child, childOutlet) {\n        if (childOutlet !== PRIMARY_OUTLET) {\n            res = res.concat(fn(child, childOutlet));\n        }\n    });\n    return res;\n}\n/**\n * \\@whatItDoes Serializes and deserializes a URL string into a URL tree.\n *\n * \\@description The url serialization strategy is customizable. You can\n * make all URLs case insensitive by providing a custom UrlSerializer.\n *\n * See {\\@link DefaultUrlSerializer} for an example of a URL serializer.\n *\n * \\@stable\n * @abstract\n */\nvar UrlSerializer = (function () {\n    function UrlSerializer() {\n    }\n    return UrlSerializer;\n}());\n/**\n * \\@whatItDoes A default implementation of the {\\@link UrlSerializer}.\n *\n * \\@description\n *\n * Example URLs:\n *\n * ```\n * /inbox/33(popup:compose)\n * /inbox/33;open=true/messages/44\n * ```\n *\n * DefaultUrlSerializer uses parentheses to serialize secondary segments (e.g., popup:compose), the\n * colon syntax to specify the outlet, and the ';parameter=value' syntax (e.g., open=true) to\n * specify route specific parameters.\n *\n * \\@stable\n */\nvar DefaultUrlSerializer = (function () {\n    function DefaultUrlSerializer() {\n    }\n    /** Parses a url into a {@link UrlTree} */\n    /**\n     * Parses a url into a {\\@link UrlTree}\n     * @param {?} url\n     * @return {?}\n     */\n    DefaultUrlSerializer.prototype.parse = /**\n     * Parses a url into a {\\@link UrlTree}\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) {\n        var /** @type {?} */ p = new UrlParser(url);\n        return new UrlTree(p.parseRootSegment(), p.parseQueryParams(), p.parseFragment());\n    };\n    /** Converts a {@link UrlTree} into a url */\n    /**\n     * Converts a {\\@link UrlTree} into a url\n     * @param {?} tree\n     * @return {?}\n     */\n    DefaultUrlSerializer.prototype.serialize = /**\n     * Converts a {\\@link UrlTree} into a url\n     * @param {?} tree\n     * @return {?}\n     */\n    function (tree) {\n        var /** @type {?} */ segment = \"/\" + serializeSegment(tree.root, true);\n        var /** @type {?} */ query = serializeQueryParams(tree.queryParams);\n        var /** @type {?} */ fragment = typeof tree.fragment === \"string\" ? \"#\" + encodeURI((/** @type {?} */ ((tree.fragment)))) : '';\n        return \"\" + segment + query + fragment;\n    };\n    return DefaultUrlSerializer;\n}());\nvar DEFAULT_SERIALIZER = new DefaultUrlSerializer();\n/**\n * @param {?} group\n * @return {?}\n */\nfunction serializePaths(group) {\n    return group.segments.map(function (segment) { return segment.toString(); }).join('/');\n}\n/**\n * @param {?} segment\n * @param {?} root\n * @return {?}\n */\nfunction serializeSegment(segment, root) {\n    if (!segment.hasChildren()) {\n        return serializePaths(segment);\n    }\n    if (root) {\n        var /** @type {?} */ primary = segment.children[PRIMARY_OUTLET] ?\n            serializeSegment(segment.children[PRIMARY_OUTLET], false) :\n            '';\n        var /** @type {?} */ children_1 = [];\n        forEach(segment.children, function (v, k) {\n            if (k !== PRIMARY_OUTLET) {\n                children_1.push(k + \":\" + serializeSegment(v, false));\n            }\n        });\n        return children_1.length > 0 ? primary + \"(\" + children_1.join('//') + \")\" : primary;\n    }\n    else {\n        var /** @type {?} */ children = mapChildrenIntoArray(segment, function (v, k) {\n            if (k === PRIMARY_OUTLET) {\n                return [serializeSegment(segment.children[PRIMARY_OUTLET], false)];\n            }\n            return [k + \":\" + serializeSegment(v, false)];\n        });\n        return serializePaths(segment) + \"/(\" + children.join('//') + \")\";\n    }\n}\n/**\n * This method is intended for encoding *key* or *value* parts of query component. We need a custom\n * method because encodeURIComponent is too aggressive and encodes stuff that doesn't have to be\n * encoded per http://tools.ietf.org/html/rfc3986:\n *    query         = *( pchar / \"/\" / \"?\" )\n *    pchar         = unreserved / pct-encoded / sub-delims / \":\" / \"\\@\"\n *    unreserved    = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n *    pct-encoded   = \"%\" HEXDIG HEXDIG\n *    sub-delims    = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\"\n *                     / \"*\" / \"+\" / \",\" / \";\" / \"=\"\n * @param {?} s\n * @return {?}\n */\nfunction encode(s) {\n    return encodeURIComponent(s)\n        .replace(/%40/g, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/g, '$')\n        .replace(/%2C/gi, ',')\n        .replace(/%3B/gi, ';');\n}\n/**\n * @param {?} s\n * @return {?}\n */\nfunction decode(s) {\n    return decodeURIComponent(s);\n}\n/**\n * @param {?} params\n * @return {?}\n */\nfunction paramsToStrings(params) {\n    var /** @type {?} */ strParams = [];\n    forEach(params, function (value, name) {\n        (Array.isArray(value) ? value : [value]).forEach(function (v) {\n            strParams.push(encode(name) + \"=\" + encode(v));\n        });\n    });\n    return strParams;\n}\n/**\n * @param {?} params\n * @return {?}\n */\nfunction serializeQueryParams(params) {\n    var /** @type {?} */ strParams = paramsToStrings(params).join(\"&\");\n    return strParams.length ? \"?\" + strParams : '';\n}\nvar SEGMENT_RE = /^[^\\/()?;=&#]+/;\n/**\n * @param {?} str\n * @return {?}\n */\nfunction matchSegments(str) {\n    var /** @type {?} */ match = str.match(SEGMENT_RE);\n    return match ? match[0] : '';\n}\nvar QUERY_PARAM_RE = /^[^=?&#]+/;\n/**\n * @param {?} str\n * @return {?}\n */\nfunction matchQueryParams(str) {\n    var /** @type {?} */ match = str.match(QUERY_PARAM_RE);\n    return match ? match[0] : '';\n}\nvar QUERY_PARAM_VALUE_RE = /^[^?&#]+/;\n/**\n * @param {?} str\n * @return {?}\n */\nfunction matchUrlQueryParamValue(str) {\n    var /** @type {?} */ match = str.match(QUERY_PARAM_VALUE_RE);\n    return match ? match[0] : '';\n}\nvar UrlParser = (function () {\n    function UrlParser(url) {\n        this.url = url;\n        this.remaining = url;\n    }\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseRootSegment = /**\n     * @return {?}\n     */\n    function () {\n        this.consumeOptional('/');\n        if (this.remaining === '' || this.peekStartsWith('?') || this.peekStartsWith('#')) {\n            return new UrlSegmentGroup([], {});\n        }\n        // The root segment group never has segments\n        return new UrlSegmentGroup([], this.parseChildren());\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseQueryParams = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ params = {};\n        if (this.consumeOptional('?')) {\n            do {\n                this.parseQueryParam(params);\n            } while (this.consumeOptional('&'));\n        }\n        return params;\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseFragment = /**\n     * @return {?}\n     */\n    function () {\n        return this.consumeOptional('#') ? decodeURI(this.remaining) : null;\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseChildren = /**\n     * @return {?}\n     */\n    function () {\n        if (this.remaining === '') {\n            return {};\n        }\n        this.consumeOptional('/');\n        var /** @type {?} */ segments = [];\n        if (!this.peekStartsWith('(')) {\n            segments.push(this.parseSegment());\n        }\n        while (this.peekStartsWith('/') && !this.peekStartsWith('//') && !this.peekStartsWith('/(')) {\n            this.capture('/');\n            segments.push(this.parseSegment());\n        }\n        var /** @type {?} */ children = {};\n        if (this.peekStartsWith('/(')) {\n            this.capture('/');\n            children = this.parseParens(true);\n        }\n        var /** @type {?} */ res = {};\n        if (this.peekStartsWith('(')) {\n            res = this.parseParens(false);\n        }\n        if (segments.length > 0 || Object.keys(children).length > 0) {\n            res[PRIMARY_OUTLET] = new UrlSegmentGroup(segments, children);\n        }\n        return res;\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseSegment = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ path = matchSegments(this.remaining);\n        if (path === '' && this.peekStartsWith(';')) {\n            throw new Error(\"Empty path url segment cannot have parameters: '\" + this.remaining + \"'.\");\n        }\n        this.capture(path);\n        return new UrlSegment(decode(path), this.parseMatrixParams());\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseMatrixParams = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ params = {};\n        while (this.consumeOptional(';')) {\n            this.parseParam(params);\n        }\n        return params;\n    };\n    /**\n     * @param {?} params\n     * @return {?}\n     */\n    UrlParser.prototype.parseParam = /**\n     * @param {?} params\n     * @return {?}\n     */\n    function (params) {\n        var /** @type {?} */ key = matchSegments(this.remaining);\n        if (!key) {\n            return;\n        }\n        this.capture(key);\n        var /** @type {?} */ value = '';\n        if (this.consumeOptional('=')) {\n            var /** @type {?} */ valueMatch = matchSegments(this.remaining);\n            if (valueMatch) {\n                value = valueMatch;\n                this.capture(value);\n            }\n        }\n        params[decode(key)] = decode(value);\n    };\n    /**\n     * @param {?} params\n     * @return {?}\n     */\n    UrlParser.prototype.parseQueryParam = /**\n     * @param {?} params\n     * @return {?}\n     */\n    function (params) {\n        var /** @type {?} */ key = matchQueryParams(this.remaining);\n        if (!key) {\n            return;\n        }\n        this.capture(key);\n        var /** @type {?} */ value = '';\n        if (this.consumeOptional('=')) {\n            var /** @type {?} */ valueMatch = matchUrlQueryParamValue(this.remaining);\n            if (valueMatch) {\n                value = valueMatch;\n                this.capture(value);\n            }\n        }\n        var /** @type {?} */ decodedKey = decode(key);\n        var /** @type {?} */ decodedVal = decode(value);\n        if (params.hasOwnProperty(decodedKey)) {\n            // Append to existing values\n            var /** @type {?} */ currentVal = params[decodedKey];\n            if (!Array.isArray(currentVal)) {\n                currentVal = [currentVal];\n                params[decodedKey] = currentVal;\n            }\n            currentVal.push(decodedVal);\n        }\n        else {\n            // Create a new value\n            params[decodedKey] = decodedVal;\n        }\n    };\n    /**\n     * @param {?} allowPrimary\n     * @return {?}\n     */\n    UrlParser.prototype.parseParens = /**\n     * @param {?} allowPrimary\n     * @return {?}\n     */\n    function (allowPrimary) {\n        var /** @type {?} */ segments = {};\n        this.capture('(');\n        while (!this.consumeOptional(')') && this.remaining.length > 0) {\n            var /** @type {?} */ path = matchSegments(this.remaining);\n            var /** @type {?} */ next = this.remaining[path.length];\n            // if is is not one of these characters, then the segment was unescaped\n            // or the group was not closed\n            if (next !== '/' && next !== ')' && next !== ';') {\n                throw new Error(\"Cannot parse url '\" + this.url + \"'\");\n            }\n            var /** @type {?} */ outletName = /** @type {?} */ ((undefined));\n            if (path.indexOf(':') > -1) {\n                outletName = path.substr(0, path.indexOf(':'));\n                this.capture(outletName);\n                this.capture(':');\n            }\n            else if (allowPrimary) {\n                outletName = PRIMARY_OUTLET;\n            }\n            var /** @type {?} */ children = this.parseChildren();\n            segments[outletName] = Object.keys(children).length === 1 ? children[PRIMARY_OUTLET] :\n                new UrlSegmentGroup([], children);\n            this.consumeOptional('//');\n        }\n        return segments;\n    };\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    UrlParser.prototype.peekStartsWith = /**\n     * @param {?} str\n     * @return {?}\n     */\n    function (str) { return this.remaining.startsWith(str); };\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    UrlParser.prototype.consumeOptional = /**\n     * @param {?} str\n     * @return {?}\n     */\n    function (str) {\n        if (this.peekStartsWith(str)) {\n            this.remaining = this.remaining.substring(str.length);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    UrlParser.prototype.capture = /**\n     * @param {?} str\n     * @return {?}\n     */\n    function (str) {\n        if (!this.consumeOptional(str)) {\n            throw new Error(\"Expected \\\"\" + str + \"\\\".\");\n        }\n    };\n    return UrlParser;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NoMatch = (function () {\n    function NoMatch(segmentGroup) {\n        this.segmentGroup = segmentGroup || null;\n    }\n    return NoMatch;\n}());\nvar AbsoluteRedirect = (function () {\n    function AbsoluteRedirect(urlTree) {\n        this.urlTree = urlTree;\n    }\n    return AbsoluteRedirect;\n}());\n/**\n * @param {?} segmentGroup\n * @return {?}\n */\nfunction noMatch(segmentGroup) {\n    return new rxjs_Observable.Observable(function (obs) { return obs.error(new NoMatch(segmentGroup)); });\n}\n/**\n * @param {?} newTree\n * @return {?}\n */\nfunction absoluteRedirect(newTree) {\n    return new rxjs_Observable.Observable(function (obs) { return obs.error(new AbsoluteRedirect(newTree)); });\n}\n/**\n * @param {?} redirectTo\n * @return {?}\n */\nfunction namedOutletsRedirect(redirectTo) {\n    return new rxjs_Observable.Observable(function (obs) {\n        return obs.error(new Error(\"Only absolute redirects can have named outlets. redirectTo: '\" + redirectTo + \"'\"));\n    });\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction canLoadFails(route) {\n    return new rxjs_Observable.Observable(function (obs) {\n        return obs.error(navigationCancelingError(\"Cannot load children because the guard of the route \\\"path: '\" + route.path + \"'\\\" returned false\"));\n    });\n}\n/**\n * Returns the `UrlTree` with the redirection applied.\n *\n * Lazy modules are loaded along the way.\n * @param {?} moduleInjector\n * @param {?} configLoader\n * @param {?} urlSerializer\n * @param {?} urlTree\n * @param {?} config\n * @return {?}\n */\nfunction applyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config) {\n    return new ApplyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config).apply();\n}\nvar ApplyRedirects = (function () {\n    function ApplyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config) {\n        this.configLoader = configLoader;\n        this.urlSerializer = urlSerializer;\n        this.urlTree = urlTree;\n        this.config = config;\n        this.allowRedirects = true;\n        this.ngModule = moduleInjector.get(_angular_core.NgModuleRef);\n    }\n    /**\n     * @return {?}\n     */\n    ApplyRedirects.prototype.apply = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ expanded$ = this.expandSegmentGroup(this.ngModule, this.config, this.urlTree.root, PRIMARY_OUTLET);\n        var /** @type {?} */ urlTrees$ = rxjs_operator_map.map.call(expanded$, function (rootSegmentGroup) {\n            return _this.createUrlTree(rootSegmentGroup, _this.urlTree.queryParams, /** @type {?} */ ((_this.urlTree.fragment)));\n        });\n        return rxjs_operator_catch._catch.call(urlTrees$, function (e) {\n            if (e instanceof AbsoluteRedirect) {\n                // after an absolute redirect we do not apply any more redirects!\n                // after an absolute redirect we do not apply any more redirects!\n                _this.allowRedirects = false;\n                // we need to run matching, so we can fetch all lazy-loaded modules\n                return _this.match(e.urlTree);\n            }\n            if (e instanceof NoMatch) {\n                throw _this.noMatchError(e);\n            }\n            throw e;\n        });\n    };\n    /**\n     * @param {?} tree\n     * @return {?}\n     */\n    ApplyRedirects.prototype.match = /**\n     * @param {?} tree\n     * @return {?}\n     */\n    function (tree) {\n        var _this = this;\n        var /** @type {?} */ expanded$ = this.expandSegmentGroup(this.ngModule, this.config, tree.root, PRIMARY_OUTLET);\n        var /** @type {?} */ mapped$ = rxjs_operator_map.map.call(expanded$, function (rootSegmentGroup) {\n            return _this.createUrlTree(rootSegmentGroup, tree.queryParams, /** @type {?} */ ((tree.fragment)));\n        });\n        return rxjs_operator_catch._catch.call(mapped$, function (e) {\n            if (e instanceof NoMatch) {\n                throw _this.noMatchError(e);\n            }\n            throw e;\n        });\n    };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ApplyRedirects.prototype.noMatchError = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return new Error(\"Cannot match any routes. URL Segment: '\" + e.segmentGroup + \"'\");\n    };\n    /**\n     * @param {?} rootCandidate\n     * @param {?} queryParams\n     * @param {?} fragment\n     * @return {?}\n     */\n    ApplyRedirects.prototype.createUrlTree = /**\n     * @param {?} rootCandidate\n     * @param {?} queryParams\n     * @param {?} fragment\n     * @return {?}\n     */\n    function (rootCandidate, queryParams, fragment) {\n        var /** @type {?} */ root = rootCandidate.segments.length > 0 ?\n            new UrlSegmentGroup([], (_a = {}, _a[PRIMARY_OUTLET] = rootCandidate, _a)) :\n            rootCandidate;\n        return new UrlTree(root, queryParams, fragment);\n        var _a;\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @param {?} segmentGroup\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandSegmentGroup = /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @param {?} segmentGroup\n     * @param {?} outlet\n     * @return {?}\n     */\n    function (ngModule, routes, segmentGroup, outlet) {\n        if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n            return rxjs_operator_map.map.call(this.expandChildren(ngModule, routes, segmentGroup), function (children) { return new UrlSegmentGroup([], children); });\n        }\n        return this.expandSegment(ngModule, segmentGroup, routes, segmentGroup.segments, outlet, true);\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @param {?} segmentGroup\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandChildren = /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @param {?} segmentGroup\n     * @return {?}\n     */\n    function (ngModule, routes, segmentGroup) {\n        var _this = this;\n        return waitForMap(segmentGroup.children, function (childOutlet, child) { return _this.expandSegmentGroup(ngModule, routes, child, childOutlet); });\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} segments\n     * @param {?} outlet\n     * @param {?} allowRedirects\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandSegment = /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} segments\n     * @param {?} outlet\n     * @param {?} allowRedirects\n     * @return {?}\n     */\n    function (ngModule, segmentGroup, routes, segments, outlet, allowRedirects) {\n        var _this = this;\n        var /** @type {?} */ routes$ = rxjs_observable_of.of.apply(void 0, routes);\n        var /** @type {?} */ processedRoutes$ = rxjs_operator_map.map.call(routes$, function (r) {\n            var /** @type {?} */ expanded$ = _this.expandSegmentAgainstRoute(ngModule, segmentGroup, routes, r, segments, outlet, allowRedirects);\n            return rxjs_operator_catch._catch.call(expanded$, function (e) {\n                if (e instanceof NoMatch) {\n                    return rxjs_observable_of.of(null);\n                }\n                throw e;\n            });\n        });\n        var /** @type {?} */ concattedProcessedRoutes$ = rxjs_operator_concatAll.concatAll.call(processedRoutes$);\n        var /** @type {?} */ first$ = rxjs_operator_first.first.call(concattedProcessedRoutes$, function (s) { return !!s; });\n        return rxjs_operator_catch._catch.call(first$, function (e, _) {\n            if (e instanceof rxjs_util_EmptyError.EmptyError) {\n                if (_this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n                    return rxjs_observable_of.of(new UrlSegmentGroup([], {}));\n                }\n                throw new NoMatch(segmentGroup);\n            }\n            throw e;\n        });\n    };\n    /**\n     * @param {?} segmentGroup\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.noLeftoversInUrl = /**\n     * @param {?} segmentGroup\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    function (segmentGroup, segments, outlet) {\n        return segments.length === 0 && !segmentGroup.children[outlet];\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} paths\n     * @param {?} outlet\n     * @param {?} allowRedirects\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandSegmentAgainstRoute = /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} paths\n     * @param {?} outlet\n     * @param {?} allowRedirects\n     * @return {?}\n     */\n    function (ngModule, segmentGroup, routes, route, paths, outlet, allowRedirects) {\n        if (getOutlet(route) !== outlet) {\n            return noMatch(segmentGroup);\n        }\n        if (route.redirectTo === undefined) {\n            return this.matchSegmentAgainstRoute(ngModule, segmentGroup, route, paths);\n        }\n        if (allowRedirects && this.allowRedirects) {\n            return this.expandSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, paths, outlet);\n        }\n        return noMatch(segmentGroup);\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandSegmentAgainstRouteUsingRedirect = /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    function (ngModule, segmentGroup, routes, route, segments, outlet) {\n        if (route.path === '**') {\n            return this.expandWildCardWithParamsAgainstRouteUsingRedirect(ngModule, routes, route, outlet);\n        }\n        return this.expandRegularSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, segments, outlet);\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandWildCardWithParamsAgainstRouteUsingRedirect = /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} outlet\n     * @return {?}\n     */\n    function (ngModule, routes, route, outlet) {\n        var _this = this;\n        var /** @type {?} */ newTree = this.applyRedirectCommands([], /** @type {?} */ ((route.redirectTo)), {});\n        if (/** @type {?} */ ((route.redirectTo)).startsWith('/')) {\n            return absoluteRedirect(newTree);\n        }\n        return rxjs_operator_mergeMap.mergeMap.call(this.lineralizeSegments(route, newTree), function (newSegments) {\n            var /** @type {?} */ group = new UrlSegmentGroup(newSegments, {});\n            return _this.expandSegment(ngModule, group, routes, newSegments, outlet, false);\n        });\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandRegularSegmentAgainstRouteUsingRedirect = /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    function (ngModule, segmentGroup, routes, route, segments, outlet) {\n        var _this = this;\n        var _a = match(segmentGroup, route, segments), matched = _a.matched, consumedSegments = _a.consumedSegments, lastChild = _a.lastChild, positionalParamSegments = _a.positionalParamSegments;\n        if (!matched)\n            return noMatch(segmentGroup);\n        var /** @type {?} */ newTree = this.applyRedirectCommands(consumedSegments, /** @type {?} */ ((route.redirectTo)), /** @type {?} */ (positionalParamSegments));\n        if (/** @type {?} */ ((route.redirectTo)).startsWith('/')) {\n            return absoluteRedirect(newTree);\n        }\n        return rxjs_operator_mergeMap.mergeMap.call(this.lineralizeSegments(route, newTree), function (newSegments) {\n            return _this.expandSegment(ngModule, segmentGroup, routes, newSegments.concat(segments.slice(lastChild)), outlet, false);\n        });\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} rawSegmentGroup\n     * @param {?} route\n     * @param {?} segments\n     * @return {?}\n     */\n    ApplyRedirects.prototype.matchSegmentAgainstRoute = /**\n     * @param {?} ngModule\n     * @param {?} rawSegmentGroup\n     * @param {?} route\n     * @param {?} segments\n     * @return {?}\n     */\n    function (ngModule, rawSegmentGroup, route, segments) {\n        var _this = this;\n        if (route.path === '**') {\n            if (route.loadChildren) {\n                return rxjs_operator_map.map.call(this.configLoader.load(ngModule.injector, route), function (cfg) {\n                    route._loadedConfig = cfg;\n                    return new UrlSegmentGroup(segments, {});\n                });\n            }\n            return rxjs_observable_of.of(new UrlSegmentGroup(segments, {}));\n        }\n        var _a = match(rawSegmentGroup, route, segments), matched = _a.matched, consumedSegments = _a.consumedSegments, lastChild = _a.lastChild;\n        if (!matched)\n            return noMatch(rawSegmentGroup);\n        var /** @type {?} */ rawSlicedSegments = segments.slice(lastChild);\n        var /** @type {?} */ childConfig$ = this.getChildConfig(ngModule, route);\n        return rxjs_operator_mergeMap.mergeMap.call(childConfig$, function (routerConfig) {\n            var /** @type {?} */ childModule = routerConfig.module;\n            var /** @type {?} */ childConfig = routerConfig.routes;\n            var _a = split(rawSegmentGroup, consumedSegments, rawSlicedSegments, childConfig), segmentGroup = _a.segmentGroup, slicedSegments = _a.slicedSegments;\n            if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n                var /** @type {?} */ expanded$_1 = _this.expandChildren(childModule, childConfig, segmentGroup);\n                return rxjs_operator_map.map.call(expanded$_1, function (children) { return new UrlSegmentGroup(consumedSegments, children); });\n            }\n            if (childConfig.length === 0 && slicedSegments.length === 0) {\n                return rxjs_observable_of.of(new UrlSegmentGroup(consumedSegments, {}));\n            }\n            var /** @type {?} */ expanded$ = _this.expandSegment(childModule, segmentGroup, childConfig, slicedSegments, PRIMARY_OUTLET, true);\n            return rxjs_operator_map.map.call(expanded$, function (cs) {\n                return new UrlSegmentGroup(consumedSegments.concat(cs.segments), cs.children);\n            });\n        });\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} route\n     * @return {?}\n     */\n    ApplyRedirects.prototype.getChildConfig = /**\n     * @param {?} ngModule\n     * @param {?} route\n     * @return {?}\n     */\n    function (ngModule, route) {\n        var _this = this;\n        if (route.children) {\n            // The children belong to the same module\n            return rxjs_observable_of.of(new LoadedRouterConfig(route.children, ngModule));\n        }\n        if (route.loadChildren) {\n            // lazy children belong to the loaded module\n            if (route._loadedConfig !== undefined) {\n                return rxjs_observable_of.of(route._loadedConfig);\n            }\n            return rxjs_operator_mergeMap.mergeMap.call(runCanLoadGuard(ngModule.injector, route), function (shouldLoad) {\n                if (shouldLoad) {\n                    return rxjs_operator_map.map.call(_this.configLoader.load(ngModule.injector, route), function (cfg) {\n                        route._loadedConfig = cfg;\n                        return cfg;\n                    });\n                }\n                return canLoadFails(route);\n            });\n        }\n        return rxjs_observable_of.of(new LoadedRouterConfig([], ngModule));\n    };\n    /**\n     * @param {?} route\n     * @param {?} urlTree\n     * @return {?}\n     */\n    ApplyRedirects.prototype.lineralizeSegments = /**\n     * @param {?} route\n     * @param {?} urlTree\n     * @return {?}\n     */\n    function (route, urlTree) {\n        var /** @type {?} */ res = [];\n        var /** @type {?} */ c = urlTree.root;\n        while (true) {\n            res = res.concat(c.segments);\n            if (c.numberOfChildren === 0) {\n                return rxjs_observable_of.of(res);\n            }\n            if (c.numberOfChildren > 1 || !c.children[PRIMARY_OUTLET]) {\n                return namedOutletsRedirect(/** @type {?} */ ((route.redirectTo)));\n            }\n            c = c.children[PRIMARY_OUTLET];\n        }\n    };\n    /**\n     * @param {?} segments\n     * @param {?} redirectTo\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.applyRedirectCommands = /**\n     * @param {?} segments\n     * @param {?} redirectTo\n     * @param {?} posParams\n     * @return {?}\n     */\n    function (segments, redirectTo, posParams) {\n        return this.applyRedirectCreateUrlTree(redirectTo, this.urlSerializer.parse(redirectTo), segments, posParams);\n    };\n    /**\n     * @param {?} redirectTo\n     * @param {?} urlTree\n     * @param {?} segments\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.applyRedirectCreateUrlTree = /**\n     * @param {?} redirectTo\n     * @param {?} urlTree\n     * @param {?} segments\n     * @param {?} posParams\n     * @return {?}\n     */\n    function (redirectTo, urlTree, segments, posParams) {\n        var /** @type {?} */ newRoot = this.createSegmentGroup(redirectTo, urlTree.root, segments, posParams);\n        return new UrlTree(newRoot, this.createQueryParams(urlTree.queryParams, this.urlTree.queryParams), urlTree.fragment);\n    };\n    /**\n     * @param {?} redirectToParams\n     * @param {?} actualParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.createQueryParams = /**\n     * @param {?} redirectToParams\n     * @param {?} actualParams\n     * @return {?}\n     */\n    function (redirectToParams, actualParams) {\n        var /** @type {?} */ res = {};\n        forEach(redirectToParams, function (v, k) {\n            if (typeof v === 'string' && v.startsWith(':')) {\n                // On redirect to `url?target=:source`, `target` should take the value of the `source`\n                // parameter of the source url\n                var /** @type {?} */ sourceName = v.substring(1);\n                res[k] = actualParams[sourceName];\n            }\n            else {\n                res[k] = v;\n            }\n        });\n        return res;\n    };\n    /**\n     * @param {?} redirectTo\n     * @param {?} group\n     * @param {?} segments\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.createSegmentGroup = /**\n     * @param {?} redirectTo\n     * @param {?} group\n     * @param {?} segments\n     * @param {?} posParams\n     * @return {?}\n     */\n    function (redirectTo, group, segments, posParams) {\n        var _this = this;\n        var /** @type {?} */ updatedSegments = this.createSegments(redirectTo, group.segments, segments, posParams);\n        var /** @type {?} */ children = {};\n        forEach(group.children, function (child, name) {\n            children[name] = _this.createSegmentGroup(redirectTo, child, segments, posParams);\n        });\n        return new UrlSegmentGroup(updatedSegments, children);\n    };\n    /**\n     * @param {?} redirectTo\n     * @param {?} redirectToSegments\n     * @param {?} actualSegments\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.createSegments = /**\n     * @param {?} redirectTo\n     * @param {?} redirectToSegments\n     * @param {?} actualSegments\n     * @param {?} posParams\n     * @return {?}\n     */\n    function (redirectTo, redirectToSegments, actualSegments, posParams) {\n        var _this = this;\n        return redirectToSegments.map(function (s) {\n            return s.path.startsWith(':') ? _this.findPosParam(redirectTo, s, posParams) :\n                _this.findOrReturn(s, actualSegments);\n        });\n    };\n    /**\n     * @param {?} redirectTo\n     * @param {?} redirectToUrlSegment\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.findPosParam = /**\n     * @param {?} redirectTo\n     * @param {?} redirectToUrlSegment\n     * @param {?} posParams\n     * @return {?}\n     */\n    function (redirectTo, redirectToUrlSegment, posParams) {\n        var /** @type {?} */ pos = posParams[redirectToUrlSegment.path.substring(1)];\n        if (!pos)\n            throw new Error(\"Cannot redirect to '\" + redirectTo + \"'. Cannot find '\" + redirectToUrlSegment.path + \"'.\");\n        return pos;\n    };\n    /**\n     * @param {?} redirectToUrlSegment\n     * @param {?} actualSegments\n     * @return {?}\n     */\n    ApplyRedirects.prototype.findOrReturn = /**\n     * @param {?} redirectToUrlSegment\n     * @param {?} actualSegments\n     * @return {?}\n     */\n    function (redirectToUrlSegment, actualSegments) {\n        var /** @type {?} */ idx = 0;\n        for (var _i = 0, actualSegments_1 = actualSegments; _i < actualSegments_1.length; _i++) {\n            var s = actualSegments_1[_i];\n            if (s.path === redirectToUrlSegment.path) {\n                actualSegments.splice(idx);\n                return s;\n            }\n            idx++;\n        }\n        return redirectToUrlSegment;\n    };\n    return ApplyRedirects;\n}());\n/**\n * @param {?} moduleInjector\n * @param {?} route\n * @return {?}\n */\nfunction runCanLoadGuard(moduleInjector, route) {\n    var /** @type {?} */ canLoad = route.canLoad;\n    if (!canLoad || canLoad.length === 0)\n        return rxjs_observable_of.of(true);\n    var /** @type {?} */ obs = rxjs_operator_map.map.call(rxjs_observable_from.from(canLoad), function (injectionToken) {\n        var /** @type {?} */ guard = moduleInjector.get(injectionToken);\n        return wrapIntoObservable(guard.canLoad ? guard.canLoad(route) : guard(route));\n    });\n    return andObservables(obs);\n}\n/**\n * @param {?} segmentGroup\n * @param {?} route\n * @param {?} segments\n * @return {?}\n */\nfunction match(segmentGroup, route, segments) {\n    if (route.path === '') {\n        if ((route.pathMatch === 'full') && (segmentGroup.hasChildren() || segments.length > 0)) {\n            return { matched: false, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n        }\n        return { matched: true, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n    }\n    var /** @type {?} */ matcher = route.matcher || defaultUrlMatcher;\n    var /** @type {?} */ res = matcher(segments, segmentGroup, route);\n    if (res) {\n        return {\n            matched: true,\n            consumedSegments: /** @type {?} */ ((res.consumed)),\n            lastChild: /** @type {?} */ ((res.consumed.length)),\n            positionalParamSegments: /** @type {?} */ ((res.posParams))\n        };\n    }\n    return {\n        matched: false,\n        consumedSegments: /** @type {?} */ ([]),\n        lastChild: 0,\n        positionalParamSegments: {},\n    };\n}\n/**\n * @param {?} segmentGroup\n * @param {?} consumedSegments\n * @param {?} slicedSegments\n * @param {?} config\n * @return {?}\n */\nfunction split(segmentGroup, consumedSegments, slicedSegments, config) {\n    if (slicedSegments.length > 0 &&\n        containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n        var /** @type {?} */ s = new UrlSegmentGroup(consumedSegments, createChildrenForEmptySegments(config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n        return { segmentGroup: mergeTrivialChildren(s), slicedSegments: [] };\n    }\n    if (slicedSegments.length === 0 &&\n        containsEmptyPathRedirects(segmentGroup, slicedSegments, config)) {\n        var /** @type {?} */ s = new UrlSegmentGroup(segmentGroup.segments, addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, config, segmentGroup.children));\n        return { segmentGroup: mergeTrivialChildren(s), slicedSegments: slicedSegments };\n    }\n    return { segmentGroup: segmentGroup, slicedSegments: slicedSegments };\n}\n/**\n * @param {?} s\n * @return {?}\n */\nfunction mergeTrivialChildren(s) {\n    if (s.numberOfChildren === 1 && s.children[PRIMARY_OUTLET]) {\n        var /** @type {?} */ c = s.children[PRIMARY_OUTLET];\n        return new UrlSegmentGroup(s.segments.concat(c.segments), c.children);\n    }\n    return s;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} routes\n * @param {?} children\n * @return {?}\n */\nfunction addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, routes, children) {\n    var /** @type {?} */ res = {};\n    for (var _i = 0, routes_1 = routes; _i < routes_1.length; _i++) {\n        var r = routes_1[_i];\n        if (isEmptyPathRedirect(segmentGroup, slicedSegments, r) && !children[getOutlet(r)]) {\n            res[getOutlet(r)] = new UrlSegmentGroup([], {});\n        }\n    }\n    return __assign({}, children, res);\n}\n/**\n * @param {?} routes\n * @param {?} primarySegmentGroup\n * @return {?}\n */\nfunction createChildrenForEmptySegments(routes, primarySegmentGroup) {\n    var /** @type {?} */ res = {};\n    res[PRIMARY_OUTLET] = primarySegmentGroup;\n    for (var _i = 0, routes_2 = routes; _i < routes_2.length; _i++) {\n        var r = routes_2[_i];\n        if (r.path === '' && getOutlet(r) !== PRIMARY_OUTLET) {\n            res[getOutlet(r)] = new UrlSegmentGroup([], {});\n        }\n    }\n    return res;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} segments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, segments, routes) {\n    return routes.some(function (r) { return isEmptyPathRedirect(segmentGroup, segments, r) && getOutlet(r) !== PRIMARY_OUTLET; });\n}\n/**\n * @param {?} segmentGroup\n * @param {?} segments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathRedirects(segmentGroup, segments, routes) {\n    return routes.some(function (r) { return isEmptyPathRedirect(segmentGroup, segments, r); });\n}\n/**\n * @param {?} segmentGroup\n * @param {?} segments\n * @param {?} r\n * @return {?}\n */\nfunction isEmptyPathRedirect(segmentGroup, segments, r) {\n    if ((segmentGroup.hasChildren() || segments.length > 0) && r.pathMatch === 'full') {\n        return false;\n    }\n    return r.path === '' && r.redirectTo !== undefined;\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getOutlet(route) {\n    return route.outlet || PRIMARY_OUTLET;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar Tree = (function () {\n    function Tree(root) {\n        this._root = root;\n    }\n    Object.defineProperty(Tree.prototype, \"root\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._root.value; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @internal\n     */\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.parent = /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    function (t) {\n        var /** @type {?} */ p = this.pathFromRoot(t);\n        return p.length > 1 ? p[p.length - 2] : null;\n    };\n    /**\n     * @internal\n     */\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.children = /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    function (t) {\n        var /** @type {?} */ n = findNode(t, this._root);\n        return n ? n.children.map(function (t) { return t.value; }) : [];\n    };\n    /**\n     * @internal\n     */\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.firstChild = /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    function (t) {\n        var /** @type {?} */ n = findNode(t, this._root);\n        return n && n.children.length > 0 ? n.children[0].value : null;\n    };\n    /**\n     * @internal\n     */\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.siblings = /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    function (t) {\n        var /** @type {?} */ p = findPath(t, this._root);\n        if (p.length < 2)\n            return [];\n        var /** @type {?} */ c = p[p.length - 2].children.map(function (c) { return c.value; });\n        return c.filter(function (cc) { return cc !== t; });\n    };\n    /**\n     * @internal\n     */\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.pathFromRoot = /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    function (t) { return findPath(t, this._root).map(function (s) { return s.value; }); };\n    return Tree;\n}());\n/**\n * @template T\n * @param {?} value\n * @param {?} node\n * @return {?}\n */\nfunction findNode(value, node) {\n    if (value === node.value)\n        return node;\n    for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n        var child = _a[_i];\n        var /** @type {?} */ node_1 = findNode(value, child);\n        if (node_1)\n            return node_1;\n    }\n    return null;\n}\n/**\n * @template T\n * @param {?} value\n * @param {?} node\n * @return {?}\n */\nfunction findPath(value, node) {\n    if (value === node.value)\n        return [node];\n    for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n        var child = _a[_i];\n        var /** @type {?} */ path = findPath(value, child);\n        if (path.length) {\n            path.unshift(node);\n            return path;\n        }\n    }\n    return [];\n}\nvar TreeNode = (function () {\n    function TreeNode(value, children) {\n        this.value = value;\n        this.children = children;\n    }\n    /**\n     * @return {?}\n     */\n    TreeNode.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return \"TreeNode(\" + this.value + \")\"; };\n    return TreeNode;\n}());\n/**\n * @template T\n * @param {?} node\n * @return {?}\n */\nfunction nodeChildrenAsMap(node) {\n    var /** @type {?} */ map$$1 = {};\n    if (node) {\n        node.children.forEach(function (child) { return map$$1[child.value.outlet] = child; });\n    }\n    return map$$1;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@whatItDoes Represents the state of the router.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const state: RouterState = router.routerState;\n *     const root: ActivatedRoute = state.root;\n *     const child = root.firstChild;\n *     const id: Observable<string> = child.params.map(p => p.id);\n *     //...\n *   }\n * }\n * ```\n *\n * \\@description\n * RouterState is a tree of activated routes. Every node in this tree knows about the \"consumed\" URL\n * segments, the extracted parameters, and the resolved data.\n *\n * See {\\@link ActivatedRoute} for more information.\n *\n * \\@stable\n */\nvar RouterState = (function (_super) {\n    __extends(RouterState, _super);\n    /** @internal */\n    function RouterState(root, snapshot) {\n        var _this = _super.call(this, root) || this;\n        _this.snapshot = snapshot;\n        setRouterState(/** @type {?} */ (_this), root);\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    RouterState.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return this.snapshot.toString(); };\n    return RouterState;\n}(Tree));\n/**\n * @param {?} urlTree\n * @param {?} rootComponent\n * @return {?}\n */\nfunction createEmptyState(urlTree, rootComponent) {\n    var /** @type {?} */ snapshot = createEmptyStateSnapshot(urlTree, rootComponent);\n    var /** @type {?} */ emptyUrl = new rxjs_BehaviorSubject.BehaviorSubject([new UrlSegment('', {})]);\n    var /** @type {?} */ emptyParams = new rxjs_BehaviorSubject.BehaviorSubject({});\n    var /** @type {?} */ emptyData = new rxjs_BehaviorSubject.BehaviorSubject({});\n    var /** @type {?} */ emptyQueryParams = new rxjs_BehaviorSubject.BehaviorSubject({});\n    var /** @type {?} */ fragment = new rxjs_BehaviorSubject.BehaviorSubject('');\n    var /** @type {?} */ activated = new ActivatedRoute(emptyUrl, emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, snapshot.root);\n    activated.snapshot = snapshot.root;\n    return new RouterState(new TreeNode(activated, []), snapshot);\n}\n/**\n * @param {?} urlTree\n * @param {?} rootComponent\n * @return {?}\n */\nfunction createEmptyStateSnapshot(urlTree, rootComponent) {\n    var /** @type {?} */ emptyParams = {};\n    var /** @type {?} */ emptyData = {};\n    var /** @type {?} */ emptyQueryParams = {};\n    var /** @type {?} */ fragment = '';\n    var /** @type {?} */ activated = new ActivatedRouteSnapshot([], emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, null, urlTree.root, -1, {});\n    return new RouterStateSnapshot('', new TreeNode(activated, []));\n}\n/**\n * \\@whatItDoes Contains the information about a route associated with a component loaded in an\n * outlet.\n * An `ActivatedRoute` can also be used to traverse the router state tree.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({...})\n * class MyComponent {\n *   constructor(route: ActivatedRoute) {\n *     const id: Observable<string> = route.params.map(p => p.id);\n *     const url: Observable<string> = route.url.map(segments => segments.join(''));\n *     // route.data includes both `data` and `resolve`\n *     const user = route.data.map(d => d.user);\n *   }\n * }\n * ```\n *\n * \\@stable\n */\nvar ActivatedRoute = (function () {\n    /** @internal */\n    function ActivatedRoute(url, params, queryParams, fragment, data, outlet, component, futureSnapshot) {\n        this.url = url;\n        this.params = params;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n        this.data = data;\n        this.outlet = outlet;\n        this.component = component;\n        this._futureSnapshot = futureSnapshot;\n    }\n    Object.defineProperty(ActivatedRoute.prototype, \"routeConfig\", {\n        /** The configuration used to match this route */\n        get: /**\n         * The configuration used to match this route\n         * @return {?}\n         */\n        function () { return this._futureSnapshot.routeConfig; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"root\", {\n        /** The root of the router state */\n        get: /**\n         * The root of the router state\n         * @return {?}\n         */\n        function () { return this._routerState.root; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"parent\", {\n        /** The parent of this route in the router state tree */\n        get: /**\n         * The parent of this route in the router state tree\n         * @return {?}\n         */\n        function () { return this._routerState.parent(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"firstChild\", {\n        /** The first child of this route in the router state tree */\n        get: /**\n         * The first child of this route in the router state tree\n         * @return {?}\n         */\n        function () { return this._routerState.firstChild(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"children\", {\n        /** The children of this route in the router state tree */\n        get: /**\n         * The children of this route in the router state tree\n         * @return {?}\n         */\n        function () { return this._routerState.children(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"pathFromRoot\", {\n        /** The path from the root of the router state tree to this route */\n        get: /**\n         * The path from the root of the router state tree to this route\n         * @return {?}\n         */\n        function () { return this._routerState.pathFromRoot(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"paramMap\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            if (!this._paramMap) {\n                this._paramMap = rxjs_operator_map.map.call(this.params, function (p) { return convertToParamMap(p); });\n            }\n            return this._paramMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"queryParamMap\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            if (!this._queryParamMap) {\n                this._queryParamMap =\n                    rxjs_operator_map.map.call(this.queryParams, function (p) { return convertToParamMap(p); });\n            }\n            return this._queryParamMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ActivatedRoute.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        return this.snapshot ? this.snapshot.toString() : \"Future(\" + this._futureSnapshot + \")\";\n    };\n    return ActivatedRoute;\n}());\n/**\n * \\@internal\n * @param {?} route\n * @return {?}\n */\nfunction inheritedParamsDataResolve(route) {\n    var /** @type {?} */ pathToRoot = route.pathFromRoot;\n    var /** @type {?} */ inheritingStartingFrom = pathToRoot.length - 1;\n    while (inheritingStartingFrom >= 1) {\n        var /** @type {?} */ current = pathToRoot[inheritingStartingFrom];\n        var /** @type {?} */ parent_1 = pathToRoot[inheritingStartingFrom - 1];\n        // current route is an empty path => inherits its parent's params and data\n        if (current.routeConfig && current.routeConfig.path === '') {\n            inheritingStartingFrom--;\n            // parent is componentless => current route should inherit its params and data\n        }\n        else if (!parent_1.component) {\n            inheritingStartingFrom--;\n        }\n        else {\n            break;\n        }\n    }\n    return pathToRoot.slice(inheritingStartingFrom).reduce(function (res, curr) {\n        var /** @type {?} */ params = __assign({}, res.params, curr.params);\n        var /** @type {?} */ data = __assign({}, res.data, curr.data);\n        var /** @type {?} */ resolve = __assign({}, res.resolve, curr._resolvedData);\n        return { params: params, data: data, resolve: resolve };\n    }, /** @type {?} */ ({ params: {}, data: {}, resolve: {} }));\n}\n/**\n * \\@whatItDoes Contains the information about a route associated with a component loaded in an\n * outlet\n * at a particular moment in time. ActivatedRouteSnapshot can also be used to traverse the router\n * state tree.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'./my-component.html'})\n * class MyComponent {\n *   constructor(route: ActivatedRoute) {\n *     const id: string = route.snapshot.params.id;\n *     const url: string = route.snapshot.url.join('');\n *     const user = route.snapshot.data.user;\n *   }\n * }\n * ```\n *\n * \\@stable\n */\nvar ActivatedRouteSnapshot = (function () {\n    /** @internal */\n    function ActivatedRouteSnapshot(url, params, queryParams, fragment, data, outlet, component, routeConfig, urlSegment, lastPathIndex, resolve) {\n        this.url = url;\n        this.params = params;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n        this.data = data;\n        this.outlet = outlet;\n        this.component = component;\n        this.routeConfig = routeConfig;\n        this._urlSegment = urlSegment;\n        this._lastPathIndex = lastPathIndex;\n        this._resolve = resolve;\n    }\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"root\", {\n        /** The root of the router state */\n        get: /**\n         * The root of the router state\n         * @return {?}\n         */\n        function () { return this._routerState.root; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"parent\", {\n        /** The parent of this route in the router state tree */\n        get: /**\n         * The parent of this route in the router state tree\n         * @return {?}\n         */\n        function () { return this._routerState.parent(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"firstChild\", {\n        /** The first child of this route in the router state tree */\n        get: /**\n         * The first child of this route in the router state tree\n         * @return {?}\n         */\n        function () { return this._routerState.firstChild(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"children\", {\n        /** The children of this route in the router state tree */\n        get: /**\n         * The children of this route in the router state tree\n         * @return {?}\n         */\n        function () { return this._routerState.children(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"pathFromRoot\", {\n        /** The path from the root of the router state tree to this route */\n        get: /**\n         * The path from the root of the router state tree to this route\n         * @return {?}\n         */\n        function () { return this._routerState.pathFromRoot(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"paramMap\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            if (!this._paramMap) {\n                this._paramMap = convertToParamMap(this.params);\n            }\n            return this._paramMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"queryParamMap\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            if (!this._queryParamMap) {\n                this._queryParamMap = convertToParamMap(this.queryParams);\n            }\n            return this._queryParamMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ActivatedRouteSnapshot.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ url = this.url.map(function (segment) { return segment.toString(); }).join('/');\n        var /** @type {?} */ matched = this.routeConfig ? this.routeConfig.path : '';\n        return \"Route(url:'\" + url + \"', path:'\" + matched + \"')\";\n    };\n    return ActivatedRouteSnapshot;\n}());\n/**\n * \\@whatItDoes Represents the state of the router at a moment in time.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const state: RouterState = router.routerState;\n *     const snapshot: RouterStateSnapshot = state.snapshot;\n *     const root: ActivatedRouteSnapshot = snapshot.root;\n *     const child = root.firstChild;\n *     const id: Observable<string> = child.params.map(p => p.id);\n *     //...\n *   }\n * }\n * ```\n *\n * \\@description\n * RouterStateSnapshot is a tree of activated route snapshots. Every node in this tree knows about\n * the \"consumed\" URL segments, the extracted parameters, and the resolved data.\n *\n * \\@stable\n */\nvar RouterStateSnapshot = (function (_super) {\n    __extends(RouterStateSnapshot, _super);\n    /** @internal */\n    function RouterStateSnapshot(url, root) {\n        var _this = _super.call(this, root) || this;\n        _this.url = url;\n        setRouterState(/** @type {?} */ (_this), root);\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    RouterStateSnapshot.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return serializeNode(this._root); };\n    return RouterStateSnapshot;\n}(Tree));\n/**\n * @template U, T\n * @param {?} state\n * @param {?} node\n * @return {?}\n */\nfunction setRouterState(state, node) {\n    node.value._routerState = state;\n    node.children.forEach(function (c) { return setRouterState(state, c); });\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction serializeNode(node) {\n    var /** @type {?} */ c = node.children.length > 0 ? \" { \" + node.children.map(serializeNode).join(\", \") + \" } \" : '';\n    return \"\" + node.value + c;\n}\n/**\n * The expectation is that the activate route is created with the right set of parameters.\n * So we push new values into the observables only when they are not the initial values.\n * And we detect that by checking if the snapshot field is set.\n * @param {?} route\n * @return {?}\n */\nfunction advanceActivatedRoute(route) {\n    if (route.snapshot) {\n        var /** @type {?} */ currentSnapshot = route.snapshot;\n        var /** @type {?} */ nextSnapshot = route._futureSnapshot;\n        route.snapshot = nextSnapshot;\n        if (!equalsParams(currentSnapshot.queryParams, nextSnapshot.queryParams)) {\n            (/** @type {?} */ (route.queryParams)).next(nextSnapshot.queryParams);\n        }\n        if (currentSnapshot.fragment !== nextSnapshot.fragment) {\n            (/** @type {?} */ (route.fragment)).next(nextSnapshot.fragment);\n        }\n        if (!equalsParams(currentSnapshot.params, nextSnapshot.params)) {\n            (/** @type {?} */ (route.params)).next(nextSnapshot.params);\n        }\n        if (!equalSegments(currentSnapshot.url, nextSnapshot.url)) {\n            (/** @type {?} */ (route.url)).next(nextSnapshot.url);\n        }\n        if (!equalsParams(currentSnapshot.data, nextSnapshot.data)) {\n            (/** @type {?} */ (route.data)).next(nextSnapshot.data);\n        }\n    }\n    else {\n        route.snapshot = route._futureSnapshot;\n        // this is for resolved data\n        (/** @type {?} */ (route.data)).next(route._futureSnapshot.data);\n    }\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction equalParamsAndUrlSegments(a, b) {\n    if (!equalsParams(a.params, b.params))\n        return false;\n    if (!equalSegments(a.url, b.url))\n        return false;\n    // could only be equal if both have a parent or both have no parent\n    if (!a.parent !== !b.parent)\n        return false;\n    // walk up the routes\n    return a.parent ? equalParamsAndUrlSegments(a.parent, /** @type {?} */ ((b.parent))) : true;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} routeReuseStrategy\n * @param {?} curr\n * @param {?} prevState\n * @return {?}\n */\nfunction createRouterState(routeReuseStrategy, curr, prevState) {\n    var /** @type {?} */ root = createNode(routeReuseStrategy, curr._root, prevState ? prevState._root : undefined);\n    return new RouterState(root, curr);\n}\n/**\n * @param {?} routeReuseStrategy\n * @param {?} curr\n * @param {?=} prevState\n * @return {?}\n */\nfunction createNode(routeReuseStrategy, curr, prevState) {\n    // reuse an activated route that is currently displayed on the screen\n    if (prevState && routeReuseStrategy.shouldReuseRoute(curr.value, prevState.value.snapshot)) {\n        var /** @type {?} */ value = prevState.value;\n        value._futureSnapshot = curr.value;\n        var /** @type {?} */ children = createOrReuseChildren(routeReuseStrategy, curr, prevState);\n        return new TreeNode(value, children);\n        // retrieve an activated route that is used to be displayed, but is not currently displayed\n    }\n    else if (routeReuseStrategy.retrieve(curr.value)) {\n        var /** @type {?} */ tree = (/** @type {?} */ (routeReuseStrategy.retrieve(curr.value))).route;\n        setFutureSnapshotsOfActivatedRoutes(curr, tree);\n        return tree;\n    }\n    else {\n        var /** @type {?} */ value = createActivatedRoute(curr.value);\n        var /** @type {?} */ children = curr.children.map(function (c) { return createNode(routeReuseStrategy, c); });\n        return new TreeNode(value, children);\n    }\n}\n/**\n * @param {?} curr\n * @param {?} result\n * @return {?}\n */\nfunction setFutureSnapshotsOfActivatedRoutes(curr, result) {\n    if (curr.value.routeConfig !== result.value.routeConfig) {\n        throw new Error('Cannot reattach ActivatedRouteSnapshot created from a different route');\n    }\n    if (curr.children.length !== result.children.length) {\n        throw new Error('Cannot reattach ActivatedRouteSnapshot with a different number of children');\n    }\n    result.value._futureSnapshot = curr.value;\n    for (var /** @type {?} */ i = 0; i < curr.children.length; ++i) {\n        setFutureSnapshotsOfActivatedRoutes(curr.children[i], result.children[i]);\n    }\n}\n/**\n * @param {?} routeReuseStrategy\n * @param {?} curr\n * @param {?} prevState\n * @return {?}\n */\nfunction createOrReuseChildren(routeReuseStrategy, curr, prevState) {\n    return curr.children.map(function (child) {\n        for (var _i = 0, _a = prevState.children; _i < _a.length; _i++) {\n            var p = _a[_i];\n            if (routeReuseStrategy.shouldReuseRoute(p.value.snapshot, child.value)) {\n                return createNode(routeReuseStrategy, child, p);\n            }\n        }\n        return createNode(routeReuseStrategy, child);\n    });\n}\n/**\n * @param {?} c\n * @return {?}\n */\nfunction createActivatedRoute(c) {\n    return new ActivatedRoute(new rxjs_BehaviorSubject.BehaviorSubject(c.url), new rxjs_BehaviorSubject.BehaviorSubject(c.params), new rxjs_BehaviorSubject.BehaviorSubject(c.queryParams), new rxjs_BehaviorSubject.BehaviorSubject(c.fragment), new rxjs_BehaviorSubject.BehaviorSubject(c.data), c.outlet, c.component, c);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} route\n * @param {?} urlTree\n * @param {?} commands\n * @param {?} queryParams\n * @param {?} fragment\n * @return {?}\n */\nfunction createUrlTree(route, urlTree, commands, queryParams, fragment) {\n    if (commands.length === 0) {\n        return tree(urlTree.root, urlTree.root, urlTree, queryParams, fragment);\n    }\n    var /** @type {?} */ nav = computeNavigation(commands);\n    if (nav.toRoot()) {\n        return tree(urlTree.root, new UrlSegmentGroup([], {}), urlTree, queryParams, fragment);\n    }\n    var /** @type {?} */ startingPosition = findStartingPosition(nav, urlTree, route);\n    var /** @type {?} */ segmentGroup = startingPosition.processChildren ?\n        updateSegmentGroupChildren(startingPosition.segmentGroup, startingPosition.index, nav.commands) :\n        updateSegmentGroup(startingPosition.segmentGroup, startingPosition.index, nav.commands);\n    return tree(startingPosition.segmentGroup, segmentGroup, urlTree, queryParams, fragment);\n}\n/**\n * @param {?} command\n * @return {?}\n */\nfunction isMatrixParams(command) {\n    return typeof command === 'object' && command != null && !command.outlets && !command.segmentPath;\n}\n/**\n * @param {?} oldSegmentGroup\n * @param {?} newSegmentGroup\n * @param {?} urlTree\n * @param {?} queryParams\n * @param {?} fragment\n * @return {?}\n */\nfunction tree(oldSegmentGroup, newSegmentGroup, urlTree, queryParams, fragment) {\n    var /** @type {?} */ qp = convertToParams(queryParams);\n    if (urlTree.root === oldSegmentGroup) {\n        return new UrlTree(newSegmentGroup, qp, fragment);\n    }\n    return new UrlTree(replaceSegment(urlTree.root, oldSegmentGroup, newSegmentGroup), qp, fragment);\n}\n/**\n * @param {?} current\n * @param {?} oldSegment\n * @param {?} newSegment\n * @return {?}\n */\nfunction replaceSegment(current, oldSegment, newSegment) {\n    var /** @type {?} */ children = {};\n    forEach(current.children, function (c, outletName) {\n        if (c === oldSegment) {\n            children[outletName] = newSegment;\n        }\n        else {\n            children[outletName] = replaceSegment(c, oldSegment, newSegment);\n        }\n    });\n    return new UrlSegmentGroup(current.segments, children);\n}\nvar Navigation = (function () {\n    function Navigation(isAbsolute, numberOfDoubleDots, commands) {\n        this.isAbsolute = isAbsolute;\n        this.numberOfDoubleDots = numberOfDoubleDots;\n        this.commands = commands;\n        if (isAbsolute && commands.length > 0 && isMatrixParams(commands[0])) {\n            throw new Error('Root segment cannot have matrix parameters');\n        }\n        var /** @type {?} */ cmdWithOutlet = commands.find(function (c) { return typeof c === 'object' && c != null && c.outlets; });\n        if (cmdWithOutlet && cmdWithOutlet !== last$1(commands)) {\n            throw new Error('{outlets:{}} has to be the last command');\n        }\n    }\n    /**\n     * @return {?}\n     */\n    Navigation.prototype.toRoot = /**\n     * @return {?}\n     */\n    function () {\n        return this.isAbsolute && this.commands.length === 1 && this.commands[0] == '/';\n    };\n    return Navigation;\n}());\n/**\n * Transforms commands to a normalized `Navigation`\n * @param {?} commands\n * @return {?}\n */\nfunction computeNavigation(commands) {\n    if ((typeof commands[0] === 'string') && commands.length === 1 && commands[0] === '/') {\n        return new Navigation(true, 0, commands);\n    }\n    var /** @type {?} */ numberOfDoubleDots = 0;\n    var /** @type {?} */ isAbsolute = false;\n    var /** @type {?} */ res = commands.reduce(function (res, cmd, cmdIdx) {\n        if (typeof cmd === 'object' && cmd != null) {\n            if (cmd.outlets) {\n                var /** @type {?} */ outlets_1 = {};\n                forEach(cmd.outlets, function (commands, name) {\n                    outlets_1[name] = typeof commands === 'string' ? commands.split('/') : commands;\n                });\n                return res.concat([{ outlets: outlets_1 }]);\n            }\n            if (cmd.segmentPath) {\n                return res.concat([cmd.segmentPath]);\n            }\n        }\n        if (!(typeof cmd === 'string')) {\n            return res.concat([cmd]);\n        }\n        if (cmdIdx === 0) {\n            cmd.split('/').forEach(function (urlPart, partIndex) {\n                if (partIndex == 0 && urlPart === '.') {\n                    // skip './a'\n                }\n                else if (partIndex == 0 && urlPart === '') {\n                    //  '/a'\n                    isAbsolute = true;\n                }\n                else if (urlPart === '..') {\n                    //  '../a'\n                    numberOfDoubleDots++;\n                }\n                else if (urlPart != '') {\n                    res.push(urlPart);\n                }\n            });\n            return res;\n        }\n        return res.concat([cmd]);\n    }, []);\n    return new Navigation(isAbsolute, numberOfDoubleDots, res);\n}\nvar Position = (function () {\n    function Position(segmentGroup, processChildren, index) {\n        this.segmentGroup = segmentGroup;\n        this.processChildren = processChildren;\n        this.index = index;\n    }\n    return Position;\n}());\n/**\n * @param {?} nav\n * @param {?} tree\n * @param {?} route\n * @return {?}\n */\nfunction findStartingPosition(nav, tree, route) {\n    if (nav.isAbsolute) {\n        return new Position(tree.root, true, 0);\n    }\n    if (route.snapshot._lastPathIndex === -1) {\n        return new Position(route.snapshot._urlSegment, true, 0);\n    }\n    var /** @type {?} */ modifier = isMatrixParams(nav.commands[0]) ? 0 : 1;\n    var /** @type {?} */ index = route.snapshot._lastPathIndex + modifier;\n    return createPositionApplyingDoubleDots(route.snapshot._urlSegment, index, nav.numberOfDoubleDots);\n}\n/**\n * @param {?} group\n * @param {?} index\n * @param {?} numberOfDoubleDots\n * @return {?}\n */\nfunction createPositionApplyingDoubleDots(group, index, numberOfDoubleDots) {\n    var /** @type {?} */ g = group;\n    var /** @type {?} */ ci = index;\n    var /** @type {?} */ dd = numberOfDoubleDots;\n    while (dd > ci) {\n        dd -= ci;\n        g = /** @type {?} */ ((g.parent));\n        if (!g) {\n            throw new Error('Invalid number of \\'../\\'');\n        }\n        ci = g.segments.length;\n    }\n    return new Position(g, false, ci - dd);\n}\n/**\n * @param {?} command\n * @return {?}\n */\nfunction getPath(command) {\n    if (command && command.outlets) {\n        return command.outlets[PRIMARY_OUTLET];\n    }\n    return \"\" + command;\n}\n/**\n * @param {?} commands\n * @return {?}\n */\nfunction getOutlets(commands) {\n    if (!(typeof commands[0] === 'object'))\n        return _a = {}, _a[PRIMARY_OUTLET] = commands, _a;\n    if (commands[0].outlets === undefined)\n        return _b = {}, _b[PRIMARY_OUTLET] = commands, _b;\n    return commands[0].outlets;\n    var _a, _b;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction updateSegmentGroup(segmentGroup, startIndex, commands) {\n    if (!segmentGroup) {\n        segmentGroup = new UrlSegmentGroup([], {});\n    }\n    if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n        return updateSegmentGroupChildren(segmentGroup, startIndex, commands);\n    }\n    var /** @type {?} */ m = prefixedWith(segmentGroup, startIndex, commands);\n    var /** @type {?} */ slicedCommands = commands.slice(m.commandIndex);\n    if (m.match && m.pathIndex < segmentGroup.segments.length) {\n        var /** @type {?} */ g = new UrlSegmentGroup(segmentGroup.segments.slice(0, m.pathIndex), {});\n        g.children[PRIMARY_OUTLET] =\n            new UrlSegmentGroup(segmentGroup.segments.slice(m.pathIndex), segmentGroup.children);\n        return updateSegmentGroupChildren(g, 0, slicedCommands);\n    }\n    else if (m.match && slicedCommands.length === 0) {\n        return new UrlSegmentGroup(segmentGroup.segments, {});\n    }\n    else if (m.match && !segmentGroup.hasChildren()) {\n        return createNewSegmentGroup(segmentGroup, startIndex, commands);\n    }\n    else if (m.match) {\n        return updateSegmentGroupChildren(segmentGroup, 0, slicedCommands);\n    }\n    else {\n        return createNewSegmentGroup(segmentGroup, startIndex, commands);\n    }\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction updateSegmentGroupChildren(segmentGroup, startIndex, commands) {\n    if (commands.length === 0) {\n        return new UrlSegmentGroup(segmentGroup.segments, {});\n    }\n    else {\n        var /** @type {?} */ outlets_2 = getOutlets(commands);\n        var /** @type {?} */ children_1 = {};\n        forEach(outlets_2, function (commands, outlet) {\n            if (commands !== null) {\n                children_1[outlet] = updateSegmentGroup(segmentGroup.children[outlet], startIndex, commands);\n            }\n        });\n        forEach(segmentGroup.children, function (child, childOutlet) {\n            if (outlets_2[childOutlet] === undefined) {\n                children_1[childOutlet] = child;\n            }\n        });\n        return new UrlSegmentGroup(segmentGroup.segments, children_1);\n    }\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction prefixedWith(segmentGroup, startIndex, commands) {\n    var /** @type {?} */ currentCommandIndex = 0;\n    var /** @type {?} */ currentPathIndex = startIndex;\n    var /** @type {?} */ noMatch = { match: false, pathIndex: 0, commandIndex: 0 };\n    while (currentPathIndex < segmentGroup.segments.length) {\n        if (currentCommandIndex >= commands.length)\n            return noMatch;\n        var /** @type {?} */ path = segmentGroup.segments[currentPathIndex];\n        var /** @type {?} */ curr = getPath(commands[currentCommandIndex]);\n        var /** @type {?} */ next = currentCommandIndex < commands.length - 1 ? commands[currentCommandIndex + 1] : null;\n        if (currentPathIndex > 0 && curr === undefined)\n            break;\n        if (curr && next && (typeof next === 'object') && next.outlets === undefined) {\n            if (!compare(curr, next, path))\n                return noMatch;\n            currentCommandIndex += 2;\n        }\n        else {\n            if (!compare(curr, {}, path))\n                return noMatch;\n            currentCommandIndex++;\n        }\n        currentPathIndex++;\n    }\n    return { match: true, pathIndex: currentPathIndex, commandIndex: currentCommandIndex };\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction createNewSegmentGroup(segmentGroup, startIndex, commands) {\n    var /** @type {?} */ paths = segmentGroup.segments.slice(0, startIndex);\n    var /** @type {?} */ i = 0;\n    while (i < commands.length) {\n        if (typeof commands[i] === 'object' && commands[i].outlets !== undefined) {\n            var /** @type {?} */ children = createNewSegmentChildren(commands[i].outlets);\n            return new UrlSegmentGroup(paths, children);\n        }\n        // if we start with an object literal, we need to reuse the path part from the segment\n        if (i === 0 && isMatrixParams(commands[0])) {\n            var /** @type {?} */ p = segmentGroup.segments[startIndex];\n            paths.push(new UrlSegment(p.path, commands[0]));\n            i++;\n            continue;\n        }\n        var /** @type {?} */ curr = getPath(commands[i]);\n        var /** @type {?} */ next = (i < commands.length - 1) ? commands[i + 1] : null;\n        if (curr && next && isMatrixParams(next)) {\n            paths.push(new UrlSegment(curr, convertToParams(next)));\n            i += 2;\n        }\n        else {\n            paths.push(new UrlSegment(curr, {}));\n            i++;\n        }\n    }\n    return new UrlSegmentGroup(paths, {});\n}\n/**\n * @param {?} outlets\n * @return {?}\n */\nfunction createNewSegmentChildren(outlets) {\n    var /** @type {?} */ children = {};\n    forEach(outlets, function (commands, outlet) {\n        if (commands !== null) {\n            children[outlet] = createNewSegmentGroup(new UrlSegmentGroup([], {}), 0, commands);\n        }\n    });\n    return children;\n}\n/**\n * @param {?} path\n * @param {?} params\n * @param {?} segment\n * @return {?}\n */\nfunction compare(path, params, segment) {\n    return path == segment.path && equalsParams(params, segment.parameters);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar CanActivate = (function () {\n    function CanActivate(path) {\n        this.path = path;\n    }\n    Object.defineProperty(CanActivate.prototype, \"route\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.path[this.path.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    return CanActivate;\n}());\nvar CanDeactivate = (function () {\n    function CanDeactivate(component, route) {\n        this.component = component;\n        this.route = route;\n    }\n    return CanDeactivate;\n}());\n/**\n * This class bundles the actions involved in preactivation of a route.\n */\nvar PreActivation = (function () {\n    function PreActivation(future, curr, moduleInjector, forwardEvent) {\n        this.future = future;\n        this.curr = curr;\n        this.moduleInjector = moduleInjector;\n        this.forwardEvent = forwardEvent;\n        this.canActivateChecks = [];\n        this.canDeactivateChecks = [];\n    }\n    /**\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    PreActivation.prototype.initalize = /**\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    function (parentContexts) {\n        var /** @type {?} */ futureRoot = this.future._root;\n        var /** @type {?} */ currRoot = this.curr ? this.curr._root : null;\n        this.setupChildRouteGuards(futureRoot, currRoot, parentContexts, [futureRoot.value]);\n    };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.checkGuards = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!this.isDeactivating() && !this.isActivating()) {\n            return rxjs_observable_of.of(true);\n        }\n        var /** @type {?} */ canDeactivate$ = this.runCanDeactivateChecks();\n        return rxjs_operator_mergeMap.mergeMap.call(canDeactivate$, function (canDeactivate) { return canDeactivate ? _this.runCanActivateChecks() : rxjs_observable_of.of(false); });\n    };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.resolveData = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!this.isActivating())\n            return rxjs_observable_of.of(null);\n        var /** @type {?} */ checks$ = rxjs_observable_from.from(this.canActivateChecks);\n        var /** @type {?} */ runningChecks$ = rxjs_operator_concatMap.concatMap.call(checks$, function (check) { return _this.runResolve(check.route); });\n        return rxjs_operator_reduce.reduce.call(runningChecks$, function (_, __) { return _; });\n    };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.isDeactivating = /**\n     * @return {?}\n     */\n    function () { return this.canDeactivateChecks.length !== 0; };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.isActivating = /**\n     * @return {?}\n     */\n    function () { return this.canActivateChecks.length !== 0; };\n    /**\n     * Iterates over child routes and calls recursive `setupRouteGuards` to get `this` instance in\n     * proper state to run `checkGuards()` method.\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} contexts\n     * @param {?} futurePath\n     * @return {?}\n     */\n    PreActivation.prototype.setupChildRouteGuards = /**\n     * Iterates over child routes and calls recursive `setupRouteGuards` to get `this` instance in\n     * proper state to run `checkGuards()` method.\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} contexts\n     * @param {?} futurePath\n     * @return {?}\n     */\n    function (futureNode, currNode, contexts, futurePath) {\n        var _this = this;\n        var /** @type {?} */ prevChildren = nodeChildrenAsMap(currNode);\n        // Process the children of the future route\n        futureNode.children.forEach(function (c) {\n            _this.setupRouteGuards(c, prevChildren[c.value.outlet], contexts, futurePath.concat([c.value]));\n            delete prevChildren[c.value.outlet];\n        });\n        // Process any children left from the current route (not active for the future route)\n        forEach(prevChildren, function (v, k) {\n            return _this.deactivateRouteAndItsChildren(v, /** @type {?} */ ((contexts)).getContext(k));\n        });\n    };\n    /**\n     * Iterates over child routes and calls recursive `setupRouteGuards` to get `this` instance in\n     * proper state to run `checkGuards()` method.\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} parentContexts\n     * @param {?} futurePath\n     * @return {?}\n     */\n    PreActivation.prototype.setupRouteGuards = /**\n     * Iterates over child routes and calls recursive `setupRouteGuards` to get `this` instance in\n     * proper state to run `checkGuards()` method.\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} parentContexts\n     * @param {?} futurePath\n     * @return {?}\n     */\n    function (futureNode, currNode, parentContexts, futurePath) {\n        var /** @type {?} */ future = futureNode.value;\n        var /** @type {?} */ curr = currNode ? currNode.value : null;\n        var /** @type {?} */ context = parentContexts ? parentContexts.getContext(futureNode.value.outlet) : null;\n        // reusing the node\n        if (curr && future.routeConfig === curr.routeConfig) {\n            var /** @type {?} */ shouldRunGuardsAndResolvers = this.shouldRunGuardsAndResolvers(curr, future, /** @type {?} */ ((future.routeConfig)).runGuardsAndResolvers);\n            if (shouldRunGuardsAndResolvers) {\n                this.canActivateChecks.push(new CanActivate(futurePath));\n            }\n            else {\n                // we need to set the data\n                future.data = curr.data;\n                future._resolvedData = curr._resolvedData;\n            }\n            // If we have a component, we need to go through an outlet.\n            if (future.component) {\n                this.setupChildRouteGuards(futureNode, currNode, context ? context.children : null, futurePath);\n                // if we have a componentless route, we recurse but keep the same outlet map.\n            }\n            else {\n                this.setupChildRouteGuards(futureNode, currNode, parentContexts, futurePath);\n            }\n            if (shouldRunGuardsAndResolvers) {\n                var /** @type {?} */ outlet = /** @type {?} */ ((/** @type {?} */ ((context)).outlet));\n                this.canDeactivateChecks.push(new CanDeactivate(outlet.component, curr));\n            }\n        }\n        else {\n            if (curr) {\n                this.deactivateRouteAndItsChildren(currNode, context);\n            }\n            this.canActivateChecks.push(new CanActivate(futurePath));\n            // If we have a component, we need to go through an outlet.\n            if (future.component) {\n                this.setupChildRouteGuards(futureNode, null, context ? context.children : null, futurePath);\n                // if we have a componentless route, we recurse but keep the same outlet map.\n            }\n            else {\n                this.setupChildRouteGuards(futureNode, null, parentContexts, futurePath);\n            }\n        }\n    };\n    /**\n     * @param {?} curr\n     * @param {?} future\n     * @param {?} mode\n     * @return {?}\n     */\n    PreActivation.prototype.shouldRunGuardsAndResolvers = /**\n     * @param {?} curr\n     * @param {?} future\n     * @param {?} mode\n     * @return {?}\n     */\n    function (curr, future, mode) {\n        switch (mode) {\n            case 'always':\n                return true;\n            case 'paramsOrQueryParamsChange':\n                return !equalParamsAndUrlSegments(curr, future) ||\n                    !equalsParams(curr.queryParams, future.queryParams);\n            case 'paramsChange':\n            default:\n                return !equalParamsAndUrlSegments(curr, future);\n        }\n    };\n    /**\n     * @param {?} route\n     * @param {?} context\n     * @return {?}\n     */\n    PreActivation.prototype.deactivateRouteAndItsChildren = /**\n     * @param {?} route\n     * @param {?} context\n     * @return {?}\n     */\n    function (route, context) {\n        var _this = this;\n        var /** @type {?} */ children = nodeChildrenAsMap(route);\n        var /** @type {?} */ r = route.value;\n        forEach(children, function (node, childName) {\n            if (!r.component) {\n                _this.deactivateRouteAndItsChildren(node, context);\n            }\n            else if (context) {\n                _this.deactivateRouteAndItsChildren(node, context.children.getContext(childName));\n            }\n            else {\n                _this.deactivateRouteAndItsChildren(node, null);\n            }\n        });\n        if (!r.component) {\n            this.canDeactivateChecks.push(new CanDeactivate(null, r));\n        }\n        else if (context && context.outlet && context.outlet.isActivated) {\n            this.canDeactivateChecks.push(new CanDeactivate(context.outlet.component, r));\n        }\n        else {\n            this.canDeactivateChecks.push(new CanDeactivate(null, r));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.runCanDeactivateChecks = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ checks$ = rxjs_observable_from.from(this.canDeactivateChecks);\n        var /** @type {?} */ runningChecks$ = rxjs_operator_mergeMap.mergeMap.call(checks$, function (check) { return _this.runCanDeactivate(check.component, check.route); });\n        return rxjs_operator_every.every.call(runningChecks$, function (result) { return result === true; });\n    };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.runCanActivateChecks = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ checks$ = rxjs_observable_from.from(this.canActivateChecks);\n        var /** @type {?} */ runningChecks$ = rxjs_operator_concatMap.concatMap.call(checks$, function (check) {\n            return andObservables(rxjs_observable_from.from([\n                _this.fireChildActivationStart(check.route.parent), _this.fireActivationStart(check.route),\n                _this.runCanActivateChild(check.path), _this.runCanActivate(check.route)\n            ]));\n        });\n        return rxjs_operator_every.every.call(runningChecks$, function (result) { return result === true; });\n        // this.fireChildActivationStart(check.path),\n    };\n    /**\n     * This should fire off `ActivationStart` events for each route being activated at this\n     * level.\n     * In other words, if you're activating `a` and `b` below, `path` will contain the\n     * `ActivatedRouteSnapshot`s for both and we will fire `ActivationStart` for both. Always\n     * return\n     * `true` so checks continue to run.\n     * @param {?} snapshot\n     * @return {?}\n     */\n    PreActivation.prototype.fireActivationStart = /**\n     * This should fire off `ActivationStart` events for each route being activated at this\n     * level.\n     * In other words, if you're activating `a` and `b` below, `path` will contain the\n     * `ActivatedRouteSnapshot`s for both and we will fire `ActivationStart` for both. Always\n     * return\n     * `true` so checks continue to run.\n     * @param {?} snapshot\n     * @return {?}\n     */\n    function (snapshot) {\n        if (snapshot !== null && this.forwardEvent) {\n            this.forwardEvent(new ActivationStart(snapshot));\n        }\n        return rxjs_observable_of.of(true);\n    };\n    /**\n     * This should fire off `ChildActivationStart` events for each route being activated at this\n     * level.\n     * In other words, if you're activating `a` and `b` below, `path` will contain the\n     * `ActivatedRouteSnapshot`s for both and we will fire `ChildActivationStart` for both. Always\n     * return\n     * `true` so checks continue to run.\n     * @param {?} snapshot\n     * @return {?}\n     */\n    PreActivation.prototype.fireChildActivationStart = /**\n     * This should fire off `ChildActivationStart` events for each route being activated at this\n     * level.\n     * In other words, if you're activating `a` and `b` below, `path` will contain the\n     * `ActivatedRouteSnapshot`s for both and we will fire `ChildActivationStart` for both. Always\n     * return\n     * `true` so checks continue to run.\n     * @param {?} snapshot\n     * @return {?}\n     */\n    function (snapshot) {\n        if (snapshot !== null && this.forwardEvent) {\n            this.forwardEvent(new ChildActivationStart(snapshot));\n        }\n        return rxjs_observable_of.of(true);\n    };\n    /**\n     * @param {?} future\n     * @return {?}\n     */\n    PreActivation.prototype.runCanActivate = /**\n     * @param {?} future\n     * @return {?}\n     */\n    function (future) {\n        var _this = this;\n        var /** @type {?} */ canActivate = future.routeConfig ? future.routeConfig.canActivate : null;\n        if (!canActivate || canActivate.length === 0)\n            return rxjs_observable_of.of(true);\n        var /** @type {?} */ obs = rxjs_operator_map.map.call(rxjs_observable_from.from(canActivate), function (c) {\n            var /** @type {?} */ guard = _this.getToken(c, future);\n            var /** @type {?} */ observable;\n            if (guard.canActivate) {\n                observable = wrapIntoObservable(guard.canActivate(future, _this.future));\n            }\n            else {\n                observable = wrapIntoObservable(guard(future, _this.future));\n            }\n            return rxjs_operator_first.first.call(observable);\n        });\n        return andObservables(obs);\n    };\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    PreActivation.prototype.runCanActivateChild = /**\n     * @param {?} path\n     * @return {?}\n     */\n    function (path) {\n        var _this = this;\n        var /** @type {?} */ future = path[path.length - 1];\n        var /** @type {?} */ canActivateChildGuards = path.slice(0, path.length - 1)\n            .reverse()\n            .map(function (p) { return _this.extractCanActivateChild(p); })\n            .filter(function (_) { return _ !== null; });\n        return andObservables(rxjs_operator_map.map.call(rxjs_observable_from.from(canActivateChildGuards), function (d) {\n            var /** @type {?} */ obs = rxjs_operator_map.map.call(rxjs_observable_from.from(d.guards), function (c) {\n                var /** @type {?} */ guard = _this.getToken(c, d.node);\n                var /** @type {?} */ observable;\n                if (guard.canActivateChild) {\n                    observable = wrapIntoObservable(guard.canActivateChild(future, _this.future));\n                }\n                else {\n                    observable = wrapIntoObservable(guard(future, _this.future));\n                }\n                return rxjs_operator_first.first.call(observable);\n            });\n            return andObservables(obs);\n        }));\n    };\n    /**\n     * @param {?} p\n     * @return {?}\n     */\n    PreActivation.prototype.extractCanActivateChild = /**\n     * @param {?} p\n     * @return {?}\n     */\n    function (p) {\n        var /** @type {?} */ canActivateChild = p.routeConfig ? p.routeConfig.canActivateChild : null;\n        if (!canActivateChild || canActivateChild.length === 0)\n            return null;\n        return { node: p, guards: canActivateChild };\n    };\n    /**\n     * @param {?} component\n     * @param {?} curr\n     * @return {?}\n     */\n    PreActivation.prototype.runCanDeactivate = /**\n     * @param {?} component\n     * @param {?} curr\n     * @return {?}\n     */\n    function (component, curr) {\n        var _this = this;\n        var /** @type {?} */ canDeactivate = curr && curr.routeConfig ? curr.routeConfig.canDeactivate : null;\n        if (!canDeactivate || canDeactivate.length === 0)\n            return rxjs_observable_of.of(true);\n        var /** @type {?} */ canDeactivate$ = rxjs_operator_mergeMap.mergeMap.call(rxjs_observable_from.from(canDeactivate), function (c) {\n            var /** @type {?} */ guard = _this.getToken(c, curr);\n            var /** @type {?} */ observable;\n            if (guard.canDeactivate) {\n                observable =\n                    wrapIntoObservable(guard.canDeactivate(component, curr, _this.curr, _this.future));\n            }\n            else {\n                observable = wrapIntoObservable(guard(component, curr, _this.curr, _this.future));\n            }\n            return rxjs_operator_first.first.call(observable);\n        });\n        return rxjs_operator_every.every.call(canDeactivate$, function (result) { return result === true; });\n    };\n    /**\n     * @param {?} future\n     * @return {?}\n     */\n    PreActivation.prototype.runResolve = /**\n     * @param {?} future\n     * @return {?}\n     */\n    function (future) {\n        var /** @type {?} */ resolve = future._resolve;\n        return rxjs_operator_map.map.call(this.resolveNode(resolve, future), function (resolvedData) {\n            future._resolvedData = resolvedData;\n            future.data = __assign({}, future.data, inheritedParamsDataResolve(future).resolve);\n            return null;\n        });\n    };\n    /**\n     * @param {?} resolve\n     * @param {?} future\n     * @return {?}\n     */\n    PreActivation.prototype.resolveNode = /**\n     * @param {?} resolve\n     * @param {?} future\n     * @return {?}\n     */\n    function (resolve, future) {\n        var _this = this;\n        var /** @type {?} */ keys = Object.keys(resolve);\n        if (keys.length === 0) {\n            return rxjs_observable_of.of({});\n        }\n        if (keys.length === 1) {\n            var /** @type {?} */ key_1 = keys[0];\n            return rxjs_operator_map.map.call(this.getResolver(resolve[key_1], future), function (value) {\n                return _a = {}, _a[key_1] = value, _a;\n                var _a;\n            });\n        }\n        var /** @type {?} */ data = {};\n        var /** @type {?} */ runningResolvers$ = rxjs_operator_mergeMap.mergeMap.call(rxjs_observable_from.from(keys), function (key) {\n            return rxjs_operator_map.map.call(_this.getResolver(resolve[key], future), function (value) {\n                data[key] = value;\n                return value;\n            });\n        });\n        return rxjs_operator_map.map.call(rxjs_operator_last.last.call(runningResolvers$), function () { return data; });\n    };\n    /**\n     * @param {?} injectionToken\n     * @param {?} future\n     * @return {?}\n     */\n    PreActivation.prototype.getResolver = /**\n     * @param {?} injectionToken\n     * @param {?} future\n     * @return {?}\n     */\n    function (injectionToken, future) {\n        var /** @type {?} */ resolver = this.getToken(injectionToken, future);\n        return resolver.resolve ? wrapIntoObservable(resolver.resolve(future, this.future)) :\n            wrapIntoObservable(resolver(future, this.future));\n    };\n    /**\n     * @param {?} token\n     * @param {?} snapshot\n     * @return {?}\n     */\n    PreActivation.prototype.getToken = /**\n     * @param {?} token\n     * @param {?} snapshot\n     * @return {?}\n     */\n    function (token, snapshot) {\n        var /** @type {?} */ config = closestLoadedConfig(snapshot);\n        var /** @type {?} */ injector = config ? config.module.injector : this.moduleInjector;\n        return injector.get(token);\n    };\n    return PreActivation;\n}());\n/**\n * @param {?} snapshot\n * @return {?}\n */\nfunction closestLoadedConfig(snapshot) {\n    if (!snapshot)\n        return null;\n    for (var /** @type {?} */ s = snapshot.parent; s; s = s.parent) {\n        var /** @type {?} */ route = s.routeConfig;\n        if (route && route._loadedConfig)\n            return route._loadedConfig;\n    }\n    return null;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NoMatch$1 = (function () {\n    function NoMatch() {\n    }\n    return NoMatch;\n}());\n/**\n * @param {?} rootComponentType\n * @param {?} config\n * @param {?} urlTree\n * @param {?} url\n * @return {?}\n */\nfunction recognize(rootComponentType, config, urlTree, url) {\n    return new Recognizer(rootComponentType, config, urlTree, url).recognize();\n}\nvar Recognizer = (function () {\n    function Recognizer(rootComponentType, config, urlTree, url) {\n        this.rootComponentType = rootComponentType;\n        this.config = config;\n        this.urlTree = urlTree;\n        this.url = url;\n    }\n    /**\n     * @return {?}\n     */\n    Recognizer.prototype.recognize = /**\n     * @return {?}\n     */\n    function () {\n        try {\n            var /** @type {?} */ rootSegmentGroup = split$1(this.urlTree.root, [], [], this.config).segmentGroup;\n            var /** @type {?} */ children = this.processSegmentGroup(this.config, rootSegmentGroup, PRIMARY_OUTLET);\n            var /** @type {?} */ root = new ActivatedRouteSnapshot([], Object.freeze({}), Object.freeze(this.urlTree.queryParams), /** @type {?} */ ((this.urlTree.fragment)), {}, PRIMARY_OUTLET, this.rootComponentType, null, this.urlTree.root, -1, {});\n            var /** @type {?} */ rootNode = new TreeNode(root, children);\n            var /** @type {?} */ routeState = new RouterStateSnapshot(this.url, rootNode);\n            this.inheritParamsAndData(routeState._root);\n            return rxjs_observable_of.of(routeState);\n        }\n        catch (/** @type {?} */ e) {\n            return new rxjs_Observable.Observable(function (obs) { return obs.error(e); });\n        }\n    };\n    /**\n     * @param {?} routeNode\n     * @return {?}\n     */\n    Recognizer.prototype.inheritParamsAndData = /**\n     * @param {?} routeNode\n     * @return {?}\n     */\n    function (routeNode) {\n        var _this = this;\n        var /** @type {?} */ route = routeNode.value;\n        var /** @type {?} */ i = inheritedParamsDataResolve(route);\n        route.params = Object.freeze(i.params);\n        route.data = Object.freeze(i.data);\n        routeNode.children.forEach(function (n) { return _this.inheritParamsAndData(n); });\n    };\n    /**\n     * @param {?} config\n     * @param {?} segmentGroup\n     * @param {?} outlet\n     * @return {?}\n     */\n    Recognizer.prototype.processSegmentGroup = /**\n     * @param {?} config\n     * @param {?} segmentGroup\n     * @param {?} outlet\n     * @return {?}\n     */\n    function (config, segmentGroup, outlet) {\n        if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n            return this.processChildren(config, segmentGroup);\n        }\n        return this.processSegment(config, segmentGroup, segmentGroup.segments, outlet);\n    };\n    /**\n     * @param {?} config\n     * @param {?} segmentGroup\n     * @return {?}\n     */\n    Recognizer.prototype.processChildren = /**\n     * @param {?} config\n     * @param {?} segmentGroup\n     * @return {?}\n     */\n    function (config, segmentGroup) {\n        var _this = this;\n        var /** @type {?} */ children = mapChildrenIntoArray(segmentGroup, function (child, childOutlet) { return _this.processSegmentGroup(config, child, childOutlet); });\n        checkOutletNameUniqueness(children);\n        sortActivatedRouteSnapshots(children);\n        return children;\n    };\n    /**\n     * @param {?} config\n     * @param {?} segmentGroup\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    Recognizer.prototype.processSegment = /**\n     * @param {?} config\n     * @param {?} segmentGroup\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    function (config, segmentGroup, segments, outlet) {\n        for (var _i = 0, config_1 = config; _i < config_1.length; _i++) {\n            var r = config_1[_i];\n            try {\n                return this.processSegmentAgainstRoute(r, segmentGroup, segments, outlet);\n            }\n            catch (/** @type {?} */ e) {\n                if (!(e instanceof NoMatch$1))\n                    throw e;\n            }\n        }\n        if (this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n            return [];\n        }\n        throw new NoMatch$1();\n    };\n    /**\n     * @param {?} segmentGroup\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    Recognizer.prototype.noLeftoversInUrl = /**\n     * @param {?} segmentGroup\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    function (segmentGroup, segments, outlet) {\n        return segments.length === 0 && !segmentGroup.children[outlet];\n    };\n    /**\n     * @param {?} route\n     * @param {?} rawSegment\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    Recognizer.prototype.processSegmentAgainstRoute = /**\n     * @param {?} route\n     * @param {?} rawSegment\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    function (route, rawSegment, segments, outlet) {\n        if (route.redirectTo)\n            throw new NoMatch$1();\n        if ((route.outlet || PRIMARY_OUTLET) !== outlet)\n            throw new NoMatch$1();\n        if (route.path === '**') {\n            var /** @type {?} */ params = segments.length > 0 ? /** @type {?} */ ((last$1(segments))).parameters : {};\n            var /** @type {?} */ snapshot_1 = new ActivatedRouteSnapshot(segments, params, Object.freeze(this.urlTree.queryParams), /** @type {?} */ ((this.urlTree.fragment)), getData(route), outlet, /** @type {?} */ ((route.component)), route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + segments.length, getResolve(route));\n            return [new TreeNode(snapshot_1, [])];\n        }\n        var _a = match$1(rawSegment, route, segments), consumedSegments = _a.consumedSegments, parameters = _a.parameters, lastChild = _a.lastChild;\n        var /** @type {?} */ rawSlicedSegments = segments.slice(lastChild);\n        var /** @type {?} */ childConfig = getChildConfig(route);\n        var _b = split$1(rawSegment, consumedSegments, rawSlicedSegments, childConfig), segmentGroup = _b.segmentGroup, slicedSegments = _b.slicedSegments;\n        var /** @type {?} */ snapshot = new ActivatedRouteSnapshot(consumedSegments, parameters, Object.freeze(this.urlTree.queryParams), /** @type {?} */ ((this.urlTree.fragment)), getData(route), outlet, /** @type {?} */ ((route.component)), route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + consumedSegments.length, getResolve(route));\n        if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n            var /** @type {?} */ children_1 = this.processChildren(childConfig, segmentGroup);\n            return [new TreeNode(snapshot, children_1)];\n        }\n        if (childConfig.length === 0 && slicedSegments.length === 0) {\n            return [new TreeNode(snapshot, [])];\n        }\n        var /** @type {?} */ children = this.processSegment(childConfig, segmentGroup, slicedSegments, PRIMARY_OUTLET);\n        return [new TreeNode(snapshot, children)];\n    };\n    return Recognizer;\n}());\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction sortActivatedRouteSnapshots(nodes) {\n    nodes.sort(function (a, b) {\n        if (a.value.outlet === PRIMARY_OUTLET)\n            return -1;\n        if (b.value.outlet === PRIMARY_OUTLET)\n            return 1;\n        return a.value.outlet.localeCompare(b.value.outlet);\n    });\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getChildConfig(route) {\n    if (route.children) {\n        return route.children;\n    }\n    if (route.loadChildren) {\n        return /** @type {?} */ ((route._loadedConfig)).routes;\n    }\n    return [];\n}\n/**\n * @param {?} segmentGroup\n * @param {?} route\n * @param {?} segments\n * @return {?}\n */\nfunction match$1(segmentGroup, route, segments) {\n    if (route.path === '') {\n        if (route.pathMatch === 'full' && (segmentGroup.hasChildren() || segments.length > 0)) {\n            throw new NoMatch$1();\n        }\n        return { consumedSegments: [], lastChild: 0, parameters: {} };\n    }\n    var /** @type {?} */ matcher = route.matcher || defaultUrlMatcher;\n    var /** @type {?} */ res = matcher(segments, segmentGroup, route);\n    if (!res)\n        throw new NoMatch$1();\n    var /** @type {?} */ posParams = {};\n    forEach(/** @type {?} */ ((res.posParams)), function (v, k) { posParams[k] = v.path; });\n    var /** @type {?} */ parameters = res.consumed.length > 0 ? __assign({}, posParams, res.consumed[res.consumed.length - 1].parameters) :\n        posParams;\n    return { consumedSegments: res.consumed, lastChild: res.consumed.length, parameters: parameters };\n}\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction checkOutletNameUniqueness(nodes) {\n    var /** @type {?} */ names = {};\n    nodes.forEach(function (n) {\n        var /** @type {?} */ routeWithSameOutletName = names[n.value.outlet];\n        if (routeWithSameOutletName) {\n            var /** @type {?} */ p = routeWithSameOutletName.url.map(function (s) { return s.toString(); }).join('/');\n            var /** @type {?} */ c = n.value.url.map(function (s) { return s.toString(); }).join('/');\n            throw new Error(\"Two segments cannot have the same outlet name: '\" + p + \"' and '\" + c + \"'.\");\n        }\n        names[n.value.outlet] = n.value;\n    });\n}\n/**\n * @param {?} segmentGroup\n * @return {?}\n */\nfunction getSourceSegmentGroup(segmentGroup) {\n    var /** @type {?} */ s = segmentGroup;\n    while (s._sourceSegment) {\n        s = s._sourceSegment;\n    }\n    return s;\n}\n/**\n * @param {?} segmentGroup\n * @return {?}\n */\nfunction getPathIndexShift(segmentGroup) {\n    var /** @type {?} */ s = segmentGroup;\n    var /** @type {?} */ res = (s._segmentIndexShift ? s._segmentIndexShift : 0);\n    while (s._sourceSegment) {\n        s = s._sourceSegment;\n        res += (s._segmentIndexShift ? s._segmentIndexShift : 0);\n    }\n    return res - 1;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} consumedSegments\n * @param {?} slicedSegments\n * @param {?} config\n * @return {?}\n */\nfunction split$1(segmentGroup, consumedSegments, slicedSegments, config) {\n    if (slicedSegments.length > 0 &&\n        containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n        var /** @type {?} */ s_1 = new UrlSegmentGroup(consumedSegments, createChildrenForEmptyPaths(segmentGroup, consumedSegments, config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n        s_1._sourceSegment = segmentGroup;\n        s_1._segmentIndexShift = consumedSegments.length;\n        return { segmentGroup: s_1, slicedSegments: [] };\n    }\n    if (slicedSegments.length === 0 &&\n        containsEmptyPathMatches(segmentGroup, slicedSegments, config)) {\n        var /** @type {?} */ s_2 = new UrlSegmentGroup(segmentGroup.segments, addEmptyPathsToChildrenIfNeeded(segmentGroup, slicedSegments, config, segmentGroup.children));\n        s_2._sourceSegment = segmentGroup;\n        s_2._segmentIndexShift = consumedSegments.length;\n        return { segmentGroup: s_2, slicedSegments: slicedSegments };\n    }\n    var /** @type {?} */ s = new UrlSegmentGroup(segmentGroup.segments, segmentGroup.children);\n    s._sourceSegment = segmentGroup;\n    s._segmentIndexShift = consumedSegments.length;\n    return { segmentGroup: s, slicedSegments: slicedSegments };\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} routes\n * @param {?} children\n * @return {?}\n */\nfunction addEmptyPathsToChildrenIfNeeded(segmentGroup, slicedSegments, routes, children) {\n    var /** @type {?} */ res = {};\n    for (var _i = 0, routes_1 = routes; _i < routes_1.length; _i++) {\n        var r = routes_1[_i];\n        if (emptyPathMatch(segmentGroup, slicedSegments, r) && !children[getOutlet$1(r)]) {\n            var /** @type {?} */ s = new UrlSegmentGroup([], {});\n            s._sourceSegment = segmentGroup;\n            s._segmentIndexShift = segmentGroup.segments.length;\n            res[getOutlet$1(r)] = s;\n        }\n    }\n    return __assign({}, children, res);\n}\n/**\n * @param {?} segmentGroup\n * @param {?} consumedSegments\n * @param {?} routes\n * @param {?} primarySegment\n * @return {?}\n */\nfunction createChildrenForEmptyPaths(segmentGroup, consumedSegments, routes, primarySegment) {\n    var /** @type {?} */ res = {};\n    res[PRIMARY_OUTLET] = primarySegment;\n    primarySegment._sourceSegment = segmentGroup;\n    primarySegment._segmentIndexShift = consumedSegments.length;\n    for (var _i = 0, routes_2 = routes; _i < routes_2.length; _i++) {\n        var r = routes_2[_i];\n        if (r.path === '' && getOutlet$1(r) !== PRIMARY_OUTLET) {\n            var /** @type {?} */ s = new UrlSegmentGroup([], {});\n            s._sourceSegment = segmentGroup;\n            s._segmentIndexShift = consumedSegments.length;\n            res[getOutlet$1(r)] = s;\n        }\n    }\n    return res;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, routes) {\n    return routes.some(function (r) { return emptyPathMatch(segmentGroup, slicedSegments, r) && getOutlet$1(r) !== PRIMARY_OUTLET; });\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathMatches(segmentGroup, slicedSegments, routes) {\n    return routes.some(function (r) { return emptyPathMatch(segmentGroup, slicedSegments, r); });\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} r\n * @return {?}\n */\nfunction emptyPathMatch(segmentGroup, slicedSegments, r) {\n    if ((segmentGroup.hasChildren() || slicedSegments.length > 0) && r.pathMatch === 'full') {\n        return false;\n    }\n    return r.path === '' && r.redirectTo === undefined;\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getOutlet$1(route) {\n    return route.outlet || PRIMARY_OUTLET;\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getData(route) {\n    return route.data || {};\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getResolve(route) {\n    return route.resolve || {};\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@whatItDoes Provides a way to customize when activated routes get reused.\n *\n * \\@experimental\n * @abstract\n */\nvar RouteReuseStrategy = (function () {\n    function RouteReuseStrategy() {\n    }\n    return RouteReuseStrategy;\n}());\n/**\n * Does not detach any subtrees. Reuses routes as long as their route config is the same.\n */\nvar DefaultRouteReuseStrategy = (function () {\n    function DefaultRouteReuseStrategy() {\n    }\n    /**\n     * @param {?} route\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.shouldDetach = /**\n     * @param {?} route\n     * @return {?}\n     */\n    function (route) { return false; };\n    /**\n     * @param {?} route\n     * @param {?} detachedTree\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.store = /**\n     * @param {?} route\n     * @param {?} detachedTree\n     * @return {?}\n     */\n    function (route, detachedTree) { };\n    /**\n     * @param {?} route\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.shouldAttach = /**\n     * @param {?} route\n     * @return {?}\n     */\n    function (route) { return false; };\n    /**\n     * @param {?} route\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.retrieve = /**\n     * @param {?} route\n     * @return {?}\n     */\n    function (route) { return null; };\n    /**\n     * @param {?} future\n     * @param {?} curr\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.shouldReuseRoute = /**\n     * @param {?} future\n     * @param {?} curr\n     * @return {?}\n     */\n    function (future, curr) {\n        return future.routeConfig === curr.routeConfig;\n    };\n    return DefaultRouteReuseStrategy;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docsNotRequired\n * \\@experimental\n */\nvar ROUTES = new _angular_core.InjectionToken('ROUTES');\nvar RouterConfigLoader = (function () {\n    function RouterConfigLoader(loader, compiler, onLoadStartListener, onLoadEndListener) {\n        this.loader = loader;\n        this.compiler = compiler;\n        this.onLoadStartListener = onLoadStartListener;\n        this.onLoadEndListener = onLoadEndListener;\n    }\n    /**\n     * @param {?} parentInjector\n     * @param {?} route\n     * @return {?}\n     */\n    RouterConfigLoader.prototype.load = /**\n     * @param {?} parentInjector\n     * @param {?} route\n     * @return {?}\n     */\n    function (parentInjector, route) {\n        var _this = this;\n        if (this.onLoadStartListener) {\n            this.onLoadStartListener(route);\n        }\n        var /** @type {?} */ moduleFactory$ = this.loadModuleFactory(/** @type {?} */ ((route.loadChildren)));\n        return rxjs_operator_map.map.call(moduleFactory$, function (factory) {\n            if (_this.onLoadEndListener) {\n                _this.onLoadEndListener(route);\n            }\n            var /** @type {?} */ module = factory.create(parentInjector);\n            return new LoadedRouterConfig(flatten(module.injector.get(ROUTES)), module);\n        });\n    };\n    /**\n     * @param {?} loadChildren\n     * @return {?}\n     */\n    RouterConfigLoader.prototype.loadModuleFactory = /**\n     * @param {?} loadChildren\n     * @return {?}\n     */\n    function (loadChildren) {\n        var _this = this;\n        if (typeof loadChildren === 'string') {\n            return rxjs_observable_fromPromise.fromPromise(this.loader.load(loadChildren));\n        }\n        else {\n            return rxjs_operator_mergeMap.mergeMap.call(wrapIntoObservable(loadChildren()), function (t) {\n                if (t instanceof _angular_core.NgModuleFactory) {\n                    return rxjs_observable_of.of(t);\n                }\n                else {\n                    return rxjs_observable_fromPromise.fromPromise(_this.compiler.compileModuleAsync(t));\n                }\n            });\n        }\n    };\n    return RouterConfigLoader;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@whatItDoes Provides a way to migrate AngularJS applications to Angular.\n *\n * \\@experimental\n * @abstract\n */\nvar UrlHandlingStrategy = (function () {\n    function UrlHandlingStrategy() {\n    }\n    return UrlHandlingStrategy;\n}());\n/**\n * \\@experimental\n */\nvar DefaultUrlHandlingStrategy = (function () {\n    function DefaultUrlHandlingStrategy() {\n    }\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    DefaultUrlHandlingStrategy.prototype.shouldProcessUrl = /**\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) { return true; };\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    DefaultUrlHandlingStrategy.prototype.extract = /**\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) { return url; };\n    /**\n     * @param {?} newUrlPart\n     * @param {?} wholeUrl\n     * @return {?}\n     */\n    DefaultUrlHandlingStrategy.prototype.merge = /**\n     * @param {?} newUrlPart\n     * @param {?} wholeUrl\n     * @return {?}\n     */\n    function (newUrlPart, wholeUrl) { return newUrlPart; };\n    return DefaultUrlHandlingStrategy;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@whatItDoes Represents the extra options used during navigation.\n *\n * \\@stable\n * @record\n */\n\n/**\n * @param {?} error\n * @return {?}\n */\nfunction defaultErrorHandler(error) {\n    throw error;\n}\n/**\n * \\@internal\n * @param {?} snapshot\n * @return {?}\n */\nfunction defaultRouterHook(snapshot) {\n    return /** @type {?} */ (rxjs_observable_of.of(null));\n}\n/**\n * \\@whatItDoes Provides the navigation and url manipulation capabilities.\n *\n * See {\\@link Routes} for more details and examples.\n *\n * \\@ngModule RouterModule\n *\n * \\@stable\n */\nvar Router = (function () {\n    /**\n     * Creates the router service.\n     */\n    // TODO: vsavkin make internal after the final is out.\n    function Router(rootComponentType, urlSerializer, rootContexts, location, injector, loader, compiler, config) {\n        var _this = this;\n        this.rootComponentType = rootComponentType;\n        this.urlSerializer = urlSerializer;\n        this.rootContexts = rootContexts;\n        this.location = location;\n        this.config = config;\n        this.navigations = new rxjs_BehaviorSubject.BehaviorSubject(/** @type {?} */ ((null)));\n        this.navigationId = 0;\n        this.events = new rxjs_Subject.Subject();\n        /**\n         * Error handler that is invoked when a navigation errors.\n         *\n         * See {\\@link ErrorHandler} for more information.\n         */\n        this.errorHandler = defaultErrorHandler;\n        /**\n         * Indicates if at least one navigation happened.\n         */\n        this.navigated = false;\n        /**\n         * Used by RouterModule. This allows us to\n         * pause the navigation either before preactivation or after it.\n         * \\@internal\n         */\n        this.hooks = {\n            beforePreactivation: defaultRouterHook,\n            afterPreactivation: defaultRouterHook\n        };\n        /**\n         * Extracts and merges URLs. Used for AngularJS to Angular migrations.\n         */\n        this.urlHandlingStrategy = new DefaultUrlHandlingStrategy();\n        this.routeReuseStrategy = new DefaultRouteReuseStrategy();\n        var /** @type {?} */ onLoadStart = function (r) { return _this.triggerEvent(new RouteConfigLoadStart(r)); };\n        var /** @type {?} */ onLoadEnd = function (r) { return _this.triggerEvent(new RouteConfigLoadEnd(r)); };\n        this.ngModule = injector.get(_angular_core.NgModuleRef);\n        this.resetConfig(config);\n        this.currentUrlTree = createEmptyUrlTree();\n        this.rawUrlTree = this.currentUrlTree;\n        this.configLoader = new RouterConfigLoader(loader, compiler, onLoadStart, onLoadEnd);\n        this.routerState = createEmptyState(this.currentUrlTree, this.rootComponentType);\n        this.processNavigations();\n    }\n    /**\n     * @internal\n     * TODO: this should be removed once the constructor of the router made internal\n     */\n    /**\n     * \\@internal\n     * TODO: this should be removed once the constructor of the router made internal\n     * @param {?} rootComponentType\n     * @return {?}\n     */\n    Router.prototype.resetRootComponentType = /**\n     * \\@internal\n     * TODO: this should be removed once the constructor of the router made internal\n     * @param {?} rootComponentType\n     * @return {?}\n     */\n    function (rootComponentType) {\n        this.rootComponentType = rootComponentType;\n        // TODO: vsavkin router 4.0 should make the root component set to null\n        // this will simplify the lifecycle of the router.\n        this.routerState.root.component = this.rootComponentType;\n    };\n    /**\n     * Sets up the location change listener and performs the initial navigation.\n     */\n    /**\n     * Sets up the location change listener and performs the initial navigation.\n     * @return {?}\n     */\n    Router.prototype.initialNavigation = /**\n     * Sets up the location change listener and performs the initial navigation.\n     * @return {?}\n     */\n    function () {\n        this.setUpLocationChangeListener();\n        if (this.navigationId === 0) {\n            this.navigateByUrl(this.location.path(true), { replaceUrl: true });\n        }\n    };\n    /**\n     * Sets up the location change listener.\n     */\n    /**\n     * Sets up the location change listener.\n     * @return {?}\n     */\n    Router.prototype.setUpLocationChangeListener = /**\n     * Sets up the location change listener.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // Zone.current.wrap is needed because of the issue with RxJS scheduler,\n        // which does not work properly with zone.js in IE and Safari\n        if (!this.locationSubscription) {\n            this.locationSubscription = /** @type {?} */ (this.location.subscribe(Zone.current.wrap(function (change) {\n                var /** @type {?} */ rawUrlTree = _this.urlSerializer.parse(change['url']);\n                var /** @type {?} */ source = change['type'] === 'popstate' ? 'popstate' : 'hashchange';\n                setTimeout(function () { _this.scheduleNavigation(rawUrlTree, source, { replaceUrl: true }); }, 0);\n            })));\n        }\n    };\n    Object.defineProperty(Router.prototype, \"url\", {\n        /** The current url */\n        get: /**\n         * The current url\n         * @return {?}\n         */\n        function () { return this.serializeUrl(this.currentUrlTree); },\n        enumerable: true,\n        configurable: true\n    });\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} e\n     * @return {?}\n     */\n    Router.prototype.triggerEvent = /**\n     * \\@internal\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) { (/** @type {?} */ (this.events)).next(e); };\n    /**\n     * Resets the configuration used for navigation and generating links.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.resetConfig([\n     *  { path: 'team/:id', component: TeamCmp, children: [\n     *    { path: 'simple', component: SimpleCmp },\n     *    { path: 'user/:name', component: UserCmp }\n     *  ]}\n     * ]);\n     * ```\n     */\n    /**\n     * Resets the configuration used for navigation and generating links.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.resetConfig([\n     *  { path: 'team/:id', component: TeamCmp, children: [\n     *    { path: 'simple', component: SimpleCmp },\n     *    { path: 'user/:name', component: UserCmp }\n     *  ]}\n     * ]);\n     * ```\n     * @param {?} config\n     * @return {?}\n     */\n    Router.prototype.resetConfig = /**\n     * Resets the configuration used for navigation and generating links.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.resetConfig([\n     *  { path: 'team/:id', component: TeamCmp, children: [\n     *    { path: 'simple', component: SimpleCmp },\n     *    { path: 'user/:name', component: UserCmp }\n     *  ]}\n     * ]);\n     * ```\n     * @param {?} config\n     * @return {?}\n     */\n    function (config) {\n        validateConfig(config);\n        this.config = config;\n        this.navigated = false;\n    };\n    /** @docsNotRequired */\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    Router.prototype.ngOnDestroy = /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    function () { this.dispose(); };\n    /** Disposes of the router */\n    /**\n     * Disposes of the router\n     * @return {?}\n     */\n    Router.prototype.dispose = /**\n     * Disposes of the router\n     * @return {?}\n     */\n    function () {\n        if (this.locationSubscription) {\n            this.locationSubscription.unsubscribe();\n            this.locationSubscription = /** @type {?} */ ((null));\n        }\n    };\n    /**\n     * Applies an array of commands to the current url tree and creates a new url tree.\n     *\n     * When given an activate route, applies the given commands starting from the route.\n     * When not given a route, applies the given command starting from the root.\n     *\n     * ### Usage\n     *\n     * ```\n     * // create /team/33/user/11\n     * router.createUrlTree(['/team', 33, 'user', 11]);\n     *\n     * // create /team/33;expand=true/user/11\n     * router.createUrlTree(['/team', 33, {expand: true}, 'user', 11]);\n     *\n     * // you can collapse static segments like this (this works only with the first passed-in value):\n     * router.createUrlTree(['/team/33/user', userId]);\n     *\n     * // If the first segment can contain slashes, and you do not want the router to split it, you\n     * // can do the following:\n     *\n     * router.createUrlTree([{segmentPath: '/one/two'}]);\n     *\n     * // create /team/33/(user/11//right:chat)\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: 'chat'}}]);\n     *\n     * // remove the right secondary node\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: null}}]);\n     *\n     * // assuming the current url is `/team/33/user/11` and the route points to `user/11`\n     *\n     * // navigate to /team/33/user/11/details\n     * router.createUrlTree(['details'], {relativeTo: route});\n     *\n     * // navigate to /team/33/user/22\n     * router.createUrlTree(['../22'], {relativeTo: route});\n     *\n     * // navigate to /team/44/user/22\n     * router.createUrlTree(['../../team/44/user/22'], {relativeTo: route});\n     * ```\n     */\n    /**\n     * Applies an array of commands to the current url tree and creates a new url tree.\n     *\n     * When given an activate route, applies the given commands starting from the route.\n     * When not given a route, applies the given command starting from the root.\n     *\n     * ### Usage\n     *\n     * ```\n     * // create /team/33/user/11\n     * router.createUrlTree(['/team', 33, 'user', 11]);\n     *\n     * // create /team/33;expand=true/user/11\n     * router.createUrlTree(['/team', 33, {expand: true}, 'user', 11]);\n     *\n     * // you can collapse static segments like this (this works only with the first passed-in value):\n     * router.createUrlTree(['/team/33/user', userId]);\n     *\n     * // If the first segment can contain slashes, and you do not want the router to split it, you\n     * // can do the following:\n     *\n     * router.createUrlTree([{segmentPath: '/one/two'}]);\n     *\n     * // create /team/33/(user/11//right:chat)\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: 'chat'}}]);\n     *\n     * // remove the right secondary node\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: null}}]);\n     *\n     * // assuming the current url is `/team/33/user/11` and the route points to `user/11`\n     *\n     * // navigate to /team/33/user/11/details\n     * router.createUrlTree(['details'], {relativeTo: route});\n     *\n     * // navigate to /team/33/user/22\n     * router.createUrlTree(['../22'], {relativeTo: route});\n     *\n     * // navigate to /team/44/user/22\n     * router.createUrlTree(['../../team/44/user/22'], {relativeTo: route});\n     * ```\n     * @param {?} commands\n     * @param {?=} navigationExtras\n     * @return {?}\n     */\n    Router.prototype.createUrlTree = /**\n     * Applies an array of commands to the current url tree and creates a new url tree.\n     *\n     * When given an activate route, applies the given commands starting from the route.\n     * When not given a route, applies the given command starting from the root.\n     *\n     * ### Usage\n     *\n     * ```\n     * // create /team/33/user/11\n     * router.createUrlTree(['/team', 33, 'user', 11]);\n     *\n     * // create /team/33;expand=true/user/11\n     * router.createUrlTree(['/team', 33, {expand: true}, 'user', 11]);\n     *\n     * // you can collapse static segments like this (this works only with the first passed-in value):\n     * router.createUrlTree(['/team/33/user', userId]);\n     *\n     * // If the first segment can contain slashes, and you do not want the router to split it, you\n     * // can do the following:\n     *\n     * router.createUrlTree([{segmentPath: '/one/two'}]);\n     *\n     * // create /team/33/(user/11//right:chat)\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: 'chat'}}]);\n     *\n     * // remove the right secondary node\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: null}}]);\n     *\n     * // assuming the current url is `/team/33/user/11` and the route points to `user/11`\n     *\n     * // navigate to /team/33/user/11/details\n     * router.createUrlTree(['details'], {relativeTo: route});\n     *\n     * // navigate to /team/33/user/22\n     * router.createUrlTree(['../22'], {relativeTo: route});\n     *\n     * // navigate to /team/44/user/22\n     * router.createUrlTree(['../../team/44/user/22'], {relativeTo: route});\n     * ```\n     * @param {?} commands\n     * @param {?=} navigationExtras\n     * @return {?}\n     */\n    function (commands, navigationExtras) {\n        if (navigationExtras === void 0) { navigationExtras = {}; }\n        var relativeTo = navigationExtras.relativeTo, queryParams = navigationExtras.queryParams, fragment = navigationExtras.fragment, preserveQueryParams = navigationExtras.preserveQueryParams, queryParamsHandling = navigationExtras.queryParamsHandling, preserveFragment = navigationExtras.preserveFragment;\n        if (_angular_core.isDevMode() && preserveQueryParams && /** @type {?} */ (console) && /** @type {?} */ (console.warn)) {\n            console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n        }\n        var /** @type {?} */ a = relativeTo || this.routerState.root;\n        var /** @type {?} */ f = preserveFragment ? this.currentUrlTree.fragment : fragment;\n        var /** @type {?} */ convertedQueryParams = convertToParams(/** @type {?} */ ((queryParams)));\n        var /** @type {?} */ q = null;\n        if (queryParamsHandling) {\n            switch (queryParamsHandling) {\n                case 'merge':\n                    q = __assign({}, this.currentUrlTree.queryParams, convertedQueryParams);\n                    break;\n                case 'preserve':\n                    q = this.currentUrlTree.queryParams;\n                    break;\n                default:\n                    q = convertedQueryParams || null;\n            }\n        }\n        else {\n            q = preserveQueryParams ? this.currentUrlTree.queryParams : convertedQueryParams || null;\n        }\n        return createUrlTree(a, this.currentUrlTree, commands, /** @type {?} */ ((q)), /** @type {?} */ ((f)));\n    };\n    /**\n     * Navigate based on the provided url. This navigation is always absolute.\n     *\n     * Returns a promise that:\n     * - resolves to 'true' when navigation succeeds,\n     * - resolves to 'false' when navigation fails,\n     * - is rejected when an error happens.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.navigateByUrl(\"/team/33/user/11\");\n     *\n     * // Navigate without updating the URL\n     * router.navigateByUrl(\"/team/33/user/11\", { skipLocationChange: true });\n     * ```\n     *\n     * In opposite to `navigate`, `navigateByUrl` takes a whole URL\n     * and does not apply any delta to the current one.\n     */\n    /**\n     * Navigate based on the provided url. This navigation is always absolute.\n     *\n     * Returns a promise that:\n     * - resolves to 'true' when navigation succeeds,\n     * - resolves to 'false' when navigation fails,\n     * - is rejected when an error happens.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.navigateByUrl(\"/team/33/user/11\");\n     *\n     * // Navigate without updating the URL\n     * router.navigateByUrl(\"/team/33/user/11\", { skipLocationChange: true });\n     * ```\n     *\n     * In opposite to `navigate`, `navigateByUrl` takes a whole URL\n     * and does not apply any delta to the current one.\n     * @param {?} url\n     * @param {?=} extras\n     * @return {?}\n     */\n    Router.prototype.navigateByUrl = /**\n     * Navigate based on the provided url. This navigation is always absolute.\n     *\n     * Returns a promise that:\n     * - resolves to 'true' when navigation succeeds,\n     * - resolves to 'false' when navigation fails,\n     * - is rejected when an error happens.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.navigateByUrl(\"/team/33/user/11\");\n     *\n     * // Navigate without updating the URL\n     * router.navigateByUrl(\"/team/33/user/11\", { skipLocationChange: true });\n     * ```\n     *\n     * In opposite to `navigate`, `navigateByUrl` takes a whole URL\n     * and does not apply any delta to the current one.\n     * @param {?} url\n     * @param {?=} extras\n     * @return {?}\n     */\n    function (url, extras) {\n        if (extras === void 0) { extras = { skipLocationChange: false }; }\n        var /** @type {?} */ urlTree = typeof url === 'string' ? this.parseUrl(url) : url;\n        var /** @type {?} */ mergedTree = this.urlHandlingStrategy.merge(urlTree, this.rawUrlTree);\n        return this.scheduleNavigation(mergedTree, 'imperative', extras);\n    };\n    /**\n     * Navigate based on the provided array of commands and a starting point.\n     * If no starting route is provided, the navigation is absolute.\n     *\n     * Returns a promise that:\n     * - resolves to 'true' when navigation succeeds,\n     * - resolves to 'false' when navigation fails,\n     * - is rejected when an error happens.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route});\n     *\n     * // Navigate without updating the URL\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route, skipLocationChange: true});\n     * ```\n     *\n     * In opposite to `navigateByUrl`, `navigate` always takes a delta that is applied to the current\n     * URL.\n     */\n    /**\n     * Navigate based on the provided array of commands and a starting point.\n     * If no starting route is provided, the navigation is absolute.\n     *\n     * Returns a promise that:\n     * - resolves to 'true' when navigation succeeds,\n     * - resolves to 'false' when navigation fails,\n     * - is rejected when an error happens.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route});\n     *\n     * // Navigate without updating the URL\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route, skipLocationChange: true});\n     * ```\n     *\n     * In opposite to `navigateByUrl`, `navigate` always takes a delta that is applied to the current\n     * URL.\n     * @param {?} commands\n     * @param {?=} extras\n     * @return {?}\n     */\n    Router.prototype.navigate = /**\n     * Navigate based on the provided array of commands and a starting point.\n     * If no starting route is provided, the navigation is absolute.\n     *\n     * Returns a promise that:\n     * - resolves to 'true' when navigation succeeds,\n     * - resolves to 'false' when navigation fails,\n     * - is rejected when an error happens.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route});\n     *\n     * // Navigate without updating the URL\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route, skipLocationChange: true});\n     * ```\n     *\n     * In opposite to `navigateByUrl`, `navigate` always takes a delta that is applied to the current\n     * URL.\n     * @param {?} commands\n     * @param {?=} extras\n     * @return {?}\n     */\n    function (commands, extras) {\n        if (extras === void 0) { extras = { skipLocationChange: false }; }\n        validateCommands(commands);\n        if (extras.queryParams) {\n            extras.queryParams = this.removeEmptyProps(extras.queryParams);\n        }\n        return this.navigateByUrl(this.createUrlTree(commands, extras), extras);\n    };\n    /** Serializes a {@link UrlTree} into a string */\n    /**\n     * Serializes a {\\@link UrlTree} into a string\n     * @param {?} url\n     * @return {?}\n     */\n    Router.prototype.serializeUrl = /**\n     * Serializes a {\\@link UrlTree} into a string\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) { return this.urlSerializer.serialize(url); };\n    /** Parses a string into a {@link UrlTree} */\n    /**\n     * Parses a string into a {\\@link UrlTree}\n     * @param {?} url\n     * @return {?}\n     */\n    Router.prototype.parseUrl = /**\n     * Parses a string into a {\\@link UrlTree}\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) { return this.urlSerializer.parse(url); };\n    /** Returns whether the url is activated */\n    /**\n     * Returns whether the url is activated\n     * @param {?} url\n     * @param {?} exact\n     * @return {?}\n     */\n    Router.prototype.isActive = /**\n     * Returns whether the url is activated\n     * @param {?} url\n     * @param {?} exact\n     * @return {?}\n     */\n    function (url, exact) {\n        var /** @type {?} */ tree = typeof url === 'string' ? this.urlSerializer.parse(url) : url;\n        return exact ? equalsTree(this.currentUrlTree, tree) : containsTree(this.currentUrlTree, tree);\n    };\n    /**\n     * @param {?} params\n     * @return {?}\n     */\n    Router.prototype.removeEmptyProps = /**\n     * @param {?} params\n     * @return {?}\n     */\n    function (params) {\n        var /** @type {?} */ p = {};\n        forEach(params, function (v, k) {\n            if (v != null) {\n                p[k] = v;\n            }\n        });\n        return p;\n    };\n    /**\n     * @return {?}\n     */\n    Router.prototype.processNavigations = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        rxjs_operator_concatMap.concatMap\n            .call(this.navigations, function (nav) {\n            if (nav) {\n                _this.executeScheduledNavigation(nav);\n                // a failed navigation should not stop the router from processing\n                // further navigations => the catch\n                return nav.promise.catch(function () { });\n            }\n            else {\n                return /** @type {?} */ (rxjs_observable_of.of(null));\n            }\n        })\n            .subscribe(function () { });\n    };\n    /**\n     * @param {?} rawUrl\n     * @param {?} source\n     * @param {?} extras\n     * @return {?}\n     */\n    Router.prototype.scheduleNavigation = /**\n     * @param {?} rawUrl\n     * @param {?} source\n     * @param {?} extras\n     * @return {?}\n     */\n    function (rawUrl, source, extras) {\n        var /** @type {?} */ lastNavigation = this.navigations.value;\n        // If the user triggers a navigation imperatively (e.g., by using navigateByUrl),\n        // and that navigation results in 'replaceState' that leads to the same URL,\n        // we should skip those.\n        if (lastNavigation && source !== 'imperative' && lastNavigation.source === 'imperative' &&\n            lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n            return Promise.resolve(true); // return value is not used\n        }\n        // Because of a bug in IE and Edge, the location class fires two events (popstate and\n        // hashchange) every single time. The second one should be ignored. Otherwise, the URL will\n        // flicker.\n        if (lastNavigation && source == 'hashchange' && lastNavigation.source === 'popstate' &&\n            lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n            return Promise.resolve(true); // return value is not used\n        }\n        var /** @type {?} */ resolve = null;\n        var /** @type {?} */ reject = null;\n        var /** @type {?} */ promise = new Promise(function (res, rej) {\n            resolve = res;\n            reject = rej;\n        });\n        var /** @type {?} */ id = ++this.navigationId;\n        this.navigations.next({ id: id, source: source, rawUrl: rawUrl, extras: extras, resolve: resolve, reject: reject, promise: promise });\n        // Make sure that the error is propagated even though `processNavigations` catch\n        // handler does not rethrow\n        return promise.catch(function (e) { return Promise.reject(e); });\n    };\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    Router.prototype.executeScheduledNavigation = /**\n     * @param {?} __0\n     * @return {?}\n     */\n    function (_a) {\n        var _this = this;\n        var id = _a.id, rawUrl = _a.rawUrl, extras = _a.extras, resolve = _a.resolve, reject = _a.reject;\n        var /** @type {?} */ url = this.urlHandlingStrategy.extract(rawUrl);\n        var /** @type {?} */ urlTransition = !this.navigated || url.toString() !== this.currentUrlTree.toString();\n        if (urlTransition && this.urlHandlingStrategy.shouldProcessUrl(rawUrl)) {\n            (/** @type {?} */ (this.events)).next(new NavigationStart(id, this.serializeUrl(url)));\n            Promise.resolve()\n                .then(function (_) {\n                return _this.runNavigate(url, rawUrl, !!extras.skipLocationChange, !!extras.replaceUrl, id, null);\n            })\n                .then(resolve, reject);\n            // we cannot process the current URL, but we could process the previous one =>\n            // we need to do some cleanup\n        }\n        else if (urlTransition && this.rawUrlTree &&\n            this.urlHandlingStrategy.shouldProcessUrl(this.rawUrlTree)) {\n            (/** @type {?} */ (this.events)).next(new NavigationStart(id, this.serializeUrl(url)));\n            Promise.resolve()\n                .then(function (_) {\n                return _this.runNavigate(url, rawUrl, false, false, id, createEmptyState(url, _this.rootComponentType).snapshot);\n            })\n                .then(resolve, reject);\n        }\n        else {\n            this.rawUrlTree = rawUrl;\n            resolve(null);\n        }\n    };\n    /**\n     * @param {?} url\n     * @param {?} rawUrl\n     * @param {?} shouldPreventPushState\n     * @param {?} shouldReplaceUrl\n     * @param {?} id\n     * @param {?} precreatedState\n     * @return {?}\n     */\n    Router.prototype.runNavigate = /**\n     * @param {?} url\n     * @param {?} rawUrl\n     * @param {?} shouldPreventPushState\n     * @param {?} shouldReplaceUrl\n     * @param {?} id\n     * @param {?} precreatedState\n     * @return {?}\n     */\n    function (url, rawUrl, shouldPreventPushState, shouldReplaceUrl, id, precreatedState) {\n        var _this = this;\n        if (id !== this.navigationId) {\n            this.location.go(this.urlSerializer.serialize(this.currentUrlTree));\n            (/** @type {?} */ (this.events))\n                .next(new NavigationCancel(id, this.serializeUrl(url), \"Navigation ID \" + id + \" is not equal to the current navigation id \" + this.navigationId));\n            return Promise.resolve(false);\n        }\n        return new Promise(function (resolvePromise, rejectPromise) {\n            // create an observable of the url and route state snapshot\n            // this operation do not result in any side effects\n            var /** @type {?} */ urlAndSnapshot$;\n            if (!precreatedState) {\n                var /** @type {?} */ moduleInjector = _this.ngModule.injector;\n                var /** @type {?} */ redirectsApplied$ = applyRedirects(moduleInjector, _this.configLoader, _this.urlSerializer, url, _this.config);\n                urlAndSnapshot$ = rxjs_operator_mergeMap.mergeMap.call(redirectsApplied$, function (appliedUrl) {\n                    return rxjs_operator_map.map.call(recognize(_this.rootComponentType, _this.config, appliedUrl, _this.serializeUrl(appliedUrl)), function (snapshot) {\n                        (/** @type {?} */ (_this.events))\n                            .next(new RoutesRecognized(id, _this.serializeUrl(url), _this.serializeUrl(appliedUrl), snapshot));\n                        return { appliedUrl: appliedUrl, snapshot: snapshot };\n                    });\n                });\n            }\n            else {\n                urlAndSnapshot$ = rxjs_observable_of.of({ appliedUrl: url, snapshot: precreatedState });\n            }\n            var /** @type {?} */ beforePreactivationDone$ = rxjs_operator_mergeMap.mergeMap.call(urlAndSnapshot$, function (p) {\n                return rxjs_operator_map.map.call(_this.hooks.beforePreactivation(p.snapshot), function () { return p; });\n            });\n            // run preactivation: guards and data resolvers\n            var /** @type {?} */ preActivation;\n            var /** @type {?} */ preactivationSetup$ = rxjs_operator_map.map.call(beforePreactivationDone$, function (_a) {\n                var appliedUrl = _a.appliedUrl, snapshot = _a.snapshot;\n                var /** @type {?} */ moduleInjector = _this.ngModule.injector;\n                preActivation = new PreActivation(snapshot, _this.routerState.snapshot, moduleInjector, function (evt) { return _this.triggerEvent(evt); });\n                preActivation.initalize(_this.rootContexts);\n                return { appliedUrl: appliedUrl, snapshot: snapshot };\n            });\n            var /** @type {?} */ preactivationCheckGuards$ = rxjs_operator_mergeMap.mergeMap.call(preactivationSetup$, function (_a) {\n                var appliedUrl = _a.appliedUrl, snapshot = _a.snapshot;\n                if (_this.navigationId !== id)\n                    return rxjs_observable_of.of(false);\n                _this.triggerEvent(new GuardsCheckStart(id, _this.serializeUrl(url), appliedUrl, snapshot));\n                return rxjs_operator_map.map.call(preActivation.checkGuards(), function (shouldActivate) {\n                    _this.triggerEvent(new GuardsCheckEnd(id, _this.serializeUrl(url), appliedUrl, snapshot, shouldActivate));\n                    return { appliedUrl: appliedUrl, snapshot: snapshot, shouldActivate: shouldActivate };\n                });\n            });\n            var /** @type {?} */ preactivationResolveData$ = rxjs_operator_mergeMap.mergeMap.call(preactivationCheckGuards$, function (p) {\n                if (_this.navigationId !== id)\n                    return rxjs_observable_of.of(false);\n                if (p.shouldActivate && preActivation.isActivating()) {\n                    _this.triggerEvent(new ResolveStart(id, _this.serializeUrl(url), p.appliedUrl, p.snapshot));\n                    return rxjs_operator_map.map.call(preActivation.resolveData(), function () {\n                        _this.triggerEvent(new ResolveEnd(id, _this.serializeUrl(url), p.appliedUrl, p.snapshot));\n                        return p;\n                    });\n                }\n                else {\n                    return rxjs_observable_of.of(p);\n                }\n            });\n            var /** @type {?} */ preactivationDone$ = rxjs_operator_mergeMap.mergeMap.call(preactivationResolveData$, function (p) {\n                return rxjs_operator_map.map.call(_this.hooks.afterPreactivation(p.snapshot), function () { return p; });\n            });\n            // create router state\n            // this operation has side effects => route state is being affected\n            var /** @type {?} */ routerState$ = rxjs_operator_map.map.call(preactivationDone$, function (_a) {\n                var appliedUrl = _a.appliedUrl, snapshot = _a.snapshot, shouldActivate = _a.shouldActivate;\n                if (shouldActivate) {\n                    var /** @type {?} */ state = createRouterState(_this.routeReuseStrategy, snapshot, _this.routerState);\n                    return { appliedUrl: appliedUrl, state: state, shouldActivate: shouldActivate };\n                }\n                else {\n                    return { appliedUrl: appliedUrl, state: null, shouldActivate: shouldActivate };\n                }\n            });\n            // applied the new router state\n            // this operation has side effects\n            var /** @type {?} */ navigationIsSuccessful;\n            var /** @type {?} */ storedState = _this.routerState;\n            var /** @type {?} */ storedUrl = _this.currentUrlTree;\n            routerState$\n                .forEach(function (_a) {\n                var appliedUrl = _a.appliedUrl, state = _a.state, shouldActivate = _a.shouldActivate;\n                if (!shouldActivate || id !== _this.navigationId) {\n                    navigationIsSuccessful = false;\n                    return;\n                }\n                _this.currentUrlTree = appliedUrl;\n                _this.rawUrlTree = _this.urlHandlingStrategy.merge(_this.currentUrlTree, rawUrl);\n                (/** @type {?} */ (_this)).routerState = state;\n                if (!shouldPreventPushState) {\n                    var /** @type {?} */ path = _this.urlSerializer.serialize(_this.rawUrlTree);\n                    if (_this.location.isCurrentPathEqualTo(path) || shouldReplaceUrl) {\n                        _this.location.replaceState(path);\n                    }\n                    else {\n                        _this.location.go(path);\n                    }\n                }\n                new ActivateRoutes(_this.routeReuseStrategy, state, storedState, function (evt) { return _this.triggerEvent(evt); })\n                    .activate(_this.rootContexts);\n                navigationIsSuccessful = true;\n            })\n                .then(function () {\n                if (navigationIsSuccessful) {\n                    _this.navigated = true;\n                    (/** @type {?} */ (_this.events))\n                        .next(new NavigationEnd(id, _this.serializeUrl(url), _this.serializeUrl(_this.currentUrlTree)));\n                    resolvePromise(true);\n                }\n                else {\n                    _this.resetUrlToCurrentUrlTree();\n                    (/** @type {?} */ (_this.events))\n                        .next(new NavigationCancel(id, _this.serializeUrl(url), ''));\n                    resolvePromise(false);\n                }\n            }, function (e) {\n                if (isNavigationCancelingError(e)) {\n                    _this.resetUrlToCurrentUrlTree();\n                    _this.navigated = true;\n                    (/** @type {?} */ (_this.events))\n                        .next(new NavigationCancel(id, _this.serializeUrl(url), e.message));\n                    resolvePromise(false);\n                }\n                else {\n                    (/** @type {?} */ (_this.events))\n                        .next(new NavigationError(id, _this.serializeUrl(url), e));\n                    try {\n                        resolvePromise(_this.errorHandler(e));\n                    }\n                    catch (/** @type {?} */ ee) {\n                        rejectPromise(ee);\n                    }\n                }\n                (/** @type {?} */ (_this)).routerState = storedState;\n                _this.currentUrlTree = storedUrl;\n                _this.rawUrlTree = _this.urlHandlingStrategy.merge(_this.currentUrlTree, rawUrl);\n                _this.location.replaceState(_this.serializeUrl(_this.rawUrlTree));\n            });\n        });\n    };\n    /**\n     * @return {?}\n     */\n    Router.prototype.resetUrlToCurrentUrlTree = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ path = this.urlSerializer.serialize(this.rawUrlTree);\n        this.location.replaceState(path);\n    };\n    return Router;\n}());\nvar ActivateRoutes = (function () {\n    function ActivateRoutes(routeReuseStrategy, futureState, currState, forwardEvent) {\n        this.routeReuseStrategy = routeReuseStrategy;\n        this.futureState = futureState;\n        this.currState = currState;\n        this.forwardEvent = forwardEvent;\n    }\n    /**\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.activate = /**\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    function (parentContexts) {\n        var /** @type {?} */ futureRoot = this.futureState._root;\n        var /** @type {?} */ currRoot = this.currState ? this.currState._root : null;\n        this.deactivateChildRoutes(futureRoot, currRoot, parentContexts);\n        advanceActivatedRoute(this.futureState.root);\n        this.activateChildRoutes(futureRoot, currRoot, parentContexts);\n    };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} contexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.deactivateChildRoutes = /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} contexts\n     * @return {?}\n     */\n    function (futureNode, currNode, contexts) {\n        var _this = this;\n        var /** @type {?} */ children = nodeChildrenAsMap(currNode);\n        // Recurse on the routes active in the future state to de-activate deeper children\n        futureNode.children.forEach(function (futureChild) {\n            var /** @type {?} */ childOutletName = futureChild.value.outlet;\n            _this.deactivateRoutes(futureChild, children[childOutletName], contexts);\n            delete children[childOutletName];\n        });\n        // De-activate the routes that will not be re-used\n        forEach(children, function (v, childName) {\n            _this.deactivateRouteAndItsChildren(v, contexts);\n        });\n    };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} parentContext\n     * @return {?}\n     */\n    ActivateRoutes.prototype.deactivateRoutes = /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} parentContext\n     * @return {?}\n     */\n    function (futureNode, currNode, parentContext) {\n        var /** @type {?} */ future = futureNode.value;\n        var /** @type {?} */ curr = currNode ? currNode.value : null;\n        if (future === curr) {\n            // Reusing the node, check to see if the children need to be de-activated\n            if (future.component) {\n                // If we have a normal route, we need to go through an outlet.\n                var /** @type {?} */ context = parentContext.getContext(future.outlet);\n                if (context) {\n                    this.deactivateChildRoutes(futureNode, currNode, context.children);\n                }\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.deactivateChildRoutes(futureNode, currNode, parentContext);\n            }\n        }\n        else {\n            if (curr) {\n                // Deactivate the current route which will not be re-used\n                this.deactivateRouteAndItsChildren(currNode, parentContext);\n            }\n        }\n    };\n    /**\n     * @param {?} route\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.deactivateRouteAndItsChildren = /**\n     * @param {?} route\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    function (route, parentContexts) {\n        if (this.routeReuseStrategy.shouldDetach(route.value.snapshot)) {\n            this.detachAndStoreRouteSubtree(route, parentContexts);\n        }\n        else {\n            this.deactivateRouteAndOutlet(route, parentContexts);\n        }\n    };\n    /**\n     * @param {?} route\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.detachAndStoreRouteSubtree = /**\n     * @param {?} route\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    function (route, parentContexts) {\n        var /** @type {?} */ context = parentContexts.getContext(route.value.outlet);\n        if (context && context.outlet) {\n            var /** @type {?} */ componentRef = context.outlet.detach();\n            var /** @type {?} */ contexts = context.children.onOutletDeactivated();\n            this.routeReuseStrategy.store(route.value.snapshot, { componentRef: componentRef, route: route, contexts: contexts });\n        }\n    };\n    /**\n     * @param {?} route\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.deactivateRouteAndOutlet = /**\n     * @param {?} route\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    function (route, parentContexts) {\n        var _this = this;\n        var /** @type {?} */ context = parentContexts.getContext(route.value.outlet);\n        if (context) {\n            var /** @type {?} */ children = nodeChildrenAsMap(route);\n            var /** @type {?} */ contexts_1 = route.value.component ? context.children : parentContexts;\n            forEach(children, function (v, k) { return _this.deactivateRouteAndItsChildren(v, contexts_1); });\n            if (context.outlet) {\n                // Destroy the component\n                context.outlet.deactivate();\n                // Destroy the contexts for all the outlets that were in the component\n                context.children.onOutletDeactivated();\n            }\n        }\n    };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} contexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.activateChildRoutes = /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} contexts\n     * @return {?}\n     */\n    function (futureNode, currNode, contexts) {\n        var _this = this;\n        var /** @type {?} */ children = nodeChildrenAsMap(currNode);\n        futureNode.children.forEach(function (c) {\n            _this.activateRoutes(c, children[c.value.outlet], contexts);\n            _this.forwardEvent(new ActivationEnd(c.value.snapshot));\n        });\n        if (futureNode.children.length) {\n            this.forwardEvent(new ChildActivationEnd(futureNode.value.snapshot));\n        }\n    };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.activateRoutes = /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    function (futureNode, currNode, parentContexts) {\n        var /** @type {?} */ future = futureNode.value;\n        var /** @type {?} */ curr = currNode ? currNode.value : null;\n        advanceActivatedRoute(future);\n        // reusing the node\n        if (future === curr) {\n            if (future.component) {\n                // If we have a normal route, we need to go through an outlet.\n                var /** @type {?} */ context = parentContexts.getOrCreateContext(future.outlet);\n                this.activateChildRoutes(futureNode, currNode, context.children);\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.activateChildRoutes(futureNode, currNode, parentContexts);\n            }\n        }\n        else {\n            if (future.component) {\n                // if we have a normal route, we need to place the component into the outlet and recurse.\n                var /** @type {?} */ context = parentContexts.getOrCreateContext(future.outlet);\n                if (this.routeReuseStrategy.shouldAttach(future.snapshot)) {\n                    var /** @type {?} */ stored = (/** @type {?} */ (this.routeReuseStrategy.retrieve(future.snapshot)));\n                    this.routeReuseStrategy.store(future.snapshot, null);\n                    context.children.onOutletReAttached(stored.contexts);\n                    context.attachRef = stored.componentRef;\n                    context.route = stored.route.value;\n                    if (context.outlet) {\n                        // Attach right away when the outlet has already been instantiated\n                        // Otherwise attach from `RouterOutlet.ngOnInit` when it is instantiated\n                        context.outlet.attach(stored.componentRef, stored.route.value);\n                    }\n                    advanceActivatedRouteNodeAndItsChildren(stored.route);\n                }\n                else {\n                    var /** @type {?} */ config = parentLoadedConfig(future.snapshot);\n                    var /** @type {?} */ cmpFactoryResolver = config ? config.module.componentFactoryResolver : null;\n                    context.route = future;\n                    context.resolver = cmpFactoryResolver;\n                    if (context.outlet) {\n                        // Activate the outlet when it has already been instantiated\n                        // Otherwise it will get activated from its `ngOnInit` when instantiated\n                        context.outlet.activateWith(future, cmpFactoryResolver);\n                    }\n                    this.activateChildRoutes(futureNode, null, context.children);\n                }\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.activateChildRoutes(futureNode, null, parentContexts);\n            }\n        }\n    };\n    return ActivateRoutes;\n}());\n/**\n * @param {?} node\n * @return {?}\n */\nfunction advanceActivatedRouteNodeAndItsChildren(node) {\n    advanceActivatedRoute(node.value);\n    node.children.forEach(advanceActivatedRouteNodeAndItsChildren);\n}\n/**\n * @param {?} snapshot\n * @return {?}\n */\nfunction parentLoadedConfig(snapshot) {\n    for (var /** @type {?} */ s = snapshot.parent; s; s = s.parent) {\n        var /** @type {?} */ route = s.routeConfig;\n        if (route && route._loadedConfig)\n            return route._loadedConfig;\n        if (route && route.component)\n            return null;\n    }\n    return null;\n}\n/**\n * @param {?} commands\n * @return {?}\n */\nfunction validateCommands(commands) {\n    for (var /** @type {?} */ i = 0; i < commands.length; i++) {\n        var /** @type {?} */ cmd = commands[i];\n        if (cmd == null) {\n            throw new Error(\"The requested path contains \" + cmd + \" segment at index \" + i);\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Lets you link to specific parts of your app.\n *\n * \\@howToUse\n *\n * Consider the following route configuration:\n * `[{ path: 'user/:name', component: UserCmp }]`\n *\n * When linking to this `user/:name` route, you can write:\n * `<a routerLink='/user/bob'>link to user component</a>`\n *\n * \\@description\n *\n * The RouterLink directives let you link to specific parts of your app.\n *\n * When the link is static, you can use the directive as follows:\n * `<a routerLink=\"/user/bob\">link to user component</a>`\n *\n * If you use dynamic values to generate the link, you can pass an array of path\n * segments, followed by the params for each segment.\n *\n * For instance `['/team', teamId, 'user', userName, {details: true}]`\n * means that we want to generate a link to `/team/11/user/bob;details=true`.\n *\n * Multiple static segments can be merged into one\n * (e.g., `['/team/11/user', userName, {details: true}]`).\n *\n * The first segment name can be prepended with `/`, `./`, or `../`:\n * * If the first segment begins with `/`, the router will look up the route from the root of the\n *   app.\n * * If the first segment begins with `./`, or doesn't begin with a slash, the router will\n *   instead look in the children of the current activated route.\n * * And if the first segment begins with `../`, the router will go up one level.\n *\n * You can set query params and fragment as follows:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" fragment=\"education\">\n *   link to user component\n * </a>\n * ```\n * RouterLink will use these to generate this link: `/user/bob#education?debug=true`.\n *\n * (Deprecated in v4.0.0 use `queryParamsHandling` instead) You can also tell the\n * directive to preserve the current query params and fragment:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" preserveQueryParams preserveFragment>\n *   link to user component\n * </a>\n * ```\n *\n * You can tell the directive to how to handle queryParams, available options are:\n *  - 'merge' merge the queryParams into the current queryParams\n *  - 'preserve' preserve the current queryParams\n *  - default / '' use the queryParams only\n *  same options for {\\@link NavigationExtras#queryParamsHandling}\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" queryParamsHandling=\"merge\">\n *   link to user component\n * </a>\n * ```\n *\n * The router link directive always treats the provided input as a delta to the current url.\n *\n * For instance, if the current url is `/user/(box//aux:team)`.\n *\n * Then the following link `<a [routerLink]=\"['/user/jim']\">Jim</a>` will generate the link\n * `/user/(jim//aux:team)`.\n *\n * \\@ngModule RouterModule\n *\n * See {\\@link Router#createUrlTree} for more information.\n *\n * \\@stable\n */\nvar RouterLink = (function () {\n    function RouterLink(router, route, tabIndex, renderer, el) {\n        this.router = router;\n        this.route = route;\n        this.commands = [];\n        if (tabIndex == null) {\n            renderer.setAttribute(el.nativeElement, 'tabindex', '0');\n        }\n    }\n    Object.defineProperty(RouterLink.prototype, \"routerLink\", {\n        set: /**\n         * @param {?} commands\n         * @return {?}\n         */\n        function (commands) {\n            if (commands != null) {\n                this.commands = Array.isArray(commands) ? commands : [commands];\n            }\n            else {\n                this.commands = [];\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterLink.prototype, \"preserveQueryParams\", {\n        set: /**\n         * @deprecated 4.0.0 use `queryParamsHandling` instead.\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            if (_angular_core.isDevMode() && /** @type {?} */ (console) && /** @type {?} */ (console.warn)) {\n                console.warn('preserveQueryParams is deprecated!, use queryParamsHandling instead.');\n            }\n            this.preserve = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    RouterLink.prototype.onClick = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ extras = {\n            skipLocationChange: attrBoolValue(this.skipLocationChange),\n            replaceUrl: attrBoolValue(this.replaceUrl),\n        };\n        this.router.navigateByUrl(this.urlTree, extras);\n        return true;\n    };\n    Object.defineProperty(RouterLink.prototype, \"urlTree\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.router.createUrlTree(this.commands, {\n                relativeTo: this.route,\n                queryParams: this.queryParams,\n                fragment: this.fragment,\n                preserveQueryParams: attrBoolValue(this.preserve),\n                queryParamsHandling: this.queryParamsHandling,\n                preserveFragment: attrBoolValue(this.preserveFragment),\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RouterLink.decorators = [\n        { type: _angular_core.Directive, args: [{ selector: ':not(a)[routerLink]' },] },\n    ];\n    /** @nocollapse */\n    RouterLink.ctorParameters = function () { return [\n        { type: Router, },\n        { type: ActivatedRoute, },\n        { type: undefined, decorators: [{ type: _angular_core.Attribute, args: ['tabindex',] },] },\n        { type: _angular_core.Renderer2, },\n        { type: _angular_core.ElementRef, },\n    ]; };\n    RouterLink.propDecorators = {\n        \"queryParams\": [{ type: _angular_core.Input },],\n        \"fragment\": [{ type: _angular_core.Input },],\n        \"queryParamsHandling\": [{ type: _angular_core.Input },],\n        \"preserveFragment\": [{ type: _angular_core.Input },],\n        \"skipLocationChange\": [{ type: _angular_core.Input },],\n        \"replaceUrl\": [{ type: _angular_core.Input },],\n        \"routerLink\": [{ type: _angular_core.Input },],\n        \"preserveQueryParams\": [{ type: _angular_core.Input },],\n        \"onClick\": [{ type: _angular_core.HostListener, args: ['click',] },],\n    };\n    return RouterLink;\n}());\n/**\n * \\@whatItDoes Lets you link to specific parts of your app.\n *\n * See {\\@link RouterLink} for more information.\n *\n * \\@ngModule RouterModule\n *\n * \\@stable\n */\nvar RouterLinkWithHref = (function () {\n    function RouterLinkWithHref(router, route, locationStrategy) {\n        var _this = this;\n        this.router = router;\n        this.route = route;\n        this.locationStrategy = locationStrategy;\n        this.commands = [];\n        this.subscription = router.events.subscribe(function (s) {\n            if (s instanceof NavigationEnd) {\n                _this.updateTargetUrlAndHref();\n            }\n        });\n    }\n    Object.defineProperty(RouterLinkWithHref.prototype, \"routerLink\", {\n        set: /**\n         * @param {?} commands\n         * @return {?}\n         */\n        function (commands) {\n            if (commands != null) {\n                this.commands = Array.isArray(commands) ? commands : [commands];\n            }\n            else {\n                this.commands = [];\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterLinkWithHref.prototype, \"preserveQueryParams\", {\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            if (_angular_core.isDevMode() && /** @type {?} */ (console) && /** @type {?} */ (console.warn)) {\n                console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n            }\n            this.preserve = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    RouterLinkWithHref.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) { this.updateTargetUrlAndHref(); };\n    /**\n     * @return {?}\n     */\n    RouterLinkWithHref.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () { this.subscription.unsubscribe(); };\n    /**\n     * @param {?} button\n     * @param {?} ctrlKey\n     * @param {?} metaKey\n     * @param {?} shiftKey\n     * @return {?}\n     */\n    RouterLinkWithHref.prototype.onClick = /**\n     * @param {?} button\n     * @param {?} ctrlKey\n     * @param {?} metaKey\n     * @param {?} shiftKey\n     * @return {?}\n     */\n    function (button, ctrlKey, metaKey, shiftKey) {\n        if (button !== 0 || ctrlKey || metaKey || shiftKey) {\n            return true;\n        }\n        if (typeof this.target === 'string' && this.target != '_self') {\n            return true;\n        }\n        var /** @type {?} */ extras = {\n            skipLocationChange: attrBoolValue(this.skipLocationChange),\n            replaceUrl: attrBoolValue(this.replaceUrl),\n        };\n        this.router.navigateByUrl(this.urlTree, extras);\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    RouterLinkWithHref.prototype.updateTargetUrlAndHref = /**\n     * @return {?}\n     */\n    function () {\n        this.href = this.locationStrategy.prepareExternalUrl(this.router.serializeUrl(this.urlTree));\n    };\n    Object.defineProperty(RouterLinkWithHref.prototype, \"urlTree\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.router.createUrlTree(this.commands, {\n                relativeTo: this.route,\n                queryParams: this.queryParams,\n                fragment: this.fragment,\n                preserveQueryParams: attrBoolValue(this.preserve),\n                queryParamsHandling: this.queryParamsHandling,\n                preserveFragment: attrBoolValue(this.preserveFragment),\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RouterLinkWithHref.decorators = [\n        { type: _angular_core.Directive, args: [{ selector: 'a[routerLink]' },] },\n    ];\n    /** @nocollapse */\n    RouterLinkWithHref.ctorParameters = function () { return [\n        { type: Router, },\n        { type: ActivatedRoute, },\n        { type: _angular_common.LocationStrategy, },\n    ]; };\n    RouterLinkWithHref.propDecorators = {\n        \"target\": [{ type: _angular_core.HostBinding, args: ['attr.target',] }, { type: _angular_core.Input },],\n        \"queryParams\": [{ type: _angular_core.Input },],\n        \"fragment\": [{ type: _angular_core.Input },],\n        \"queryParamsHandling\": [{ type: _angular_core.Input },],\n        \"preserveFragment\": [{ type: _angular_core.Input },],\n        \"skipLocationChange\": [{ type: _angular_core.Input },],\n        \"replaceUrl\": [{ type: _angular_core.Input },],\n        \"href\": [{ type: _angular_core.HostBinding },],\n        \"routerLink\": [{ type: _angular_core.Input },],\n        \"preserveQueryParams\": [{ type: _angular_core.Input },],\n        \"onClick\": [{ type: _angular_core.HostListener, args: ['click', ['$event.button', '$event.ctrlKey', '$event.metaKey', '$event.shiftKey'],] },],\n    };\n    return RouterLinkWithHref;\n}());\n/**\n * @param {?} s\n * @return {?}\n */\nfunction attrBoolValue(s) {\n    return s === '' || !!s;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Lets you add a CSS class to an element when the link's route becomes active.\n *\n * \\@howToUse\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\">Bob</a>\n * ```\n *\n * \\@description\n *\n * The RouterLinkActive directive lets you add a CSS class to an element when the link's route\n * becomes active.\n *\n * Consider the following example:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\">Bob</a>\n * ```\n *\n * When the url is either '/user' or '/user/bob', the active-link class will\n * be added to the `a` tag. If the url changes, the class will be removed.\n *\n * You can set more than one class, as follows:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"class1 class2\">Bob</a>\n * <a routerLink=\"/user/bob\" [routerLinkActive]=\"['class1', 'class2']\">Bob</a>\n * ```\n *\n * You can configure RouterLinkActive by passing `exact: true`. This will add the classes\n * only when the url matches the link exactly.\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact:\n * true}\">Bob</a>\n * ```\n *\n * You can assign the RouterLinkActive instance to a template variable and directly check\n * the `isActive` status.\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive #rla=\"routerLinkActive\">\n *   Bob {{ rla.isActive ? '(already open)' : ''}}\n * </a>\n * ```\n *\n * Finally, you can apply the RouterLinkActive directive to an ancestor of a RouterLink.\n *\n * ```\n * <div routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact: true}\">\n *   <a routerLink=\"/user/jim\">Jim</a>\n *   <a routerLink=\"/user/bob\">Bob</a>\n * </div>\n * ```\n *\n * This will set the active-link class on the div tag if the url is either '/user/jim' or\n * '/user/bob'.\n *\n * \\@ngModule RouterModule\n *\n * \\@stable\n */\nvar RouterLinkActive = (function () {\n    function RouterLinkActive(router, element, renderer, cdr) {\n        var _this = this;\n        this.router = router;\n        this.element = element;\n        this.renderer = renderer;\n        this.cdr = cdr;\n        this.classes = [];\n        this.isActive = false;\n        this.routerLinkActiveOptions = { exact: false };\n        this.subscription = router.events.subscribe(function (s) {\n            if (s instanceof NavigationEnd) {\n                _this.update();\n            }\n        });\n    }\n    /**\n     * @return {?}\n     */\n    RouterLinkActive.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this.links.changes.subscribe(function (_) { return _this.update(); });\n        this.linksWithHrefs.changes.subscribe(function (_) { return _this.update(); });\n        this.update();\n    };\n    Object.defineProperty(RouterLinkActive.prototype, \"routerLinkActive\", {\n        set: /**\n         * @param {?} data\n         * @return {?}\n         */\n        function (data) {\n            var /** @type {?} */ classes = Array.isArray(data) ? data : data.split(' ');\n            this.classes = classes.filter(function (c) { return !!c; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    RouterLinkActive.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) { this.update(); };\n    /**\n     * @return {?}\n     */\n    RouterLinkActive.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () { this.subscription.unsubscribe(); };\n    /**\n     * @return {?}\n     */\n    RouterLinkActive.prototype.update = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!this.links || !this.linksWithHrefs || !this.router.navigated)\n            return;\n        var /** @type {?} */ hasActiveLinks = this.hasActiveLinks();\n        // react only when status has changed to prevent unnecessary dom updates\n        if (this.isActive !== hasActiveLinks) {\n            this.classes.forEach(function (c) {\n                if (hasActiveLinks) {\n                    _this.renderer.addClass(_this.element.nativeElement, c);\n                }\n                else {\n                    _this.renderer.removeClass(_this.element.nativeElement, c);\n                }\n            });\n            Promise.resolve(hasActiveLinks).then(function (active) {\n                return (/** @type {?} */ (_this)).isActive = active;\n            });\n        }\n    };\n    /**\n     * @param {?} router\n     * @return {?}\n     */\n    RouterLinkActive.prototype.isLinkActive = /**\n     * @param {?} router\n     * @return {?}\n     */\n    function (router) {\n        var _this = this;\n        return function (link) {\n            return router.isActive(link.urlTree, _this.routerLinkActiveOptions.exact);\n        };\n    };\n    /**\n     * @return {?}\n     */\n    RouterLinkActive.prototype.hasActiveLinks = /**\n     * @return {?}\n     */\n    function () {\n        return this.links.some(this.isLinkActive(this.router)) ||\n            this.linksWithHrefs.some(this.isLinkActive(this.router));\n    };\n    RouterLinkActive.decorators = [\n        { type: _angular_core.Directive, args: [{\n                    selector: '[routerLinkActive]',\n                    exportAs: 'routerLinkActive',\n                },] },\n    ];\n    /** @nocollapse */\n    RouterLinkActive.ctorParameters = function () { return [\n        { type: Router, },\n        { type: _angular_core.ElementRef, },\n        { type: _angular_core.Renderer2, },\n        { type: _angular_core.ChangeDetectorRef, },\n    ]; };\n    RouterLinkActive.propDecorators = {\n        \"links\": [{ type: _angular_core.ContentChildren, args: [RouterLink, { descendants: true },] },],\n        \"linksWithHrefs\": [{ type: _angular_core.ContentChildren, args: [RouterLinkWithHref, { descendants: true },] },],\n        \"routerLinkActiveOptions\": [{ type: _angular_core.Input },],\n        \"routerLinkActive\": [{ type: _angular_core.Input },],\n    };\n    return RouterLinkActive;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Store contextual information about a {\\@link RouterOutlet}\n *\n * \\@stable\n */\nvar OutletContext = (function () {\n    function OutletContext() {\n        this.outlet = null;\n        this.route = null;\n        this.resolver = null;\n        this.children = new ChildrenOutletContexts();\n        this.attachRef = null;\n    }\n    return OutletContext;\n}());\n/**\n * Store contextual information about the children (= nested) {\\@link RouterOutlet}\n *\n * \\@stable\n */\nvar ChildrenOutletContexts = (function () {\n    function ChildrenOutletContexts() {\n        this.contexts = new Map();\n    }\n    /** Called when a `RouterOutlet` directive is instantiated */\n    /**\n     * Called when a `RouterOutlet` directive is instantiated\n     * @param {?} childName\n     * @param {?} outlet\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.onChildOutletCreated = /**\n     * Called when a `RouterOutlet` directive is instantiated\n     * @param {?} childName\n     * @param {?} outlet\n     * @return {?}\n     */\n    function (childName, outlet) {\n        var /** @type {?} */ context = this.getOrCreateContext(childName);\n        context.outlet = outlet;\n        this.contexts.set(childName, context);\n    };\n    /**\n     * Called when a `RouterOutlet` directive is destroyed.\n     * We need to keep the context as the outlet could be destroyed inside a NgIf and might be\n     * re-created later.\n     */\n    /**\n     * Called when a `RouterOutlet` directive is destroyed.\n     * We need to keep the context as the outlet could be destroyed inside a NgIf and might be\n     * re-created later.\n     * @param {?} childName\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.onChildOutletDestroyed = /**\n     * Called when a `RouterOutlet` directive is destroyed.\n     * We need to keep the context as the outlet could be destroyed inside a NgIf and might be\n     * re-created later.\n     * @param {?} childName\n     * @return {?}\n     */\n    function (childName) {\n        var /** @type {?} */ context = this.getContext(childName);\n        if (context) {\n            context.outlet = null;\n        }\n    };\n    /**\n     * Called when the corresponding route is deactivated during navigation.\n     * Because the component get destroyed, all children outlet are destroyed.\n     */\n    /**\n     * Called when the corresponding route is deactivated during navigation.\n     * Because the component get destroyed, all children outlet are destroyed.\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.onOutletDeactivated = /**\n     * Called when the corresponding route is deactivated during navigation.\n     * Because the component get destroyed, all children outlet are destroyed.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ contexts = this.contexts;\n        this.contexts = new Map();\n        return contexts;\n    };\n    /**\n     * @param {?} contexts\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.onOutletReAttached = /**\n     * @param {?} contexts\n     * @return {?}\n     */\n    function (contexts) { this.contexts = contexts; };\n    /**\n     * @param {?} childName\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.getOrCreateContext = /**\n     * @param {?} childName\n     * @return {?}\n     */\n    function (childName) {\n        var /** @type {?} */ context = this.getContext(childName);\n        if (!context) {\n            context = new OutletContext();\n            this.contexts.set(childName, context);\n        }\n        return context;\n    };\n    /**\n     * @param {?} childName\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.getContext = /**\n     * @param {?} childName\n     * @return {?}\n     */\n    function (childName) { return this.contexts.get(childName) || null; };\n    return ChildrenOutletContexts;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Acts as a placeholder that Angular dynamically fills based on the current router\n * state.\n *\n * \\@howToUse\n *\n * ```\n * <router-outlet></router-outlet>\n * <router-outlet name='left'></router-outlet>\n * <router-outlet name='right'></router-outlet>\n * ```\n *\n * A router outlet will emit an activate event any time a new component is being instantiated,\n * and a deactivate event when it is being destroyed.\n *\n * ```\n * <router-outlet\n *   (activate)='onActivate($event)'\n *   (deactivate)='onDeactivate($event)'></router-outlet>\n * ```\n * \\@ngModule RouterModule\n *\n * \\@stable\n */\nvar RouterOutlet = (function () {\n    function RouterOutlet(parentContexts, location, resolver, name, changeDetector) {\n        this.parentContexts = parentContexts;\n        this.location = location;\n        this.resolver = resolver;\n        this.changeDetector = changeDetector;\n        this.activated = null;\n        this._activatedRoute = null;\n        this.activateEvents = new _angular_core.EventEmitter();\n        this.deactivateEvents = new _angular_core.EventEmitter();\n        this.name = name || PRIMARY_OUTLET;\n        parentContexts.onChildOutletCreated(this.name, this);\n    }\n    /**\n     * @return {?}\n     */\n    RouterOutlet.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () { this.parentContexts.onChildOutletDestroyed(this.name); };\n    /**\n     * @return {?}\n     */\n    RouterOutlet.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        if (!this.activated) {\n            // If the outlet was not instantiated at the time the route got activated we need to populate\n            // the outlet when it is initialized (ie inside a NgIf)\n            var /** @type {?} */ context = this.parentContexts.getContext(this.name);\n            if (context && context.route) {\n                if (context.attachRef) {\n                    // `attachRef` is populated when there is an existing component to mount\n                    this.attach(context.attachRef, context.route);\n                }\n                else {\n                    // otherwise the component defined in the configuration is created\n                    this.activateWith(context.route, context.resolver || null);\n                }\n            }\n        }\n    };\n    Object.defineProperty(RouterOutlet.prototype, \"isActivated\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return !!this.activated; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"component\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            if (!this.activated)\n                throw new Error('Outlet is not activated');\n            return this.activated.instance;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"activatedRoute\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            if (!this.activated)\n                throw new Error('Outlet is not activated');\n            return /** @type {?} */ (this._activatedRoute);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"activatedRouteData\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            if (this._activatedRoute) {\n                return this._activatedRoute.snapshot.data;\n            }\n            return {};\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Called when the `RouteReuseStrategy` instructs to detach the subtree\n     */\n    /**\n     * Called when the `RouteReuseStrategy` instructs to detach the subtree\n     * @return {?}\n     */\n    RouterOutlet.prototype.detach = /**\n     * Called when the `RouteReuseStrategy` instructs to detach the subtree\n     * @return {?}\n     */\n    function () {\n        if (!this.activated)\n            throw new Error('Outlet is not activated');\n        this.location.detach();\n        var /** @type {?} */ cmp = this.activated;\n        this.activated = null;\n        this._activatedRoute = null;\n        return cmp;\n    };\n    /**\n     * Called when the `RouteReuseStrategy` instructs to re-attach a previously detached subtree\n     */\n    /**\n     * Called when the `RouteReuseStrategy` instructs to re-attach a previously detached subtree\n     * @param {?} ref\n     * @param {?} activatedRoute\n     * @return {?}\n     */\n    RouterOutlet.prototype.attach = /**\n     * Called when the `RouteReuseStrategy` instructs to re-attach a previously detached subtree\n     * @param {?} ref\n     * @param {?} activatedRoute\n     * @return {?}\n     */\n    function (ref, activatedRoute) {\n        this.activated = ref;\n        this._activatedRoute = activatedRoute;\n        this.location.insert(ref.hostView);\n    };\n    /**\n     * @return {?}\n     */\n    RouterOutlet.prototype.deactivate = /**\n     * @return {?}\n     */\n    function () {\n        if (this.activated) {\n            var /** @type {?} */ c = this.component;\n            this.activated.destroy();\n            this.activated = null;\n            this._activatedRoute = null;\n            this.deactivateEvents.emit(c);\n        }\n    };\n    /**\n     * @param {?} activatedRoute\n     * @param {?} resolver\n     * @return {?}\n     */\n    RouterOutlet.prototype.activateWith = /**\n     * @param {?} activatedRoute\n     * @param {?} resolver\n     * @return {?}\n     */\n    function (activatedRoute, resolver) {\n        if (this.isActivated) {\n            throw new Error('Cannot activate an already activated outlet');\n        }\n        this._activatedRoute = activatedRoute;\n        var /** @type {?} */ snapshot = activatedRoute._futureSnapshot;\n        var /** @type {?} */ component = /** @type {?} */ (/** @type {?} */ ((snapshot.routeConfig)).component);\n        resolver = resolver || this.resolver;\n        var /** @type {?} */ factory = resolver.resolveComponentFactory(component);\n        var /** @type {?} */ childContexts = this.parentContexts.getOrCreateContext(this.name).children;\n        var /** @type {?} */ injector = new OutletInjector(activatedRoute, childContexts, this.location.injector);\n        this.activated = this.location.createComponent(factory, this.location.length, injector);\n        // Calling `markForCheck` to make sure we will run the change detection when the\n        // `RouterOutlet` is inside a `ChangeDetectionStrategy.OnPush` component.\n        this.changeDetector.markForCheck();\n        this.activateEvents.emit(this.activated.instance);\n    };\n    RouterOutlet.decorators = [\n        { type: _angular_core.Directive, args: [{ selector: 'router-outlet', exportAs: 'outlet' },] },\n    ];\n    /** @nocollapse */\n    RouterOutlet.ctorParameters = function () { return [\n        { type: ChildrenOutletContexts, },\n        { type: _angular_core.ViewContainerRef, },\n        { type: _angular_core.ComponentFactoryResolver, },\n        { type: undefined, decorators: [{ type: _angular_core.Attribute, args: ['name',] },] },\n        { type: _angular_core.ChangeDetectorRef, },\n    ]; };\n    RouterOutlet.propDecorators = {\n        \"activateEvents\": [{ type: _angular_core.Output, args: ['activate',] },],\n        \"deactivateEvents\": [{ type: _angular_core.Output, args: ['deactivate',] },],\n    };\n    return RouterOutlet;\n}());\nvar OutletInjector = (function () {\n    function OutletInjector(route, childContexts, parent) {\n        this.route = route;\n        this.childContexts = childContexts;\n        this.parent = parent;\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    OutletInjector.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (token === ActivatedRoute) {\n            return this.route;\n        }\n        if (token === ChildrenOutletContexts) {\n            return this.childContexts;\n        }\n        return this.parent.get(token, notFoundValue);\n    };\n    return OutletInjector;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n*@license\n*Copyright Google Inc. All Rights Reserved.\n*\n*Use of this source code is governed by an MIT-style license that can be\n*found in the LICENSE file at https://angular.io/license\n*/\n/**\n * \\@whatItDoes Provides a preloading strategy.\n *\n * \\@experimental\n * @abstract\n */\nvar PreloadingStrategy = (function () {\n    function PreloadingStrategy() {\n    }\n    return PreloadingStrategy;\n}());\n/**\n * \\@whatItDoes Provides a preloading strategy that preloads all modules as quickly as possible.\n *\n * \\@howToUse\n *\n * ```\n * RouteModule.forRoot(ROUTES, {preloadingStrategy: PreloadAllModules})\n * ```\n *\n * \\@experimental\n */\nvar PreloadAllModules = (function () {\n    function PreloadAllModules() {\n    }\n    /**\n     * @param {?} route\n     * @param {?} fn\n     * @return {?}\n     */\n    PreloadAllModules.prototype.preload = /**\n     * @param {?} route\n     * @param {?} fn\n     * @return {?}\n     */\n    function (route, fn) {\n        return rxjs_operator_catch._catch.call(fn(), function () { return rxjs_observable_of.of(null); });\n    };\n    return PreloadAllModules;\n}());\n/**\n * \\@whatItDoes Provides a preloading strategy that does not preload any modules.\n *\n * \\@description\n *\n * This strategy is enabled by default.\n *\n * \\@experimental\n */\nvar NoPreloading = (function () {\n    function NoPreloading() {\n    }\n    /**\n     * @param {?} route\n     * @param {?} fn\n     * @return {?}\n     */\n    NoPreloading.prototype.preload = /**\n     * @param {?} route\n     * @param {?} fn\n     * @return {?}\n     */\n    function (route, fn) { return rxjs_observable_of.of(null); };\n    return NoPreloading;\n}());\n/**\n * The preloader optimistically loads all router configurations to\n * make navigations into lazily-loaded sections of the application faster.\n *\n * The preloader runs in the background. When the router bootstraps, the preloader\n * starts listening to all navigation events. After every such event, the preloader\n * will check if any configurations can be loaded lazily.\n *\n * If a route is protected by `canLoad` guards, the preloaded will not load it.\n *\n * \\@stable\n */\nvar RouterPreloader = (function () {\n    function RouterPreloader(router, moduleLoader, compiler, injector, preloadingStrategy) {\n        this.router = router;\n        this.injector = injector;\n        this.preloadingStrategy = preloadingStrategy;\n        var /** @type {?} */ onStartLoad = function (r) { return router.triggerEvent(new RouteConfigLoadStart(r)); };\n        var /** @type {?} */ onEndLoad = function (r) { return router.triggerEvent(new RouteConfigLoadEnd(r)); };\n        this.loader = new RouterConfigLoader(moduleLoader, compiler, onStartLoad, onEndLoad);\n    }\n    /**\n     * @return {?}\n     */\n    RouterPreloader.prototype.setUpPreloading = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ navigations$ = rxjs_operator_filter.filter.call(this.router.events, function (e) { return e instanceof NavigationEnd; });\n        this.subscription = rxjs_operator_concatMap.concatMap.call(navigations$, function () { return _this.preload(); }).subscribe(function () { });\n    };\n    /**\n     * @return {?}\n     */\n    RouterPreloader.prototype.preload = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ ngModule = this.injector.get(_angular_core.NgModuleRef);\n        return this.processRoutes(ngModule, this.router.config);\n    };\n    // TODO(jasonaden): This class relies on code external to the class to call setUpPreloading. If\n    // this hasn't been done, ngOnDestroy will fail as this.subscription will be undefined. This\n    // should be refactored.\n    /**\n     * @return {?}\n     */\n    RouterPreloader.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () { this.subscription.unsubscribe(); };\n    /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @return {?}\n     */\n    RouterPreloader.prototype.processRoutes = /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @return {?}\n     */\n    function (ngModule, routes) {\n        var /** @type {?} */ res = [];\n        for (var _i = 0, routes_1 = routes; _i < routes_1.length; _i++) {\n            var route = routes_1[_i];\n            // we already have the config loaded, just recurse\n            if (route.loadChildren && !route.canLoad && route._loadedConfig) {\n                var /** @type {?} */ childConfig = route._loadedConfig;\n                res.push(this.processRoutes(childConfig.module, childConfig.routes));\n                // no config loaded, fetch the config\n            }\n            else if (route.loadChildren && !route.canLoad) {\n                res.push(this.preloadConfig(ngModule, route));\n                // recurse into children\n            }\n            else if (route.children) {\n                res.push(this.processRoutes(ngModule, route.children));\n            }\n        }\n        return rxjs_operator_mergeAll.mergeAll.call(rxjs_observable_from.from(res));\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} route\n     * @return {?}\n     */\n    RouterPreloader.prototype.preloadConfig = /**\n     * @param {?} ngModule\n     * @param {?} route\n     * @return {?}\n     */\n    function (ngModule, route) {\n        var _this = this;\n        return this.preloadingStrategy.preload(route, function () {\n            var /** @type {?} */ loaded$ = _this.loader.load(ngModule.injector, route);\n            return rxjs_operator_mergeMap.mergeMap.call(loaded$, function (config) {\n                route._loadedConfig = config;\n                return _this.processRoutes(config.module, config.routes);\n            });\n        });\n    };\n    RouterPreloader.decorators = [\n        { type: _angular_core.Injectable },\n    ];\n    /** @nocollapse */\n    RouterPreloader.ctorParameters = function () { return [\n        { type: Router, },\n        { type: _angular_core.NgModuleFactoryLoader, },\n        { type: _angular_core.Compiler, },\n        { type: _angular_core.Injector, },\n        { type: PreloadingStrategy, },\n    ]; };\n    return RouterPreloader;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Contains a list of directives\n * \\@stable\n */\nvar ROUTER_DIRECTIVES = [RouterOutlet, RouterLink, RouterLinkWithHref, RouterLinkActive];\n/**\n * \\@whatItDoes Is used in DI to configure the router.\n * \\@stable\n */\nvar ROUTER_CONFIGURATION = new _angular_core.InjectionToken('ROUTER_CONFIGURATION');\n/**\n * \\@docsNotRequired\n */\nvar ROUTER_FORROOT_GUARD = new _angular_core.InjectionToken('ROUTER_FORROOT_GUARD');\nvar ROUTER_PROVIDERS = [\n    _angular_common.Location,\n    { provide: UrlSerializer, useClass: DefaultUrlSerializer },\n    {\n        provide: Router,\n        useFactory: setupRouter,\n        deps: [\n            _angular_core.ApplicationRef, UrlSerializer, ChildrenOutletContexts, _angular_common.Location, _angular_core.Injector,\n            _angular_core.NgModuleFactoryLoader, _angular_core.Compiler, ROUTES, ROUTER_CONFIGURATION,\n            [UrlHandlingStrategy, new _angular_core.Optional()], [RouteReuseStrategy, new _angular_core.Optional()]\n        ]\n    },\n    ChildrenOutletContexts,\n    { provide: ActivatedRoute, useFactory: rootRoute, deps: [Router] },\n    { provide: _angular_core.NgModuleFactoryLoader, useClass: _angular_core.SystemJsNgModuleLoader },\n    RouterPreloader,\n    NoPreloading,\n    PreloadAllModules,\n    { provide: ROUTER_CONFIGURATION, useValue: { enableTracing: false } },\n];\n/**\n * @return {?}\n */\nfunction routerNgProbeToken() {\n    return new _angular_core.NgProbeToken('Router', Router);\n}\n/**\n * \\@whatItDoes Adds router directives and providers.\n *\n * \\@howToUse\n *\n * RouterModule can be imported multiple times: once per lazily-loaded bundle.\n * Since the router deals with a global shared resource--location, we cannot have\n * more than one router service active.\n *\n * That is why there are two ways to create the module: `RouterModule.forRoot` and\n * `RouterModule.forChild`.\n *\n * * `forRoot` creates a module that contains all the directives, the given routes, and the router\n *   service itself.\n * * `forChild` creates a module that contains all the directives and the given routes, but does not\n *   include the router service.\n *\n * When registered at the root, the module should be used as follows\n *\n * ```\n * \\@NgModule({\n *   imports: [RouterModule.forRoot(ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n * For submodules and lazy loaded submodules the module should be used as follows:\n *\n * ```\n * \\@NgModule({\n *   imports: [RouterModule.forChild(ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n * \\@description\n *\n * Managing state transitions is one of the hardest parts of building applications. This is\n * especially true on the web, where you also need to ensure that the state is reflected in the URL.\n * In addition, we often want to split applications into multiple bundles and load them on demand.\n * Doing this transparently is not trivial.\n *\n * The Angular router solves these problems. Using the router, you can declaratively specify\n * application states, manage state transitions while taking care of the URL, and load bundles on\n * demand.\n *\n * [Read this developer guide](https://angular.io/docs/ts/latest/guide/router.html) to get an\n * overview of how the router should be used.\n *\n * \\@stable\n */\nvar RouterModule = (function () {\n    // Note: We are injecting the Router so it gets created eagerly...\n    function RouterModule(guard, router) {\n    }\n    /**\n     * Creates a module with all the router providers and directives. It also optionally sets up an\n     * application listener to perform an initial navigation.\n     *\n     * Options:\n     * * `enableTracing` makes the router log all its internal events to the console.\n     * * `useHash` enables the location strategy that uses the URL fragment instead of the history\n     * API.\n     * * `initialNavigation` disables the initial navigation.\n     * * `errorHandler` provides a custom error handler.\n     */\n    /**\n     * Creates a module with all the router providers and directives. It also optionally sets up an\n     * application listener to perform an initial navigation.\n     *\n     * Options:\n     * * `enableTracing` makes the router log all its internal events to the console.\n     * * `useHash` enables the location strategy that uses the URL fragment instead of the history\n     * API.\n     * * `initialNavigation` disables the initial navigation.\n     * * `errorHandler` provides a custom error handler.\n     * @param {?} routes\n     * @param {?=} config\n     * @return {?}\n     */\n    RouterModule.forRoot = /**\n     * Creates a module with all the router providers and directives. It also optionally sets up an\n     * application listener to perform an initial navigation.\n     *\n     * Options:\n     * * `enableTracing` makes the router log all its internal events to the console.\n     * * `useHash` enables the location strategy that uses the URL fragment instead of the history\n     * API.\n     * * `initialNavigation` disables the initial navigation.\n     * * `errorHandler` provides a custom error handler.\n     * @param {?} routes\n     * @param {?=} config\n     * @return {?}\n     */\n    function (routes, config) {\n        return {\n            ngModule: RouterModule,\n            providers: [\n                ROUTER_PROVIDERS,\n                provideRoutes(routes),\n                {\n                    provide: ROUTER_FORROOT_GUARD,\n                    useFactory: provideForRootGuard,\n                    deps: [[Router, new _angular_core.Optional(), new _angular_core.SkipSelf()]]\n                },\n                { provide: ROUTER_CONFIGURATION, useValue: config ? config : {} },\n                {\n                    provide: _angular_common.LocationStrategy,\n                    useFactory: provideLocationStrategy,\n                    deps: [\n                        _angular_common.PlatformLocation, [new _angular_core.Inject(_angular_common.APP_BASE_HREF), new _angular_core.Optional()], ROUTER_CONFIGURATION\n                    ]\n                },\n                {\n                    provide: PreloadingStrategy,\n                    useExisting: config && config.preloadingStrategy ? config.preloadingStrategy :\n                        NoPreloading\n                },\n                { provide: _angular_core.NgProbeToken, multi: true, useFactory: routerNgProbeToken },\n                provideRouterInitializer(),\n            ],\n        };\n    };\n    /**\n     * Creates a module with all the router directives and a provider registering routes.\n     */\n    /**\n     * Creates a module with all the router directives and a provider registering routes.\n     * @param {?} routes\n     * @return {?}\n     */\n    RouterModule.forChild = /**\n     * Creates a module with all the router directives and a provider registering routes.\n     * @param {?} routes\n     * @return {?}\n     */\n    function (routes) {\n        return { ngModule: RouterModule, providers: [provideRoutes(routes)] };\n    };\n    RouterModule.decorators = [\n        { type: _angular_core.NgModule, args: [{ declarations: ROUTER_DIRECTIVES, exports: ROUTER_DIRECTIVES },] },\n    ];\n    /** @nocollapse */\n    RouterModule.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Inject, args: [ROUTER_FORROOT_GUARD,] },] },\n        { type: Router, decorators: [{ type: _angular_core.Optional },] },\n    ]; };\n    return RouterModule;\n}());\n/**\n * @param {?} platformLocationStrategy\n * @param {?} baseHref\n * @param {?=} options\n * @return {?}\n */\nfunction provideLocationStrategy(platformLocationStrategy, baseHref, options) {\n    if (options === void 0) { options = {}; }\n    return options.useHash ? new _angular_common.HashLocationStrategy(platformLocationStrategy, baseHref) :\n        new _angular_common.PathLocationStrategy(platformLocationStrategy, baseHref);\n}\n/**\n * @param {?} router\n * @return {?}\n */\nfunction provideForRootGuard(router) {\n    if (router) {\n        throw new Error(\"RouterModule.forRoot() called twice. Lazy loaded modules should use RouterModule.forChild() instead.\");\n    }\n    return 'guarded';\n}\n/**\n * \\@whatItDoes Registers routes.\n *\n * \\@howToUse\n *\n * ```\n * \\@NgModule({\n *   imports: [RouterModule.forChild(ROUTES)],\n *   providers: [provideRoutes(EXTRA_ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n * \\@stable\n * @param {?} routes\n * @return {?}\n */\nfunction provideRoutes(routes) {\n    return [\n        { provide: _angular_core.ANALYZE_FOR_ENTRY_COMPONENTS, multi: true, useValue: routes },\n        { provide: ROUTES, multi: true, useValue: routes },\n    ];\n}\n/**\n * \\@whatItDoes Represents options to configure the router.\n *\n * \\@stable\n * @record\n */\n\n/**\n * @param {?} ref\n * @param {?} urlSerializer\n * @param {?} contexts\n * @param {?} location\n * @param {?} injector\n * @param {?} loader\n * @param {?} compiler\n * @param {?} config\n * @param {?=} opts\n * @param {?=} urlHandlingStrategy\n * @param {?=} routeReuseStrategy\n * @return {?}\n */\nfunction setupRouter(ref, urlSerializer, contexts, location, injector, loader, compiler, config, opts, urlHandlingStrategy, routeReuseStrategy) {\n    if (opts === void 0) { opts = {}; }\n    var /** @type {?} */ router = new Router(null, urlSerializer, contexts, location, injector, loader, compiler, flatten(config));\n    if (urlHandlingStrategy) {\n        router.urlHandlingStrategy = urlHandlingStrategy;\n    }\n    if (routeReuseStrategy) {\n        router.routeReuseStrategy = routeReuseStrategy;\n    }\n    if (opts.errorHandler) {\n        router.errorHandler = opts.errorHandler;\n    }\n    if (opts.enableTracing) {\n        var /** @type {?} */ dom_1 = _angular_platformBrowser.ɵgetDOM();\n        router.events.subscribe(function (e) {\n            dom_1.logGroup(\"Router Event: \" + ((/** @type {?} */ (e.constructor))).name);\n            dom_1.log(e.toString());\n            dom_1.log(e);\n            dom_1.logGroupEnd();\n        });\n    }\n    return router;\n}\n/**\n * @param {?} router\n * @return {?}\n */\nfunction rootRoute(router) {\n    return router.routerState.root;\n}\n/**\n * To initialize the router properly we need to do in two steps:\n *\n * We need to start the navigation in a APP_INITIALIZER to block the bootstrap if\n * a resolver or a guards executes asynchronously. Second, we need to actually run\n * activation in a BOOTSTRAP_LISTENER. We utilize the afterPreactivation\n * hook provided by the router to do that.\n *\n * The router navigation starts, reaches the point when preactivation is done, and then\n * pauses. It waits for the hook to be resolved. We then resolve it only in a bootstrap listener.\n */\nvar RouterInitializer = (function () {\n    function RouterInitializer(injector) {\n        this.injector = injector;\n        this.initNavigation = false;\n        this.resultOfPreactivationDone = new rxjs_Subject.Subject();\n    }\n    /**\n     * @return {?}\n     */\n    RouterInitializer.prototype.appInitializer = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ p = this.injector.get(_angular_common.LOCATION_INITIALIZED, Promise.resolve(null));\n        return p.then(function () {\n            var /** @type {?} */ resolve = /** @type {?} */ ((null));\n            var /** @type {?} */ res = new Promise(function (r) { return resolve = r; });\n            var /** @type {?} */ router = _this.injector.get(Router);\n            var /** @type {?} */ opts = _this.injector.get(ROUTER_CONFIGURATION);\n            if (_this.isLegacyDisabled(opts) || _this.isLegacyEnabled(opts)) {\n                resolve(true);\n            }\n            else if (opts.initialNavigation === 'disabled') {\n                router.setUpLocationChangeListener();\n                resolve(true);\n            }\n            else if (opts.initialNavigation === 'enabled') {\n                router.hooks.afterPreactivation = function () {\n                    // only the initial navigation should be delayed\n                    if (!_this.initNavigation) {\n                        _this.initNavigation = true;\n                        resolve(true);\n                        return _this.resultOfPreactivationDone;\n                        // subsequent navigations should not be delayed\n                    }\n                    else {\n                        return /** @type {?} */ (rxjs_observable_of.of(null));\n                    }\n                };\n                router.initialNavigation();\n            }\n            else {\n                throw new Error(\"Invalid initialNavigation options: '\" + opts.initialNavigation + \"'\");\n            }\n            return res;\n        });\n    };\n    /**\n     * @param {?} bootstrappedComponentRef\n     * @return {?}\n     */\n    RouterInitializer.prototype.bootstrapListener = /**\n     * @param {?} bootstrappedComponentRef\n     * @return {?}\n     */\n    function (bootstrappedComponentRef) {\n        var /** @type {?} */ opts = this.injector.get(ROUTER_CONFIGURATION);\n        var /** @type {?} */ preloader = this.injector.get(RouterPreloader);\n        var /** @type {?} */ router = this.injector.get(Router);\n        var /** @type {?} */ ref = this.injector.get(_angular_core.ApplicationRef);\n        if (bootstrappedComponentRef !== ref.components[0]) {\n            return;\n        }\n        if (this.isLegacyEnabled(opts)) {\n            router.initialNavigation();\n        }\n        else if (this.isLegacyDisabled(opts)) {\n            router.setUpLocationChangeListener();\n        }\n        preloader.setUpPreloading();\n        router.resetRootComponentType(ref.componentTypes[0]);\n        this.resultOfPreactivationDone.next(/** @type {?} */ ((null)));\n        this.resultOfPreactivationDone.complete();\n    };\n    /**\n     * @param {?} opts\n     * @return {?}\n     */\n    RouterInitializer.prototype.isLegacyEnabled = /**\n     * @param {?} opts\n     * @return {?}\n     */\n    function (opts) {\n        return opts.initialNavigation === 'legacy_enabled' || opts.initialNavigation === true ||\n            opts.initialNavigation === undefined;\n    };\n    /**\n     * @param {?} opts\n     * @return {?}\n     */\n    RouterInitializer.prototype.isLegacyDisabled = /**\n     * @param {?} opts\n     * @return {?}\n     */\n    function (opts) {\n        return opts.initialNavigation === 'legacy_disabled' || opts.initialNavigation === false;\n    };\n    RouterInitializer.decorators = [\n        { type: _angular_core.Injectable },\n    ];\n    /** @nocollapse */\n    RouterInitializer.ctorParameters = function () { return [\n        { type: _angular_core.Injector, },\n    ]; };\n    return RouterInitializer;\n}());\n/**\n * @param {?} r\n * @return {?}\n */\nfunction getAppInitializer(r) {\n    return r.appInitializer.bind(r);\n}\n/**\n * @param {?} r\n * @return {?}\n */\nfunction getBootstrapListener(r) {\n    return r.bootstrapListener.bind(r);\n}\n/**\n * A token for the router initializer that will be called after the app is bootstrapped.\n *\n * \\@experimental\n */\nvar ROUTER_INITIALIZER = new _angular_core.InjectionToken('Router Initializer');\n/**\n * @return {?}\n */\nfunction provideRouterInitializer() {\n    return [\n        RouterInitializer,\n        {\n            provide: _angular_core.APP_INITIALIZER,\n            multi: true,\n            useFactory: getAppInitializer,\n            deps: [RouterInitializer]\n        },\n        { provide: ROUTER_INITIALIZER, useFactory: getBootstrapListener, deps: [RouterInitializer] },\n        { provide: _angular_core.APP_BOOTSTRAP_LISTENER, multi: true, useExisting: ROUTER_INITIALIZER },\n    ];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n/**\n * \\@stable\n */\nvar VERSION = new _angular_core.Version('5.0.0-beta.7-125ded2');\n\nexports.RouterLink = RouterLink;\nexports.RouterLinkWithHref = RouterLinkWithHref;\nexports.RouterLinkActive = RouterLinkActive;\nexports.RouterOutlet = RouterOutlet;\nexports.ActivationEnd = ActivationEnd;\nexports.ActivationStart = ActivationStart;\nexports.ChildActivationEnd = ChildActivationEnd;\nexports.ChildActivationStart = ChildActivationStart;\nexports.GuardsCheckEnd = GuardsCheckEnd;\nexports.GuardsCheckStart = GuardsCheckStart;\nexports.NavigationCancel = NavigationCancel;\nexports.NavigationEnd = NavigationEnd;\nexports.NavigationError = NavigationError;\nexports.NavigationStart = NavigationStart;\nexports.ResolveEnd = ResolveEnd;\nexports.ResolveStart = ResolveStart;\nexports.RouteConfigLoadEnd = RouteConfigLoadEnd;\nexports.RouteConfigLoadStart = RouteConfigLoadStart;\nexports.RouterEvent = RouterEvent;\nexports.RoutesRecognized = RoutesRecognized;\nexports.RouteReuseStrategy = RouteReuseStrategy;\nexports.Router = Router;\nexports.ROUTES = ROUTES;\nexports.ROUTER_CONFIGURATION = ROUTER_CONFIGURATION;\nexports.ROUTER_INITIALIZER = ROUTER_INITIALIZER;\nexports.RouterModule = RouterModule;\nexports.provideRoutes = provideRoutes;\nexports.ChildrenOutletContexts = ChildrenOutletContexts;\nexports.OutletContext = OutletContext;\nexports.NoPreloading = NoPreloading;\nexports.PreloadAllModules = PreloadAllModules;\nexports.PreloadingStrategy = PreloadingStrategy;\nexports.RouterPreloader = RouterPreloader;\nexports.ActivatedRoute = ActivatedRoute;\nexports.ActivatedRouteSnapshot = ActivatedRouteSnapshot;\nexports.RouterState = RouterState;\nexports.RouterStateSnapshot = RouterStateSnapshot;\nexports.PRIMARY_OUTLET = PRIMARY_OUTLET;\nexports.convertToParamMap = convertToParamMap;\nexports.UrlHandlingStrategy = UrlHandlingStrategy;\nexports.DefaultUrlSerializer = DefaultUrlSerializer;\nexports.UrlSegment = UrlSegment;\nexports.UrlSegmentGroup = UrlSegmentGroup;\nexports.UrlSerializer = UrlSerializer;\nexports.UrlTree = UrlTree;\nexports.VERSION = VERSION;\nexports.ɵROUTER_PROVIDERS = ROUTER_PROVIDERS;\nexports.ɵflatten = flatten;\nexports.ɵa = ROUTER_FORROOT_GUARD;\nexports.ɵg = RouterInitializer;\nexports.ɵh = getAppInitializer;\nexports.ɵi = getBootstrapListener;\nexports.ɵd = provideForRootGuard;\nexports.ɵc = provideLocationStrategy;\nexports.ɵj = provideRouterInitializer;\nexports.ɵf = rootRoute;\nexports.ɵb = routerNgProbeToken;\nexports.ɵe = setupRouter;\nexports.ɵk = Tree;\nexports.ɵl = TreeNode;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=router.umd.js.map\n"]}